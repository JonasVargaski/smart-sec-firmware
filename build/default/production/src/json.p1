Version 3.2 HI-TECH Software Intermediate Code
"194 C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"53 C:\Program Files (x86)\Microchip\xc8\v1.44\include\string.h
[v _strstr `(*uc ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"55 C:\Program Files (x86)\Microchip\xc8\v1.44\include\stdlib.h
[v _atoi `(i ~T0 @X0 0 ef1`*Cuc ]
"56 C:\Program Files (x86)\Microchip\xc8\v1.44\include\string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
"5 src/json.c
[v _getIntJSON `(i ~T0 @X0 1 ef2`*uc`*uc ]
"6
{
[; ;json.c: 5: int getIntJSON(char buff[], char key[])
[; ;json.c: 6: {
[e :U _getIntJSON ]
"5
[v _buff `*uc ~T0 @X0 1 r1 ]
[v _key `*uc ~T0 @X0 1 r2 ]
"6
[f ]
"7
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
[; ;json.c: 7: int i, j = 0;
[e = _j -> 0 `i ]
[v F274 `uc ~T0 @X0 -> 10 `i s ]
[i F274
:U ..
-> 0 `c
..
]
"8
[v _aux `uc ~T0 @X0 -> 10 `i a ]
[; ;json.c: 8: char aux[10] = "";
[e = _aux F274 ]
[v F276 `uc ~T0 @X0 -> 20 `i s ]
[i F276
:U ..
-> 0 `c
..
]
"9
[v _attr `uc ~T0 @X0 -> 20 `i a ]
[; ;json.c: 9: char attr[20] = "";
[e = _attr F276 ]
[v F278 `uc ~T0 @X0 -> 20 `i s ]
[i F278
:U ..
-> 0 `c
..
]
"10
[v _expected `uc ~T0 @X0 -> 20 `i a ]
[; ;json.c: 10: char expected[20] = "";
[e = _expected F278 ]
"11
[v _find `uc ~T0 @X0 1 a ]
[; ;json.c: 11: char find = 0;
[e = _find -> -> 0 `i `uc ]
"12
[v _value `i ~T0 @X0 1 a ]
[; ;json.c: 12: int value = -1;
[e = _value -U -> 1 `i ]
[; ;json.c: 14: sprintf(expected, "\"%s\":", key);
"14
[e ( _sprintf (1 , (. , &U _expected :s 1C -> _key `*Cuc ]
[; ;json.c: 16: for (i = 0; i < strlen(buff) && value == -1; i++)
"16
{
[e = _i -> 0 `i ]
[e $U 10  ]
"17
[e :U 7 ]
[; ;json.c: 17: {
{
[; ;json.c: 18: if (buff[i] == expected[j] && !find)
"18
[e $ ! && == -> *U + _buff * -> _i `x -> -> # *U _buff `i `x `i -> *U + &U _expected * -> -> _j `ui `ux -> -> # *U &U _expected `ui `ux `i ! != -> _find `i -> -> -> 0 `i `uc `i 11  ]
[; ;json.c: 19: {
"19
{
[; ;json.c: 20: sprintf(attr, "%s%c", attr, buff[i]);
"20
[e ( _sprintf (1 , , (. , &U _attr :s 2C -> &U _attr `*Cuc -> *U + _buff * -> _i `x -> -> # *U _buff `i `x `i ]
[; ;json.c: 21: j++;
"21
[e ++ _j -> 1 `i ]
[; ;json.c: 22: if (strstr(attr, expected))
"22
[e $ ! != ( _strstr (2 , -> &U _attr `*Cuc -> &U _expected `*Cuc -> -> 0 `i `*uc 12  ]
[; ;json.c: 23: {
"23
{
[; ;json.c: 24: j = 0;
"24
[e = _j -> 0 `i ]
[; ;json.c: 25: find = 1;
"25
[e = _find -> -> 1 `i `uc ]
"26
}
[e :U 12 ]
"27
}
[; ;json.c: 26: }
[; ;json.c: 27: }
[e $U 13  ]
"28
[e :U 11 ]
[; ;json.c: 28: else if (!find)
[e $ ! ! != -> _find `i -> -> -> 0 `i `uc `i 14  ]
[; ;json.c: 29: {
"29
{
[; ;json.c: 30: j = 0;
"30
[e = _j -> 0 `i ]
[; ;json.c: 31: sprintf(attr, "");
"31
[e ( _sprintf (1 , &U _attr :s 3C ]
"32
}
[; ;json.c: 32: }
[e $U 15  ]
"33
[e :U 14 ]
[; ;json.c: 33: else
[; ;json.c: 34: {
"34
{
[; ;json.c: 35: if (buff[i] == '"' || buff[i] == ',' || buff[i] == '}')
"35
[e $ ! || || == -> *U + _buff * -> _i `x -> -> # *U _buff `i `x `ui -> 34 `ui == -> *U + _buff * -> _i `x -> -> # *U _buff `i `x `ui -> 44 `ui == -> *U + _buff * -> _i `x -> -> # *U _buff `i `x `ui -> 125 `ui 16  ]
[; ;json.c: 36: {
"36
{
[; ;json.c: 37: value = atoi(aux);
"37
[e = _value ( _atoi (1 -> &U _aux `*Cuc ]
"38
}
[; ;json.c: 38: }
[e $U 17  ]
"39
[e :U 16 ]
[; ;json.c: 39: else
[; ;json.c: 40: {
"40
{
[; ;json.c: 41: aux[j++] = buff[i];
"41
[e = *U + &U _aux * -> -> ++ _j -> 1 `i `ui `ux -> -> # *U &U _aux `ui `ux *U + _buff * -> _i `x -> -> # *U _buff `i `x ]
"42
}
[e :U 17 ]
"43
}
[e :U 15 ]
[e :U 13 ]
"44
}
"16
[e ++ _i -> 1 `i ]
[e :U 10 ]
[e $ && < -> _i `ui ( _strlen (1 -> _buff `*Cuc == _value -U -> 1 `i 7  ]
[e :U 8 ]
"44
}
[; ;json.c: 42: }
[; ;json.c: 43: }
[; ;json.c: 44: }
[; ;json.c: 45: return value;
"45
[e ) _value ]
[e $UE 6  ]
[; ;json.c: 46: }
"46
[e :UE 6 ]
}
"48
[v _getStringJSON `(v ~T0 @X0 1 ef3`*uc`*uc`*uc ]
"49
{
[; ;json.c: 48: void getStringJSON(char buff[], char key[], char *ret)
[; ;json.c: 49: {
[e :U _getStringJSON ]
"48
[v _buff `*uc ~T0 @X0 1 r1 ]
[v _key `*uc ~T0 @X0 1 r2 ]
[v _ret `*uc ~T0 @X0 1 r3 ]
"49
[f ]
"50
[v _i `ui ~T0 @X0 1 a ]
[v _j `ui ~T0 @X0 1 a ]
[; ;json.c: 50: unsigned int i, j = 0;
[e = _j -> -> 0 `i `ui ]
[v F288 `uc ~T0 @X0 -> 25 `i s ]
[i F288
:U ..
-> 0 `c
..
]
"51
[v _res `uc ~T0 @X0 -> 25 `i a ]
[; ;json.c: 51: char res[25] = "";
[e = _res F288 ]
[v F290 `uc ~T0 @X0 -> 20 `i s ]
[i F290
:U ..
-> 0 `c
..
]
"52
[v _attr `uc ~T0 @X0 -> 20 `i a ]
[; ;json.c: 52: char attr[20] = "";
[e = _attr F290 ]
[v F292 `uc ~T0 @X0 -> 20 `i s ]
[i F292
:U ..
-> 0 `c
..
]
"53
[v _expected `uc ~T0 @X0 -> 20 `i a ]
[; ;json.c: 53: char expected[20] = "";
[e = _expected F292 ]
"54
[v _find `uc ~T0 @X0 1 a ]
[; ;json.c: 54: char find = 0;
[e = _find -> -> 0 `i `uc ]
"55
[v _isValid `uc ~T0 @X0 1 a ]
[; ;json.c: 55: char isValid = 0;
[e = _isValid -> -> 0 `i `uc ]
[; ;json.c: 57: sprintf(expected, "\"%s\":\"", key);
"57
[e ( _sprintf (1 , (. , &U _expected :s 4C -> _key `*Cuc ]
[; ;json.c: 59: for (i = 0; i < strlen(buff) && isValid == 0; i++)
"59
{
[e = _i -> -> 0 `i `ui ]
[e $U 22  ]
"60
[e :U 19 ]
[; ;json.c: 60: {
{
[; ;json.c: 61: if (buff[i] == expected[j] && !find)
"61
[e $ ! && == -> *U + _buff * -> _i `ux -> -> # *U _buff `ui `ux `i -> *U + &U _expected * -> _j `ux -> -> # *U &U _expected `ui `ux `i ! != -> _find `i -> -> -> 0 `i `uc `i 23  ]
[; ;json.c: 62: {
"62
{
[; ;json.c: 63: sprintf(attr, "%s%c", attr, buff[i]);
"63
[e ( _sprintf (1 , , (. , &U _attr :s 5C -> &U _attr `*Cuc -> *U + _buff * -> _i `ux -> -> # *U _buff `ui `ux `i ]
[; ;json.c: 64: j++;
"64
[e ++ _j -> -> 1 `i `ui ]
[; ;json.c: 65: if (strstr(attr, expected))
"65
[e $ ! != ( _strstr (2 , -> &U _attr `*Cuc -> &U _expected `*Cuc -> -> 0 `i `*uc 24  ]
[; ;json.c: 66: {
"66
{
[; ;json.c: 67: j = 0;
"67
[e = _j -> -> 0 `i `ui ]
[; ;json.c: 68: find = 1;
"68
[e = _find -> -> 1 `i `uc ]
"69
}
[e :U 24 ]
"70
}
[; ;json.c: 69: }
[; ;json.c: 70: }
[e $U 25  ]
"71
[e :U 23 ]
[; ;json.c: 71: else if (!find)
[e $ ! ! != -> _find `i -> -> -> 0 `i `uc `i 26  ]
[; ;json.c: 72: {
"72
{
[; ;json.c: 73: j = 0;
"73
[e = _j -> -> 0 `i `ui ]
[; ;json.c: 74: sprintf(attr, "");
"74
[e ( _sprintf (1 , &U _attr :s 6C ]
"75
}
[; ;json.c: 75: }
[e $U 27  ]
"76
[e :U 26 ]
[; ;json.c: 76: else
[; ;json.c: 77: {
"77
{
[; ;json.c: 78: if (buff[i] == '"')
"78
[e $ ! == -> *U + _buff * -> _i `ux -> -> # *U _buff `ui `ux `ui -> 34 `ui 28  ]
[; ;json.c: 79: {
"79
{
[; ;json.c: 80: isValid = 1;
"80
[e = _isValid -> -> 1 `i `uc ]
[; ;json.c: 81: sprintf(ret, "%s", res);
"81
[e ( _sprintf (1 , (. , _ret :s 7C -> &U _res `*Cuc ]
"82
}
[; ;json.c: 82: }
[e $U 29  ]
"83
[e :U 28 ]
[; ;json.c: 83: else
[; ;json.c: 84: {
"84
{
[; ;json.c: 85: sprintf(res, "%s%c", res, buff[i]);
"85
[e ( _sprintf (1 , , (. , &U _res :s 8C -> &U _res `*Cuc -> *U + _buff * -> _i `ux -> -> # *U _buff `ui `ux `i ]
"86
}
[e :U 29 ]
"87
}
[e :U 27 ]
[e :U 25 ]
"88
}
"59
[e ++ _i -> -> 1 `i `ui ]
[e :U 22 ]
[e $ && < _i ( _strlen (1 -> _buff `*Cuc == -> _isValid `i -> 0 `i 19  ]
[e :U 20 ]
"88
}
[; ;json.c: 86: }
[; ;json.c: 87: }
[; ;json.c: 88: }
[; ;json.c: 89: }
"89
[e :UE 18 ]
}
[p f _sprintf 9175040 ]
[a 7C 37 115 0 ]
[a 2C 37 115 37 99 0 ]
[a 5C 37 115 37 99 0 ]
[a 8C 37 115 37 99 0 ]
[a 1C 34 37 115 34 58 0 ]
[a 4C 34 37 115 34 58 34 0 ]
[a 3C 0 ]
[a 6C 0 ]
