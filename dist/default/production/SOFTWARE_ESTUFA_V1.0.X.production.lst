

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Nov 09 18:16:14 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           ; Version 1.44
   104                           ; Generated 14/09/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F4550 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  005F25                     __pidataCOMRAM:
   140                           	opt stack 0
   141                           
   142                           ;initializer for __led
   143  005F25  01                 	db	1
   144                           
   145                           	psect	idataBANK0
   146  005F20                     __pidataBANK0:
   147                           	opt stack 0
   148                           
   149                           ;initializer for _menu
   150  005F20  0F                 	db	15
   151                           
   152                           ;initializer for _umid
   153  005F21  64                 	db	100
   154                           
   155                           ;initializer for _temp
   156  005F22  63                 	db	99
   157                           
   158                           ;initializer for _f_falta_energia
   159  005F23  01                 	db	1
   160                           
   161                           ;initializer for _t_buzzer_religar
   162  005F24  01                 	db	1
   163                           
   164                           	psect	idataBANK2
   165  005E8A                     __pidataBANK2:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _wifi_MAC
   169  005E8A  003F               	dw	63
   170  005E8C  00                 	db	0
   171  005E8D  00                 	db	0
   172  005E8E  00                 	db	0
   173  005E8F  00                 	db	0
   174  005E90  00                 	db	0
   175  005E91  00                 	db	0
   176  005E92  00                 	db	0
   177  005E93  00                 	db	0
   178  005E94  00                 	db	0
   179  005E95  00                 	db	0
   180  005E96  00                 	db	0
   181  005E97  00                 	db	0
   182  005E98  00                 	db	0
   183  005E99  00                 	db	0
   184  005E9A  00                 	db	0
   185  005E9B  00                 	db	0
   186  005E9C  00                 	db	0
   187  005E9D  00                 	db	0
   188  005E9E  00                 	db	0
   189  005E9F  00                 	db	0
   190  005EA0  00                 	db	0
   191  005EA1  00                 	db	0
   192                           
   193                           	psect	mediumconst
   194  007798                     __pmediumconst:
   195                           	opt stack 0
   196  007798  00                 	db	0
   197  007799                     criaCaracteresCGRAM@F3896:
   198                           	opt stack 0
   199  007799  0E                 	db	14
   200  00779A  11                 	db	17
   201  00779B  11                 	db	17
   202  00779C  1F                 	db	31
   203  00779D  1B                 	db	27
   204  00779E  1B                 	db	27
   205  00779F  1F                 	db	31
   206  0077A0  1F                 	db	31
   207  0077A1  01                 	db	1
   208  0077A2  03                 	db	3
   209  0077A3  07                 	db	7
   210  0077A4  1D                 	db	29
   211  0077A5  1D                 	db	29
   212  0077A6  07                 	db	7
   213  0077A7  03                 	db	3
   214  0077A8  01                 	db	1
   215  0077A9  04                 	db	4
   216  0077AA  04                 	db	4
   217  0077AB  0E                 	db	14
   218  0077AC  0E                 	db	14
   219  0077AD  1F                 	db	31
   220  0077AE  1D                 	db	29
   221  0077AF  1B                 	db	27
   222  0077B0  0E                 	db	14
   223  0077B1  04                 	db	4
   224  0077B2  0A                 	db	10
   225  0077B3  0A                 	db	10
   226  0077B4  0A                 	db	10
   227  0077B5  0E                 	db	14
   228  0077B6  1F                 	db	31
   229  0077B7  1F                 	db	31
   230  0077B8  0E                 	db	14
   231  0077B9  00                 	db	0
   232  0077BA  0E                 	db	14
   233  0077BB  11                 	db	17
   234  0077BC  04                 	db	4
   235  0077BD  0A                 	db	10
   236  0077BE  00                 	db	0
   237  0077BF  04                 	db	4
   238  0077C0  00                 	db	0
   239  0077C1  00                 	db	0
   240  0077C2  00                 	db	0
   241  0077C3  00                 	db	0
   242  0077C4  00                 	db	0
   243  0077C5  00                 	db	0
   244  0077C6  00                 	db	0
   245  0077C7  00                 	db	0
   246  0077C8  00                 	db	0
   247  0077C9  00                 	db	0
   248  0077CA  00                 	db	0
   249  0077CB  00                 	db	0
   250  0077CC  00                 	db	0
   251  0077CD  00                 	db	0
   252  0077CE  00                 	db	0
   253  0077CF  00                 	db	0
   254  0077D0  00                 	db	0
   255  0077D1                     __end_ofcriaCaracteresCGRAM@F3896:
   256                           	opt stack 0
   257  0077D1                     _dpowers:
   258                           	opt stack 0
   259  0077D1  0001               	dw	1
   260  0077D3  000A               	dw	10
   261  0077D5  0064               	dw	100
   262  0077D7  03E8               	dw	1000
   263  0077D9  2710               	dw	10000
   264  0077DB                     __end_of_dpowers:
   265                           	opt stack 0
   266  0000                     _SSPBUF	set	4041
   267  0000                     _SSPSTAT	set	4039
   268  0000                     _SSPADD	set	4040
   269  0000                     _SSPCON2	set	4037
   270  0000                     _SSPCON1	set	4038
   271  0000                     _ADCON2	set	4032
   272  0000                     _ADCON1	set	4033
   273  0000                     _INTCON	set	4082
   274  0000                     _T0CON	set	4053
   275  0000                     _INTCON3bits	set	4080
   276  0000                     _INTCON2bits	set	4081
   277  0000                     _TRISBbits	set	3987
   278  0000                     _PORTEbits	set	3972
   279  0000                     _PORTCbits	set	3970
   280  0000                     _PORTAbits	set	3968
   281  0000                     _TRISEbits	set	3990
   282  0000                     _TRISAbits	set	3986
   283  0000                     _RCREG	set	4014
   284  0000                     _TMR0L	set	4054
   285  0000                     _TMR0H	set	4055
   286  0000                     _ADCON0bits	set	4034
   287  0000                     _ADCON0	set	4034
   288  0000                     _ADRESL	set	4035
   289  0000                     _ADRESH	set	4036
   290  0000                     _TXREG	set	4013
   291  0000                     _PIE1bits	set	3997
   292  0000                     _PIR1bits	set	3998
   293  0000                     _INTCONbits	set	4082
   294  0000                     _SPBRG	set	4015
   295  0000                     _RCSTAbits	set	4011
   296  0000                     _TXSTAbits	set	4012
   297  0000                     _TRISCbits	set	3988
   298  0000                     _LATDbits	set	3980
   299  0000                     _LATEbits	set	3981
   300  0000                     _LATBbits	set	3978
   301  0000                     _LATCbits	set	3979
   302  0000                     _LATAbits	set	3977
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _TRISDbits	set	3989
   306  0000                     _ACKEN	set	32300
   307  0000                     _ACKDT	set	32301
   308  0000                     _RCEN	set	32299
   309  0000                     _PEN	set	32298
   310  0000                     _RSEN	set	32297
   311  0000                     _SEN	set	32296
   312  0000                     _INT2IF	set	32641
   313  0000                     _RCIF	set	31989
   314  0000                     _TMR0IF	set	32658
   315  0000                     _GO	set	32273
   316  0000                     _ADON	set	32272
   317  0077DB                     STR_32:
   318  0077DB  3C                 	db	60	;'<'
   319  0077DC  68                 	db	104	;'h'
   320  0077DD  74                 	db	116	;'t'
   321  0077DE  6D                 	db	109	;'m'
   322  0077DF  6C                 	db	108	;'l'
   323  0077E0  3E                 	db	62	;'>'
   324  0077E1  3C                 	db	60	;'<'
   325  0077E2  68                 	db	104	;'h'
   326  0077E3  65                 	db	101	;'e'
   327  0077E4  61                 	db	97	;'a'
   328  0077E5  64                 	db	100	;'d'
   329  0077E6  3E                 	db	62	;'>'
   330  0077E7  3C                 	db	60	;'<'
   331  0077E8  74                 	db	116	;'t'
   332  0077E9  69                 	db	105	;'i'
   333  0077EA  74                 	db	116	;'t'
   334  0077EB  6C                 	db	108	;'l'
   335  0077EC  65                 	db	101	;'e'
   336  0077ED  3E                 	db	62	;'>'
   337  0077EE  57                 	db	87	;'W'
   338  0077EF  49                 	db	73	;'I'
   339  0077F0  46                 	db	70	;'F'
   340  0077F1  49                 	db	73	;'I'
   341  0077F2  3C                 	db	60	;'<'
   342  0077F3  2F                 	db	47
   343  0077F4  74                 	db	116	;'t'
   344  0077F5  69                 	db	105	;'i'
   345  0077F6  74                 	db	116	;'t'
   346  0077F7  6C                 	db	108	;'l'
   347  0077F8  65                 	db	101	;'e'
   348  0077F9  3E                 	db	62	;'>'
   349  0077FA  3C                 	db	60	;'<'
   350  0077FB  73                 	db	115	;'s'
   351  0077FC  74                 	db	116	;'t'
   352  0077FD  79                 	db	121	;'y'
   353  0077FE  6C                 	db	108	;'l'
   354  0077FF  65                 	db	101	;'e'
   355  007800  3E                 	db	62	;'>'
   356  007801  2A                 	db	42
   357  007802  7B                 	db	123
   358  007803  66                 	db	102	;'f'
   359  007804  6F                 	db	111	;'o'
   360  007805  6E                 	db	110	;'n'
   361  007806  74                 	db	116	;'t'
   362  007807  2D                 	db	45
   363  007808  73                 	db	115	;'s'
   364  007809  69                 	db	105	;'i'
   365  00780A  7A                 	db	122	;'z'
   366  00780B  65                 	db	101	;'e'
   367  00780C  3A                 	db	58	;':'
   368  00780D  20                 	db	32
   369  00780E  33                 	db	51	;'3'
   370  00780F  35                 	db	53	;'5'
   371  007810  70                 	db	112	;'p'
   372  007811  78                 	db	120	;'x'
   373  007812  3B                 	db	59	;';'
   374  007813  66                 	db	102	;'f'
   375  007814  6F                 	db	111	;'o'
   376  007815  6E                 	db	110	;'n'
   377  007816  74                 	db	116	;'t'
   378  007817  2D                 	db	45
   379  007818  66                 	db	102	;'f'
   380  007819  61                 	db	97	;'a'
   381  00781A  6D                 	db	109	;'m'
   382  00781B  69                 	db	105	;'i'
   383  00781C  6C                 	db	108	;'l'
   384  00781D  79                 	db	121	;'y'
   385  00781E  3A                 	db	58	;':'
   386  00781F  73                 	db	115	;'s'
   387  007820  61                 	db	97	;'a'
   388  007821  6E                 	db	110	;'n'
   389  007822  73                 	db	115	;'s'
   390  007823  2D                 	db	45
   391  007824  73                 	db	115	;'s'
   392  007825  65                 	db	101	;'e'
   393  007826  72                 	db	114	;'r'
   394  007827  69                 	db	105	;'i'
   395  007828  66                 	db	102	;'f'
   396  007829  3B                 	db	59	;';'
   397  00782A  7D                 	db	125
   398  00782B  66                 	db	102	;'f'
   399  00782C  6F                 	db	111	;'o'
   400  00782D  72                 	db	114	;'r'
   401  00782E  6D                 	db	109	;'m'
   402  00782F  7B                 	db	123
   403  007830  68                 	db	104	;'h'
   404  007831  65                 	db	101	;'e'
   405  007832  69                 	db	105	;'i'
   406  007833  67                 	db	103	;'g'
   407  007834  68                 	db	104	;'h'
   408  007835  74                 	db	116	;'t'
   409  007836  3A                 	db	58	;':'
   410  007837  34                 	db	52	;'4'
   411  007838  35                 	db	53	;'5'
   412  007839  30                 	db	48	;'0'
   413  00783A  70                 	db	112	;'p'
   414  00783B  78                 	db	120	;'x'
   415  00783C  3B                 	db	59	;';'
   416  00783D  64                 	db	100	;'d'
   417  00783E  69                 	db	105	;'i'
   418  00783F  73                 	db	115	;'s'
   419  007840  70                 	db	112	;'p'
   420  007841  6C                 	db	108	;'l'
   421  007842  61                 	db	97	;'a'
   422  007843  79                 	db	121	;'y'
   423  007844  3A                 	db	58	;':'
   424  007845  66                 	db	102	;'f'
   425  007846  6C                 	db	108	;'l'
   426  007847  65                 	db	101	;'e'
   427  007848  78                 	db	120	;'x'
   428  007849  3B                 	db	59	;';'
   429  00784A  66                 	db	102	;'f'
   430  00784B  6C                 	db	108	;'l'
   431  00784C  65                 	db	101	;'e'
   432  00784D  78                 	db	120	;'x'
   433  00784E  2D                 	db	45
   434  00784F  64                 	db	100	;'d'
   435  007850  69                 	db	105	;'i'
   436  007851  72                 	db	114	;'r'
   437  007852  65                 	db	101	;'e'
   438  007853  63                 	db	99	;'c'
   439  007854  74                 	db	116	;'t'
   440  007855  69                 	db	105	;'i'
   441  007856  6F                 	db	111	;'o'
   442  007857  6E                 	db	110	;'n'
   443  007858  3A                 	db	58	;':'
   444  007859  63                 	db	99	;'c'
   445  00785A  6F                 	db	111	;'o'
   446  00785B  6C                 	db	108	;'l'
   447  00785C  75                 	db	117	;'u'
   448  00785D  6D                 	db	109	;'m'
   449  00785E  6E                 	db	110	;'n'
   450  00785F  3B                 	db	59	;';'
   451  007860  6A                 	db	106	;'j'
   452  007861  75                 	db	117	;'u'
   453  007862  73                 	db	115	;'s'
   454  007863  74                 	db	116	;'t'
   455  007864  69                 	db	105	;'i'
   456  007865  66                 	db	102	;'f'
   457  007866  79                 	db	121	;'y'
   458  007867  2D                 	db	45
   459  007868  63                 	db	99	;'c'
   460  007869  6F                 	db	111	;'o'
   461  00786A  6E                 	db	110	;'n'
   462  00786B  74                 	db	116	;'t'
   463  00786C  65                 	db	101	;'e'
   464  00786D  6E                 	db	110	;'n'
   465  00786E  74                 	db	116	;'t'
   466  00786F  3A                 	db	58	;':'
   467  007870  73                 	db	115	;'s'
   468  007871  70                 	db	112	;'p'
   469  007872  61                 	db	97	;'a'
   470  007873  63                 	db	99	;'c'
   471  007874  65                 	db	101	;'e'
   472  007875  2D                 	db	45
   473  007876  61                 	db	97	;'a'
   474  007877  72                 	db	114	;'r'
   475  007878  6F                 	db	111	;'o'
   476  007879  75                 	db	117	;'u'
   477  00787A  6E                 	db	110	;'n'
   478  00787B  64                 	db	100	;'d'
   479  00787C  3B                 	db	59	;';'
   480  00787D  61                 	db	97	;'a'
   481  00787E  6C                 	db	108	;'l'
   482  00787F  69                 	db	105	;'i'
   483  007880  67                 	db	103	;'g'
   484  007881  6E                 	db	110	;'n'
   485  007882  2D                 	db	45
   486  007883  69                 	db	105	;'i'
   487  007884  74                 	db	116	;'t'
   488  007885  65                 	db	101	;'e'
   489  007886  6D                 	db	109	;'m'
   490  007887  73                 	db	115	;'s'
   491  007888  3A                 	db	58	;':'
   492  007889  63                 	db	99	;'c'
   493  00788A  65                 	db	101	;'e'
   494  00788B  6E                 	db	110	;'n'
   495  00788C  74                 	db	116	;'t'
   496  00788D  65                 	db	101	;'e'
   497  00788E  72                 	db	114	;'r'
   498  00788F  3B                 	db	59	;';'
   499  007890  6D                 	db	109	;'m'
   500  007891  61                 	db	97	;'a'
   501  007892  72                 	db	114	;'r'
   502  007893  67                 	db	103	;'g'
   503  007894  69                 	db	105	;'i'
   504  007895  6E                 	db	110	;'n'
   505  007896  3A                 	db	58	;':'
   506  007897  30                 	db	48	;'0'
   507  007898  20                 	db	32
   508  007899  61                 	db	97	;'a'
   509  00789A  75                 	db	117	;'u'
   510  00789B  74                 	db	116	;'t'
   511  00789C  6F                 	db	111	;'o'
   512  00789D  3B                 	db	59	;';'
   513  00789E  7D                 	db	125
   514  00789F  62                 	db	98	;'b'
   515  0078A0  75                 	db	117	;'u'
   516  0078A1  74                 	db	116	;'t'
   517  0078A2  74                 	db	116	;'t'
   518  0078A3  6F                 	db	111	;'o'
   519  0078A4  6E                 	db	110	;'n'
   520  0078A5  7B                 	db	123
   521  0078A6  77                 	db	119	;'w'
   522  0078A7  69                 	db	105	;'i'
   523  0078A8  64                 	db	100	;'d'
   524  0078A9  74                 	db	116	;'t'
   525  0078AA  68                 	db	104	;'h'
   526  0078AB  3A                 	db	58	;':'
   527  0078AC  32                 	db	50	;'2'
   528  0078AD  38                 	db	56	;'8'
   529  0078AE  30                 	db	48	;'0'
   530  0078AF  70                 	db	112	;'p'
   531  0078B0  78                 	db	120	;'x'
   532  0078B1  3B                 	db	59	;';'
   533  0078B2  68                 	db	104	;'h'
   534  0078B3  65                 	db	101	;'e'
   535  0078B4  69                 	db	105	;'i'
   536  0078B5  67                 	db	103	;'g'
   537  0078B6  68                 	db	104	;'h'
   538  0078B7  74                 	db	116	;'t'
   539  0078B8  3A                 	db	58	;':'
   540  0078B9  36                 	db	54	;'6'
   541  0078BA  30                 	db	48	;'0'
   542  0078BB  70                 	db	112	;'p'
   543  0078BC  78                 	db	120	;'x'
   544  0078BD  3B                 	db	59	;';'
   545  0078BE  63                 	db	99	;'c'
   546  0078BF  6F                 	db	111	;'o'
   547  0078C0  6C                 	db	108	;'l'
   548  0078C1  6F                 	db	111	;'o'
   549  0078C2  72                 	db	114	;'r'
   550  0078C3  3A                 	db	58	;':'
   551  0078C4  57                 	db	87	;'W'
   552  0078C5  68                 	db	104	;'h'
   553  0078C6  69                 	db	105	;'i'
   554  0078C7  74                 	db	116	;'t'
   555  0078C8  65                 	db	101	;'e'
   556  0078C9  3B                 	db	59	;';'
   557  0078CA  62                 	db	98	;'b'
   558  0078CB  61                 	db	97	;'a'
   559  0078CC  63                 	db	99	;'c'
   560  0078CD  6B                 	db	107	;'k'
   561  0078CE  67                 	db	103	;'g'
   562  0078CF  72                 	db	114	;'r'
   563  0078D0  6F                 	db	111	;'o'
   564  0078D1  75                 	db	117	;'u'
   565  0078D2  6E                 	db	110	;'n'
   566  0078D3  64                 	db	100	;'d'
   567  0078D4  2D                 	db	45
   568  0078D5  63                 	db	99	;'c'
   569  0078D6  6F                 	db	111	;'o'
   570  0078D7  6C                 	db	108	;'l'
   571  0078D8  6F                 	db	111	;'o'
   572  0078D9  72                 	db	114	;'r'
   573  0078DA  3A                 	db	58	;':'
   574  0078DB  23                 	db	35
   575  0078DC  34                 	db	52	;'4'
   576  0078DD  46                 	db	70	;'F'
   577  0078DE  43                 	db	67	;'C'
   578  0078DF  45                 	db	69	;'E'
   579  0078E0  30                 	db	48	;'0'
   580  0078E1  30                 	db	48	;'0'
   581  0078E2  3B                 	db	59	;';'
   582  0078E3  62                 	db	98	;'b'
   583  0078E4  6F                 	db	111	;'o'
   584  0078E5  72                 	db	114	;'r'
   585  0078E6  64                 	db	100	;'d'
   586  0078E7  65                 	db	101	;'e'
   587  0078E8  72                 	db	114	;'r'
   588  0078E9  3A                 	db	58	;':'
   589  0078EA  20                 	db	32
   590  0078EB  32                 	db	50	;'2'
   591  0078EC  70                 	db	112	;'p'
   592  0078ED  78                 	db	120	;'x'
   593  0078EE  20                 	db	32
   594  0078EF  72                 	db	114	;'r'
   595  0078F0  67                 	db	103	;'g'
   596  0078F1  62                 	db	98	;'b'
   597  0078F2  28                 	db	40
   598  0078F3  32                 	db	50	;'2'
   599  0078F4  31                 	db	49	;'1'
   600  0078F5  2C                 	db	44
   601  0078F6  20                 	db	32
   602  0078F7  31                 	db	49	;'1'
   603  0078F8  39                 	db	57	;'9'
   604  0078F9  36                 	db	54	;'6'
   605  0078FA  2C                 	db	44
   606  0078FB  20                 	db	32
   607  0078FC  32                 	db	50	;'2'
   608  0078FD  31                 	db	49	;'1'
   609  0078FE  29                 	db	41
   610  0078FF  20                 	db	32
   611  007900  73                 	db	115	;'s'
   612  007901  6F                 	db	111	;'o'
   613  007902  6C                 	db	108	;'l'
   614  007903  69                 	db	105	;'i'
   615  007904  64                 	db	100	;'d'
   616  007905  3B                 	db	59	;';'
   617  007906  62                 	db	98	;'b'
   618  007907  6F                 	db	111	;'o'
   619  007908  72                 	db	114	;'r'
   620  007909  64                 	db	100	;'d'
   621  00790A  65                 	db	101	;'e'
   622  00790B  72                 	db	114	;'r'
   623  00790C  2D                 	db	45
   624  00790D  72                 	db	114	;'r'
   625  00790E  61                 	db	97	;'a'
   626  00790F  64                 	db	100	;'d'
   627  007910  69                 	db	105	;'i'
   628  007911  75                 	db	117	;'u'
   629  007912  73                 	db	115	;'s'
   630  007913  3A                 	db	58	;':'
   631  007914  35                 	db	53	;'5'
   632  007915  70                 	db	112	;'p'
   633  007916  78                 	db	120	;'x'
   634  007917  3B                 	db	59	;';'
   635  007918  7D                 	db	125
   636  007919  69                 	db	105	;'i'
   637  00791A  6E                 	db	110	;'n'
   638  00791B  70                 	db	112	;'p'
   639  00791C  75                 	db	117	;'u'
   640  00791D  74                 	db	116	;'t'
   641  00791E  7B                 	db	123
   642  00791F  68                 	db	104	;'h'
   643  007920  65                 	db	101	;'e'
   644  007921  69                 	db	105	;'i'
   645  007922  67                 	db	103	;'g'
   646  007923  68                 	db	104	;'h'
   647  007924  74                 	db	116	;'t'
   648  007925  3A                 	db	58	;':'
   649  007926  36                 	db	54	;'6'
   650  007927  30                 	db	48	;'0'
   651  007928  70                 	db	112	;'p'
   652  007929  78                 	db	120	;'x'
   653  00792A  3B                 	db	59	;';'
   654  00792B  77                 	db	119	;'w'
   655  00792C  69                 	db	105	;'i'
   656  00792D  64                 	db	100	;'d'
   657  00792E  74                 	db	116	;'t'
   658  00792F  68                 	db	104	;'h'
   659  007930  3A                 	db	58	;':'
   660  007931  36                 	db	54	;'6'
   661  007932  30                 	db	48	;'0'
   662  007933  30                 	db	48	;'0'
   663  007934  70                 	db	112	;'p'
   664  007935  78                 	db	120	;'x'
   665  007936  3B                 	db	59	;';'
   666  007937  20                 	db	32
   667  007938  62                 	db	98	;'b'
   668  007939  6F                 	db	111	;'o'
   669  00793A  72                 	db	114	;'r'
   670  00793B  64                 	db	100	;'d'
   671  00793C  65                 	db	101	;'e'
   672  00793D  72                 	db	114	;'r'
   673  00793E  2D                 	db	45
   674  00793F  72                 	db	114	;'r'
   675  007940  61                 	db	97	;'a'
   676  007941  64                 	db	100	;'d'
   677  007942  69                 	db	105	;'i'
   678  007943  75                 	db	117	;'u'
   679  007944  73                 	db	115	;'s'
   680  007945  3A                 	db	58	;':'
   681  007946  35                 	db	53	;'5'
   682  007947  70                 	db	112	;'p'
   683  007948  78                 	db	120	;'x'
   684  007949  3B                 	db	59	;';'
   685  00794A  62                 	db	98	;'b'
   686  00794B  6F                 	db	111	;'o'
   687  00794C  72                 	db	114	;'r'
   688  00794D  64                 	db	100	;'d'
   689  00794E  65                 	db	101	;'e'
   690  00794F  72                 	db	114	;'r'
   691  007950  3A                 	db	58	;':'
   692  007951  20                 	db	32
   693  007952  33                 	db	51	;'3'
   694  007953  70                 	db	112	;'p'
   695  007954  78                 	db	120	;'x'
   696  007955  20                 	db	32
   697  007956  72                 	db	114	;'r'
   698  007957  67                 	db	103	;'g'
   699  007958  62                 	db	98	;'b'
   700  007959  28                 	db	40
   701  00795A  31                 	db	49	;'1'
   702  00795B  33                 	db	51	;'3'
   703  00795C  32                 	db	50	;'2'
   704  00795D  2C                 	db	44
   705  00795E  20                 	db	32
   706  00795F  31                 	db	49	;'1'
   707  007960  33                 	db	51	;'3'
   708  007961  36                 	db	54	;'6'
   709  007962  2C                 	db	44
   710  007963  20                 	db	32
   711  007964  31                 	db	49	;'1'
   712  007965  33                 	db	51	;'3'
   713  007966  38                 	db	56	;'8'
   714  007967  29                 	db	41
   715  007968  20                 	db	32
   716  007969  73                 	db	115	;'s'
   717  00796A  6F                 	db	111	;'o'
   718  00796B  6C                 	db	108	;'l'
   719  00796C  69                 	db	105	;'i'
   720  00796D  64                 	db	100	;'d'
   721  00796E  3B                 	db	59	;';'
   722  00796F  7D                 	db	125
   723  007970  62                 	db	98	;'b'
   724  007971  6F                 	db	111	;'o'
   725  007972  64                 	db	100	;'d'
   726  007973  79                 	db	121	;'y'
   727  007974  7B                 	db	123
   728  007975  62                 	db	98	;'b'
   729  007976  61                 	db	97	;'a'
   730  007977  63                 	db	99	;'c'
   731  007978  6B                 	db	107	;'k'
   732  007979  67                 	db	103	;'g'
   733  00797A  72                 	db	114	;'r'
   734  00797B  6F                 	db	111	;'o'
   735  00797C  75                 	db	117	;'u'
   736  00797D  6E                 	db	110	;'n'
   737  00797E  64                 	db	100	;'d'
   738  00797F  3A                 	db	58	;':'
   739  007980  23                 	db	35
   740  007981  46                 	db	70	;'F'
   741  007982  34                 	db	52	;'4'
   742  007983  46                 	db	70	;'F'
   743  007984  37                 	db	55	;'7'
   744  007985  46                 	db	70	;'F'
   745  007986  35                 	db	53	;'5'
   746  007987  3B                 	db	59	;';'
   747  007988  7D                 	db	125
   748  007989  3C                 	db	60	;'<'
   749  00798A  2F                 	db	47
   750  00798B  73                 	db	115	;'s'
   751  00798C  74                 	db	116	;'t'
   752  00798D  79                 	db	121	;'y'
   753  00798E  6C                 	db	108	;'l'
   754  00798F  65                 	db	101	;'e'
   755  007990  3E                 	db	62	;'>'
   756  007991  3C                 	db	60	;'<'
   757  007992  2F                 	db	47
   758  007993  68                 	db	104	;'h'
   759  007994  65                 	db	101	;'e'
   760  007995  61                 	db	97	;'a'
   761  007996  64                 	db	100	;'d'
   762  007997  3E                 	db	62	;'>'
   763  007998  3C                 	db	60	;'<'
   764  007999  62                 	db	98	;'b'
   765  00799A  6F                 	db	111	;'o'
   766  00799B  64                 	db	100	;'d'
   767  00799C  79                 	db	121	;'y'
   768  00799D  3E                 	db	62	;'>'
   769  00799E  3C                 	db	60	;'<'
   770  00799F  66                 	db	102	;'f'
   771  0079A0  6F                 	db	111	;'o'
   772  0079A1  72                 	db	114	;'r'
   773  0079A2  6D                 	db	109	;'m'
   774  0079A3  20                 	db	32
   775  0079A4  61                 	db	97	;'a'
   776  0079A5  63                 	db	99	;'c'
   777  0079A6  74                 	db	116	;'t'
   778  0079A7  69                 	db	105	;'i'
   779  0079A8  6F                 	db	111	;'o'
   780  0079A9  6E                 	db	110	;'n'
   781  0079AA  3D                 	db	61	;'='
   782  0079AB  22                 	db	34
   783  0079AC  2F                 	db	47
   784  0079AD  77                 	db	119	;'w'
   785  0079AE  69                 	db	105	;'i'
   786  0079AF  66                 	db	102	;'f'
   787  0079B0  69                 	db	105	;'i'
   788  0079B1  22                 	db	34
   789  0079B2  6D                 	db	109	;'m'
   790  0079B3  65                 	db	101	;'e'
   791  0079B4  74                 	db	116	;'t'
   792  0079B5  68                 	db	104	;'h'
   793  0079B6  6F                 	db	111	;'o'
   794  0079B7  64                 	db	100	;'d'
   795  0079B8  3D                 	db	61	;'='
   796  0079B9  22                 	db	34
   797  0079BA  70                 	db	112	;'p'
   798  0079BB  6F                 	db	111	;'o'
   799  0079BC  73                 	db	115	;'s'
   800  0079BD  74                 	db	116	;'t'
   801  0079BE  22                 	db	34
   802  0079BF  3E                 	db	62	;'>'
   803  0079C0  3C                 	db	60	;'<'
   804  0079C1  68                 	db	104	;'h'
   805  0079C2  31                 	db	49	;'1'
   806  0079C3  3E                 	db	62	;'>'
   807  0079C4  43                 	db	67	;'C'
   808  0079C5  6F                 	db	111	;'o'
   809  0079C6  6E                 	db	110	;'n'
   810  0079C7  66                 	db	102	;'f'
   811  0079C8  69                 	db	105	;'i'
   812  0079C9  67                 	db	103	;'g'
   813  0079CA  75                 	db	117	;'u'
   814  0079CB  72                 	db	114	;'r'
   815  0079CC  61                 	db	97	;'a'
   816  0079CD  E7                 	db	-25
   817  0079CE  E3                 	db	-29
   818  0079CF  6F                 	db	111	;'o'
   819  0079D0  20                 	db	32
   820  0079D1  57                 	db	87	;'W'
   821  0079D2  69                 	db	105	;'i'
   822  0079D3  66                 	db	102	;'f'
   823  0079D4  69                 	db	105	;'i'
   824  0079D5  3C                 	db	60	;'<'
   825  0079D6  2F                 	db	47
   826  0079D7  68                 	db	104	;'h'
   827  0079D8  31                 	db	49	;'1'
   828  0079D9  3E                 	db	62	;'>'
   829  0079DA  4E                 	db	78	;'N'
   830  0079DB  4F                 	db	79	;'O'
   831  0079DC  4D                 	db	77	;'M'
   832  0079DD  45                 	db	69	;'E'
   833  0079DE  20                 	db	32
   834  0079DF  44                 	db	68	;'D'
   835  0079E0  4F                 	db	79	;'O'
   836  0079E1  20                 	db	32
   837  0079E2  57                 	db	87	;'W'
   838  0079E3  49                 	db	73	;'I'
   839  0079E4  46                 	db	70	;'F'
   840  0079E5  49                 	db	73	;'I'
   841  0079E6  3A                 	db	58	;':'
   842  0079E7  3C                 	db	60	;'<'
   843  0079E8  69                 	db	105	;'i'
   844  0079E9  6E                 	db	110	;'n'
   845  0079EA  70                 	db	112	;'p'
   846  0079EB  75                 	db	117	;'u'
   847  0079EC  74                 	db	116	;'t'
   848  0079ED  20                 	db	32
   849  0079EE  74                 	db	116	;'t'
   850  0079EF  79                 	db	121	;'y'
   851  0079F0  70                 	db	112	;'p'
   852  0079F1  65                 	db	101	;'e'
   853  0079F2  3D                 	db	61	;'='
   854  0079F3  22                 	db	34
   855  0079F4  74                 	db	116	;'t'
   856  0079F5  65                 	db	101	;'e'
   857  0079F6  78                 	db	120	;'x'
   858  0079F7  74                 	db	116	;'t'
   859  0079F8  22                 	db	34
   860  0079F9  6E                 	db	110	;'n'
   861  0079FA  61                 	db	97	;'a'
   862  0079FB  6D                 	db	109	;'m'
   863  0079FC  65                 	db	101	;'e'
   864  0079FD  3D                 	db	61	;'='
   865  0079FE  22                 	db	34
   866  0079FF  73                 	db	115	;'s'
   867  007A00  73                 	db	115	;'s'
   868  007A01  69                 	db	105	;'i'
   869  007A02  64                 	db	100	;'d'
   870  007A03  22                 	db	34
   871  007A04  20                 	db	32
   872  007A05  72                 	db	114	;'r'
   873  007A06  65                 	db	101	;'e'
   874  007A07  71                 	db	113	;'q'
   875  007A08  75                 	db	117	;'u'
   876  007A09  69                 	db	105	;'i'
   877  007A0A  72                 	db	114	;'r'
   878  007A0B  65                 	db	101	;'e'
   879  007A0C  64                 	db	100	;'d'
   880  007A0D  3E                 	db	62	;'>'
   881  007A0E  53                 	db	83	;'S'
   882  007A0F  45                 	db	69	;'E'
   883  007A10  4E                 	db	78	;'N'
   884  007A11  48                 	db	72	;'H'
   885  007A12  41                 	db	65	;'A'
   886  007A13  20                 	db	32
   887  007A14  44                 	db	68	;'D'
   888  007A15  4F                 	db	79	;'O'
   889  007A16  20                 	db	32
   890  007A17  57                 	db	87	;'W'
   891  007A18  49                 	db	73	;'I'
   892  007A19  46                 	db	70	;'F'
   893  007A1A  49                 	db	73	;'I'
   894  007A1B  3A                 	db	58	;':'
   895  007A1C  3C                 	db	60	;'<'
   896  007A1D  69                 	db	105	;'i'
   897  007A1E  6E                 	db	110	;'n'
   898  007A1F  70                 	db	112	;'p'
   899  007A20  75                 	db	117	;'u'
   900  007A21  74                 	db	116	;'t'
   901  007A22  20                 	db	32
   902  007A23  74                 	db	116	;'t'
   903  007A24  79                 	db	121	;'y'
   904  007A25  70                 	db	112	;'p'
   905  007A26  65                 	db	101	;'e'
   906  007A27  3D                 	db	61	;'='
   907  007A28  22                 	db	34
   908  007A29  74                 	db	116	;'t'
   909  007A2A  65                 	db	101	;'e'
   910  007A2B  78                 	db	120	;'x'
   911  007A2C  74                 	db	116	;'t'
   912  007A2D  22                 	db	34
   913  007A2E  6E                 	db	110	;'n'
   914  007A2F  61                 	db	97	;'a'
   915  007A30  6D                 	db	109	;'m'
   916  007A31  65                 	db	101	;'e'
   917  007A32  3D                 	db	61	;'='
   918  007A33  22                 	db	34
   919  007A34  73                 	db	115	;'s'
   920  007A35  65                 	db	101	;'e'
   921  007A36  6E                 	db	110	;'n'
   922  007A37  68                 	db	104	;'h'
   923  007A38  61                 	db	97	;'a'
   924  007A39  22                 	db	34
   925  007A3A  3E                 	db	62	;'>'
   926  007A3B  3C                 	db	60	;'<'
   927  007A3C  69                 	db	105	;'i'
   928  007A3D  6E                 	db	110	;'n'
   929  007A3E  70                 	db	112	;'p'
   930  007A3F  75                 	db	117	;'u'
   931  007A40  74                 	db	116	;'t'
   932  007A41  20                 	db	32
   933  007A42  74                 	db	116	;'t'
   934  007A43  79                 	db	121	;'y'
   935  007A44  70                 	db	112	;'p'
   936  007A45  65                 	db	101	;'e'
   937  007A46  3D                 	db	61	;'='
   938  007A47  22                 	db	34
   939  007A48  68                 	db	104	;'h'
   940  007A49  69                 	db	105	;'i'
   941  007A4A  64                 	db	100	;'d'
   942  007A4B  64                 	db	100	;'d'
   943  007A4C  65                 	db	101	;'e'
   944  007A4D  6E                 	db	110	;'n'
   945  007A4E  22                 	db	34
   946  007A4F  20                 	db	32
   947  007A50  6E                 	db	110	;'n'
   948  007A51  61                 	db	97	;'a'
   949  007A52  6D                 	db	109	;'m'
   950  007A53  65                 	db	101	;'e'
   951  007A54  3D                 	db	61	;'='
   952  007A55  22                 	db	34
   953  007A56  66                 	db	102	;'f'
   954  007A57  69                 	db	105	;'i'
   955  007A58  6D                 	db	109	;'m'
   956  007A59  73                 	db	115	;'s'
   957  007A5A  74                 	db	116	;'t'
   958  007A5B  72                 	db	114	;'r'
   959  007A5C  22                 	db	34
   960  007A5D  3E                 	db	62	;'>'
   961  007A5E  3C                 	db	60	;'<'
   962  007A5F  62                 	db	98	;'b'
   963  007A60  75                 	db	117	;'u'
   964  007A61  74                 	db	116	;'t'
   965  007A62  74                 	db	116	;'t'
   966  007A63  6F                 	db	111	;'o'
   967  007A64  6E                 	db	110	;'n'
   968  007A65  20                 	db	32
   969  007A66  74                 	db	116	;'t'
   970  007A67  79                 	db	121	;'y'
   971  007A68  70                 	db	112	;'p'
   972  007A69  65                 	db	101	;'e'
   973  007A6A  3D                 	db	61	;'='
   974  007A6B  22                 	db	34
   975  007A6C  73                 	db	115	;'s'
   976  007A6D  75                 	db	117	;'u'
   977  007A6E  62                 	db	98	;'b'
   978  007A6F  6D                 	db	109	;'m'
   979  007A70  69                 	db	105	;'i'
   980  007A71  74                 	db	116	;'t'
   981  007A72  22                 	db	34
   982  007A73  3E                 	db	62	;'>'
   983  007A74  4F                 	db	79	;'O'
   984  007A75  4B                 	db	75	;'K'
   985  007A76  3C                 	db	60	;'<'
   986  007A77  2F                 	db	47
   987  007A78  62                 	db	98	;'b'
   988  007A79  75                 	db	117	;'u'
   989  007A7A  74                 	db	116	;'t'
   990  007A7B  74                 	db	116	;'t'
   991  007A7C  6F                 	db	111	;'o'
   992  007A7D  6E                 	db	110	;'n'
   993  007A7E  3E                 	db	62	;'>'
   994  007A7F  3C                 	db	60	;'<'
   995  007A80  2F                 	db	47
   996  007A81  66                 	db	102	;'f'
   997  007A82  6F                 	db	111	;'o'
   998  007A83  72                 	db	114	;'r'
   999  007A84  6D                 	db	109	;'m'
  1000  007A85  3E                 	db	62	;'>'
  1001  007A86  3C                 	db	60	;'<'
  1002  007A87  2F                 	db	47
  1003  007A88  62                 	db	98	;'b'
  1004  007A89  6F                 	db	111	;'o'
  1005  007A8A  64                 	db	100	;'d'
  1006  007A8B  79                 	db	121	;'y'
  1007  007A8C  3E                 	db	62	;'>'
  1008  007A8D  3C                 	db	60	;'<'
  1009  007A8E  2F                 	db	47
  1010  007A8F  68                 	db	104	;'h'
  1011  007A90  74                 	db	116	;'t'
  1012  007A91  6D                 	db	109	;'m'
  1013  007A92  6C                 	db	108	;'l'
  1014  007A93  3E                 	db	62	;'>'
  1015  007A94  0D                 	db	13
  1016  007A95  0A                 	db	10
  1017  007A96  0D                 	db	13
  1018  007A97  0A                 	db	10
  1019  007A98  5C                 	db	92	;'\'
  1020  007A99  30                 	db	48	;'0'
  1021  007A9A  00                 	db	0
  1022  007A9B                     STR_59:
  1023  007A9B  47                 	db	71	;'G'
  1024  007A9C  45                 	db	69	;'E'
  1025  007A9D  54                 	db	84	;'T'
  1026  007A9E  20                 	db	32
  1027  007A9F  2F                 	db	47
  1028  007AA0  64                 	db	100	;'d'
  1029  007AA1  65                 	db	101	;'e'
  1030  007AA2  76                 	db	118	;'v'
  1031  007AA3  69                 	db	105	;'i'
  1032  007AA4  63                 	db	99	;'c'
  1033  007AA5  65                 	db	101	;'e'
  1034  007AA6  2F                 	db	47
  1035  007AA7  69                 	db	105	;'i'
  1036  007AA8  6E                 	db	110	;'n'
  1037  007AA9  74                 	db	116	;'t'
  1038  007AAA  65                 	db	101	;'e'
  1039  007AAB  67                 	db	103	;'g'
  1040  007AAC  72                 	db	114	;'r'
  1041  007AAD  61                 	db	97	;'a'
  1042  007AAE  74                 	db	116	;'t'
  1043  007AAF  69                 	db	105	;'i'
  1044  007AB0  6F                 	db	111	;'o'
  1045  007AB1  6E                 	db	110	;'n'
  1046  007AB2  3F                 	db	63	;'?'
  1047  007AB3  69                 	db	105	;'i'
  1048  007AB4  3D                 	db	61	;'='
  1049  007AB5  25                 	db	37
  1050  007AB6  64                 	db	100	;'d'
  1051  007AB7  7C                 	db	124
  1052  007AB8  25                 	db	37
  1053  007AB9  64                 	db	100	;'d'
  1054  007ABA  7C                 	db	124
  1055  007ABB  25                 	db	37
  1056  007ABC  64                 	db	100	;'d'
  1057  007ABD  7C                 	db	124
  1058  007ABE  25                 	db	37
  1059  007ABF  64                 	db	100	;'d'
  1060  007AC0  7C                 	db	124
  1061  007AC1  25                 	db	37
  1062  007AC2  64                 	db	100	;'d'
  1063  007AC3  7C                 	db	124
  1064  007AC4  25                 	db	37
  1065  007AC5  64                 	db	100	;'d'
  1066  007AC6  7C                 	db	124
  1067  007AC7  25                 	db	37
  1068  007AC8  64                 	db	100	;'d'
  1069  007AC9  7C                 	db	124
  1070  007ACA  25                 	db	37
  1071  007ACB  64                 	db	100	;'d'
  1072  007ACC  7C                 	db	124
  1073  007ACD  25                 	db	37
  1074  007ACE  64                 	db	100	;'d'
  1075  007ACF  7C                 	db	124
  1076  007AD0  25                 	db	37
  1077  007AD1  64                 	db	100	;'d'
  1078  007AD2  7C                 	db	124
  1079  007AD3  25                 	db	37
  1080  007AD4  64                 	db	100	;'d'
  1081  007AD5  7C                 	db	124
  1082  007AD6  25                 	db	37
  1083  007AD7  73                 	db	115	;'s'
  1084  007AD8  7C                 	db	124
  1085  007AD9  25                 	db	37
  1086  007ADA  64                 	db	100	;'d'
  1087  007ADB  7C                 	db	124
  1088  007ADC  25                 	db	37
  1089  007ADD  73                 	db	115	;'s'
  1090  007ADE  7C                 	db	124
  1091  007ADF  25                 	db	37
  1092  007AE0  64                 	db	100	;'d'
  1093  007AE1  26                 	db	38
  1094  007AE2  70                 	db	112	;'p'
  1095  007AE3  3D                 	db	61	;'='
  1096  007AE4  25                 	db	37
  1097  007AE5  64                 	db	100	;'d'
  1098  007AE6  7C                 	db	124
  1099  007AE7  25                 	db	37
  1100  007AE8  64                 	db	100	;'d'
  1101  007AE9  7C                 	db	124
  1102  007AEA  25                 	db	37
  1103  007AEB  64                 	db	100	;'d'
  1104  007AEC  7C                 	db	124
  1105  007AED  25                 	db	37
  1106  007AEE  64                 	db	100	;'d'
  1107  007AEF  7C                 	db	124
  1108  007AF0  25                 	db	37
  1109  007AF1  64                 	db	100	;'d'
  1110  007AF2  7C                 	db	124
  1111  007AF3  25                 	db	37
  1112  007AF4  64                 	db	100	;'d'
  1113  007AF5  7C                 	db	124
  1114  007AF6  25                 	db	37
  1115  007AF7  64                 	db	100	;'d'
  1116  007AF8  7C                 	db	124
  1117  007AF9  25                 	db	37
  1118  007AFA  64                 	db	100	;'d'
  1119  007AFB  7C                 	db	124
  1120  007AFC  25                 	db	37
  1121  007AFD  64                 	db	100	;'d'
  1122  007AFE  7C                 	db	124
  1123  007AFF  25                 	db	37
  1124  007B00  64                 	db	100	;'d'
  1125  007B01  7C                 	db	124
  1126  007B02  25                 	db	37
  1127  007B03  64                 	db	100	;'d'
  1128  007B04  7C                 	db	124
  1129  007B05  25                 	db	37
  1130  007B06  64                 	db	100	;'d'
  1131  007B07  7C                 	db	124
  1132  007B08  25                 	db	37
  1133  007B09  64                 	db	100	;'d'
  1134  007B0A  7C                 	db	124
  1135  007B0B  25                 	db	37
  1136  007B0C  64                 	db	100	;'d'
  1137  007B0D  26                 	db	38
  1138  007B0E  6B                 	db	107	;'k'
  1139  007B0F  3D                 	db	61	;'='
  1140  007B10  31                 	db	49	;'1'
  1141  007B11  7A                 	db	122	;'z'
  1142  007B12  34                 	db	52	;'4'
  1143  007B13  64                 	db	100	;'d'
  1144  007B14  66                 	db	102	;'f'
  1145  007B15  36                 	db	54	;'6'
  1146  007B16  38                 	db	56	;'8'
  1147  007B17  69                 	db	105	;'i'
  1148  007B18  77                 	db	119	;'w'
  1149  007B19  31                 	db	49	;'1'
  1150  007B1A  66                 	db	102	;'f'
  1151  007B1B  70                 	db	112	;'p'
  1152  007B1C  35                 	db	53	;'5'
  1153  007B1D  20                 	db	32
  1154  007B1E  48                 	db	72	;'H'
  1155  007B1F  54                 	db	84	;'T'
  1156  007B20  54                 	db	84	;'T'
  1157  007B21  50                 	db	80	;'P'
  1158  007B22  2F                 	db	47
  1159  007B23  31                 	db	49	;'1'
  1160  007B24  2E                 	db	46
  1161  007B25  31                 	db	49	;'1'
  1162  007B26  0D                 	db	13
  1163  007B27  0A                 	db	10
  1164  007B28  48                 	db	72	;'H'
  1165  007B29  6F                 	db	111	;'o'
  1166  007B2A  73                 	db	115	;'s'
  1167  007B2B  74                 	db	116	;'t'
  1168  007B2C  3A                 	db	58	;':'
  1169  007B2D  20                 	db	32
  1170  007B2E  31                 	db	49	;'1'
  1171  007B2F  38                 	db	56	;'8'
  1172  007B30  2E                 	db	46
  1173  007B31  32                 	db	50	;'2'
  1174  007B32  32                 	db	50	;'2'
  1175  007B33  38                 	db	56	;'8'
  1176  007B34  2E                 	db	46
  1177  007B35  31                 	db	49	;'1'
  1178  007B36  35                 	db	53	;'5'
  1179  007B37  34                 	db	52	;'4'
  1180  007B38  2E                 	db	46
  1181  007B39  32                 	db	50	;'2'
  1182  007B3A  34                 	db	52	;'4'
  1183  007B3B  38                 	db	56	;'8'
  1184  007B3C  0D                 	db	13
  1185  007B3D  0A                 	db	10
  1186  007B3E  0D                 	db	13
  1187  007B3F  0A                 	db	10
  1188  007B40  5C                 	db	92	;'\'
  1189  007B41  30                 	db	48	;'0'
  1190  007B42  00                 	db	0
  1191  007B43                     STR_31:
  1192  007B43  48                 	db	72	;'H'
  1193  007B44  54                 	db	84	;'T'
  1194  007B45  54                 	db	84	;'T'
  1195  007B46  50                 	db	80	;'P'
  1196  007B47  20                 	db	32
  1197  007B48  31                 	db	49	;'1'
  1198  007B49  2E                 	db	46
  1199  007B4A  31                 	db	49	;'1'
  1200  007B4B  2F                 	db	47
  1201  007B4C  32                 	db	50	;'2'
  1202  007B4D  30                 	db	48	;'0'
  1203  007B4E  30                 	db	48	;'0'
  1204  007B4F  20                 	db	32
  1205  007B50  4F                 	db	79	;'O'
  1206  007B51  4B                 	db	75	;'K'
  1207  007B52  0D                 	db	13
  1208  007B53  0A                 	db	10
  1209  007B54  43                 	db	67	;'C'
  1210  007B55  6F                 	db	111	;'o'
  1211  007B56  6E                 	db	110	;'n'
  1212  007B57  74                 	db	116	;'t'
  1213  007B58  65                 	db	101	;'e'
  1214  007B59  6E                 	db	110	;'n'
  1215  007B5A  74                 	db	116	;'t'
  1216  007B5B  2D                 	db	45
  1217  007B5C  74                 	db	116	;'t'
  1218  007B5D  79                 	db	121	;'y'
  1219  007B5E  70                 	db	112	;'p'
  1220  007B5F  65                 	db	101	;'e'
  1221  007B60  3A                 	db	58	;':'
  1222  007B61  20                 	db	32
  1223  007B62  74                 	db	116	;'t'
  1224  007B63  65                 	db	101	;'e'
  1225  007B64  78                 	db	120	;'x'
  1226  007B65  74                 	db	116	;'t'
  1227  007B66  2F                 	db	47
  1228  007B67  68                 	db	104	;'h'
  1229  007B68  74                 	db	116	;'t'
  1230  007B69  6D                 	db	109	;'m'
  1231  007B6A  6C                 	db	108	;'l'
  1232  007B6B  0D                 	db	13
  1233  007B6C  0A                 	db	10
  1234  007B6D  0D                 	db	13
  1235  007B6E  0A                 	db	10
  1236  007B6F  00                 	db	0
  1237  007B70                     STR_53:
  1238  007B70  41                 	db	65	;'A'
  1239  007B71  54                 	db	84	;'T'
  1240  007B72  2B                 	db	43
  1241  007B73  43                 	db	67	;'C'
  1242  007B74  49                 	db	73	;'I'
  1243  007B75  50                 	db	80	;'P'
  1244  007B76  53                 	db	83	;'S'
  1245  007B77  54                 	db	84	;'T'
  1246  007B78  41                 	db	65	;'A'
  1247  007B79  52                 	db	82	;'R'
  1248  007B7A  54                 	db	84	;'T'
  1249  007B7B  3D                 	db	61	;'='
  1250  007B7C  22                 	db	34
  1251  007B7D  54                 	db	84	;'T'
  1252  007B7E  43                 	db	67	;'C'
  1253  007B7F  50                 	db	80	;'P'
  1254  007B80  22                 	db	34
  1255  007B81  2C                 	db	44
  1256  007B82  22                 	db	34
  1257  007B83  31                 	db	49	;'1'
  1258  007B84  38                 	db	56	;'8'
  1259  007B85  2E                 	db	46
  1260  007B86  32                 	db	50	;'2'
  1261  007B87  32                 	db	50	;'2'
  1262  007B88  38                 	db	56	;'8'
  1263  007B89  2E                 	db	46
  1264  007B8A  31                 	db	49	;'1'
  1265  007B8B  35                 	db	53	;'5'
  1266  007B8C  34                 	db	52	;'4'
  1267  007B8D  2E                 	db	46
  1268  007B8E  32                 	db	50	;'2'
  1269  007B8F  34                 	db	52	;'4'
  1270  007B90  38                 	db	56	;'8'
  1271  007B91  22                 	db	34
  1272  007B92  2C                 	db	44
  1273  007B93  38                 	db	56	;'8'
  1274  007B94  30                 	db	48	;'0'
  1275  007B95  0D                 	db	13
  1276  007B96  0A                 	db	10
  1277  007B97  00                 	db	0
  1278  007B98                     STR_16:
  1279  007B98  41                 	db	65	;'A'
  1280  007B99  54                 	db	84	;'T'
  1281  007B9A  2B                 	db	43
  1282  007B9B  43                 	db	67	;'C'
  1283  007B9C  57                 	db	87	;'W'
  1284  007B9D  53                 	db	83	;'S'
  1285  007B9E  41                 	db	65	;'A'
  1286  007B9F  50                 	db	80	;'P'
  1287  007BA0  3D                 	db	61	;'='
  1288  007BA1  22                 	db	34
  1289  007BA2  43                 	db	67	;'C'
  1290  007BA3  4F                 	db	79	;'O'
  1291  007BA4  4E                 	db	78	;'N'
  1292  007BA5  54                 	db	84	;'T'
  1293  007BA6  52                 	db	82	;'R'
  1294  007BA7  4F                 	db	79	;'O'
  1295  007BA8  4C                 	db	76	;'L'
  1296  007BA9  41                 	db	65	;'A'
  1297  007BAA  44                 	db	68	;'D'
  1298  007BAB  4F                 	db	79	;'O'
  1299  007BAC  52                 	db	82	;'R'
  1300  007BAD  22                 	db	34
  1301  007BAE  2C                 	db	44
  1302  007BAF  22                 	db	34
  1303  007BB0  22                 	db	34
  1304  007BB1  2C                 	db	44
  1305  007BB2  31                 	db	49	;'1'
  1306  007BB3  31                 	db	49	;'1'
  1307  007BB4  2C                 	db	44
  1308  007BB5  30                 	db	48	;'0'
  1309  007BB6  2C                 	db	44
  1310  007BB7  34                 	db	52	;'4'
  1311  007BB8  0D                 	db	13
  1312  007BB9  0A                 	db	10
  1313  007BBA  00                 	db	0
  1314  007BBB                     STR_18:
  1315  007BBB  41                 	db	65	;'A'
  1316  007BBC  54                 	db	84	;'T'
  1317  007BBD  2B                 	db	43
  1318  007BBE  43                 	db	67	;'C'
  1319  007BBF  49                 	db	73	;'I'
  1320  007BC0  50                 	db	80	;'P'
  1321  007BC1  41                 	db	65	;'A'
  1322  007BC2  50                 	db	80	;'P'
  1323  007BC3  3D                 	db	61	;'='
  1324  007BC4  22                 	db	34
  1325  007BC5  31                 	db	49	;'1'
  1326  007BC6  30                 	db	48	;'0'
  1327  007BC7  2E                 	db	46
  1328  007BC8  31                 	db	49	;'1'
  1329  007BC9  2E                 	db	46
  1330  007BCA  31                 	db	49	;'1'
  1331  007BCB  2E                 	db	46
  1332  007BCC  31                 	db	49	;'1'
  1333  007BCD  22                 	db	34
  1334  007BCE  0D                 	db	13
  1335  007BCF  0A                 	db	10
  1336  007BD0  00                 	db	0
  1337  007BD1                     STR_20:
  1338  007BD1  41                 	db	65	;'A'
  1339  007BD2  54                 	db	84	;'T'
  1340  007BD3  2B                 	db	43
  1341  007BD4  43                 	db	67	;'C'
  1342  007BD5  49                 	db	73	;'I'
  1343  007BD6  50                 	db	80	;'P'
  1344  007BD7  53                 	db	83	;'S'
  1345  007BD8  45                 	db	69	;'E'
  1346  007BD9  52                 	db	82	;'R'
  1347  007BDA  56                 	db	86	;'V'
  1348  007BDB  45                 	db	69	;'E'
  1349  007BDC  52                 	db	82	;'R'
  1350  007BDD  3D                 	db	61	;'='
  1351  007BDE  31                 	db	49	;'1'
  1352  007BDF  2C                 	db	44
  1353  007BE0  38                 	db	56	;'8'
  1354  007BE1  30                 	db	48	;'0'
  1355  007BE2  38                 	db	56	;'8'
  1356  007BE3  30                 	db	48	;'0'
  1357  007BE4  0D                 	db	13
  1358  007BE5  0A                 	db	10
  1359  007BE6  00                 	db	0
  1360  007BE7                     STR_76:
  1361  007BE7  55                 	db	85	;'U'
  1362  007BE8  4D                 	db	77	;'M'
  1363  007BE9  49                 	db	73	;'I'
  1364  007BEA  44                 	db	68	;'D'
  1365  007BEB  20                 	db	32
  1366  007BEC  20                 	db	32
  1367  007BED  7C                 	db	124
  1368  007BEE  20                 	db	32
  1369  007BEF  20                 	db	32
  1370  007BF0  25                 	db	37
  1371  007BF1  33                 	db	51	;'3'
  1372  007BF2  64                 	db	100	;'d'
  1373  007BF3  20                 	db	32
  1374  007BF4  7C                 	db	124
  1375  007BF5  20                 	db	32
  1376  007BF6  25                 	db	37
  1377  007BF7  33                 	db	51	;'3'
  1378  007BF8  64                 	db	100	;'d'
  1379  007BF9  20                 	db	32
  1380  007BFA  25                 	db	37
  1381  007BFB  63                 	db	99	;'c'
  1382  007BFC  00                 	db	0
  1383  007BFD                     STR_49:
  1384  007BFD  41                 	db	65	;'A'
  1385  007BFE  54                 	db	84	;'T'
  1386  007BFF  2B                 	db	43
  1387  007C00  43                 	db	67	;'C'
  1388  007C01  57                 	db	87	;'W'
  1389  007C02  4A                 	db	74	;'J'
  1390  007C03  41                 	db	65	;'A'
  1391  007C04  50                 	db	80	;'P'
  1392  007C05  3D                 	db	61	;'='
  1393  007C06  22                 	db	34
  1394  007C07  25                 	db	37
  1395  007C08  73                 	db	115	;'s'
  1396  007C09  22                 	db	34
  1397  007C0A  2C                 	db	44
  1398  007C0B  22                 	db	34
  1399  007C0C  25                 	db	37
  1400  007C0D  73                 	db	115	;'s'
  1401  007C0E  22                 	db	34
  1402  007C0F  0D                 	db	13
  1403  007C10  0A                 	db	10
  1404  007C11  00                 	db	0
  1405  007C12                     STR_29:
  1406  007C12  41                 	db	65	;'A'
  1407  007C13  54                 	db	84	;'T'
  1408  007C14  2B                 	db	43
  1409  007C15  43                 	db	67	;'C'
  1410  007C16  49                 	db	73	;'I'
  1411  007C17  50                 	db	80	;'P'
  1412  007C18  53                 	db	83	;'S'
  1413  007C19  45                 	db	69	;'E'
  1414  007C1A  4E                 	db	78	;'N'
  1415  007C1B  44                 	db	68	;'D'
  1416  007C1C  45                 	db	69	;'E'
  1417  007C1D  58                 	db	88	;'X'
  1418  007C1E  3D                 	db	61	;'='
  1419  007C1F  30                 	db	48	;'0'
  1420  007C20  2C                 	db	44
  1421  007C21  38                 	db	56	;'8'
  1422  007C22  30                 	db	48	;'0'
  1423  007C23  30                 	db	48	;'0'
  1424  007C24  0D                 	db	13
  1425  007C25  0A                 	db	10
  1426  007C26  00                 	db	0
  1427  007C27                     STR_24:
  1428  007C27  63                 	db	99	;'c'
  1429  007C28  6F                 	db	111	;'o'
  1430  007C29  6E                 	db	110	;'n'
  1431  007C2A  66                 	db	102	;'f'
  1432  007C2B  69                 	db	105	;'i'
  1433  007C2C  67                 	db	103	;'g'
  1434  007C2D  75                 	db	117	;'u'
  1435  007C2E  72                 	db	114	;'r'
  1436  007C2F  61                 	db	97	;'a'
  1437  007C30  72                 	db	114	;'r'
  1438  007C31  20                 	db	32
  1439  007C32  6F                 	db	111	;'o'
  1440  007C33  20                 	db	32
  1441  007C34  57                 	db	87	;'W'
  1442  007C35  49                 	db	73	;'I'
  1443  007C36  46                 	db	70	;'F'
  1444  007C37  49                 	db	73	;'I'
  1445  007C38  2E                 	db	46
  1446  007C39  2E                 	db	46
  1447  007C3A  2E                 	db	46
  1448  007C3B  00                 	db	0
  1449  007C3C                     STR_75:
  1450  007C3C  54                 	db	84	;'T'
  1451  007C3D  45                 	db	69	;'E'
  1452  007C3E  4D                 	db	77	;'M'
  1453  007C3F  50                 	db	80	;'P'
  1454  007C40  20                 	db	32
  1455  007C41  20                 	db	32
  1456  007C42  7C                 	db	124
  1457  007C43  20                 	db	32
  1458  007C44  20                 	db	32
  1459  007C45  25                 	db	37
  1460  007C46  33                 	db	51	;'3'
  1461  007C47  64                 	db	100	;'d'
  1462  007C48  20                 	db	32
  1463  007C49  7C                 	db	124
  1464  007C4A  20                 	db	32
  1465  007C4B  25                 	db	37
  1466  007C4C  33                 	db	51	;'3'
  1467  007C4D  64                 	db	100	;'d'
  1468  007C4E  20                 	db	32
  1469  007C4F  46                 	db	70	;'F'
  1470  007C50  00                 	db	0
  1471  007C51                     STR_78:
  1472  007C51  20                 	db	32
  1473  007C52  2A                 	db	42
  1474  007C53  46                 	db	70	;'F'
  1475  007C54  41                 	db	65	;'A'
  1476  007C55  4C                 	db	76	;'L'
  1477  007C56  54                 	db	84	;'T'
  1478  007C57  41                 	db	65	;'A'
  1479  007C58  20                 	db	32
  1480  007C59  44                 	db	68	;'D'
  1481  007C5A  45                 	db	69	;'E'
  1482  007C5B  20                 	db	32
  1483  007C5C  45                 	db	69	;'E'
  1484  007C5D  4E                 	db	78	;'N'
  1485  007C5E  45                 	db	69	;'E'
  1486  007C5F  52                 	db	82	;'R'
  1487  007C60  47                 	db	71	;'G'
  1488  007C61  49                 	db	73	;'I'
  1489  007C62  41                 	db	65	;'A'
  1490  007C63  2A                 	db	42
  1491  007C64  00                 	db	0
  1492  007C65                     STR_107:
  1493  007C65  43                 	db	67	;'C'
  1494  007C66  4F                 	db	79	;'O'
  1495  007C67  4E                 	db	78	;'N'
  1496  007C68  46                 	db	70	;'F'
  1497  007C69  49                 	db	73	;'I'
  1498  007C6A  47                 	db	71	;'G'
  1499  007C6B  55                 	db	85	;'U'
  1500  007C6C  52                 	db	82	;'R'
  1501  007C6D  41                 	db	65	;'A'
  1502  007C6E  52                 	db	82	;'R'
  1503  007C6F  20                 	db	32
  1504  007C70  20                 	db	32
  1505  007C71  20                 	db	32
  1506  007C72  20                 	db	32
  1507  007C73  20                 	db	32
  1508  007C74  20                 	db	32
  1509  007C75  20                 	db	32
  1510  007C76  3E                 	db	62	;'>'
  1511  007C77  3E                 	db	62	;'>'
  1512  007C78  00                 	db	0
  1513  007C79                     STR_93:
  1514  007C79  43                 	db	67	;'C'
  1515  007C7A  4F                 	db	79	;'O'
  1516  007C7B  4E                 	db	78	;'N'
  1517  007C7C  46                 	db	70	;'F'
  1518  007C7D  49                 	db	73	;'I'
  1519  007C7E  47                 	db	71	;'G'
  1520  007C7F  20                 	db	32
  1521  007C80  57                 	db	87	;'W'
  1522  007C81  49                 	db	73	;'I'
  1523  007C82  46                 	db	70	;'F'
  1524  007C83  49                 	db	73	;'I'
  1525  007C84  20                 	db	32
  1526  007C85  20                 	db	32
  1527  007C86  20                 	db	32
  1528  007C87  20                 	db	32
  1529  007C88  20                 	db	32
  1530  007C89  20                 	db	32
  1531  007C8A  3E                 	db	62	;'>'
  1532  007C8B  3E                 	db	62	;'>'
  1533  007C8C  00                 	db	0
  1534  007C8D                     STR_92:
  1535  007C8D  54                 	db	84	;'T'
  1536  007C8E  45                 	db	69	;'E'
  1537  007C8F  4D                 	db	77	;'M'
  1538  007C90  50                 	db	80	;'P'
  1539  007C91  4F                 	db	79	;'O'
  1540  007C92  20                 	db	32
  1541  007C93  46                 	db	70	;'F'
  1542  007C94  49                 	db	73	;'I'
  1543  007C95  4D                 	db	77	;'M'
  1544  007C96  20                 	db	32
  1545  007C97  46                 	db	70	;'F'
  1546  007C98  41                 	db	65	;'A'
  1547  007C99  53                 	db	83	;'S'
  1548  007C9A  45                 	db	69	;'E'
  1549  007C9B  20                 	db	32
  1550  007C9C  20                 	db	32
  1551  007C9D  20                 	db	32
  1552  007C9E  3E                 	db	62	;'>'
  1553  007C9F  3E                 	db	62	;'>'
  1554  007CA0  00                 	db	0
  1555  007CA1                     STR_94:
  1556  007CA1  43                 	db	67	;'C'
  1557  007CA2  4F                 	db	79	;'O'
  1558  007CA3  4E                 	db	78	;'N'
  1559  007CA4  46                 	db	70	;'F'
  1560  007CA5  49                 	db	73	;'I'
  1561  007CA6  47                 	db	71	;'G'
  1562  007CA7  20                 	db	32
  1563  007CA8  41                 	db	65	;'A'
  1564  007CA9  56                 	db	86	;'V'
  1565  007CAA  41                 	db	65	;'A'
  1566  007CAB  4E                 	db	78	;'N'
  1567  007CAC  43                 	db	67	;'C'
  1568  007CAD  41                 	db	65	;'A'
  1569  007CAE  44                 	db	68	;'D'
  1570  007CAF  41                 	db	65	;'A'
  1571  007CB0  53                 	db	83	;'S'
  1572  007CB1  20                 	db	32
  1573  007CB2  3E                 	db	62	;'>'
  1574  007CB3  3E                 	db	62	;'>'
  1575  007CB4  00                 	db	0
  1576  007CB5                     STR_69:
  1577  007CB5  20                 	db	32
  1578  007CB6  54                 	db	84	;'T'
  1579  007CB7  45                 	db	69	;'E'
  1580  007CB8  43                 	db	67	;'C'
  1581  007CB9  48                 	db	72	;'H'
  1582  007CBA  4E                 	db	78	;'N'
  1583  007CBB  4F                 	db	79	;'O'
  1584  007CBC  57                 	db	87	;'W'
  1585  007CBD  20                 	db	32
  1586  007CBE  54                 	db	84	;'T'
  1587  007CBF  65                 	db	101	;'e'
  1588  007CC0  63                 	db	99	;'c'
  1589  007CC1  6E                 	db	110	;'n'
  1590  007CC2  6F                 	db	111	;'o'
  1591  007CC3  6C                 	db	108	;'l'
  1592  007CC4  6F                 	db	111	;'o'
  1593  007CC5  67                 	db	103	;'g'
  1594  007CC6  69                 	db	105	;'i'
  1595  007CC7  61                 	db	97	;'a'
  1596  007CC8  00                 	db	0
  1597  007CC9                     STR_22:
  1598  007CC9  43                 	db	67	;'C'
  1599  007CCA  6F                 	db	111	;'o'
  1600  007CCB  6E                 	db	110	;'n'
  1601  007CCC  65                 	db	101	;'e'
  1602  007CCD  63                 	db	99	;'c'
  1603  007CCE  74                 	db	116	;'t'
  1604  007CCF  65                 	db	101	;'e'
  1605  007CD0  2D                 	db	45
  1606  007CD1  73                 	db	115	;'s'
  1607  007CD2  65                 	db	101	;'e'
  1608  007CD3  20                 	db	32
  1609  007CD4  61                 	db	97	;'a'
  1610  007CD5  20                 	db	32
  1611  007CD6  72                 	db	114	;'r'
  1612  007CD7  65                 	db	101	;'e'
  1613  007CD8  64                 	db	100	;'d'
  1614  007CD9  65                 	db	101	;'e'
  1615  007CDA  20                 	db	32
  1616  007CDB  65                 	db	101	;'e'
  1617  007CDC  00                 	db	0
  1618  007CDD                     STR_55:
  1619  007CDD  41                 	db	65	;'A'
  1620  007CDE  54                 	db	84	;'T'
  1621  007CDF  2B                 	db	43
  1622  007CE0  43                 	db	67	;'C'
  1623  007CE1  49                 	db	73	;'I'
  1624  007CE2  50                 	db	80	;'P'
  1625  007CE3  53                 	db	83	;'S'
  1626  007CE4  45                 	db	69	;'E'
  1627  007CE5  4E                 	db	78	;'N'
  1628  007CE6  44                 	db	68	;'D'
  1629  007CE7  45                 	db	69	;'E'
  1630  007CE8  58                 	db	88	;'X'
  1631  007CE9  3D                 	db	61	;'='
  1632  007CEA  32                 	db	50	;'2'
  1633  007CEB  36                 	db	54	;'6'
  1634  007CEC  30                 	db	48	;'0'
  1635  007CED  0D                 	db	13
  1636  007CEE  0A                 	db	10
  1637  007CEF  00                 	db	0
  1638  007CF0                     STR_110:
  1639  007CF0  53                 	db	83	;'S'
  1640  007CF1  65                 	db	101	;'e'
  1641  007CF2  63                 	db	99	;'c'
  1642  007CF3  2E                 	db	46
  1643  007CF4  20                 	db	32
  1644  007CF5  46                 	db	70	;'F'
  1645  007CF6  6F                 	db	111	;'o'
  1646  007CF7  6C                 	db	108	;'l'
  1647  007CF8  68                 	db	104	;'h'
  1648  007CF9  61                 	db	97	;'a'
  1649  007CFA  20                 	db	32
  1650  007CFB  3A                 	db	58	;':'
  1651  007CFC  20                 	db	32
  1652  007CFD  25                 	db	37
  1653  007CFE  64                 	db	100	;'d'
  1654  007CFF  20                 	db	32
  1655  007D00  68                 	db	104	;'h'
  1656  007D01  72                 	db	114	;'r'
  1657  007D02  00                 	db	0
  1658  007D03                     STR_108:
  1659  007D03  41                 	db	65	;'A'
  1660  007D04  6D                 	db	109	;'m'
  1661  007D05  61                 	db	97	;'a'
  1662  007D06  72                 	db	114	;'r'
  1663  007D07  65                 	db	101	;'e'
  1664  007D08  6C                 	db	108	;'l'
  1665  007D09  61                 	db	97	;'a'
  1666  007D0A  63                 	db	99	;'c'
  1667  007D0B  61                 	db	97	;'a'
  1668  007D0C  6F                 	db	111	;'o'
  1669  007D0D  20                 	db	32
  1670  007D0E  3A                 	db	58	;':'
  1671  007D0F  20                 	db	32
  1672  007D10  25                 	db	37
  1673  007D11  64                 	db	100	;'d'
  1674  007D12  20                 	db	32
  1675  007D13  68                 	db	104	;'h'
  1676  007D14  72                 	db	114	;'r'
  1677  007D15  00                 	db	0
  1678  007D16                     STR_109:
  1679  007D16  4D                 	db	77	;'M'
  1680  007D17  75                 	db	117	;'u'
  1681  007D18  72                 	db	114	;'r'
  1682  007D19  63                 	db	99	;'c'
  1683  007D1A  68                 	db	104	;'h'
  1684  007D1B  61                 	db	97	;'a'
  1685  007D1C  6D                 	db	109	;'m'
  1686  007D1D  65                 	db	101	;'e'
  1687  007D1E  6E                 	db	110	;'n'
  1688  007D1F  74                 	db	116	;'t'
  1689  007D20  6F                 	db	111	;'o'
  1690  007D21  3A                 	db	58	;':'
  1691  007D22  20                 	db	32
  1692  007D23  25                 	db	37
  1693  007D24  64                 	db	100	;'d'
  1694  007D25  20                 	db	32
  1695  007D26  68                 	db	104	;'h'
  1696  007D27  72                 	db	114	;'r'
  1697  007D28  00                 	db	0
  1698  007D29                     STR_79:
  1699  007D29  54                 	db	84	;'T'
  1700  007D2A  45                 	db	69	;'E'
  1701  007D2B  4D                 	db	77	;'M'
  1702  007D2C  50                 	db	80	;'P'
  1703  007D2D  45                 	db	69	;'E'
  1704  007D2E  52                 	db	82	;'R'
  1705  007D2F  41                 	db	65	;'A'
  1706  007D30  54                 	db	84	;'T'
  1707  007D31  55                 	db	85	;'U'
  1708  007D32  52                 	db	82	;'R'
  1709  007D33  41                 	db	65	;'A'
  1710  007D34  3A                 	db	58	;':'
  1711  007D35  20                 	db	32
  1712  007D36  25                 	db	37
  1713  007D37  64                 	db	100	;'d'
  1714  007D38  20                 	db	32
  1715  007D39  46                 	db	70	;'F'
  1716  007D3A  00                 	db	0
  1717  007D3B                     STR_99:
  1718  007D3B  50                 	db	80	;'P'
  1719  007D3C  39                 	db	57	;'9'
  1720  007D3D  20                 	db	32
  1721  007D3E  3A                 	db	58	;':'
  1722  007D3F  25                 	db	37
  1723  007D40  34                 	db	52	;'4'
  1724  007D41  64                 	db	100	;'d'
  1725  007D42  20                 	db	32
  1726  007D43  7C                 	db	124
  1727  007D44  20                 	db	32
  1728  007D45  50                 	db	80	;'P'
  1729  007D46  31                 	db	49	;'1'
  1730  007D47  33                 	db	51	;'3'
  1731  007D48  3A                 	db	58	;':'
  1732  007D49  25                 	db	37
  1733  007D4A  34                 	db	52	;'4'
  1734  007D4B  64                 	db	100	;'d'
  1735  007D4C  00                 	db	0
  1736  007D4D                     STR_100:
  1737  007D4D  50                 	db	80	;'P'
  1738  007D4E  31                 	db	49	;'1'
  1739  007D4F  30                 	db	48	;'0'
  1740  007D50  3A                 	db	58	;':'
  1741  007D51  25                 	db	37
  1742  007D52  34                 	db	52	;'4'
  1743  007D53  64                 	db	100	;'d'
  1744  007D54  20                 	db	32
  1745  007D55  7C                 	db	124
  1746  007D56  20                 	db	32
  1747  007D57  50                 	db	80	;'P'
  1748  007D58  31                 	db	49	;'1'
  1749  007D59  34                 	db	52	;'4'
  1750  007D5A  3A                 	db	58	;':'
  1751  007D5B  25                 	db	37
  1752  007D5C  34                 	db	52	;'4'
  1753  007D5D  64                 	db	100	;'d'
  1754  007D5E  00                 	db	0
  1755  007D5F                     STR_101:
  1756  007D5F  50                 	db	80	;'P'
  1757  007D60  31                 	db	49	;'1'
  1758  007D61  31                 	db	49	;'1'
  1759  007D62  3A                 	db	58	;':'
  1760  007D63  25                 	db	37
  1761  007D64  34                 	db	52	;'4'
  1762  007D65  64                 	db	100	;'d'
  1763  007D66  20                 	db	32
  1764  007D67  7C                 	db	124
  1765  007D68  20                 	db	32
  1766  007D69  50                 	db	80	;'P'
  1767  007D6A  31                 	db	49	;'1'
  1768  007D6B  35                 	db	53	;'5'
  1769  007D6C  3A                 	db	58	;':'
  1770  007D6D  25                 	db	37
  1771  007D6E  34                 	db	52	;'4'
  1772  007D6F  64                 	db	100	;'d'
  1773  007D70  00                 	db	0
  1774  007D71                     STR_111:
  1775  007D71  2A                 	db	42
  1776  007D72  30                 	db	48	;'0'
  1777  007D73  20                 	db	32
  1778  007D74  6E                 	db	110	;'n'
  1779  007D75  61                 	db	97	;'a'
  1780  007D76  6F                 	db	111	;'o'
  1781  007D77  20                 	db	32
  1782  007D78  70                 	db	112	;'p'
  1783  007D79  61                 	db	97	;'a'
  1784  007D7A  73                 	db	115	;'s'
  1785  007D7B  73                 	db	115	;'s'
  1786  007D7C  61                 	db	97	;'a'
  1787  007D7D  20                 	db	32
  1788  007D7E  66                 	db	102	;'f'
  1789  007D7F  61                 	db	97	;'a'
  1790  007D80  73                 	db	115	;'s'
  1791  007D81  65                 	db	101	;'e'
  1792  007D82  00                 	db	0
  1793  007D83                     STR_23:
  1794  007D83  61                 	db	97	;'a'
  1795  007D84  63                 	db	99	;'c'
  1796  007D85  65                 	db	101	;'e'
  1797  007D86  73                 	db	115	;'s'
  1798  007D87  73                 	db	115	;'s'
  1799  007D88  65                 	db	101	;'e'
  1800  007D89  20                 	db	32
  1801  007D8A  6F                 	db	111	;'o'
  1802  007D8B  20                 	db	32
  1803  007D8C  49                 	db	73	;'I'
  1804  007D8D  50                 	db	80	;'P'
  1805  007D8E  20                 	db	32
  1806  007D8F  70                 	db	112	;'p'
  1807  007D90  61                 	db	97	;'a'
  1808  007D91  72                 	db	114	;'r'
  1809  007D92  61                 	db	97	;'a'
  1810  007D93  00                 	db	0
  1811  007D94                     STR_106:
  1812  007D94  53                 	db	83	;'S'
  1813  007D95  45                 	db	69	;'E'
  1814  007D96  4E                 	db	78	;'N'
  1815  007D97  48                 	db	72	;'H'
  1816  007D98  41                 	db	65	;'A'
  1817  007D99  20                 	db	32
  1818  007D9A  52                 	db	82	;'R'
  1819  007D9B  45                 	db	69	;'E'
  1820  007D9C  4D                 	db	77	;'M'
  1821  007D9D  4F                 	db	79	;'O'
  1822  007D9E  54                 	db	84	;'T'
  1823  007D9F  41                 	db	65	;'A'
  1824  007DA0  3A                 	db	58	;':'
  1825  007DA1  20                 	db	32
  1826  007DA2  25                 	db	37
  1827  007DA3  64                 	db	100	;'d'
  1828  007DA4  00                 	db	0
  1829  007DA5                     STR_95:
  1830  007DA5  50                 	db	80	;'P'
  1831  007DA6  31                 	db	49	;'1'
  1832  007DA7  3A                 	db	58	;':'
  1833  007DA8  25                 	db	37
  1834  007DA9  34                 	db	52	;'4'
  1835  007DAA  64                 	db	100	;'d'
  1836  007DAB  20                 	db	32
  1837  007DAC  7C                 	db	124
  1838  007DAD  20                 	db	32
  1839  007DAE  20                 	db	32
  1840  007DAF  50                 	db	80	;'P'
  1841  007DB0  35                 	db	53	;'5'
  1842  007DB1  3A                 	db	58	;':'
  1843  007DB2  25                 	db	37
  1844  007DB3  34                 	db	52	;'4'
  1845  007DB4  64                 	db	100	;'d'
  1846  007DB5  00                 	db	0
  1847  007DB6                     STR_96:
  1848  007DB6  50                 	db	80	;'P'
  1849  007DB7  32                 	db	50	;'2'
  1850  007DB8  3A                 	db	58	;':'
  1851  007DB9  25                 	db	37
  1852  007DBA  34                 	db	52	;'4'
  1853  007DBB  64                 	db	100	;'d'
  1854  007DBC  20                 	db	32
  1855  007DBD  7C                 	db	124
  1856  007DBE  20                 	db	32
  1857  007DBF  20                 	db	32
  1858  007DC0  50                 	db	80	;'P'
  1859  007DC1  36                 	db	54	;'6'
  1860  007DC2  3A                 	db	58	;':'
  1861  007DC3  25                 	db	37
  1862  007DC4  34                 	db	52	;'4'
  1863  007DC5  64                 	db	100	;'d'
  1864  007DC6  00                 	db	0
  1865  007DC7                     STR_97:
  1866  007DC7  50                 	db	80	;'P'
  1867  007DC8  33                 	db	51	;'3'
  1868  007DC9  3A                 	db	58	;':'
  1869  007DCA  25                 	db	37
  1870  007DCB  34                 	db	52	;'4'
  1871  007DCC  64                 	db	100	;'d'
  1872  007DCD  20                 	db	32
  1873  007DCE  7C                 	db	124
  1874  007DCF  20                 	db	32
  1875  007DD0  20                 	db	32
  1876  007DD1  50                 	db	80	;'P'
  1877  007DD2  37                 	db	55	;'7'
  1878  007DD3  3A                 	db	58	;':'
  1879  007DD4  25                 	db	37
  1880  007DD5  34                 	db	52	;'4'
  1881  007DD6  64                 	db	100	;'d'
  1882  007DD7  00                 	db	0
  1883  007DD8                     STR_98:
  1884  007DD8  50                 	db	80	;'P'
  1885  007DD9  34                 	db	52	;'4'
  1886  007DDA  3A                 	db	58	;':'
  1887  007DDB  25                 	db	37
  1888  007DDC  34                 	db	52	;'4'
  1889  007DDD  64                 	db	100	;'d'
  1890  007DDE  20                 	db	32
  1891  007DDF  7C                 	db	124
  1892  007DE0  20                 	db	32
  1893  007DE1  20                 	db	32
  1894  007DE2  50                 	db	80	;'P'
  1895  007DE3  38                 	db	56	;'8'
  1896  007DE4  3A                 	db	58	;':'
  1897  007DE5  25                 	db	37
  1898  007DE6  34                 	db	52	;'4'
  1899  007DE7  64                 	db	100	;'d'
  1900  007DE8  00                 	db	0
  1901  007DE9                     STR_33:
  1902  007DE9  41                 	db	65	;'A'
  1903  007DEA  54                 	db	84	;'T'
  1904  007DEB  2B                 	db	43
  1905  007DEC  43                 	db	67	;'C'
  1906  007DED  49                 	db	73	;'I'
  1907  007DEE  50                 	db	80	;'P'
  1908  007DEF  43                 	db	67	;'C'
  1909  007DF0  4C                 	db	76	;'L'
  1910  007DF1  4F                 	db	79	;'O'
  1911  007DF2  53                 	db	83	;'S'
  1912  007DF3  45                 	db	69	;'E'
  1913  007DF4  3D                 	db	61	;'='
  1914  007DF5  30                 	db	48	;'0'
  1915  007DF6  0D                 	db	13
  1916  007DF7  0A                 	db	10
  1917  007DF8  00                 	db	0
  1918  007DF9                     STR_50:
  1919  007DF9  41                 	db	65	;'A'
  1920  007DFA  54                 	db	84	;'T'
  1921  007DFB  2B                 	db	43
  1922  007DFC  43                 	db	67	;'C'
  1923  007DFD  49                 	db	73	;'I'
  1924  007DFE  50                 	db	80	;'P'
  1925  007DFF  53                 	db	83	;'S'
  1926  007E00  54                 	db	84	;'T'
  1927  007E01  41                 	db	65	;'A'
  1928  007E02  54                 	db	84	;'T'
  1929  007E03  55                 	db	85	;'U'
  1930  007E04  53                 	db	83	;'S'
  1931  007E05  0D                 	db	13
  1932  007E06  0A                 	db	10
  1933  007E07  00                 	db	0
  1934  007E08                     STR_80:
  1935  007E08  55                 	db	85	;'U'
  1936  007E09  4D                 	db	77	;'M'
  1937  007E0A  49                 	db	73	;'I'
  1938  007E0B  44                 	db	68	;'D'
  1939  007E0C  41                 	db	65	;'A'
  1940  007E0D  44                 	db	68	;'D'
  1941  007E0E  45                 	db	69	;'E'
  1942  007E0F  3A                 	db	58	;':'
  1943  007E10  20                 	db	32
  1944  007E11  25                 	db	37
  1945  007E12  64                 	db	100	;'d'
  1946  007E13  20                 	db	32
  1947  007E14  25                 	db	37
  1948  007E15  63                 	db	99	;'c'
  1949  007E16  00                 	db	0
  1950  007E17                     STR_74:
  1951  007E17  7C                 	db	124
  1952  007E18  53                 	db	83	;'S'
  1953  007E19  65                 	db	101	;'e'
  1954  007E1A  6E                 	db	110	;'n'
  1955  007E1B  73                 	db	115	;'s'
  1956  007E1C  6F                 	db	111	;'o'
  1957  007E1D  72                 	db	114	;'r'
  1958  007E1E  7C                 	db	124
  1959  007E1F  41                 	db	65	;'A'
  1960  007E20  6A                 	db	106	;'j'
  1961  007E21  75                 	db	117	;'u'
  1962  007E22  73                 	db	115	;'s'
  1963  007E23  74                 	db	116	;'t'
  1964  007E24  65                 	db	101	;'e'
  1965  007E25  00                 	db	0
  1966  007E26                     STR_46:
  1967  007E26  41                 	db	65	;'A'
  1968  007E27  54                 	db	84	;'T'
  1969  007E28  2B                 	db	43
  1970  007E29  43                 	db	67	;'C'
  1971  007E2A  49                 	db	73	;'I'
  1972  007E2B  50                 	db	80	;'P'
  1973  007E2C  4D                 	db	77	;'M'
  1974  007E2D  55                 	db	85	;'U'
  1975  007E2E  58                 	db	88	;'X'
  1976  007E2F  3D                 	db	61	;'='
  1977  007E30  30                 	db	48	;'0'
  1978  007E31  0D                 	db	13
  1979  007E32  0A                 	db	10
  1980  007E33  00                 	db	0
  1981  007E34                     STR_44:
  1982  007E34  41                 	db	65	;'A'
  1983  007E35  54                 	db	84	;'T'
  1984  007E36  2B                 	db	43
  1985  007E37  43                 	db	67	;'C'
  1986  007E38  57                 	db	87	;'W'
  1987  007E39  4D                 	db	77	;'M'
  1988  007E3A  4F                 	db	79	;'O'
  1989  007E3B  44                 	db	68	;'D'
  1990  007E3C  45                 	db	69	;'E'
  1991  007E3D  3D                 	db	61	;'='
  1992  007E3E  31                 	db	49	;'1'
  1993  007E3F  0D                 	db	13
  1994  007E40  0A                 	db	10
  1995  007E41  00                 	db	0
  1996  007E42                     STR_14:
  1997  007E42  41                 	db	65	;'A'
  1998  007E43  54                 	db	84	;'T'
  1999  007E44  2B                 	db	43
  2000  007E45  43                 	db	67	;'C'
  2001  007E46  49                 	db	73	;'I'
  2002  007E47  50                 	db	80	;'P'
  2003  007E48  4D                 	db	77	;'M'
  2004  007E49  55                 	db	85	;'U'
  2005  007E4A  58                 	db	88	;'X'
  2006  007E4B  3D                 	db	61	;'='
  2007  007E4C  31                 	db	49	;'1'
  2008  007E4D  0D                 	db	13
  2009  007E4E  0A                 	db	10
  2010  007E4F  00                 	db	0
  2011  007E50                     STR_12:
  2012  007E50  41                 	db	65	;'A'
  2013  007E51  54                 	db	84	;'T'
  2014  007E52  2B                 	db	43
  2015  007E53  43                 	db	67	;'C'
  2016  007E54  57                 	db	87	;'W'
  2017  007E55  4D                 	db	77	;'M'
  2018  007E56  4F                 	db	79	;'O'
  2019  007E57  44                 	db	68	;'D'
  2020  007E58  45                 	db	69	;'E'
  2021  007E59  3D                 	db	61	;'='
  2022  007E5A  32                 	db	50	;'2'
  2023  007E5B  0D                 	db	13
  2024  007E5C  0A                 	db	10
  2025  007E5D  00                 	db	0
  2026  007E5E                     STR_62:
  2027  007E5E  41                 	db	65	;'A'
  2028  007E5F  54                 	db	84	;'T'
  2029  007E60  2B                 	db	43
  2030  007E61  43                 	db	67	;'C'
  2031  007E62  49                 	db	73	;'I'
  2032  007E63  50                 	db	80	;'P'
  2033  007E64  43                 	db	67	;'C'
  2034  007E65  4C                 	db	76	;'L'
  2035  007E66  4F                 	db	79	;'O'
  2036  007E67  53                 	db	83	;'S'
  2037  007E68  45                 	db	69	;'E'
  2038  007E69  0D                 	db	13
  2039  007E6A  0A                 	db	10
  2040  007E6B  00                 	db	0
  2041  007E6C                     STR_43:
  2042  007E6C  4F                 	db	79	;'O'
  2043  007E6D  4B                 	db	75	;'K'
  2044  007E6E  2E                 	db	46
  2045  007E6F  2E                 	db	46
  2046  007E70  2E                 	db	46
  2047  007E71  20                 	db	32
  2048  007E72  20                 	db	32
  2049  007E73  20                 	db	32
  2050  007E74  20                 	db	32
  2051  007E75  20                 	db	32
  2052  007E76  20                 	db	32
  2053  007E77  20                 	db	32
  2054  007E78  20                 	db	32
  2055  007E79  00                 	db	0
  2056  007E7A                     STR_34:
  2057  007E7A  41                 	db	65	;'A'
  2058  007E7B  67                 	db	103	;'g'
  2059  007E7C  75                 	db	117	;'u'
  2060  007E7D  61                 	db	97	;'a'
  2061  007E7E  72                 	db	114	;'r'
  2062  007E7F  64                 	db	100	;'d'
  2063  007E80  61                 	db	97	;'a'
  2064  007E81  6E                 	db	110	;'n'
  2065  007E82  64                 	db	100	;'d'
  2066  007E83  6F                 	db	111	;'o'
  2067  007E84  2E                 	db	46
  2068  007E85  2E                 	db	46
  2069  007E86  2E                 	db	46
  2070  007E87  00                 	db	0
  2071  007E88                     STR_25:
  2072  007E88  31                 	db	49	;'1'
  2073  007E89  30                 	db	48	;'0'
  2074  007E8A  2E                 	db	46
  2075  007E8B  31                 	db	49	;'1'
  2076  007E8C  2E                 	db	46
  2077  007E8D  31                 	db	49	;'1'
  2078  007E8E  2E                 	db	46
  2079  007E8F  31                 	db	49	;'1'
  2080  007E90  3A                 	db	58	;':'
  2081  007E91  38                 	db	56	;'8'
  2082  007E92  30                 	db	48	;'0'
  2083  007E93  38                 	db	56	;'8'
  2084  007E94  30                 	db	48	;'0'
  2085  007E95  00                 	db	0
  2086  007E96                     STR_70:
  2087  007E96  56                 	db	86	;'V'
  2088  007E97  65                 	db	101	;'e'
  2089  007E98  72                 	db	114	;'r'
  2090  007E99  73                 	db	115	;'s'
  2091  007E9A  61                 	db	97	;'a'
  2092  007E9B  6F                 	db	111	;'o'
  2093  007E9C  20                 	db	32
  2094  007E9D  53                 	db	83	;'S'
  2095  007E9E  6F                 	db	111	;'o'
  2096  007E9F  66                 	db	102	;'f'
  2097  007EA0  74                 	db	116	;'t'
  2098  007EA1  2E                 	db	46
  2099  007EA2  3A                 	db	58	;':'
  2100  007EA3  00                 	db	0
  2101  007EA4                     STR_58:
  2102  007EA4  4E                 	db	78	;'N'
  2103  007EA5  6F                 	db	111	;'o'
  2104  007EA6  76                 	db	118	;'v'
  2105  007EA7  20                 	db	32
  2106  007EA8  30                 	db	48	;'0'
  2107  007EA9  39                 	db	57	;'9'
  2108  007EAA  20                 	db	32
  2109  007EAB  32                 	db	50	;'2'
  2110  007EAC  30                 	db	48	;'0'
  2111  007EAD  31                 	db	49	;'1'
  2112  007EAE  39                 	db	57	;'9'
  2113  007EAF  00                 	db	0
  2114  007EB0                     STR_73:
  2115  007EB0  45                 	db	69	;'E'
  2116  007EB1  52                 	db	82	;'R'
  2117  007EB2  52                 	db	82	;'R'
  2118  007EB3  4F                 	db	79	;'O'
  2119  007EB4  20                 	db	32
  2120  007EB5  45                 	db	69	;'E'
  2121  007EB6  45                 	db	69	;'E'
  2122  007EB7  50                 	db	80	;'P'
  2123  007EB8  52                 	db	82	;'R'
  2124  007EB9  4F                 	db	79	;'O'
  2125  007EBA  4D                 	db	77	;'M'
  2126  007EBB  00                 	db	0
  2127  007EBC                     STR_2:
  2128  007EBC  4D                 	db	77	;'M'
  2129  007EBD  75                 	db	117	;'u'
  2130  007EBE  72                 	db	114	;'r'
  2131  007EBF  63                 	db	99	;'c'
  2132  007EC0  68                 	db	104	;'h'
  2133  007EC1  61                 	db	97	;'a'
  2134  007EC2  6D                 	db	109	;'m'
  2135  007EC3  65                 	db	101	;'e'
  2136  007EC4  6E                 	db	110	;'n'
  2137  007EC5  74                 	db	116	;'t'
  2138  007EC6  6F                 	db	111	;'o'
  2139  007EC7  00                 	db	0
  2140  007EC8                     STR_65:
  2141  007EC8  41                 	db	65	;'A'
  2142  007EC9  54                 	db	84	;'T'
  2143  007ECA  2B                 	db	43
  2144  007ECB  43                 	db	67	;'C'
  2145  007ECC  49                 	db	73	;'I'
  2146  007ECD  46                 	db	70	;'F'
  2147  007ECE  53                 	db	83	;'S'
  2148  007ECF  52                 	db	82	;'R'
  2149  007ED0  0D                 	db	13
  2150  007ED1  0A                 	db	10
  2151  007ED2  00                 	db	0
  2152  007ED3                     STR_3:
  2153  007ED3  53                 	db	83	;'S'
  2154  007ED4  65                 	db	101	;'e'
  2155  007ED5  63                 	db	99	;'c'
  2156  007ED6  2E                 	db	46
  2157  007ED7  20                 	db	32
  2158  007ED8  46                 	db	70	;'F'
  2159  007ED9  6F                 	db	111	;'o'
  2160  007EDA  6C                 	db	108	;'l'
  2161  007EDB  68                 	db	104	;'h'
  2162  007EDC  61                 	db	97	;'a'
  2163  007EDD  00                 	db	0
  2164  007EDE                     STR_1:
  2165  007EDE  41                 	db	65	;'A'
  2166  007EDF  6D                 	db	109	;'m'
  2167  007EE0  61                 	db	97	;'a'
  2168  007EE1  72                 	db	114	;'r'
  2169  007EE2  65                 	db	101	;'e'
  2170  007EE3  6C                 	db	108	;'l'
  2171  007EE4  61                 	db	97	;'a'
  2172  007EE5  63                 	db	99	;'c'
  2173  007EE6  61                 	db	97	;'a'
  2174  007EE7  6F                 	db	111	;'o'
  2175  007EE8  00                 	db	0
  2176  007EE9                     STR_85:
  2177  007EE9  41                 	db	65	;'A'
  2178  007EEA  75                 	db	117	;'u'
  2179  007EEB  74                 	db	116	;'t'
  2180  007EEC  6F                 	db	111	;'o'
  2181  007EED  6D                 	db	109	;'m'
  2182  007EEE  61                 	db	97	;'a'
  2183  007EEF  74                 	db	116	;'t'
  2184  007EF0  69                 	db	105	;'i'
  2185  007EF1  63                 	db	99	;'c'
  2186  007EF2  6F                 	db	111	;'o'
  2187  007EF3  00                 	db	0
  2188  007EF4                     STR_88:
  2189  007EF4  44                 	db	68	;'D'
  2190  007EF5  65                 	db	101	;'e'
  2191  007EF6  73                 	db	115	;'s'
  2192  007EF7  74                 	db	116	;'t'
  2193  007EF8  72                 	db	114	;'r'
  2194  007EF9  61                 	db	97	;'a'
  2195  007EFA  76                 	db	118	;'v'
  2196  007EFB  61                 	db	97	;'a'
  2197  007EFC  64                 	db	100	;'d'
  2198  007EFD  6F                 	db	111	;'o'
  2199  007EFE  00                 	db	0
  2200  007EFF                     STR_89:
  2201  007EFF  41                 	db	65	;'A'
  2202  007F00  4C                 	db	76	;'L'
  2203  007F01  41                 	db	65	;'A'
  2204  007F02  52                 	db	82	;'R'
  2205  007F03  4D                 	db	77	;'M'
  2206  007F04  45                 	db	69	;'E'
  2207  007F05  3A                 	db	58	;':'
  2208  007F06  20                 	db	32
  2209  007F07  25                 	db	37
  2210  007F08  73                 	db	115	;'s'
  2211  007F09  00                 	db	0
  2212  007F0A                     STR_91:
  2213  007F0A  44                 	db	68	;'D'
  2214  007F0B  65                 	db	101	;'e'
  2215  007F0C  73                 	db	115	;'s'
  2216  007F0D  6C                 	db	108	;'l'
  2217  007F0E  69                 	db	105	;'i'
  2218  007F0F  67                 	db	103	;'g'
  2219  007F10  61                 	db	97	;'a'
  2220  007F11  64                 	db	100	;'d'
  2221  007F12  6F                 	db	111	;'o'
  2222  007F13  00                 	db	0
  2223  007F14                     STR_4:
  2224  007F14  53                 	db	83	;'S'
  2225  007F15  65                 	db	101	;'e'
  2226  007F16  63                 	db	99	;'c'
  2227  007F17  2E                 	db	46
  2228  007F18  20                 	db	32
  2229  007F19  54                 	db	84	;'T'
  2230  007F1A  61                 	db	97	;'a'
  2231  007F1B  6C                 	db	108	;'l'
  2232  007F1C  6F                 	db	111	;'o'
  2233  007F1D  00                 	db	0
  2234  007F1E                     STR_82:
  2235  007F1E  43                 	db	67	;'C'
  2236  007F1F  4C                 	db	76	;'L'
  2237  007F20  49                 	db	73	;'I'
  2238  007F21  4D                 	db	77	;'M'
  2239  007F22  41                 	db	65	;'A'
  2240  007F23  3A                 	db	58	;':'
  2241  007F24  20                 	db	32
  2242  007F25  25                 	db	37
  2243  007F26  73                 	db	115	;'s'
  2244  007F27  00                 	db	0
  2245  007F28                     STR_86:
  2246  007F28  54                 	db	84	;'T'
  2247  007F29  52                 	db	82	;'R'
  2248  007F2A  41                 	db	65	;'A'
  2249  007F2B  56                 	db	86	;'V'
  2250  007F2C  41                 	db	65	;'A'
  2251  007F2D  3A                 	db	58	;':'
  2252  007F2E  20                 	db	32
  2253  007F2F  25                 	db	37
  2254  007F30  73                 	db	115	;'s'
  2255  007F31  00                 	db	0
  2256  007F32                     STR_77:
  2257  007F32  46                 	db	70	;'F'
  2258  007F33  61                 	db	97	;'a'
  2259  007F34  73                 	db	115	;'s'
  2260  007F35  65                 	db	101	;'e'
  2261  007F36  20                 	db	32
  2262  007F37  7E                 	db	126
  2263  007F38  20                 	db	32
  2264  007F39  25                 	db	37
  2265  007F3A  73                 	db	115	;'s'
  2266  007F3B  00                 	db	0
  2267  007F3C                     STR_102:
  2268  007F3C  50                 	db	80	;'P'
  2269  007F3D  31                 	db	49	;'1'
  2270  007F3E  32                 	db	50	;'2'
  2271  007F3F  3A                 	db	58	;':'
  2272  007F40  25                 	db	37
  2273  007F41  34                 	db	52	;'4'
  2274  007F42  64                 	db	100	;'d'
  2275  007F43  20                 	db	32
  2276  007F44  7C                 	db	124
  2277  007F45  00                 	db	0
  2278  007F46                     STR_68:
  2279  007F46  41                 	db	65	;'A'
  2280  007F47  54                 	db	84	;'T'
  2281  007F48  2B                 	db	43
  2282  007F49  52                 	db	82	;'R'
  2283  007F4A  53                 	db	83	;'S'
  2284  007F4B  54                 	db	84	;'T'
  2285  007F4C  0D                 	db	13
  2286  007F4D  0A                 	db	10
  2287  007F4E  00                 	db	0
  2288  007F4F                     STR_81:
  2289  007F4F  46                 	db	70	;'F'
  2290  007F50  41                 	db	65	;'A'
  2291  007F51  53                 	db	83	;'S'
  2292  007F52  45                 	db	69	;'E'
  2293  007F53  3A                 	db	58	;':'
  2294  007F54  20                 	db	32
  2295  007F55  25                 	db	37
  2296  007F56  73                 	db	115	;'s'
  2297  007F57  00                 	db	0
  2298  007F58                     STR_83:
  2299  007F58  4D                 	db	77	;'M'
  2300  007F59  4F                 	db	79	;'O'
  2301  007F5A  44                 	db	68	;'D'
  2302  007F5B  4F                 	db	79	;'O'
  2303  007F5C  3A                 	db	58	;':'
  2304  007F5D  20                 	db	32
  2305  007F5E  25                 	db	37
  2306  007F5F  73                 	db	115	;'s'
  2307  007F60  00                 	db	0
  2308  007F61                     STR_104:
  2309  007F61  53                 	db	83	;'S'
  2310  007F62  45                 	db	69	;'E'
  2311  007F63  4E                 	db	78	;'N'
  2312  007F64  48                 	db	72	;'H'
  2313  007F65  41                 	db	65	;'A'
  2314  007F66  3A                 	db	58	;':'
  2315  007F67  25                 	db	37
  2316  007F68  73                 	db	115	;'s'
  2317  007F69  00                 	db	0
  2318  007F6A                     STR_28:
  2319  007F6A  43                 	db	67	;'C'
  2320  007F6B  4F                 	db	79	;'O'
  2321  007F6C  4E                 	db	78	;'N'
  2322  007F6D  4E                 	db	78	;'N'
  2323  007F6E  45                 	db	69	;'E'
  2324  007F6F  43                 	db	67	;'C'
  2325  007F70  54                 	db	84	;'T'
  2326  007F71  00                 	db	0
  2327  007F72                     STR_87:
  2328  007F72  54                 	db	84	;'T'
  2329  007F73  72                 	db	114	;'r'
  2330  007F74  61                 	db	97	;'a'
  2331  007F75  76                 	db	118	;'v'
  2332  007F76  61                 	db	97	;'a'
  2333  007F77  64                 	db	100	;'d'
  2334  007F78  6F                 	db	111	;'o'
  2335  007F79  00                 	db	0
  2336  007F7A                     STR_103:
  2337  007F7A  52                 	db	82	;'R'
  2338  007F7B  45                 	db	69	;'E'
  2339  007F7C  44                 	db	68	;'D'
  2340  007F7D  45                 	db	69	;'E'
  2341  007F7E  3A                 	db	58	;':'
  2342  007F7F  25                 	db	37
  2343  007F80  73                 	db	115	;'s'
  2344  007F81  00                 	db	0
  2345  007F82                     STR_112:
  2346  007F82  28                 	db	40
  2347  007F83  6E                 	db	110	;'n'
  2348  007F84  75                 	db	117	;'u'
  2349  007F85  6C                 	db	108	;'l'
  2350  007F86  6C                 	db	108	;'l'
  2351  007F87  29                 	db	41
  2352  007F88  00                 	db	0
  2353  007F89                     STR_39:
  2354  007F89  73                 	db	115	;'s'
  2355  007F8A  65                 	db	101	;'e'
  2356  007F8B  6E                 	db	110	;'n'
  2357  007F8C  68                 	db	104	;'h'
  2358  007F8D  61                 	db	97	;'a'
  2359  007F8E  3D                 	db	61	;'='
  2360  007F8F  00                 	db	0
  2361  007F90                     STR_64:
  2362  007F90  43                 	db	67	;'C'
  2363  007F91  4C                 	db	76	;'L'
  2364  007F92  4F                 	db	79	;'O'
  2365  007F93  53                 	db	83	;'S'
  2366  007F94  45                 	db	69	;'E'
  2367  007F95  44                 	db	68	;'D'
  2368  007F96  00                 	db	0
  2369  007F97                     STR_7:
  2370  007F97  4E                 	db	78	;'N'
  2371  007F98  6F                 	db	111	;'o'
  2372  007F99  72                 	db	114	;'r'
  2373  007F9A  6D                 	db	109	;'m'
  2374  007F9B  61                 	db	97	;'a'
  2375  007F9C  6C                 	db	108	;'l'
  2376  007F9D  00                 	db	0
  2377  007F9E                     STR_84:
  2378  007F9E  4D                 	db	77	;'M'
  2379  007F9F  61                 	db	97	;'a'
  2380  007FA0  6E                 	db	110	;'n'
  2381  007FA1  75                 	db	117	;'u'
  2382  007FA2  61                 	db	97	;'a'
  2383  007FA3  6C                 	db	108	;'l'
  2384  007FA4  00                 	db	0
  2385  007FA5                     STR_90:
  2386  007FA5  4C                 	db	76	;'L'
  2387  007FA6  69                 	db	105	;'i'
  2388  007FA7  67                 	db	103	;'g'
  2389  007FA8  61                 	db	97	;'a'
  2390  007FA9  64                 	db	100	;'d'
  2391  007FAA  6F                 	db	111	;'o'
  2392  007FAB  00                 	db	0
  2393  007FAC                     STR_36:
  2394  007FAC  66                 	db	102	;'f'
  2395  007FAD  69                 	db	105	;'i'
  2396  007FAE  6D                 	db	109	;'m'
  2397  007FAF  73                 	db	115	;'s'
  2398  007FB0  74                 	db	116	;'t'
  2399  007FB1  72                 	db	114	;'r'
  2400  007FB2  00                 	db	0
  2401  007FB3                     STR_105:
  2402  007FB3  4E                 	db	78	;'N'
  2403  007FB4  53                 	db	83	;'S'
  2404  007FB5  3A                 	db	58	;':'
  2405  007FB6  20                 	db	32
  2406  007FB7  25                 	db	37
  2407  007FB8  73                 	db	115	;'s'
  2408  007FB9  00                 	db	0
  2409  007FBA                     STR_27:
  2410  007FBA  41                 	db	65	;'A'
  2411  007FBB  63                 	db	99	;'c'
  2412  007FBC  63                 	db	99	;'c'
  2413  007FBD  65                 	db	101	;'e'
  2414  007FBE  70                 	db	112	;'p'
  2415  007FBF  74                 	db	116	;'t'
  2416  007FC0  00                 	db	0
  2417  007FC1                     STR_37:
  2418  007FC1  73                 	db	115	;'s'
  2419  007FC2  73                 	db	115	;'s'
  2420  007FC3  69                 	db	105	;'i'
  2421  007FC4  64                 	db	100	;'d'
  2422  007FC5  3D                 	db	61	;'='
  2423  007FC6  00                 	db	0
  2424  007FC7                     STR_6:
  2425  007FC7  55                 	db	85	;'U'
  2426  007FC8  6D                 	db	109	;'m'
  2427  007FC9  69                 	db	105	;'i'
  2428  007FCA  64                 	db	100	;'d'
  2429  007FCB  6F                 	db	111	;'o'
  2430  007FCC  00                 	db	0
  2431  007FCD                     STR_26:
  2432  007FCD  2B                 	db	43
  2433  007FCE  49                 	db	73	;'I'
  2434  007FCF  50                 	db	80	;'P'
  2435  007FD0  44                 	db	68	;'D'
  2436  007FD1  00                 	db	0
  2437  007FD2                     STR_35:
  2438  007FD2  73                 	db	115	;'s'
  2439  007FD3  73                 	db	115	;'s'
  2440  007FD4  69                 	db	105	;'i'
  2441  007FD5  64                 	db	100	;'d'
  2442  007FD6  00                 	db	0
  2443  007FD7                     STR_61:
  2444  007FD7  73                 	db	115	;'s'
  2445  007FD8  61                 	db	97	;'a'
  2446  007FD9  76                 	db	118	;'v'
  2447  007FDA  65                 	db	101	;'e'
  2448  007FDB  00                 	db	0
  2449  007FDC                     STR_48:
  2450  007FDC  6C                 	db	108	;'l'
  2451  007FDD  69                 	db	105	;'i'
  2452  007FDE  6E                 	db	110	;'n'
  2453  007FDF  6B                 	db	107	;'k'
  2454  007FE0  00                 	db	0
  2455  007FE1                     STR_8:
  2456  007FE1  53                 	db	83	;'S'
  2457  007FE2  65                 	db	101	;'e'
  2458  007FE3  63                 	db	99	;'c'
  2459  007FE4  6F                 	db	111	;'o'
  2460  007FE5  00                 	db	0
  2461  007FE6                     STR_5:
  2462  007FE6  2D                 	db	45
  2463  007FE7  20                 	db	32
  2464  007FE8  2D                 	db	45
  2465  007FE9  00                 	db	0
  2466  007FEA                     STR_60:
  2467  007FEA  32                 	db	50	;'2'
  2468  007FEB  30                 	db	48	;'0'
  2469  007FEC  30                 	db	48	;'0'
  2470  007FED  00                 	db	0
  2471  007FEE                     STR_66:
  2472  007FEE  4D                 	db	77	;'M'
  2473  007FEF  41                 	db	65	;'A'
  2474  007FF0  43                 	db	67	;'C'
  2475  007FF1  00                 	db	0
  2476  007FF2                     STR_9:
  2477  007FF2  2D                 	db	45
  2478  007FF3  2D                 	db	45
  2479  007FF4  00                 	db	0
  2480  007FF5                     STR_13:
  2481  007FF5  4F                 	db	79	;'O'
  2482  007FF6  4B                 	db	75	;'K'
  2483  007FF7  00                 	db	0
  2484  007FF8                     STR_38:
  2485  007FF8  26                 	db	38
  2486  007FF9  00                 	db	0
  2487  007FFA                     STR_51:
  2488  007FFA  32                 	db	50	;'2'
  2489  007FFB  00                 	db	0
  2490  007FFC                     STR_52:
  2491  007FFC  34                 	db	52	;'4'
  2492  007FFD  00                 	db	0
  2493  0000                     
  2494                           ; #config settings
  2495  007FFE  00                 	db	0	; dummy byte at the end
  2496  0000                     
  2497                           	psect	cinit
  2498  005372                     __pcinit:
  2499                           	opt stack 0
  2500  005372                     start_initialization:
  2501                           	opt stack 0
  2502  005372                     __initialization:
  2503                           	opt stack 0
  2504                           
  2505                           ; Initialize objects allocated to BANK2 (24 bytes)
  2506                           ; load TBLPTR registers with __pidataBANK2
  2507  005372  0E8A               	movlw	low __pidataBANK2
  2508  005374  6EF6               	movwf	tblptrl,c
  2509  005376  0E5E               	movlw	high __pidataBANK2
  2510  005378  6EF7               	movwf	tblptrh,c
  2511  00537A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2512  00537C  6EF8               	movwf	tblptru,c
  2513  00537E  EE02  F0B0         	lfsr	0,__pdataBANK2
  2514  005382  EE10 F018          	lfsr	1,24
  2515  005386                     copy_data0:
  2516  005386  0009               	tblrd		*+
  2517  005388  CFF5 FFEE          	movff	tablat,postinc0
  2518  00538C  50E5               	movf	postdec1,w,c
  2519  00538E  50E1               	movf	fsr1l,w,c
  2520  005390  E1FA               	bnz	copy_data0
  2521                           
  2522                           ; Initialize objects allocated to BANK0 (5 bytes)
  2523                           ; load TBLPTR registers with __pidataBANK0
  2524  005392  0E20               	movlw	low __pidataBANK0
  2525  005394  6EF6               	movwf	tblptrl,c
  2526  005396  0E5F               	movlw	high __pidataBANK0
  2527  005398  6EF7               	movwf	tblptrh,c
  2528  00539A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2529  00539C  6EF8               	movwf	tblptru,c
  2530  00539E  EE00  F0FB         	lfsr	0,__pdataBANK0
  2531  0053A2  EE10 F005          	lfsr	1,5
  2532  0053A6                     copy_data1:
  2533  0053A6  0009               	tblrd		*+
  2534  0053A8  CFF5 FFEE          	movff	tablat,postinc0
  2535  0053AC  50E5               	movf	postdec1,w,c
  2536  0053AE  50E1               	movf	fsr1l,w,c
  2537  0053B0  E1FA               	bnz	copy_data1
  2538                           
  2539                           ; Initialize objects allocated to COMRAM (1 bytes)
  2540                           ; load TBLPTR registers with __pidataCOMRAM
  2541  0053B2  0E25               	movlw	low __pidataCOMRAM
  2542  0053B4  6EF6               	movwf	tblptrl,c
  2543  0053B6  0E5F               	movlw	high __pidataCOMRAM
  2544  0053B8  6EF7               	movwf	tblptrh,c
  2545  0053BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2546  0053BC  6EF8               	movwf	tblptru,c
  2547  0053BE  0009               	tblrd		*+	;fetch initializer
  2548  0053C0  CFF5 F050          	movff	tablat,__pdataCOMRAM
  2549                           
  2550                           ; Clear objects allocated to BANK2 (176 bytes)
  2551  0053C4  EE02  F000         	lfsr	0,__pbssBANK2
  2552  0053C8  0EB0               	movlw	176
  2553  0053CA                     clear_0:
  2554  0053CA  6AEE               	clrf	postinc0,c
  2555  0053CC  06E8               	decf	wreg,f,c
  2556  0053CE  E1FD               	bnz	clear_0
  2557                           
  2558                           ; Clear objects allocated to BANK1 (95 bytes)
  2559  0053D0  EE01  F096         	lfsr	0,__pbssBANK1
  2560  0053D4  0E5F               	movlw	95
  2561  0053D6                     clear_1:
  2562  0053D6  6AEE               	clrf	postinc0,c
  2563  0053D8  06E8               	decf	wreg,f,c
  2564  0053DA  E1FD               	bnz	clear_1
  2565                           
  2566                           ; Clear objects allocated to BANK0 (18 bytes)
  2567  0053DC  EE00  F0E9         	lfsr	0,__pbssBANK0
  2568  0053E0  0E12               	movlw	18
  2569  0053E2                     clear_2:
  2570  0053E2  6AEE               	clrf	postinc0,c
  2571  0053E4  06E8               	decf	wreg,f,c
  2572  0053E6  E1FD               	bnz	clear_2
  2573                           
  2574                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2575  0053E8  6A4F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2576                           
  2577                           ; Clear objects allocated to COMRAM (30 bytes)
  2578  0053EA  EE00  F031         	lfsr	0,__pbssCOMRAM
  2579  0053EE  0E1E               	movlw	30
  2580  0053F0                     clear_3:
  2581  0053F0  6AEE               	clrf	postinc0,c
  2582  0053F2  06E8               	decf	wreg,f,c
  2583  0053F4  E1FD               	bnz	clear_3
  2584  0053F6                     end_of_initialization:
  2585                           	opt stack 0
  2586  0053F6                     __end_of__initialization:
  2587                           	opt stack 0
  2588  0053F6  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2589  0053F8  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2590  0053FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2591  0053FC  6EF8               	movwf	tblptru,c
  2592  0053FE  0100               	movlb	0
  2593  005400  EF09  F000         	goto	_main	;jump to C main() function
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           postinc0	equ	0xFEE
  2599                           wreg	equ	0xFE8
  2600                           postdec1	equ	0xFE5
  2601                           fsr1l	equ	0xFE1
  2602                           
  2603                           	psect	bitbssCOMRAM
  2604  000278                     __pbitbssCOMRAM:
  2605                           	opt stack 0
  2606  000278                     _contador_fase_automatica:
  2607                           	opt stack 0
  2608  000278                     	ds	1
  2609  000279                     _md_seguranca:
  2610                           	opt stack 0
  2611  000279                     	ds	1
  2612  00027A                     _blinkk:
  2613                           	opt stack 0
  2614  00027A                     	ds	1
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           postdec1	equ	0xFE5
  2622                           fsr1l	equ	0xFE1
  2623                           
  2624                           	psect	bssCOMRAM
  2625  000031                     __pbssCOMRAM:
  2626                           	opt stack 0
  2627  000031                     strtok@sp:
  2628                           	opt stack 0
  2629  000031                     	ds	2
  2630  000033                     _t_controle_modo_seguranca:
  2631                           	opt stack 0
  2632  000033                     	ds	2
  2633  000035                     _t_controle_religar_ventoinha:
  2634                           	opt stack 0
  2635  000035                     	ds	2
  2636  000037                     _t_controle_religar_buzzer:
  2637                           	opt stack 0
  2638  000037                     	ds	2
  2639  000039                     _t_controle_flap:
  2640                           	opt stack 0
  2641  000039                     	ds	2
  2642  00003B                     _media_adc:
  2643                           	opt stack 0
  2644  00003B                     	ds	1
  2645  00003C                     _t_leitura_adc:
  2646                           	opt stack 0
  2647  00003C                     	ds	1
  2648  00003D                     _t_controle_temp_automatica:
  2649                           	opt stack 0
  2650  00003D                     	ds	1
  2651  00003E                     _t_controle_blink:
  2652                           	opt stack 0
  2653  00003E                     	ds	1
  2654  00003F                     _t_controle_buzzer:
  2655                           	opt stack 0
  2656  00003F                     	ds	1
  2657  000040                     _t_controle_fim_fases:
  2658                           	opt stack 0
  2659  000040                     	ds	1
  2660  000041                     _f_buzzer_falta_energia:
  2661                           	opt stack 0
  2662  000041                     	ds	1
  2663  000042                     __acao_flap:
  2664                           	opt stack 0
  2665  000042                     	ds	1
  2666  000043                     _cbf:
  2667                           	opt stack 0
  2668  000043                     	ds	1
  2669  000044                     _bt_flag:
  2670                           	opt stack 0
  2671  000044                     	ds	1
  2672  000045                     _leds:
  2673                           	opt stack 0
  2674  000045                     	ds	1
  2675  000046                     _hor:
  2676                           	opt stack 0
  2677  000046                     	ds	1
  2678  000047                     _min:
  2679                           	opt stack 0
  2680  000047                     	ds	1
  2681  000048                     _sec:
  2682                           	opt stack 0
  2683  000048                     	ds	1
  2684  000049                     __sec:
  2685                           	opt stack 0
  2686  000049                     	ds	1
  2687  00004A                     _base_sec:
  2688                           	opt stack 0
  2689  00004A                     	ds	1
  2690  00004B                     _lcd_rfsh:
  2691                           	opt stack 0
  2692  00004B                     	ds	1
  2693  00004C                     _t_fim_fase3:
  2694                           	opt stack 0
  2695  00004C                     	ds	1
  2696  00004D                     _t_fim_fase2:
  2697                           	opt stack 0
  2698  00004D                     	ds	1
  2699  00004E                     _t_fim_fase1:
  2700                           	opt stack 0
  2701  00004E                     	ds	1
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           postdec1	equ	0xFE5
  2709                           fsr1l	equ	0xFE1
  2710                           
  2711                           	psect	dataCOMRAM
  2712  000050                     __pdataCOMRAM:
  2713                           	opt stack 0
  2714  000050                     __led:
  2715                           	opt stack 0
  2716  000050                     	ds	1
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           postdec1	equ	0xFE5
  2724                           fsr1l	equ	0xFE1
  2725                           
  2726                           	psect	bssBANK0
  2727  0000E9                     __pbssBANK0:
  2728                           	opt stack 0
  2729  0000E9                     _umidajt:
  2730                           	opt stack 0
  2731  0000E9                     	ds	1
  2732  0000EA                     _tempajt:
  2733                           	opt stack 0
  2734  0000EA                     	ds	1
  2735  0000EB                     _clima:
  2736                           	opt stack 0
  2737  0000EB                     	ds	1
  2738  0000EC                     _fase:
  2739                           	opt stack 0
  2740  0000EC                     	ds	1
  2741  0000ED                     _h_subir_temp_automatica:
  2742                           	opt stack 0
  2743  0000ED                     	ds	1
  2744  0000EE                     _h_buzzer:
  2745                           	opt stack 0
  2746  0000EE                     	ds	1
  2747  0000EF                     _h_abafador:
  2748                           	opt stack 0
  2749  0000EF                     	ds	1
  2750  0000F0                     _h_venotinha:
  2751                           	opt stack 0
  2752  0000F0                     	ds	1
  2753  0000F1                     _h_modo_seguranca:
  2754                           	opt stack 0
  2755  0000F1                     	ds	1
  2756  0000F2                     _t_religar_ventoinha_automatica:
  2757                           	opt stack 0
  2758  0000F2                     	ds	1
  2759  0000F3                     _t_temp_automatica:
  2760                           	opt stack 0
  2761  0000F3                     	ds	1
  2762  0000F4                     _t_flap_intervalo:
  2763                           	opt stack 0
  2764  0000F4                     	ds	1
  2765  0000F5                     _t_flap_ligado:
  2766                           	opt stack 0
  2767  0000F5                     	ds	1
  2768  0000F6                     _tipo_modo_trabalho:
  2769                           	opt stack 0
  2770  0000F6                     	ds	1
  2771  0000F7                     _tipo_sensor_umidade:
  2772                           	opt stack 0
  2773  0000F7                     	ds	1
  2774  0000F8                     _trava_fase:
  2775                           	opt stack 0
  2776  0000F8                     	ds	1
  2777  0000F9                     _fornalha:
  2778                           	opt stack 0
  2779  0000F9                     	ds	1
  2780  0000FA                     _buzzer:
  2781                           	opt stack 0
  2782  0000FA                     	ds	1
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           postdec1	equ	0xFE5
  2790                           fsr1l	equ	0xFE1
  2791                           
  2792                           	psect	dataBANK0
  2793  0000FB                     __pdataBANK0:
  2794                           	opt stack 0
  2795  0000FB                     _menu:
  2796                           	opt stack 0
  2797  0000FB                     	ds	1
  2798  0000FC                     _umid:
  2799                           	opt stack 0
  2800  0000FC                     	ds	1
  2801  0000FD                     _temp:
  2802                           	opt stack 0
  2803  0000FD                     	ds	1
  2804  0000FE                     _f_falta_energia:
  2805                           	opt stack 0
  2806  0000FE                     	ds	1
  2807  0000FF                     _t_buzzer_religar:
  2808                           	opt stack 0
  2809  0000FF                     	ds	1
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           postdec1	equ	0xFE5
  2817                           fsr1l	equ	0xFE1
  2818                           
  2819                           	psect	bssBANK1
  2820  000196                     __pbssBANK1:
  2821                           	opt stack 0
  2822  000196                     _f_wifi_processo:
  2823                           	opt stack 0
  2824  000196                     	ds	1
  2825  000197                     _t_wifi_restart:
  2826                           	opt stack 0
  2827  000197                     	ds	1
  2828  000198                     _ajuste_parametro:
  2829                           	opt stack 0
  2830  000198                     	ds	1
  2831  000199                     _opcaomenu:
  2832                           	opt stack 0
  2833  000199                     	ds	1
  2834  00019A                     _wifi_conectado:
  2835                           	opt stack 0
  2836  00019A                     	ds	1
  2837  00019B                     _line4:
  2838                           	opt stack 0
  2839  00019B                     	ds	21
  2840  0001B0                     _line3:
  2841                           	opt stack 0
  2842  0001B0                     	ds	21
  2843  0001C5                     _line2:
  2844                           	opt stack 0
  2845  0001C5                     	ds	21
  2846  0001DA                     _line1:
  2847                           	opt stack 0
  2848  0001DA                     	ds	21
  2849  0001EF                     _wifi_SENHA:
  2850                           	opt stack 0
  2851  0001EF                     	ds	2
  2852  0001F1                     _wifi_habilita_alteracao:
  2853                           	opt stack 0
  2854  0001F1                     	ds	2
  2855  0001F3                     _senha_desbloqueio_func:
  2856                           	opt stack 0
  2857  0001F3                     	ds	1
  2858  0001F4                     _h_flap:
  2859                           	opt stack 0
  2860  0001F4                     	ds	1
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           fsr1l	equ	0xFE1
  2869                           
  2870                           	psect	bssBANK2
  2871  000200                     __pbssBANK2:
  2872                           	opt stack 0
  2873  000200                     __umid:
  2874                           	opt stack 0
  2875  000200                     	ds	33
  2876  000221                     __temp:
  2877                           	opt stack 0
  2878  000221                     	ds	33
  2879  000242                     _bufferSerial:
  2880                           	opt stack 0
  2881  000242                     	ds	80
  2882  000292                     _senha:
  2883                           	opt stack 0
  2884  000292                     	ds	15
  2885  0002A1                     _ssid:
  2886                           	opt stack 0
  2887  0002A1                     	ds	15
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           postdec1	equ	0xFE5
  2895                           fsr1l	equ	0xFE1
  2896                           
  2897                           	psect	dataBANK2
  2898  0002B0                     __pdataBANK2:
  2899                           	opt stack 0
  2900  0002B0                     _wifi_MAC:
  2901                           	opt stack 0
  2902  0002B0                     	ds	24
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1l	equ	0xFE1
  2911                           
  2912                           	psect	cstackBANK1
  2913  000100                     __pcstackBANK1:
  2914                           	opt stack 0
  2915  000100                     filtroStr@_str:
  2916                           	opt stack 0
  2917                           
  2918                           ; 82 bytes @ 0x0
  2919  000100                     	ds	82
  2920  000152                     filtroStr@aux:
  2921                           	opt stack 0
  2922                           
  2923                           ; 60 bytes @ 0x52
  2924  000152                     	ds	60
  2925  00018E                     _filtroStr$1335:
  2926                           	opt stack 0
  2927                           
  2928                           ; 2 bytes @ 0x8E
  2929  00018E                     	ds	2
  2930  000190                     filtroStr@y:
  2931                           	opt stack 0
  2932                           
  2933                           ; 1 bytes @ 0x90
  2934  000190                     	ds	1
  2935  000191                     filtroStr@count:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x91
  2939  000191                     	ds	1
  2940  000192                     filtroStr@x:
  2941                           	opt stack 0
  2942                           
  2943                           ; 1 bytes @ 0x92
  2944  000192                     	ds	1
  2945  000193                     filtroStr@p:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x93
  2949  000193                     	ds	2
  2950  000195                     filtroStr@i:
  2951                           	opt stack 0
  2952                           
  2953                           ; 1 bytes @ 0x95
  2954  000195                     	ds	1
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           postinc0	equ	0xFEE
  2960                           wreg	equ	0xFE8
  2961                           postdec1	equ	0xFE5
  2962                           fsr1l	equ	0xFE1
  2963                           
  2964                           	psect	cstackBANK0
  2965  000060                     __pcstackBANK0:
  2966                           	opt stack 0
  2967  000060                     ??_isdigit:
  2968  000060                     ??_I2C_Wait:
  2969  000060                     ?_strlen:
  2970                           	opt stack 0
  2971  000060                     ?_faseAtual:
  2972                           	opt stack 0
  2973  000060                     ?_climaAtual:
  2974                           	opt stack 0
  2975  000060                     ?_strchr:
  2976                           	opt stack 0
  2977  000060                     ?_tabelaUmidade:
  2978                           	opt stack 0
  2979  000060                     ?_readADC:
  2980                           	opt stack 0
  2981  000060                     ?___wmul:
  2982                           	opt stack 0
  2983  000060                     ?___lwdiv:
  2984                           	opt stack 0
  2985  000060                     ?___ftpack:
  2986                           	opt stack 0
  2987  000060                     ?___lldiv:
  2988                           	opt stack 0
  2989  000060                     setLed@acao:
  2990                           	opt stack 0
  2991  000060                     Lcd_Port@a:
  2992                           	opt stack 0
  2993  000060                     btPress@bt:
  2994                           	opt stack 0
  2995  000060                     putch@c:
  2996                           	opt stack 0
  2997  000060                     blink@line:
  2998                           	opt stack 0
  2999  000060                     tabelaUmidade@_tmp:
  3000                           	opt stack 0
  3001  000060                     faseAtual@_fase:
  3002                           	opt stack 0
  3003  000060                     delay@x:
  3004                           	opt stack 0
  3005  000060                     ___wmul@multiplier:
  3006                           	opt stack 0
  3007  000060                     ___lwdiv@dividend:
  3008                           	opt stack 0
  3009  000060                     memset@p1:
  3010                           	opt stack 0
  3011  000060                     strlen@s:
  3012                           	opt stack 0
  3013  000060                     strncpy@to:
  3014                           	opt stack 0
  3015  000060                     strchr@ptr:
  3016                           	opt stack 0
  3017  000060                     ___ftpack@arg:
  3018                           	opt stack 0
  3019  000060                     ___ftge@ff1:
  3020                           	opt stack 0
  3021  000060                     ___lldiv@dividend:
  3022                           	opt stack 0
  3023                           
  3024                           ; 4 bytes @ 0x0
  3025  000060                     	ds	1
  3026  000061                     ??_Lcd_Cmd:
  3027  000061                     ?_I2C_Read:
  3028                           	opt stack 0
  3029  000061                     setLed@led:
  3030                           	opt stack 0
  3031  000061                     Lcd_Write_Char@tempp:
  3032                           	opt stack 0
  3033  000061                     _isdigit$1991:
  3034                           	opt stack 0
  3035  000061                     I2C_Write@d:
  3036                           	opt stack 0
  3037  000061                     I2C_Read@a:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x1
  3041  000061                     	ds	1
  3042  000062                     ??_delay:
  3043  000062                     ??_strlen:
  3044  000062                     ??_readADC:
  3045  000062                     Lcd_Cmd@a:
  3046                           	opt stack 0
  3047  000062                     Lcd_Write_Char@y:
  3048                           	opt stack 0
  3049  000062                     blink@start:
  3050                           	opt stack 0
  3051  000062                     climaAtual@c:
  3052                           	opt stack 0
  3053  000062                     isdigit@c:
  3054                           	opt stack 0
  3055  000062                     tabelaUmidade@_clima:
  3056                           	opt stack 0
  3057  000062                     faseAtual@_tempajt:
  3058                           	opt stack 0
  3059  000062                     acaoFlap@tempo_ativado:
  3060                           	opt stack 0
  3061  000062                     ___wmul@multiplicand:
  3062                           	opt stack 0
  3063  000062                     ___lwdiv@divisor:
  3064                           	opt stack 0
  3065  000062                     memset@c:
  3066                           	opt stack 0
  3067  000062                     strncpy@from:
  3068                           	opt stack 0
  3069  000062                     strchr@chr:
  3070                           	opt stack 0
  3071                           
  3072                           ; 2 bytes @ 0x2
  3073  000062                     	ds	1
  3074  000063                     ??_Lcd_Init:
  3075  000063                     Lcd_Set_Cursor@b:
  3076                           	opt stack 0
  3077  000063                     Lcd_Write_Char@a:
  3078                           	opt stack 0
  3079  000063                     blink@end:
  3080                           	opt stack 0
  3081  000063                     writeEEPROM_ext@data:
  3082                           	opt stack 0
  3083  000063                     ___ftpack@exp:
  3084                           	opt stack 0
  3085  000063                     I2C_Read@temp:
  3086                           	opt stack 0
  3087  000063                     ___ftge@ff2:
  3088                           	opt stack 0
  3089                           
  3090                           ; 3 bytes @ 0x3
  3091  000063                     	ds	1
  3092  000064                     ??_strchr:
  3093  000064                     ??_criaCaracteresCGRAM:
  3094  000064                     Lcd_Set_Cursor@a:
  3095                           	opt stack 0
  3096  000064                     blink@i:
  3097                           	opt stack 0
  3098  000064                     tabelaUmidade@_tipo_sensor:
  3099                           	opt stack 0
  3100  000064                     writeEEPROM_ext@adress:
  3101                           	opt stack 0
  3102  000064                     faseAtual@_fasee:
  3103                           	opt stack 0
  3104  000064                     ___ftpack@sign:
  3105                           	opt stack 0
  3106  000064                     Lcd_Write_String@a:
  3107                           	opt stack 0
  3108  000064                     acaoFlap@tempo_aguardar:
  3109                           	opt stack 0
  3110  000064                     ___wmul@product:
  3111                           	opt stack 0
  3112  000064                     ___lwdiv@quotient:
  3113                           	opt stack 0
  3114  000064                     memset@n:
  3115                           	opt stack 0
  3116  000064                     strlen@cp:
  3117                           	opt stack 0
  3118  000064                     strncpy@size:
  3119                           	opt stack 0
  3120  000064                     ___lldiv@divisor:
  3121                           	opt stack 0
  3122                           
  3123                           ; 4 bytes @ 0x4
  3124  000064                     	ds	1
  3125  000065                     ??___ftpack:
  3126  000065                     ??_tabelaUmidade:
  3127  000065                     Lcd_Set_Cursor@z:
  3128                           	opt stack 0
  3129  000065                     readEEPROM_ext@adress:
  3130                           	opt stack 0
  3131  000065                     faseAtual@tp:
  3132                           	opt stack 0
  3133  000065                     setRangeValor@_var_ajt:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x5
  3137  000065                     	ds	1
  3138  000066                     ??_acaoFlap:
  3139  000066                     ??___ftge:
  3140  000066                     ?_strncmp:
  3141                           	opt stack 0
  3142  000066                     ?_strspn:
  3143                           	opt stack 0
  3144  000066                     ?_strcspn:
  3145                           	opt stack 0
  3146  000066                     Lcd_Set_Cursor@y:
  3147                           	opt stack 0
  3148  000066                     Lcd_Write_String@i:
  3149                           	opt stack 0
  3150  000066                     readEEPROM_ext@data:
  3151                           	opt stack 0
  3152  000066                     faseAtual@tmpajt:
  3153                           	opt stack 0
  3154  000066                     ___lwdiv@counter:
  3155                           	opt stack 0
  3156  000066                     readADC@digital:
  3157                           	opt stack 0
  3158  000066                     memset@p:
  3159                           	opt stack 0
  3160  000066                     strncpy@cp:
  3161                           	opt stack 0
  3162  000066                     strcspn@s1:
  3163                           	opt stack 0
  3164  000066                     strncmp@s1:
  3165                           	opt stack 0
  3166  000066                     strspn@s1:
  3167                           	opt stack 0
  3168                           
  3169                           ; 2 bytes @ 0x6
  3170  000066                     	ds	1
  3171  000067                     ?___lwmod:
  3172                           	opt stack 0
  3173  000067                     Lcd_Set_Cursor@temp:
  3174                           	opt stack 0
  3175  000067                     tabelaUmidade@_umd:
  3176                           	opt stack 0
  3177  000067                     setRangeValor@_min:
  3178                           	opt stack 0
  3179  000067                     acaoFlap@acao:
  3180                           	opt stack 0
  3181  000067                     ___lwmod@dividend:
  3182                           	opt stack 0
  3183  000067                     criaCaracteresCGRAM@character:
  3184                           	opt stack 0
  3185                           
  3186                           ; 56 bytes @ 0x7
  3187  000067                     	ds	1
  3188  000068                     ??_controle:
  3189  000068                     setRangeValor@_max:
  3190                           	opt stack 0
  3191  000068                     readADC@canal:
  3192                           	opt stack 0
  3193  000068                     atualizaLCD@line1:
  3194                           	opt stack 0
  3195  000068                     setUmidade@_umdajt:
  3196                           	opt stack 0
  3197  000068                     strcspn@s2:
  3198                           	opt stack 0
  3199  000068                     strncmp@s2:
  3200                           	opt stack 0
  3201  000068                     strspn@s2:
  3202                           	opt stack 0
  3203  000068                     ___lldiv@quotient:
  3204                           	opt stack 0
  3205                           
  3206                           ; 4 bytes @ 0x8
  3207  000068                     	ds	1
  3208  000069                     ?___lwtoft:
  3209                           	opt stack 0
  3210  000069                     setRangeValor@end_eeprom:
  3211                           	opt stack 0
  3212  000069                     ___lwmod@divisor:
  3213                           	opt stack 0
  3214  000069                     ___lwtoft@c:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x9
  3218  000069                     	ds	1
  3219  00006A                     ??_strspn:
  3220  00006A                     ??_strcspn:
  3221  00006A                     ??_setRangeValor:
  3222  00006A                     atualizaLCD@line2:
  3223                           	opt stack 0
  3224  00006A                     setUmidade@_tempajt:
  3225                           	opt stack 0
  3226  00006A                     strncmp@len:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0xA
  3230  00006A                     	ds	1
  3231  00006B                     ___lwmod@counter:
  3232                           	opt stack 0
  3233  00006B                     strcspn@i:
  3234                           	opt stack 0
  3235  00006B                     strspn@i:
  3236                           	opt stack 0
  3237                           
  3238                           ; 2 bytes @ 0xB
  3239  00006B                     	ds	1
  3240  00006C                     ??_strncmp:
  3241  00006C                     ?__doprnt:
  3242                           	opt stack 0
  3243  00006C                     ?___ftmul:
  3244                           	opt stack 0
  3245  00006C                     ___lldiv@counter:
  3246                           	opt stack 0
  3247  00006C                     atualizaLCD@line3:
  3248                           	opt stack 0
  3249  00006C                     setUmidade@_clima:
  3250                           	opt stack 0
  3251  00006C                     __doprnt@pb:
  3252                           	opt stack 0
  3253  00006C                     ___ftmul@f1:
  3254                           	opt stack 0
  3255                           
  3256                           ; 3 bytes @ 0xC
  3257  00006C                     	ds	1
  3258  00006D                     ?_strtok:
  3259                           	opt stack 0
  3260  00006D                     setRangeValor@_acao:
  3261                           	opt stack 0
  3262  00006D                     strtok@s1:
  3263                           	opt stack 0
  3264  00006D                     I2C_Master_Init@c:
  3265                           	opt stack 0
  3266                           
  3267                           ; 4 bytes @ 0xD
  3268  00006D                     	ds	1
  3269  00006E                     setUmidade@tp:
  3270                           	opt stack 0
  3271  00006E                     atualizaLCD@line4:
  3272                           	opt stack 0
  3273  00006E                     setRangeValor@_aux:
  3274                           	opt stack 0
  3275  00006E                     __doprnt@f:
  3276                           	opt stack 0
  3277                           
  3278                           ; 2 bytes @ 0xE
  3279  00006E                     	ds	1
  3280  00006F                     ?_strstr:
  3281                           	opt stack 0
  3282  00006F                     _setUmidade$1297:
  3283                           	opt stack 0
  3284  00006F                     strstr@s1:
  3285                           	opt stack 0
  3286  00006F                     strtok@s2:
  3287                           	opt stack 0
  3288  00006F                     ___ftmul@f2:
  3289                           	opt stack 0
  3290                           
  3291                           ; 3 bytes @ 0xF
  3292  00006F                     	ds	1
  3293  000070                     atualizaLCD@i:
  3294                           	opt stack 0
  3295  000070                     __doprnt@ap:
  3296                           	opt stack 0
  3297                           
  3298                           ; 2 bytes @ 0x10
  3299  000070                     	ds	1
  3300  000071                     ??_I2C_Master_Init:
  3301  000071                     _setUmidade$1298:
  3302                           	opt stack 0
  3303  000071                     strcpy@to:
  3304                           	opt stack 0
  3305  000071                     strstr@s2:
  3306                           	opt stack 0
  3307                           
  3308                           ; 2 bytes @ 0x11
  3309  000071                     	ds	1
  3310  000072                     ??___ftmul:
  3311  000072                     ??__doprnt:
  3312                           
  3313                           ; 1 bytes @ 0x12
  3314  000072                     	ds	1
  3315  000073                     _setUmidade$1299:
  3316                           	opt stack 0
  3317  000073                     getMac@mac:
  3318                           	opt stack 0
  3319  000073                     strcpy@from:
  3320                           	opt stack 0
  3321                           
  3322                           ; 2 bytes @ 0x13
  3323  000073                     	ds	2
  3324  000075                     ??_strcpy:
  3325  000075                     ___ftmul@exp:
  3326                           	opt stack 0
  3327  000075                     _setUmidade$1300:
  3328                           	opt stack 0
  3329  000075                     getMac@var:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x15
  3333  000075                     	ds	1
  3334  000076                     __doprnt@prec:
  3335                           	opt stack 0
  3336  000076                     strcpy@cp:
  3337                           	opt stack 0
  3338  000076                     ___ftmul@f3_as_product:
  3339                           	opt stack 0
  3340                           
  3341                           ; 3 bytes @ 0x16
  3342  000076                     	ds	1
  3343  000077                     ??_getMac:
  3344  000077                     setUmidade@_tmpajt:
  3345                           	opt stack 0
  3346  000077                     __doprnt@flag:
  3347                           	opt stack 0
  3348                           
  3349                           ; 1 bytes @ 0x17
  3350  000077                     	ds	1
  3351  000078                     setUmidade@_clim:
  3352                           	opt stack 0
  3353  000078                     __doprnt@val:
  3354                           	opt stack 0
  3355                           
  3356                           ; 2 bytes @ 0x18
  3357  000078                     	ds	1
  3358  000079                     setUmidade@_umd:
  3359                           	opt stack 0
  3360  000079                     getMac@j:
  3361                           	opt stack 0
  3362  000079                     ___ftmul@cntr:
  3363                           	opt stack 0
  3364                           
  3365                           ; 1 bytes @ 0x19
  3366  000079                     	ds	1
  3367  00007A                     getMac@men:
  3368                           	opt stack 0
  3369  00007A                     ___ftmul@sign:
  3370                           	opt stack 0
  3371  00007A                     __doprnt@len:
  3372                           	opt stack 0
  3373                           
  3374                           ; 2 bytes @ 0x1A
  3375  00007A                     	ds	1
  3376  00007B                     ?___ftadd:
  3377                           	opt stack 0
  3378  00007B                     getMac@i:
  3379                           	opt stack 0
  3380  00007B                     ___ftadd@f1:
  3381                           	opt stack 0
  3382                           
  3383                           ; 3 bytes @ 0x1B
  3384  00007B                     	ds	1
  3385  00007C                     __doprnt@cp:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x1C
  3389  00007C                     	ds	2
  3390  00007E                     __doprnt@width:
  3391                           	opt stack 0
  3392  00007E                     ___ftadd@f2:
  3393                           	opt stack 0
  3394                           
  3395                           ; 3 bytes @ 0x1E
  3396  00007E                     	ds	2
  3397  000080                     __doprnt@c:
  3398                           	opt stack 0
  3399                           
  3400                           ; 1 bytes @ 0x20
  3401  000080                     	ds	1
  3402  000081                     ??___ftadd:
  3403  000081                     ?_sprintf:
  3404                           	opt stack 0
  3405  000081                     ?_printf:
  3406                           	opt stack 0
  3407  000081                     printf@f:
  3408                           	opt stack 0
  3409  000081                     sprintf@wh:
  3410                           	opt stack 0
  3411                           
  3412                           ; 2 bytes @ 0x21
  3413  000081                     	ds	2
  3414  000083                     sprintf@f:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x23
  3418  000083                     	ds	1
  3419  000084                     ___ftadd@sign:
  3420                           	opt stack 0
  3421                           
  3422                           ; 1 bytes @ 0x24
  3423  000084                     	ds	1
  3424  000085                     ___ftadd@exp2:
  3425                           	opt stack 0
  3426                           
  3427                           ; 1 bytes @ 0x25
  3428  000085                     	ds	1
  3429  000086                     ___ftadd@exp1:
  3430                           	opt stack 0
  3431                           
  3432                           ; 1 bytes @ 0x26
  3433  000086                     	ds	1
  3434  000087                     ?___ftdiv:
  3435                           	opt stack 0
  3436  000087                     ___ftdiv@f1:
  3437                           	opt stack 0
  3438                           
  3439                           ; 3 bytes @ 0x27
  3440  000087                     	ds	3
  3441  00008A                     ___ftdiv@f2:
  3442                           	opt stack 0
  3443                           
  3444                           ; 3 bytes @ 0x2A
  3445  00008A                     	ds	1
  3446  00008B                     sprintf@ap:
  3447                           	opt stack 0
  3448                           
  3449                           ; 2 bytes @ 0x2B
  3450  00008B                     	ds	2
  3451  00008D                     ??___ftdiv:
  3452  00008D                     sprintf@pb:
  3453                           	opt stack 0
  3454                           
  3455                           ; 4 bytes @ 0x2D
  3456  00008D                     	ds	3
  3457  000090                     ___ftdiv@cntr:
  3458                           	opt stack 0
  3459                           
  3460                           ; 1 bytes @ 0x30
  3461  000090                     	ds	1
  3462  000091                     filtroStr@inicio:
  3463                           	opt stack 0
  3464  000091                     ___ftdiv@f3:
  3465                           	opt stack 0
  3466                           
  3467                           ; 3 bytes @ 0x31
  3468  000091                     	ds	2
  3469  000093                     filtroStr@fim:
  3470                           	opt stack 0
  3471                           
  3472                           ; 2 bytes @ 0x33
  3473  000093                     	ds	1
  3474  000094                     ___ftdiv@exp:
  3475                           	opt stack 0
  3476                           
  3477                           ; 1 bytes @ 0x34
  3478  000094                     	ds	1
  3479  000095                     ___ftdiv@sign:
  3480                           	opt stack 0
  3481  000095                     filtroStr@str:
  3482                           	opt stack 0
  3483                           
  3484                           ; 2 bytes @ 0x35
  3485  000095                     	ds	1
  3486  000096                     ?___fttol:
  3487                           	opt stack 0
  3488  000096                     ___fttol@f1:
  3489                           	opt stack 0
  3490                           
  3491                           ; 3 bytes @ 0x36
  3492  000096                     	ds	1
  3493  000097                     filtroStr@strdest:
  3494                           	opt stack 0
  3495                           
  3496                           ; 2 bytes @ 0x37
  3497  000097                     	ds	2
  3498  000099                     ??_filtroStr:
  3499                           
  3500                           ; 1 bytes @ 0x39
  3501  000099                     	ds	1
  3502  00009A                     ??___fttol:
  3503                           
  3504                           ; 1 bytes @ 0x3A
  3505  00009A                     	ds	5
  3506  00009F                     ___fttol@sign1:
  3507                           	opt stack 0
  3508  00009F                     _criaCaracteresCGRAM$1229:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x3F
  3512  00009F                     	ds	1
  3513  0000A0                     ___fttol@lval:
  3514                           	opt stack 0
  3515                           
  3516                           ; 4 bytes @ 0x40
  3517  0000A0                     	ds	1
  3518  0000A1                     criaCaracteresCGRAM@k:
  3519                           	opt stack 0
  3520                           
  3521                           ; 1 bytes @ 0x41
  3522  0000A1                     	ds	1
  3523  0000A2                     criaCaracteresCGRAM@j:
  3524                           	opt stack 0
  3525                           
  3526                           ; 1 bytes @ 0x42
  3527  0000A2                     	ds	1
  3528  0000A3                     criaCaracteresCGRAM@i:
  3529                           	opt stack 0
  3530                           
  3531                           ; 1 bytes @ 0x43
  3532  0000A3                     	ds	1
  3533  0000A4                     ___fttol@exp1:
  3534                           	opt stack 0
  3535                           
  3536                           ; 1 bytes @ 0x44
  3537  0000A4                     	ds	1
  3538  0000A5                     _getSensors$1523:
  3539                           	opt stack 0
  3540                           
  3541                           ; 3 bytes @ 0x45
  3542  0000A5                     	ds	3
  3543  0000A8                     _getSensors$1525:
  3544                           	opt stack 0
  3545                           
  3546                           ; 3 bytes @ 0x48
  3547  0000A8                     	ds	3
  3548  0000AB                     _getSensors$1521:
  3549                           	opt stack 0
  3550                           
  3551                           ; 2 bytes @ 0x4B
  3552  0000AB                     	ds	2
  3553  0000AD                     getSensors@auxx:
  3554                           	opt stack 0
  3555                           
  3556                           ; 3 bytes @ 0x4D
  3557  0000AD                     	ds	3
  3558  0000B0                     _getSensors$2491:
  3559                           	opt stack 0
  3560                           
  3561                           ; 3 bytes @ 0x50
  3562  0000B0                     	ds	3
  3563  0000B3                     getSensors@i:
  3564                           	opt stack 0
  3565                           
  3566                           ; 1 bytes @ 0x53
  3567  0000B3                     	ds	1
  3568  0000B4                     getSensors@aux:
  3569                           	opt stack 0
  3570                           
  3571                           ; 3 bytes @ 0x54
  3572  0000B4                     	ds	9
  3573  0000BD                     printf@ap:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x5D
  3577  0000BD                     	ds	2
  3578  0000BF                     printf@pb:
  3579                           	opt stack 0
  3580                           
  3581                           ; 4 bytes @ 0x5F
  3582  0000BF                     	ds	4
  3583  0000C3                     ??_enviaDadosWifi:
  3584  0000C3                     alterarConfigWifi@i:
  3585                           	opt stack 0
  3586                           
  3587                           ; 1 bytes @ 0x63
  3588  0000C3                     	ds	2
  3589  0000C5                     enviaDadosWifi@AUX:
  3590                           	opt stack 0
  3591                           
  3592                           ; 15 bytes @ 0x65
  3593  0000C5                     	ds	15
  3594  0000D4                     _enviaDadosWifi$2490:
  3595                           	opt stack 0
  3596                           
  3597                           ; 2 bytes @ 0x74
  3598  0000D4                     	ds	2
  3599  0000D6                     enviaDadosWifi@i:
  3600                           	opt stack 0
  3601                           
  3602                           ; 1 bytes @ 0x76
  3603  0000D6                     	ds	1
  3604  0000D7                     ??_main:
  3605                           
  3606                           ; 1 bytes @ 0x77
  3607  0000D7                     	ds	1
  3608  0000D8                     _main$2492:
  3609                           	opt stack 0
  3610                           
  3611                           ; 2 bytes @ 0x78
  3612  0000D8                     	ds	2
  3613  0000DA                     _main$1633:
  3614                           	opt stack 0
  3615                           
  3616                           ; 2 bytes @ 0x7A
  3617  0000DA                     	ds	2
  3618  0000DC                     _main$1634:
  3619                           	opt stack 0
  3620                           
  3621                           ; 2 bytes @ 0x7C
  3622  0000DC                     	ds	2
  3623  0000DE                     _main$1637:
  3624                           	opt stack 0
  3625                           
  3626                           ; 2 bytes @ 0x7E
  3627  0000DE                     	ds	2
  3628  0000E0                     _main$1642:
  3629                           	opt stack 0
  3630                           
  3631                           ; 2 bytes @ 0x80
  3632  0000E0                     	ds	2
  3633  0000E2                     _main$1649:
  3634                           	opt stack 0
  3635                           
  3636                           ; 2 bytes @ 0x82
  3637  0000E2                     	ds	2
  3638  0000E4                     _main$1654:
  3639                           	opt stack 0
  3640                           
  3641                           ; 2 bytes @ 0x84
  3642  0000E4                     	ds	2
  3643  0000E6                     _main$1659:
  3644                           	opt stack 0
  3645                           
  3646                           ; 2 bytes @ 0x86
  3647  0000E6                     	ds	2
  3648  0000E8                     main@i:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x88
  3652  0000E8                     	ds	1
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postdec1	equ	0xFE5
  3660                           fsr1l	equ	0xFE1
  3661                           
  3662                           	psect	cstackCOMRAM
  3663  000001                     __pcstackCOMRAM:
  3664                           	opt stack 0
  3665  000001                     ??i2_I2C_Wait:
  3666  000001                     i2delay@x:
  3667                           	opt stack 0
  3668                           
  3669                           ; 2 bytes @ 0x0
  3670  000001                     	ds	1
  3671  000002                     ?i2_I2C_Read:
  3672                           	opt stack 0
  3673  000002                     i2I2C_Write@d:
  3674                           	opt stack 0
  3675  000002                     i2I2C_Read@a:
  3676                           	opt stack 0
  3677                           
  3678                           ; 2 bytes @ 0x1
  3679  000002                     	ds	1
  3680  000003                     ??i2_delay:
  3681                           
  3682                           ; 1 bytes @ 0x2
  3683  000003                     	ds	1
  3684  000004                     i2writeEEPROM_ext@data:
  3685                           	opt stack 0
  3686  000004                     i2I2C_Read@temp:
  3687                           	opt stack 0
  3688                           
  3689                           ; 2 bytes @ 0x3
  3690  000004                     	ds	1
  3691  000005                     i2writeEEPROM_ext@adress:
  3692                           	opt stack 0
  3693                           
  3694                           ; 1 bytes @ 0x4
  3695  000005                     	ds	1
  3696  000006                     i2setRangeValor@_var_ajt:
  3697                           	opt stack 0
  3698                           
  3699                           ; 2 bytes @ 0x5
  3700  000006                     	ds	2
  3701  000008                     i2setRangeValor@_min:
  3702                           	opt stack 0
  3703                           
  3704                           ; 1 bytes @ 0x7
  3705  000008                     	ds	1
  3706  000009                     i2setRangeValor@_max:
  3707                           	opt stack 0
  3708                           
  3709                           ; 1 bytes @ 0x8
  3710  000009                     	ds	1
  3711  00000A                     i2setRangeValor@end_eeprom:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x9
  3715  00000A                     	ds	1
  3716  00000B                     ??i2_setRangeValor:
  3717                           
  3718                           ; 1 bytes @ 0xA
  3719  00000B                     	ds	3
  3720  00000E                     i2setRangeValor@_acao:
  3721                           	opt stack 0
  3722                           
  3723                           ; 1 bytes @ 0xD
  3724  00000E                     	ds	1
  3725  00000F                     i2setRangeValor@_aux:
  3726                           	opt stack 0
  3727                           
  3728                           ; 2 bytes @ 0xE
  3729  00000F                     	ds	2
  3730  000011                     ??_timer:
  3731                           
  3732                           ; 1 bytes @ 0x10
  3733  000011                     	ds	7
  3734  000018                     _timer$1417:
  3735                           	opt stack 0
  3736                           
  3737                           ; 2 bytes @ 0x17
  3738  000018                     	ds	2
  3739  00001A                     _timer$1418:
  3740                           	opt stack 0
  3741                           
  3742                           ; 2 bytes @ 0x19
  3743  00001A                     	ds	2
  3744  00001C                     _timer$1419:
  3745                           	opt stack 0
  3746                           
  3747                           ; 2 bytes @ 0x1B
  3748  00001C                     	ds	2
  3749  00001E                     ??_TIMER0:
  3750                           
  3751                           ; 1 bytes @ 0x1D
  3752  00001E                     	ds	18
  3753  000030                     TIMER0@c:
  3754                           	opt stack 0
  3755                           
  3756                           ; 1 bytes @ 0x2F
  3757  000030                     	ds	1
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           postinc0	equ	0xFEE
  3763                           wreg	equ	0xFE8
  3764                           postdec1	equ	0xFE5
  3765                           fsr1l	equ	0xFE1
  3766                           
  3767 ;;
  3768 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3769 ;;
  3770 ;; *************** function _main *****************
  3771 ;; Defined at:
  3772 ;;		line 35 in file "src/main.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  i               1  136[BANK0 ] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0
  3787 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3788 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3789 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3790 ;;Total ram usage:       18 bytes
  3791 ;; Hardware stack levels required when called:   11
  3792 ;; This function calls:
  3793 ;;		_I2C_Master_Init
  3794 ;;		_Lcd_Clear
  3795 ;;		_Lcd_Init
  3796 ;;		_UART_Init
  3797 ;;		___wmul
  3798 ;;		_alterarConfigWifi
  3799 ;;		_atualizaLCD
  3800 ;;		_blink
  3801 ;;		_btPress
  3802 ;;		_climaAtual
  3803 ;;		_controle
  3804 ;;		_criaCaracteresCGRAM
  3805 ;;		_delay
  3806 ;;		_enviaDadosWifi
  3807 ;;		_faseAtual
  3808 ;;		_getSensors
  3809 ;;		_printf
  3810 ;;		_readEEPROM_ext
  3811 ;;		_setRangeValor
  3812 ;;		_setUmidade
  3813 ;;		_sprintf
  3814 ;;		_updateLeds
  3815 ;;		_writeEEPROM_ext
  3816 ;; This function is called by:
  3817 ;;		Startup code after reset
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text0
  3822  000012                     __ptext0:
  3823                           	opt stack 0
  3824  000012                     _main:
  3825                           	opt stack 20
  3826                           
  3827                           ;main.c: 38: TRISAbits.RA5 = 0;
  3828                           
  3829                           ;incstack = 0
  3830  000012  9A92               	bcf	3986,5,c	;volatile
  3831                           
  3832                           ;main.c: 39: TRISCbits.RC2 = 0;
  3833  000014  9494               	bcf	3988,2,c	;volatile
  3834                           
  3835                           ;main.c: 40: TRISEbits.RE0 = 0;
  3836  000016  9096               	bcf	3990,0,c	;volatile
  3837                           
  3838                           ;main.c: 41: TRISDbits.RD0 = 0;
  3839  000018  9095               	bcf	3989,0,c	;volatile
  3840                           
  3841                           ;main.c: 42: TRISCbits.RC1 = 0;
  3842  00001A  9294               	bcf	3988,1,c	;volatile
  3843                           
  3844                           ;main.c: 43: TRISDbits.RD1 = 0;
  3845  00001C  9295               	bcf	3989,1,c	;volatile
  3846                           
  3847                           ;main.c: 44: TRISCbits.RC0 = 1;
  3848  00001E  8094               	bsf	3988,0,c	;volatile
  3849                           
  3850                           ;main.c: 46: PORTAbits.RA5 = 0;
  3851  000020  9A80               	bcf	3968,5,c	;volatile
  3852                           
  3853                           ;main.c: 47: PORTCbits.RC2 = 0;
  3854  000022  9482               	bcf	3970,2,c	;volatile
  3855                           
  3856                           ;main.c: 48: PORTEbits.RE0 = 0;
  3857  000024  9084               	bcf	3972,0,c	;volatile
  3858                           
  3859                           ;main.c: 49: PORTDbits.RD0 = 0;
  3860  000026  9083               	bcf	3971,0,c	;volatile
  3861                           
  3862                           ;main.c: 50: PORTCbits.RC1 = 0;
  3863  000028  9282               	bcf	3970,1,c	;volatile
  3864                           
  3865                           ;main.c: 51: PORTDbits.RD1 = 0;
  3866  00002A  9283               	bcf	3971,1,c	;volatile
  3867                           
  3868                           ;main.c: 55: TRISAbits.RA4 = 0;
  3869  00002C  9892               	bcf	3986,4,c	;volatile
  3870                           
  3871                           ;main.c: 56: LATAbits.LATA4 = 0;
  3872  00002E  9889               	bcf	3977,4,c	;volatile
  3873                           
  3874                           ;main.c: 60: TRISBbits.RB5 = 0;
  3875  000030  9A93               	bcf	3987,5,c	;volatile
  3876                           
  3877                           ;main.c: 61: LATBbits.LATB5 = 0;
  3878  000032  9A8A               	bcf	3978,5,c	;volatile
  3879                           
  3880                           ;main.c: 65: TRISBbits.RB2 = 1;
  3881  000034  8493               	bsf	3987,2,c	;volatile
  3882                           
  3883                           ;main.c: 66: INTCON2bits.INTEDG2 = 0;
  3884  000036  98F1               	bcf	intcon2,4,c	;volatile
  3885                           
  3886                           ;main.c: 67: INTCON2bits.RBIP = 0;
  3887  000038  90F1               	bcf	intcon2,0,c	;volatile
  3888                           
  3889                           ;main.c: 68: INTCON3bits.INT2IE = 1;
  3890  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3891                           
  3892                           ;main.c: 71: TRISAbits.RA0 = 1;
  3893  00003C  8092               	bsf	3986,0,c	;volatile
  3894                           
  3895                           ;main.c: 72: PORTAbits.AN0 = 0;
  3896  00003E  9080               	bcf	3968,0,c	;volatile
  3897                           
  3898                           ;main.c: 73: TRISAbits.RA1 = 1;
  3899  000040  8292               	bsf	3986,1,c	;volatile
  3900                           
  3901                           ;main.c: 74: PORTAbits.AN1 = 0;
  3902  000042  9280               	bcf	3968,1,c	;volatile
  3903                           
  3904                           ;main.c: 75: TRISAbits.RA2 = 1;
  3905  000044  8492               	bsf	3986,2,c	;volatile
  3906                           
  3907                           ;main.c: 76: PORTAbits.AN2 = 0;
  3908  000046  9480               	bcf	3968,2,c	;volatile
  3909                           
  3910                           ;main.c: 81: T0CON = 0x81;
  3911  000048  0E81               	movlw	129
  3912  00004A  6ED5               	movwf	4053,c	;volatile
  3913                           
  3914                           ;main.c: 82: INTCON = 0xE4;
  3915  00004C  0EE4               	movlw	228
  3916  00004E  6EF2               	movwf	intcon,c	;volatile
  3917                           
  3918                           ;main.c: 85: ADCON0 = 0x01;
  3919  000050  0E01               	movlw	1
  3920  000052  6EC2               	movwf	4034,c	;volatile
  3921                           
  3922                           ;main.c: 86: ADCON1 = 0x0C;
  3923  000054  0E0C               	movlw	12
  3924  000056  6EC1               	movwf	4033,c	;volatile
  3925                           
  3926                           ;main.c: 87: ADCON2 = 0xB5;
  3927  000058  0EB5               	movlw	181
  3928  00005A  6EC0               	movwf	4032,c	;volatile
  3929                           
  3930                           ;main.c: 90: UART_Init();
  3931  00005C  EC37  F02F         	call	_UART_Init	;wreg free
  3932                           
  3933                           ;main.c: 91: printf("AT+RST\r\n");
  3934  000060  0E46               	movlw	low STR_68
  3935  000062  0100               	movlb	0	; () banked
  3936  000064  6F81               	movwf	printf@f& (0+255),b
  3937  000066  0E7F               	movlw	high STR_68
  3938  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3939  00006A  ECB4  F02D         	call	_printf	;wreg free
  3940                           
  3941                           ;main.c: 92: delay(200);
  3942  00006E  0E00               	movlw	0
  3943  000070  0100               	movlb	0	; () banked
  3944  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3945  000074  0EC8               	movlw	200
  3946  000076  6F60               	movwf	delay@x& (0+255),b
  3947  000078  EC94  F02E         	call	_delay	;wreg free
  3948                           
  3949                           ;main.c: 94: Lcd_Init();
  3950  00007C  EC16  F02B         	call	_Lcd_Init	;wreg free
  3951                           
  3952                           ;main.c: 95: Lcd_Clear();
  3953  000080  EC6B  F02F         	call	_Lcd_Clear	;wreg free
  3954                           
  3955                           ;main.c: 96: criaCaracteresCGRAM();
  3956  000084  EC29  F028         	call	_criaCaracteresCGRAM	;wreg free
  3957                           
  3958                           ;main.c: 97: I2C_Master_Init(1000000);
  3959  000088  0E40               	movlw	64
  3960  00008A  0100               	movlb	0	; () banked
  3961  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3962  00008E  0E42               	movlw	66
  3963  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3964  000092  0E0F               	movlw	15
  3965  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3966  000096  0E00               	movlw	0
  3967  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3968  00009A  ECD2  F02B         	call	_I2C_Master_Init	;wreg free
  3969                           
  3970                           ;main.c: 98: delay(150);
  3971  00009E  0E00               	movlw	0
  3972  0000A0  0100               	movlb	0	; () banked
  3973  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3974  0000A4  0E96               	movlw	150
  3975  0000A6  6F60               	movwf	delay@x& (0+255),b
  3976  0000A8  EC94  F02E         	call	_delay	;wreg free
  3977                           
  3978                           ;main.c: 101: sprintf(line1, " TECHNOW Tecnologia");
  3979  0000AC  0EDA               	movlw	low _line1
  3980  0000AE  0100               	movlb	0	; () banked
  3981  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3982  0000B2  0E01               	movlw	high _line1
  3983  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3984  0000B6  0EB5               	movlw	low STR_69
  3985  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3986  0000BA  0E7C               	movlw	high STR_69
  3987  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3988  0000BE  EC10  F02D         	call	_sprintf	;wreg free
  3989                           
  3990                           ;main.c: 102: sprintf(line3, "Versao Soft.:");
  3991  0000C2  0EB0               	movlw	low _line3
  3992  0000C4  0100               	movlb	0	; () banked
  3993  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3994  0000C8  0E01               	movlw	high _line3
  3995  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3996  0000CC  0E96               	movlw	low STR_70
  3997  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  3998  0000D0  0E7E               	movlw	high STR_70
  3999  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4000  0000D4  EC10  F02D         	call	_sprintf	;wreg free
  4001                           
  4002                           ;main.c: 103: sprintf(&line4[9], "%s", "Nov 09 2019");
  4003  0000D8  0EA4               	movlw	low (_line4+9)
  4004  0000DA  0100               	movlb	0	; () banked
  4005  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  4006  0000DE  0E01               	movlw	high (_line4+9)
  4007  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4008  0000E2  0E25               	movlw	low (STR_82+7)
  4009  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  4010  0000E6  0E7F               	movlw	high (STR_82+7)
  4011  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4012  0000EA  0EA4               	movlw	low STR_58
  4013  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  4014  0000EE  0E7E               	movlw	high STR_58
  4015  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  4016  0000F2  EC10  F02D         	call	_sprintf	;wreg free
  4017                           
  4018                           ;main.c: 104: atualizaLCD(line1, line2, line3, line4);
  4019  0000F6  0EDA               	movlw	low _line1
  4020  0000F8  0100               	movlb	0	; () banked
  4021  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4022  0000FC  0E01               	movlw	high _line1
  4023  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4024  000100  0EC5               	movlw	low _line2
  4025  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4026  000104  0E01               	movlw	high _line2
  4027  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4028  000108  0EB0               	movlw	low _line3
  4029  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4030  00010C  0E01               	movlw	high _line3
  4031  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4032  000110  0E9B               	movlw	low _line4
  4033  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4034  000114  0E01               	movlw	high _line4
  4035  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4036  000118  EC14  F027         	call	_atualizaLCD	;wreg free
  4037                           
  4038                           ;main.c: 105: delay(300);
  4039  00011C  0E01               	movlw	1
  4040  00011E  0100               	movlb	0	; () banked
  4041  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  4042  000122  0E2C               	movlw	44
  4043  000124  6F60               	movwf	delay@x& (0+255),b
  4044  000126  EC94  F02E         	call	_delay	;wreg free
  4045                           
  4046                           ;main.c: 106: LATBbits.LATB5 = 1;
  4047  00012A  8A8A               	bsf	3978,5,c	;volatile
  4048                           
  4049                           ;main.c: 107: delay(2450);
  4050  00012C  0E09               	movlw	9
  4051  00012E  0100               	movlb	0	; () banked
  4052  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  4053  000132  0E92               	movlw	146
  4054  000134  6F60               	movwf	delay@x& (0+255),b
  4055  000136  EC94  F02E         	call	_delay	;wreg free
  4056                           
  4057                           ;main.c: 109: tempajt = readEEPROM_ext(1);
  4058  00013A  0E01               	movlw	1
  4059  00013C  ECC3  F02C         	call	_readEEPROM_ext
  4060  000140  0100               	movlb	0	; () banked
  4061  000142  6FEA               	movwf	_tempajt& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 110: umidajt = readEEPROM_ext(2);
  4065  000144  0E02               	movlw	2
  4066  000146  ECC3  F02C         	call	_readEEPROM_ext
  4067  00014A  0100               	movlb	0	; () banked
  4068  00014C  6FE9               	movwf	_umidajt& (0+255),b
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 111: trava_fase = readEEPROM_ext(3);
  4072  00014E  0E03               	movlw	3
  4073  000150  ECC3  F02C         	call	_readEEPROM_ext
  4074  000154  0100               	movlb	0	; () banked
  4075  000156  6FF8               	movwf	_trava_fase& (0+255),b
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;main.c: 112: fase = readEEPROM_ext(4);
  4079  000158  0E04               	movlw	4
  4080  00015A  ECC3  F02C         	call	_readEEPROM_ext
  4081  00015E  0100               	movlb	0	; () banked
  4082  000160  6FEC               	movwf	_fase& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;main.c: 113: clima = readEEPROM_ext(5);
  4086  000162  0E05               	movlw	5
  4087  000164  ECC3  F02C         	call	_readEEPROM_ext
  4088  000168  0100               	movlb	0	; () banked
  4089  00016A  6FEB               	movwf	_clima& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 114: tipo_modo_trabalho = readEEPROM_ext(6);
  4093  00016C  0E06               	movlw	6
  4094  00016E  ECC3  F02C         	call	_readEEPROM_ext
  4095  000172  0100               	movlb	0	; () banked
  4096  000174  6FF6               	movwf	_tipo_modo_trabalho& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 115: tipo_sensor_umidade = readEEPROM_ext(7);
  4100  000176  0E07               	movlw	7
  4101  000178  ECC3  F02C         	call	_readEEPROM_ext
  4102  00017C  0100               	movlb	0	; () banked
  4103  00017E  6FF7               	movwf	_tipo_sensor_umidade& (0+255),b
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;main.c: 116: t_fim_fase1 = readEEPROM_ext(8);
  4107  000180  0E08               	movlw	8
  4108  000182  ECC3  F02C         	call	_readEEPROM_ext
  4109  000186  6E4E               	movwf	_t_fim_fase1,c
  4110                           
  4111                           ;main.c: 117: t_fim_fase2 = readEEPROM_ext(9);
  4112  000188  0E09               	movlw	9
  4113  00018A  ECC3  F02C         	call	_readEEPROM_ext
  4114  00018E  6E4D               	movwf	_t_fim_fase2,c
  4115                           
  4116                           ;main.c: 118: t_fim_fase3 = readEEPROM_ext(10);
  4117  000190  0E0A               	movlw	10
  4118  000192  ECC3  F02C         	call	_readEEPROM_ext
  4119  000196  6E4C               	movwf	_t_fim_fase3,c
  4120                           
  4121                           ;main.c: 119: h_venotinha = readEEPROM_ext(11);
  4122  000198  0E0B               	movlw	11
  4123  00019A  ECC3  F02C         	call	_readEEPROM_ext
  4124  00019E  0100               	movlb	0	; () banked
  4125  0001A0  6FF0               	movwf	_h_venotinha& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;main.c: 120: h_abafador = readEEPROM_ext(12);
  4129  0001A2  0E0C               	movlw	12
  4130  0001A4  ECC3  F02C         	call	_readEEPROM_ext
  4131  0001A8  0100               	movlb	0	; () banked
  4132  0001AA  6FEF               	movwf	_h_abafador& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 121: h_flap = readEEPROM_ext(13);
  4136  0001AC  0E0D               	movlw	13
  4137  0001AE  ECC3  F02C         	call	_readEEPROM_ext
  4138  0001B2  0101               	movlb	1	; () banked
  4139  0001B4  6FF4               	movwf	_h_flap& (0+255),b
  4140                           
  4141                           ; BSR set to: 1
  4142                           ;main.c: 122: buzzer = readEEPROM_ext(14);
  4143  0001B6  0E0E               	movlw	14
  4144  0001B8  ECC3  F02C         	call	_readEEPROM_ext
  4145  0001BC  0100               	movlb	0	; () banked
  4146  0001BE  6FFA               	movwf	_buzzer& (0+255),b
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 123: fornalha = readEEPROM_ext(15);
  4150  0001C0  0E0F               	movlw	15
  4151  0001C2  ECC3  F02C         	call	_readEEPROM_ext
  4152  0001C6  0100               	movlb	0	; () banked
  4153  0001C8  6FF9               	movwf	_fornalha& (0+255),b
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 124: h_modo_seguranca = readEEPROM_ext(16);
  4157  0001CA  0E10               	movlw	16
  4158  0001CC  ECC3  F02C         	call	_readEEPROM_ext
  4159  0001D0  0100               	movlb	0	; () banked
  4160  0001D2  6FF1               	movwf	_h_modo_seguranca& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 125: h_buzzer = readEEPROM_ext(17);
  4164  0001D4  0E11               	movlw	17
  4165  0001D6  ECC3  F02C         	call	_readEEPROM_ext
  4166  0001DA  0100               	movlb	0	; () banked
  4167  0001DC  6FEE               	movwf	_h_buzzer& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 126: t_flap_ligado = readEEPROM_ext(18);
  4171  0001DE  0E12               	movlw	18
  4172  0001E0  ECC3  F02C         	call	_readEEPROM_ext
  4173  0001E4  0100               	movlb	0	; () banked
  4174  0001E6  6FF5               	movwf	_t_flap_ligado& (0+255),b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 127: t_flap_intervalo = readEEPROM_ext(20);
  4178  0001E8  0E14               	movlw	20
  4179  0001EA  ECC3  F02C         	call	_readEEPROM_ext
  4180  0001EE  0100               	movlb	0	; () banked
  4181  0001F0  6FF4               	movwf	_t_flap_intervalo& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;main.c: 128: t_buzzer_religar = readEEPROM_ext(21);
  4185  0001F2  0E15               	movlw	21
  4186  0001F4  ECC3  F02C         	call	_readEEPROM_ext
  4187  0001F8  0100               	movlb	0	; () banked
  4188  0001FA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;main.c: 129: t_temp_automatica = readEEPROM_ext(22);
  4192  0001FC  0E16               	movlw	22
  4193  0001FE  ECC3  F02C         	call	_readEEPROM_ext
  4194  000202  0100               	movlb	0	; () banked
  4195  000204  6FF3               	movwf	_t_temp_automatica& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;main.c: 130: wifi_habilita_alteracao = readEEPROM_ext(23);
  4199  000206  0E17               	movlw	23
  4200  000208  ECC3  F02C         	call	_readEEPROM_ext
  4201  00020C  0100               	movlb	0	; () banked
  4202  00020E  6FD7               	movwf	??_main& (0+255),b
  4203  000210  51D7               	movf	??_main& (0+255),w,b
  4204  000212  0101               	movlb	1	; () banked
  4205  000214  6FF1               	movwf	_wifi_habilita_alteracao& (0+255),b
  4206  000216  6BF2               	clrf	(_wifi_habilita_alteracao+1)& (0+255),b
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;main.c: 131: wifi_SENHA = readEEPROM_ext(25);
  4210  000218  0E19               	movlw	25
  4211  00021A  ECC3  F02C         	call	_readEEPROM_ext
  4212  00021E  0100               	movlb	0	; () banked
  4213  000220  6FD7               	movwf	??_main& (0+255),b
  4214  000222  51D7               	movf	??_main& (0+255),w,b
  4215  000224  0101               	movlb	1	; () banked
  4216  000226  6FEF               	movwf	_wifi_SENHA& (0+255),b
  4217  000228  6BF0               	clrf	(_wifi_SENHA+1)& (0+255),b
  4218                           
  4219                           ; BSR set to: 1
  4220                           ;main.c: 132: h_subir_temp_automatica = readEEPROM_ext(27);
  4221  00022A  0E1B               	movlw	27
  4222  00022C  ECC3  F02C         	call	_readEEPROM_ext
  4223  000230  0100               	movlb	0	; () banked
  4224  000232  6FED               	movwf	_h_subir_temp_automatica& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;main.c: 133: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4228  000234  0E1C               	movlw	28
  4229  000236  ECC3  F02C         	call	_readEEPROM_ext
  4230  00023A  0100               	movlb	0	; () banked
  4231  00023C  6FF2               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;main.c: 135: char i = 0;
  4235  00023E  0E00               	movlw	0
  4236  000240  6FE8               	movwf	main@i& (0+255),b
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 136: for (i = 0; i < 15; i++) {
  4240  000242  0E00               	movlw	0
  4241  000244  6FE8               	movwf	main@i& (0+255),b
  4242  000246                     l9353:
  4243                           
  4244                           ; BSR set to: 0
  4245  000246  0E0E               	movlw	14
  4246  000248  65E8               	cpfsgt	main@i& (0+255),b
  4247  00024A  D001               	goto	l1271
  4248  00024C  D010               	goto	u14340
  4249  00024E                     l1271:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;main.c: 137: ssid[i] = (char) readEEPROM_ext(40 + i);
  4253                           
  4254                           ; BSR set to: 0
  4255  00024E  51E8               	movf	main@i& (0+255),w,b
  4256  000250  0D01               	mullw	1
  4257  000252  0EA1               	movlw	low _ssid
  4258  000254  24F3               	addwf	prodl,w,c
  4259  000256  6ED9               	movwf	fsr2l,c
  4260  000258  0E02               	movlw	high _ssid
  4261  00025A  20F4               	addwfc	prodh,w,c
  4262  00025C  6EDA               	movwf	fsr2h,c
  4263  00025E  51E8               	movf	main@i& (0+255),w,b
  4264  000260  0F28               	addlw	40
  4265  000262  ECC3  F02C         	call	_readEEPROM_ext
  4266  000266  6EDF               	movwf	indf2,c
  4267  000268  0100               	movlb	0	; () banked
  4268  00026A  2BE8               	incf	main@i& (0+255),f,b
  4269  00026C  D7EC               	goto	l9353
  4270  00026E                     u14340:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;main.c: 138: }
  4274                           ;main.c: 139: for (i = 0; i < 15; i++) {
  4275                           
  4276                           ; BSR set to: 0
  4277  00026E  0E00               	movlw	0
  4278  000270  6FE8               	movwf	main@i& (0+255),b
  4279  000272                     l9365:
  4280                           
  4281                           ; BSR set to: 0
  4282  000272  0E0E               	movlw	14
  4283  000274  65E8               	cpfsgt	main@i& (0+255),b
  4284  000276  D001               	goto	l1273
  4285  000278  D010               	goto	u14360
  4286  00027A                     l1273:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;main.c: 140: senha[i] = (char) readEEPROM_ext(60 + i);
  4290                           
  4291                           ; BSR set to: 0
  4292  00027A  51E8               	movf	main@i& (0+255),w,b
  4293  00027C  0D01               	mullw	1
  4294  00027E  0E92               	movlw	low _senha
  4295  000280  24F3               	addwf	prodl,w,c
  4296  000282  6ED9               	movwf	fsr2l,c
  4297  000284  0E02               	movlw	high _senha
  4298  000286  20F4               	addwfc	prodh,w,c
  4299  000288  6EDA               	movwf	fsr2h,c
  4300  00028A  51E8               	movf	main@i& (0+255),w,b
  4301  00028C  0F3C               	addlw	60
  4302  00028E  ECC3  F02C         	call	_readEEPROM_ext
  4303  000292  6EDF               	movwf	indf2,c
  4304  000294  0100               	movlb	0	; () banked
  4305  000296  2BE8               	incf	main@i& (0+255),f,b
  4306  000298  D7EC               	goto	l9365
  4307  00029A                     u14360:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;main.c: 141: }
  4311                           ;main.c: 143: i = readEEPROM_ext(30);
  4312                           
  4313                           ; BSR set to: 0
  4314  00029A  0E1E               	movlw	30
  4315  00029C  ECC3  F02C         	call	_readEEPROM_ext
  4316  0002A0  0100               	movlb	0	; () banked
  4317  0002A2  6FE8               	movwf	main@i& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;main.c: 144: if (i != 187) {
  4321  0002A4  0EBB               	movlw	187
  4322  0002A6  19E8               	xorwf	main@i& (0+255),w,b
  4323  0002A8  B4D8               	btfsc	status,2,c
  4324  0002AA  D02C               	goto	l1278
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;main.c: 145: writeEEPROM_ext(30, 187);
  4328  0002AC  0EBB               	movlw	187
  4329  0002AE  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4330  0002B0  0E1E               	movlw	30
  4331  0002B2  EC54  F02D         	call	_writeEEPROM_ext
  4332  0002B6                     l1276:
  4333  0002B6  0004               	clrwdt		;# 
  4334                           
  4335                           ;main.c: 148: sprintf(line4, "ERRO EEPROM");
  4336  0002B8  0E9B               	movlw	low _line4
  4337  0002BA  0100               	movlb	0	; () banked
  4338  0002BC  6F81               	movwf	sprintf@wh& (0+255),b
  4339  0002BE  0E01               	movlw	high _line4
  4340  0002C0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4341  0002C2  0EB0               	movlw	low STR_73
  4342  0002C4  6F83               	movwf	sprintf@f& (0+255),b
  4343  0002C6  0E7E               	movlw	high STR_73
  4344  0002C8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4345  0002CA  EC10  F02D         	call	_sprintf	;wreg free
  4346                           
  4347                           ;main.c: 149: atualizaLCD(line1, line2, line3, line4);
  4348  0002CE  0EDA               	movlw	low _line1
  4349  0002D0  0100               	movlb	0	; () banked
  4350  0002D2  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4351  0002D4  0E01               	movlw	high _line1
  4352  0002D6  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4353  0002D8  0EC5               	movlw	low _line2
  4354  0002DA  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4355  0002DC  0E01               	movlw	high _line2
  4356  0002DE  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4357  0002E0  0EB0               	movlw	low _line3
  4358  0002E2  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4359  0002E4  0E01               	movlw	high _line3
  4360  0002E6  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4361  0002E8  0E9B               	movlw	low _line4
  4362  0002EA  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4363  0002EC  0E01               	movlw	high _line4
  4364  0002EE  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4365  0002F0  EC14  F027         	call	_atualizaLCD	;wreg free
  4366                           
  4367                           ;main.c: 150: delay(3000);
  4368  0002F4  0E0B               	movlw	11
  4369  0002F6  0100               	movlb	0	; () banked
  4370  0002F8  6F61               	movwf	(delay@x+1)& (0+255),b
  4371  0002FA  0EB8               	movlw	184
  4372  0002FC  6F60               	movwf	delay@x& (0+255),b
  4373  0002FE  EC94  F02E         	call	_delay	;wreg free
  4374  000302  D7D9               	goto	l1276
  4375  000304                     l1278:
  4376                           
  4377                           ;main.c: 160: if (RCSTAbits.OERR) {
  4378                           
  4379                           ;main.c: 151: }
  4380                           ;main.c: 152: }
  4381                           ;main.c: 154: while (1) {
  4382  000304  A2AB               	btfss	4011,1,c	;volatile
  4383  000306  D002               	goto	l1280
  4384                           
  4385                           ;main.c: 161: RCSTAbits.CREN = 0;
  4386  000308  98AB               	bcf	4011,4,c	;volatile
  4387                           
  4388                           ;main.c: 162: RCSTAbits.CREN = 1;
  4389  00030A  88AB               	bsf	4011,4,c	;volatile
  4390  00030C                     l1280:
  4391  00030C  0004               	clrwdt		;# 
  4392                           
  4393                           ;main.c: 165: getSensors();
  4394  00030E  EC84  F018         	call	_getSensors	;wreg free
  4395                           
  4396                           ;main.c: 166: controle();
  4397  000312  EC76  F01D         	call	_controle	;wreg free
  4398                           
  4399                           ;main.c: 169: if (tipo_modo_trabalho == 1) {
  4400  000316  0100               	movlb	0	; () banked
  4401  000318  05F6               	decf	_tipo_modo_trabalho& (0+255),w,b
  4402  00031A  A4D8               	btfss	status,2,c
  4403  00031C  D00F               	goto	l1281
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;main.c: 170: setUmidade('A', &umidajt, &tempajt, &clima);
  4407  00031E  0EE9               	movlw	low _umidajt
  4408  000320  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4409  000322  0E00               	movlw	high _umidajt
  4410  000324  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4411  000326  0EEA               	movlw	low _tempajt
  4412  000328  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4413  00032A  0E00               	movlw	high _tempajt
  4414  00032C  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4415  00032E  0EEB               	movlw	low _clima
  4416  000330  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4417  000332  0E00               	movlw	high _clima
  4418  000334  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4419  000336  0E41               	movlw	65
  4420  000338  ECCA  F023         	call	_setUmidade
  4421  00033C                     l1281:
  4422                           
  4423                           ;main.c: 171: }
  4424                           ;main.c: 173: faseAtual('F', &fase, &tempajt);
  4425  00033C  0EEC               	movlw	low _fase
  4426  00033E  0100               	movlb	0	; () banked
  4427  000340  6F60               	movwf	faseAtual@_fase& (0+255),b
  4428  000342  0E00               	movlw	high _fase
  4429  000344  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4430  000346  0EEA               	movlw	low _tempajt
  4431  000348  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4432  00034A  0E00               	movlw	high _tempajt
  4433  00034C  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4434  00034E  0E46               	movlw	70
  4435  000350  EC2B  F023         	call	_faseAtual
  4436                           
  4437                           ;main.c: 175: if (menu != 10) {
  4438  000354  0E0A               	movlw	10
  4439  000356  0100               	movlb	0	; () banked
  4440  000358  19FB               	xorwf	_menu& (0+255),w,b
  4441  00035A  A4D8               	btfss	status,2,c
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;main.c: 176: enviaDadosWifi();
  4445  00035C  ECEB  F015         	call	_enviaDadosWifi	;wreg free
  4446                           
  4447                           ;main.c: 177: }
  4448                           ;main.c: 181: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4449  000360  0E04               	movlw	4
  4450  000362  EC29  F02F         	call	_btPress
  4451  000366  0900               	iorlw	0
  4452  000368  B4D8               	btfsc	status,2,c
  4453  00036A  D359               	goto	l1284
  4454  00036C  0EF9               	movlw	low _fornalha
  4455  00036E  0100               	movlb	0	; () banked
  4456  000370  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4457  000372  0E00               	movlw	high _fornalha
  4458  000374  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4459  000376  0E00               	movlw	0
  4460  000378  6F67               	movwf	setRangeValor@_min& (0+255),b
  4461  00037A  0E01               	movlw	1
  4462  00037C  6F68               	movwf	setRangeValor@_max& (0+255),b
  4463  00037E  0E0F               	movlw	15
  4464  000380  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4465  000382  0E2B               	movlw	43
  4466  000384  ECD0  F028         	call	_setRangeValor
  4467                           
  4468                           ;main.c: 183: switch (menu) {
  4469  000388  D34A               	goto	l1284
  4470  00038A                     
  4471                           ;main.c: 185: sprintf(&line1[6], "|Sensor|Ajuste");
  4472  00038A  0EE0               	movlw	low (_line1+6)
  4473  00038C  0100               	movlb	0	; () banked
  4474  00038E  6F81               	movwf	sprintf@wh& (0+255),b
  4475  000390  0E01               	movlw	high (_line1+6)
  4476  000392  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4477  000394  0E17               	movlw	low STR_74
  4478  000396  6F83               	movwf	sprintf@f& (0+255),b
  4479  000398  0E7E               	movlw	high STR_74
  4480  00039A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4481  00039C  EC10  F02D         	call	_sprintf	;wreg free
  4482                           
  4483                           ;main.c: 186: line1[0] = 0x02;
  4484  0003A0  0E02               	movlw	2
  4485  0003A2  0101               	movlb	1	; () banked
  4486  0003A4  6FDA               	movwf	_line1& (0+255),b
  4487                           
  4488                           ; BSR set to: 1
  4489                           ;main.c: 187: if (!buzzer) blink(line1, 1, 2);
  4490  0003A6  0100               	movlb	0	; () banked
  4491  0003A8  51FA               	movf	_buzzer& (0+255),w,b
  4492  0003AA  A4D8               	btfss	status,2,c
  4493  0003AC  D00A               	goto	l1286
  4494                           
  4495                           ; BSR set to: 0
  4496  0003AE  0EDA               	movlw	low _line1
  4497  0003B0  6F60               	movwf	blink@line& (0+255),b
  4498  0003B2  0E01               	movlw	high _line1
  4499  0003B4  6F61               	movwf	(blink@line+1)& (0+255),b
  4500  0003B6  0E01               	movlw	1
  4501  0003B8  6F62               	movwf	blink@start& (0+255),b
  4502  0003BA  0E02               	movlw	2
  4503  0003BC  6F63               	movwf	blink@end& (0+255),b
  4504  0003BE  EC05  F02E         	call	_blink	;wreg free
  4505  0003C2                     l1286:
  4506                           
  4507                           ;main.c: 188: line1[2] = 'F';
  4508  0003C2  0E46               	movlw	70
  4509  0003C4  0101               	movlb	1	; () banked
  4510  0003C6  6FDC               	movwf	(_line1+2)& (0+255),b
  4511                           
  4512                           ; BSR set to: 1
  4513                           ;main.c: 189: if (!fornalha) blink(line1, 2, 3);
  4514  0003C8  0100               	movlb	0	; () banked
  4515  0003CA  51F9               	movf	_fornalha& (0+255),w,b
  4516  0003CC  A4D8               	btfss	status,2,c
  4517  0003CE  D00A               	goto	l1287
  4518                           
  4519                           ; BSR set to: 0
  4520  0003D0  0EDA               	movlw	low _line1
  4521  0003D2  6F60               	movwf	blink@line& (0+255),b
  4522  0003D4  0E01               	movlw	high _line1
  4523  0003D6  6F61               	movwf	(blink@line+1)& (0+255),b
  4524  0003D8  0E02               	movlw	2
  4525  0003DA  6F62               	movwf	blink@start& (0+255),b
  4526  0003DC  0E03               	movlw	3
  4527  0003DE  6F63               	movwf	blink@end& (0+255),b
  4528  0003E0  EC05  F02E         	call	_blink	;wreg free
  4529  0003E4                     l1287:
  4530                           
  4531                           ;main.c: 190: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4532  0003E4  0101               	movlb	1	; () banked
  4533  0003E6  519A               	movf	_wifi_conectado& (0+255),w,b
  4534  0003E8  A4D8               	btfss	status,2,c
  4535  0003EA  D005               	goto	l1289
  4536                           
  4537                           ; BSR set to: 1
  4538  0003EC  0E00               	movlw	0
  4539  0003EE  0100               	movlb	0	; () banked
  4540  0003F0  6FDB               	movwf	(_main$1633+1)& (0+255),b
  4541  0003F2  0E20               	movlw	32
  4542  0003F4  D004               	goto	L1
  4543  0003F6                     l1289:
  4544                           
  4545                           ; BSR set to: 0
  4546  0003F6  0E00               	movlw	0
  4547  0003F8  0100               	movlb	0	; () banked
  4548  0003FA  6FDB               	movwf	(_main$1633+1)& (0+255),b
  4549  0003FC  0E05               	movlw	5
  4550  0003FE                     L1:
  4551  0003FE  6FDA               	movwf	_main$1633& (0+255),b
  4552                           
  4553                           ; BSR set to: 0
  4554                           
  4555                           ; BSR set to: 0
  4556  000400  C0DA  F1DE         	movff	_main$1633,_line1+4
  4557                           
  4558                           ;main.c: 191: line1[5] = (trava_fase) ? 0x01 : ' ';
  4559  000404  51F8               	movf	_trava_fase& (0+255),w,b
  4560  000406  A4D8               	btfss	status,2,c
  4561  000408  D004               	goto	l1293
  4562                           
  4563                           ; BSR set to: 0
  4564  00040A  0E00               	movlw	0
  4565  00040C  6FDD               	movwf	(_main$1634+1)& (0+255),b
  4566  00040E  0E20               	movlw	32
  4567  000410  D003               	goto	L2
  4568  000412                     l1293:
  4569                           
  4570                           ; BSR set to: 0
  4571                           
  4572                           ; BSR set to: 0
  4573  000412  0E00               	movlw	0
  4574  000414  6FDD               	movwf	(_main$1634+1)& (0+255),b
  4575  000416  0E01               	movlw	1
  4576  000418                     L2:
  4577  000418  6FDC               	movwf	_main$1634& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580                           
  4581                           ; BSR set to: 0
  4582  00041A  C0DC  F1DF         	movff	_main$1634,_line1+5
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;main.c: 192: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4586  00041E  0EC5               	movlw	low _line2
  4587  000420  6F81               	movwf	sprintf@wh& (0+255),b
  4588  000422  0E01               	movlw	high _line2
  4589  000424  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4590  000426  0E3C               	movlw	low STR_75
  4591  000428  6F83               	movwf	sprintf@f& (0+255),b
  4592  00042A  0E7C               	movlw	high STR_75
  4593  00042C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4594  00042E  C0FD  F085         	movff	_temp,?_sprintf+4
  4595  000432  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4596  000434  C0EA  F087         	movff	_tempajt,?_sprintf+6
  4597  000438  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4598  00043A  EC10  F02D         	call	_sprintf	;wreg free
  4599                           
  4600                           ;main.c: 193: line2[5] = 0x04;
  4601  00043E  0E04               	movlw	4
  4602  000440  0101               	movlb	1	; () banked
  4603  000442  6FCA               	movwf	(_line2+5)& (0+255),b
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;main.c: 194: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4607  000444  0100               	movlb	0	; () banked
  4608  000446  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4609  000448  A4D8               	btfss	status,2,c
  4610  00044A  D004               	goto	l1297
  4611                           
  4612                           ; BSR set to: 0
  4613  00044C  0E00               	movlw	0
  4614  00044E  6FDF               	movwf	(_main$1637+1)& (0+255),b
  4615  000450  0E46               	movlw	70
  4616  000452  D003               	goto	L3
  4617  000454                     l1297:
  4618                           
  4619                           ; BSR set to: 0
  4620                           
  4621                           ; BSR set to: 0
  4622  000454  0E00               	movlw	0
  4623  000456  6FDF               	movwf	(_main$1637+1)& (0+255),b
  4624  000458  0E25               	movlw	37
  4625  00045A                     L3:
  4626  00045A  6FDE               	movwf	_main$1637& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           
  4630                           ; BSR set to: 0
  4631  00045C  0EB0               	movlw	low _line3
  4632  00045E  6F81               	movwf	sprintf@wh& (0+255),b
  4633  000460  0E01               	movlw	high _line3
  4634  000462  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4635  000464  0EE7               	movlw	low STR_76
  4636  000466  6F83               	movwf	sprintf@f& (0+255),b
  4637  000468  0E7B               	movlw	high STR_76
  4638  00046A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4639  00046C  C0FC  F085         	movff	_umid,?_sprintf+4
  4640  000470  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4641  000472  C0E9  F087         	movff	_umidajt,?_sprintf+6
  4642  000476  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4643  000478  C0DE  F089         	movff	_main$1637,?_sprintf+8
  4644  00047C  C0DF  F08A         	movff	_main$1637+1,?_sprintf+9
  4645  000480  EC10  F02D         	call	_sprintf	;wreg free
  4646                           
  4647                           ;main.c: 195: line3[5] = 0x03;
  4648  000484  0E03               	movlw	3
  4649  000486  0101               	movlb	1	; () banked
  4650  000488  6FB5               	movwf	(_line3+5)& (0+255),b
  4651                           
  4652                           ;main.c: 196: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4653  00048A  0E9B               	movlw	low _line4
  4654  00048C  0100               	movlb	0	; () banked
  4655  00048E  6F81               	movwf	sprintf@wh& (0+255),b
  4656  000490  0E01               	movlw	high _line4
  4657  000492  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4658  000494  0E32               	movlw	low STR_77
  4659  000496  6F83               	movwf	sprintf@f& (0+255),b
  4660  000498  0E7F               	movlw	high STR_77
  4661  00049A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4662  00049C  0EEC               	movlw	low _fase
  4663  00049E  6F60               	movwf	faseAtual@_fase& (0+255),b
  4664  0004A0  0E00               	movlw	high _fase
  4665  0004A2  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4666  0004A4  0EEA               	movlw	low _tempajt
  4667  0004A6  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4668  0004A8  0E00               	movlw	high _tempajt
  4669  0004AA  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4670  0004AC  0E3F               	movlw	63
  4671  0004AE  EC2B  F023         	call	_faseAtual
  4672  0004B2  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4673  0004B6  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4674  0004BA  EC10  F02D         	call	_sprintf	;wreg free
  4675                           
  4676                           ;main.c: 197: if (!f_falta_energia) {
  4677  0004BE  0100               	movlb	0	; () banked
  4678  0004C0  51FE               	movf	_f_falta_energia& (0+255),w,b
  4679  0004C2  A4D8               	btfss	status,2,c
  4680  0004C4  D00A               	goto	l1300
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;main.c: 198: sprintf(line4, " *FALTA DE ENERGIA*");
  4684  0004C6  0E9B               	movlw	low _line4
  4685  0004C8  6F81               	movwf	sprintf@wh& (0+255),b
  4686  0004CA  0E01               	movlw	high _line4
  4687  0004CC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4688  0004CE  0E51               	movlw	low STR_78
  4689  0004D0  6F83               	movwf	sprintf@f& (0+255),b
  4690  0004D2  0E7C               	movlw	high STR_78
  4691  0004D4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4692  0004D6  EC10  F02D         	call	_sprintf	;wreg free
  4693  0004DA                     l1300:
  4694                           
  4695                           ;main.c: 199: };
  4696                           ;main.c: 201: if (btPress(8)) {
  4697  0004DA  0E08               	movlw	8
  4698  0004DC  EC29  F02F         	call	_btPress
  4699  0004E0  0900               	iorlw	0
  4700  0004E2  B4D8               	btfsc	status,2,c
  4701  0004E4  D006               	goto	l1301
  4702                           
  4703                           ;main.c: 202: menu = 1;
  4704  0004E6  0E01               	movlw	1
  4705  0004E8  0100               	movlb	0	; () banked
  4706  0004EA  6FFB               	movwf	_menu& (0+255),b
  4707                           
  4708                           ;main.c: 203: opcaomenu = 1;
  4709  0004EC  0E01               	movlw	1
  4710  0004EE  0101               	movlb	1	; () banked
  4711  0004F0  6F99               	movwf	_opcaomenu& (0+255),b
  4712  0004F2                     l1301:
  4713                           
  4714                           ;main.c: 204: }
  4715                           ;main.c: 205: if (btPress(2)) {
  4716                           
  4717                           ; BSR set to: 1
  4718  0004F2  0E02               	movlw	2
  4719  0004F4  EC29  F02F         	call	_btPress
  4720  0004F8  0900               	iorlw	0
  4721  0004FA  B4D8               	btfsc	status,2,c
  4722  0004FC  D002               	goto	l1302
  4723                           
  4724                           ;main.c: 206: ajuste_parametro++;
  4725  0004FE  0101               	movlb	1	; () banked
  4726  000500  2B98               	incf	_ajuste_parametro& (0+255),f,b
  4727  000502                     l1302:
  4728                           
  4729                           ;main.c: 207: }
  4730                           ;main.c: 208: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4731                           
  4732                           ; BSR set to: 1
  4733  000502  0E01               	movlw	1
  4734  000504  EC29  F02F         	call	_btPress
  4735  000508  0900               	iorlw	0
  4736  00050A  B4D8               	btfsc	status,2,c
  4737  00050C  D00E               	goto	l1303
  4738  00050E  0EFA               	movlw	low _buzzer
  4739  000510  0100               	movlb	0	; () banked
  4740  000512  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4741  000514  0E00               	movlw	high _buzzer
  4742  000516  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4743  000518  0E01               	movlw	1
  4744  00051A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4745  00051C  0E01               	movlw	1
  4746  00051E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4747  000520  0E0E               	movlw	14
  4748  000522  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4749  000524  0E2B               	movlw	43
  4750  000526  ECD0  F028         	call	_setRangeValor
  4751  00052A                     l1303:
  4752                           
  4753                           ;main.c: 209: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4754  00052A  0E10               	movlw	16
  4755  00052C  EC29  F02F         	call	_btPress
  4756  000530  0900               	iorlw	0
  4757  000532  B4D8               	btfsc	status,2,c
  4758  000534  D084               	goto	l1305
  4759  000536  0EFA               	movlw	low _buzzer
  4760  000538  0100               	movlb	0	; () banked
  4761  00053A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4762  00053C  0E00               	movlw	high _buzzer
  4763  00053E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4764  000540  0E00               	movlw	0
  4765  000542  6F67               	movwf	setRangeValor@_min& (0+255),b
  4766  000544  0E00               	movlw	0
  4767  000546  6F68               	movwf	setRangeValor@_max& (0+255),b
  4768  000548  0E0E               	movlw	14
  4769  00054A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4770  00054C  0E2B               	movlw	43
  4771  00054E  ECD0  F028         	call	_setRangeValor
  4772                           
  4773                           ;main.c: 212: switch (ajuste_parametro) {
  4774  000552  D075               	goto	l1305
  4775  000554                     
  4776                           ;main.c: 214: blink(line2, 15, 20);
  4777  000554  0EC5               	movlw	low _line2
  4778  000556  0100               	movlb	0	; () banked
  4779  000558  6F60               	movwf	blink@line& (0+255),b
  4780  00055A  0E01               	movlw	high _line2
  4781  00055C  6F61               	movwf	(blink@line+1)& (0+255),b
  4782  00055E  0E0F               	movlw	15
  4783  000560  6F62               	movwf	blink@start& (0+255),b
  4784  000562  0E14               	movlw	20
  4785  000564  6F63               	movwf	blink@end& (0+255),b
  4786  000566  EC05  F02E         	call	_blink	;wreg free
  4787                           
  4788                           ;main.c: 215: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4789  00056A  0E40               	movlw	64
  4790  00056C  EC29  F02F         	call	_btPress
  4791  000570  0900               	iorlw	0
  4792  000572  B4D8               	btfsc	status,2,c
  4793  000574  D00E               	goto	l1307
  4794  000576  0EEA               	movlw	low _tempajt
  4795  000578  0100               	movlb	0	; () banked
  4796  00057A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4797  00057C  0E00               	movlw	high _tempajt
  4798  00057E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4799  000580  0E55               	movlw	85
  4800  000582  6F67               	movwf	setRangeValor@_min& (0+255),b
  4801  000584  0EA0               	movlw	160
  4802  000586  6F68               	movwf	setRangeValor@_max& (0+255),b
  4803  000588  0E01               	movlw	1
  4804  00058A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4805  00058C  0E2B               	movlw	43
  4806  00058E  ECD0  F028         	call	_setRangeValor
  4807  000592                     l1307:
  4808                           
  4809                           ;main.c: 216: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4810  000592  0E20               	movlw	32
  4811  000594  EC29  F02F         	call	_btPress
  4812  000598  0900               	iorlw	0
  4813  00059A  B4D8               	btfsc	status,2,c
  4814  00059C  D261               	goto	l1316
  4815  00059E  0EEA               	movlw	low _tempajt
  4816  0005A0  0100               	movlb	0	; () banked
  4817  0005A2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4818  0005A4  0E00               	movlw	high _tempajt
  4819  0005A6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4820  0005A8  0E55               	movlw	85
  4821  0005AA  6F67               	movwf	setRangeValor@_min& (0+255),b
  4822  0005AC  0EA0               	movlw	160
  4823  0005AE  6F68               	movwf	setRangeValor@_max& (0+255),b
  4824  0005B0  0E01               	movlw	1
  4825  0005B2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4826  0005B4  0E2D               	movlw	45
  4827  0005B6  ECD0  F028         	call	_setRangeValor
  4828                           
  4829                           ;main.c: 217: break;
  4830  0005BA  D252               	goto	l1316
  4831  0005BC                     
  4832                           ;main.c: 219: if (tipo_modo_trabalho == 0) {
  4833  0005BC  0100               	movlb	0	; () banked
  4834  0005BE  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  4835  0005C0  A4D8               	btfss	status,2,c
  4836  0005C2  D037               	goto	l1311
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;main.c: 220: blink(line3, 15, 20);
  4840  0005C4  0EB0               	movlw	low _line3
  4841  0005C6  6F60               	movwf	blink@line& (0+255),b
  4842  0005C8  0E01               	movlw	high _line3
  4843  0005CA  6F61               	movwf	(blink@line+1)& (0+255),b
  4844  0005CC  0E0F               	movlw	15
  4845  0005CE  6F62               	movwf	blink@start& (0+255),b
  4846  0005D0  0E14               	movlw	20
  4847  0005D2  6F63               	movwf	blink@end& (0+255),b
  4848  0005D4  EC05  F02E         	call	_blink	;wreg free
  4849                           
  4850                           ;main.c: 221: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4851  0005D8  0E40               	movlw	64
  4852  0005DA  EC29  F02F         	call	_btPress
  4853  0005DE  0900               	iorlw	0
  4854  0005E0  B4D8               	btfsc	status,2,c
  4855  0005E2  D010               	goto	l1312
  4856  0005E4  0EE9               	movlw	low _umidajt
  4857  0005E6  0100               	movlb	0	; () banked
  4858  0005E8  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4859  0005EA  0E00               	movlw	high _umidajt
  4860  0005EC  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4861  0005EE  0EEA               	movlw	low _tempajt
  4862  0005F0  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4863  0005F2  0E00               	movlw	high _tempajt
  4864  0005F4  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4865  0005F6  0EEB               	movlw	low _clima
  4866  0005F8  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4867  0005FA  0E00               	movlw	high _clima
  4868  0005FC  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4869  0005FE  0E2B               	movlw	43
  4870  000600  ECCA  F023         	call	_setUmidade
  4871  000604                     l1312:
  4872                           
  4873                           ;main.c: 222: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4874  000604  0E20               	movlw	32
  4875  000606  EC29  F02F         	call	_btPress
  4876  00060A  0900               	iorlw	0
  4877  00060C  B4D8               	btfsc	status,2,c
  4878  00060E  D228               	goto	l1316
  4879  000610  0EE9               	movlw	low _umidajt
  4880  000612  0100               	movlb	0	; () banked
  4881  000614  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4882  000616  0E00               	movlw	high _umidajt
  4883  000618  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4884  00061A  0EEA               	movlw	low _tempajt
  4885  00061C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4886  00061E  0E00               	movlw	high _tempajt
  4887  000620  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4888  000622  0EEB               	movlw	low _clima
  4889  000624  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4890  000626  0E00               	movlw	high _clima
  4891  000628  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4892  00062A  0E2D               	movlw	45
  4893  00062C  ECCA  F023         	call	_setUmidade
  4894                           
  4895                           ;main.c: 223: } else {
  4896  000630  D217               	goto	l1316
  4897  000632                     l1311:
  4898                           
  4899                           ;main.c: 224: ajuste_parametro = 0;
  4900  000632  0E00               	movlw	0
  4901  000634  0101               	movlb	1	; () banked
  4902  000636  D001               	goto	L4
  4903  000638                     
  4904                           ; BSR set to: 1
  4905                           ;main.c: 228: ajuste_parametro = 0;
  4906                           
  4907                           ; BSR set to: 1
  4908  000638  0E00               	movlw	0
  4909  00063A                     L4:
  4910  00063A  6F98               	movwf	_ajuste_parametro& (0+255),b
  4911                           
  4912                           ;main.c: 229: }
  4913  00063C  D211               	goto	l1316
  4914  00063E                     l1305:
  4915                           
  4916                           ; BSR set to: 1
  4917  00063E  0101               	movlb	1	; () banked
  4918  000640  5198               	movf	_ajuste_parametro& (0+255),w,b
  4919                           
  4920                           ; Switch size 1, requested type "space"
  4921                           ; Number of cases is 2, Range of values is 1 to 2
  4922                           ; switch strategies available:
  4923                           ; Name         Instructions Cycles
  4924                           ; simple_byte            7     4 (average)
  4925                           ;	Chosen strategy is simple_byte
  4926  000642  0A01               	xorlw	1	; case 1
  4927  000644  B4D8               	btfsc	status,2,c
  4928  000646  D786               	goto	l1306
  4929  000648  0A03               	xorlw	3	; case 2
  4930  00064A  B4D8               	btfsc	status,2,c
  4931  00064C  D7B7               	goto	l1310
  4932  00064E  D7F4               	goto	l1315
  4933  000650                     
  4934                           ;main.c: 232: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4935                           
  4936                           ; BSR set to: 1
  4937  000650  0EDB               	movlw	low (_line1+1)
  4938  000652  0100               	movlb	0	; () banked
  4939  000654  6F81               	movwf	sprintf@wh& (0+255),b
  4940  000656  0E01               	movlw	high (_line1+1)
  4941  000658  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4942  00065A  0E29               	movlw	low STR_79
  4943  00065C  6F83               	movwf	sprintf@f& (0+255),b
  4944  00065E  0E7D               	movlw	high STR_79
  4945  000660  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4946  000662  C0EA  F085         	movff	_tempajt,?_sprintf+4
  4947  000666  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4948  000668  EC10  F02D         	call	_sprintf	;wreg free
  4949                           
  4950                           ;main.c: 233: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4951  00066C  0100               	movlb	0	; () banked
  4952  00066E  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4953  000670  A4D8               	btfss	status,2,c
  4954  000672  D004               	goto	l1319
  4955                           
  4956                           ; BSR set to: 0
  4957  000674  0E00               	movlw	0
  4958  000676  6FE1               	movwf	(_main$1642+1)& (0+255),b
  4959  000678  0E46               	movlw	70
  4960  00067A  D003               	goto	L5
  4961  00067C                     l1319:
  4962                           
  4963                           ; BSR set to: 0
  4964                           
  4965                           ; BSR set to: 0
  4966  00067C  0E00               	movlw	0
  4967  00067E  6FE1               	movwf	(_main$1642+1)& (0+255),b
  4968  000680  0E25               	movlw	37
  4969  000682                     L5:
  4970  000682  6FE0               	movwf	_main$1642& (0+255),b
  4971                           
  4972                           ; BSR set to: 0
  4973                           
  4974                           ; BSR set to: 0
  4975  000684  0EC6               	movlw	low (_line2+1)
  4976  000686  6F81               	movwf	sprintf@wh& (0+255),b
  4977  000688  0E01               	movlw	high (_line2+1)
  4978  00068A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4979  00068C  0E08               	movlw	low STR_80
  4980  00068E  6F83               	movwf	sprintf@f& (0+255),b
  4981  000690  0E7E               	movlw	high STR_80
  4982  000692  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4983  000694  C0E9  F085         	movff	_umidajt,?_sprintf+4
  4984  000698  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4985  00069A  C0E0  F087         	movff	_main$1642,?_sprintf+6
  4986  00069E  C0E1  F088         	movff	_main$1642+1,?_sprintf+7
  4987  0006A2  EC10  F02D         	call	_sprintf	;wreg free
  4988                           
  4989                           ;main.c: 234: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4990  0006A6  0EB1               	movlw	low (_line3+1)
  4991  0006A8  0100               	movlb	0	; () banked
  4992  0006AA  6F81               	movwf	sprintf@wh& (0+255),b
  4993  0006AC  0E01               	movlw	high (_line3+1)
  4994  0006AE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4995  0006B0  0E4F               	movlw	low STR_81
  4996  0006B2  6F83               	movwf	sprintf@f& (0+255),b
  4997  0006B4  0E7F               	movlw	high STR_81
  4998  0006B6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4999  0006B8  0EEC               	movlw	low _fase
  5000  0006BA  6F60               	movwf	faseAtual@_fase& (0+255),b
  5001  0006BC  0E00               	movlw	high _fase
  5002  0006BE  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5003  0006C0  0EEA               	movlw	low _tempajt
  5004  0006C2  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5005  0006C4  0E00               	movlw	high _tempajt
  5006  0006C6  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5007  0006C8  0E3F               	movlw	63
  5008  0006CA  EC2B  F023         	call	_faseAtual
  5009  0006CE  C060  F085         	movff	?_faseAtual,?_sprintf+4
  5010  0006D2  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  5011  0006D6  EC10  F02D         	call	_sprintf	;wreg free
  5012                           
  5013                           ;main.c: 235: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  5014  0006DA  0E9C               	movlw	low (_line4+1)
  5015  0006DC  0100               	movlb	0	; () banked
  5016  0006DE  6F81               	movwf	sprintf@wh& (0+255),b
  5017  0006E0  0E01               	movlw	high (_line4+1)
  5018  0006E2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5019  0006E4  0E1E               	movlw	low STR_82
  5020  0006E6  6F83               	movwf	sprintf@f& (0+255),b
  5021  0006E8  0E7F               	movlw	high STR_82
  5022  0006EA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5023  0006EC  51EB               	movf	_clima& (0+255),w,b
  5024  0006EE  ECEC  F02C         	call	_climaAtual
  5025  0006F2  C060  F085         	movff	?_climaAtual,?_sprintf+4
  5026  0006F6  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  5027  0006FA  EC10  F02D         	call	_sprintf	;wreg free
  5028                           
  5029                           ;main.c: 236: break;
  5030  0006FE  D1B0               	goto	l1316
  5031  000700                     
  5032                           ;main.c: 238: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  5033  000700  0100               	movlb	0	; () banked
  5034  000702  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5035  000704  B4D8               	btfsc	status,2,c
  5036  000706  D004               	goto	l1324
  5037                           
  5038                           ; BSR set to: 0
  5039  000708  0EE9               	movlw	low STR_85
  5040  00070A  6FE2               	movwf	_main$1649& (0+255),b
  5041  00070C  0E7E               	movlw	high STR_85
  5042  00070E  D003               	goto	L6
  5043  000710                     l1324:
  5044                           
  5045                           ; BSR set to: 0
  5046                           
  5047                           ; BSR set to: 0
  5048  000710  0E9E               	movlw	low STR_84
  5049  000712  6FE2               	movwf	_main$1649& (0+255),b
  5050  000714  0E7F               	movlw	high STR_84
  5051  000716                     L6:
  5052  000716  6FE3               	movwf	(_main$1649+1)& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           
  5056                           ; BSR set to: 0
  5057  000718  0EDB               	movlw	low (_line1+1)
  5058  00071A  6F81               	movwf	sprintf@wh& (0+255),b
  5059  00071C  0E01               	movlw	high (_line1+1)
  5060  00071E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5061  000720  0E58               	movlw	low STR_83
  5062  000722  6F83               	movwf	sprintf@f& (0+255),b
  5063  000724  0E7F               	movlw	high STR_83
  5064  000726  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5065  000728  C0E2  F085         	movff	_main$1649,?_sprintf+4
  5066  00072C  C0E3  F086         	movff	_main$1649+1,?_sprintf+5
  5067  000730  EC10  F02D         	call	_sprintf	;wreg free
  5068                           
  5069                           ;main.c: 239: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  5070  000734  0100               	movlb	0	; () banked
  5071  000736  51F8               	movf	_trava_fase& (0+255),w,b
  5072  000738  A4D8               	btfss	status,2,c
  5073  00073A  D004               	goto	l1328
  5074                           
  5075                           ; BSR set to: 0
  5076  00073C  0EF4               	movlw	low STR_88
  5077  00073E  6FE4               	movwf	_main$1654& (0+255),b
  5078  000740  0E7E               	movlw	high STR_88
  5079  000742  D003               	goto	L7
  5080  000744                     l1328:
  5081                           
  5082                           ; BSR set to: 0
  5083                           
  5084                           ; BSR set to: 0
  5085  000744  0E72               	movlw	low STR_87
  5086  000746  6FE4               	movwf	_main$1654& (0+255),b
  5087  000748  0E7F               	movlw	high STR_87
  5088  00074A                     L7:
  5089  00074A  6FE5               	movwf	(_main$1654+1)& (0+255),b
  5090                           
  5091                           ; BSR set to: 0
  5092                           
  5093                           ; BSR set to: 0
  5094  00074C  0EC6               	movlw	low (_line2+1)
  5095  00074E  6F81               	movwf	sprintf@wh& (0+255),b
  5096  000750  0E01               	movlw	high (_line2+1)
  5097  000752  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5098  000754  0E28               	movlw	low STR_86
  5099  000756  6F83               	movwf	sprintf@f& (0+255),b
  5100  000758  0E7F               	movlw	high STR_86
  5101  00075A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5102  00075C  C0E4  F085         	movff	_main$1654,?_sprintf+4
  5103  000760  C0E5  F086         	movff	_main$1654+1,?_sprintf+5
  5104  000764  EC10  F02D         	call	_sprintf	;wreg free
  5105                           
  5106                           ;main.c: 240: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  5107  000768  0100               	movlb	0	; () banked
  5108  00076A  51FA               	movf	_buzzer& (0+255),w,b
  5109  00076C  A4D8               	btfss	status,2,c
  5110  00076E  D004               	goto	l1332
  5111                           
  5112                           ; BSR set to: 0
  5113  000770  0E0A               	movlw	low STR_91
  5114  000772  6FE6               	movwf	_main$1659& (0+255),b
  5115  000774  0E7F               	movlw	high STR_91
  5116  000776  D003               	goto	L8
  5117  000778                     l1332:
  5118                           
  5119                           ; BSR set to: 0
  5120                           
  5121                           ; BSR set to: 0
  5122  000778  0EA5               	movlw	low STR_90
  5123  00077A  6FE6               	movwf	_main$1659& (0+255),b
  5124  00077C  0E7F               	movlw	high STR_90
  5125  00077E                     L8:
  5126  00077E  6FE7               	movwf	(_main$1659+1)& (0+255),b
  5127                           
  5128                           ; BSR set to: 0
  5129                           
  5130                           ; BSR set to: 0
  5131  000780  0EB1               	movlw	low (_line3+1)
  5132  000782  6F81               	movwf	sprintf@wh& (0+255),b
  5133  000784  0E01               	movlw	high (_line3+1)
  5134  000786  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5135  000788  0EFF               	movlw	low STR_89
  5136  00078A  6F83               	movwf	sprintf@f& (0+255),b
  5137  00078C  0E7E               	movlw	high STR_89
  5138  00078E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5139  000790  C0E6  F085         	movff	_main$1659,?_sprintf+4
  5140  000794  C0E7  F086         	movff	_main$1659+1,?_sprintf+5
  5141  000798  EC10  F02D         	call	_sprintf	;wreg free
  5142                           
  5143                           ;main.c: 241: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  5144  00079C  0E9C               	movlw	low (_line4+1)
  5145  00079E  0100               	movlb	0	; () banked
  5146  0007A0  6F81               	movwf	sprintf@wh& (0+255),b
  5147  0007A2  0E01               	movlw	high (_line4+1)
  5148  0007A4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5149  0007A6  0E8D               	movlw	low STR_92
  5150  0007A8  6F83               	movwf	sprintf@f& (0+255),b
  5151  0007AA  0E7C               	movlw	high STR_92
  5152  0007AC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5153  0007AE  EC10  F02D         	call	_sprintf	;wreg free
  5154                           
  5155                           ;main.c: 242: break;
  5156  0007B2  D156               	goto	l1316
  5157  0007B4                     
  5158                           ;main.c: 244: sprintf(&line1[1], "CONFIG WIFI      >>");
  5159  0007B4  0EDB               	movlw	low (_line1+1)
  5160  0007B6  0100               	movlb	0	; () banked
  5161  0007B8  6F81               	movwf	sprintf@wh& (0+255),b
  5162  0007BA  0E01               	movlw	high (_line1+1)
  5163  0007BC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5164  0007BE  0E79               	movlw	low STR_93
  5165  0007C0  6F83               	movwf	sprintf@f& (0+255),b
  5166  0007C2  0E7C               	movlw	high STR_93
  5167  0007C4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5168  0007C6  EC10  F02D         	call	_sprintf	;wreg free
  5169                           
  5170                           ;main.c: 245: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5171  0007CA  0EC6               	movlw	low (_line2+1)
  5172  0007CC  0100               	movlb	0	; () banked
  5173  0007CE  6F81               	movwf	sprintf@wh& (0+255),b
  5174  0007D0  0E01               	movlw	high (_line2+1)
  5175  0007D2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5176  0007D4  0EA1               	movlw	low STR_94
  5177  0007D6  6F83               	movwf	sprintf@f& (0+255),b
  5178  0007D8  0E7C               	movlw	high STR_94
  5179  0007DA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5180  0007DC  EC10  F02D         	call	_sprintf	;wreg free
  5181                           
  5182                           ;main.c: 246: break;
  5183  0007E0  D13F               	goto	l1316
  5184  0007E2                     
  5185                           ;main.c: 248: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5186  0007E2  0EDB               	movlw	low (_line1+1)
  5187  0007E4  0100               	movlb	0	; () banked
  5188  0007E6  6F81               	movwf	sprintf@wh& (0+255),b
  5189  0007E8  0E01               	movlw	high (_line1+1)
  5190  0007EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5191  0007EC  0EA5               	movlw	low STR_95
  5192  0007EE  6F83               	movwf	sprintf@f& (0+255),b
  5193  0007F0  0E7D               	movlw	high STR_95
  5194  0007F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5195  0007F4  C1F3  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5196  0007F8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5197  0007FA  C0F0  F087         	movff	_h_venotinha,?_sprintf+6
  5198  0007FE  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5199  000800  EC10  F02D         	call	_sprintf	;wreg free
  5200                           
  5201                           ;main.c: 249: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5202  000804  0EC6               	movlw	low (_line2+1)
  5203  000806  0100               	movlb	0	; () banked
  5204  000808  6F81               	movwf	sprintf@wh& (0+255),b
  5205  00080A  0E01               	movlw	high (_line2+1)
  5206  00080C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5207  00080E  0EB6               	movlw	low STR_96
  5208  000810  6F83               	movwf	sprintf@f& (0+255),b
  5209  000812  0E7D               	movlw	high STR_96
  5210  000814  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5211  000816  C0F7  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5212  00081A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5213  00081C  C0F1  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5214  000820  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5215  000822  EC10  F02D         	call	_sprintf	;wreg free
  5216                           
  5217                           ;main.c: 250: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5218  000826  0EB1               	movlw	low (_line3+1)
  5219  000828  0100               	movlb	0	; () banked
  5220  00082A  6F81               	movwf	sprintf@wh& (0+255),b
  5221  00082C  0E01               	movlw	high (_line3+1)
  5222  00082E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5223  000830  0EC7               	movlw	low STR_97
  5224  000832  6F83               	movwf	sprintf@f& (0+255),b
  5225  000834  0E7D               	movlw	high STR_97
  5226  000836  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5227  000838  C0EF  F085         	movff	_h_abafador,?_sprintf+4
  5228  00083C  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5229  00083E  C0EE  F087         	movff	_h_buzzer,?_sprintf+6
  5230  000842  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5231  000844  EC10  F02D         	call	_sprintf	;wreg free
  5232                           
  5233                           ;main.c: 251: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5234  000848  0E9C               	movlw	low (_line4+1)
  5235  00084A  0100               	movlb	0	; () banked
  5236  00084C  6F81               	movwf	sprintf@wh& (0+255),b
  5237  00084E  0E01               	movlw	high (_line4+1)
  5238  000850  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5239  000852  0ED8               	movlw	low STR_98
  5240  000854  6F83               	movwf	sprintf@f& (0+255),b
  5241  000856  0E7D               	movlw	high STR_98
  5242  000858  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5243  00085A  C1F4  F085         	movff	_h_flap,?_sprintf+4
  5244  00085E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5245  000860  C0F5  F087         	movff	_t_flap_ligado,?_sprintf+6
  5246  000864  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5247  000866  EC10  F02D         	call	_sprintf	;wreg free
  5248                           
  5249                           ;main.c: 252: break;
  5250  00086A  D0FA               	goto	l1316
  5251  00086C                     
  5252                           ;main.c: 254: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5253  00086C  0EDB               	movlw	low (_line1+1)
  5254  00086E  0100               	movlb	0	; () banked
  5255  000870  6F81               	movwf	sprintf@wh& (0+255),b
  5256  000872  0E01               	movlw	high (_line1+1)
  5257  000874  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5258  000876  0E3B               	movlw	low STR_99
  5259  000878  6F83               	movwf	sprintf@f& (0+255),b
  5260  00087A  0E7D               	movlw	high STR_99
  5261  00087C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5262  00087E  C0F4  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5263  000882  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5264  000884  C1EF  F087         	movff	_wifi_SENHA,?_sprintf+6
  5265  000888  C1F0  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5266  00088C  EC10  F02D         	call	_sprintf	;wreg free
  5267                           
  5268                           ;main.c: 255: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5269  000890  0EC6               	movlw	low (_line2+1)
  5270  000892  0100               	movlb	0	; () banked
  5271  000894  6F81               	movwf	sprintf@wh& (0+255),b
  5272  000896  0E01               	movlw	high (_line2+1)
  5273  000898  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5274  00089A  0E4D               	movlw	low STR_100
  5275  00089C  6F83               	movwf	sprintf@f& (0+255),b
  5276  00089E  0E7D               	movlw	high STR_100
  5277  0008A0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5278  0008A2  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5279  0008A6  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5280  0008A8  C0ED  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5281  0008AC  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5282  0008AE  EC10  F02D         	call	_sprintf	;wreg free
  5283                           
  5284                           ;main.c: 256: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5285  0008B2  0EB1               	movlw	low (_line3+1)
  5286  0008B4  0100               	movlb	0	; () banked
  5287  0008B6  6F81               	movwf	sprintf@wh& (0+255),b
  5288  0008B8  0E01               	movlw	high (_line3+1)
  5289  0008BA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5290  0008BC  0E5F               	movlw	low STR_101
  5291  0008BE  6F83               	movwf	sprintf@f& (0+255),b
  5292  0008C0  0E7D               	movlw	high STR_101
  5293  0008C2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5294  0008C4  C0F3  F085         	movff	_t_temp_automatica,?_sprintf+4
  5295  0008C8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5296  0008CA  C0F2  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5297  0008CE  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5298  0008D0  EC10  F02D         	call	_sprintf	;wreg free
  5299                           
  5300                           ;main.c: 257: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5301  0008D4  0E9C               	movlw	low (_line4+1)
  5302  0008D6  0100               	movlb	0	; () banked
  5303  0008D8  6F81               	movwf	sprintf@wh& (0+255),b
  5304  0008DA  0E01               	movlw	high (_line4+1)
  5305  0008DC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5306  0008DE  0E3C               	movlw	low STR_102
  5307  0008E0  6F83               	movwf	sprintf@f& (0+255),b
  5308  0008E2  0E7F               	movlw	high STR_102
  5309  0008E4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5310  0008E6  C1F1  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5311  0008EA  C1F2  F086         	movff	_wifi_habilita_alteracao+1,?_sprintf+5
  5312  0008EE  EC10  F02D         	call	_sprintf	;wreg free
  5313                           
  5314                           ;main.c: 258: break;
  5315  0008F2  D0B6               	goto	l1316
  5316  0008F4                     
  5317                           ;main.c: 260: sprintf(line1, "REDE:%s", ssid);
  5318  0008F4  0EDA               	movlw	low _line1
  5319  0008F6  0100               	movlb	0	; () banked
  5320  0008F8  6F81               	movwf	sprintf@wh& (0+255),b
  5321  0008FA  0E01               	movlw	high _line1
  5322  0008FC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5323  0008FE  0E7A               	movlw	low STR_103
  5324  000900  6F83               	movwf	sprintf@f& (0+255),b
  5325  000902  0E7F               	movlw	high STR_103
  5326  000904  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5327  000906  0EA1               	movlw	low _ssid
  5328  000908  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5329  00090A  0E02               	movlw	high _ssid
  5330  00090C  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5331  00090E  EC10  F02D         	call	_sprintf	;wreg free
  5332                           
  5333                           ;main.c: 261: sprintf(line2, "SENHA:%s", senha);
  5334  000912  0EC5               	movlw	low _line2
  5335  000914  0100               	movlb	0	; () banked
  5336  000916  6F81               	movwf	sprintf@wh& (0+255),b
  5337  000918  0E01               	movlw	high _line2
  5338  00091A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5339  00091C  0E61               	movlw	low STR_104
  5340  00091E  6F83               	movwf	sprintf@f& (0+255),b
  5341  000920  0E7F               	movlw	high STR_104
  5342  000922  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5343  000924  0E92               	movlw	low _senha
  5344  000926  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5345  000928  0E02               	movlw	high _senha
  5346  00092A  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5347  00092C  EC10  F02D         	call	_sprintf	;wreg free
  5348                           
  5349                           ;main.c: 263: sprintf(line3, "NS: %s", wifi_MAC);
  5350  000930  0EB0               	movlw	low _line3
  5351  000932  0100               	movlb	0	; () banked
  5352  000934  6F81               	movwf	sprintf@wh& (0+255),b
  5353  000936  0E01               	movlw	high _line3
  5354  000938  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5355  00093A  0EB3               	movlw	low STR_105
  5356  00093C  6F83               	movwf	sprintf@f& (0+255),b
  5357  00093E  0E7F               	movlw	high STR_105
  5358  000940  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5359  000942  0EB0               	movlw	low _wifi_MAC
  5360  000944  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5361  000946  0E02               	movlw	high _wifi_MAC
  5362  000948  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5363  00094A  EC10  F02D         	call	_sprintf	;wreg free
  5364                           
  5365                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5366  00094E  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5367  000952  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5368  000956  0E00               	movlw	0
  5369  000958  0100               	movlb	0	; () banked
  5370  00095A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5371  00095C  0E27               	movlw	39
  5372  00095E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5373  000960  ECA9  F02E         	call	___wmul	;wreg free
  5374  000964  C060  F0D8         	movff	?___wmul,_main$2492
  5375  000968  C061  F0D9         	movff	?___wmul+1,_main$2492+1
  5376                           
  5377                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5378  00096C  0E9B               	movlw	low _line4
  5379  00096E  0100               	movlb	0	; () banked
  5380  000970  6F81               	movwf	sprintf@wh& (0+255),b
  5381  000972  0E01               	movlw	high _line4
  5382  000974  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5383  000976  0E94               	movlw	low STR_106
  5384  000978  6F83               	movwf	sprintf@f& (0+255),b
  5385  00097A  0E7D               	movlw	high STR_106
  5386  00097C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5387  00097E  C0D8  F085         	movff	_main$2492,?_sprintf+4
  5388  000982  C0D9  F086         	movff	_main$2492+1,?_sprintf+5
  5389  000986  EC10  F02D         	call	_sprintf	;wreg free
  5390                           
  5391                           ;main.c: 265: break;
  5392  00098A  D06A               	goto	l1316
  5393  00098C                     
  5394                           ;main.c: 267: sprintf(&line1[1], "CONFIGURAR       >>");
  5395  00098C  0EDB               	movlw	low (_line1+1)
  5396  00098E  0100               	movlb	0	; () banked
  5397  000990  6F81               	movwf	sprintf@wh& (0+255),b
  5398  000992  0E01               	movlw	high (_line1+1)
  5399  000994  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5400  000996  0E65               	movlw	low STR_107
  5401  000998  6F83               	movwf	sprintf@f& (0+255),b
  5402  00099A  0E7C               	movlw	high STR_107
  5403  00099C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5404  00099E  EC10  F02D         	call	_sprintf	;wreg free
  5405                           
  5406                           ;main.c: 268: break;
  5407  0009A2  D05E               	goto	l1316
  5408  0009A4                     
  5409                           ;main.c: 270: alterarConfigWifi();
  5410  0009A4  EC10  F01B         	call	_alterarConfigWifi	;wreg free
  5411                           
  5412                           ;main.c: 271: break;
  5413  0009A8  D05B               	goto	l1316
  5414  0009AA                     
  5415                           ;main.c: 273: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5416  0009AA  0EDB               	movlw	low (_line1+1)
  5417  0009AC  0100               	movlb	0	; () banked
  5418  0009AE  6F81               	movwf	sprintf@wh& (0+255),b
  5419  0009B0  0E01               	movlw	high (_line1+1)
  5420  0009B2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5421  0009B4  0E03               	movlw	low STR_108
  5422  0009B6  6F83               	movwf	sprintf@f& (0+255),b
  5423  0009B8  0E7D               	movlw	high STR_108
  5424  0009BA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5425  0009BC  C04E  F085         	movff	_t_fim_fase1,?_sprintf+4
  5426  0009C0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5427  0009C2  EC10  F02D         	call	_sprintf	;wreg free
  5428                           
  5429                           ;main.c: 274: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5430  0009C6  0EC6               	movlw	low (_line2+1)
  5431  0009C8  0100               	movlb	0	; () banked
  5432  0009CA  6F81               	movwf	sprintf@wh& (0+255),b
  5433  0009CC  0E01               	movlw	high (_line2+1)
  5434  0009CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5435  0009D0  0E16               	movlw	low STR_109
  5436  0009D2  6F83               	movwf	sprintf@f& (0+255),b
  5437  0009D4  0E7D               	movlw	high STR_109
  5438  0009D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5439  0009D8  C04D  F085         	movff	_t_fim_fase2,?_sprintf+4
  5440  0009DC  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5441  0009DE  EC10  F02D         	call	_sprintf	;wreg free
  5442                           
  5443                           ;main.c: 275: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5444  0009E2  0EB1               	movlw	low (_line3+1)
  5445  0009E4  0100               	movlb	0	; () banked
  5446  0009E6  6F81               	movwf	sprintf@wh& (0+255),b
  5447  0009E8  0E01               	movlw	high (_line3+1)
  5448  0009EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5449  0009EC  0EF0               	movlw	low STR_110
  5450  0009EE  6F83               	movwf	sprintf@f& (0+255),b
  5451  0009F0  0E7C               	movlw	high STR_110
  5452  0009F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5453  0009F4  C04C  F085         	movff	_t_fim_fase3,?_sprintf+4
  5454  0009F8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5455  0009FA  EC10  F02D         	call	_sprintf	;wreg free
  5456                           
  5457                           ;main.c: 276: sprintf(line4, "*0 nao passa fase");
  5458  0009FE  0E9B               	movlw	low _line4
  5459  000A00  0100               	movlb	0	; () banked
  5460  000A02  6F81               	movwf	sprintf@wh& (0+255),b
  5461  000A04  0E01               	movlw	high _line4
  5462  000A06  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5463  000A08  0E71               	movlw	low STR_111
  5464  000A0A  6F83               	movwf	sprintf@f& (0+255),b
  5465  000A0C  0E7D               	movlw	high STR_111
  5466  000A0E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5467  000A10  EC10  F02D         	call	_sprintf	;wreg free
  5468                           
  5469                           ;main.c: 277: break;
  5470  000A14  D025               	goto	l1316
  5471  000A16  0E00               	movlw	0
  5472  000A18  0100               	movlb	0	; () banked
  5473  000A1A  6FFB               	movwf	_menu& (0+255),b
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;main.c: 280: }
  5477                           
  5478                           ;main.c: 279: break;
  5479  000A1C  D021               	goto	l1316
  5480  000A1E                     l1284:
  5481                           
  5482                           ; BSR set to: 0
  5483  000A1E  0100               	movlb	0	; () banked
  5484  000A20  51FB               	movf	_menu& (0+255),w,b
  5485                           
  5486                           ; Switch size 1, requested type "space"
  5487                           ; Number of cases is 10, Range of values is 0 to 11
  5488                           ; switch strategies available:
  5489                           ; Name         Instructions Cycles
  5490                           ; simple_byte           31    16 (average)
  5491                           ;	Chosen strategy is simple_byte
  5492  000A22  0A00               	xorlw	0	; case 0
  5493  000A24  B4D8               	btfsc	status,2,c
  5494  000A26  D4B1               	goto	l1285
  5495  000A28  0A01               	xorlw	1	; case 1
  5496  000A2A  B4D8               	btfsc	status,2,c
  5497  000A2C  D611               	goto	l1317
  5498  000A2E  0A03               	xorlw	3	; case 2
  5499  000A30  B4D8               	btfsc	status,2,c
  5500  000A32  D666               	goto	l1322
  5501  000A34  0A01               	xorlw	1	; case 3
  5502  000A36  B4D8               	btfsc	status,2,c
  5503  000A38  D6BD               	goto	l1335
  5504  000A3A  0A06               	xorlw	6	; case 5
  5505  000A3C  B4D8               	btfsc	status,2,c
  5506  000A3E  D6D1               	goto	l1336
  5507  000A40  0A03               	xorlw	3	; case 6
  5508  000A42  B4D8               	btfsc	status,2,c
  5509  000A44  D713               	goto	l1337
  5510  000A46  0A0E               	xorlw	14	; case 8
  5511  000A48  B4D8               	btfsc	status,2,c
  5512  000A4A  D754               	goto	l1338
  5513  000A4C  0A01               	xorlw	1	; case 9
  5514  000A4E  B4D8               	btfsc	status,2,c
  5515  000A50  D79D               	goto	l1339
  5516  000A52  0A03               	xorlw	3	; case 10
  5517  000A54  B4D8               	btfsc	status,2,c
  5518  000A56  D7A6               	goto	l1340
  5519  000A58  0A01               	xorlw	1	; case 11
  5520  000A5A  B4D8               	btfsc	status,2,c
  5521  000A5C  D7A6               	goto	l1341
  5522  000A5E  D7DB               	goto	l1342
  5523  000A60                     l1316:
  5524                           
  5525                           ;main.c: 284: if (menu == 1 | menu == 2 | menu == 3) {
  5526                           
  5527                           ; BSR set to: 0
  5528  000A60  0100               	movlb	0	; () banked
  5529  000A62  05FB               	decf	_menu& (0+255),w,b
  5530  000A64  B4D8               	btfsc	status,2,c
  5531  000A66  D008               	goto	u14630
  5532                           
  5533                           ; BSR set to: 0
  5534  000A68  0E02               	movlw	2
  5535  000A6A  19FB               	xorwf	_menu& (0+255),w,b
  5536  000A6C  B4D8               	btfsc	status,2,c
  5537  000A6E  D004               	goto	u14630
  5538                           
  5539                           ; BSR set to: 0
  5540  000A70  0E03               	movlw	3
  5541  000A72  19FB               	xorwf	_menu& (0+255),w,b
  5542  000A74  A4D8               	btfss	status,2,c
  5543  000A76  D1C9               	goto	l1343
  5544  000A78                     u14630:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;main.c: 285: ajuste_parametro = 0;
  5548                           
  5549                           ; BSR set to: 0
  5550  000A78  0E00               	movlw	0
  5551  000A7A  0101               	movlb	1	; () banked
  5552  000A7C  6F98               	movwf	_ajuste_parametro& (0+255),b
  5553                           
  5554                           ;main.c: 287: switch (opcaomenu) {
  5555  000A7E  D188               	goto	l1346
  5556  000A80                     
  5557                           ; BSR set to: 1
  5558                           ;main.c: 289: opcaomenu = 10;
  5559                           
  5560                           ; BSR set to: 1
  5561  000A80  0E0A               	movlw	10
  5562  000A82  D184               	goto	L11
  5563  000A84                     
  5564                           ; BSR set to: 1
  5565                           ;main.c: 292: menu = 1;
  5566                           
  5567                           ; BSR set to: 1
  5568  000A84  0E01               	movlw	1
  5569  000A86  0100               	movlb	0	; () banked
  5570  000A88  6FFB               	movwf	_menu& (0+255),b
  5571                           
  5572                           ;main.c: 293: line1[0] = '>';
  5573  000A8A  0E3E               	movlw	62
  5574  000A8C  0101               	movlb	1	; () banked
  5575  000A8E  6FDA               	movwf	_line1& (0+255),b
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;main.c: 294: if (btPress(64)) setRangeValor('+', &tempajt, 60, 160, 1);
  5579  000A90  0E40               	movlw	64
  5580  000A92  EC29  F02F         	call	_btPress
  5581  000A96  0900               	iorlw	0
  5582  000A98  B4D8               	btfsc	status,2,c
  5583  000A9A  D00E               	goto	l1350
  5584  000A9C  0EEA               	movlw	low _tempajt
  5585  000A9E  0100               	movlb	0	; () banked
  5586  000AA0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5587  000AA2  0E00               	movlw	high _tempajt
  5588  000AA4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5589  000AA6  0E3C               	movlw	60
  5590  000AA8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5591  000AAA  0EA0               	movlw	160
  5592  000AAC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5593  000AAE  0E01               	movlw	1
  5594  000AB0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5595  000AB2  0E2B               	movlw	43
  5596  000AB4  ECD0  F028         	call	_setRangeValor
  5597  000AB8                     l1350:
  5598                           
  5599                           ;main.c: 295: if (btPress(32)) setRangeValor('-', &tempajt, 60, 160, 1);
  5600  000AB8  0E20               	movlw	32
  5601  000ABA  EC29  F02F         	call	_btPress
  5602  000ABE  0900               	iorlw	0
  5603  000AC0  B4D8               	btfsc	status,2,c
  5604  000AC2  D189               	goto	l1348
  5605  000AC4  0EEA               	movlw	low _tempajt
  5606  000AC6  0100               	movlb	0	; () banked
  5607  000AC8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5608  000ACA  0E00               	movlw	high _tempajt
  5609  000ACC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5610  000ACE  0E3C               	movlw	60
  5611  000AD0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5612  000AD2  0EA0               	movlw	160
  5613  000AD4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5614  000AD6  0E01               	movlw	1
  5615  000AD8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5616  000ADA  0E2D               	movlw	45
  5617  000ADC  ECD0  F028         	call	_setRangeValor
  5618                           
  5619                           ;main.c: 296: break;
  5620  000AE0  D17A               	goto	l1348
  5621  000AE2                     
  5622                           ;main.c: 298: line2[0] = '>';
  5623  000AE2  0E3E               	movlw	62
  5624  000AE4  0101               	movlb	1	; () banked
  5625  000AE6  6FC5               	movwf	_line2& (0+255),b
  5626                           
  5627                           ;main.c: 299: if (tipo_modo_trabalho == 0) {
  5628  000AE8  0100               	movlb	0	; () banked
  5629  000AEA  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5630  000AEC  A4D8               	btfss	status,2,c
  5631  000AEE  D173               	goto	l1348
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;main.c: 300: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5635  000AF0  0E40               	movlw	64
  5636  000AF2  EC29  F02F         	call	_btPress
  5637  000AF6  0900               	iorlw	0
  5638  000AF8  B4D8               	btfsc	status,2,c
  5639  000AFA  D010               	goto	l1354
  5640  000AFC  0EE9               	movlw	low _umidajt
  5641  000AFE  0100               	movlb	0	; () banked
  5642  000B00  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5643  000B02  0E00               	movlw	high _umidajt
  5644  000B04  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5645  000B06  0EEA               	movlw	low _tempajt
  5646  000B08  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5647  000B0A  0E00               	movlw	high _tempajt
  5648  000B0C  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5649  000B0E  0EEB               	movlw	low _clima
  5650  000B10  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5651  000B12  0E00               	movlw	high _clima
  5652  000B14  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5653  000B16  0E2B               	movlw	43
  5654  000B18  ECCA  F023         	call	_setUmidade
  5655  000B1C                     l1354:
  5656                           
  5657                           ;main.c: 301: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5658  000B1C  0E20               	movlw	32
  5659  000B1E  EC29  F02F         	call	_btPress
  5660  000B22  0900               	iorlw	0
  5661  000B24  B4D8               	btfsc	status,2,c
  5662  000B26  D157               	goto	l1348
  5663  000B28  0EE9               	movlw	low _umidajt
  5664  000B2A  0100               	movlb	0	; () banked
  5665  000B2C  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5666  000B2E  0E00               	movlw	high _umidajt
  5667  000B30  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5668  000B32  0EEA               	movlw	low _tempajt
  5669  000B34  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5670  000B36  0E00               	movlw	high _tempajt
  5671  000B38  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5672  000B3A  0EEB               	movlw	low _clima
  5673  000B3C  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5674  000B3E  0E00               	movlw	high _clima
  5675  000B40  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5676  000B42  0E2D               	movlw	45
  5677  000B44  ECCA  F023         	call	_setUmidade
  5678                           
  5679                           ;main.c: 302: }
  5680                           ;main.c: 303: break;
  5681  000B48  D146               	goto	l1348
  5682  000B4A                     
  5683                           ;main.c: 305: line3[0] = '>';
  5684  000B4A  0E3E               	movlw	62
  5685  000B4C  0101               	movlb	1	; () banked
  5686  000B4E  6FB0               	movwf	_line3& (0+255),b
  5687                           
  5688                           ; BSR set to: 1
  5689                           ;main.c: 306: if (btPress(64)) {
  5690  000B50  0E40               	movlw	64
  5691  000B52  EC29  F02F         	call	_btPress
  5692  000B56  0900               	iorlw	0
  5693  000B58  B4D8               	btfsc	status,2,c
  5694  000B5A  D02A               	goto	l1357
  5695                           
  5696                           ;main.c: 307: setRangeValor('+', &fase, 1, 4, 4);
  5697  000B5C  0EEC               	movlw	low _fase
  5698  000B5E  0100               	movlb	0	; () banked
  5699  000B60  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5700  000B62  0E00               	movlw	high _fase
  5701  000B64  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5702  000B66  0E01               	movlw	1
  5703  000B68  6F67               	movwf	setRangeValor@_min& (0+255),b
  5704  000B6A  0E04               	movlw	4
  5705  000B6C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5706  000B6E  0E04               	movlw	4
  5707  000B70  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5708  000B72  0E2B               	movlw	43
  5709  000B74  ECD0  F028         	call	_setRangeValor
  5710                           
  5711                           ;main.c: 308: faseAtual('A', &fase, &tempajt);
  5712  000B78  0EEC               	movlw	low _fase
  5713  000B7A  0100               	movlb	0	; () banked
  5714  000B7C  6F60               	movwf	faseAtual@_fase& (0+255),b
  5715  000B7E  0E00               	movlw	high _fase
  5716  000B80  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5717  000B82  0EEA               	movlw	low _tempajt
  5718  000B84  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5719  000B86  0E00               	movlw	high _tempajt
  5720  000B88  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5721  000B8A  0E41               	movlw	65
  5722  000B8C  EC2B  F023         	call	_faseAtual
  5723                           
  5724                           ;main.c: 309: setUmidade('A', &umidajt, &tempajt, &clima);
  5725  000B90  0EE9               	movlw	low _umidajt
  5726  000B92  0100               	movlb	0	; () banked
  5727  000B94  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5728  000B96  0E00               	movlw	high _umidajt
  5729  000B98  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5730  000B9A  0EEA               	movlw	low _tempajt
  5731  000B9C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5732  000B9E  0E00               	movlw	high _tempajt
  5733  000BA0  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5734  000BA2  0EEB               	movlw	low _clima
  5735  000BA4  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5736  000BA6  0E00               	movlw	high _clima
  5737  000BA8  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5738  000BAA  0E41               	movlw	65
  5739  000BAC  ECCA  F023         	call	_setUmidade
  5740  000BB0                     l1357:
  5741                           
  5742                           ;main.c: 310: }
  5743                           ;main.c: 311: if (btPress(32)) {
  5744  000BB0  0E20               	movlw	32
  5745  000BB2  EC29  F02F         	call	_btPress
  5746  000BB6  0900               	iorlw	0
  5747  000BB8  B4D8               	btfsc	status,2,c
  5748  000BBA  D10D               	goto	l1348
  5749                           
  5750                           ;main.c: 312: setRangeValor('-', &fase, 1, 4, 4);
  5751  000BBC  0EEC               	movlw	low _fase
  5752  000BBE  0100               	movlb	0	; () banked
  5753  000BC0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5754  000BC2  0E00               	movlw	high _fase
  5755  000BC4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5756  000BC6  0E01               	movlw	1
  5757  000BC8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5758  000BCA  0E04               	movlw	4
  5759  000BCC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5760  000BCE  0E04               	movlw	4
  5761  000BD0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5762  000BD2  0E2D               	movlw	45
  5763  000BD4  ECD0  F028         	call	_setRangeValor
  5764                           
  5765                           ;main.c: 313: faseAtual('A', &fase, &tempajt);
  5766  000BD8  0EEC               	movlw	low _fase
  5767  000BDA  0100               	movlb	0	; () banked
  5768  000BDC  6F60               	movwf	faseAtual@_fase& (0+255),b
  5769  000BDE  0E00               	movlw	high _fase
  5770  000BE0  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5771  000BE2  0EEA               	movlw	low _tempajt
  5772  000BE4  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5773  000BE6  0E00               	movlw	high _tempajt
  5774  000BE8  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5775  000BEA  0E41               	movlw	65
  5776  000BEC  EC2B  F023         	call	_faseAtual
  5777                           
  5778                           ;main.c: 314: setUmidade('A', &umidajt, &tempajt, &clima);
  5779  000BF0  0EE9               	movlw	low _umidajt
  5780  000BF2  0100               	movlb	0	; () banked
  5781  000BF4  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5782  000BF6  0E00               	movlw	high _umidajt
  5783  000BF8  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5784  000BFA  0EEA               	movlw	low _tempajt
  5785  000BFC  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5786  000BFE  0E00               	movlw	high _tempajt
  5787  000C00  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5788  000C02  0EEB               	movlw	low _clima
  5789  000C04  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5790  000C06  0E00               	movlw	high _clima
  5791  000C08  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5792  000C0A  0E41               	movlw	65
  5793  000C0C  ECCA  F023         	call	_setUmidade
  5794                           
  5795                           ;main.c: 315: }
  5796                           ;main.c: 316: break;
  5797  000C10  D0E2               	goto	l1348
  5798  000C12                     
  5799                           ;main.c: 318: menu = 1;
  5800  000C12  0E01               	movlw	1
  5801  000C14  0100               	movlb	0	; () banked
  5802  000C16  6FFB               	movwf	_menu& (0+255),b
  5803                           
  5804                           ;main.c: 319: line4[0] = '>';
  5805  000C18  0E3E               	movlw	62
  5806  000C1A  0101               	movlb	1	; () banked
  5807  000C1C  6F9B               	movwf	_line4& (0+255),b
  5808                           
  5809                           ; BSR set to: 1
  5810                           ;main.c: 320: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5811  000C1E  0E40               	movlw	64
  5812  000C20  EC29  F02F         	call	_btPress
  5813  000C24  0900               	iorlw	0
  5814  000C26  B4D8               	btfsc	status,2,c
  5815  000C28  D00E               	goto	l1360
  5816  000C2A  0EEB               	movlw	low _clima
  5817  000C2C  0100               	movlb	0	; () banked
  5818  000C2E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5819  000C30  0E00               	movlw	high _clima
  5820  000C32  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5821  000C34  0E01               	movlw	1
  5822  000C36  6F67               	movwf	setRangeValor@_min& (0+255),b
  5823  000C38  0E03               	movlw	3
  5824  000C3A  6F68               	movwf	setRangeValor@_max& (0+255),b
  5825  000C3C  0E05               	movlw	5
  5826  000C3E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5827  000C40  0E2B               	movlw	43
  5828  000C42  ECD0  F028         	call	_setRangeValor
  5829  000C46                     l1360:
  5830                           
  5831                           ;main.c: 321: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5832  000C46  0E20               	movlw	32
  5833  000C48  EC29  F02F         	call	_btPress
  5834  000C4C  0900               	iorlw	0
  5835  000C4E  B4D8               	btfsc	status,2,c
  5836  000C50  D0C2               	goto	l1348
  5837  000C52  0EEB               	movlw	low _clima
  5838  000C54  0100               	movlb	0	; () banked
  5839  000C56  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5840  000C58  0E00               	movlw	high _clima
  5841  000C5A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5842  000C5C  0E01               	movlw	1
  5843  000C5E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5844  000C60  0E03               	movlw	3
  5845  000C62  6F68               	movwf	setRangeValor@_max& (0+255),b
  5846  000C64  0E05               	movlw	5
  5847  000C66  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5848  000C68  0E2D               	movlw	45
  5849  000C6A  ECD0  F028         	call	_setRangeValor
  5850                           
  5851                           ;main.c: 322: break;
  5852  000C6E  D0B3               	goto	l1348
  5853  000C70                     
  5854                           ;main.c: 324: menu = 2;
  5855  000C70  0E02               	movlw	2
  5856  000C72  0100               	movlb	0	; () banked
  5857  000C74  6FFB               	movwf	_menu& (0+255),b
  5858                           
  5859                           ;main.c: 325: line1[0] = '>';
  5860  000C76  0E3E               	movlw	62
  5861  000C78  0101               	movlb	1	; () banked
  5862  000C7A  6FDA               	movwf	_line1& (0+255),b
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;main.c: 326: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5866  000C7C  0E40               	movlw	64
  5867  000C7E  EC29  F02F         	call	_btPress
  5868  000C82  0900               	iorlw	0
  5869  000C84  A4D8               	btfss	status,2,c
  5870  000C86  D006               	goto	u14740
  5871  000C88  0E20               	movlw	32
  5872  000C8A  EC29  F02F         	call	_btPress
  5873  000C8E  0900               	iorlw	0
  5874  000C90  B4D8               	btfsc	status,2,c
  5875  000C92  D0A1               	goto	l1348
  5876  000C94                     u14740:
  5877  000C94  0EF6               	movlw	low _tipo_modo_trabalho
  5878  000C96  0100               	movlb	0	; () banked
  5879  000C98  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5880  000C9A  0E00               	movlw	high _tipo_modo_trabalho
  5881  000C9C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5882  000C9E  0E00               	movlw	0
  5883  000CA0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5884  000CA2  0E01               	movlw	1
  5885  000CA4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5886  000CA6  0E06               	movlw	6
  5887  000CA8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5888  000CAA  0E2B               	movlw	43
  5889  000CAC  ECD0  F028         	call	_setRangeValor
  5890                           
  5891                           ;main.c: 327: break;
  5892  000CB0  D092               	goto	l1348
  5893  000CB2                     
  5894                           ;main.c: 329: line2[0] = '>';
  5895  000CB2  0E3E               	movlw	62
  5896  000CB4  0101               	movlb	1	; () banked
  5897  000CB6  6FC5               	movwf	_line2& (0+255),b
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;main.c: 330: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5901  000CB8  0E40               	movlw	64
  5902  000CBA  EC29  F02F         	call	_btPress
  5903  000CBE  0900               	iorlw	0
  5904  000CC0  A4D8               	btfss	status,2,c
  5905  000CC2  D006               	goto	u14760
  5906  000CC4  0E20               	movlw	32
  5907  000CC6  EC29  F02F         	call	_btPress
  5908  000CCA  0900               	iorlw	0
  5909  000CCC  B4D8               	btfsc	status,2,c
  5910  000CCE  D083               	goto	l1348
  5911  000CD0                     u14760:
  5912  000CD0  0EF8               	movlw	low _trava_fase
  5913  000CD2  0100               	movlb	0	; () banked
  5914  000CD4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5915  000CD6  0E00               	movlw	high _trava_fase
  5916  000CD8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5917  000CDA  0E00               	movlw	0
  5918  000CDC  6F67               	movwf	setRangeValor@_min& (0+255),b
  5919  000CDE  0E01               	movlw	1
  5920  000CE0  6F68               	movwf	setRangeValor@_max& (0+255),b
  5921  000CE2  0E03               	movlw	3
  5922  000CE4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5923  000CE6  0E2B               	movlw	43
  5924  000CE8  ECD0  F028         	call	_setRangeValor
  5925                           
  5926                           ;main.c: 331: break;
  5927  000CEC  D074               	goto	l1348
  5928  000CEE                     
  5929                           ;main.c: 333: line3[0] = '>';
  5930  000CEE  0E3E               	movlw	62
  5931  000CF0  0101               	movlb	1	; () banked
  5932  000CF2  6FB0               	movwf	_line3& (0+255),b
  5933                           
  5934                           ; BSR set to: 1
  5935                           ;main.c: 334: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5936  000CF4  0E40               	movlw	64
  5937  000CF6  EC29  F02F         	call	_btPress
  5938  000CFA  0900               	iorlw	0
  5939  000CFC  A4D8               	btfss	status,2,c
  5940  000CFE  D006               	goto	u14780
  5941  000D00  0E20               	movlw	32
  5942  000D02  EC29  F02F         	call	_btPress
  5943  000D06  0900               	iorlw	0
  5944  000D08  B4D8               	btfsc	status,2,c
  5945  000D0A  D065               	goto	l1348
  5946  000D0C                     u14780:
  5947  000D0C  0EFA               	movlw	low _buzzer
  5948  000D0E  0100               	movlb	0	; () banked
  5949  000D10  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5950  000D12  0E00               	movlw	high _buzzer
  5951  000D14  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5952  000D16  0E00               	movlw	0
  5953  000D18  6F67               	movwf	setRangeValor@_min& (0+255),b
  5954  000D1A  0E01               	movlw	1
  5955  000D1C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5956  000D1E  0E0E               	movlw	14
  5957  000D20  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5958  000D22  0E2B               	movlw	43
  5959  000D24  ECD0  F028         	call	_setRangeValor
  5960                           
  5961                           ;main.c: 335: break;
  5962  000D28  D056               	goto	l1348
  5963  000D2A                     
  5964                           ;main.c: 337: menu = 2;
  5965  000D2A  0E02               	movlw	2
  5966  000D2C  0100               	movlb	0	; () banked
  5967  000D2E  6FFB               	movwf	_menu& (0+255),b
  5968                           
  5969                           ;main.c: 338: line4[0] = '>';
  5970  000D30  0E3E               	movlw	62
  5971  000D32  0101               	movlb	1	; () banked
  5972  000D34  6F9B               	movwf	_line4& (0+255),b
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;main.c: 339: if (btPress(2)) menu = 11;
  5976  000D36  0E02               	movlw	2
  5977  000D38  EC29  F02F         	call	_btPress
  5978  000D3C  0900               	iorlw	0
  5979  000D3E  B4D8               	btfsc	status,2,c
  5980  000D40  D04A               	goto	l1348
  5981  000D42  0E0B               	movlw	11
  5982  000D44  D00D               	goto	L10
  5983  000D46                     
  5984                           ;main.c: 342: menu = 3;
  5985                           
  5986                           ; BSR set to: 0
  5987  000D46  0E03               	movlw	3
  5988  000D48  0100               	movlb	0	; () banked
  5989  000D4A  6FFB               	movwf	_menu& (0+255),b
  5990                           
  5991                           ;main.c: 343: line1[0] = '>';
  5992  000D4C  0E3E               	movlw	62
  5993  000D4E  0101               	movlb	1	; () banked
  5994  000D50  6FDA               	movwf	_line1& (0+255),b
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;main.c: 344: if (btPress(2)) menu = 8;
  5998  000D52  0E02               	movlw	2
  5999  000D54  EC29  F02F         	call	_btPress
  6000  000D58  0900               	iorlw	0
  6001  000D5A  B4D8               	btfsc	status,2,c
  6002  000D5C  D03C               	goto	l1348
  6003  000D5E  0E08               	movlw	8
  6004  000D60                     L10:
  6005  000D60  0100               	movlb	0	; () banked
  6006  000D62  6FFB               	movwf	_menu& (0+255),b
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;main.c: 345: break;
  6010  000D64  D038               	goto	l1348
  6011  000D66                     
  6012                           ;main.c: 347: menu = 3;
  6013                           
  6014                           ; BSR set to: 0
  6015  000D66  0E03               	movlw	3
  6016  000D68  0100               	movlb	0	; () banked
  6017  000D6A  6FFB               	movwf	_menu& (0+255),b
  6018                           
  6019                           ;main.c: 348: line2[0] = '>';
  6020  000D6C  0E3E               	movlw	62
  6021  000D6E  0101               	movlb	1	; () banked
  6022  000D70  6FC5               	movwf	_line2& (0+255),b
  6023                           
  6024                           ; BSR set to: 1
  6025                           ;main.c: 349: if (btPress(2)) {
  6026  000D72  0E02               	movlw	2
  6027  000D74  EC29  F02F         	call	_btPress
  6028  000D78  0900               	iorlw	0
  6029  000D7A  B4D8               	btfsc	status,2,c
  6030  000D7C  D02C               	goto	l1348
  6031                           
  6032                           ;main.c: 350: menu = 5;
  6033  000D7E  0E05               	movlw	5
  6034  000D80  0100               	movlb	0	; () banked
  6035  000D82  6FFB               	movwf	_menu& (0+255),b
  6036                           
  6037                           ;main.c: 351: opcaomenu = 1;
  6038  000D84  0E01               	movlw	1
  6039  000D86  0101               	movlb	1	; () banked
  6040  000D88  D001               	goto	L11
  6041  000D8A                     
  6042                           ; BSR set to: 1
  6043                           ;main.c: 355: opcaomenu = 1;
  6044                           
  6045                           ; BSR set to: 1
  6046  000D8A  0E01               	movlw	1
  6047  000D8C                     L11:
  6048  000D8C  6F99               	movwf	_opcaomenu& (0+255),b
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;main.c: 357: }
  6052                           
  6053                           ;main.c: 356: break;
  6054  000D8E  D023               	goto	l1348
  6055  000D90                     l1346:
  6056                           
  6057                           ; BSR set to: 1
  6058                           
  6059                           ; BSR set to: 1
  6060  000D90  5199               	movf	_opcaomenu& (0+255),w,b
  6061                           
  6062                           ; Switch size 1, requested type "space"
  6063                           ; Number of cases is 11, Range of values is 0 to 10
  6064                           ; switch strategies available:
  6065                           ; Name         Instructions Cycles
  6066                           ; simple_byte           34    18 (average)
  6067                           ;	Chosen strategy is simple_byte
  6068  000D92  0A00               	xorlw	0	; case 0
  6069  000D94  B4D8               	btfsc	status,2,c
  6070  000D96  D674               	goto	l1347
  6071  000D98  0A01               	xorlw	1	; case 1
  6072  000D9A  B4D8               	btfsc	status,2,c
  6073  000D9C  D673               	goto	l1349
  6074  000D9E  0A03               	xorlw	3	; case 2
  6075  000DA0  B4D8               	btfsc	status,2,c
  6076  000DA2  D69F               	goto	l1352
  6077  000DA4  0A01               	xorlw	1	; case 3
  6078  000DA6  B4D8               	btfsc	status,2,c
  6079  000DA8  D6D0               	goto	l1356
  6080  000DAA  0A07               	xorlw	7	; case 4
  6081  000DAC  B4D8               	btfsc	status,2,c
  6082  000DAE  D731               	goto	l1359
  6083  000DB0  0A01               	xorlw	1	; case 5
  6084  000DB2  B4D8               	btfsc	status,2,c
  6085  000DB4  D75D               	goto	l1362
  6086  000DB6  0A03               	xorlw	3	; case 6
  6087  000DB8  B4D8               	btfsc	status,2,c
  6088  000DBA  D77B               	goto	l1366
  6089  000DBC  0A01               	xorlw	1	; case 7
  6090  000DBE  B4D8               	btfsc	status,2,c
  6091  000DC0  D796               	goto	l1370
  6092  000DC2  0A0F               	xorlw	15	; case 8
  6093  000DC4  B4D8               	btfsc	status,2,c
  6094  000DC6  D7B1               	goto	l1374
  6095  000DC8  0A01               	xorlw	1	; case 9
  6096  000DCA  B4D8               	btfsc	status,2,c
  6097  000DCC  D7BC               	goto	l1376
  6098  000DCE  0A03               	xorlw	3	; case 10
  6099  000DD0  B4D8               	btfsc	status,2,c
  6100  000DD2  D7C9               	goto	l1378
  6101  000DD4  D7DA               	goto	l1380
  6102  000DD6                     l1348:
  6103                           
  6104                           ;main.c: 359: if (btPress(16)) opcaomenu++;
  6105                           
  6106                           ; BSR set to: 1
  6107  000DD6  0E10               	movlw	16
  6108  000DD8  EC29  F02F         	call	_btPress
  6109  000DDC  0900               	iorlw	0
  6110  000DDE  B4D8               	btfsc	status,2,c
  6111  000DE0  D002               	goto	l1381
  6112  000DE2  0101               	movlb	1	; () banked
  6113  000DE4  2B99               	incf	_opcaomenu& (0+255),f,b
  6114  000DE6                     l1381:
  6115                           
  6116                           ;main.c: 360: if (btPress(1)) opcaomenu--;
  6117                           
  6118                           ; BSR set to: 1
  6119  000DE6  0E01               	movlw	1
  6120  000DE8  EC29  F02F         	call	_btPress
  6121  000DEC  0900               	iorlw	0
  6122  000DEE  B4D8               	btfsc	status,2,c
  6123  000DF0  D002               	goto	l1382
  6124  000DF2  0101               	movlb	1	; () banked
  6125  000DF4  0799               	decf	_opcaomenu& (0+255),f,b
  6126  000DF6                     l1382:
  6127                           
  6128                           ;main.c: 361: if (btPress(8)) menu = 0;
  6129                           
  6130                           ; BSR set to: 1
  6131  000DF6  0E08               	movlw	8
  6132  000DF8  EC29  F02F         	call	_btPress
  6133  000DFC  0900               	iorlw	0
  6134  000DFE  B4D8               	btfsc	status,2,c
  6135  000E00  EF0B  F00B         	goto	l1469
  6136  000E04  0E00               	movlw	0
  6137  000E06  EF09  F00B         	goto	L13
  6138  000E0A                     l1343:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;main.c: 366: if (menu == 5 | menu == 6) {
  6142                           
  6143                           ; BSR set to: 0
  6144  000E0A  0E05               	movlw	5
  6145  000E0C  19FB               	xorwf	_menu& (0+255),w,b
  6146  000E0E  B4D8               	btfsc	status,2,c
  6147  000E10  D004               	goto	u14860
  6148                           
  6149                           ; BSR set to: 0
  6150  000E12  0E06               	movlw	6
  6151  000E14  19FB               	xorwf	_menu& (0+255),w,b
  6152  000E16  A4D8               	btfss	status,2,c
  6153  000E18  D2F5               	goto	l1385
  6154  000E1A                     u14860:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;main.c: 367: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  6158                           
  6159                           ; BSR set to: 0
  6160  000E1A  0E30               	movlw	48
  6161  000E1C  0101               	movlb	1	; () banked
  6162  000E1E  19F3               	xorwf	_senha_desbloqueio_func& (0+255),w,b
  6163  000E20  B4D8               	btfsc	status,2,c
  6164  000E22  D2A4               	goto	l1389
  6165                           
  6166                           ; BSR set to: 1
  6167  000E24  0E01               	movlw	1
  6168  000E26  6F99               	movwf	_opcaomenu& (0+255),b
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;main.c: 368: switch (opcaomenu) {
  6172  000E28  D2A1               	goto	l1389
  6173  000E2A                     
  6174                           ; BSR set to: 1
  6175                           ;main.c: 370: menu = 5;
  6176                           
  6177                           ; BSR set to: 1
  6178  000E2A  0E05               	movlw	5
  6179  000E2C  0100               	movlb	0	; () banked
  6180  000E2E  6FFB               	movwf	_menu& (0+255),b
  6181                           
  6182                           ;main.c: 371: line1[0] = '>';
  6183  000E30  0E3E               	movlw	62
  6184  000E32  0101               	movlb	1	; () banked
  6185  000E34  6FDA               	movwf	_line1& (0+255),b
  6186                           
  6187                           ; BSR set to: 1
  6188                           ;main.c: 372: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6189  000E36  0E40               	movlw	64
  6190  000E38  EC29  F02F         	call	_btPress
  6191  000E3C  0900               	iorlw	0
  6192  000E3E  B4D8               	btfsc	status,2,c
  6193  000E40  D00E               	goto	l1391
  6194  000E42  0EF3               	movlw	low _senha_desbloqueio_func
  6195  000E44  0100               	movlb	0	; () banked
  6196  000E46  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6197  000E48  0E01               	movlw	high _senha_desbloqueio_func
  6198  000E4A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6199  000E4C  0E00               	movlw	0
  6200  000E4E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6201  000E50  0E32               	movlw	50
  6202  000E52  6F68               	movwf	setRangeValor@_max& (0+255),b
  6203  000E54  0E00               	movlw	0
  6204  000E56  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6205  000E58  0E2B               	movlw	43
  6206  000E5A  ECD0  F028         	call	_setRangeValor
  6207  000E5E                     l1391:
  6208                           
  6209                           ;main.c: 373: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6210  000E5E  0E20               	movlw	32
  6211  000E60  EC29  F02F         	call	_btPress
  6212  000E64  0900               	iorlw	0
  6213  000E66  B4D8               	btfsc	status,2,c
  6214  000E68  D2B0               	goto	l1393
  6215  000E6A  0EF3               	movlw	low _senha_desbloqueio_func
  6216  000E6C  0100               	movlb	0	; () banked
  6217  000E6E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6218  000E70  0E01               	movlw	high _senha_desbloqueio_func
  6219  000E72  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6220  000E74  0E00               	movlw	0
  6221  000E76  6F67               	movwf	setRangeValor@_min& (0+255),b
  6222  000E78  0E32               	movlw	50
  6223  000E7A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6224  000E7C  0E00               	movlw	0
  6225  000E7E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6226  000E80  0E2D               	movlw	45
  6227  000E82  ECD0  F028         	call	_setRangeValor
  6228                           
  6229                           ;main.c: 374: break;
  6230  000E86  D2A1               	goto	l1393
  6231  000E88                     
  6232                           ;main.c: 376: line2[0] = '>';
  6233  000E88  0E3E               	movlw	62
  6234  000E8A  0101               	movlb	1	; () banked
  6235  000E8C  6FC5               	movwf	_line2& (0+255),b
  6236                           
  6237                           ; BSR set to: 1
  6238                           ;main.c: 377: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6239  000E8E  0E40               	movlw	64
  6240  000E90  EC29  F02F         	call	_btPress
  6241  000E94  0900               	iorlw	0
  6242  000E96  B4D8               	btfsc	status,2,c
  6243  000E98  D00E               	goto	l1395
  6244  000E9A  0EF7               	movlw	low _tipo_sensor_umidade
  6245  000E9C  0100               	movlb	0	; () banked
  6246  000E9E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6247  000EA0  0E00               	movlw	high _tipo_sensor_umidade
  6248  000EA2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6249  000EA4  0E00               	movlw	0
  6250  000EA6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6251  000EA8  0E01               	movlw	1
  6252  000EAA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6253  000EAC  0E07               	movlw	7
  6254  000EAE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6255  000EB0  0E2B               	movlw	43
  6256  000EB2  ECD0  F028         	call	_setRangeValor
  6257  000EB6                     l1395:
  6258                           
  6259                           ;main.c: 378: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6260  000EB6  0E20               	movlw	32
  6261  000EB8  EC29  F02F         	call	_btPress
  6262  000EBC  0900               	iorlw	0
  6263  000EBE  B4D8               	btfsc	status,2,c
  6264  000EC0  D284               	goto	l1393
  6265  000EC2  0EF7               	movlw	low _tipo_sensor_umidade
  6266  000EC4  0100               	movlb	0	; () banked
  6267  000EC6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6268  000EC8  0E00               	movlw	high _tipo_sensor_umidade
  6269  000ECA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6270  000ECC  0E00               	movlw	0
  6271  000ECE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6272  000ED0  0E01               	movlw	1
  6273  000ED2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6274  000ED4  0E07               	movlw	7
  6275  000ED6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6276  000ED8  0E2D               	movlw	45
  6277  000EDA  ECD0  F028         	call	_setRangeValor
  6278                           
  6279                           ;main.c: 379: break;
  6280  000EDE  D275               	goto	l1393
  6281  000EE0                     
  6282                           ;main.c: 381: line3[0] = '>';
  6283  000EE0  0E3E               	movlw	62
  6284  000EE2  0101               	movlb	1	; () banked
  6285  000EE4  6FB0               	movwf	_line3& (0+255),b
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;main.c: 382: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6289  000EE6  0E40               	movlw	64
  6290  000EE8  EC29  F02F         	call	_btPress
  6291  000EEC  0900               	iorlw	0
  6292  000EEE  B4D8               	btfsc	status,2,c
  6293  000EF0  D00E               	goto	l1398
  6294  000EF2  0EEF               	movlw	low _h_abafador
  6295  000EF4  0100               	movlb	0	; () banked
  6296  000EF6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6297  000EF8  0E00               	movlw	high _h_abafador
  6298  000EFA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6299  000EFC  0E01               	movlw	1
  6300  000EFE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6301  000F00  0E0A               	movlw	10
  6302  000F02  6F68               	movwf	setRangeValor@_max& (0+255),b
  6303  000F04  0E0C               	movlw	12
  6304  000F06  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6305  000F08  0E2B               	movlw	43
  6306  000F0A  ECD0  F028         	call	_setRangeValor
  6307  000F0E                     l1398:
  6308                           
  6309                           ;main.c: 383: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6310  000F0E  0E20               	movlw	32
  6311  000F10  EC29  F02F         	call	_btPress
  6312  000F14  0900               	iorlw	0
  6313  000F16  B4D8               	btfsc	status,2,c
  6314  000F18  D258               	goto	l1393
  6315  000F1A  0EEF               	movlw	low _h_abafador
  6316  000F1C  0100               	movlb	0	; () banked
  6317  000F1E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6318  000F20  0E00               	movlw	high _h_abafador
  6319  000F22  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6320  000F24  0E01               	movlw	1
  6321  000F26  6F67               	movwf	setRangeValor@_min& (0+255),b
  6322  000F28  0E0A               	movlw	10
  6323  000F2A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6324  000F2C  0E0C               	movlw	12
  6325  000F2E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6326  000F30  0E2D               	movlw	45
  6327  000F32  ECD0  F028         	call	_setRangeValor
  6328                           
  6329                           ;main.c: 384: break;
  6330  000F36  D249               	goto	l1393
  6331  000F38                     
  6332                           ;main.c: 386: line4[0] = '>';
  6333  000F38  0E3E               	movlw	62
  6334  000F3A  0101               	movlb	1	; () banked
  6335  000F3C  6F9B               	movwf	_line4& (0+255),b
  6336                           
  6337                           ; BSR set to: 1
  6338                           ;main.c: 387: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6339  000F3E  0E40               	movlw	64
  6340  000F40  EC29  F02F         	call	_btPress
  6341  000F44  0900               	iorlw	0
  6342  000F46  B4D8               	btfsc	status,2,c
  6343  000F48  D00E               	goto	l1401
  6344  000F4A  0EF4               	movlw	low _h_flap
  6345  000F4C  0100               	movlb	0	; () banked
  6346  000F4E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6347  000F50  0E01               	movlw	high _h_flap
  6348  000F52  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6349  000F54  0E01               	movlw	1
  6350  000F56  6F67               	movwf	setRangeValor@_min& (0+255),b
  6351  000F58  0E0A               	movlw	10
  6352  000F5A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6353  000F5C  0E0D               	movlw	13
  6354  000F5E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6355  000F60  0E2B               	movlw	43
  6356  000F62  ECD0  F028         	call	_setRangeValor
  6357  000F66                     l1401:
  6358                           
  6359                           ;main.c: 388: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6360  000F66  0E20               	movlw	32
  6361  000F68  EC29  F02F         	call	_btPress
  6362  000F6C  0900               	iorlw	0
  6363  000F6E  B4D8               	btfsc	status,2,c
  6364  000F70  D22C               	goto	l1393
  6365  000F72  0EF4               	movlw	low _h_flap
  6366  000F74  0100               	movlb	0	; () banked
  6367  000F76  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6368  000F78  0E01               	movlw	high _h_flap
  6369  000F7A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6370  000F7C  0E01               	movlw	1
  6371  000F7E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6372  000F80  0E0A               	movlw	10
  6373  000F82  6F68               	movwf	setRangeValor@_max& (0+255),b
  6374  000F84  0E0D               	movlw	13
  6375  000F86  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6376  000F88  0E2D               	movlw	45
  6377  000F8A  ECD0  F028         	call	_setRangeValor
  6378                           
  6379                           ;main.c: 389: break;
  6380  000F8E  D21D               	goto	l1393
  6381  000F90                     
  6382                           ;main.c: 391: line1[11] = '>';
  6383  000F90  0E3E               	movlw	62
  6384  000F92  0101               	movlb	1	; () banked
  6385  000F94  6FE5               	movwf	(_line1+11)& (0+255),b
  6386                           
  6387                           ; BSR set to: 1
  6388                           ;main.c: 392: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6389  000F96  0E40               	movlw	64
  6390  000F98  EC29  F02F         	call	_btPress
  6391  000F9C  0900               	iorlw	0
  6392  000F9E  B4D8               	btfsc	status,2,c
  6393  000FA0  D00E               	goto	l1404
  6394  000FA2  0EF0               	movlw	low _h_venotinha
  6395  000FA4  0100               	movlb	0	; () banked
  6396  000FA6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6397  000FA8  0E00               	movlw	high _h_venotinha
  6398  000FAA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6399  000FAC  0E01               	movlw	1
  6400  000FAE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6401  000FB0  0E0A               	movlw	10
  6402  000FB2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6403  000FB4  0E0B               	movlw	11
  6404  000FB6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6405  000FB8  0E2B               	movlw	43
  6406  000FBA  ECD0  F028         	call	_setRangeValor
  6407  000FBE                     l1404:
  6408                           
  6409                           ;main.c: 393: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6410  000FBE  0E20               	movlw	32
  6411  000FC0  EC29  F02F         	call	_btPress
  6412  000FC4  0900               	iorlw	0
  6413  000FC6  B4D8               	btfsc	status,2,c
  6414  000FC8  D200               	goto	l1393
  6415  000FCA  0EF0               	movlw	low _h_venotinha
  6416  000FCC  0100               	movlb	0	; () banked
  6417  000FCE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6418  000FD0  0E00               	movlw	high _h_venotinha
  6419  000FD2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6420  000FD4  0E01               	movlw	1
  6421  000FD6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6422  000FD8  0E0A               	movlw	10
  6423  000FDA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6424  000FDC  0E0B               	movlw	11
  6425  000FDE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6426  000FE0  0E2D               	movlw	45
  6427  000FE2  ECD0  F028         	call	_setRangeValor
  6428                           
  6429                           ;main.c: 394: break;
  6430  000FE6  D1F1               	goto	l1393
  6431  000FE8                     
  6432                           ;main.c: 396: line2[11] = '>';
  6433  000FE8  0E3E               	movlw	62
  6434  000FEA  0101               	movlb	1	; () banked
  6435  000FEC  6FD0               	movwf	(_line2+11)& (0+255),b
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;main.c: 397: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6439  000FEE  0E40               	movlw	64
  6440  000FF0  EC29  F02F         	call	_btPress
  6441  000FF4  0900               	iorlw	0
  6442  000FF6  B4D8               	btfsc	status,2,c
  6443  000FF8  D00E               	goto	l1407
  6444  000FFA  0EF1               	movlw	low _h_modo_seguranca
  6445  000FFC  0100               	movlb	0	; () banked
  6446  000FFE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6447  001000  0E00               	movlw	high _h_modo_seguranca
  6448  001002  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6449  001004  0E00               	movlw	0
  6450  001006  6F67               	movwf	setRangeValor@_min& (0+255),b
  6451  001008  0E0F               	movlw	15
  6452  00100A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6453  00100C  0E10               	movlw	16
  6454  00100E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6455  001010  0E2B               	movlw	43
  6456  001012  ECD0  F028         	call	_setRangeValor
  6457  001016                     l1407:
  6458                           
  6459                           ;main.c: 398: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6460  001016  0E20               	movlw	32
  6461  001018  EC29  F02F         	call	_btPress
  6462  00101C  0900               	iorlw	0
  6463  00101E  B4D8               	btfsc	status,2,c
  6464  001020  D1D4               	goto	l1393
  6465  001022  0EF1               	movlw	low _h_modo_seguranca
  6466  001024  0100               	movlb	0	; () banked
  6467  001026  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6468  001028  0E00               	movlw	high _h_modo_seguranca
  6469  00102A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6470  00102C  0E00               	movlw	0
  6471  00102E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6472  001030  0E0F               	movlw	15
  6473  001032  6F68               	movwf	setRangeValor@_max& (0+255),b
  6474  001034  0E10               	movlw	16
  6475  001036  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6476  001038  0E2D               	movlw	45
  6477  00103A  ECD0  F028         	call	_setRangeValor
  6478                           
  6479                           ;main.c: 399: break;
  6480  00103E  D1C5               	goto	l1393
  6481  001040                     
  6482                           ;main.c: 401: line3[11] = '>';
  6483  001040  0E3E               	movlw	62
  6484  001042  0101               	movlb	1	; () banked
  6485  001044  6FBB               	movwf	(_line3+11)& (0+255),b
  6486                           
  6487                           ; BSR set to: 1
  6488                           ;main.c: 402: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6489  001046  0E40               	movlw	64
  6490  001048  EC29  F02F         	call	_btPress
  6491  00104C  0900               	iorlw	0
  6492  00104E  B4D8               	btfsc	status,2,c
  6493  001050  D00E               	goto	l1410
  6494  001052  0EEE               	movlw	low _h_buzzer
  6495  001054  0100               	movlb	0	; () banked
  6496  001056  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6497  001058  0E00               	movlw	high _h_buzzer
  6498  00105A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6499  00105C  0E01               	movlw	1
  6500  00105E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6501  001060  0E0F               	movlw	15
  6502  001062  6F68               	movwf	setRangeValor@_max& (0+255),b
  6503  001064  0E11               	movlw	17
  6504  001066  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6505  001068  0E2B               	movlw	43
  6506  00106A  ECD0  F028         	call	_setRangeValor
  6507  00106E                     l1410:
  6508                           
  6509                           ;main.c: 403: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6510  00106E  0E20               	movlw	32
  6511  001070  EC29  F02F         	call	_btPress
  6512  001074  0900               	iorlw	0
  6513  001076  B4D8               	btfsc	status,2,c
  6514  001078  D1A8               	goto	l1393
  6515  00107A  0EEE               	movlw	low _h_buzzer
  6516  00107C  0100               	movlb	0	; () banked
  6517  00107E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6518  001080  0E00               	movlw	high _h_buzzer
  6519  001082  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6520  001084  0E01               	movlw	1
  6521  001086  6F67               	movwf	setRangeValor@_min& (0+255),b
  6522  001088  0E0F               	movlw	15
  6523  00108A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6524  00108C  0E11               	movlw	17
  6525  00108E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6526  001090  0E2D               	movlw	45
  6527  001092  ECD0  F028         	call	_setRangeValor
  6528                           
  6529                           ;main.c: 404: break;
  6530  001096  D199               	goto	l1393
  6531  001098                     
  6532                           ;main.c: 406: menu = 5;
  6533  001098  0E05               	movlw	5
  6534  00109A  0100               	movlb	0	; () banked
  6535  00109C  6FFB               	movwf	_menu& (0+255),b
  6536                           
  6537                           ;main.c: 407: line4[11] = '>';
  6538  00109E  0E3E               	movlw	62
  6539  0010A0  0101               	movlb	1	; () banked
  6540  0010A2  6FA6               	movwf	(_line4+11)& (0+255),b
  6541                           
  6542                           ; BSR set to: 1
  6543                           ;main.c: 408: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6544  0010A4  0E40               	movlw	64
  6545  0010A6  EC29  F02F         	call	_btPress
  6546  0010AA  0900               	iorlw	0
  6547  0010AC  B4D8               	btfsc	status,2,c
  6548  0010AE  D00E               	goto	l1413
  6549  0010B0  0EF5               	movlw	low _t_flap_ligado
  6550  0010B2  0100               	movlb	0	; () banked
  6551  0010B4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6552  0010B6  0E00               	movlw	high _t_flap_ligado
  6553  0010B8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6554  0010BA  0E01               	movlw	1
  6555  0010BC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6556  0010BE  0EFA               	movlw	250
  6557  0010C0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6558  0010C2  0E12               	movlw	18
  6559  0010C4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6560  0010C6  0E2B               	movlw	43
  6561  0010C8  ECD0  F028         	call	_setRangeValor
  6562  0010CC                     l1413:
  6563                           
  6564                           ;main.c: 409: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6565  0010CC  0E20               	movlw	32
  6566  0010CE  EC29  F02F         	call	_btPress
  6567  0010D2  0900               	iorlw	0
  6568  0010D4  B4D8               	btfsc	status,2,c
  6569  0010D6  D179               	goto	l1393
  6570  0010D8  0EF5               	movlw	low _t_flap_ligado
  6571  0010DA  0100               	movlb	0	; () banked
  6572  0010DC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6573  0010DE  0E00               	movlw	high _t_flap_ligado
  6574  0010E0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6575  0010E2  0E01               	movlw	1
  6576  0010E4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6577  0010E6  0EFA               	movlw	250
  6578  0010E8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6579  0010EA  0E12               	movlw	18
  6580  0010EC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6581  0010EE  0E2D               	movlw	45
  6582  0010F0  ECD0  F028         	call	_setRangeValor
  6583                           
  6584                           ;main.c: 410: break;
  6585  0010F4  D16A               	goto	l1393
  6586  0010F6                     
  6587                           ;main.c: 412: menu = 6;
  6588  0010F6  0E06               	movlw	6
  6589  0010F8  0100               	movlb	0	; () banked
  6590  0010FA  6FFB               	movwf	_menu& (0+255),b
  6591                           
  6592                           ;main.c: 413: line1[0] = '>';
  6593  0010FC  0E3E               	movlw	62
  6594  0010FE  0101               	movlb	1	; () banked
  6595  001100  6FDA               	movwf	_line1& (0+255),b
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;main.c: 414: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6599  001102  0E40               	movlw	64
  6600  001104  EC29  F02F         	call	_btPress
  6601  001108  0900               	iorlw	0
  6602  00110A  B4D8               	btfsc	status,2,c
  6603  00110C  D00E               	goto	l1416
  6604  00110E  0EF4               	movlw	low _t_flap_intervalo
  6605  001110  0100               	movlb	0	; () banked
  6606  001112  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6607  001114  0E00               	movlw	high _t_flap_intervalo
  6608  001116  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6609  001118  0E00               	movlw	0
  6610  00111A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6611  00111C  0EFA               	movlw	250
  6612  00111E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6613  001120  0E14               	movlw	20
  6614  001122  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6615  001124  0E2B               	movlw	43
  6616  001126  ECD0  F028         	call	_setRangeValor
  6617  00112A                     l1416:
  6618                           
  6619                           ;main.c: 415: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6620  00112A  0E20               	movlw	32
  6621  00112C  EC29  F02F         	call	_btPress
  6622  001130  0900               	iorlw	0
  6623  001132  B4D8               	btfsc	status,2,c
  6624  001134  D14A               	goto	l1393
  6625  001136  0EF4               	movlw	low _t_flap_intervalo
  6626  001138  0100               	movlb	0	; () banked
  6627  00113A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6628  00113C  0E00               	movlw	high _t_flap_intervalo
  6629  00113E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6630  001140  0E00               	movlw	0
  6631  001142  6F67               	movwf	setRangeValor@_min& (0+255),b
  6632  001144  0EFA               	movlw	250
  6633  001146  6F68               	movwf	setRangeValor@_max& (0+255),b
  6634  001148  0E14               	movlw	20
  6635  00114A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6636  00114C  0E2D               	movlw	45
  6637  00114E  ECD0  F028         	call	_setRangeValor
  6638                           
  6639                           ;main.c: 416: break;
  6640  001152  D13B               	goto	l1393
  6641  001154                     
  6642                           ;main.c: 418: line2[0] = '>';
  6643  001154  0E3E               	movlw	62
  6644  001156  0101               	movlb	1	; () banked
  6645  001158  6FC5               	movwf	_line2& (0+255),b
  6646                           
  6647                           ; BSR set to: 1
  6648                           ;main.c: 419: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6649  00115A  0E40               	movlw	64
  6650  00115C  EC29  F02F         	call	_btPress
  6651  001160  0900               	iorlw	0
  6652  001162  B4D8               	btfsc	status,2,c
  6653  001164  D00E               	goto	l1419
  6654  001166  0EFF               	movlw	low _t_buzzer_religar
  6655  001168  0100               	movlb	0	; () banked
  6656  00116A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6657  00116C  0E00               	movlw	high _t_buzzer_religar
  6658  00116E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6659  001170  0E00               	movlw	0
  6660  001172  6F67               	movwf	setRangeValor@_min& (0+255),b
  6661  001174  0E1E               	movlw	30
  6662  001176  6F68               	movwf	setRangeValor@_max& (0+255),b
  6663  001178  0E15               	movlw	21
  6664  00117A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6665  00117C  0E2B               	movlw	43
  6666  00117E  ECD0  F028         	call	_setRangeValor
  6667  001182                     l1419:
  6668                           
  6669                           ;main.c: 420: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6670  001182  0E20               	movlw	32
  6671  001184  EC29  F02F         	call	_btPress
  6672  001188  0900               	iorlw	0
  6673  00118A  B4D8               	btfsc	status,2,c
  6674  00118C  D11E               	goto	l1393
  6675  00118E  0EFF               	movlw	low _t_buzzer_religar
  6676  001190  0100               	movlb	0	; () banked
  6677  001192  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6678  001194  0E00               	movlw	high _t_buzzer_religar
  6679  001196  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6680  001198  0E00               	movlw	0
  6681  00119A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6682  00119C  0E1E               	movlw	30
  6683  00119E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6684  0011A0  0E15               	movlw	21
  6685  0011A2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6686  0011A4  0E2D               	movlw	45
  6687  0011A6  ECD0  F028         	call	_setRangeValor
  6688                           
  6689                           ;main.c: 421: break;
  6690  0011AA  D10F               	goto	l1393
  6691  0011AC                     
  6692                           ;main.c: 423: line3[0] = '>';
  6693  0011AC  0E3E               	movlw	62
  6694  0011AE  0101               	movlb	1	; () banked
  6695  0011B0  6FB0               	movwf	_line3& (0+255),b
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;main.c: 424: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6699  0011B2  0E40               	movlw	64
  6700  0011B4  EC29  F02F         	call	_btPress
  6701  0011B8  0900               	iorlw	0
  6702  0011BA  B4D8               	btfsc	status,2,c
  6703  0011BC  D00E               	goto	l1422
  6704  0011BE  0EF3               	movlw	low _t_temp_automatica
  6705  0011C0  0100               	movlb	0	; () banked
  6706  0011C2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6707  0011C4  0E00               	movlw	high _t_temp_automatica
  6708  0011C6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6709  0011C8  0E00               	movlw	0
  6710  0011CA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6711  0011CC  0EFA               	movlw	250
  6712  0011CE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6713  0011D0  0E16               	movlw	22
  6714  0011D2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6715  0011D4  0E2B               	movlw	43
  6716  0011D6  ECD0  F028         	call	_setRangeValor
  6717  0011DA                     l1422:
  6718                           
  6719                           ;main.c: 425: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6720  0011DA  0E20               	movlw	32
  6721  0011DC  EC29  F02F         	call	_btPress
  6722  0011E0  0900               	iorlw	0
  6723  0011E2  B4D8               	btfsc	status,2,c
  6724  0011E4  D0F2               	goto	l1393
  6725  0011E6  0EF3               	movlw	low _t_temp_automatica
  6726  0011E8  0100               	movlb	0	; () banked
  6727  0011EA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6728  0011EC  0E00               	movlw	high _t_temp_automatica
  6729  0011EE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6730  0011F0  0E00               	movlw	0
  6731  0011F2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6732  0011F4  0EFA               	movlw	250
  6733  0011F6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6734  0011F8  0E16               	movlw	22
  6735  0011FA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6736  0011FC  0E2D               	movlw	45
  6737  0011FE  ECD0  F028         	call	_setRangeValor
  6738                           
  6739                           ;main.c: 426: break;
  6740  001202  D0E3               	goto	l1393
  6741  001204                     
  6742                           ;main.c: 428: line4[0] = '>';
  6743  001204  0E3E               	movlw	62
  6744  001206  0101               	movlb	1	; () banked
  6745  001208  6F9B               	movwf	_line4& (0+255),b
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;main.c: 429: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6749  00120A  0E40               	movlw	64
  6750  00120C  EC29  F02F         	call	_btPress
  6751  001210  0900               	iorlw	0
  6752  001212  B4D8               	btfsc	status,2,c
  6753  001214  D00E               	goto	l1425
  6754  001216  0EF1               	movlw	low _wifi_habilita_alteracao
  6755  001218  0100               	movlb	0	; () banked
  6756  00121A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6757  00121C  0E01               	movlw	high _wifi_habilita_alteracao
  6758  00121E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6759  001220  0E00               	movlw	0
  6760  001222  6F67               	movwf	setRangeValor@_min& (0+255),b
  6761  001224  0E01               	movlw	1
  6762  001226  6F68               	movwf	setRangeValor@_max& (0+255),b
  6763  001228  0E17               	movlw	23
  6764  00122A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6765  00122C  0E2B               	movlw	43
  6766  00122E  ECD0  F028         	call	_setRangeValor
  6767  001232                     l1425:
  6768                           
  6769                           ;main.c: 430: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6770  001232  0E20               	movlw	32
  6771  001234  EC29  F02F         	call	_btPress
  6772  001238  0900               	iorlw	0
  6773  00123A  B4D8               	btfsc	status,2,c
  6774  00123C  D0C6               	goto	l1393
  6775  00123E  0EF1               	movlw	low _wifi_habilita_alteracao
  6776  001240  0100               	movlb	0	; () banked
  6777  001242  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6778  001244  0E01               	movlw	high _wifi_habilita_alteracao
  6779  001246  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6780  001248  0E00               	movlw	0
  6781  00124A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6782  00124C  0E01               	movlw	1
  6783  00124E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6784  001250  0E17               	movlw	23
  6785  001252  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6786  001254  0E2D               	movlw	45
  6787  001256  ECD0  F028         	call	_setRangeValor
  6788                           
  6789                           ;main.c: 431: break;
  6790  00125A  D0B7               	goto	l1393
  6791  00125C                     
  6792                           ;main.c: 433: line1[11] = '>';
  6793  00125C  0E3E               	movlw	62
  6794  00125E  0101               	movlb	1	; () banked
  6795  001260  6FE5               	movwf	(_line1+11)& (0+255),b
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;main.c: 434: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6799  001262  0E40               	movlw	64
  6800  001264  EC29  F02F         	call	_btPress
  6801  001268  0900               	iorlw	0
  6802  00126A  B4D8               	btfsc	status,2,c
  6803  00126C  D00E               	goto	l1428
  6804  00126E  0EEF               	movlw	low _wifi_SENHA
  6805  001270  0100               	movlb	0	; () banked
  6806  001272  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6807  001274  0E01               	movlw	high _wifi_SENHA
  6808  001276  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6809  001278  0E01               	movlw	1
  6810  00127A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6811  00127C  0EFA               	movlw	250
  6812  00127E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6813  001280  0E19               	movlw	25
  6814  001282  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6815  001284  0E2B               	movlw	43
  6816  001286  ECD0  F028         	call	_setRangeValor
  6817  00128A                     l1428:
  6818                           
  6819                           ;main.c: 435: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6820  00128A  0E20               	movlw	32
  6821  00128C  EC29  F02F         	call	_btPress
  6822  001290  0900               	iorlw	0
  6823  001292  B4D8               	btfsc	status,2,c
  6824  001294  D09A               	goto	l1393
  6825  001296  0EEF               	movlw	low _wifi_SENHA
  6826  001298  0100               	movlb	0	; () banked
  6827  00129A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6828  00129C  0E01               	movlw	high _wifi_SENHA
  6829  00129E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6830  0012A0  0E01               	movlw	1
  6831  0012A2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6832  0012A4  0EFA               	movlw	250
  6833  0012A6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6834  0012A8  0E19               	movlw	25
  6835  0012AA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6836  0012AC  0E2D               	movlw	45
  6837  0012AE  ECD0  F028         	call	_setRangeValor
  6838                           
  6839                           ;main.c: 436: break;
  6840  0012B2  D08B               	goto	l1393
  6841  0012B4                     
  6842                           ;main.c: 438: line2[11] = '>';
  6843  0012B4  0E3E               	movlw	62
  6844  0012B6  0101               	movlb	1	; () banked
  6845  0012B8  6FD0               	movwf	(_line2+11)& (0+255),b
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;main.c: 439: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6849  0012BA  0E40               	movlw	64
  6850  0012BC  EC29  F02F         	call	_btPress
  6851  0012C0  0900               	iorlw	0
  6852  0012C2  B4D8               	btfsc	status,2,c
  6853  0012C4  D00E               	goto	l1431
  6854  0012C6  0EED               	movlw	low _h_subir_temp_automatica
  6855  0012C8  0100               	movlb	0	; () banked
  6856  0012CA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6857  0012CC  0E00               	movlw	high _h_subir_temp_automatica
  6858  0012CE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6859  0012D0  0E00               	movlw	0
  6860  0012D2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6861  0012D4  0E0F               	movlw	15
  6862  0012D6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6863  0012D8  0E1B               	movlw	27
  6864  0012DA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6865  0012DC  0E2B               	movlw	43
  6866  0012DE  ECD0  F028         	call	_setRangeValor
  6867  0012E2                     l1431:
  6868                           
  6869                           ;main.c: 440: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6870  0012E2  0E20               	movlw	32
  6871  0012E4  EC29  F02F         	call	_btPress
  6872  0012E8  0900               	iorlw	0
  6873  0012EA  B4D8               	btfsc	status,2,c
  6874  0012EC  D06E               	goto	l1393
  6875  0012EE  0EED               	movlw	low _h_subir_temp_automatica
  6876  0012F0  0100               	movlb	0	; () banked
  6877  0012F2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6878  0012F4  0E00               	movlw	high _h_subir_temp_automatica
  6879  0012F6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6880  0012F8  0E00               	movlw	0
  6881  0012FA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6882  0012FC  0E0F               	movlw	15
  6883  0012FE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6884  001300  0E1B               	movlw	27
  6885  001302  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6886  001304  0E2D               	movlw	45
  6887  001306  ECD0  F028         	call	_setRangeValor
  6888                           
  6889                           ;main.c: 441: break;
  6890  00130A  D05F               	goto	l1393
  6891  00130C                     
  6892                           ;main.c: 443: line3[11] = '>';
  6893  00130C  0E3E               	movlw	62
  6894  00130E  0101               	movlb	1	; () banked
  6895  001310  6FBB               	movwf	(_line3+11)& (0+255),b
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;main.c: 444: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6899  001312  0E40               	movlw	64
  6900  001314  EC29  F02F         	call	_btPress
  6901  001318  0900               	iorlw	0
  6902  00131A  B4D8               	btfsc	status,2,c
  6903  00131C  D00E               	goto	l1434
  6904  00131E  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6905  001320  0100               	movlb	0	; () banked
  6906  001322  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6907  001324  0E00               	movlw	high _t_religar_ventoinha_automatica
  6908  001326  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6909  001328  0E00               	movlw	0
  6910  00132A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6911  00132C  0E3C               	movlw	60
  6912  00132E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6913  001330  0E1C               	movlw	28
  6914  001332  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6915  001334  0E2B               	movlw	43
  6916  001336  ECD0  F028         	call	_setRangeValor
  6917  00133A                     l1434:
  6918                           
  6919                           ;main.c: 445: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6920  00133A  0E20               	movlw	32
  6921  00133C  EC29  F02F         	call	_btPress
  6922  001340  0900               	iorlw	0
  6923  001342  B4D8               	btfsc	status,2,c
  6924  001344  D042               	goto	l1393
  6925  001346  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6926  001348  0100               	movlb	0	; () banked
  6927  00134A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6928  00134C  0E00               	movlw	high _t_religar_ventoinha_automatica
  6929  00134E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6930  001350  0E00               	movlw	0
  6931  001352  6F67               	movwf	setRangeValor@_min& (0+255),b
  6932  001354  0E3C               	movlw	60
  6933  001356  6F68               	movwf	setRangeValor@_max& (0+255),b
  6934  001358  0E1C               	movlw	28
  6935  00135A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6936  00135C  0E2D               	movlw	45
  6937  00135E  ECD0  F028         	call	_setRangeValor
  6938                           
  6939                           ;main.c: 446: break;
  6940  001362  D033               	goto	l1393
  6941  001364  0E01               	movlw	1
  6942  001366  0101               	movlb	1	; () banked
  6943  001368  6F99               	movwf	_opcaomenu& (0+255),b
  6944                           
  6945                           ;main.c: 448: }
  6946  00136A  D02F               	goto	l1393
  6947  00136C                     l1389:
  6948                           
  6949                           ; BSR set to: 1
  6950                           
  6951                           ; BSR set to: 1
  6952  00136C  5199               	movf	_opcaomenu& (0+255),w,b
  6953                           
  6954                           ; Switch size 1, requested type "space"
  6955                           ; Number of cases is 15, Range of values is 1 to 15
  6956                           ; switch strategies available:
  6957                           ; Name         Instructions Cycles
  6958                           ; simple_byte           46    24 (average)
  6959                           ;	Chosen strategy is simple_byte
  6960  00136E  0A01               	xorlw	1	; case 1
  6961  001370  B4D8               	btfsc	status,2,c
  6962  001372  D55B               	goto	l1390
  6963  001374  0A03               	xorlw	3	; case 2
  6964  001376  B4D8               	btfsc	status,2,c
  6965  001378  D587               	goto	l1394
  6966  00137A  0A01               	xorlw	1	; case 3
  6967  00137C  B4D8               	btfsc	status,2,c
  6968  00137E  D5B0               	goto	l1397
  6969  001380  0A07               	xorlw	7	; case 4
  6970  001382  B4D8               	btfsc	status,2,c
  6971  001384  D5D9               	goto	l1400
  6972  001386  0A01               	xorlw	1	; case 5
  6973  001388  B4D8               	btfsc	status,2,c
  6974  00138A  D602               	goto	l1403
  6975  00138C  0A03               	xorlw	3	; case 6
  6976  00138E  B4D8               	btfsc	status,2,c
  6977  001390  D62B               	goto	l1406
  6978  001392  0A01               	xorlw	1	; case 7
  6979  001394  B4D8               	btfsc	status,2,c
  6980  001396  D654               	goto	l1409
  6981  001398  0A0F               	xorlw	15	; case 8
  6982  00139A  B4D8               	btfsc	status,2,c
  6983  00139C  D67D               	goto	l1412
  6984  00139E  0A01               	xorlw	1	; case 9
  6985  0013A0  B4D8               	btfsc	status,2,c
  6986  0013A2  D6A9               	goto	l1415
  6987  0013A4  0A03               	xorlw	3	; case 10
  6988  0013A6  B4D8               	btfsc	status,2,c
  6989  0013A8  D6D5               	goto	l1418
  6990  0013AA  0A01               	xorlw	1	; case 11
  6991  0013AC  B4D8               	btfsc	status,2,c
  6992  0013AE  D6FE               	goto	l1421
  6993  0013B0  0A07               	xorlw	7	; case 12
  6994  0013B2  B4D8               	btfsc	status,2,c
  6995  0013B4  D727               	goto	l1424
  6996  0013B6  0A01               	xorlw	1	; case 13
  6997  0013B8  B4D8               	btfsc	status,2,c
  6998  0013BA  D750               	goto	l1427
  6999  0013BC  0A03               	xorlw	3	; case 14
  7000  0013BE  B4D8               	btfsc	status,2,c
  7001  0013C0  D779               	goto	l1430
  7002  0013C2  0A01               	xorlw	1	; case 15
  7003  0013C4  B4D8               	btfsc	status,2,c
  7004  0013C6  D7A2               	goto	l1433
  7005  0013C8  D7CD               	goto	l1436
  7006  0013CA                     l1393:
  7007                           
  7008                           ;main.c: 449: if (btPress(16)) opcaomenu++;
  7009                           
  7010                           ; BSR set to: 1
  7011  0013CA  0E10               	movlw	16
  7012  0013CC  EC29  F02F         	call	_btPress
  7013  0013D0  0900               	iorlw	0
  7014  0013D2  B4D8               	btfsc	status,2,c
  7015  0013D4  D002               	goto	l1437
  7016  0013D6  0101               	movlb	1	; () banked
  7017  0013D8  2B99               	incf	_opcaomenu& (0+255),f,b
  7018  0013DA                     l1437:
  7019                           
  7020                           ;main.c: 450: if (btPress(1)) opcaomenu--;
  7021                           
  7022                           ; BSR set to: 1
  7023  0013DA  0E01               	movlw	1
  7024  0013DC  EC29  F02F         	call	_btPress
  7025  0013E0  0900               	iorlw	0
  7026  0013E2  B4D8               	btfsc	status,2,c
  7027  0013E4  D002               	goto	l1438
  7028  0013E6  0101               	movlb	1	; () banked
  7029  0013E8  0799               	decf	_opcaomenu& (0+255),f,b
  7030  0013EA                     l1438:
  7031                           
  7032                           ;main.c: 451: if (btPress(8)) {
  7033                           
  7034                           ; BSR set to: 1
  7035  0013EA  0E08               	movlw	8
  7036  0013EC  EC29  F02F         	call	_btPress
  7037  0013F0  0900               	iorlw	0
  7038  0013F2  B4D8               	btfsc	status,2,c
  7039  0013F4  D110               	goto	l1469
  7040                           
  7041                           ;main.c: 452: menu = 0;
  7042  0013F6  0E00               	movlw	0
  7043  0013F8  0100               	movlb	0	; () banked
  7044  0013FA  6FFB               	movwf	_menu& (0+255),b
  7045                           
  7046                           ;main.c: 453: senha_desbloqueio_func = 0;
  7047  0013FC  0E00               	movlw	0
  7048  0013FE  0101               	movlb	1	; () banked
  7049  001400  6FF3               	movwf	_senha_desbloqueio_func& (0+255),b
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;main.c: 454: }
  7053                           ;main.c: 455: } else
  7054  001402  D109               	goto	l1469
  7055  001404                     l1385:
  7056                           
  7057                           ;main.c: 459: if (menu == 8 || menu == 9) {
  7058                           
  7059                           ; BSR set to: 1
  7060  001404  0E08               	movlw	8
  7061  001406  0100               	movlb	0	; () banked
  7062  001408  19FB               	xorwf	_menu& (0+255),w,b
  7063  00140A  B4D8               	btfsc	status,2,c
  7064  00140C  D031               	goto	l1444
  7065                           
  7066                           ; BSR set to: 0
  7067  00140E  0E09               	movlw	9
  7068  001410  19FB               	xorwf	_menu& (0+255),w,b
  7069  001412  B4D8               	btfsc	status,2,c
  7070  001414  D02D               	goto	l1444
  7071  001416  D04D               	goto	l1441
  7072  001418                     
  7073                           ;main.c: 462: menu = 8;
  7074                           
  7075                           ; BSR set to: 0
  7076  001418  0E08               	movlw	8
  7077  00141A  0100               	movlb	0	; () banked
  7078  00141C  6FFB               	movwf	_menu& (0+255),b
  7079                           
  7080                           ;main.c: 463: break;
  7081  00141E  D031               	goto	l1446
  7082  001420                     
  7083                           ;main.c: 465: menu = 9;
  7084                           
  7085                           ; BSR set to: 0
  7086  001420  0E09               	movlw	9
  7087  001422  0100               	movlb	0	; () banked
  7088  001424  6FFB               	movwf	_menu& (0+255),b
  7089                           
  7090                           ;main.c: 466: line1[0] = '>';
  7091  001426  0E3E               	movlw	62
  7092  001428  0101               	movlb	1	; () banked
  7093  00142A  6FDA               	movwf	_line1& (0+255),b
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;main.c: 467: if (btPress(2)) {
  7097  00142C  0E02               	movlw	2
  7098  00142E  EC29  F02F         	call	_btPress
  7099  001432  0900               	iorlw	0
  7100  001434  B4D8               	btfsc	status,2,c
  7101  001436  D025               	goto	l1446
  7102                           
  7103                           ;main.c: 468: LATAbits.LATA4 = 1;
  7104  001438  8889               	bsf	3977,4,c	;volatile
  7105                           
  7106                           ;main.c: 469: delay(100);
  7107  00143A  0E00               	movlw	0
  7108  00143C  0100               	movlb	0	; () banked
  7109  00143E  6F61               	movwf	(delay@x+1)& (0+255),b
  7110  001440  0E64               	movlw	100
  7111  001442  6F60               	movwf	delay@x& (0+255),b
  7112  001444  EC94  F02E         	call	_delay	;wreg free
  7113                           
  7114                           ;main.c: 470: LATAbits.LATA4 = 0;
  7115  001448  9889               	bcf	3977,4,c	;volatile
  7116                           
  7117                           ;main.c: 471: delay(800);
  7118  00144A  0E03               	movlw	3
  7119  00144C  0100               	movlb	0	; () banked
  7120  00144E  6F61               	movwf	(delay@x+1)& (0+255),b
  7121  001450  0E20               	movlw	32
  7122  001452  6F60               	movwf	delay@x& (0+255),b
  7123  001454  EC94  F02E         	call	_delay	;wreg free
  7124                           
  7125                           ;main.c: 472: menu = 10;
  7126  001458  0E0A               	movlw	10
  7127  00145A  0100               	movlb	0	; () banked
  7128  00145C  6FFB               	movwf	_menu& (0+255),b
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;main.c: 473: f_wifi_processo = 0;
  7132  00145E  0E00               	movlw	0
  7133  001460  0101               	movlb	1	; () banked
  7134  001462  6F96               	movwf	_f_wifi_processo& (0+255),b
  7135                           
  7136                           ; BSR set to: 1
  7137                           ;main.c: 474: t_wifi_restart = 15;
  7138  001464  0E0F               	movlw	15
  7139  001466  6F97               	movwf	_t_wifi_restart& (0+255),b
  7140                           
  7141                           ; BSR set to: 1
  7142                           ;main.c: 475: }
  7143                           ;main.c: 476: break;
  7144  001468  D00C               	goto	l1446
  7145  00146A                     
  7146                           ; BSR set to: 1
  7147                           ;main.c: 478: opcaomenu = 1;
  7148                           
  7149                           ; BSR set to: 1
  7150  00146A  0E01               	movlw	1
  7151  00146C  6F99               	movwf	_opcaomenu& (0+255),b
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;main.c: 481: }
  7155                           
  7156                           ;main.c: 480: break;
  7157  00146E  D009               	goto	l1446
  7158  001470                     l1444:
  7159                           
  7160                           ; BSR set to: 1
  7161  001470  0101               	movlb	1	; () banked
  7162  001472  5199               	movf	_opcaomenu& (0+255),w,b
  7163                           
  7164                           ; Switch size 1, requested type "space"
  7165                           ; Number of cases is 2, Range of values is 1 to 2
  7166                           ; switch strategies available:
  7167                           ; Name         Instructions Cycles
  7168                           ; simple_byte            7     4 (average)
  7169                           ;	Chosen strategy is simple_byte
  7170  001474  0A01               	xorlw	1	; case 1
  7171  001476  B4D8               	btfsc	status,2,c
  7172  001478  D7CF               	goto	l1445
  7173  00147A  0A03               	xorlw	3	; case 2
  7174  00147C  B4D8               	btfsc	status,2,c
  7175  00147E  D7D0               	goto	l1447
  7176  001480  D7F4               	goto	l1449
  7177  001482                     l1446:
  7178                           
  7179                           ;main.c: 482: if (btPress(16)) opcaomenu++;
  7180                           
  7181                           ; BSR set to: 1
  7182  001482  0E10               	movlw	16
  7183  001484  EC29  F02F         	call	_btPress
  7184  001488  0900               	iorlw	0
  7185  00148A  B4D8               	btfsc	status,2,c
  7186  00148C  D002               	goto	l1450
  7187  00148E  0101               	movlb	1	; () banked
  7188  001490  2B99               	incf	_opcaomenu& (0+255),f,b
  7189  001492                     l1450:
  7190                           
  7191                           ;main.c: 483: if (btPress(1)) opcaomenu--;
  7192                           
  7193                           ; BSR set to: 1
  7194  001492  0E01               	movlw	1
  7195  001494  EC29  F02F         	call	_btPress
  7196  001498  0900               	iorlw	0
  7197  00149A  B4D8               	btfsc	status,2,c
  7198  00149C  D002               	goto	l1451
  7199  00149E  0101               	movlb	1	; () banked
  7200  0014A0  0799               	decf	_opcaomenu& (0+255),f,b
  7201  0014A2                     l1451:
  7202                           
  7203                           ;main.c: 484: if (btPress(8)) {
  7204                           
  7205                           ; BSR set to: 1
  7206  0014A2  0E08               	movlw	8
  7207  0014A4  EC29  F02F         	call	_btPress
  7208  0014A8  0900               	iorlw	0
  7209  0014AA  B4D8               	btfsc	status,2,c
  7210  0014AC  D0B4               	goto	l1469
  7211                           
  7212                           ;main.c: 485: menu = 3;
  7213  0014AE  0E03               	movlw	3
  7214  0014B0  D0B0               	goto	L13
  7215  0014B2                     l1441:
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;main.c: 491: if (menu == 11) {
  7219                           
  7220                           ; BSR set to: 0
  7221  0014B2  0E0B               	movlw	11
  7222  0014B4  19FB               	xorwf	_menu& (0+255),w,b
  7223  0014B6  B4D8               	btfsc	status,2,c
  7224  0014B8  D089               	goto	l1455
  7225  0014BA  D0AD               	goto	l1469
  7226  0014BC                     
  7227                           ;main.c: 494: line1[0] = '>';
  7228                           
  7229                           ; BSR set to: 0
  7230  0014BC  0E3E               	movlw	62
  7231  0014BE  0101               	movlb	1	; () banked
  7232  0014C0  6FDA               	movwf	_line1& (0+255),b
  7233                           
  7234                           ; BSR set to: 1
  7235                           ;main.c: 495: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7236  0014C2  0E40               	movlw	64
  7237  0014C4  EC29  F02F         	call	_btPress
  7238  0014C8  0900               	iorlw	0
  7239  0014CA  B4D8               	btfsc	status,2,c
  7240  0014CC  D00E               	goto	l1457
  7241  0014CE  0E4E               	movlw	low _t_fim_fase1
  7242  0014D0  0100               	movlb	0	; () banked
  7243  0014D2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7244  0014D4  0E00               	movlw	high _t_fim_fase1
  7245  0014D6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7246  0014D8  0E00               	movlw	0
  7247  0014DA  6F67               	movwf	setRangeValor@_min& (0+255),b
  7248  0014DC  0E1E               	movlw	30
  7249  0014DE  6F68               	movwf	setRangeValor@_max& (0+255),b
  7250  0014E0  0E08               	movlw	8
  7251  0014E2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7252  0014E4  0E2B               	movlw	43
  7253  0014E6  ECD0  F028         	call	_setRangeValor
  7254  0014EA                     l1457:
  7255                           
  7256                           ;main.c: 496: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7257  0014EA  0E20               	movlw	32
  7258  0014EC  EC29  F02F         	call	_btPress
  7259  0014F0  0900               	iorlw	0
  7260  0014F2  B4D8               	btfsc	status,2,c
  7261  0014F4  D077               	goto	l1459
  7262  0014F6  0E4E               	movlw	low _t_fim_fase1
  7263  0014F8  0100               	movlb	0	; () banked
  7264  0014FA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7265  0014FC  0E00               	movlw	high _t_fim_fase1
  7266  0014FE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7267  001500  0E00               	movlw	0
  7268  001502  6F67               	movwf	setRangeValor@_min& (0+255),b
  7269  001504  0E1E               	movlw	30
  7270  001506  6F68               	movwf	setRangeValor@_max& (0+255),b
  7271  001508  0E08               	movlw	8
  7272  00150A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7273  00150C  0E2D               	movlw	45
  7274  00150E  ECD0  F028         	call	_setRangeValor
  7275                           
  7276                           ;main.c: 497: break;
  7277  001512  D068               	goto	l1459
  7278  001514                     
  7279                           ;main.c: 499: line2[0] = '>';
  7280  001514  0E3E               	movlw	62
  7281  001516  0101               	movlb	1	; () banked
  7282  001518  6FC5               	movwf	_line2& (0+255),b
  7283                           
  7284                           ; BSR set to: 1
  7285                           ;main.c: 500: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7286  00151A  0E40               	movlw	64
  7287  00151C  EC29  F02F         	call	_btPress
  7288  001520  0900               	iorlw	0
  7289  001522  B4D8               	btfsc	status,2,c
  7290  001524  D00E               	goto	l1461
  7291  001526  0E4D               	movlw	low _t_fim_fase2
  7292  001528  0100               	movlb	0	; () banked
  7293  00152A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7294  00152C  0E00               	movlw	high _t_fim_fase2
  7295  00152E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7296  001530  0E00               	movlw	0
  7297  001532  6F67               	movwf	setRangeValor@_min& (0+255),b
  7298  001534  0E1E               	movlw	30
  7299  001536  6F68               	movwf	setRangeValor@_max& (0+255),b
  7300  001538  0E09               	movlw	9
  7301  00153A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7302  00153C  0E2B               	movlw	43
  7303  00153E  ECD0  F028         	call	_setRangeValor
  7304  001542                     l1461:
  7305                           
  7306                           ;main.c: 501: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7307  001542  0E20               	movlw	32
  7308  001544  EC29  F02F         	call	_btPress
  7309  001548  0900               	iorlw	0
  7310  00154A  B4D8               	btfsc	status,2,c
  7311  00154C  D04B               	goto	l1459
  7312  00154E  0E4D               	movlw	low _t_fim_fase2
  7313  001550  0100               	movlb	0	; () banked
  7314  001552  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7315  001554  0E00               	movlw	high _t_fim_fase2
  7316  001556  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7317  001558  0E00               	movlw	0
  7318  00155A  6F67               	movwf	setRangeValor@_min& (0+255),b
  7319  00155C  0E1E               	movlw	30
  7320  00155E  6F68               	movwf	setRangeValor@_max& (0+255),b
  7321  001560  0E09               	movlw	9
  7322  001562  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7323  001564  0E2D               	movlw	45
  7324  001566  ECD0  F028         	call	_setRangeValor
  7325                           
  7326                           ;main.c: 502: break;
  7327  00156A  D03C               	goto	l1459
  7328  00156C                     
  7329                           ;main.c: 504: line3[0] = '>';
  7330  00156C  0E3E               	movlw	62
  7331  00156E  0101               	movlb	1	; () banked
  7332  001570  6FB0               	movwf	_line3& (0+255),b
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;main.c: 505: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7336  001572  0E40               	movlw	64
  7337  001574  EC29  F02F         	call	_btPress
  7338  001578  0900               	iorlw	0
  7339  00157A  B4D8               	btfsc	status,2,c
  7340  00157C  D00E               	goto	l1464
  7341  00157E  0E4C               	movlw	low _t_fim_fase3
  7342  001580  0100               	movlb	0	; () banked
  7343  001582  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7344  001584  0E00               	movlw	high _t_fim_fase3
  7345  001586  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7346  001588  0E00               	movlw	0
  7347  00158A  6F67               	movwf	setRangeValor@_min& (0+255),b
  7348  00158C  0E1E               	movlw	30
  7349  00158E  6F68               	movwf	setRangeValor@_max& (0+255),b
  7350  001590  0E0A               	movlw	10
  7351  001592  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7352  001594  0E2B               	movlw	43
  7353  001596  ECD0  F028         	call	_setRangeValor
  7354  00159A                     l1464:
  7355                           
  7356                           ;main.c: 506: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7357  00159A  0E20               	movlw	32
  7358  00159C  EC29  F02F         	call	_btPress
  7359  0015A0  0900               	iorlw	0
  7360  0015A2  B4D8               	btfsc	status,2,c
  7361  0015A4  D01F               	goto	l1459
  7362  0015A6  0E4C               	movlw	low _t_fim_fase3
  7363  0015A8  0100               	movlb	0	; () banked
  7364  0015AA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7365  0015AC  0E00               	movlw	high _t_fim_fase3
  7366  0015AE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7367  0015B0  0E00               	movlw	0
  7368  0015B2  6F67               	movwf	setRangeValor@_min& (0+255),b
  7369  0015B4  0E1E               	movlw	30
  7370  0015B6  6F68               	movwf	setRangeValor@_max& (0+255),b
  7371  0015B8  0E0A               	movlw	10
  7372  0015BA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7373  0015BC  0E2D               	movlw	45
  7374  0015BE  ECD0  F028         	call	_setRangeValor
  7375                           
  7376                           ;main.c: 507: break;
  7377  0015C2  D010               	goto	l1459
  7378  0015C4  0E01               	movlw	1
  7379  0015C6  0101               	movlb	1	; () banked
  7380  0015C8  6F99               	movwf	_opcaomenu& (0+255),b
  7381                           
  7382                           ;main.c: 509: }
  7383  0015CA  D00C               	goto	l1459
  7384  0015CC                     l1455:
  7385                           
  7386                           ; BSR set to: 1
  7387  0015CC  0101               	movlb	1	; () banked
  7388  0015CE  5199               	movf	_opcaomenu& (0+255),w,b
  7389                           
  7390                           ; Switch size 1, requested type "space"
  7391                           ; Number of cases is 3, Range of values is 1 to 3
  7392                           ; switch strategies available:
  7393                           ; Name         Instructions Cycles
  7394                           ; simple_byte           10     6 (average)
  7395                           ;	Chosen strategy is simple_byte
  7396  0015D0  0A01               	xorlw	1	; case 1
  7397  0015D2  B4D8               	btfsc	status,2,c
  7398  0015D4  D773               	goto	l1456
  7399  0015D6  0A03               	xorlw	3	; case 2
  7400  0015D8  B4D8               	btfsc	status,2,c
  7401  0015DA  D79C               	goto	l1460
  7402  0015DC  0A01               	xorlw	1	; case 3
  7403  0015DE  B4D8               	btfsc	status,2,c
  7404  0015E0  D7C5               	goto	l1463
  7405  0015E2  D7F0               	goto	l1466
  7406  0015E4                     l1459:
  7407                           
  7408                           ;main.c: 510: if (btPress(16)) opcaomenu++;
  7409                           
  7410                           ; BSR set to: 1
  7411  0015E4  0E10               	movlw	16
  7412  0015E6  EC29  F02F         	call	_btPress
  7413  0015EA  0900               	iorlw	0
  7414  0015EC  B4D8               	btfsc	status,2,c
  7415  0015EE  D002               	goto	l1467
  7416  0015F0  0101               	movlb	1	; () banked
  7417  0015F2  2B99               	incf	_opcaomenu& (0+255),f,b
  7418  0015F4                     l1467:
  7419                           
  7420                           ;main.c: 511: if (btPress(1)) opcaomenu--;
  7421                           
  7422                           ; BSR set to: 1
  7423  0015F4  0E01               	movlw	1
  7424  0015F6  EC29  F02F         	call	_btPress
  7425  0015FA  0900               	iorlw	0
  7426  0015FC  B4D8               	btfsc	status,2,c
  7427  0015FE  D002               	goto	l1468
  7428  001600  0101               	movlb	1	; () banked
  7429  001602  0799               	decf	_opcaomenu& (0+255),f,b
  7430  001604                     l1468:
  7431                           
  7432                           ;main.c: 512: if (btPress(8)) {
  7433                           
  7434                           ; BSR set to: 1
  7435  001604  0E08               	movlw	8
  7436  001606  EC29  F02F         	call	_btPress
  7437  00160A  0900               	iorlw	0
  7438  00160C  B4D8               	btfsc	status,2,c
  7439  00160E  D003               	goto	l1469
  7440                           
  7441                           ;main.c: 513: menu = 2;
  7442  001610  0E02               	movlw	2
  7443  001612                     L13:
  7444  001612  0100               	movlb	0	; () banked
  7445  001614  6FFB               	movwf	_menu& (0+255),b
  7446  001616                     l1469:
  7447                           
  7448                           ;main.c: 514: }
  7449                           ;main.c: 515: }
  7450                           ;main.c: 516: updateLeds();
  7451                           
  7452                           ; BSR set to: 0
  7453                           
  7454                           ; BSR set to: 0
  7455                           
  7456                           ; BSR set to: 0
  7457                           
  7458                           ; BSR set to: 0
  7459                           
  7460                           ; BSR set to: 0
  7461  001616  EC1E  F02E         	call	_updateLeds	;wreg free
  7462                           
  7463                           ;main.c: 517: atualizaLCD(line1, line2, line3, line4);
  7464  00161A  0EDA               	movlw	low _line1
  7465  00161C  0100               	movlb	0	; () banked
  7466  00161E  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7467  001620  0E01               	movlw	high _line1
  7468  001622  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7469  001624  0EC5               	movlw	low _line2
  7470  001626  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7471  001628  0E01               	movlw	high _line2
  7472  00162A  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7473  00162C  0EB0               	movlw	low _line3
  7474  00162E  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7475  001630  0E01               	movlw	high _line3
  7476  001632  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7477  001634  0E9B               	movlw	low _line4
  7478  001636  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7479  001638  0E01               	movlw	high _line4
  7480  00163A  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7481  00163C  EC14  F027         	call	_atualizaLCD	;wreg free
  7482  001640  EF82  F001         	goto	l1278
  7483  001644                     __end_of_main:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           prodh	equ	0xFF4
  7490                           prodl	equ	0xFF3
  7491                           intcon	equ	0xFF2
  7492                           intcon2	equ	0xFF1
  7493                           intcon3	equ	0xFF0
  7494                           postinc0	equ	0xFEE
  7495                           wreg	equ	0xFE8
  7496                           postdec1	equ	0xFE5
  7497                           fsr1l	equ	0xFE1
  7498                           indf2	equ	0xFDF
  7499                           fsr2h	equ	0xFDA
  7500                           fsr2l	equ	0xFD9
  7501                           status	equ	0xFD8
  7502                           
  7503 ;; *************** function _updateLeds *****************
  7504 ;; Defined at:
  7505 ;;		line 27 in file "src/Led_display.h"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    8
  7526 ;; This function calls:
  7527 ;;		_I2C_Start
  7528 ;;		_I2C_Stop
  7529 ;;		_I2C_Write
  7530 ;; This function is called by:
  7531 ;;		_main
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text1
  7536  005C3C                     __ptext1:
  7537                           	opt stack 0
  7538  005C3C                     _updateLeds:
  7539                           	opt stack 22
  7540                           
  7541                           ;Led_display.h: 29: if (_led != leds) {
  7542                           
  7543                           ;incstack = 0
  7544  005C3C  5045               	movf	_leds,w,c
  7545  005C3E  1850               	xorwf	__led,w,c
  7546  005C40  B4D8               	btfsc	status,2,c
  7547  005C42  0012               	return	
  7548                           
  7549                           ;Led_display.h: 30: I2C_Start();
  7550  005C44  EC84  F02F         	call	_I2C_Start	;wreg free
  7551                           
  7552                           ;Led_display.h: 31: I2C_Write(0x46);
  7553  005C48  0E00               	movlw	0
  7554  005C4A  0100               	movlb	0	; () banked
  7555  005C4C  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7556  005C4E  0E46               	movlw	70
  7557  005C50  6F61               	movwf	I2C_Write@d& (0+255),b
  7558  005C52  EC72  F02F         	call	_I2C_Write	;wreg free
  7559                           
  7560                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7561  005C56  C045  F061         	movff	_leds,I2C_Write@d
  7562  005C5A  0100               	movlb	0	; () banked
  7563  005C5C  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7564  005C5E  EC72  F02F         	call	_I2C_Write	;wreg free
  7565                           
  7566                           ;Led_display.h: 33: I2C_Stop();
  7567  005C62  EC80  F02F         	call	_I2C_Stop	;wreg free
  7568                           
  7569                           ;Led_display.h: 34: _led = leds;
  7570  005C66  C045  F050         	movff	_leds,__led
  7571  005C6A  0012               	return	
  7572  005C6C                     __end_of_updateLeds:
  7573                           	opt stack 0
  7574                           tblptru	equ	0xFF8
  7575                           tblptrh	equ	0xFF7
  7576                           tblptrl	equ	0xFF6
  7577                           tablat	equ	0xFF5
  7578                           prodh	equ	0xFF4
  7579                           prodl	equ	0xFF3
  7580                           intcon	equ	0xFF2
  7581                           intcon2	equ	0xFF1
  7582                           intcon3	equ	0xFF0
  7583                           postinc0	equ	0xFEE
  7584                           wreg	equ	0xFE8
  7585                           postdec1	equ	0xFE5
  7586                           fsr1l	equ	0xFE1
  7587                           indf2	equ	0xFDF
  7588                           fsr2h	equ	0xFDA
  7589                           fsr2l	equ	0xFD9
  7590                           status	equ	0xFD8
  7591                           
  7592 ;; *************** function _setUmidade *****************
  7593 ;; Defined at:
  7594 ;;		line 44 in file "src/FuncoesControlador.h"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  tp              1    wreg     unsigned char 
  7597 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7598 ;;		 -> umidajt(1), 
  7599 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7600 ;;		 -> tempajt(1), 
  7601 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7602 ;;		 -> clima(1), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  tp              1   14[BANK0 ] unsigned char 
  7605 ;;  _umd            1   25[BANK0 ] unsigned char 
  7606 ;;  _clim           1   24[BANK0 ] unsigned char 
  7607 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      void 
  7610 ;; Registers used:
  7611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7617 ;;      Params:         0       6       0       0       0       0       0       0       0
  7618 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7620 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7621 ;;Total ram usage:       18 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    9
  7624 ;; This function calls:
  7625 ;;		_tabelaUmidade
  7626 ;;		_writeEEPROM_ext
  7627 ;; This function is called by:
  7628 ;;		_main
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text2
  7633  004794                     __ptext2:
  7634                           	opt stack 0
  7635  004794                     _setUmidade:
  7636                           	opt stack 21
  7637                           
  7638                           ;incstack = 0
  7639                           ;setUmidade@tp stored from wreg
  7640  004794  0100               	movlb	0	; () banked
  7641  004796  6F6E               	movwf	setUmidade@tp& (0+255),b
  7642                           
  7643                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7644  004798  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7645  00479C  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7646  0047A0  50DF               	movf	indf2,w,c
  7647  0047A2  0100               	movlb	0	; () banked
  7648  0047A4  6F79               	movwf	setUmidade@_umd& (0+255),b
  7649                           
  7650                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7651  0047A6  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7652  0047AA  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7653  0047AE  50DF               	movf	indf2,w,c
  7654  0047B0  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7655                           
  7656                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7657  0047B2  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7658  0047B6  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7659  0047BA  50DF               	movf	indf2,w,c
  7660  0047BC  6F78               	movwf	setUmidade@_clim& (0+255),b
  7661                           
  7662                           ;FuncoesControlador.h: 49: switch (tp) {
  7663  0047BE  D05C               	goto	l906
  7664  0047C0                     
  7665                           ; BSR set to: 0
  7666                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7667                           
  7668                           ; BSR set to: 0
  7669  0047C0  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7670  0047C2  A4D8               	btfss	status,2,c
  7671  0047C4  D00F               	goto	l908
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7675  0047C6  0E64               	movlw	100
  7676  0047C8  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7677  0047CA  D005               	goto	l910
  7678                           
  7679                           ; BSR set to: 0
  7680  0047CC  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7681  0047CE  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7682  0047D2  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7683  0047D4  D004               	goto	l912
  7684  0047D6                     l910:
  7685                           
  7686                           ; BSR set to: 0
  7687                           
  7688                           ; BSR set to: 0
  7689  0047D6  0E00               	movlw	0
  7690  0047D8  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7691  0047DA  0E0A               	movlw	10
  7692  0047DC  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7693  0047DE                     l912:
  7694                           
  7695                           ; BSR set to: 0
  7696                           
  7697                           ; BSR set to: 0
  7698  0047DE  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7699                           
  7700                           ;FuncoesControlador.h: 53: } else {
  7701  0047E2  D00E               	goto	l913
  7702  0047E4                     l908:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 60 : ++_umd;
  7706                           
  7707                           ; BSR set to: 0
  7708  0047E4  0E78               	movlw	120
  7709  0047E6  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7710  0047E8  D005               	goto	l915
  7711                           
  7712                           ; BSR set to: 0
  7713  0047EA  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7714  0047EC  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7715  0047F0  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7716  0047F2  D004               	goto	l917
  7717  0047F4                     l915:
  7718                           
  7719                           ; BSR set to: 0
  7720                           
  7721                           ; BSR set to: 0
  7722  0047F4  0E00               	movlw	0
  7723  0047F6  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7724  0047F8  0E3C               	movlw	60
  7725  0047FA  6F71               	movwf	_setUmidade$1298& (0+255),b
  7726  0047FC                     l917:
  7727                           
  7728                           ; BSR set to: 0
  7729                           
  7730                           ; BSR set to: 0
  7731  0047FC  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7732  004800                     l913:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;FuncoesControlador.h: 55: }
  7736                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7737                           
  7738                           ; BSR set to: 0
  7739  004800  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7740  004804  0E02               	movlw	2
  7741  004806  EC54  F02D         	call	_writeEEPROM_ext
  7742                           
  7743                           ;FuncoesControlador.h: 58: break;
  7744  00480A  D040               	goto	l918
  7745  00480C                     
  7746                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7747  00480C  0100               	movlb	0	; () banked
  7748  00480E  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7749  004810  A4D8               	btfss	status,2,c
  7750  004812  D00F               	goto	l920
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7754  004814  0E0A               	movlw	10
  7755  004816  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7756  004818  D005               	goto	l922
  7757                           
  7758                           ; BSR set to: 0
  7759  00481A  0779               	decf	setUmidade@_umd& (0+255),f,b
  7760  00481C  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7761  004820  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7762  004822  D004               	goto	l924
  7763  004824                     l922:
  7764                           
  7765                           ; BSR set to: 0
  7766                           
  7767                           ; BSR set to: 0
  7768  004824  0E00               	movlw	0
  7769  004826  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7770  004828  0E64               	movlw	100
  7771  00482A  6F73               	movwf	_setUmidade$1299& (0+255),b
  7772  00482C                     l924:
  7773                           
  7774                           ; BSR set to: 0
  7775                           
  7776                           ; BSR set to: 0
  7777  00482C  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7778                           
  7779                           ;FuncoesControlador.h: 62: } else {
  7780  004830  D00E               	goto	l925
  7781  004832                     l920:
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;FuncoesControlador.h: 63: _umd = (_umd <= 60) ? 120 : --_umd;
  7785                           
  7786                           ; BSR set to: 0
  7787  004832  0E3C               	movlw	60
  7788  004834  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7789  004836  D005               	goto	l927
  7790                           
  7791                           ; BSR set to: 0
  7792  004838  0779               	decf	setUmidade@_umd& (0+255),f,b
  7793  00483A  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7794  00483E  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7795  004840  D004               	goto	l929
  7796  004842                     l927:
  7797                           
  7798                           ; BSR set to: 0
  7799                           
  7800                           ; BSR set to: 0
  7801  004842  0E00               	movlw	0
  7802  004844  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7803  004846  0E78               	movlw	120
  7804  004848  6F75               	movwf	_setUmidade$1300& (0+255),b
  7805  00484A                     l929:
  7806                           
  7807                           ; BSR set to: 0
  7808                           
  7809                           ; BSR set to: 0
  7810  00484A  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7811  00484E                     l925:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;FuncoesControlador.h: 64: }
  7815                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7816                           
  7817                           ; BSR set to: 0
  7818  00484E  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7819  004852  0E02               	movlw	2
  7820  004854  EC54  F02D         	call	_writeEEPROM_ext
  7821                           
  7822                           ;FuncoesControlador.h: 67: break;
  7823  004858  D019               	goto	l918
  7824  00485A                     
  7825                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7826  00485A  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7827  00485E  0100               	movlb	0	; () banked
  7828  004860  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7829  004862  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7830  004866  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7831  004868  C0F7  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7832  00486C  EC22  F00B         	call	_tabelaUmidade	;wreg free
  7833  004870  0100               	movlb	0	; () banked
  7834  004872  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7835  004874  6F79               	movwf	setUmidade@_umd& (0+255),b
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;FuncoesControlador.h: 71: }
  7839                           
  7840                           ;FuncoesControlador.h: 70: break;
  7841  004876  D00A               	goto	l918
  7842  004878                     l906:
  7843                           
  7844                           ; BSR set to: 0
  7845                           
  7846                           ; BSR set to: 0
  7847  004878  516E               	movf	setUmidade@tp& (0+255),w,b
  7848                           
  7849                           ; Switch size 1, requested type "space"
  7850                           ; Number of cases is 3, Range of values is 43 to 65
  7851                           ; switch strategies available:
  7852                           ; Name         Instructions Cycles
  7853                           ; simple_byte           10     6 (average)
  7854                           ;	Chosen strategy is simple_byte
  7855  00487A  0A2B               	xorlw	43	; case 43
  7856  00487C  B4D8               	btfsc	status,2,c
  7857  00487E  D7A0               	goto	l907
  7858  004880  0A06               	xorlw	6	; case 45
  7859  004882  B4D8               	btfsc	status,2,c
  7860  004884  D7C3               	goto	l919
  7861  004886  0A6C               	xorlw	108	; case 65
  7862  004888  B4D8               	btfsc	status,2,c
  7863  00488A  D7E7               	goto	l930
  7864  00488C                     l918:
  7865                           
  7866                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7867                           
  7868                           ; BSR set to: 0
  7869  00488C  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7870  004890  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7871  004894  C079  FFDF         	movff	setUmidade@_umd,indf2
  7872  004898  0012               	return		;funcret
  7873  00489A                     __end_of_setUmidade:
  7874                           	opt stack 0
  7875                           tblptru	equ	0xFF8
  7876                           tblptrh	equ	0xFF7
  7877                           tblptrl	equ	0xFF6
  7878                           tablat	equ	0xFF5
  7879                           prodh	equ	0xFF4
  7880                           prodl	equ	0xFF3
  7881                           intcon	equ	0xFF2
  7882                           intcon2	equ	0xFF1
  7883                           intcon3	equ	0xFF0
  7884                           postinc0	equ	0xFEE
  7885                           wreg	equ	0xFE8
  7886                           postdec1	equ	0xFE5
  7887                           fsr1l	equ	0xFE1
  7888                           indf2	equ	0xFDF
  7889                           fsr2h	equ	0xFDA
  7890                           fsr2l	equ	0xFD9
  7891                           status	equ	0xFD8
  7892                           
  7893 ;; *************** function _tabelaUmidade *****************
  7894 ;; Defined at:
  7895 ;;		line 4 in file "src/TabelasUmidade.h"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  _tmp            2    0[BANK0 ] int 
  7898 ;;  _clima          2    2[BANK0 ] int 
  7899 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  _umd            1    7[BANK0 ] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  2    0[BANK0 ] unsigned int 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7911 ;;      Params:         0       5       0       0       0       0       0       0       0
  7912 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7913 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7914 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7915 ;;Total ram usage:        8 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    6
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_setUmidade
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text3
  7926  001644                     __ptext3:
  7927                           	opt stack 0
  7928  001644                     _tabelaUmidade:
  7929                           	opt stack 23
  7930                           
  7931                           ;TabelasUmidade.h: 5: char _umd = 0;
  7932                           
  7933                           ;incstack = 0
  7934  001644  0E00               	movlw	0
  7935  001646  0100               	movlb	0	; () banked
  7936  001648  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7937                           
  7938                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7939  00164A  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7940  00164C  B4D8               	btfsc	status,2,c
  7941  00164E  D306               	goto	l297
  7942  001650  D31A               	goto	l296
  7943  001652                     
  7944                           ; BSR set to: 0
  7945                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7946                           
  7947                           ; BSR set to: 0
  7948  001652  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7949  001654  D006               	goto	u8760
  7950  001656  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7951  001658  E106               	bnz	l6729
  7952  00165A  0E5B               	movlw	91
  7953  00165C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7954  00165E  B0D8               	btfsc	status,0,c
  7955  001660  D002               	goto	l299
  7956  001662                     u8760:
  7957                           
  7958                           ; BSR set to: 0
  7959  001662  0E55               	movlw	85
  7960  001664  D04B               	goto	L24
  7961  001666                     l299:
  7962  001666                     l6729:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;TabelasUmidade.h: 10: else
  7966                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7967  001666  0E5B               	movlw	91
  7968  001668  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7969  00166A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7970  00166C  A4D8               	btfss	status,2,c
  7971  00166E  D002               	goto	l301
  7972  001670                     u8770:
  7973                           
  7974                           ; BSR set to: 0
  7975  001670  0E56               	movlw	86
  7976  001672  D044               	goto	L24
  7977  001674                     l301:
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;TabelasUmidade.h: 12: else
  7981                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7982                           
  7983                           ; BSR set to: 0
  7984  001674  0E5C               	movlw	92
  7985  001676  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7986  001678  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7987  00167A  A4D8               	btfss	status,2,c
  7988  00167C  D002               	goto	l303
  7989                           
  7990                           ; BSR set to: 0
  7991  00167E  0E57               	movlw	87
  7992  001680  D03D               	goto	L24
  7993  001682                     l303:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;TabelasUmidade.h: 14: else
  7997                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7998                           
  7999                           ; BSR set to: 0
  8000  001682  0E5D               	movlw	93
  8001  001684  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8002  001686  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8003  001688  A4D8               	btfss	status,2,c
  8004  00168A  D002               	goto	l305
  8005  00168C                     u8790:
  8006                           
  8007                           ; BSR set to: 0
  8008  00168C  0E58               	movlw	88
  8009  00168E  D036               	goto	L24
  8010  001690                     l305:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;TabelasUmidade.h: 16: else
  8014                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  8015                           
  8016                           ; BSR set to: 0
  8017  001690  0E5E               	movlw	94
  8018  001692  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8019  001694  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8020  001696  A4D8               	btfss	status,2,c
  8021  001698  D002               	goto	l307
  8022  00169A                     u8800:
  8023                           
  8024                           ; BSR set to: 0
  8025  00169A  0E59               	movlw	89
  8026  00169C  D02F               	goto	L24
  8027  00169E                     l307:
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;TabelasUmidade.h: 18: else
  8031                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  8032                           
  8033                           ; BSR set to: 0
  8034  00169E  0E5F               	movlw	95
  8035  0016A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8036  0016A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8037  0016A4  A4D8               	btfss	status,2,c
  8038  0016A6  D002               	goto	l309
  8039  0016A8                     u8810:
  8040                           
  8041                           ; BSR set to: 0
  8042  0016A8  0E5A               	movlw	90
  8043  0016AA  D028               	goto	L24
  8044  0016AC                     l309:
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;TabelasUmidade.h: 20: else
  8048                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  8049                           
  8050                           ; BSR set to: 0
  8051  0016AC  0E60               	movlw	96
  8052  0016AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8053  0016B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8054  0016B2  A4D8               	btfss	status,2,c
  8055  0016B4  D002               	goto	l311
  8056  0016B6                     u8820:
  8057                           
  8058                           ; BSR set to: 0
  8059  0016B6  0E5B               	movlw	91
  8060  0016B8  D021               	goto	L24
  8061  0016BA                     l311:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;TabelasUmidade.h: 22: else
  8065                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  8066                           
  8067                           ; BSR set to: 0
  8068  0016BA  0E61               	movlw	97
  8069  0016BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8070  0016BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8071  0016C0  A4D8               	btfss	status,2,c
  8072  0016C2  D002               	goto	l313
  8073  0016C4                     u8830:
  8074                           
  8075                           ; BSR set to: 0
  8076  0016C4  0E5C               	movlw	92
  8077  0016C6  D01A               	goto	L24
  8078  0016C8                     l313:
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;TabelasUmidade.h: 24: else
  8082                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  8083                           
  8084                           ; BSR set to: 0
  8085  0016C8  0E62               	movlw	98
  8086  0016CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8087  0016CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8088  0016CE  A4D8               	btfss	status,2,c
  8089  0016D0  D002               	goto	l315
  8090  0016D2                     u8840:
  8091                           
  8092                           ; BSR set to: 0
  8093  0016D2  0E5D               	movlw	93
  8094  0016D4  D013               	goto	L24
  8095  0016D6                     l315:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;TabelasUmidade.h: 26: else
  8099                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  8100                           
  8101                           ; BSR set to: 0
  8102  0016D6  0E63               	movlw	99
  8103  0016D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8104  0016DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8105  0016DC  A4D8               	btfss	status,2,c
  8106  0016DE  D002               	goto	l317
  8107  0016E0                     u8850:
  8108                           
  8109                           ; BSR set to: 0
  8110  0016E0  0E5E               	movlw	94
  8111  0016E2  D00C               	goto	L24
  8112  0016E4                     l317:
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;TabelasUmidade.h: 28: else
  8116                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  8117                           
  8118                           ; BSR set to: 0
  8119  0016E4  0E64               	movlw	100
  8120  0016E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8121  0016E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8122  0016EA  B4D8               	btfsc	status,2,c
  8123  0016EC  EFB6  F00F         	goto	u10610
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;TabelasUmidade.h: 30: else
  8127                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  8128                           
  8129                           ; BSR set to: 0
  8130                           
  8131                           ; BSR set to: 0
  8132  0016F0  0E65               	movlw	101
  8133  0016F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8134  0016F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8135  0016F6  A4D8               	btfss	status,2,c
  8136  0016F8  D004               	goto	l321
  8137  0016FA  D7F2               	goto	u8850
  8138  0016FC                     L24:
  8139  0016FC  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  8140  0016FE  EF07  F013         	goto	l630
  8141  001702                     l321:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;TabelasUmidade.h: 32: else
  8145                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  8146                           
  8147                           ; BSR set to: 0
  8148  001702  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8149  001704  D00E               	goto	l323
  8150  001706  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8151  001708  E104               	bnz	u8880
  8152  00170A  0E66               	movlw	102
  8153  00170C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8154  00170E  A0D8               	btfss	status,0,c
  8155  001710  D008               	goto	l323
  8156  001712                     u8880:
  8157                           
  8158                           ; BSR set to: 0
  8159  001712  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8160  001714  D7E5               	goto	u8850
  8161  001716  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8162  001718  E104               	bnz	l6779
  8163  00171A  0E6C               	movlw	108
  8164  00171C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8165  00171E  A0D8               	btfss	status,0,c
  8166  001720  D7DF               	goto	u8850
  8167  001722                     l323:
  8168  001722                     l6779:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;TabelasUmidade.h: 34: else
  8172                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  8173  001722  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8174  001724  D010               	goto	l325
  8175  001726  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8176  001728  E104               	bnz	u8900
  8177  00172A  0E6C               	movlw	108
  8178  00172C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8179  00172E  A0D8               	btfss	status,0,c
  8180  001730  D00A               	goto	l325
  8181  001732                     u8900:
  8182                           
  8183                           ; BSR set to: 0
  8184  001732  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8185  001734  EFB6  F00F         	goto	u10610
  8186  001738  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8187  00173A  E105               	bnz	l6785
  8188  00173C  0E77               	movlw	119
  8189  00173E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8190  001740  A0D8               	btfss	status,0,c
  8191  001742  EFB6  F00F         	goto	u10610
  8192  001746                     l325:
  8193  001746                     l6785:
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;TabelasUmidade.h: 36: else
  8197                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  8198  001746  0E77               	movlw	119
  8199  001748  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8200  00174A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8201  00174C  B4D8               	btfsc	status,2,c
  8202  00174E  EFA9  F00F         	goto	u10590
  8203                           
  8204                           ; BSR set to: 0
  8205  001752  0E78               	movlw	120
  8206  001754  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8207  001756  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8208  001758  B4D8               	btfsc	status,2,c
  8209                           
  8210                           ; BSR set to: 0
  8211  00175A  D3FB               	goto	u10590
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;TabelasUmidade.h: 38: else
  8215                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  8216                           
  8217                           ; BSR set to: 0
  8218                           
  8219                           ; BSR set to: 0
  8220  00175C  0E79               	movlw	121
  8221  00175E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8222  001760  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8223  001762  B4D8               	btfsc	status,2,c
  8224  001764  D3EE               	goto	u10580
  8225                           
  8226                           ; BSR set to: 0
  8227  001766  0E7A               	movlw	122
  8228  001768  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8229  00176A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8230  00176C  B4D8               	btfsc	status,2,c
  8231                           
  8232                           ; BSR set to: 0
  8233  00176E  D3E9               	goto	u10580
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;TabelasUmidade.h: 40: else
  8237                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8238                           
  8239                           ; BSR set to: 0
  8240                           
  8241                           ; BSR set to: 0
  8242  001770  0E7B               	movlw	123
  8243  001772  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8244  001774  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8245  001776  B4D8               	btfsc	status,2,c
  8246  001778  EF42  F011         	goto	u11220
  8247                           
  8248                           ; BSR set to: 0
  8249  00177C  0E7C               	movlw	124
  8250  00177E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8251  001780  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8252  001782  B4D8               	btfsc	status,2,c
  8253                           
  8254                           ; BSR set to: 0
  8255  001784  EF42  F011         	goto	u11220
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;TabelasUmidade.h: 42: else
  8259                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8260                           
  8261                           ; BSR set to: 0
  8262                           
  8263                           ; BSR set to: 0
  8264  001788  0E7D               	movlw	125
  8265  00178A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8266  00178C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8267  00178E  B4D8               	btfsc	status,2,c
  8268  001790  EF2F  F011         	goto	u11200
  8269                           
  8270                           ; BSR set to: 0
  8271  001794  0E7E               	movlw	126
  8272  001796  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8273  001798  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8274  00179A  B4D8               	btfsc	status,2,c
  8275                           
  8276                           ; BSR set to: 0
  8277  00179C  EF2F  F011         	goto	u11200
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;TabelasUmidade.h: 44: else
  8281                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8282                           
  8283                           ; BSR set to: 0
  8284                           
  8285                           ; BSR set to: 0
  8286  0017A0  0E7F               	movlw	127
  8287  0017A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8288  0017A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8289  0017A6  B4D8               	btfsc	status,2,c
  8290  0017A8  EF27  F011         	goto	u11190
  8291                           
  8292                           ; BSR set to: 0
  8293  0017AC  0E80               	movlw	128
  8294  0017AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8295  0017B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8296  0017B2  B4D8               	btfsc	status,2,c
  8297                           
  8298                           ; BSR set to: 0
  8299  0017B4  EF27  F011         	goto	u11190
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;TabelasUmidade.h: 46: else
  8303                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8304                           
  8305                           ; BSR set to: 0
  8306                           
  8307                           ; BSR set to: 0
  8308  0017B8  0E81               	movlw	129
  8309  0017BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8310  0017BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8311  0017BE  B4D8               	btfsc	status,2,c
  8312  0017C0  D1BB               	goto	u9750
  8313                           
  8314                           ; BSR set to: 0
  8315  0017C2  0E82               	movlw	130
  8316  0017C4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8317  0017C6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8318  0017C8  B4D8               	btfsc	status,2,c
  8319                           
  8320                           ; BSR set to: 0
  8321  0017CA  D1B6               	goto	u9750
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;TabelasUmidade.h: 48: else
  8325                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8326                           
  8327                           ; BSR set to: 0
  8328                           
  8329                           ; BSR set to: 0
  8330  0017CC  0E83               	movlw	131
  8331  0017CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8332  0017D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8333  0017D2  B4D8               	btfsc	status,2,c
  8334  0017D4  D1BD               	goto	u9770
  8335                           
  8336                           ; BSR set to: 0
  8337  0017D6  0E84               	movlw	132
  8338  0017D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8339  0017DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8340  0017DC  B4D8               	btfsc	status,2,c
  8341                           
  8342                           ; BSR set to: 0
  8343  0017DE  D1B8               	goto	u9770
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;TabelasUmidade.h: 50: else
  8347                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8348                           
  8349                           ; BSR set to: 0
  8350                           
  8351                           ; BSR set to: 0
  8352  0017E0  0E85               	movlw	133
  8353  0017E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8354  0017E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8355  0017E6  B4D8               	btfsc	status,2,c
  8356  0017E8  D1BF               	goto	u9790
  8357                           
  8358                           ; BSR set to: 0
  8359  0017EA  0E86               	movlw	134
  8360  0017EC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8361  0017EE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8362  0017F0  B4D8               	btfsc	status,2,c
  8363                           
  8364                           ; BSR set to: 0
  8365  0017F2  D1BA               	goto	u9790
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;TabelasUmidade.h: 52: else
  8369                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8370                           
  8371                           ; BSR set to: 0
  8372                           
  8373                           ; BSR set to: 0
  8374  0017F4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8375  0017F6  D00E               	goto	l359
  8376  0017F8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8377  0017FA  E104               	bnz	u9080
  8378  0017FC  0E87               	movlw	135
  8379  0017FE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8380  001800  A0D8               	btfss	status,0,c
  8381  001802  D008               	goto	l359
  8382  001804                     u9080:
  8383                           
  8384                           ; BSR set to: 0
  8385  001804  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8386  001806  D0ED               	goto	u9470
  8387  001808  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8388  00180A  E104               	bnz	l6839
  8389  00180C  0E93               	movlw	147
  8390  00180E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8391  001810  A0D8               	btfss	status,0,c
  8392  001812  D0E7               	goto	u9470
  8393  001814                     l359:
  8394  001814                     l6839:
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;TabelasUmidade.h: 54: else
  8398                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8399  001814  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8400  001816  D00E               	goto	l361
  8401  001818  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8402  00181A  E104               	bnz	u9100
  8403  00181C  0E93               	movlw	147
  8404  00181E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8405  001820  A0D8               	btfss	status,0,c
  8406  001822  D008               	goto	l361
  8407  001824                     u9100:
  8408                           
  8409                           ; BSR set to: 0
  8410  001824  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8411  001826  D1B2               	goto	u9810
  8412  001828  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8413  00182A  E104               	bnz	l6845
  8414  00182C  0E97               	movlw	151
  8415  00182E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8416  001830  A0D8               	btfss	status,0,c
  8417  001832  D1AC               	goto	u9810
  8418  001834                     l361:
  8419  001834                     l6845:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;TabelasUmidade.h: 56: else
  8423                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8424  001834  0E97               	movlw	151
  8425  001836  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8426  001838  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8427  00183A  B4D8               	btfsc	status,2,c
  8428  00183C  D1B3               	goto	u9830
  8429                           
  8430                           ; BSR set to: 0
  8431  00183E  0E98               	movlw	152
  8432  001840  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8433  001842  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8434  001844  B4D8               	btfsc	status,2,c
  8435                           
  8436                           ; BSR set to: 0
  8437  001846  D1AE               	goto	u9830
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;TabelasUmidade.h: 58: else
  8441                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8442                           
  8443                           ; BSR set to: 0
  8444                           
  8445                           ; BSR set to: 0
  8446  001848  0E99               	movlw	153
  8447  00184A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8448  00184C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8449  00184E  B4D8               	btfsc	status,2,c
  8450  001850  D1B5               	goto	u9850
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;TabelasUmidade.h: 60: else
  8454                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8455                           
  8456                           ; BSR set to: 0
  8457                           
  8458                           ; BSR set to: 0
  8459  001852  0E9A               	movlw	154
  8460  001854  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8461  001856  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8462  001858  B4D8               	btfsc	status,2,c
  8463  00185A  D1C2               	goto	u9870
  8464                           
  8465                           ; BSR set to: 0
  8466  00185C  0E9B               	movlw	155
  8467  00185E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8468  001860  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8469  001862  B4D8               	btfsc	status,2,c
  8470                           
  8471                           ; BSR set to: 0
  8472  001864  D1BD               	goto	u9870
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;TabelasUmidade.h: 62: else
  8476                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8477                           
  8478                           ; BSR set to: 0
  8479                           
  8480                           ; BSR set to: 0
  8481  001866  0E9C               	movlw	156
  8482  001868  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8483  00186A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8484  00186C  B4D8               	btfsc	status,2,c
  8485  00186E  D1C4               	goto	u9890
  8486                           
  8487                           ; BSR set to: 0
  8488  001870  0E9D               	movlw	157
  8489  001872  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8490  001874  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8491  001876  B4D8               	btfsc	status,2,c
  8492                           
  8493                           ; BSR set to: 0
  8494  001878  D1BF               	goto	u9890
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;TabelasUmidade.h: 64: else
  8498                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8499                           
  8500                           ; BSR set to: 0
  8501                           
  8502                           ; BSR set to: 0
  8503  00187A  0E9E               	movlw	158
  8504  00187C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8505  00187E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8506  001880  B4D8               	btfsc	status,2,c
  8507  001882  D0E4               	goto	u9560
  8508                           
  8509                           ; BSR set to: 0
  8510  001884  0E9F               	movlw	159
  8511  001886  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8512  001888  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8513  00188A  B4D8               	btfsc	status,2,c
  8514                           
  8515                           ; BSR set to: 0
  8516  00188C  D0DF               	goto	u9560
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;TabelasUmidade.h: 66: else
  8520                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8521                           
  8522                           ; BSR set to: 0
  8523                           
  8524                           ; BSR set to: 0
  8525  00188E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8526  001890  EF07  F013         	goto	l630
  8527  001894  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8528  001896  E101               	bnz	u9210
  8529  001898  D0E0               	goto	L25
  8530  00189A                     u9210:
  8531  00189A  D1C6               	goto	u9930
  8532  00189C                     
  8533                           ; BSR set to: 0
  8534                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8535                           
  8536                           ; BSR set to: 0
  8537  00189C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8538  00189E  D6F6               	goto	u8790
  8539  0018A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8540  0018A2  E104               	bnz	l6881
  8541  0018A4  0E5B               	movlw	91
  8542  0018A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8543  0018A8  A0D8               	btfss	status,0,c
  8544  0018AA  D6F0               	goto	u8790
  8545  0018AC                     l6881:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;TabelasUmidade.h: 72: else
  8549                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8550  0018AC  0E5B               	movlw	91
  8551  0018AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8552  0018B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8553  0018B2  B4D8               	btfsc	status,2,c
  8554  0018B4  D6F2               	goto	u8800
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;TabelasUmidade.h: 74: else
  8558                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8559                           
  8560                           ; BSR set to: 0
  8561                           
  8562                           ; BSR set to: 0
  8563  0018B6  0E5C               	movlw	92
  8564  0018B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8565  0018BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8566  0018BC  B4D8               	btfsc	status,2,c
  8567  0018BE  D6F4               	goto	u8810
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;TabelasUmidade.h: 76: else
  8571                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8572                           
  8573                           ; BSR set to: 0
  8574                           
  8575                           ; BSR set to: 0
  8576  0018C0  0E5D               	movlw	93
  8577  0018C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8578  0018C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8579  0018C6  B4D8               	btfsc	status,2,c
  8580  0018C8  D6F6               	goto	u8820
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;TabelasUmidade.h: 78: else
  8584                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8585                           
  8586                           ; BSR set to: 0
  8587                           
  8588                           ; BSR set to: 0
  8589  0018CA  0E5E               	movlw	94
  8590  0018CC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8591  0018CE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8592  0018D0  B4D8               	btfsc	status,2,c
  8593  0018D2  D6F8               	goto	u8830
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;TabelasUmidade.h: 80: else
  8597                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8598                           
  8599                           ; BSR set to: 0
  8600                           
  8601                           ; BSR set to: 0
  8602  0018D4  0E5F               	movlw	95
  8603  0018D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8604  0018D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8605  0018DA  B4D8               	btfsc	status,2,c
  8606  0018DC  D6FA               	goto	u8840
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;TabelasUmidade.h: 82: else
  8610                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8611                           
  8612                           ; BSR set to: 0
  8613                           
  8614                           ; BSR set to: 0
  8615  0018DE  0E60               	movlw	96
  8616  0018E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8617  0018E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8618  0018E4  B4D8               	btfsc	status,2,c
  8619  0018E6  D6FC               	goto	u8850
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;TabelasUmidade.h: 84: else
  8623                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8624                           
  8625                           ; BSR set to: 0
  8626                           
  8627                           ; BSR set to: 0
  8628  0018E8  0E61               	movlw	97
  8629  0018EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8630  0018EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8631  0018EE  B4D8               	btfsc	status,2,c
  8632  0018F0  D33D               	goto	u10610
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;TabelasUmidade.h: 86: else
  8636                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8637                           
  8638                           ; BSR set to: 0
  8639                           
  8640                           ; BSR set to: 0
  8641  0018F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8642  0018F4  D00E               	goto	l400
  8643  0018F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8644  0018F8  E104               	bnz	u9300
  8645  0018FA  0E62               	movlw	98
  8646  0018FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8647  0018FE  A0D8               	btfss	status,0,c
  8648  001900  D008               	goto	l400
  8649  001902                     u9300:
  8650                           
  8651                           ; BSR set to: 0
  8652  001902  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8653  001904  D326               	goto	u10590
  8654  001906  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8655  001908  E104               	bnz	l6915
  8656  00190A  0E65               	movlw	101
  8657  00190C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8658  00190E  A0D8               	btfss	status,0,c
  8659  001910  D320               	goto	u10590
  8660  001912                     l400:
  8661  001912                     l6915:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;TabelasUmidade.h: 88: else
  8665                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8666  001912  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8667  001914  D00E               	goto	l402
  8668  001916  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8669  001918  E104               	bnz	u9320
  8670  00191A  0E65               	movlw	101
  8671  00191C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8672  00191E  A0D8               	btfss	status,0,c
  8673  001920  D008               	goto	l402
  8674  001922                     u9320:
  8675                           
  8676                           ; BSR set to: 0
  8677  001922  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8678  001924  D30E               	goto	u10580
  8679  001926  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8680  001928  E104               	bnz	l6921
  8681  00192A  0E78               	movlw	120
  8682  00192C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8683  00192E  A0D8               	btfss	status,0,c
  8684  001930  D308               	goto	u10580
  8685  001932                     l402:
  8686  001932                     l6921:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;TabelasUmidade.h: 90: else
  8690                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8691  001932  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8692  001934  D010               	goto	l404
  8693  001936  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8694  001938  E104               	bnz	u9340
  8695  00193A  0E78               	movlw	120
  8696  00193C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8697  00193E  A0D8               	btfss	status,0,c
  8698  001940  D00A               	goto	l404
  8699  001942                     u9340:
  8700                           
  8701                           ; BSR set to: 0
  8702  001942  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8703  001944  EF42  F011         	goto	u11220
  8704  001948  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8705  00194A  E105               	bnz	l6927
  8706  00194C  0E7B               	movlw	123
  8707  00194E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8708  001950  A0D8               	btfss	status,0,c
  8709  001952  EF42  F011         	goto	u11220
  8710  001956                     l404:
  8711  001956                     l6927:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;TabelasUmidade.h: 92: else
  8715                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8716  001956  0E7B               	movlw	123
  8717  001958  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8718  00195A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8719  00195C  B4D8               	btfsc	status,2,c
  8720  00195E  EF2F  F011         	goto	u11200
  8721                           
  8722                           ; BSR set to: 0
  8723  001962  0E7C               	movlw	124
  8724  001964  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8725  001966  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8726  001968  B4D8               	btfsc	status,2,c
  8727                           
  8728                           ; BSR set to: 0
  8729  00196A  EF2F  F011         	goto	u11200
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;TabelasUmidade.h: 94: else
  8733                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8734                           
  8735                           ; BSR set to: 0
  8736                           
  8737                           ; BSR set to: 0
  8738  00196E  0E7D               	movlw	125
  8739  001970  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8740  001972  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8741  001974  B4D8               	btfsc	status,2,c
  8742  001976  EF27  F011         	goto	u11190
  8743                           
  8744                           ; BSR set to: 0
  8745  00197A  0E7E               	movlw	126
  8746  00197C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8747  00197E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8748  001980  B4D8               	btfsc	status,2,c
  8749                           
  8750                           ; BSR set to: 0
  8751  001982  EF27  F011         	goto	u11190
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;TabelasUmidade.h: 96: else
  8755                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8756                           
  8757                           ; BSR set to: 0
  8758                           
  8759                           ; BSR set to: 0
  8760  001986  0E7F               	movlw	127
  8761  001988  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8762  00198A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8763  00198C  B4D8               	btfsc	status,2,c
  8764  00198E  D0D4               	goto	u9750
  8765                           
  8766                           ; BSR set to: 0
  8767  001990  0E80               	movlw	128
  8768  001992  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8769  001994  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8770  001996  B4D8               	btfsc	status,2,c
  8771                           
  8772                           ; BSR set to: 0
  8773  001998  D0CF               	goto	u9750
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;TabelasUmidade.h: 98: else
  8777                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8778                           
  8779                           ; BSR set to: 0
  8780                           
  8781                           ; BSR set to: 0
  8782  00199A  0E81               	movlw	129
  8783  00199C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8784  00199E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8785  0019A0  B4D8               	btfsc	status,2,c
  8786  0019A2  D0D6               	goto	u9770
  8787                           
  8788                           ; BSR set to: 0
  8789  0019A4  0E82               	movlw	130
  8790  0019A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8791  0019A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8792  0019AA  B4D8               	btfsc	status,2,c
  8793                           
  8794                           ; BSR set to: 0
  8795  0019AC  D0D1               	goto	u9770
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;TabelasUmidade.h: 100: else
  8799                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8800                           
  8801                           ; BSR set to: 0
  8802                           
  8803                           ; BSR set to: 0
  8804  0019AE  0E83               	movlw	131
  8805  0019B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8806  0019B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8807  0019B4  B4D8               	btfsc	status,2,c
  8808  0019B6  D0D8               	goto	u9790
  8809                           
  8810                           ; BSR set to: 0
  8811  0019B8  0E84               	movlw	132
  8812  0019BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8813  0019BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8814  0019BE  B4D8               	btfsc	status,2,c
  8815                           
  8816                           ; BSR set to: 0
  8817  0019C0  D0D3               	goto	u9790
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;TabelasUmidade.h: 102: else
  8821                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8822                           
  8823                           ; BSR set to: 0
  8824                           
  8825                           ; BSR set to: 0
  8826  0019C2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8827  0019C4  D010               	goto	l426
  8828  0019C6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8829  0019C8  E104               	bnz	u9460
  8830  0019CA  0E85               	movlw	133
  8831  0019CC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8832  0019CE  A0D8               	btfss	status,0,c
  8833  0019D0  D00A               	goto	l426
  8834  0019D2                     u9460:
  8835                           
  8836                           ; BSR set to: 0
  8837  0019D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8838  0019D4  D006               	goto	u9470
  8839  0019D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8840  0019D8  E106               	bnz	l6963
  8841  0019DA  0E95               	movlw	149
  8842  0019DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8843  0019DE  B0D8               	btfsc	status,0,c
  8844  0019E0  D002               	goto	l426
  8845  0019E2                     u9470:
  8846                           
  8847                           ; BSR set to: 0
  8848  0019E2  0E68               	movlw	104
  8849  0019E4  D68B               	goto	L24
  8850  0019E6                     l426:
  8851  0019E6                     l6963:
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;TabelasUmidade.h: 104: else
  8855                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8856  0019E6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8857  0019E8  D00E               	goto	l428
  8858  0019EA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8859  0019EC  E104               	bnz	u9480
  8860  0019EE  0E95               	movlw	149
  8861  0019F0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8862  0019F2  A0D8               	btfss	status,0,c
  8863  0019F4  D008               	goto	l428
  8864  0019F6                     u9480:
  8865                           
  8866                           ; BSR set to: 0
  8867  0019F6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8868  0019F8  D0C9               	goto	u9810
  8869  0019FA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8870  0019FC  E104               	bnz	l6969
  8871  0019FE  0E99               	movlw	153
  8872  001A00  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8873  001A02  A0D8               	btfss	status,0,c
  8874  001A04  D0C3               	goto	u9810
  8875  001A06                     l428:
  8876  001A06                     l6969:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;TabelasUmidade.h: 106: else
  8880                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8881  001A06  0E99               	movlw	153
  8882  001A08  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8883  001A0A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8884  001A0C  B4D8               	btfsc	status,2,c
  8885  001A0E  D0CA               	goto	u9830
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;TabelasUmidade.h: 108: else
  8889                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8890                           
  8891                           ; BSR set to: 0
  8892                           
  8893                           ; BSR set to: 0
  8894  001A10  0E9A               	movlw	154
  8895  001A12  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8896  001A14  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8897  001A16  B4D8               	btfsc	status,2,c
  8898  001A18  D0D1               	goto	u9850
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;TabelasUmidade.h: 110: else
  8902                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8903                           
  8904                           ; BSR set to: 0
  8905                           
  8906                           ; BSR set to: 0
  8907  001A1A  0E9B               	movlw	155
  8908  001A1C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8909  001A1E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8910  001A20  B4D8               	btfsc	status,2,c
  8911  001A22  D0DE               	goto	u9870
  8912                           
  8913                           ; BSR set to: 0
  8914  001A24  0E9C               	movlw	156
  8915  001A26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8916  001A28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8917  001A2A  B4D8               	btfsc	status,2,c
  8918                           
  8919                           ; BSR set to: 0
  8920  001A2C  D0D9               	goto	u9870
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;TabelasUmidade.h: 112: else
  8924                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8925                           
  8926                           ; BSR set to: 0
  8927                           
  8928                           ; BSR set to: 0
  8929  001A2E  0E9D               	movlw	157
  8930  001A30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8931  001A32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8932  001A34  B4D8               	btfsc	status,2,c
  8933  001A36  D0E0               	goto	u9890
  8934                           
  8935                           ; BSR set to: 0
  8936  001A38  0E9E               	movlw	158
  8937  001A3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8938  001A3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8939  001A3E  B4D8               	btfsc	status,2,c
  8940                           
  8941                           ; BSR set to: 0
  8942  001A40  D0DB               	goto	u9890
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;TabelasUmidade.h: 114: else
  8946                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8947                           
  8948                           ; BSR set to: 0
  8949                           
  8950                           ; BSR set to: 0
  8951  001A42  0E9F               	movlw	159
  8952  001A44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8953  001A46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8954  001A48  A4D8               	btfss	status,2,c
  8955  001A4A  D002               	goto	l442
  8956  001A4C                     u9560:
  8957                           
  8958                           ; BSR set to: 0
  8959  001A4C  0E6E               	movlw	110
  8960  001A4E  D656               	goto	L24
  8961  001A50                     l442:
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;TabelasUmidade.h: 116: else
  8965                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8966                           
  8967                           ; BSR set to: 0
  8968  001A50  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8969  001A52  EF07  F013         	goto	l630
  8970  001A56  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8971  001A58  E105               	bnz	u9570
  8972  001A5A                     L25:
  8973  001A5A  0EA0               	movlw	160
  8974  001A5C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8975  001A5E  A0D8               	btfss	status,0,c
  8976  001A60  EF07  F013         	goto	l630
  8977  001A64                     u9570:
  8978  001A64  D0E1               	goto	u9930
  8979  001A66                     
  8980                           ; BSR set to: 0
  8981                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8982                           
  8983                           ; BSR set to: 0
  8984  001A66  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8985  001A68  D61F               	goto	u8810
  8986  001A6A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8987  001A6C  E104               	bnz	l7001
  8988  001A6E  0E5B               	movlw	91
  8989  001A70  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8990  001A72  A0D8               	btfss	status,0,c
  8991  001A74  D619               	goto	u8810
  8992  001A76                     l7001:
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;TabelasUmidade.h: 122: else
  8996                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8997  001A76  0E5B               	movlw	91
  8998  001A78  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8999  001A7A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9000  001A7C  B4D8               	btfsc	status,2,c
  9001  001A7E  D61B               	goto	u8820
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;TabelasUmidade.h: 124: else
  9005                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  9006                           
  9007                           ; BSR set to: 0
  9008                           
  9009                           ; BSR set to: 0
  9010  001A80  0E5C               	movlw	92
  9011  001A82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9012  001A84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9013  001A86  B4D8               	btfsc	status,2,c
  9014  001A88  D61D               	goto	u8830
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;TabelasUmidade.h: 126: else
  9018                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  9019                           
  9020                           ; BSR set to: 0
  9021                           
  9022                           ; BSR set to: 0
  9023  001A8A  0E5D               	movlw	93
  9024  001A8C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9025  001A8E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9026  001A90  B4D8               	btfsc	status,2,c
  9027  001A92  D61F               	goto	u8840
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;TabelasUmidade.h: 128: else
  9031                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  9032                           
  9033                           ; BSR set to: 0
  9034                           
  9035                           ; BSR set to: 0
  9036  001A94  0E5E               	movlw	94
  9037  001A96  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9038  001A98  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9039  001A9A  B4D8               	btfsc	status,2,c
  9040  001A9C  D621               	goto	u8850
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;TabelasUmidade.h: 130: else
  9044                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  9045                           
  9046                           ; BSR set to: 0
  9047                           
  9048                           ; BSR set to: 0
  9049  001A9E  0E5F               	movlw	95
  9050  001AA0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9051  001AA2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9052  001AA4  B4D8               	btfsc	status,2,c
  9053  001AA6  D262               	goto	u10610
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;TabelasUmidade.h: 132: else
  9057                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  9058                           
  9059                           ; BSR set to: 0
  9060                           
  9061                           ; BSR set to: 0
  9062  001AA8  0E60               	movlw	96
  9063  001AAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9064  001AAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9065  001AAE  B4D8               	btfsc	status,2,c
  9066  001AB0  D25D               	goto	u10610
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;TabelasUmidade.h: 134: else
  9070                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  9071                           
  9072                           ; BSR set to: 0
  9073                           
  9074                           ; BSR set to: 0
  9075  001AB2  0E61               	movlw	97
  9076  001AB4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9077  001AB6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9078  001AB8  B4D8               	btfsc	status,2,c
  9079  001ABA  D24B               	goto	u10590
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;TabelasUmidade.h: 136: else
  9083                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  9084                           
  9085                           ; BSR set to: 0
  9086                           
  9087                           ; BSR set to: 0
  9088  001ABC  0E62               	movlw	98
  9089  001ABE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9090  001AC0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9091  001AC2  B4D8               	btfsc	status,2,c
  9092  001AC4  D246               	goto	u10590
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;TabelasUmidade.h: 138: else
  9096                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  9097                           
  9098                           ; BSR set to: 0
  9099                           
  9100                           ; BSR set to: 0
  9101  001AC6  0E63               	movlw	99
  9102  001AC8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9103  001ACA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9104  001ACC  B4D8               	btfsc	status,2,c
  9105  001ACE  D239               	goto	u10580
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;TabelasUmidade.h: 140: else
  9109                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  9110                           
  9111                           ; BSR set to: 0
  9112                           
  9113                           ; BSR set to: 0
  9114  001AD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9115  001AD2  D00E               	goto	l466
  9116  001AD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9117  001AD6  E104               	bnz	u9680
  9118  001AD8  0E64               	movlw	100
  9119  001ADA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9120  001ADC  A0D8               	btfss	status,0,c
  9121  001ADE  D008               	goto	l466
  9122  001AE0                     u9680:
  9123                           
  9124                           ; BSR set to: 0
  9125  001AE0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9126  001AE2  D3D0               	goto	u11220
  9127  001AE4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9128  001AE6  E104               	bnz	l7043
  9129  001AE8  0E68               	movlw	104
  9130  001AEA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9131  001AEC  A0D8               	btfss	status,0,c
  9132  001AEE  D3CA               	goto	u11220
  9133  001AF0                     l466:
  9134  001AF0                     l7043:
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;TabelasUmidade.h: 142: else
  9138                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  9139  001AF0  0E68               	movlw	104
  9140  001AF2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9141  001AF4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9142  001AF6  B4D8               	btfsc	status,2,c
  9143  001AF8  D3B2               	goto	u11200
  9144                           
  9145                           ; BSR set to: 0
  9146  001AFA  0E69               	movlw	105
  9147  001AFC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9148  001AFE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9149  001B00  B4D8               	btfsc	status,2,c
  9150                           
  9151                           ; BSR set to: 0
  9152  001B02  D3AD               	goto	u11200
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;TabelasUmidade.h: 144: else
  9156                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  9157                           
  9158                           ; BSR set to: 0
  9159                           
  9160                           ; BSR set to: 0
  9161  001B04  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9162  001B06  D00E               	goto	l472
  9163  001B08  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9164  001B0A  E104               	bnz	u9720
  9165  001B0C  0E6A               	movlw	106
  9166  001B0E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9167  001B10  A0D8               	btfss	status,0,c
  9168  001B12  D008               	goto	l472
  9169  001B14                     u9720:
  9170                           
  9171                           ; BSR set to: 0
  9172  001B14  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9173  001B16  D39B               	goto	u11190
  9174  001B18  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9175  001B1A  E104               	bnz	l7055
  9176  001B1C  0E7B               	movlw	123
  9177  001B1E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9178  001B20  A0D8               	btfss	status,0,c
  9179  001B22  D395               	goto	u11190
  9180  001B24                     l472:
  9181  001B24                     l7055:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;TabelasUmidade.h: 146: else
  9185                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  9186  001B24  0E7B               	movlw	123
  9187  001B26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9188  001B28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9189  001B2A  B4D8               	btfsc	status,2,c
  9190  001B2C  D005               	goto	u9750
  9191                           
  9192                           ; BSR set to: 0
  9193  001B2E  0E7C               	movlw	124
  9194  001B30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9195  001B32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9196  001B34  A4D8               	btfss	status,2,c
  9197  001B36  D002               	goto	l474
  9198  001B38                     u9750:
  9199                           
  9200                           ; BSR set to: 0
  9201                           
  9202                           ; BSR set to: 0
  9203  001B38  0E65               	movlw	101
  9204  001B3A  D5E0               	goto	L24
  9205  001B3C                     l474:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;TabelasUmidade.h: 148: else
  9209                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  9210                           
  9211                           ; BSR set to: 0
  9212  001B3C  0E7D               	movlw	125
  9213  001B3E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9214  001B40  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9215  001B42  B4D8               	btfsc	status,2,c
  9216  001B44  D005               	goto	u9770
  9217                           
  9218                           ; BSR set to: 0
  9219  001B46  0E7E               	movlw	126
  9220  001B48  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9221  001B4A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9222  001B4C  A4D8               	btfss	status,2,c
  9223  001B4E  D002               	goto	l478
  9224  001B50                     u9770:
  9225                           
  9226                           ; BSR set to: 0
  9227                           
  9228                           ; BSR set to: 0
  9229  001B50  0E66               	movlw	102
  9230  001B52  D5D4               	goto	L24
  9231  001B54                     l478:
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;TabelasUmidade.h: 150: else
  9235                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9236                           
  9237                           ; BSR set to: 0
  9238  001B54  0E7F               	movlw	127
  9239  001B56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9240  001B58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9241  001B5A  B4D8               	btfsc	status,2,c
  9242  001B5C  D005               	goto	u9790
  9243                           
  9244                           ; BSR set to: 0
  9245  001B5E  0E80               	movlw	128
  9246  001B60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9247  001B62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9248  001B64  A4D8               	btfss	status,2,c
  9249  001B66  D002               	goto	l482
  9250  001B68                     u9790:
  9251                           
  9252                           ; BSR set to: 0
  9253                           
  9254                           ; BSR set to: 0
  9255  001B68  0E67               	movlw	103
  9256  001B6A  D5C8               	goto	L24
  9257  001B6C                     l482:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;TabelasUmidade.h: 152: else
  9261                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9262                           
  9263                           ; BSR set to: 0
  9264  001B6C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9265  001B6E  D010               	goto	l486
  9266  001B70  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9267  001B72  E104               	bnz	u9800
  9268  001B74  0E81               	movlw	129
  9269  001B76  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9270  001B78  A0D8               	btfss	status,0,c
  9271  001B7A  D00A               	goto	l486
  9272  001B7C                     u9800:
  9273                           
  9274                           ; BSR set to: 0
  9275  001B7C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9276  001B7E  D006               	goto	u9810
  9277  001B80  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9278  001B82  E106               	bnz	l7079
  9279  001B84  0E8B               	movlw	139
  9280  001B86  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9281  001B88  B0D8               	btfsc	status,0,c
  9282  001B8A  D002               	goto	l486
  9283  001B8C                     u9810:
  9284                           
  9285                           ; BSR set to: 0
  9286  001B8C  0E69               	movlw	105
  9287  001B8E  D5B6               	goto	L24
  9288  001B90                     l486:
  9289  001B90                     l7079:
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;TabelasUmidade.h: 154: else
  9293                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9294  001B90  0E8B               	movlw	139
  9295  001B92  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9296  001B94  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9297  001B96  B4D8               	btfsc	status,2,c
  9298  001B98  D005               	goto	u9830
  9299                           
  9300                           ; BSR set to: 0
  9301  001B9A  0E8C               	movlw	140
  9302  001B9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9303  001B9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9304  001BA0  A4D8               	btfss	status,2,c
  9305  001BA2  D002               	goto	l488
  9306  001BA4                     u9830:
  9307                           
  9308                           ; BSR set to: 0
  9309                           
  9310                           ; BSR set to: 0
  9311  001BA4  0E6A               	movlw	106
  9312  001BA6  D5AA               	goto	L24
  9313  001BA8                     l488:
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;TabelasUmidade.h: 156: else
  9317                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9318                           
  9319                           ; BSR set to: 0
  9320  001BA8  0E8D               	movlw	141
  9321  001BAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9322  001BAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9323  001BAE  B4D8               	btfsc	status,2,c
  9324  001BB0  D005               	goto	u9850
  9325                           
  9326                           ; BSR set to: 0
  9327  001BB2  0E92               	movlw	146
  9328  001BB4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9329  001BB6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9330  001BB8  A4D8               	btfss	status,2,c
  9331  001BBA  D002               	goto	l492
  9332  001BBC                     u9850:
  9333                           
  9334                           ; BSR set to: 0
  9335                           
  9336                           ; BSR set to: 0
  9337  001BBC  0E6B               	movlw	107
  9338  001BBE  D59E               	goto	L24
  9339  001BC0                     l492:
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;TabelasUmidade.h: 158: else
  9343                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9344                           
  9345                           ; BSR set to: 0
  9346  001BC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9347  001BC2  D010               	goto	l496
  9348  001BC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9349  001BC6  E104               	bnz	u9860
  9350  001BC8  0E93               	movlw	147
  9351  001BCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9352  001BCC  A0D8               	btfss	status,0,c
  9353  001BCE  D00A               	goto	l496
  9354  001BD0                     u9860:
  9355                           
  9356                           ; BSR set to: 0
  9357  001BD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9358  001BD2  D006               	goto	u9870
  9359  001BD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9360  001BD6  E106               	bnz	l7097
  9361  001BD8  0E98               	movlw	152
  9362  001BDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9363  001BDC  B0D8               	btfsc	status,0,c
  9364  001BDE  D002               	goto	l496
  9365  001BE0                     u9870:
  9366                           
  9367                           ; BSR set to: 0
  9368  001BE0  0E6C               	movlw	108
  9369  001BE2  D58C               	goto	L24
  9370  001BE4                     l496:
  9371  001BE4                     l7097:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;TabelasUmidade.h: 160: else
  9375                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9376  001BE4  0E99               	movlw	153
  9377  001BE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9378  001BE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9379  001BEA  B4D8               	btfsc	status,2,c
  9380  001BEC  D005               	goto	u9890
  9381                           
  9382                           ; BSR set to: 0
  9383  001BEE  0E98               	movlw	152
  9384  001BF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9385  001BF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9386  001BF4  A4D8               	btfss	status,2,c
  9387  001BF6  D002               	goto	l498
  9388  001BF8                     u9890:
  9389                           
  9390                           ; BSR set to: 0
  9391                           
  9392                           ; BSR set to: 0
  9393  001BF8  0E6D               	movlw	109
  9394  001BFA  D580               	goto	L24
  9395  001BFC                     l498:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;TabelasUmidade.h: 162: else
  9399                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9400                           
  9401                           ; BSR set to: 0
  9402  001BFC  0E9B               	movlw	155
  9403  001BFE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9404  001C00  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9405  001C02  B4D8               	btfsc	status,2,c
  9406  001C04  D005               	goto	u9910
  9407                           
  9408                           ; BSR set to: 0
  9409  001C06  0E9A               	movlw	154
  9410  001C08  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9411  001C0A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9412  001C0C  A4D8               	btfss	status,2,c
  9413  001C0E  D002               	goto	l502
  9414  001C10                     u9910:
  9415                           
  9416                           ; BSR set to: 0
  9417                           
  9418                           ; BSR set to: 0
  9419  001C10  0E6F               	movlw	111
  9420  001C12  D574               	goto	L24
  9421  001C14                     l502:
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;TabelasUmidade.h: 164: else
  9425                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9426                           
  9427                           ; BSR set to: 0
  9428  001C14  0E9D               	movlw	157
  9429  001C16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9430  001C18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9431  001C1A  B4D8               	btfsc	status,2,c
  9432  001C1C  D005               	goto	u9930
  9433                           
  9434                           ; BSR set to: 0
  9435  001C1E  0E9C               	movlw	156
  9436  001C20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9437  001C22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9438  001C24  A4D8               	btfss	status,2,c
  9439  001C26  D002               	goto	l506
  9440  001C28                     u9930:
  9441                           
  9442                           ; BSR set to: 0
  9443                           
  9444                           ; BSR set to: 0
  9445  001C28  0E70               	movlw	112
  9446  001C2A  D568               	goto	L24
  9447  001C2C                     l506:
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;TabelasUmidade.h: 166: else
  9451                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9452                           
  9453                           ; BSR set to: 0
  9454  001C2C  0E9F               	movlw	159
  9455  001C2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9456  001C30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9457  001C32  B4D8               	btfsc	status,2,c
  9458  001C34  D005               	goto	u9950
  9459                           
  9460                           ; BSR set to: 0
  9461  001C36  0E9E               	movlw	158
  9462  001C38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9463  001C3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9464  001C3C  A4D8               	btfss	status,2,c
  9465  001C3E  D002               	goto	l510
  9466  001C40                     u9950:
  9467                           
  9468                           ; BSR set to: 0
  9469                           
  9470                           ; BSR set to: 0
  9471  001C40  0E71               	movlw	113
  9472  001C42  D55C               	goto	L24
  9473  001C44                     l510:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;TabelasUmidade.h: 168: else
  9477                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9478                           
  9479                           ; BSR set to: 0
  9480  001C44  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9481  001C46  EF07  F013         	goto	l630
  9482  001C4A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9483  001C4C  E105               	bnz	u9960
  9484  001C4E  0EA0               	movlw	160
  9485  001C50  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9486  001C52  A0D8               	btfss	status,0,c
  9487  001C54  EF07  F013         	goto	l630
  9488  001C58                     u9960:
  9489                           
  9490                           ; BSR set to: 0
  9491  001C58  0E73               	movlw	115
  9492  001C5A  D550               	goto	L24
  9493  001C5C                     l297:
  9494                           
  9495                           ; BSR set to: 0
  9496                           
  9497                           ; BSR set to: 0
  9498  001C5C  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9499  001C60  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9500                           
  9501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9502                           ; Switch size 1, requested type "space"
  9503                           ; Number of cases is 1, Range of values is 0 to 0
  9504                           ; switch strategies available:
  9505                           ; Name         Instructions Cycles
  9506                           ; simple_byte            4     3 (average)
  9507                           ;	Chosen strategy is simple_byte
  9508  001C64  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9509  001C66  0A00               	xorlw	0	; case 0
  9510  001C68  A4D8               	btfss	status,2,c
  9511  001C6A  EF07  F013         	goto	l630
  9512                           
  9513                           ; BSR set to: 0
  9514                           ; Switch size 1, requested type "space"
  9515                           ; Number of cases is 3, Range of values is 1 to 3
  9516                           ; switch strategies available:
  9517                           ; Name         Instructions Cycles
  9518                           ; simple_byte           10     6 (average)
  9519                           ;	Chosen strategy is simple_byte
  9520  001C6E  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9521  001C70  0A01               	xorlw	1	; case 1
  9522  001C72  B4D8               	btfsc	status,2,c
  9523  001C74  D4EE               	goto	l298
  9524  001C76  0A03               	xorlw	3	; case 2
  9525  001C78  B4D8               	btfsc	status,2,c
  9526  001C7A  D610               	goto	l383
  9527  001C7C  0A01               	xorlw	1	; case 3
  9528  001C7E  B4D8               	btfsc	status,2,c
  9529  001C80  D6F2               	goto	l445
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9533  001C82  EF07  F013         	goto	l630
  9534  001C86                     l296:
  9535                           
  9536                           ; BSR set to: 0
  9537                           
  9538                           ; BSR set to: 0
  9539  001C86  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9540  001C88  B4D8               	btfsc	status,2,c
  9541  001C8A  EFFC  F012         	goto	l517
  9542  001C8E  EF07  F013         	goto	l630
  9543  001C92                     
  9544                           ; BSR set to: 0
  9545                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9546                           
  9547                           ; BSR set to: 0
  9548  001C92  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9549  001C94  D517               	goto	u8830
  9550  001C96  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9551  001C98  E104               	bnz	l7137
  9552  001C9A  0E5B               	movlw	91
  9553  001C9C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9554  001C9E  A0D8               	btfss	status,0,c
  9555  001CA0  D511               	goto	u8830
  9556  001CA2                     l7137:
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;TabelasUmidade.h: 176: else
  9560                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9561  001CA2  0E5B               	movlw	91
  9562  001CA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9563  001CA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9564  001CA8  B4D8               	btfsc	status,2,c
  9565  001CAA  D50C               	goto	u8830
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;TabelasUmidade.h: 178: else
  9569                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9570                           
  9571                           ; BSR set to: 0
  9572                           
  9573                           ; BSR set to: 0
  9574  001CAC  0E5C               	movlw	92
  9575  001CAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9576  001CB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9577  001CB2  B4D8               	btfsc	status,2,c
  9578  001CB4  D4F9               	goto	u8810
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;TabelasUmidade.h: 180: else
  9582                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9583                           
  9584                           ; BSR set to: 0
  9585                           
  9586                           ; BSR set to: 0
  9587  001CB6  0E5D               	movlw	93
  9588  001CB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9589  001CBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9590  001CBC  B4D8               	btfsc	status,2,c
  9591  001CBE  D4ED               	goto	u8800
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;TabelasUmidade.h: 182: else
  9595                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9596                           
  9597                           ; BSR set to: 0
  9598                           
  9599                           ; BSR set to: 0
  9600  001CC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9601  001CC2  D00E               	goto	l527
  9602  001CC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9603  001CC6  E104               	bnz	u10020
  9604  001CC8  0E5E               	movlw	94
  9605  001CCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9606  001CCC  A0D8               	btfss	status,0,c
  9607  001CCE  D008               	goto	l527
  9608  001CD0                     u10020:
  9609                           
  9610                           ; BSR set to: 0
  9611  001CD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9612  001CD2  D4DC               	goto	u8790
  9613  001CD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9614  001CD6  E104               	bnz	l7155
  9615  001CD8  0E65               	movlw	101
  9616  001CDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9617  001CDC  A0D8               	btfss	status,0,c
  9618  001CDE  D4D6               	goto	u8790
  9619  001CE0                     l527:
  9620  001CE0                     l7155:
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;TabelasUmidade.h: 184: else
  9624                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9625  001CE0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9626  001CE2  D00E               	goto	l529
  9627  001CE4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9628  001CE6  E104               	bnz	u10040
  9629  001CE8  0E65               	movlw	101
  9630  001CEA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9631  001CEC  A0D8               	btfss	status,0,c
  9632  001CEE  D008               	goto	l529
  9633  001CF0                     u10040:
  9634                           
  9635                           ; BSR set to: 0
  9636  001CF0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9637  001CF2  D2FE               	goto	u11290
  9638  001CF4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9639  001CF6  E104               	bnz	l7161
  9640  001CF8  0E67               	movlw	103
  9641  001CFA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9642  001CFC  A0D8               	btfss	status,0,c
  9643  001CFE  D2F8               	goto	u11290
  9644  001D00                     l529:
  9645  001D00                     l7161:
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;TabelasUmidade.h: 186: else
  9649                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9650  001D00  0E67               	movlw	103
  9651  001D02  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9652  001D04  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9653  001D06  B4D8               	btfsc	status,2,c
  9654  001D08  D303               	goto	u11310
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;TabelasUmidade.h: 188: else
  9658                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9659                           
  9660                           ; BSR set to: 0
  9661                           
  9662                           ; BSR set to: 0
  9663  001D0A  0E68               	movlw	104
  9664  001D0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9665  001D0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9666  001D10  B4D8               	btfsc	status,2,c
  9667  001D12  D306               	goto	u11320
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;TabelasUmidade.h: 190: else
  9671                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9672                           
  9673                           ; BSR set to: 0
  9674                           
  9675                           ; BSR set to: 0
  9676  001D14  0E69               	movlw	105
  9677  001D16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9678  001D18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9679  001D1A  B4D8               	btfsc	status,2,c
  9680  001D1C  D179               	goto	u10720
  9681                           
  9682                           ; BSR set to: 0
  9683                           ;TabelasUmidade.h: 192: else
  9684                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9685                           
  9686                           ; BSR set to: 0
  9687                           
  9688                           ; BSR set to: 0
  9689  001D1E  0E6A               	movlw	106
  9690  001D20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9691  001D22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9692  001D24  B4D8               	btfsc	status,2,c
  9693  001D26  D30F               	goto	u11340
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;TabelasUmidade.h: 194: else
  9697                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9698                           
  9699                           ; BSR set to: 0
  9700                           
  9701                           ; BSR set to: 0
  9702  001D28  0E6B               	movlw	107
  9703  001D2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9704  001D2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9705  001D2E  B4D8               	btfsc	status,2,c
  9706  001D30  D312               	goto	u11350
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;TabelasUmidade.h: 196: else
  9710                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9711                           
  9712                           ; BSR set to: 0
  9713                           
  9714                           ; BSR set to: 0
  9715  001D32  0E6C               	movlw	108
  9716  001D34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9717  001D36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9718  001D38  A4D8               	btfss	status,2,c
  9719  001D3A  D002               	goto	l541
  9720                           
  9721                           ; BSR set to: 0
  9722  001D3C  0E43               	movlw	67
  9723  001D3E  D4DE               	goto	L24
  9724  001D40                     l541:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;TabelasUmidade.h: 198: else
  9728                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9729                           
  9730                           ; BSR set to: 0
  9731  001D40  0E6D               	movlw	109
  9732  001D42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9733  001D44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9734  001D46  B4D8               	btfsc	status,2,c
  9735  001D48  D30E               	goto	u11360
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;TabelasUmidade.h: 200: else
  9739                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9740                           
  9741                           ; BSR set to: 0
  9742                           
  9743                           ; BSR set to: 0
  9744  001D4A  0E6E               	movlw	110
  9745  001D4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9746  001D4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9747  001D50  B4D8               	btfsc	status,2,c
  9748  001D52  D17E               	goto	u10760
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;TabelasUmidade.h: 202: else
  9752                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9753                           
  9754                           ; BSR set to: 0
  9755                           
  9756                           ; BSR set to: 0
  9757  001D54  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9758  001D56  D00E               	goto	l547
  9759  001D58  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9760  001D5A  E104               	bnz	u10140
  9761  001D5C  0E6F               	movlw	111
  9762  001D5E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9763  001D60  A0D8               	btfss	status,0,c
  9764  001D62  D008               	goto	l547
  9765  001D64                     u10140:
  9766                           
  9767                           ; BSR set to: 0
  9768  001D64  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9769  001D66  D317               	goto	u11390
  9770  001D68  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9771  001D6A  E104               	bnz	l7199
  9772  001D6C  0E73               	movlw	115
  9773  001D6E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9774  001D70  A0D8               	btfss	status,0,c
  9775  001D72  D311               	goto	u11390
  9776  001D74                     l547:
  9777  001D74                     l7199:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;TabelasUmidade.h: 204: else
  9781                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9782  001D74  0E73               	movlw	115
  9783  001D76  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9784  001D78  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9785  001D7A  B4D8               	btfsc	status,2,c
  9786  001D7C  D314               	goto	u11400
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;TabelasUmidade.h: 206: else
  9790                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9791                           
  9792                           ; BSR set to: 0
  9793                           
  9794                           ; BSR set to: 0
  9795  001D7E  0E74               	movlw	116
  9796  001D80  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9797  001D82  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9798  001D84  B4D8               	btfsc	status,2,c
  9799  001D86  D317               	goto	u11410
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;TabelasUmidade.h: 208: else
  9803                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9804                           
  9805                           ; BSR set to: 0
  9806                           
  9807                           ; BSR set to: 0
  9808  001D88  0E75               	movlw	117
  9809  001D8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9810  001D8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9811  001D8E  A4D8               	btfss	status,2,c
  9812  001D90  D002               	goto	l553
  9813                           
  9814                           ; BSR set to: 0
  9815  001D92  0E36               	movlw	54
  9816  001D94  D4B3               	goto	L24
  9817  001D96                     l553:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;TabelasUmidade.h: 210: else
  9821                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9822                           
  9823                           ; BSR set to: 0
  9824  001D96  0E76               	movlw	118
  9825  001D98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9826  001D9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9827  001D9C  B4D8               	btfsc	status,2,c
  9828  001D9E  D323               	goto	u11440
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;TabelasUmidade.h: 212: else
  9832                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9833                           
  9834                           ; BSR set to: 0
  9835                           
  9836                           ; BSR set to: 0
  9837  001DA0  0E77               	movlw	119
  9838  001DA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9839  001DA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9840  001DA6  B4D8               	btfsc	status,2,c
  9841  001DA8  D326               	goto	u11450
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;TabelasUmidade.h: 214: else
  9845                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9846                           
  9847                           ; BSR set to: 0
  9848                           
  9849                           ; BSR set to: 0
  9850  001DAA  0E78               	movlw	120
  9851  001DAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9852  001DAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9853  001DB0  B4D8               	btfsc	status,2,c
  9854  001DB2  D18D               	goto	u10850
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;TabelasUmidade.h: 216: else
  9858                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9859                           
  9860                           ; BSR set to: 0
  9861                           
  9862                           ; BSR set to: 0
  9863  001DB4  0E79               	movlw	121
  9864  001DB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9865  001DB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9866  001DBA  B4D8               	btfsc	status,2,c
  9867  001DBC  D32C               	goto	u11470
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;TabelasUmidade.h: 218: else
  9871                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9872                           
  9873                           ; BSR set to: 0
  9874                           
  9875                           ; BSR set to: 0
  9876  001DBE  0E7A               	movlw	122
  9877  001DC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9878  001DC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9879  001DC4  A4D8               	btfss	status,2,c
  9880  001DC6  D002               	goto	l563
  9881                           
  9882                           ; BSR set to: 0
  9883  001DC8  0E2E               	movlw	46
  9884  001DCA  D498               	goto	L24
  9885  001DCC                     l563:
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;TabelasUmidade.h: 220: else
  9889                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9890                           
  9891                           ; BSR set to: 0
  9892  001DCC  0E7B               	movlw	123
  9893  001DCE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9894  001DD0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9895  001DD2  B4D8               	btfsc	status,2,c
  9896  001DD4  D328               	goto	u11480
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;TabelasUmidade.h: 222: else
  9900                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9901                           
  9902                           ; BSR set to: 0
  9903                           
  9904                           ; BSR set to: 0
  9905  001DD6  0E7C               	movlw	124
  9906  001DD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9907  001DDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9908  001DDC  B4D8               	btfsc	status,2,c
  9909  001DDE  D189               	goto	u10880
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;TabelasUmidade.h: 224: else
  9913                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9914                           
  9915                           ; BSR set to: 0
  9916                           
  9917                           ; BSR set to: 0
  9918  001DE0  0E7D               	movlw	125
  9919  001DE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9920  001DE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9921  001DE6  B4D8               	btfsc	status,2,c
  9922  001DE8  D326               	goto	u11490
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;TabelasUmidade.h: 226: else
  9926                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9927                           
  9928                           ; BSR set to: 0
  9929                           
  9930                           ; BSR set to: 0
  9931  001DEA  0E7E               	movlw	126
  9932  001DEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9933  001DEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9934  001DF0  B4D8               	btfsc	status,2,c
  9935  001DF2  D187               	goto	u10890
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;TabelasUmidade.h: 228: else
  9939                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9940                           
  9941                           ; BSR set to: 0
  9942                           
  9943                           ; BSR set to: 0
  9944  001DF4  0E7F               	movlw	127
  9945  001DF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9946  001DF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9947  001DFA  B4D8               	btfsc	status,2,c
  9948  001DFC  D32C               	goto	u11510
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;TabelasUmidade.h: 230: else
  9952                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9953                           
  9954                           ; BSR set to: 0
  9955                           
  9956                           ; BSR set to: 0
  9957  001DFE  0E80               	movlw	128
  9958  001E00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9959  001E02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9960  001E04  B4D8               	btfsc	status,2,c
  9961  001E06  D327               	goto	u11510
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;TabelasUmidade.h: 232: else
  9965                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9966                           
  9967                           ; BSR set to: 0
  9968                           
  9969                           ; BSR set to: 0
  9970  001E08  0E81               	movlw	129
  9971  001E0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9972  001E0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9973  001E0E  B4D8               	btfsc	status,2,c
  9974  001E10  D32A               	goto	u11520
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;TabelasUmidade.h: 234: else
  9978                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9979                           
  9980                           ; BSR set to: 0
  9981                           
  9982                           ; BSR set to: 0
  9983  001E12  0E82               	movlw	130
  9984  001E14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9985  001E16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9986  001E18  A4D8               	btfss	status,2,c
  9987  001E1A  D002               	goto	l579
  9988                           
  9989                           ; BSR set to: 0
  9990  001E1C  0E26               	movlw	38
  9991  001E1E  D46E               	goto	L24
  9992  001E20                     l579:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;TabelasUmidade.h: 236: else
  9996                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9997                           
  9998                           ; BSR set to: 0
  9999  001E20  0E83               	movlw	131
 10000  001E22  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10001  001E24  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10002  001E26  B4D8               	btfsc	status,2,c
 10003  001E28  D326               	goto	u11530
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;TabelasUmidade.h: 238: else
 10007                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
 10008                           
 10009                           ; BSR set to: 0
 10010                           
 10011                           ; BSR set to: 0
 10012  001E2A  0E84               	movlw	132
 10013  001E2C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10014  001E2E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10015  001E30  B4D8               	btfsc	status,2,c
 10016  001E32  D329               	goto	u11540
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;TabelasUmidade.h: 240: else
 10020                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
 10021                           
 10022                           ; BSR set to: 0
 10023                           
 10024                           ; BSR set to: 0
 10025  001E34  0E85               	movlw	133
 10026  001E36  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10027  001E38  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10028  001E3A  B4D8               	btfsc	status,2,c
 10029  001E3C  D324               	goto	u11540
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;TabelasUmidade.h: 242: else
 10033                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
 10034                           
 10035                           ; BSR set to: 0
 10036                           
 10037                           ; BSR set to: 0
 10038  001E3E  0E86               	movlw	134
 10039  001E40  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10040  001E42  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10041  001E44  B4D8               	btfsc	status,2,c
 10042  001E46  D31F               	goto	u11540
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;TabelasUmidade.h: 244: else
 10046                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
 10047                           
 10048                           ; BSR set to: 0
 10049                           
 10050                           ; BSR set to: 0
 10051  001E48  0E87               	movlw	135
 10052  001E4A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10053  001E4C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10054  001E4E  B4D8               	btfsc	status,2,c
 10055  001E50  D322               	goto	u11550
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;TabelasUmidade.h: 246: else
 10059                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
 10060                           
 10061                           ; BSR set to: 0
 10062                           
 10063                           ; BSR set to: 0
 10064  001E52  0E88               	movlw	136
 10065  001E54  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10066  001E56  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10067  001E58  B4D8               	btfsc	status,2,c
 10068  001E5A  D325               	goto	u11560
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;TabelasUmidade.h: 248: else
 10072                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
 10073                           
 10074                           ; BSR set to: 0
 10075                           
 10076                           ; BSR set to: 0
 10077  001E5C  0E89               	movlw	137
 10078  001E5E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10079  001E60  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10080  001E62  B4D8               	btfsc	status,2,c
 10081  001E64  D328               	goto	u11570
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;TabelasUmidade.h: 250: else
 10085                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
 10086                           
 10087                           ; BSR set to: 0
 10088                           
 10089                           ; BSR set to: 0
 10090  001E66  0E8A               	movlw	138
 10091  001E68  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10092  001E6A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10093  001E6C  B4D8               	btfsc	status,2,c
 10094  001E6E  D32B               	goto	u11580
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;TabelasUmidade.h: 252: else
 10098                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
 10099                           
 10100                           ; BSR set to: 0
 10101                           
 10102                           ; BSR set to: 0
 10103  001E70  0E8B               	movlw	139
 10104  001E72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10105  001E74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10106  001E76  B4D8               	btfsc	status,2,c
 10107  001E78  D32E               	goto	u11590
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;TabelasUmidade.h: 254: else
 10111                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
 10112                           
 10113                           ; BSR set to: 0
 10114                           
 10115                           ; BSR set to: 0
 10116  001E7A  0E8C               	movlw	140
 10117  001E7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10118  001E7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10119  001E80  B4D8               	btfsc	status,2,c
 10120  001E82  D331               	goto	u11600
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;TabelasUmidade.h: 256: else
 10124                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
 10125                           
 10126                           ; BSR set to: 0
 10127                           
 10128                           ; BSR set to: 0
 10129  001E84  0E8D               	movlw	141
 10130  001E86  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10131  001E88  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10132  001E8A  B4D8               	btfsc	status,2,c
 10133  001E8C  D334               	goto	u11610
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;TabelasUmidade.h: 258: else
 10137                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
 10138                           
 10139                           ; BSR set to: 0
 10140                           
 10141                           ; BSR set to: 0
 10142  001E8E  0E8E               	movlw	142
 10143  001E90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10144  001E92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10145  001E94  B4D8               	btfsc	status,2,c
 10146  001E96  D337               	goto	u11620
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;TabelasUmidade.h: 260: else
 10150                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
 10151                           
 10152                           ; BSR set to: 0
 10153                           
 10154                           ; BSR set to: 0
 10155  001E98  0E8F               	movlw	143
 10156  001E9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10157  001E9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10158  001E9E  B4D8               	btfsc	status,2,c
 10159  001EA0  D33A               	goto	u11630
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;TabelasUmidade.h: 262: else
 10163                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
 10164                           
 10165                           ; BSR set to: 0
 10166                           
 10167                           ; BSR set to: 0
 10168  001EA2  0E90               	movlw	144
 10169  001EA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10170  001EA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10171  001EA8  B4D8               	btfsc	status,2,c
 10172  001EAA  D33D               	goto	u11640
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;TabelasUmidade.h: 264: else
 10176                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
 10177                           
 10178                           ; BSR set to: 0
 10179                           
 10180                           ; BSR set to: 0
 10181  001EAC  0E91               	movlw	145
 10182  001EAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10183  001EB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10184  001EB2  B4D8               	btfsc	status,2,c
 10185  001EB4  D340               	goto	u11650
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;TabelasUmidade.h: 266: else
 10189                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
 10190                           
 10191                           ; BSR set to: 0
 10192                           
 10193                           ; BSR set to: 0
 10194  001EB6  0E92               	movlw	146
 10195  001EB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10196  001EBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10197  001EBC  B4D8               	btfsc	status,2,c
 10198  001EBE  D343               	goto	u11660
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;TabelasUmidade.h: 268: else
 10202                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
 10203                           
 10204                           ; BSR set to: 0
 10205                           
 10206                           ; BSR set to: 0
 10207  001EC0  0E93               	movlw	147
 10208  001EC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10209  001EC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10210  001EC6  B4D8               	btfsc	status,2,c
 10211  001EC8  D346               	goto	u11670
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;TabelasUmidade.h: 270: else
 10215                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
 10216                           
 10217                           ; BSR set to: 0
 10218                           
 10219                           ; BSR set to: 0
 10220  001ECA  0E94               	movlw	148
 10221  001ECC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10222  001ECE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10223  001ED0  B4D8               	btfsc	status,2,c
 10224  001ED2  D349               	goto	u11680
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;TabelasUmidade.h: 272: else
 10228                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
 10229                           
 10230                           ; BSR set to: 0
 10231                           
 10232                           ; BSR set to: 0
 10233  001ED4  0E95               	movlw	149
 10234  001ED6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10235  001ED8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10236  001EDA  B4D8               	btfsc	status,2,c
 10237  001EDC  D34C               	goto	u11690
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;TabelasUmidade.h: 274: else
 10241                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10242                           
 10243                           ; BSR set to: 0
 10244                           
 10245                           ; BSR set to: 0
 10246  001EDE  0E96               	movlw	150
 10247  001EE0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10248  001EE2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10249  001EE4  B4D8               	btfsc	status,2,c
 10250  001EE6  D34F               	goto	u11700
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;TabelasUmidade.h: 276: else
 10254                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10255                           
 10256                           ; BSR set to: 0
 10257                           
 10258                           ; BSR set to: 0
 10259  001EE8  0E97               	movlw	151
 10260  001EEA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10261  001EEC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10262  001EEE  B4D8               	btfsc	status,2,c
 10263  001EF0  D352               	goto	u11710
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;TabelasUmidade.h: 278: else
 10267                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10268                           
 10269                           ; BSR set to: 0
 10270                           
 10271                           ; BSR set to: 0
 10272  001EF2  0E98               	movlw	152
 10273  001EF4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10274  001EF6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10275  001EF8  B4D8               	btfsc	status,2,c
 10276  001EFA  D355               	goto	u11720
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;TabelasUmidade.h: 280: else
 10280                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10281                           
 10282                           ; BSR set to: 0
 10283                           
 10284                           ; BSR set to: 0
 10285  001EFC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10286  001EFE  D00E               	goto	l625
 10287  001F00  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10288  001F02  E104               	bnz	u10540
 10289  001F04  0E99               	movlw	153
 10290  001F06  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10291  001F08  A0D8               	btfss	status,0,c
 10292  001F0A  D008               	goto	l625
 10293  001F0C                     u10540:
 10294                           
 10295                           ; BSR set to: 0
 10296  001F0C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10297  001F0E  D35E               	goto	u11740
 10298  001F10  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10299  001F12  E104               	bnz	l7357
 10300  001F14  0E9D               	movlw	157
 10301  001F16  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10302  001F18  A0D8               	btfss	status,0,c
 10303  001F1A  D358               	goto	u11740
 10304  001F1C                     l625:
 10305  001F1C                     l7357:
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;TabelasUmidade.h: 282: else
 10309                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10310  001F1C  0E9D               	movlw	157
 10311  001F1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10312  001F20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10313  001F22  B4D8               	btfsc	status,2,c
 10314  001F24  D35B               	goto	u11750
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;TabelasUmidade.h: 284: else
 10318                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10319                           
 10320                           ; BSR set to: 0
 10321                           
 10322                           ; BSR set to: 0
 10323  001F26  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10324  001F28  D372               	goto	l630
 10325  001F2A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10326  001F2C  E101               	bnz	u10570
 10327  001F2E  D182               	goto	L26
 10328  001F30                     u10570:
 10329  001F30  D360               	goto	u11760
 10330  001F32                     
 10331                           ; BSR set to: 0
 10332                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10333                           
 10334                           ; BSR set to: 0
 10335  001F32  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10336  001F34  D006               	goto	u10580
 10337  001F36  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10338  001F38  E107               	bnz	l7369
 10339  001F3A  0E5B               	movlw	91
 10340  001F3C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10341  001F3E  B0D8               	btfsc	status,0,c
 10342  001F40  D003               	goto	l632
 10343  001F42                     u10580:
 10344                           
 10345                           ; BSR set to: 0
 10346  001F42  0E61               	movlw	97
 10347  001F44  EF7E  F00B         	goto	L24
 10348  001F48                     l632:
 10349  001F48                     l7369:
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;TabelasUmidade.h: 289: else
 10353                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10354  001F48  0E5B               	movlw	91
 10355  001F4A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10356  001F4C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10357  001F4E  A4D8               	btfss	status,2,c
 10358  001F50  D003               	goto	l634
 10359  001F52                     u10590:
 10360                           
 10361                           ; BSR set to: 0
 10362  001F52  0E60               	movlw	96
 10363  001F54  EF7E  F00B         	goto	L24
 10364  001F58                     l634:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;TabelasUmidade.h: 291: else
 10368                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10369                           
 10370                           ; BSR set to: 0
 10371  001F58  0E5C               	movlw	92
 10372  001F5A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10373  001F5C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10374  001F5E  B4D8               	btfsc	status,2,c
 10375  001F60  D005               	goto	u10610
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;TabelasUmidade.h: 293: else
 10379                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10380                           
 10381                           ; BSR set to: 0
 10382                           
 10383                           ; BSR set to: 0
 10384  001F62  0E5C               	movlw	92
 10385  001F64  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10386  001F66  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10387  001F68  A4D8               	btfss	status,2,c
 10388  001F6A  D003               	goto	l638
 10389  001F6C                     u10610:
 10390                           
 10391                           ; BSR set to: 0
 10392  001F6C  0E5F               	movlw	95
 10393  001F6E  EF7E  F00B         	goto	L24
 10394  001F72                     l638:
 10395                           
 10396                           ; BSR set to: 0
 10397                           ;TabelasUmidade.h: 295: else
 10398                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10399                           
 10400                           ; BSR set to: 0
 10401  001F72  0E5D               	movlw	93
 10402  001F74  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10403  001F76  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10404  001F78  B4D8               	btfsc	status,2,c
 10405  001F7A  EF70  F00B         	goto	u8850
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;TabelasUmidade.h: 297: else
 10409                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10410                           
 10411                           ; BSR set to: 0
 10412                           
 10413                           ; BSR set to: 0
 10414  001F7E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10415  001F80  D010               	goto	l642
 10416  001F82  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10417  001F84  E104               	bnz	u10630
 10418  001F86  0E5E               	movlw	94
 10419  001F88  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10420  001F8A  A0D8               	btfss	status,0,c
 10421  001F8C  D00A               	goto	l642
 10422  001F8E                     u10630:
 10423                           
 10424                           ; BSR set to: 0
 10425  001F8E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10426  001F90  EF69  F00B         	goto	u8840
 10427  001F94  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10428  001F96  E105               	bnz	l7391
 10429  001F98  0E65               	movlw	101
 10430  001F9A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10431  001F9C  A0D8               	btfss	status,0,c
 10432  001F9E  EF69  F00B         	goto	u8840
 10433  001FA2                     l642:
 10434  001FA2                     l7391:
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;TabelasUmidade.h: 299: else
 10438                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10439  001FA2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10440  001FA4  D011               	goto	l644
 10441  001FA6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10442  001FA8  E104               	bnz	u10650
 10443  001FAA  0E65               	movlw	101
 10444  001FAC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10445  001FAE  A0D8               	btfss	status,0,c
 10446  001FB0  D00B               	goto	l644
 10447  001FB2                     u10650:
 10448                           
 10449                           ; BSR set to: 0
 10450  001FB2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10451  001FB4  D006               	goto	u10660
 10452  001FB6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10453  001FB8  E107               	bnz	l7397
 10454  001FBA  0E67               	movlw	103
 10455  001FBC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10456  001FBE  B0D8               	btfsc	status,0,c
 10457  001FC0  D003               	goto	l644
 10458  001FC2                     u10660:
 10459                           
 10460                           ; BSR set to: 0
 10461  001FC2  0E53               	movlw	83
 10462  001FC4  EF7E  F00B         	goto	L24
 10463  001FC8                     l644:
 10464  001FC8                     l7397:
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;TabelasUmidade.h: 301: else
 10468                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10469  001FC8  0E67               	movlw	103
 10470  001FCA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10471  001FCC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10472  001FCE  A4D8               	btfss	status,2,c
 10473  001FD0  D003               	goto	l646
 10474                           
 10475                           ; BSR set to: 0
 10476  001FD2  0E51               	movlw	81
 10477  001FD4  EF7E  F00B         	goto	L24
 10478  001FD8                     l646:
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;TabelasUmidade.h: 303: else
 10482                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10483                           
 10484                           ; BSR set to: 0
 10485  001FD8  0E68               	movlw	104
 10486  001FDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10487  001FDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10488  001FDE  B4D8               	btfsc	status,2,c
 10489  001FE0  D17F               	goto	u11280
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;TabelasUmidade.h: 305: else
 10493                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10494                           
 10495                           ; BSR set to: 0
 10496                           
 10497                           ; BSR set to: 0
 10498  001FE2  0E69               	movlw	105
 10499  001FE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10500  001FE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10501  001FE8  B4D8               	btfsc	status,2,c
 10502  001FEA  D18A               	goto	u11300
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;TabelasUmidade.h: 307: else
 10506                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10507                           
 10508                           ; BSR set to: 0
 10509                           
 10510                           ; BSR set to: 0
 10511  001FEC  0E6A               	movlw	106
 10512  001FEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10513  001FF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10514  001FF2  B4D8               	btfsc	status,2,c
 10515  001FF4  D195               	goto	u11320
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;TabelasUmidade.h: 309: else
 10519                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10520                           
 10521                           ; BSR set to: 0
 10522                           
 10523                           ; BSR set to: 0
 10524  001FF6  0E6B               	movlw	107
 10525  001FF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10526  001FFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10527  001FFC  A4D8               	btfss	status,2,c
 10528  001FFE  D003               	goto	l654
 10529                           
 10530                           ; BSR set to: 0
 10531  002000  0E49               	movlw	73
 10532  002002  EF7E  F00B         	goto	L24
 10533  002006                     l654:
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;TabelasUmidade.h: 311: else
 10537                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10538                           
 10539                           ; BSR set to: 0
 10540  002006  0E6C               	movlw	108
 10541  002008  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10542  00200A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10543  00200C  A4D8               	btfss	status,2,c
 10544  00200E  D003               	goto	l656
 10545  002010                     u10720:
 10546                           
 10547                           ; BSR set to: 0
 10548  002010  0E48               	movlw	72
 10549  002012  EF7E  F00B         	goto	L24
 10550  002016                     l656:
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;TabelasUmidade.h: 313: else
 10554                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10555                           
 10556                           ; BSR set to: 0
 10557  002016  0E6D               	movlw	109
 10558  002018  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10559  00201A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10560  00201C  A4D8               	btfss	status,2,c
 10561  00201E  D003               	goto	l658
 10562                           
 10563                           ; BSR set to: 0
 10564  002020  0E47               	movlw	71
 10565  002022  EF7E  F00B         	goto	L24
 10566  002026                     l658:
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;TabelasUmidade.h: 315: else
 10570                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10571                           
 10572                           ; BSR set to: 0
 10573  002026  0E6E               	movlw	110
 10574  002028  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10575  00202A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10576  00202C  B4D8               	btfsc	status,2,c
 10577  00202E  D18B               	goto	u11340
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;TabelasUmidade.h: 317: else
 10581                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10582                           
 10583                           ; BSR set to: 0
 10584                           
 10585                           ; BSR set to: 0
 10586  002030  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10587  002032  D011               	goto	l662
 10588  002034  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10589  002036  E104               	bnz	u10750
 10590  002038  0E6F               	movlw	111
 10591  00203A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10592  00203C  A0D8               	btfss	status,0,c
 10593  00203E  D00B               	goto	l662
 10594  002040                     u10750:
 10595                           
 10596                           ; BSR set to: 0
 10597  002040  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10598  002042  D006               	goto	u10760
 10599  002044  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10600  002046  E107               	bnz	l7435
 10601  002048  0E73               	movlw	115
 10602  00204A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10603  00204C  B0D8               	btfsc	status,0,c
 10604  00204E  D003               	goto	l662
 10605  002050                     u10760:
 10606                           
 10607                           ; BSR set to: 0
 10608  002050  0E41               	movlw	65
 10609  002052  EF7E  F00B         	goto	L24
 10610  002056                     l662:
 10611  002056                     l7435:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;TabelasUmidade.h: 319: else
 10615                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10616  002056  0E73               	movlw	115
 10617  002058  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10618  00205A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10619  00205C  A4D8               	btfss	status,2,c
 10620  00205E  D003               	goto	l664
 10621                           
 10622                           ; BSR set to: 0
 10623  002060  0E3F               	movlw	63
 10624  002062  EF7E  F00B         	goto	L24
 10625  002066                     l664:
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;TabelasUmidade.h: 321: else
 10629                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10630                           
 10631                           ; BSR set to: 0
 10632  002066  0E74               	movlw	116
 10633  002068  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10634  00206A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10635  00206C  A4D8               	btfss	status,2,c
 10636  00206E  D003               	goto	l666
 10637                           
 10638                           ; BSR set to: 0
 10639  002070  0E3D               	movlw	61
 10640  002072  EF7E  F00B         	goto	L24
 10641  002076                     l666:
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;TabelasUmidade.h: 323: else
 10645                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10646                           
 10647                           ; BSR set to: 0
 10648  002076  0E75               	movlw	117
 10649  002078  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10650  00207A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10651  00207C  A4D8               	btfss	status,2,c
 10652  00207E  D003               	goto	l668
 10653                           
 10654                           ; BSR set to: 0
 10655  002080  0E3B               	movlw	59
 10656  002082  EF7E  F00B         	goto	L24
 10657  002086                     l668:
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;TabelasUmidade.h: 325: else
 10661                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10662                           
 10663                           ; BSR set to: 0
 10664  002086  0E76               	movlw	118
 10665  002088  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10666  00208A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10667  00208C  A4D8               	btfss	status,2,c
 10668  00208E  D003               	goto	l670
 10669                           
 10670                           ; BSR set to: 0
 10671  002090  0E39               	movlw	57
 10672  002092  EF7E  F00B         	goto	L24
 10673  002096                     l670:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;TabelasUmidade.h: 327: else
 10677                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10678                           
 10679                           ; BSR set to: 0
 10680  002096  0E77               	movlw	119
 10681  002098  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10682  00209A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10683  00209C  B4D8               	btfsc	status,2,c
 10684  00209E  D193               	goto	u11420
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;TabelasUmidade.h: 329: else
 10688                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10689                           
 10690                           ; BSR set to: 0
 10691                           
 10692                           ; BSR set to: 0
 10693  0020A0  0E78               	movlw	120
 10694  0020A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10695  0020A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10696  0020A6  B4D8               	btfsc	status,2,c
 10697  0020A8  D196               	goto	u11430
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;TabelasUmidade.h: 331: else
 10701                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10702                           
 10703                           ; BSR set to: 0
 10704                           
 10705                           ; BSR set to: 0
 10706  0020AA  0E79               	movlw	121
 10707  0020AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10708  0020AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10709  0020B0  A4D8               	btfss	status,2,c
 10710  0020B2  D003               	goto	l676
 10711                           
 10712                           ; BSR set to: 0
 10713  0020B4  0E33               	movlw	51
 10714  0020B6  EF7E  F00B         	goto	L24
 10715  0020BA                     l676:
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;TabelasUmidade.h: 333: else
 10719                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10720                           
 10721                           ; BSR set to: 0
 10722  0020BA  0E7A               	movlw	122
 10723  0020BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10724  0020BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10725  0020C0  B4D8               	btfsc	status,2,c
 10726  0020C2  D199               	goto	u11450
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;TabelasUmidade.h: 335: else
 10730                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10731                           
 10732                           ; BSR set to: 0
 10733                           
 10734                           ; BSR set to: 0
 10735  0020C4  0E7B               	movlw	123
 10736  0020C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10737  0020C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10738  0020CA  A4D8               	btfss	status,2,c
 10739  0020CC  D003               	goto	l680
 10740  0020CE                     u10850:
 10741                           
 10742                           ; BSR set to: 0
 10743  0020CE  0E30               	movlw	48
 10744  0020D0  EF7E  F00B         	goto	L24
 10745  0020D4                     l680:
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;TabelasUmidade.h: 337: else
 10749                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10750                           
 10751                           ; BSR set to: 0
 10752  0020D4  0E7C               	movlw	124
 10753  0020D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10754  0020D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10755  0020DA  B4D8               	btfsc	status,2,c
 10756  0020DC  D19C               	goto	u11470
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;TabelasUmidade.h: 339: else
 10760                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10761                           
 10762                           ; BSR set to: 0
 10763                           
 10764                           ; BSR set to: 0
 10765  0020DE  0E7D               	movlw	125
 10766  0020E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10767  0020E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10768  0020E4  B4D8               	btfsc	status,2,c
 10769  0020E6  D19F               	goto	u11480
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;TabelasUmidade.h: 341: else
 10773                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10774                           
 10775                           ; BSR set to: 0
 10776                           
 10777                           ; BSR set to: 0
 10778  0020E8  0E7E               	movlw	126
 10779  0020EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10780  0020EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10781  0020EE  A4D8               	btfss	status,2,c
 10782  0020F0  D003               	goto	l686
 10783  0020F2                     u10880:
 10784                           
 10785                           ; BSR set to: 0
 10786  0020F2  0E2C               	movlw	44
 10787  0020F4  EF7E  F00B         	goto	L24
 10788  0020F8                     l686:
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;TabelasUmidade.h: 343: else
 10792                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10793                           
 10794                           ; BSR set to: 0
 10795  0020F8  0E7F               	movlw	127
 10796  0020FA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10797  0020FC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10798  0020FE  A4D8               	btfss	status,2,c
 10799  002100  D003               	goto	l688
 10800  002102                     u10890:
 10801                           
 10802                           ; BSR set to: 0
 10803  002102  0E2A               	movlw	42
 10804  002104  EF7E  F00B         	goto	L24
 10805  002108                     l688:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;TabelasUmidade.h: 345: else
 10809                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10810                           
 10811                           ; BSR set to: 0
 10812  002108  0E80               	movlw	128
 10813  00210A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10814  00210C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10815  00210E  B4D8               	btfsc	status,2,c
 10816  002110  D19A               	goto	u11500
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;TabelasUmidade.h: 347: else
 10820                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10821                           
 10822                           ; BSR set to: 0
 10823                           
 10824                           ; BSR set to: 0
 10825  002112  0E81               	movlw	129
 10826  002114  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10827  002116  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10828  002118  B4D8               	btfsc	status,2,c
 10829  00211A  D195               	goto	u11500
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;TabelasUmidade.h: 349: else
 10833                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10834                           
 10835                           ; BSR set to: 0
 10836                           
 10837                           ; BSR set to: 0
 10838  00211C  0E82               	movlw	130
 10839  00211E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10840  002120  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10841  002122  B4D8               	btfsc	status,2,c
 10842  002124  D198               	goto	u11510
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;TabelasUmidade.h: 351: else
 10846                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10847                           
 10848                           ; BSR set to: 0
 10849                           
 10850                           ; BSR set to: 0
 10851  002126  0E83               	movlw	131
 10852  002128  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10853  00212A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10854  00212C  B4D8               	btfsc	status,2,c
 10855  00212E  D193               	goto	u11510
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;TabelasUmidade.h: 353: else
 10859                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10860                           
 10861                           ; BSR set to: 0
 10862                           
 10863                           ; BSR set to: 0
 10864  002130  0E84               	movlw	132
 10865  002132  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10866  002134  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10867  002136  B4D8               	btfsc	status,2,c
 10868  002138  D196               	goto	u11520
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;TabelasUmidade.h: 355: else
 10872                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10873                           
 10874                           ; BSR set to: 0
 10875                           
 10876                           ; BSR set to: 0
 10877  00213A  0E85               	movlw	133
 10878  00213C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10879  00213E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10880  002140  B4D8               	btfsc	status,2,c
 10881  002142  D191               	goto	u11520
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;TabelasUmidade.h: 357: else
 10885                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10886                           
 10887                           ; BSR set to: 0
 10888                           
 10889                           ; BSR set to: 0
 10890  002144  0E86               	movlw	134
 10891  002146  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10892  002148  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10893  00214A  B4D8               	btfsc	status,2,c
 10894  00214C  D19C               	goto	u11540
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;TabelasUmidade.h: 359: else
 10898                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10899                           
 10900                           ; BSR set to: 0
 10901                           
 10902                           ; BSR set to: 0
 10903  00214E  0E87               	movlw	135
 10904  002150  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10905  002152  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10906  002154  B4D8               	btfsc	status,2,c
 10907  002156  D19F               	goto	u11550
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;TabelasUmidade.h: 361: else
 10911                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10912                           
 10913                           ; BSR set to: 0
 10914                           
 10915                           ; BSR set to: 0
 10916  002158  0E88               	movlw	136
 10917  00215A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10918  00215C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10919  00215E  B4D8               	btfsc	status,2,c
 10920  002160  D1A2               	goto	u11560
 10921                           
 10922                           ; BSR set to: 0
 10923                           ;TabelasUmidade.h: 363: else
 10924                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10925                           
 10926                           ; BSR set to: 0
 10927                           
 10928                           ; BSR set to: 0
 10929  002162  0E89               	movlw	137
 10930  002164  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10931  002166  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10932  002168  B4D8               	btfsc	status,2,c
 10933  00216A  D1A5               	goto	u11570
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;TabelasUmidade.h: 365: else
 10937                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10938                           
 10939                           ; BSR set to: 0
 10940                           
 10941                           ; BSR set to: 0
 10942  00216C  0E8A               	movlw	138
 10943  00216E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10944  002170  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10945  002172  B4D8               	btfsc	status,2,c
 10946  002174  D1A8               	goto	u11580
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;TabelasUmidade.h: 367: else
 10950                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10951                           
 10952                           ; BSR set to: 0
 10953                           
 10954                           ; BSR set to: 0
 10955  002176  0E8B               	movlw	139
 10956  002178  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10957  00217A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10958  00217C  B4D8               	btfsc	status,2,c
 10959  00217E  D1AB               	goto	u11590
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;TabelasUmidade.h: 369: else
 10963                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10964                           
 10965                           ; BSR set to: 0
 10966                           
 10967                           ; BSR set to: 0
 10968  002180  0E8C               	movlw	140
 10969  002182  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10970  002184  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10971  002186  B4D8               	btfsc	status,2,c
 10972  002188  D1AE               	goto	u11600
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;TabelasUmidade.h: 371: else
 10976                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10977                           
 10978                           ; BSR set to: 0
 10979                           
 10980                           ; BSR set to: 0
 10981  00218A  0E8D               	movlw	141
 10982  00218C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10983  00218E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10984  002190  B4D8               	btfsc	status,2,c
 10985  002192  D1B1               	goto	u11610
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;TabelasUmidade.h: 373: else
 10989                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10990                           
 10991                           ; BSR set to: 0
 10992                           
 10993                           ; BSR set to: 0
 10994  002194  0E8E               	movlw	142
 10995  002196  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10996  002198  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10997  00219A  B4D8               	btfsc	status,2,c
 10998  00219C  D1B4               	goto	u11620
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;TabelasUmidade.h: 375: else
 11002                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 11003                           
 11004                           ; BSR set to: 0
 11005                           
 11006                           ; BSR set to: 0
 11007  00219E  0E8F               	movlw	143
 11008  0021A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11009  0021A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11010  0021A4  B4D8               	btfsc	status,2,c
 11011  0021A6  D1B7               	goto	u11630
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;TabelasUmidade.h: 377: else
 11015                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 11016                           
 11017                           ; BSR set to: 0
 11018                           
 11019                           ; BSR set to: 0
 11020  0021A8  0E90               	movlw	144
 11021  0021AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11022  0021AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11023  0021AE  B4D8               	btfsc	status,2,c
 11024  0021B0  D1BA               	goto	u11640
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;TabelasUmidade.h: 379: else
 11028                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 11029                           
 11030                           ; BSR set to: 0
 11031                           
 11032                           ; BSR set to: 0
 11033  0021B2  0E91               	movlw	145
 11034  0021B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11035  0021B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11036  0021B8  B4D8               	btfsc	status,2,c
 11037  0021BA  D1BD               	goto	u11650
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;TabelasUmidade.h: 381: else
 11041                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 11042                           
 11043                           ; BSR set to: 0
 11044                           
 11045                           ; BSR set to: 0
 11046  0021BC  0E92               	movlw	146
 11047  0021BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11048  0021C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11049  0021C2  B4D8               	btfsc	status,2,c
 11050  0021C4  D1C0               	goto	u11660
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;TabelasUmidade.h: 383: else
 11054                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 11055                           
 11056                           ; BSR set to: 0
 11057                           
 11058                           ; BSR set to: 0
 11059  0021C6  0E93               	movlw	147
 11060  0021C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11061  0021CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11062  0021CC  B4D8               	btfsc	status,2,c
 11063  0021CE  D1C3               	goto	u11670
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;TabelasUmidade.h: 385: else
 11067                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 11068                           
 11069                           ; BSR set to: 0
 11070                           
 11071                           ; BSR set to: 0
 11072  0021D0  0E94               	movlw	148
 11073  0021D2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11074  0021D4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11075  0021D6  B4D8               	btfsc	status,2,c
 11076  0021D8  D1C6               	goto	u11680
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;TabelasUmidade.h: 387: else
 11080                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 11081                           
 11082                           ; BSR set to: 0
 11083                           
 11084                           ; BSR set to: 0
 11085  0021DA  0E95               	movlw	149
 11086  0021DC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11087  0021DE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11088  0021E0  B4D8               	btfsc	status,2,c
 11089  0021E2  D1C9               	goto	u11690
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;TabelasUmidade.h: 389: else
 11093                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 11094                           
 11095                           ; BSR set to: 0
 11096                           
 11097                           ; BSR set to: 0
 11098  0021E4  0E96               	movlw	150
 11099  0021E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11100  0021E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11101  0021EA  B4D8               	btfsc	status,2,c
 11102  0021EC  D1CC               	goto	u11700
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;TabelasUmidade.h: 391: else
 11106                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 11107                           
 11108                           ; BSR set to: 0
 11109                           
 11110                           ; BSR set to: 0
 11111  0021EE  0E97               	movlw	151
 11112  0021F0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11113  0021F2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11114  0021F4  B4D8               	btfsc	status,2,c
 11115  0021F6  D1CF               	goto	u11710
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;TabelasUmidade.h: 393: else
 11119                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 11120                           
 11121                           ; BSR set to: 0
 11122                           
 11123                           ; BSR set to: 0
 11124  0021F8  0E98               	movlw	152
 11125  0021FA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11126  0021FC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11127  0021FE  B4D8               	btfsc	status,2,c
 11128  002200  D1D2               	goto	u11720
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;TabelasUmidade.h: 395: else
 11132                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11133                           
 11134                           ; BSR set to: 0
 11135                           
 11136                           ; BSR set to: 0
 11137  002202  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11138  002204  D00E               	goto	l740
 11139  002206  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11140  002208  E104               	bnz	u11150
 11141  00220A  0E99               	movlw	153
 11142  00220C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11143  00220E  A0D8               	btfss	status,0,c
 11144  002210  D008               	goto	l740
 11145  002212                     u11150:
 11146                           
 11147                           ; BSR set to: 0
 11148  002212  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11149  002214  D1DB               	goto	u11740
 11150  002216  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11151  002218  E104               	bnz	l7593
 11152  00221A  0E9D               	movlw	157
 11153  00221C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11154  00221E  A0D8               	btfss	status,0,c
 11155  002220  D1D5               	goto	u11740
 11156  002222                     l740:
 11157  002222                     l7593:
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;TabelasUmidade.h: 397: else
 11161                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 11162  002222  0E9D               	movlw	157
 11163  002224  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11164  002226  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11165  002228  B4D8               	btfsc	status,2,c
 11166  00222A  D1D8               	goto	u11750
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;TabelasUmidade.h: 399: else
 11170                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 11171                           
 11172                           ; BSR set to: 0
 11173                           
 11174                           ; BSR set to: 0
 11175  00222C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11176  00222E  D1EF               	goto	l630
 11177  002230  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11178  002232  E104               	bnz	u11180
 11179  002234                     L26:
 11180  002234  0E9E               	movlw	158
 11181  002236  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11182  002238  A0D8               	btfss	status,0,c
 11183  00223A  D1E9               	goto	l630
 11184  00223C                     u11180:
 11185  00223C  D1DA               	goto	u11760
 11186  00223E                     
 11187                           ; BSR set to: 0
 11188                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 11189                           
 11190                           ; BSR set to: 0
 11191  00223E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11192  002240  D006               	goto	u11190
 11193  002242  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11194  002244  E107               	bnz	l7605
 11195  002246  0E5D               	movlw	93
 11196  002248  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11197  00224A  B0D8               	btfsc	status,0,c
 11198  00224C  D003               	goto	l746
 11199  00224E                     u11190:
 11200                           
 11201                           ; BSR set to: 0
 11202  00224E  0E64               	movlw	100
 11203  002250  EF7E  F00B         	goto	L24
 11204  002254                     l746:
 11205  002254                     l7605:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;TabelasUmidade.h: 404: else
 11209                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 11210  002254  0E5D               	movlw	93
 11211  002256  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11212  002258  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11213  00225A  A4D8               	btfss	status,2,c
 11214  00225C  D003               	goto	l748
 11215  00225E                     u11200:
 11216                           
 11217                           ; BSR set to: 0
 11218  00225E  0E63               	movlw	99
 11219  002260  EF7E  F00B         	goto	L24
 11220  002264                     l748:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;TabelasUmidade.h: 406: else
 11224                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 11225                           
 11226                           ; BSR set to: 0
 11227  002264  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11228  002266  D011               	goto	l750
 11229  002268  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11230  00226A  E104               	bnz	u11210
 11231  00226C  0E5E               	movlw	94
 11232  00226E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11233  002270  A0D8               	btfss	status,0,c
 11234  002272  D00B               	goto	l750
 11235  002274                     u11210:
 11236                           
 11237                           ; BSR set to: 0
 11238  002274  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11239  002276  D006               	goto	u11220
 11240  002278  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11241  00227A  E107               	bnz	l7615
 11242  00227C  0E65               	movlw	101
 11243  00227E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11244  002280  B0D8               	btfsc	status,0,c
 11245  002282  D003               	goto	l750
 11246  002284                     u11220:
 11247                           
 11248                           ; BSR set to: 0
 11249  002284  0E62               	movlw	98
 11250  002286  EF7E  F00B         	goto	L24
 11251  00228A                     l750:
 11252  00228A                     l7615:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;TabelasUmidade.h: 408: else
 11256                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11257  00228A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11258  00228C  D010               	goto	l752
 11259  00228E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11260  002290  E104               	bnz	u11230
 11261  002292  0E65               	movlw	101
 11262  002294  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11263  002296  A0D8               	btfss	status,0,c
 11264  002298  D00A               	goto	l752
 11265  00229A                     u11230:
 11266                           
 11267                           ; BSR set to: 0
 11268  00229A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11269  00229C  EF46  F00B         	goto	u8790
 11270  0022A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11271  0022A2  E105               	bnz	l7621
 11272  0022A4  0E67               	movlw	103
 11273  0022A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11274  0022A8  A0D8               	btfss	status,0,c
 11275  0022AA  EF46  F00B         	goto	u8790
 11276  0022AE                     l752:
 11277  0022AE                     l7621:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ;TabelasUmidade.h: 410: else
 11281                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11282  0022AE  0E67               	movlw	103
 11283  0022B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11284  0022B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11285  0022B4  B4D8               	btfsc	status,2,c
 11286  0022B6  EF38  F00B         	goto	u8770
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;TabelasUmidade.h: 412: else
 11290                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11291                           
 11292                           ; BSR set to: 0
 11293                           
 11294                           ; BSR set to: 0
 11295  0022BA  0E68               	movlw	104
 11296  0022BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11297  0022BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11298  0022C0  B4D8               	btfsc	status,2,c
 11299  0022C2  EF31  F00B         	goto	u8760
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;TabelasUmidade.h: 414: else
 11303                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11304                           
 11305                           ; BSR set to: 0
 11306                           
 11307                           ; BSR set to: 0
 11308  0022C6  0E69               	movlw	105
 11309  0022C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11310  0022CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11311  0022CC  A4D8               	btfss	status,2,c
 11312  0022CE  D003               	goto	l758
 11313                           
 11314                           ; BSR set to: 0
 11315  0022D0  0E52               	movlw	82
 11316  0022D2  EF7E  F00B         	goto	L24
 11317  0022D6                     l758:
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;TabelasUmidade.h: 416: else
 11321                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11322                           
 11323                           ; BSR set to: 0
 11324  0022D6  0E6A               	movlw	106
 11325  0022D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11326  0022DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11327  0022DC  A4D8               	btfss	status,2,c
 11328  0022DE  D003               	goto	l760
 11329  0022E0                     u11280:
 11330                           
 11331                           ; BSR set to: 0
 11332  0022E0  0E50               	movlw	80
 11333  0022E2  EF7E  F00B         	goto	L24
 11334  0022E6                     l760:
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;TabelasUmidade.h: 418: else
 11338                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11339                           
 11340                           ; BSR set to: 0
 11341  0022E6  0E6B               	movlw	107
 11342  0022E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11343  0022EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11344  0022EC  A4D8               	btfss	status,2,c
 11345  0022EE  D003               	goto	l762
 11346  0022F0                     u11290:
 11347                           
 11348                           ; BSR set to: 0
 11349  0022F0  0E4E               	movlw	78
 11350  0022F2  EF7E  F00B         	goto	L24
 11351  0022F6                     l762:
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;TabelasUmidade.h: 420: else
 11355                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11356                           
 11357                           ; BSR set to: 0
 11358  0022F6  0E6C               	movlw	108
 11359  0022F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11360  0022FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11361  0022FC  A4D8               	btfss	status,2,c
 11362  0022FE  D003               	goto	l764
 11363  002300                     u11300:
 11364                           
 11365                           ; BSR set to: 0
 11366  002300  0E4D               	movlw	77
 11367  002302  EF7E  F00B         	goto	L24
 11368  002306                     l764:
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;TabelasUmidade.h: 422: else
 11372                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11373                           
 11374                           ; BSR set to: 0
 11375  002306  0E6D               	movlw	109
 11376  002308  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11377  00230A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11378  00230C  A4D8               	btfss	status,2,c
 11379  00230E  D003               	goto	l766
 11380  002310                     u11310:
 11381                           
 11382                           ; BSR set to: 0
 11383  002310  0E4C               	movlw	76
 11384  002312  EF7E  F00B         	goto	L24
 11385  002316                     l766:
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;TabelasUmidade.h: 424: else
 11389                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11390                           
 11391                           ; BSR set to: 0
 11392  002316  0E6E               	movlw	110
 11393  002318  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11394  00231A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11395  00231C  A4D8               	btfss	status,2,c
 11396  00231E  D003               	goto	l768
 11397  002320                     u11320:
 11398                           
 11399                           ; BSR set to: 0
 11400  002320  0E4B               	movlw	75
 11401  002322  EF7E  F00B         	goto	L24
 11402  002326                     l768:
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;TabelasUmidade.h: 426: else
 11406                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11407                           
 11408                           ; BSR set to: 0
 11409  002326  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11410  002328  D011               	goto	l770
 11411  00232A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11412  00232C  E104               	bnz	u11330
 11413  00232E  0E6F               	movlw	111
 11414  002330  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11415  002332  A0D8               	btfss	status,0,c
 11416  002334  D00B               	goto	l770
 11417  002336                     u11330:
 11418                           
 11419                           ; BSR set to: 0
 11420  002336  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11421  002338  D006               	goto	u11340
 11422  00233A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11423  00233C  E107               	bnz	l7659
 11424  00233E  0E73               	movlw	115
 11425  002340  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11426  002342  B0D8               	btfsc	status,0,c
 11427  002344  D003               	goto	l770
 11428  002346                     u11340:
 11429                           
 11430                           ; BSR set to: 0
 11431  002346  0E46               	movlw	70
 11432  002348  EF7E  F00B         	goto	L24
 11433  00234C                     l770:
 11434  00234C                     l7659:
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;TabelasUmidade.h: 428: else
 11438                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11439  00234C  0E73               	movlw	115
 11440  00234E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11441  002350  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11442  002352  A4D8               	btfss	status,2,c
 11443  002354  D003               	goto	l772
 11444  002356                     u11350:
 11445                           
 11446                           ; BSR set to: 0
 11447  002356  0E44               	movlw	68
 11448  002358  EF7E  F00B         	goto	L24
 11449  00235C                     l772:
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;TabelasUmidade.h: 430: else
 11453                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11454                           
 11455                           ; BSR set to: 0
 11456  00235C  0E74               	movlw	116
 11457  00235E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11458  002360  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11459  002362  A4D8               	btfss	status,2,c
 11460  002364  D003               	goto	l774
 11461  002366                     u11360:
 11462                           
 11463                           ; BSR set to: 0
 11464  002366  0E42               	movlw	66
 11465  002368  EF7E  F00B         	goto	L24
 11466  00236C                     l774:
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;TabelasUmidade.h: 432: else
 11470                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11471                           
 11472                           ; BSR set to: 0
 11473  00236C  0E75               	movlw	117
 11474  00236E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11475  002370  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11476  002372  A4D8               	btfss	status,2,c
 11477  002374  D003               	goto	l776
 11478                           
 11479                           ; BSR set to: 0
 11480  002376  0E40               	movlw	64
 11481  002378  EF7E  F00B         	goto	L24
 11482  00237C                     l776:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;TabelasUmidade.h: 434: else
 11486                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11487                           
 11488                           ; BSR set to: 0
 11489  00237C  0E76               	movlw	118
 11490  00237E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11491  002380  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11492  002382  A4D8               	btfss	status,2,c
 11493  002384  D003               	goto	l778
 11494                           
 11495                           ; BSR set to: 0
 11496  002386  0E3E               	movlw	62
 11497  002388  EF7E  F00B         	goto	L24
 11498  00238C                     l778:
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;TabelasUmidade.h: 436: else
 11502                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11503                           
 11504                           ; BSR set to: 0
 11505  00238C  0E77               	movlw	119
 11506  00238E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11507  002390  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11508  002392  A4D8               	btfss	status,2,c
 11509  002394  D003               	goto	l780
 11510  002396                     u11390:
 11511                           
 11512                           ; BSR set to: 0
 11513  002396  0E3C               	movlw	60
 11514  002398  EF7E  F00B         	goto	L24
 11515  00239C                     l780:
 11516                           
 11517                           ; BSR set to: 0
 11518                           ;TabelasUmidade.h: 438: else
 11519                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11520                           
 11521                           ; BSR set to: 0
 11522  00239C  0E78               	movlw	120
 11523  00239E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11524  0023A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11525  0023A2  A4D8               	btfss	status,2,c
 11526  0023A4  D003               	goto	l782
 11527  0023A6                     u11400:
 11528                           
 11529                           ; BSR set to: 0
 11530  0023A6  0E3A               	movlw	58
 11531  0023A8  EF7E  F00B         	goto	L24
 11532  0023AC                     l782:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;TabelasUmidade.h: 440: else
 11536                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11537                           
 11538                           ; BSR set to: 0
 11539  0023AC  0E79               	movlw	121
 11540  0023AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11541  0023B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11542  0023B2  A4D8               	btfss	status,2,c
 11543  0023B4  D003               	goto	l784
 11544  0023B6                     u11410:
 11545                           
 11546                           ; BSR set to: 0
 11547  0023B6  0E38               	movlw	56
 11548  0023B8  EF7E  F00B         	goto	L24
 11549  0023BC                     l784:
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;TabelasUmidade.h: 442: else
 11553                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11554                           
 11555                           ; BSR set to: 0
 11556  0023BC  0E7A               	movlw	122
 11557  0023BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11558  0023C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11559  0023C2  A4D8               	btfss	status,2,c
 11560  0023C4  D003               	goto	l786
 11561  0023C6                     u11420:
 11562                           
 11563                           ; BSR set to: 0
 11564  0023C6  0E37               	movlw	55
 11565  0023C8  EF7E  F00B         	goto	L24
 11566  0023CC                     l786:
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;TabelasUmidade.h: 444: else
 11570                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11571                           
 11572                           ; BSR set to: 0
 11573  0023CC  0E7B               	movlw	123
 11574  0023CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11575  0023D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11576  0023D2  A4D8               	btfss	status,2,c
 11577  0023D4  D003               	goto	l788
 11578  0023D6                     u11430:
 11579                           
 11580                           ; BSR set to: 0
 11581  0023D6  0E35               	movlw	53
 11582  0023D8  EF7E  F00B         	goto	L24
 11583  0023DC                     l788:
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;TabelasUmidade.h: 446: else
 11587                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11588                           
 11589                           ; BSR set to: 0
 11590  0023DC  0E7C               	movlw	124
 11591  0023DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11592  0023E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11593  0023E2  A4D8               	btfss	status,2,c
 11594  0023E4  D003               	goto	l790
 11595  0023E6                     u11440:
 11596                           
 11597                           ; BSR set to: 0
 11598  0023E6  0E34               	movlw	52
 11599  0023E8  EF7E  F00B         	goto	L24
 11600  0023EC                     l790:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;TabelasUmidade.h: 448: else
 11604                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11605                           
 11606                           ; BSR set to: 0
 11607  0023EC  0E7D               	movlw	125
 11608  0023EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11609  0023F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11610  0023F2  A4D8               	btfss	status,2,c
 11611  0023F4  D003               	goto	l792
 11612  0023F6                     u11450:
 11613                           
 11614                           ; BSR set to: 0
 11615  0023F6  0E32               	movlw	50
 11616  0023F8  EF7E  F00B         	goto	L24
 11617  0023FC                     l792:
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;TabelasUmidade.h: 450: else
 11621                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11622                           
 11623                           ; BSR set to: 0
 11624  0023FC  0E7E               	movlw	126
 11625  0023FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11626  002400  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11627  002402  A4D8               	btfss	status,2,c
 11628  002404  D003               	goto	l794
 11629                           
 11630                           ; BSR set to: 0
 11631  002406  0E31               	movlw	49
 11632  002408  EF7E  F00B         	goto	L24
 11633  00240C                     l794:
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;TabelasUmidade.h: 452: else
 11637                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11638                           
 11639                           ; BSR set to: 0
 11640  00240C  0E7F               	movlw	127
 11641  00240E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11642  002410  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11643  002412  A4D8               	btfss	status,2,c
 11644  002414  D003               	goto	l796
 11645  002416                     u11470:
 11646                           
 11647                           ; BSR set to: 0
 11648  002416  0E2F               	movlw	47
 11649  002418  EF7E  F00B         	goto	L24
 11650  00241C                     l796:
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;TabelasUmidade.h: 454: else
 11654                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11655                           
 11656                           ; BSR set to: 0
 11657  00241C  0E80               	movlw	128
 11658  00241E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11659  002420  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11660  002422  A4D8               	btfss	status,2,c
 11661  002424  D003               	goto	l798
 11662  002426                     u11480:
 11663                           
 11664                           ; BSR set to: 0
 11665  002426  0E2D               	movlw	45
 11666  002428  EF7E  F00B         	goto	L24
 11667  00242C                     l798:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;TabelasUmidade.h: 456: else
 11671                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11672                           
 11673                           ; BSR set to: 0
 11674  00242C  0E81               	movlw	129
 11675  00242E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11676  002430  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11677  002432  A4D8               	btfss	status,2,c
 11678  002434  D003               	goto	l800
 11679  002436                     u11490:
 11680                           
 11681                           ; BSR set to: 0
 11682  002436  0E2B               	movlw	43
 11683  002438  EF7E  F00B         	goto	L24
 11684  00243C                     l800:
 11685                           
 11686                           ; BSR set to: 0
 11687                           ;TabelasUmidade.h: 458: else
 11688                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11689                           
 11690                           ; BSR set to: 0
 11691  00243C  0E82               	movlw	130
 11692  00243E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11693  002440  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11694  002442  A4D8               	btfss	status,2,c
 11695  002444  D003               	goto	l802
 11696  002446                     u11500:
 11697                           
 11698                           ; BSR set to: 0
 11699  002446  0E29               	movlw	41
 11700  002448  EF7E  F00B         	goto	L24
 11701  00244C                     l802:
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;TabelasUmidade.h: 460: else
 11705                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11706                           
 11707                           ; BSR set to: 0
 11708  00244C  0E83               	movlw	131
 11709  00244E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11710  002450  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11711  002452  A4D8               	btfss	status,2,c
 11712  002454  D003               	goto	l804
 11713  002456                     u11510:
 11714                           
 11715                           ; BSR set to: 0
 11716  002456  0E28               	movlw	40
 11717  002458  EF7E  F00B         	goto	L24
 11718  00245C                     l804:
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;TabelasUmidade.h: 462: else
 11722                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11723                           
 11724                           ; BSR set to: 0
 11725  00245C  0E84               	movlw	132
 11726  00245E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11727  002460  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11728  002462  A4D8               	btfss	status,2,c
 11729  002464  D003               	goto	l806
 11730  002466                     u11520:
 11731                           
 11732                           ; BSR set to: 0
 11733  002466  0E27               	movlw	39
 11734  002468  EF7E  F00B         	goto	L24
 11735  00246C                     l806:
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;TabelasUmidade.h: 464: else
 11739                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11740                           
 11741                           ; BSR set to: 0
 11742  00246C  0E85               	movlw	133
 11743  00246E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11744  002470  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11745  002472  A4D8               	btfss	status,2,c
 11746  002474  D003               	goto	l808
 11747  002476                     u11530:
 11748                           
 11749                           ; BSR set to: 0
 11750  002476  0E25               	movlw	37
 11751  002478  EF7E  F00B         	goto	L24
 11752  00247C                     l808:
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;TabelasUmidade.h: 466: else
 11756                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11757                           
 11758                           ; BSR set to: 0
 11759  00247C  0E86               	movlw	134
 11760  00247E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11761  002480  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11762  002482  A4D8               	btfss	status,2,c
 11763  002484  D003               	goto	l810
 11764  002486                     u11540:
 11765                           
 11766                           ; BSR set to: 0
 11767  002486  0E24               	movlw	36
 11768  002488  EF7E  F00B         	goto	L24
 11769  00248C                     l810:
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;TabelasUmidade.h: 468: else
 11773                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11774                           
 11775                           ; BSR set to: 0
 11776  00248C  0E87               	movlw	135
 11777  00248E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11778  002490  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11779  002492  A4D8               	btfss	status,2,c
 11780  002494  D003               	goto	l812
 11781  002496                     u11550:
 11782                           
 11783                           ; BSR set to: 0
 11784  002496  0E23               	movlw	35
 11785  002498  EF7E  F00B         	goto	L24
 11786  00249C                     l812:
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;TabelasUmidade.h: 470: else
 11790                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11791                           
 11792                           ; BSR set to: 0
 11793  00249C  0E88               	movlw	136
 11794  00249E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11795  0024A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11796  0024A2  A4D8               	btfss	status,2,c
 11797  0024A4  D003               	goto	l814
 11798  0024A6                     u11560:
 11799                           
 11800                           ; BSR set to: 0
 11801  0024A6  0E22               	movlw	34
 11802  0024A8  EF7E  F00B         	goto	L24
 11803  0024AC                     l814:
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;TabelasUmidade.h: 472: else
 11807                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11808                           
 11809                           ; BSR set to: 0
 11810  0024AC  0E89               	movlw	137
 11811  0024AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11812  0024B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11813  0024B2  A4D8               	btfss	status,2,c
 11814  0024B4  D003               	goto	l816
 11815  0024B6                     u11570:
 11816                           
 11817                           ; BSR set to: 0
 11818  0024B6  0E21               	movlw	33
 11819  0024B8  EF7E  F00B         	goto	L24
 11820  0024BC                     l816:
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;TabelasUmidade.h: 474: else
 11824                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11825                           
 11826                           ; BSR set to: 0
 11827  0024BC  0E8A               	movlw	138
 11828  0024BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11829  0024C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11830  0024C2  A4D8               	btfss	status,2,c
 11831  0024C4  D003               	goto	l818
 11832  0024C6                     u11580:
 11833                           
 11834                           ; BSR set to: 0
 11835  0024C6  0E20               	movlw	32
 11836  0024C8  EF7E  F00B         	goto	L24
 11837  0024CC                     l818:
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;TabelasUmidade.h: 476: else
 11841                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11842                           
 11843                           ; BSR set to: 0
 11844  0024CC  0E8B               	movlw	139
 11845  0024CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11846  0024D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11847  0024D2  A4D8               	btfss	status,2,c
 11848  0024D4  D003               	goto	l820
 11849  0024D6                     u11590:
 11850                           
 11851                           ; BSR set to: 0
 11852  0024D6  0E1F               	movlw	31
 11853  0024D8  EF7E  F00B         	goto	L24
 11854  0024DC                     l820:
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;TabelasUmidade.h: 478: else
 11858                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11859                           
 11860                           ; BSR set to: 0
 11861  0024DC  0E8C               	movlw	140
 11862  0024DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11863  0024E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11864  0024E2  A4D8               	btfss	status,2,c
 11865  0024E4  D003               	goto	l822
 11866  0024E6                     u11600:
 11867                           
 11868                           ; BSR set to: 0
 11869  0024E6  0E1E               	movlw	30
 11870  0024E8  EF7E  F00B         	goto	L24
 11871  0024EC                     l822:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;TabelasUmidade.h: 480: else
 11875                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11876                           
 11877                           ; BSR set to: 0
 11878  0024EC  0E8D               	movlw	141
 11879  0024EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11880  0024F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11881  0024F2  A4D8               	btfss	status,2,c
 11882  0024F4  D003               	goto	l824
 11883  0024F6                     u11610:
 11884                           
 11885                           ; BSR set to: 0
 11886  0024F6  0E1D               	movlw	29
 11887  0024F8  EF7E  F00B         	goto	L24
 11888  0024FC                     l824:
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;TabelasUmidade.h: 482: else
 11892                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11893                           
 11894                           ; BSR set to: 0
 11895  0024FC  0E8E               	movlw	142
 11896  0024FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11897  002500  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11898  002502  A4D8               	btfss	status,2,c
 11899  002504  D003               	goto	l826
 11900  002506                     u11620:
 11901                           
 11902                           ; BSR set to: 0
 11903  002506  0E1C               	movlw	28
 11904  002508  EF7E  F00B         	goto	L24
 11905  00250C                     l826:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;TabelasUmidade.h: 484: else
 11909                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11910                           
 11911                           ; BSR set to: 0
 11912  00250C  0E8F               	movlw	143
 11913  00250E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11914  002510  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11915  002512  A4D8               	btfss	status,2,c
 11916  002514  D003               	goto	l828
 11917  002516                     u11630:
 11918                           
 11919                           ; BSR set to: 0
 11920  002516  0E1B               	movlw	27
 11921  002518  EF7E  F00B         	goto	L24
 11922  00251C                     l828:
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;TabelasUmidade.h: 486: else
 11926                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11927                           
 11928                           ; BSR set to: 0
 11929  00251C  0E90               	movlw	144
 11930  00251E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11931  002520  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11932  002522  A4D8               	btfss	status,2,c
 11933  002524  D003               	goto	l830
 11934  002526                     u11640:
 11935                           
 11936                           ; BSR set to: 0
 11937  002526  0E1A               	movlw	26
 11938  002528  EF7E  F00B         	goto	L24
 11939  00252C                     l830:
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;TabelasUmidade.h: 488: else
 11943                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11944                           
 11945                           ; BSR set to: 0
 11946  00252C  0E91               	movlw	145
 11947  00252E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11948  002530  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11949  002532  A4D8               	btfss	status,2,c
 11950  002534  D003               	goto	l832
 11951  002536                     u11650:
 11952                           
 11953                           ; BSR set to: 0
 11954  002536  0E19               	movlw	25
 11955  002538  EF7E  F00B         	goto	L24
 11956  00253C                     l832:
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;TabelasUmidade.h: 490: else
 11960                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11961                           
 11962                           ; BSR set to: 0
 11963  00253C  0E92               	movlw	146
 11964  00253E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11965  002540  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11966  002542  A4D8               	btfss	status,2,c
 11967  002544  D003               	goto	l834
 11968  002546                     u11660:
 11969                           
 11970                           ; BSR set to: 0
 11971  002546  0E18               	movlw	24
 11972  002548  EF7E  F00B         	goto	L24
 11973  00254C                     l834:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;TabelasUmidade.h: 492: else
 11977                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11978                           
 11979                           ; BSR set to: 0
 11980  00254C  0E93               	movlw	147
 11981  00254E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11982  002550  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11983  002552  A4D8               	btfss	status,2,c
 11984  002554  D003               	goto	l836
 11985  002556                     u11670:
 11986                           
 11987                           ; BSR set to: 0
 11988  002556  0E17               	movlw	23
 11989  002558  EF7E  F00B         	goto	L24
 11990  00255C                     l836:
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;TabelasUmidade.h: 494: else
 11994                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11995                           
 11996                           ; BSR set to: 0
 11997  00255C  0E94               	movlw	148
 11998  00255E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11999  002560  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12000  002562  A4D8               	btfss	status,2,c
 12001  002564  D003               	goto	l838
 12002  002566                     u11680:
 12003                           
 12004                           ; BSR set to: 0
 12005  002566  0E16               	movlw	22
 12006  002568  EF7E  F00B         	goto	L24
 12007  00256C                     l838:
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;TabelasUmidade.h: 496: else
 12011                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 12012                           
 12013                           ; BSR set to: 0
 12014  00256C  0E95               	movlw	149
 12015  00256E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12016  002570  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12017  002572  A4D8               	btfss	status,2,c
 12018  002574  D003               	goto	l840
 12019  002576                     u11690:
 12020                           
 12021                           ; BSR set to: 0
 12022  002576  0E15               	movlw	21
 12023  002578  EF7E  F00B         	goto	L24
 12024  00257C                     l840:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;TabelasUmidade.h: 498: else
 12028                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 12029                           
 12030                           ; BSR set to: 0
 12031  00257C  0E96               	movlw	150
 12032  00257E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12033  002580  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12034  002582  A4D8               	btfss	status,2,c
 12035  002584  D003               	goto	l842
 12036  002586                     u11700:
 12037                           
 12038                           ; BSR set to: 0
 12039  002586  0E14               	movlw	20
 12040  002588  EF7E  F00B         	goto	L24
 12041  00258C                     l842:
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;TabelasUmidade.h: 500: else
 12045                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 12046                           
 12047                           ; BSR set to: 0
 12048  00258C  0E97               	movlw	151
 12049  00258E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12050  002590  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12051  002592  A4D8               	btfss	status,2,c
 12052  002594  D003               	goto	l844
 12053  002596                     u11710:
 12054                           
 12055                           ; BSR set to: 0
 12056  002596  0E13               	movlw	19
 12057  002598  EF7E  F00B         	goto	L24
 12058  00259C                     l844:
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;TabelasUmidade.h: 502: else
 12062                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 12063                           
 12064                           ; BSR set to: 0
 12065  00259C  0E98               	movlw	152
 12066  00259E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12067  0025A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12068  0025A2  A4D8               	btfss	status,2,c
 12069  0025A4  D003               	goto	l846
 12070  0025A6                     u11720:
 12071                           
 12072                           ; BSR set to: 0
 12073  0025A6  0E12               	movlw	18
 12074  0025A8  EF7E  F00B         	goto	L24
 12075  0025AC                     l846:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;TabelasUmidade.h: 504: else
 12079                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 12080                           
 12081                           ; BSR set to: 0
 12082  0025AC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12083  0025AE  D011               	goto	l848
 12084  0025B0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12085  0025B2  E104               	bnz	u11730
 12086  0025B4  0E99               	movlw	153
 12087  0025B6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12088  0025B8  A0D8               	btfss	status,0,c
 12089  0025BA  D00B               	goto	l848
 12090  0025BC                     u11730:
 12091                           
 12092                           ; BSR set to: 0
 12093  0025BC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12094  0025BE  D006               	goto	u11740
 12095  0025C0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12096  0025C2  E107               	bnz	l7817
 12097  0025C4  0E9D               	movlw	157
 12098  0025C6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12099  0025C8  B0D8               	btfsc	status,0,c
 12100  0025CA  D003               	goto	l848
 12101  0025CC                     u11740:
 12102                           
 12103                           ; BSR set to: 0
 12104  0025CC  0E11               	movlw	17
 12105  0025CE  EF7E  F00B         	goto	L24
 12106  0025D2                     l848:
 12107  0025D2                     l7817:
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;TabelasUmidade.h: 506: else
 12111                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 12112  0025D2  0E9D               	movlw	157
 12113  0025D4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12114  0025D6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12115  0025D8  A4D8               	btfss	status,2,c
 12116  0025DA  D003               	goto	l850
 12117  0025DC                     u11750:
 12118                           
 12119                           ; BSR set to: 0
 12120  0025DC  0E10               	movlw	16
 12121  0025DE  EF7E  F00B         	goto	L24
 12122  0025E2                     l850:
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;TabelasUmidade.h: 508: else
 12126                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 12127                           
 12128                           ; BSR set to: 0
 12129  0025E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12130  0025E4  D014               	goto	l630
 12131  0025E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12132  0025E8  E104               	bnz	u11760
 12133  0025EA  0E9E               	movlw	158
 12134  0025EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12135  0025EE  A0D8               	btfss	status,0,c
 12136  0025F0  D00E               	goto	l630
 12137  0025F2                     u11760:
 12138                           
 12139                           ; BSR set to: 0
 12140  0025F2  0E0F               	movlw	15
 12141  0025F4  EF7E  F00B         	goto	L24
 12142  0025F8                     l517:
 12143                           
 12144                           ; BSR set to: 0
 12145                           
 12146                           ; BSR set to: 0
 12147  0025F8  51EB               	movf	_clima& (0+255),w,b
 12148                           
 12149                           ; Switch size 1, requested type "space"
 12150                           ; Number of cases is 3, Range of values is 1 to 3
 12151                           ; switch strategies available:
 12152                           ; Name         Instructions Cycles
 12153                           ; simple_byte           10     6 (average)
 12154                           ;	Chosen strategy is simple_byte
 12155  0025FA  0A01               	xorlw	1	; case 1
 12156  0025FC  B4D8               	btfsc	status,2,c
 12157  0025FE  EF49  F00E         	goto	l518
 12158  002602  0A03               	xorlw	3	; case 2
 12159  002604  B4D8               	btfsc	status,2,c
 12160  002606  D495               	goto	l631
 12161  002608  0A01               	xorlw	1	; case 3
 12162  00260A  B4D8               	btfsc	status,2,c
 12163  00260C  D618               	goto	l745
 12164  00260E                     l630:
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;TabelasUmidade.h: 512: }
 12168                           ;TabelasUmidade.h: 513: return _umd;
 12169                           
 12170                           ; BSR set to: 0
 12171                           
 12172                           ; BSR set to: 0
 12173  00260E  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 12174  002612  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 12175                           
 12176                           ; BSR set to: 0
 12177  002614  0012               	return		;funcret
 12178  002616                     __end_of_tabelaUmidade:
 12179                           	opt stack 0
 12180                           tblptru	equ	0xFF8
 12181                           tblptrh	equ	0xFF7
 12182                           tblptrl	equ	0xFF6
 12183                           tablat	equ	0xFF5
 12184                           prodh	equ	0xFF4
 12185                           prodl	equ	0xFF3
 12186                           intcon	equ	0xFF2
 12187                           intcon2	equ	0xFF1
 12188                           intcon3	equ	0xFF0
 12189                           postinc0	equ	0xFEE
 12190                           wreg	equ	0xFE8
 12191                           postdec1	equ	0xFE5
 12192                           fsr1l	equ	0xFE1
 12193                           indf2	equ	0xFDF
 12194                           fsr2h	equ	0xFDA
 12195                           fsr2l	equ	0xFD9
 12196                           status	equ	0xFD8
 12197                           
 12198 ;; *************** function _setRangeValor *****************
 12199 ;; Defined at:
 12200 ;;		line 76 in file "src/FuncoesControlador.h"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  _acao           1    wreg     unsigned char 
 12203 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 12204 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 12205 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1),
      + 
 12206 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 12207 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 12208 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 12209 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 12210 ;;		 -> clima(1), 
 12211 ;;  _min            1    7[BANK0 ] unsigned char 
 12212 ;;  _max            1    8[BANK0 ] unsigned char 
 12213 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 12214 ;; Auto vars:     Size  Location     Type
 12215 ;;  _acao           1   13[BANK0 ] unsigned char 
 12216 ;;  _aux            2   14[BANK0 ] int 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12226 ;;      Params:         0       5       0       0       0       0       0       0       0
 12227 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12228 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12229 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12230 ;;Total ram usage:       11 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:    9
 12233 ;; This function calls:
 12234 ;;		_writeEEPROM_ext
 12235 ;; This function is called by:
 12236 ;;		_main
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text4
 12241  0051A0                     __ptext4:
 12242                           	opt stack 0
 12243  0051A0                     _setRangeValor:
 12244                           	opt stack 21
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;incstack = 0
 12248                           ;setRangeValor@_acao stored from wreg
 12249  0051A0  0100               	movlb	0	; () banked
 12250  0051A2  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12251                           
 12252                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12253  0051A4  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12254  0051A8  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12255  0051AC  50DF               	movf	indf2,w,c
 12256  0051AE  0100               	movlb	0	; () banked
 12257  0051B0  6F6A               	movwf	??_setRangeValor& (0+255),b
 12258  0051B2  516A               	movf	??_setRangeValor& (0+255),w,b
 12259  0051B4  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12260  0051B6  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12261                           
 12262                           ;FuncoesControlador.h: 78: switch (_acao) {
 12263  0051B8  D02C               	goto	l934
 12264  0051BA                     
 12265                           ; BSR set to: 0
 12266                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12267                           
 12268                           ; BSR set to: 0
 12269  0051BA  5168               	movf	setRangeValor@_max& (0+255),w,b
 12270  0051BC  6F6A               	movwf	??_setRangeValor& (0+255),b
 12271  0051BE  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12272  0051C0  516A               	movf	??_setRangeValor& (0+255),w,b
 12273  0051C2  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12274  0051C4  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12275  0051C6  0A80               	xorlw	128
 12276  0051C8  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12277  0051CA  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12278  0051CC  0A80               	xorlw	128
 12279  0051CE  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12280  0051D0  B0D8               	btfsc	status,0,c
 12281  0051D2  D003               	goto	l937
 12282                           
 12283                           ; BSR set to: 0
 12284  0051D4  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12285  0051D6  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12286  0051D8  D013               	goto	L27
 12287  0051DA                     l937:
 12288                           
 12289                           ; BSR set to: 0
 12290  0051DA  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12291  0051DE  D017               	goto	L28
 12292  0051E0                     
 12293                           ; BSR set to: 0
 12294                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12295                           
 12296                           ; BSR set to: 0
 12297  0051E0  5167               	movf	setRangeValor@_min& (0+255),w,b
 12298  0051E2  6F6A               	movwf	??_setRangeValor& (0+255),b
 12299  0051E4  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12300  0051E6  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12301  0051E8  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12302  0051EA  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12303  0051EC  0A80               	xorlw	128
 12304  0051EE  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12305  0051F0  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12306  0051F2  0A80               	xorlw	128
 12307  0051F4  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12308  0051F6  B0D8               	btfsc	status,0,c
 12309  0051F8  D008               	goto	l943
 12310                           
 12311                           ; BSR set to: 0
 12312  0051FA  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12313  0051FC  A0D8               	btfss	status,0,c
 12314  0051FE  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12315  005200                     L27:
 12316  005200  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12317  005204  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12318  005208  D00B               	goto	l940
 12319  00520A                     l943:
 12320                           
 12321                           ; BSR set to: 0
 12322  00520A  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12323  00520E                     L28:
 12324  00520E  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;FuncoesControlador.h: 85: }
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;FuncoesControlador.h: 84: break;
 12331  005210  D007               	goto	l940
 12332  005212                     l934:
 12333                           
 12334                           ; BSR set to: 0
 12335                           
 12336                           ; BSR set to: 0
 12337  005212  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12338                           
 12339                           ; Switch size 1, requested type "space"
 12340                           ; Number of cases is 2, Range of values is 43 to 45
 12341                           ; switch strategies available:
 12342                           ; Name         Instructions Cycles
 12343                           ; simple_byte            7     4 (average)
 12344                           ;	Chosen strategy is simple_byte
 12345  005214  0A2B               	xorlw	43	; case 43
 12346  005216  B4D8               	btfsc	status,2,c
 12347  005218  D7D0               	goto	l935
 12348  00521A  0A06               	xorlw	6	; case 45
 12349  00521C  B4D8               	btfsc	status,2,c
 12350  00521E  D7E0               	goto	l941
 12351  005220                     l940:
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12355                           
 12356                           ; BSR set to: 0
 12357  005220  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12358  005222  B4D8               	btfsc	status,2,c
 12359  005224  D005               	goto	l946
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12363  005226  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12364  00522A  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12365  00522C  EC54  F02D         	call	_writeEEPROM_ext
 12366  005230                     l946:
 12367                           
 12368                           ;FuncoesControlador.h: 88: }
 12369                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12370  005230  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12371  005234  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12372  005238  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12373  00523C  0012               	return		;funcret
 12374  00523E                     __end_of_setRangeValor:
 12375                           	opt stack 0
 12376                           tblptru	equ	0xFF8
 12377                           tblptrh	equ	0xFF7
 12378                           tblptrl	equ	0xFF6
 12379                           tablat	equ	0xFF5
 12380                           prodh	equ	0xFF4
 12381                           prodl	equ	0xFF3
 12382                           intcon	equ	0xFF2
 12383                           intcon2	equ	0xFF1
 12384                           intcon3	equ	0xFF0
 12385                           postinc0	equ	0xFEE
 12386                           wreg	equ	0xFE8
 12387                           postdec1	equ	0xFE5
 12388                           fsr1l	equ	0xFE1
 12389                           indf2	equ	0xFDF
 12390                           fsr2h	equ	0xFDA
 12391                           fsr2l	equ	0xFD9
 12392                           status	equ	0xFD8
 12393                           
 12394 ;; *************** function _readEEPROM_ext *****************
 12395 ;; Defined at:
 12396 ;;		line 26 in file "src/Eeprom_ext.h"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  adress          1    wreg     unsigned char 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  adress          1    5[BANK0 ] unsigned char 
 12401 ;;  data            1    6[BANK0 ] unsigned char 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      unsigned char 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2, status,0, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0
 12412 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12414 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12415 ;;Total ram usage:        2 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    8
 12418 ;; This function calls:
 12419 ;;		_I2C_Read
 12420 ;;		_I2C_Restart
 12421 ;;		_I2C_Start
 12422 ;;		_I2C_Stop
 12423 ;;		_I2C_Write
 12424 ;; This function is called by:
 12425 ;;		_main
 12426 ;;		_readEEPROM16_ext
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text5
 12431  005986                     __ptext5:
 12432                           	opt stack 0
 12433  005986                     _readEEPROM_ext:
 12434                           	opt stack 22
 12435                           
 12436                           ;incstack = 0
 12437                           ;readEEPROM_ext@adress stored from wreg
 12438  005986  0100               	movlb	0	; () banked
 12439  005988  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12440                           
 12441                           ;Eeprom_ext.h: 27: I2C_Start();
 12442  00598A  EC84  F02F         	call	_I2C_Start	;wreg free
 12443                           
 12444                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12445  00598E  0E00               	movlw	0
 12446  005990  0100               	movlb	0	; () banked
 12447  005992  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12448  005994  0EA0               	movlw	160
 12449  005996  6F61               	movwf	I2C_Write@d& (0+255),b
 12450  005998  EC72  F02F         	call	_I2C_Write	;wreg free
 12451                           
 12452                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12453  00599C  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12454  0059A0  0100               	movlb	0	; () banked
 12455  0059A2  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12456  0059A4  EC72  F02F         	call	_I2C_Write	;wreg free
 12457                           
 12458                           ;Eeprom_ext.h: 31: I2C_Restart();
 12459  0059A8  EC7C  F02F         	call	_I2C_Restart	;wreg free
 12460                           
 12461                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12462  0059AC  0E00               	movlw	0
 12463  0059AE  0100               	movlb	0	; () banked
 12464  0059B0  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12465  0059B2  0EA1               	movlw	161
 12466  0059B4  6F61               	movwf	I2C_Write@d& (0+255),b
 12467  0059B6  EC72  F02F         	call	_I2C_Write	;wreg free
 12468                           
 12469                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12470  0059BA  0E00               	movlw	0
 12471  0059BC  0100               	movlb	0	; () banked
 12472  0059BE  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12473  0059C0  0E00               	movlw	0
 12474  0059C2  6F61               	movwf	I2C_Read@a& (0+255),b
 12475  0059C4  ECEC  F02D         	call	_I2C_Read	;wreg free
 12476  0059C8  0100               	movlb	0	; () banked
 12477  0059CA  5161               	movf	?_I2C_Read& (0+255),w,b
 12478  0059CC  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12479                           
 12480                           ;Eeprom_ext.h: 34: I2C_Stop();
 12481  0059CE  EC80  F02F         	call	_I2C_Stop	;wreg free
 12482                           
 12483                           ;Eeprom_ext.h: 35: return data;
 12484  0059D2  0100               	movlb	0	; () banked
 12485  0059D4  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12486  0059D6  0012               	return	
 12487  0059D8                     __end_of_readEEPROM_ext:
 12488                           	opt stack 0
 12489                           tblptru	equ	0xFF8
 12490                           tblptrh	equ	0xFF7
 12491                           tblptrl	equ	0xFF6
 12492                           tablat	equ	0xFF5
 12493                           prodh	equ	0xFF4
 12494                           prodl	equ	0xFF3
 12495                           intcon	equ	0xFF2
 12496                           intcon2	equ	0xFF1
 12497                           intcon3	equ	0xFF0
 12498                           postinc0	equ	0xFEE
 12499                           wreg	equ	0xFE8
 12500                           postdec1	equ	0xFE5
 12501                           fsr1l	equ	0xFE1
 12502                           indf2	equ	0xFDF
 12503                           fsr2h	equ	0xFDA
 12504                           fsr2l	equ	0xFD9
 12505                           status	equ	0xFD8
 12506                           
 12507 ;; *************** function _I2C_Restart *****************
 12508 ;; Defined at:
 12509 ;;		line 30 in file "src/I2C.c"
 12510 ;; Parameters:    Size  Location     Type
 12511 ;;		None
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;		None
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      void 
 12516 ;; Registers used:
 12517 ;;		wreg, status,2, status,0, cstack
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 0/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12523 ;;      Params:         0       0       0       0       0       0       0       0       0
 12524 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12526 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12527 ;;Total ram usage:        0 bytes
 12528 ;; Hardware stack levels used:    1
 12529 ;; Hardware stack levels required when called:    7
 12530 ;; This function calls:
 12531 ;;		_I2C_Wait
 12532 ;; This function is called by:
 12533 ;;		_readEEPROM_ext
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text6
 12538  005EF8                     __ptext6:
 12539                           	opt stack 0
 12540  005EF8                     _I2C_Restart:
 12541                           	opt stack 22
 12542                           
 12543                           ;I2C.c: 31: I2C_Wait();
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;incstack = 0
 12547  005EF8  EC51  F02F         	call	_I2C_Wait	;wreg free
 12548                           
 12549                           ;I2C.c: 32: RSEN = 1;
 12550  005EFC  82C5               	bsf	4037,1,c	;volatile
 12551  005EFE  0012               	return		;funcret
 12552  005F00                     __end_of_I2C_Restart:
 12553                           	opt stack 0
 12554                           tblptru	equ	0xFF8
 12555                           tblptrh	equ	0xFF7
 12556                           tblptrl	equ	0xFF6
 12557                           tablat	equ	0xFF5
 12558                           prodh	equ	0xFF4
 12559                           prodl	equ	0xFF3
 12560                           intcon	equ	0xFF2
 12561                           intcon2	equ	0xFF1
 12562                           intcon3	equ	0xFF0
 12563                           postinc0	equ	0xFEE
 12564                           wreg	equ	0xFE8
 12565                           postdec1	equ	0xFE5
 12566                           fsr1l	equ	0xFE1
 12567                           indf2	equ	0xFDF
 12568                           fsr2h	equ	0xFDA
 12569                           fsr2l	equ	0xFD9
 12570                           status	equ	0xFD8
 12571                           
 12572 ;; *************** function _I2C_Read *****************
 12573 ;; Defined at:
 12574 ;;		line 46 in file "src/I2C.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  a               2    1[BANK0 ] unsigned short 
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;  temp            2    3[BANK0 ] unsigned short 
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  2    1[BANK0 ] unsigned short 
 12581 ;; Registers used:
 12582 ;;		wreg, status,2, status,0, cstack
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12588 ;;      Params:         0       2       0       0       0       0       0       0       0
 12589 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12591 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12592 ;;Total ram usage:        4 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    7
 12595 ;; This function calls:
 12596 ;;		_I2C_Wait
 12597 ;; This function is called by:
 12598 ;;		_readEEPROM_ext
 12599 ;; This function uses a non-reentrant model
 12600 ;;
 12601                           
 12602                           	psect	text7
 12603  005BD8                     __ptext7:
 12604                           	opt stack 0
 12605  005BD8                     _I2C_Read:
 12606                           	opt stack 22
 12607                           
 12608                           ;I2C.c: 47: unsigned short temp;
 12609                           ;I2C.c: 48: I2C_Wait();
 12610                           
 12611                           ;incstack = 0
 12612  005BD8  EC51  F02F         	call	_I2C_Wait	;wreg free
 12613                           
 12614                           ;I2C.c: 49: RCEN = 1;
 12615  005BDC  86C5               	bsf	4037,3,c	;volatile
 12616                           
 12617                           ;I2C.c: 50: I2C_Wait();
 12618  005BDE  EC51  F02F         	call	_I2C_Wait	;wreg free
 12619                           
 12620                           ;I2C.c: 51: temp = SSPBUF;
 12621  005BE2  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12622  005BE6  0100               	movlb	0	; () banked
 12623  005BE8  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12624                           
 12625                           ;I2C.c: 52: I2C_Wait();
 12626  005BEA  EC51  F02F         	call	_I2C_Wait	;wreg free
 12627                           
 12628                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12629  005BEE  0100               	movlb	0	; () banked
 12630  005BF0  5161               	movf	I2C_Read@a& (0+255),w,b
 12631  005BF2  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12632  005BF4  A4D8               	btfss	status,2,c
 12633  005BF6  D002               	goto	u8730
 12634  005BF8  8AC5               	bsf	4037,5,c	;volatile
 12635  005BFA  D001               	goto	u8745
 12636  005BFC                     u8730:
 12637  005BFC  9AC5               	bcf	4037,5,c	;volatile
 12638  005BFE                     u8745:
 12639                           
 12640                           ;I2C.c: 54: ACKEN = 1;
 12641  005BFE  88C5               	bsf	4037,4,c	;volatile
 12642                           
 12643                           ;I2C.c: 55: return temp;
 12644  005C00  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12645  005C04  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12646  005C08  0012               	return	
 12647  005C0A                     __end_of_I2C_Read:
 12648                           	opt stack 0
 12649                           tblptru	equ	0xFF8
 12650                           tblptrh	equ	0xFF7
 12651                           tblptrl	equ	0xFF6
 12652                           tablat	equ	0xFF5
 12653                           prodh	equ	0xFF4
 12654                           prodl	equ	0xFF3
 12655                           intcon	equ	0xFF2
 12656                           intcon2	equ	0xFF1
 12657                           intcon3	equ	0xFF0
 12658                           postinc0	equ	0xFEE
 12659                           wreg	equ	0xFE8
 12660                           postdec1	equ	0xFE5
 12661                           fsr1l	equ	0xFE1
 12662                           indf2	equ	0xFDF
 12663                           fsr2h	equ	0xFDA
 12664                           fsr2l	equ	0xFD9
 12665                           status	equ	0xFD8
 12666                           
 12667 ;; *************** function _getSensors *****************
 12668 ;; Defined at:
 12669 ;;		line 22 in file "src/ADC.h"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;		None
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  auxx            3   77[BANK0 ] float 
 12674 ;;  aux             3   84[BANK0 ] float 
 12675 ;;  i               1   83[BANK0 ] unsigned char 
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  2  1223[None  ] int 
 12678 ;; Registers used:
 12679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12685 ;;      Params:         0       0       0       0       0       0       0       0       0
 12686 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12688 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12689 ;;Total ram usage:       18 bytes
 12690 ;; Hardware stack levels used:    1
 12691 ;; Hardware stack levels required when called:    8
 12692 ;; This function calls:
 12693 ;;		___ftadd
 12694 ;;		___ftdiv
 12695 ;;		___ftge
 12696 ;;		___ftmul
 12697 ;;		___fttol
 12698 ;;		___lwtoft
 12699 ;;		_readADC
 12700 ;; This function is called by:
 12701 ;;		_main
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           	psect	text8
 12706  003108                     __ptext8:
 12707                           	opt stack 0
 12708  003108                     _getSensors:
 12709                           	opt stack 22
 12710                           
 12711                           ;ADC.h: 23: unsigned char i = 0;
 12712                           
 12713                           ;incstack = 0
 12714  003108  0E00               	movlw	0
 12715  00310A  0100               	movlb	0	; () banked
 12716  00310C  6FB3               	movwf	getSensors@i& (0+255),b
 12717                           
 12718                           ;ADC.h: 24: float aux = 0;
 12719  00310E  0E00               	movlw	0
 12720  003110  6FB4               	movwf	getSensors@aux& (0+255),b
 12721  003112  0E00               	movlw	0
 12722  003114  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12723  003116  0E00               	movlw	0
 12724  003118  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12725                           
 12726                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12727  00311A  503C               	movf	_t_leitura_adc,w,c
 12728  00311C  A4D8               	btfss	status,2,c
 12729  00311E  D1F3               	goto	l1224
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;ADC.h: 27: t_leitura_adc = 10;
 12733  003120  0E0A               	movlw	10
 12734  003122  6E3C               	movwf	_t_leitura_adc,c
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12738  003124  0E0A               	movlw	10
 12739  003126  603B               	cpfslt	_media_adc,c
 12740  003128  D005               	goto	l1226
 12741                           
 12742                           ; BSR set to: 0
 12743  00312A  2A3B               	incf	_media_adc,f,c
 12744  00312C  C03B  F0AB         	movff	_media_adc,_getSensors$1521
 12745  003130  6BAC               	clrf	(_getSensors$1521+1)& (0+255),b
 12746  003132  D004               	goto	l1228
 12747  003134                     l1226:
 12748                           
 12749                           ; BSR set to: 0
 12750                           
 12751                           ; BSR set to: 0
 12752  003134  0E00               	movlw	0
 12753  003136  6FAC               	movwf	(_getSensors$1521+1)& (0+255),b
 12754  003138  0E00               	movlw	0
 12755  00313A  6FAB               	movwf	_getSensors$1521& (0+255),b
 12756  00313C                     l1228:
 12757                           
 12758                           ; BSR set to: 0
 12759                           
 12760                           ; BSR set to: 0
 12761  00313C  C0AB  F03B         	movff	_getSensors$1521,_media_adc
 12762                           
 12763                           ;ADC.h: 31: aux = 0;
 12764  003140  0E00               	movlw	0
 12765  003142  6FB4               	movwf	getSensors@aux& (0+255),b
 12766  003144  0E00               	movlw	0
 12767  003146  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12768  003148  0E00               	movlw	0
 12769  00314A  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12770                           
 12771                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12772  00314C  0E00               	movlw	0
 12773  00314E  6FB3               	movwf	getSensors@i& (0+255),b
 12774  003150                     l9105:
 12775                           
 12776                           ; BSR set to: 0
 12777  003150  0E0B               	movlw	11
 12778  003152  65B3               	cpfsgt	getSensors@i& (0+255),b
 12779  003154  D001               	goto	l1229
 12780  003156  D042               	goto	u14090
 12781  003158                     l1229:
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12785                           
 12786                           ; BSR set to: 0
 12787  003158  0E00               	movlw	0
 12788  00315A  6F7E               	movwf	___ftadd@f2& (0+255),b
 12789  00315C  0E00               	movlw	0
 12790  00315E  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12791  003160  0E42               	movlw	66
 12792  003162  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12793  003164  0E00               	movlw	0
 12794  003166  6F6F               	movwf	___ftmul@f2& (0+255),b
 12795  003168  0E61               	movlw	97
 12796  00316A  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12797  00316C  0E3F               	movlw	63
 12798  00316E  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12799  003170  0E00               	movlw	0
 12800  003172  EC1F  F029         	call	_readADC
 12801  003176  C060  F069         	movff	?_readADC,___lwtoft@c
 12802  00317A  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12803  00317E  ECD1  F02E         	call	___lwtoft	;wreg free
 12804  003182  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12805  003186  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12806  00318A  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12807  00318E  EC48  F025         	call	___ftmul	;wreg free
 12808  003192  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12809  003196  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12810  00319A  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12811  00319E  ECE5  F020         	call	___ftadd	;wreg free
 12812  0031A2  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 12813  0031A6  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 12814  0031AA  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 12815                           
 12816                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12817  0031AE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12818  0031B2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12819  0031B6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12820  0031BA  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 12821  0031BE  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 12822  0031C2  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 12823  0031C6  ECE5  F020         	call	___ftadd	;wreg free
 12824  0031CA  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12825  0031CE  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12826  0031D2  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12827  0031D6  0100               	movlb	0	; () banked
 12828  0031D8  2BB3               	incf	getSensors@i& (0+255),f,b
 12829  0031DA  D7BA               	goto	l9105
 12830  0031DC                     u14090:
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;ADC.h: 34: }
 12834                           ;ADC.h: 35: aux = (aux / 12);
 12835                           
 12836                           ; BSR set to: 0
 12837  0031DC  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12838  0031E0  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12839  0031E4  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12840  0031E8  0E00               	movlw	0
 12841  0031EA  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12842  0031EC  0E40               	movlw	64
 12843  0031EE  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12844  0031F0  0E41               	movlw	65
 12845  0031F2  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12846  0031F4  EC38  F026         	call	___ftdiv	;wreg free
 12847  0031F8  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12848  0031FC  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12849  003200  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12850                           
 12851                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12852  003204  0E00               	movlw	0
 12853  003206  0100               	movlb	0	; () banked
 12854  003208  6F60               	movwf	___ftge@ff1& (0+255),b
 12855  00320A  0E14               	movlw	20
 12856  00320C  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12857  00320E  0E42               	movlw	66
 12858  003210  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12859  003212  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12860  003216  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12861  00321A  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12862  00321E  EC02  F02A         	call	___ftge	;wreg free
 12863  003222  0100               	movlb	0	; () banked
 12864  003224  B0D8               	btfsc	status,0,c
 12865  003226  D015               	goto	l1232
 12866                           
 12867                           ; BSR set to: 0
 12868  003228  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12869  00322C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12870  003230  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12871  003234  0E00               	movlw	0
 12872  003236  6F7E               	movwf	___ftadd@f2& (0+255),b
 12873  003238  0E80               	movlw	128
 12874  00323A  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12875  00323C  0E3F               	movlw	63
 12876  00323E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12877  003240  ECE5  F020         	call	___ftadd	;wreg free
 12878  003244  C07B  F0A5         	movff	?___ftadd,_getSensors$1523
 12879  003248  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1523+1
 12880  00324C  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1523+2
 12881  003250  D007               	goto	l1234
 12882  003252                     l1232:
 12883  003252  0E00               	movlw	0
 12884  003254  0100               	movlb	0	; () banked
 12885  003256  6FA5               	movwf	_getSensors$1523& (0+255),b
 12886  003258  0E00               	movlw	0
 12887  00325A  6FA6               	movwf	(_getSensors$1523+1)& (0+255),b
 12888  00325C  0E00               	movlw	0
 12889  00325E  6FA7               	movwf	(_getSensors$1523+2)& (0+255),b
 12890  003260                     l1234:
 12891                           
 12892                           ; BSR set to: 0
 12893  003260  503B               	movf	_media_adc,w,c
 12894  003262  0D03               	mullw	3
 12895  003264  0E21               	movlw	low __temp
 12896  003266  24F3               	addwf	prodl,w,c
 12897  003268  6ED9               	movwf	fsr2l,c
 12898  00326A  0E02               	movlw	high __temp
 12899  00326C  20F4               	addwfc	prodh,w,c
 12900  00326E  6EDA               	movwf	fsr2h,c
 12901  003270  C0A5  FFDE         	movff	_getSensors$1523,postinc2
 12902  003274  C0A6  FFDE         	movff	_getSensors$1523+1,postinc2
 12903  003278  C0A7  FFDE         	movff	_getSensors$1523+2,postinc2
 12904                           
 12905                           ;ADC.h: 40: aux = 0;
 12906  00327C  0E00               	movlw	0
 12907  00327E  0100               	movlb	0	; () banked
 12908  003280  6FB4               	movwf	getSensors@aux& (0+255),b
 12909  003282  0E00               	movlw	0
 12910  003284  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12911  003286  0E00               	movlw	0
 12912  003288  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12916  00328A  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 12917  00328C  A4D8               	btfss	status,2,c
 12918  00328E  D07E               	goto	l1235
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;ADC.h: 42: float auxx = 0;
 12922  003290  0E00               	movlw	0
 12923  003292  6FAD               	movwf	getSensors@auxx& (0+255),b
 12924  003294  0E00               	movlw	0
 12925  003296  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12926  003298  0E00               	movlw	0
 12927  00329A  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12928                           
 12929                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12930  00329C  0E00               	movlw	0
 12931  00329E  6FB3               	movwf	getSensors@i& (0+255),b
 12932  0032A0                     l9129:
 12933                           
 12934                           ; BSR set to: 0
 12935  0032A0  0E0B               	movlw	11
 12936  0032A2  65B3               	cpfsgt	getSensors@i& (0+255),b
 12937  0032A4  D001               	goto	l1236
 12938  0032A6  D0BA               	goto	u14160
 12939  0032A8                     l1236:
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12943                           
 12944                           ; BSR set to: 0
 12945  0032A8  0E75               	movlw	117
 12946  0032AA  6F7E               	movwf	___ftadd@f2& (0+255),b
 12947  0032AC  0E53               	movlw	83
 12948  0032AE  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12949  0032B0  0EBF               	movlw	191
 12950  0032B2  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12951  0032B4  0E00               	movlw	0
 12952  0032B6  6F6F               	movwf	___ftmul@f2& (0+255),b
 12953  0032B8  0EA0               	movlw	160
 12954  0032BA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12955  0032BC  0E3B               	movlw	59
 12956  0032BE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12957  0032C0  0E01               	movlw	1
 12958  0032C2  EC1F  F029         	call	_readADC
 12959  0032C6  C060  F069         	movff	?_readADC,___lwtoft@c
 12960  0032CA  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12961  0032CE  ECD1  F02E         	call	___lwtoft	;wreg free
 12962  0032D2  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12963  0032D6  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12964  0032DA  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12965  0032DE  EC48  F025         	call	___ftmul	;wreg free
 12966  0032E2  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12967  0032E6  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12968  0032EA  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12969  0032EE  ECE5  F020         	call	___ftadd	;wreg free
 12970  0032F2  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12971  0032F6  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12972  0032FA  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12973  0032FE  0E06               	movlw	6
 12974  003300  0100               	movlb	0	; () banked
 12975  003302  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12976  003304  0E01               	movlw	1
 12977  003306  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12978  003308  0E3D               	movlw	61
 12979  00330A  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12980  00330C  EC38  F026         	call	___ftdiv	;wreg free
 12981  003310  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12982  003314  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12983  003318  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12984                           
 12985                           ;ADC.h: 45: if (auxx < 10) {
 12986  00331C  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12987  003320  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12988  003324  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12989  003328  0E00               	movlw	0
 12990  00332A  0100               	movlb	0	; () banked
 12991  00332C  6F63               	movwf	___ftge@ff2& (0+255),b
 12992  00332E  0E20               	movlw	32
 12993  003330  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12994  003332  0E41               	movlw	65
 12995  003334  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12996  003336  EC02  F02A         	call	___ftge	;wreg free
 12997  00333A  0100               	movlb	0	; () banked
 12998  00333C  B0D8               	btfsc	status,0,c
 12999  00333E  D00F               	goto	l1238
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;ADC.h: 46: aux += 0;
 13003  003340  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13004  003344  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13005  003348  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13006  00334C  0E00               	movlw	0
 13007  00334E  6F7E               	movwf	___ftadd@f2& (0+255),b
 13008  003350  0E00               	movlw	0
 13009  003352  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13010  003354  0E00               	movlw	0
 13011  003356  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13012  003358  ECE5  F020         	call	___ftadd	;wreg free
 13013  00335C  D00E               	goto	L29
 13014  00335E                     l1238:
 13015                           
 13016                           ;ADC.h: 48: aux += auxx;
 13017  00335E  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13018  003362  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13019  003366  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13020  00336A  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 13021  00336E  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 13022  003372  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 13023  003376  ECE5  F020         	call	___ftadd	;wreg free
 13024  00337A                     L29:
 13025  00337A  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13026  00337E  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13027  003382  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13028  003386  0100               	movlb	0	; () banked
 13029  003388  2BB3               	incf	getSensors@i& (0+255),f,b
 13030  00338A  D78A               	goto	l9129
 13031  00338C                     l1235:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 13035                           
 13036                           ; BSR set to: 0
 13037  00338C  0E00               	movlw	0
 13038  00338E  6FB3               	movwf	getSensors@i& (0+255),b
 13039  003390                     l9145:
 13040                           
 13041                           ; BSR set to: 0
 13042  003390  0E0B               	movlw	11
 13043  003392  65B3               	cpfsgt	getSensors@i& (0+255),b
 13044  003394  D001               	goto	l1241
 13045  003396  D042               	goto	u14160
 13046  003398                     l1241:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13050                           
 13051                           ; BSR set to: 0
 13052  003398  0E00               	movlw	0
 13053  00339A  6F7E               	movwf	___ftadd@f2& (0+255),b
 13054  00339C  0E00               	movlw	0
 13055  00339E  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13056  0033A0  0E42               	movlw	66
 13057  0033A2  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13058  0033A4  0E00               	movlw	0
 13059  0033A6  6F6F               	movwf	___ftmul@f2& (0+255),b
 13060  0033A8  0E61               	movlw	97
 13061  0033AA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 13062  0033AC  0E3F               	movlw	63
 13063  0033AE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 13064  0033B0  0E02               	movlw	2
 13065  0033B2  EC1F  F029         	call	_readADC
 13066  0033B6  C060  F069         	movff	?_readADC,___lwtoft@c
 13067  0033BA  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 13068  0033BE  ECD1  F02E         	call	___lwtoft	;wreg free
 13069  0033C2  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 13070  0033C6  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 13071  0033CA  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 13072  0033CE  EC48  F025         	call	___ftmul	;wreg free
 13073  0033D2  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 13074  0033D6  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 13075  0033DA  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 13076  0033DE  ECE5  F020         	call	___ftadd	;wreg free
 13077  0033E2  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 13078  0033E6  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 13079  0033EA  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 13080                           
 13081                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13082  0033EE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13083  0033F2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13084  0033F6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13085  0033FA  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 13086  0033FE  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 13087  003402  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 13088  003406  ECE5  F020         	call	___ftadd	;wreg free
 13089  00340A  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13090  00340E  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13091  003412  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13092  003416  0100               	movlb	0	; () banked
 13093  003418  2BB3               	incf	getSensors@i& (0+255),f,b
 13094  00341A  D7BA               	goto	l9145
 13095  00341C                     u14160:
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;ADC.h: 54: }
 13099                           ;ADC.h: 55: }
 13100                           ;ADC.h: 57: aux = (aux / 12);
 13101                           
 13102                           ; BSR set to: 0
 13103                           
 13104                           ; BSR set to: 0
 13105  00341C  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13106  003420  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13107  003424  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13108  003428  0E00               	movlw	0
 13109  00342A  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13110  00342C  0E40               	movlw	64
 13111  00342E  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13112  003430  0E41               	movlw	65
 13113  003432  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13114  003434  EC38  F026         	call	___ftdiv	;wreg free
 13115  003438  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 13116  00343C  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 13117  003440  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 13118                           
 13119                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 13120  003444  0100               	movlb	0	; () banked
 13121  003446  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 13122  003448  A4D8               	btfss	status,2,c
 13123  00344A  D02E               	goto	l1245
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;ADC.h: 59: if (aux > 100) aux = 100;
 13127  00344C  0E00               	movlw	0
 13128  00344E  6F60               	movwf	___ftge@ff1& (0+255),b
 13129  003450  0EC8               	movlw	200
 13130  003452  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13131  003454  0E42               	movlw	66
 13132  003456  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13133  003458  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 13134  00345C  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 13135  003460  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 13136  003464  EC02  F02A         	call	___ftge	;wreg free
 13137  003468  0100               	movlb	0	; () banked
 13138  00346A  B0D8               	btfsc	status,0,c
 13139  00346C  D006               	goto	l1244
 13140                           
 13141                           ; BSR set to: 0
 13142  00346E  0E00               	movlw	0
 13143  003470  6FB4               	movwf	getSensors@aux& (0+255),b
 13144  003472  0EC8               	movlw	200
 13145  003474  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13146  003476  0E42               	movlw	66
 13147  003478  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13148  00347A                     l1244:
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;ADC.h: 60: if (aux < 10) aux = 0;
 13152                           
 13153                           ; BSR set to: 0
 13154  00347A  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13155  00347E  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13156  003482  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13157  003486  0E00               	movlw	0
 13158  003488  6F63               	movwf	___ftge@ff2& (0+255),b
 13159  00348A  0E20               	movlw	32
 13160  00348C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13161  00348E  0E41               	movlw	65
 13162  003490  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13163  003492  EC02  F02A         	call	___ftge	;wreg free
 13164  003496  0100               	movlb	0	; () banked
 13165  003498  B0D8               	btfsc	status,0,c
 13166  00349A  D006               	goto	l1245
 13167                           
 13168                           ; BSR set to: 0
 13169  00349C  0E00               	movlw	0
 13170  00349E  6FB4               	movwf	getSensors@aux& (0+255),b
 13171  0034A0  0E00               	movlw	0
 13172  0034A2  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13173  0034A4  0E00               	movlw	0
 13174  0034A6  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13175  0034A8                     l1245:
 13176                           
 13177                           ; BSR set to: 0
 13178                           ;ADC.h: 61: }
 13179                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 13180                           
 13181                           ; BSR set to: 0
 13182                           
 13183                           ; BSR set to: 0
 13184  0034A8  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13185  0034AC  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13186  0034B0  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13187  0034B4  0E00               	movlw	0
 13188  0034B6  6F63               	movwf	___ftge@ff2& (0+255),b
 13189  0034B8  0E20               	movlw	32
 13190  0034BA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13191  0034BC  0E42               	movlw	66
 13192  0034BE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13193  0034C0  EC02  F02A         	call	___ftge	;wreg free
 13194  0034C4  0100               	movlb	0	; () banked
 13195  0034C6  B0D8               	btfsc	status,0,c
 13196  0034C8  D003               	goto	u14210
 13197                           
 13198                           ; BSR set to: 0
 13199  0034CA  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
 13200  0034CC  B4D8               	btfsc	status,2,c
 13201  0034CE  D007               	goto	l1247
 13202  0034D0                     u14210:
 13203                           
 13204                           ; BSR set to: 0
 13205  0034D0  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1525
 13206  0034D4  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1525+1
 13207  0034D8  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1525+2
 13208  0034DC  D006               	goto	l1249
 13209  0034DE                     l1247:
 13210                           
 13211                           ; BSR set to: 0
 13212                           
 13213                           ; BSR set to: 0
 13214  0034DE  0E00               	movlw	0
 13215  0034E0  6FA8               	movwf	_getSensors$1525& (0+255),b
 13216  0034E2  0E00               	movlw	0
 13217  0034E4  6FA9               	movwf	(_getSensors$1525+1)& (0+255),b
 13218  0034E6  0E00               	movlw	0
 13219  0034E8  6FAA               	movwf	(_getSensors$1525+2)& (0+255),b
 13220  0034EA                     l1249:
 13221                           
 13222                           ; BSR set to: 0
 13223                           
 13224                           ; BSR set to: 0
 13225  0034EA  503B               	movf	_media_adc,w,c
 13226  0034EC  0D03               	mullw	3
 13227  0034EE  0E00               	movlw	low __umid
 13228  0034F0  24F3               	addwf	prodl,w,c
 13229  0034F2  6ED9               	movwf	fsr2l,c
 13230  0034F4  0E02               	movlw	high __umid
 13231  0034F6  20F4               	addwfc	prodh,w,c
 13232  0034F8  6EDA               	movwf	fsr2h,c
 13233  0034FA  C0A8  FFDE         	movff	_getSensors$1525,postinc2
 13234  0034FE  C0A9  FFDE         	movff	_getSensors$1525+1,postinc2
 13235  003502  C0AA  FFDE         	movff	_getSensors$1525+2,postinc2
 13236  003506                     l1224:
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;ADC.h: 63: }
 13240                           ;ADC.h: 67: i = 0;
 13241                           
 13242                           ; BSR set to: 0
 13243  003506  0E00               	movlw	0
 13244  003508  6FB3               	movwf	getSensors@i& (0+255),b
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;ADC.h: 68: aux = 0;
 13248  00350A  0E00               	movlw	0
 13249  00350C  6FB4               	movwf	getSensors@aux& (0+255),b
 13250  00350E  0E00               	movlw	0
 13251  003510  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13252  003512  0E00               	movlw	0
 13253  003514  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13257  003516  0E00               	movlw	0
 13258  003518  6FB3               	movwf	getSensors@i& (0+255),b
 13259  00351A                     l9181:
 13260                           
 13261                           ; BSR set to: 0
 13262  00351A  0E09               	movlw	9
 13263  00351C  65B3               	cpfsgt	getSensors@i& (0+255),b
 13264  00351E  D001               	goto	l1252
 13265  003520  D01F               	goto	u14230
 13266  003522                     l1252:
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;ADC.h: 70: aux += _temp[i];
 13270                           
 13271                           ; BSR set to: 0
 13272  003522  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13273  003526  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13274  00352A  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13275  00352E  51B3               	movf	getSensors@i& (0+255),w,b
 13276  003530  0D03               	mullw	3
 13277  003532  0E21               	movlw	low __temp
 13278  003534  24F3               	addwf	prodl,w,c
 13279  003536  6ED9               	movwf	fsr2l,c
 13280  003538  0E02               	movlw	high __temp
 13281  00353A  20F4               	addwfc	prodh,w,c
 13282  00353C  6EDA               	movwf	fsr2h,c
 13283  00353E  CFDE F07E          	movff	postinc2,___ftadd@f2
 13284  003542  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13285  003546  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13286  00354A  ECE5  F020         	call	___ftadd	;wreg free
 13287  00354E  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13288  003552  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13289  003556  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13290  00355A  0100               	movlb	0	; () banked
 13291  00355C  2BB3               	incf	getSensors@i& (0+255),f,b
 13292  00355E  D7DD               	goto	l9181
 13293  003560                     u14230:
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;ADC.h: 71: }
 13297                           ;ADC.h: 72: temp = (aux / 10);
 13298                           
 13299                           ; BSR set to: 0
 13300  003560  0E00               	movlw	0
 13301  003562  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13302  003564  0E20               	movlw	32
 13303  003566  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13304  003568  0E41               	movlw	65
 13305  00356A  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13306  00356C  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13307  003570  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13308  003574  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13309  003578  EC38  F026         	call	___ftdiv	;wreg free
 13310  00357C  C087  F096         	movff	?___ftdiv,___fttol@f1
 13311  003580  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13312  003584  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13313  003588  ECCC  F024         	call	___fttol	;wreg free
 13314  00358C  0100               	movlb	0	; () banked
 13315  00358E  5196               	movf	?___fttol& (0+255),w,b
 13316  003590  6FFD               	movwf	_temp& (0+255),b
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;ADC.h: 76: i = 0;
 13320  003592  0E00               	movlw	0
 13321  003594  6FB3               	movwf	getSensors@i& (0+255),b
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;ADC.h: 77: aux = 0;
 13325  003596  0E00               	movlw	0
 13326  003598  6FB4               	movwf	getSensors@aux& (0+255),b
 13327  00359A  0E00               	movlw	0
 13328  00359C  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13329  00359E  0E00               	movlw	0
 13330  0035A0  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13334  0035A2  0E00               	movlw	0
 13335  0035A4  6FB3               	movwf	getSensors@i& (0+255),b
 13336  0035A6                     l9199:
 13337                           
 13338                           ; BSR set to: 0
 13339  0035A6  0E09               	movlw	9
 13340  0035A8  65B3               	cpfsgt	getSensors@i& (0+255),b
 13341  0035AA  D001               	goto	l1254
 13342  0035AC  D01F               	goto	u14250
 13343  0035AE                     l1254:
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;ADC.h: 79: aux += _umid[i];
 13347                           
 13348                           ; BSR set to: 0
 13349  0035AE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13350  0035B2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13351  0035B6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13352  0035BA  51B3               	movf	getSensors@i& (0+255),w,b
 13353  0035BC  0D03               	mullw	3
 13354  0035BE  0E00               	movlw	low __umid
 13355  0035C0  24F3               	addwf	prodl,w,c
 13356  0035C2  6ED9               	movwf	fsr2l,c
 13357  0035C4  0E02               	movlw	high __umid
 13358  0035C6  20F4               	addwfc	prodh,w,c
 13359  0035C8  6EDA               	movwf	fsr2h,c
 13360  0035CA  CFDE F07E          	movff	postinc2,___ftadd@f2
 13361  0035CE  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13362  0035D2  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13363  0035D6  ECE5  F020         	call	___ftadd	;wreg free
 13364  0035DA  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13365  0035DE  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13366  0035E2  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13367  0035E6  0100               	movlb	0	; () banked
 13368  0035E8  2BB3               	incf	getSensors@i& (0+255),f,b
 13369  0035EA  D7DD               	goto	l9199
 13370  0035EC                     u14250:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;ADC.h: 80: }
 13374                           ;ADC.h: 81: umid = (aux / 10);
 13375                           
 13376                           ; BSR set to: 0
 13377  0035EC  0E00               	movlw	0
 13378  0035EE  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13379  0035F0  0E20               	movlw	32
 13380  0035F2  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13381  0035F4  0E41               	movlw	65
 13382  0035F6  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13383  0035F8  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13384  0035FC  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13385  003600  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13386  003604  EC38  F026         	call	___ftdiv	;wreg free
 13387  003608  C087  F096         	movff	?___ftdiv,___fttol@f1
 13388  00360C  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13389  003610  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13390  003614  ECCC  F024         	call	___fttol	;wreg free
 13391  003618  0100               	movlb	0	; () banked
 13392  00361A  5196               	movf	?___fttol& (0+255),w,b
 13393  00361C  6FFC               	movwf	_umid& (0+255),b
 13394                           
 13395                           ; BSR set to: 0
 13396  00361E  0012               	return		;funcret
 13397  003620                     __end_of_getSensors:
 13398                           	opt stack 0
 13399                           tblptru	equ	0xFF8
 13400                           tblptrh	equ	0xFF7
 13401                           tblptrl	equ	0xFF6
 13402                           tablat	equ	0xFF5
 13403                           prodh	equ	0xFF4
 13404                           prodl	equ	0xFF3
 13405                           intcon	equ	0xFF2
 13406                           intcon2	equ	0xFF1
 13407                           intcon3	equ	0xFF0
 13408                           postinc0	equ	0xFEE
 13409                           wreg	equ	0xFE8
 13410                           postdec1	equ	0xFE5
 13411                           fsr1l	equ	0xFE1
 13412                           indf2	equ	0xFDF
 13413                           postinc2	equ	0xFDE
 13414                           postdec2	equ	0xFDD
 13415                           fsr2h	equ	0xFDA
 13416                           fsr2l	equ	0xFD9
 13417                           status	equ	0xFD8
 13418                           
 13419 ;; *************** function _readADC *****************
 13420 ;; Defined at:
 13421 ;;		line 10 in file "src/ADC.h"
 13422 ;; Parameters:    Size  Location     Type
 13423 ;;  canal           1    wreg     unsigned char 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;  canal           1    8[BANK0 ] unsigned char 
 13426 ;;  digital         2    6[BANK0 ] int 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  2    0[BANK0 ] unsigned int 
 13429 ;; Registers used:
 13430 ;;		wreg, status,2, status,0
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13436 ;;      Params:         0       2       0       0       0       0       0       0       0
 13437 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13438 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13439 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13440 ;;Total ram usage:        9 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    6
 13443 ;; This function calls:
 13444 ;;		Nothing
 13445 ;; This function is called by:
 13446 ;;		_getSensors
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text9
 13451  00523E                     __ptext9:
 13452                           	opt stack 0
 13453  00523E                     _readADC:
 13454                           	opt stack 23
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;incstack = 0
 13458                           ;readADC@canal stored from wreg
 13459  00523E  0100               	movlb	0	; () banked
 13460  005240  6F68               	movwf	readADC@canal& (0+255),b
 13461                           
 13462                           ;ADC.h: 11: ADRESH = 0;
 13463  005242  0E00               	movlw	0
 13464  005244  6EC4               	movwf	4036,c	;volatile
 13465                           
 13466                           ;ADC.h: 12: ADRESL = 0;
 13467  005246  0E00               	movlw	0
 13468  005248  6EC3               	movwf	4035,c	;volatile
 13469                           
 13470                           ;ADC.h: 13: int digital;
 13471                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13472  00524A  C068  F062         	movff	readADC@canal,??_readADC
 13473  00524E  0100               	movlb	0	; () banked
 13474  005250  90D8               	bcf	status,0,c
 13475  005252  3762               	rlcf	??_readADC& (0+255),f,b
 13476  005254  90D8               	bcf	status,0,c
 13477  005256  3762               	rlcf	??_readADC& (0+255),f,b
 13478  005258  0E3C               	movlw	60
 13479  00525A  1762               	andwf	??_readADC& (0+255),f,b
 13480  00525C  50C2               	movf	4034,w,c	;volatile
 13481  00525E  0BC3               	andlw	195
 13482  005260  1162               	iorwf	??_readADC& (0+255),w,b
 13483  005262  6EC2               	movwf	4034,c	;volatile
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13487  005264  0E14               	movlw	20
 13488  005266                     u15377:
 13489  005266  2EE8               	decfsz	wreg,f,c
 13490  005268  D7FE               	bra	u15377
 13491                           
 13492                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13493  00526A  A2C2               	btfss	4034,1,c	;volatile
 13494  00526C  D004               	goto	u11980
 13495  00526E  0100               	movlb	0	; () banked
 13496  005270  6B62               	clrf	??_readADC& (0+255),b
 13497  005272  2B62               	incf	??_readADC& (0+255),f,b
 13498  005274  D002               	goto	u11998
 13499  005276                     u11980:
 13500  005276  0100               	movlb	0	; () banked
 13501  005278  6B62               	clrf	??_readADC& (0+255),b
 13502  00527A                     u11998:
 13503  00527A  0E01               	movlw	1
 13504  00527C  6F63               	movwf	(??_readADC+1)& (0+255),b
 13505  00527E  2B62               	incf	??_readADC& (0+255),f,b
 13506  005280  D002               	goto	u12004
 13507  005282                     u12005:
 13508  005282  90D8               	bcf	status,0,c
 13509  005284  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13510  005286                     u12004:
 13511  005286  2F62               	decfsz	??_readADC& (0+255),f,b
 13512  005288  D7FC               	goto	u12005
 13513  00528A  A0C2               	btfss	4034,0,c	;volatile
 13514  00528C  D004               	goto	u12010
 13515  00528E  0100               	movlb	0	; () banked
 13516  005290  6B64               	clrf	(??_readADC+2)& (0+255),b
 13517  005292  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13518  005294  D002               	goto	u12028
 13519  005296                     u12010:
 13520  005296  0100               	movlb	0	; () banked
 13521  005298  6B64               	clrf	(??_readADC+2)& (0+255),b
 13522  00529A                     u12028:
 13523  00529A  0E01               	movlw	1
 13524  00529C  6F65               	movwf	(??_readADC+3)& (0+255),b
 13525  00529E  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13526  0052A0  D002               	goto	u12034
 13527  0052A2                     u12035:
 13528  0052A2  90D8               	bcf	status,0,c
 13529  0052A4  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13530  0052A6                     u12034:
 13531  0052A6  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13532  0052A8  D7FC               	goto	u12035
 13533  0052AA  0100               	movlb	0	; () banked
 13534  0052AC  5165               	movf	(??_readADC+3)& (0+255),w,b
 13535  0052AE  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13536  0052B0  12C2               	iorwf	4034,f,c	;volatile
 13537  0052B2                     
 13538                           ; BSR set to: 0
 13539  0052B2  B2C2               	btfsc	4034,1,c	;volatile
 13540  0052B4  D7FE               	goto	l1219
 13541                           
 13542                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13543  0052B6  50C3               	movf	4035,w,c	;volatile
 13544  0052B8  CFC4 F062          	movff	4036,??_readADC	;volatile
 13545  0052BC  0100               	movlb	0	; () banked
 13546  0052BE  6B63               	clrf	(??_readADC+1)& (0+255),b
 13547  0052C0  C062  F063         	movff	??_readADC,??_readADC+1
 13548  0052C4  6B62               	clrf	??_readADC& (0+255),b
 13549  0052C6  1162               	iorwf	??_readADC& (0+255),w,b
 13550  0052C8  6F66               	movwf	readADC@digital& (0+255),b
 13551  0052CA  5163               	movf	(??_readADC+1)& (0+255),w,b
 13552  0052CC  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;ADC.h: 19: return (digital);
 13556  0052CE  C066  F060         	movff	readADC@digital,?_readADC
 13557  0052D2  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13558  0052D6  0012               	return	
 13559  0052D8                     __end_of_readADC:
 13560                           	opt stack 0
 13561                           tblptru	equ	0xFF8
 13562                           tblptrh	equ	0xFF7
 13563                           tblptrl	equ	0xFF6
 13564                           tablat	equ	0xFF5
 13565                           prodh	equ	0xFF4
 13566                           prodl	equ	0xFF3
 13567                           intcon	equ	0xFF2
 13568                           intcon2	equ	0xFF1
 13569                           intcon3	equ	0xFF0
 13570                           postinc0	equ	0xFEE
 13571                           wreg	equ	0xFE8
 13572                           postdec1	equ	0xFE5
 13573                           fsr1l	equ	0xFE1
 13574                           indf2	equ	0xFDF
 13575                           postinc2	equ	0xFDE
 13576                           postdec2	equ	0xFDD
 13577                           fsr2h	equ	0xFDA
 13578                           fsr2l	equ	0xFD9
 13579                           status	equ	0xFD8
 13580                           
 13581 ;; *************** function ___lwtoft *****************
 13582 ;; Defined at:
 13583 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  c               2    9[BANK0 ] unsigned int 
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;		None
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  3    9[BANK0 ] float 
 13590 ;; Registers used:
 13591 ;;		wreg, status,2, status,0, cstack
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13597 ;;      Params:         0       3       0       0       0       0       0       0       0
 13598 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13600 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13601 ;;Total ram usage:        3 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:    7
 13604 ;; This function calls:
 13605 ;;		___ftpack
 13606 ;; This function is called by:
 13607 ;;		_getSensors
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           	psect	text10
 13612  005DA2                     __ptext10:
 13613                           	opt stack 0
 13614  005DA2                     ___lwtoft:
 13615                           	opt stack 22
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;incstack = 0
 13619  005DA2  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13620  005DA6  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13621  005DAA  0100               	movlb	0	; () banked
 13622  005DAC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13623  005DAE  0E8E               	movlw	142
 13624  005DB0  6F63               	movwf	___ftpack@exp& (0+255),b
 13625  005DB2  0E00               	movlw	0
 13626  005DB4  6F64               	movwf	___ftpack@sign& (0+255),b
 13627  005DB6  ECD1  F027         	call	___ftpack	;wreg free
 13628  005DBA  C060  F069         	movff	?___ftpack,?___lwtoft
 13629  005DBE  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13630  005DC2  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13631  005DC6  0012               	return	
 13632  005DC8                     __end_of___lwtoft:
 13633                           	opt stack 0
 13634                           tblptru	equ	0xFF8
 13635                           tblptrh	equ	0xFF7
 13636                           tblptrl	equ	0xFF6
 13637                           tablat	equ	0xFF5
 13638                           prodh	equ	0xFF4
 13639                           prodl	equ	0xFF3
 13640                           intcon	equ	0xFF2
 13641                           intcon2	equ	0xFF1
 13642                           intcon3	equ	0xFF0
 13643                           postinc0	equ	0xFEE
 13644                           wreg	equ	0xFE8
 13645                           postdec1	equ	0xFE5
 13646                           fsr1l	equ	0xFE1
 13647                           indf2	equ	0xFDF
 13648                           postinc2	equ	0xFDE
 13649                           postdec2	equ	0xFDD
 13650                           fsr2h	equ	0xFDA
 13651                           fsr2l	equ	0xFD9
 13652                           status	equ	0xFD8
 13653                           
 13654 ;; *************** function ___fttol *****************
 13655 ;; Defined at:
 13656 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  f1              3   54[BANK0 ] float 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  lval            4   64[BANK0 ] unsigned long 
 13661 ;;  exp1            1   68[BANK0 ] unsigned char 
 13662 ;;  sign1           1   63[BANK0 ] unsigned char 
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  4   54[BANK0 ] long 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13672 ;;      Params:         0       4       0       0       0       0       0       0       0
 13673 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13674 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13675 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13676 ;;Total ram usage:       15 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    6
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_getSensors
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text11
 13687  004998                     __ptext11:
 13688                           	opt stack 0
 13689  004998                     ___fttol:
 13690                           	opt stack 23
 13691                           
 13692                           ;incstack = 0
 13693  004998  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13694  00499C  0100               	movlb	0	; () banked
 13695  00499E  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13696  0049A0  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13697  0049A2  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13698  0049A4  379A               	rlcf	??___fttol& (0+255),f,b
 13699  0049A6  E301               	bnc	u12401
 13700  0049A8  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13701  0049AA                     u12401:
 13702  0049AA  519A               	movf	??___fttol& (0+255),w,b
 13703  0049AC  6FA4               	movwf	___fttol@exp1& (0+255),b
 13704  0049AE  51A4               	movf	___fttol@exp1& (0+255),w,b
 13705  0049B0  A4D8               	btfss	status,2,c
 13706  0049B2  D009               	goto	l1909
 13707                           
 13708                           ; BSR set to: 0
 13709  0049B4  0E00               	movlw	0
 13710  0049B6  6F96               	movwf	?___fttol& (0+255),b
 13711  0049B8  0E00               	movlw	0
 13712  0049BA  6F97               	movwf	(?___fttol+1)& (0+255),b
 13713  0049BC  0E00               	movlw	0
 13714  0049BE  6F98               	movwf	(?___fttol+2)& (0+255),b
 13715  0049C0  0E00               	movlw	0
 13716  0049C2  6F99               	movwf	(?___fttol+3)& (0+255),b
 13717                           
 13718                           ; BSR set to: 0
 13719  0049C4  0012               	return	
 13720  0049C6                     l1909:
 13721                           
 13722                           ; BSR set to: 0
 13723                           
 13724                           ; BSR set to: 0
 13725  0049C6  0E17               	movlw	23
 13726  0049C8  6F9A               	movwf	??___fttol& (0+255),b
 13727  0049CA  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13728  0049CE  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13729  0049D2  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13730  0049D6  299A               	incf	??___fttol& (0+255),w,b
 13731  0049D8  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13732  0049DA  D004               	goto	u12420
 13733  0049DC                     u12425:
 13734  0049DC  90D8               	bcf	status,0,c
 13735  0049DE  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13736  0049E0  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13737  0049E2  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13738  0049E4                     u12420:
 13739  0049E4  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13740  0049E6  D7FA               	goto	u12425
 13741  0049E8  0100               	movlb	0	; () banked
 13742  0049EA  519B               	movf	(??___fttol+1)& (0+255),w,b
 13743  0049EC  6F9F               	movwf	___fttol@sign1& (0+255),b
 13744                           
 13745                           ; BSR set to: 0
 13746  0049EE  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13747                           
 13748                           ; BSR set to: 0
 13749  0049F0  0EFF               	movlw	255
 13750  0049F2  1796               	andwf	___fttol@f1& (0+255),f,b
 13751  0049F4  0EFF               	movlw	255
 13752  0049F6  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13753  0049F8  0E00               	movlw	0
 13754  0049FA  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 0
 13757  0049FC  5196               	movf	___fttol@f1& (0+255),w,b
 13758  0049FE  6FA0               	movwf	___fttol@lval& (0+255),b
 13759  004A00  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13760  004A02  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13761  004A04  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13762  004A06  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13763  004A08  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13764                           
 13765                           ; BSR set to: 0
 13766  004A0A  0E8E               	movlw	142
 13767  004A0C  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13768                           
 13769                           ; BSR set to: 0
 13770  004A0E  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13771  004A10  D016               	goto	l1911
 13772                           
 13773                           ; BSR set to: 0
 13774  004A12  51A4               	movf	___fttol@exp1& (0+255),w,b
 13775  004A14  0A80               	xorlw	128
 13776  004A16  0F8F               	addlw	143
 13777  004A18  B0D8               	btfsc	status,0,c
 13778  004A1A  D009               	goto	l1912
 13779                           
 13780                           ; BSR set to: 0
 13781  004A1C  0E00               	movlw	0
 13782  004A1E  6F96               	movwf	?___fttol& (0+255),b
 13783  004A20  0E00               	movlw	0
 13784  004A22  6F97               	movwf	(?___fttol+1)& (0+255),b
 13785  004A24  0E00               	movlw	0
 13786  004A26  6F98               	movwf	(?___fttol+2)& (0+255),b
 13787  004A28  0E00               	movlw	0
 13788  004A2A  6F99               	movwf	(?___fttol+3)& (0+255),b
 13789                           
 13790                           ; BSR set to: 0
 13791  004A2C  0012               	return	
 13792  004A2E                     l1912:
 13793                           
 13794                           ; BSR set to: 0
 13795                           
 13796                           ; BSR set to: 0
 13797                           
 13798                           ; BSR set to: 0
 13799  004A2E  90D8               	bcf	status,0,c
 13800  004A30  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13801  004A32  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13802  004A34  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13803  004A36  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13804                           
 13805                           ; BSR set to: 0
 13806  004A38  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13807  004A3A  D7F9               	goto	l1912
 13808                           
 13809                           ; BSR set to: 0
 13810  004A3C  D015               	goto	u12460
 13811  004A3E                     l1911:
 13812                           
 13813                           ; BSR set to: 0
 13814                           
 13815                           ; BSR set to: 0
 13816  004A3E  0E17               	movlw	23
 13817  004A40  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13818  004A42  D00F               	goto	l1917
 13819                           
 13820                           ; BSR set to: 0
 13821  004A44  0E00               	movlw	0
 13822  004A46  6F96               	movwf	?___fttol& (0+255),b
 13823  004A48  0E00               	movlw	0
 13824  004A4A  6F97               	movwf	(?___fttol+1)& (0+255),b
 13825  004A4C  0E00               	movlw	0
 13826  004A4E  6F98               	movwf	(?___fttol+2)& (0+255),b
 13827  004A50  0E00               	movlw	0
 13828  004A52  6F99               	movwf	(?___fttol+3)& (0+255),b
 13829                           
 13830                           ; BSR set to: 0
 13831  004A54  0012               	return	
 13832  004A56                     
 13833                           ; BSR set to: 0
 13834                           
 13835                           ; BSR set to: 0
 13836  004A56  90D8               	bcf	status,0,c
 13837  004A58  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13838  004A5A  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13839  004A5C  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13840  004A5E  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13841  004A60  07A4               	decf	___fttol@exp1& (0+255),f,b
 13842  004A62                     l1917:
 13843                           
 13844                           ; BSR set to: 0
 13845                           
 13846                           ; BSR set to: 0
 13847  004A62  51A4               	movf	___fttol@exp1& (0+255),w,b
 13848  004A64  A4D8               	btfss	status,2,c
 13849  004A66  D7F7               	goto	l1918
 13850  004A68                     u12460:
 13851                           
 13852                           ; BSR set to: 0
 13853                           
 13854                           ; BSR set to: 0
 13855                           
 13856                           ; BSR set to: 0
 13857  004A68  519F               	movf	___fttol@sign1& (0+255),w,b
 13858  004A6A  B4D8               	btfsc	status,2,c
 13859  004A6C  D008               	goto	l1920
 13860                           
 13861                           ; BSR set to: 0
 13862  004A6E  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13863  004A70  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13864  004A72  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13865  004A74  6DA0               	negf	___fttol@lval& (0+255),b
 13866  004A76  0E00               	movlw	0
 13867  004A78  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13868  004A7A  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13869  004A7C  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13870  004A7E                     l1920:
 13871                           
 13872                           ; BSR set to: 0
 13873                           
 13874                           ; BSR set to: 0
 13875  004A7E  C0A0  F096         	movff	___fttol@lval,?___fttol
 13876  004A82  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13877  004A86  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13878  004A8A  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13879  004A8E  0012               	return	
 13880  004A90                     __end_of___fttol:
 13881                           	opt stack 0
 13882                           tblptru	equ	0xFF8
 13883                           tblptrh	equ	0xFF7
 13884                           tblptrl	equ	0xFF6
 13885                           tablat	equ	0xFF5
 13886                           prodh	equ	0xFF4
 13887                           prodl	equ	0xFF3
 13888                           intcon	equ	0xFF2
 13889                           intcon2	equ	0xFF1
 13890                           intcon3	equ	0xFF0
 13891                           postinc0	equ	0xFEE
 13892                           wreg	equ	0xFE8
 13893                           postdec1	equ	0xFE5
 13894                           fsr1l	equ	0xFE1
 13895                           indf2	equ	0xFDF
 13896                           postinc2	equ	0xFDE
 13897                           postdec2	equ	0xFDD
 13898                           fsr2h	equ	0xFDA
 13899                           fsr2l	equ	0xFD9
 13900                           status	equ	0xFD8
 13901                           
 13902 ;; *************** function ___ftmul *****************
 13903 ;; Defined at:
 13904 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13905 ;; Parameters:    Size  Location     Type
 13906 ;;  f1              3   12[BANK0 ] float 
 13907 ;;  f2              3   15[BANK0 ] float 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13910 ;;  sign            1   26[BANK0 ] unsigned char 
 13911 ;;  cntr            1   25[BANK0 ] unsigned char 
 13912 ;;  exp             1   21[BANK0 ] unsigned char 
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  3   12[BANK0 ] float 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2, status,0, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13922 ;;      Params:         0       6       0       0       0       0       0       0       0
 13923 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13924 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13925 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13926 ;;Total ram usage:       15 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    7
 13929 ;; This function calls:
 13930 ;;		___ftpack
 13931 ;; This function is called by:
 13932 ;;		_getSensors
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text12
 13937  004A90                     __ptext12:
 13938                           	opt stack 0
 13939  004A90                     ___ftmul:
 13940                           	opt stack 22
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;incstack = 0
 13944  004A90  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13945  004A94  0100               	movlb	0	; () banked
 13946  004A96  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13947  004A98  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13948  004A9A  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13949  004A9C  3772               	rlcf	??___ftmul& (0+255),f,b
 13950  004A9E  E301               	bnc	u12311
 13951  004AA0  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13952  004AA2                     u12311:
 13953  004AA2  5172               	movf	??___ftmul& (0+255),w,b
 13954  004AA4  6F75               	movwf	___ftmul@exp& (0+255),b
 13955  004AA6  5175               	movf	___ftmul@exp& (0+255),w,b
 13956  004AA8  A4D8               	btfss	status,2,c
 13957  004AAA  D007               	goto	l1888
 13958                           
 13959                           ; BSR set to: 0
 13960  004AAC  0E00               	movlw	0
 13961  004AAE  6F6C               	movwf	?___ftmul& (0+255),b
 13962  004AB0  0E00               	movlw	0
 13963  004AB2  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13964  004AB4  0E00               	movlw	0
 13965  004AB6  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13966                           
 13967                           ; BSR set to: 0
 13968  004AB8  0012               	return	
 13969  004ABA                     l1888:
 13970                           
 13971                           ; BSR set to: 0
 13972                           
 13973                           ; BSR set to: 0
 13974  004ABA  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13975  004ABE  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13976  004AC0  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13977  004AC2  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13978  004AC4  3772               	rlcf	??___ftmul& (0+255),f,b
 13979  004AC6  E301               	bnc	u12331
 13980  004AC8  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13981  004ACA                     u12331:
 13982  004ACA  5172               	movf	??___ftmul& (0+255),w,b
 13983  004ACC  6F7A               	movwf	___ftmul@sign& (0+255),b
 13984  004ACE  517A               	movf	___ftmul@sign& (0+255),w,b
 13985  004AD0  A4D8               	btfss	status,2,c
 13986  004AD2  D007               	goto	l1890
 13987                           
 13988                           ; BSR set to: 0
 13989  004AD4  0E00               	movlw	0
 13990  004AD6  6F6C               	movwf	?___ftmul& (0+255),b
 13991  004AD8  0E00               	movlw	0
 13992  004ADA  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13993  004ADC  0E00               	movlw	0
 13994  004ADE  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13995                           
 13996                           ; BSR set to: 0
 13997  004AE0  0012               	return	
 13998  004AE2                     l1890:
 13999                           
 14000                           ; BSR set to: 0
 14001                           
 14002                           ; BSR set to: 0
 14003  004AE2  517A               	movf	___ftmul@sign& (0+255),w,b
 14004  004AE4  0F7B               	addlw	123
 14005  004AE6  2775               	addwf	___ftmul@exp& (0+255),f,b
 14006                           
 14007                           ; BSR set to: 0
 14008  004AE8  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 14009  004AEC  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14010  004AEE  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 14011  004AF0  0E80               	movlw	128
 14012  004AF2  177A               	andwf	___ftmul@sign& (0+255),f,b
 14013                           
 14014                           ; BSR set to: 0
 14015  004AF4  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14016                           
 14017                           ; BSR set to: 0
 14018  004AF6  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14019                           
 14020                           ; BSR set to: 0
 14021  004AF8  0EFF               	movlw	255
 14022  004AFA  176F               	andwf	___ftmul@f2& (0+255),f,b
 14023  004AFC  0EFF               	movlw	255
 14024  004AFE  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14025  004B00  0E00               	movlw	0
 14026  004B02  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14027                           
 14028                           ; BSR set to: 0
 14029  004B04  0E00               	movlw	0
 14030  004B06  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 14031  004B08  0E00               	movlw	0
 14032  004B0A  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14033  004B0C  0E00               	movlw	0
 14034  004B0E  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14035                           
 14036                           ; BSR set to: 0
 14037  004B10  0E07               	movlw	7
 14038  004B12  6F79               	movwf	___ftmul@cntr& (0+255),b
 14039  004B14                     
 14040                           ; BSR set to: 0
 14041                           
 14042                           ; BSR set to: 0
 14043  004B14  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14044  004B16  D006               	goto	l1892
 14045                           
 14046                           ; BSR set to: 0
 14047  004B18  516F               	movf	___ftmul@f2& (0+255),w,b
 14048  004B1A  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14049  004B1C  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14050  004B1E  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14051  004B20  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14052  004B22  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14053  004B24                     l1892:
 14054                           
 14055                           ; BSR set to: 0
 14056                           
 14057                           ; BSR set to: 0
 14058  004B24  90D8               	bcf	status,0,c
 14059  004B26  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14060  004B28  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14061  004B2A  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14062  004B2C  90D8               	bcf	status,0,c
 14063  004B2E  376F               	rlcf	___ftmul@f2& (0+255),f,b
 14064  004B30  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14065  004B32  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14066                           
 14067                           ; BSR set to: 0
 14068  004B34  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14069  004B36  D7EE               	goto	l1891
 14070                           
 14071                           ; BSR set to: 0
 14072                           
 14073                           ; BSR set to: 0
 14074  004B38  0E09               	movlw	9
 14075  004B3A  6F79               	movwf	___ftmul@cntr& (0+255),b
 14076  004B3C                     
 14077                           ; BSR set to: 0
 14078                           
 14079                           ; BSR set to: 0
 14080  004B3C  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14081  004B3E  D006               	goto	l1895
 14082                           
 14083                           ; BSR set to: 0
 14084  004B40  516F               	movf	___ftmul@f2& (0+255),w,b
 14085  004B42  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14086  004B44  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14087  004B46  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14088  004B48  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14089  004B4A  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14090  004B4C                     l1895:
 14091                           
 14092                           ; BSR set to: 0
 14093                           
 14094                           ; BSR set to: 0
 14095  004B4C  90D8               	bcf	status,0,c
 14096  004B4E  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14097  004B50  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14098  004B52  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14099  004B54  90D8               	bcf	status,0,c
 14100  004B56  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14101  004B58  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14102  004B5A  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14103                           
 14104                           ; BSR set to: 0
 14105  004B5C  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14106  004B5E  D7EE               	goto	l1894
 14107                           
 14108                           ; BSR set to: 0
 14109                           
 14110                           ; BSR set to: 0
 14111  004B60  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 14112  004B64  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14113  004B68  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14114  004B6C  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 14115  004B70  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 14116  004B74  ECD1  F027         	call	___ftpack	;wreg free
 14117  004B78  C060  F06C         	movff	?___ftpack,?___ftmul
 14118  004B7C  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 14119  004B80  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 14120  004B84  0012               	return	
 14121  004B86                     __end_of___ftmul:
 14122                           	opt stack 0
 14123                           tblptru	equ	0xFF8
 14124                           tblptrh	equ	0xFF7
 14125                           tblptrl	equ	0xFF6
 14126                           tablat	equ	0xFF5
 14127                           prodh	equ	0xFF4
 14128                           prodl	equ	0xFF3
 14129                           intcon	equ	0xFF2
 14130                           intcon2	equ	0xFF1
 14131                           intcon3	equ	0xFF0
 14132                           postinc0	equ	0xFEE
 14133                           wreg	equ	0xFE8
 14134                           postdec1	equ	0xFE5
 14135                           fsr1l	equ	0xFE1
 14136                           indf2	equ	0xFDF
 14137                           postinc2	equ	0xFDE
 14138                           postdec2	equ	0xFDD
 14139                           fsr2h	equ	0xFDA
 14140                           fsr2l	equ	0xFD9
 14141                           status	equ	0xFD8
 14142                           
 14143 ;; *************** function ___ftge *****************
 14144 ;; Defined at:
 14145 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;  ff1             3    0[BANK0 ] float 
 14148 ;;  ff2             3    3[BANK0 ] float 
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;		None
 14151 ;; Return value:  Size  Location     Type
 14152 ;;		None               void
 14153 ;; Registers used:
 14154 ;;		wreg, status,2, status,0
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14160 ;;      Params:         0       6       0       0       0       0       0       0       0
 14161 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14162 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14163 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14164 ;;Total ram usage:        9 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    6
 14167 ;; This function calls:
 14168 ;;		Nothing
 14169 ;; This function is called by:
 14170 ;;		_getSensors
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text13
 14175  005404                     __ptext13:
 14176                           	opt stack 0
 14177  005404                     ___ftge:
 14178                           	opt stack 23
 14179                           
 14180                           ;incstack = 0
 14181  005404  0100               	movlb	0	; () banked
 14182  005406  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14183  005408  D016               	goto	l1881
 14184                           
 14185                           ; BSR set to: 0
 14186  00540A  C060  F066         	movff	___ftge@ff1,??___ftge
 14187  00540E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 14188  005412  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 14189  005416  1F66               	comf	??___ftge& (0+255),f,b
 14190  005418  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14191  00541A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14192  00541C  2B66               	incf	??___ftge& (0+255),f,b
 14193  00541E  0E00               	movlw	0
 14194  005420  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14195  005422  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14196  005424  0E00               	movlw	0
 14197  005426  2566               	addwf	??___ftge& (0+255),w,b
 14198  005428  6F60               	movwf	___ftge@ff1& (0+255),b
 14199  00542A  0E00               	movlw	0
 14200  00542C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14201  00542E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14202  005430  0E80               	movlw	128
 14203  005432  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14204  005434  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14205  005436                     l1881:
 14206                           
 14207                           ; BSR set to: 0
 14208                           
 14209                           ; BSR set to: 0
 14210  005436  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14211  005438  D016               	goto	l1882
 14212                           
 14213                           ; BSR set to: 0
 14214  00543A  C063  F066         	movff	___ftge@ff2,??___ftge
 14215  00543E  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14216  005442  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14217  005446  1F66               	comf	??___ftge& (0+255),f,b
 14218  005448  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14219  00544A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14220  00544C  2B66               	incf	??___ftge& (0+255),f,b
 14221  00544E  0E00               	movlw	0
 14222  005450  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14223  005452  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14224  005454  0E00               	movlw	0
 14225  005456  2566               	addwf	??___ftge& (0+255),w,b
 14226  005458  6F63               	movwf	___ftge@ff2& (0+255),b
 14227  00545A  0E00               	movlw	0
 14228  00545C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14229  00545E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14230  005460  0E80               	movlw	128
 14231  005462  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14232  005464  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14233  005466                     l1882:
 14234                           
 14235                           ; BSR set to: 0
 14236                           
 14237                           ; BSR set to: 0
 14238  005466  0E00               	movlw	0
 14239  005468  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14240  00546A  0E00               	movlw	0
 14241  00546C  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14242  00546E  0E80               	movlw	128
 14243  005470  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14244                           
 14245                           ; BSR set to: 0
 14246  005472  0E00               	movlw	0
 14247  005474  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14248  005476  0E00               	movlw	0
 14249  005478  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14250  00547A  0E80               	movlw	128
 14251  00547C  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14252  00547E  5163               	movf	___ftge@ff2& (0+255),w,b
 14253  005480  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14254  005482  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14255  005484  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14256  005486  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14257  005488  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14258  00548A  B0D8               	btfsc	status,0,c
 14259  00548C  D002               	goto	l6147
 14260                           
 14261                           ; BSR set to: 0
 14262  00548E  90D8               	bcf	status,0,c
 14263  005490  0012               	return	
 14264  005492                     l6147:
 14265                           
 14266                           ; BSR set to: 0
 14267                           
 14268                           ; BSR set to: 0
 14269  005492  80D8               	bsf	status,0,c
 14270                           
 14271                           ; BSR set to: 0
 14272  005494  0012               	return	
 14273  005496                     __end_of___ftge:
 14274                           	opt stack 0
 14275                           tblptru	equ	0xFF8
 14276                           tblptrh	equ	0xFF7
 14277                           tblptrl	equ	0xFF6
 14278                           tablat	equ	0xFF5
 14279                           prodh	equ	0xFF4
 14280                           prodl	equ	0xFF3
 14281                           intcon	equ	0xFF2
 14282                           intcon2	equ	0xFF1
 14283                           intcon3	equ	0xFF0
 14284                           postinc0	equ	0xFEE
 14285                           wreg	equ	0xFE8
 14286                           postdec1	equ	0xFE5
 14287                           fsr1l	equ	0xFE1
 14288                           indf2	equ	0xFDF
 14289                           postinc2	equ	0xFDE
 14290                           postdec2	equ	0xFDD
 14291                           fsr2h	equ	0xFDA
 14292                           fsr2l	equ	0xFD9
 14293                           status	equ	0xFD8
 14294                           
 14295 ;; *************** function ___ftdiv *****************
 14296 ;; Defined at:
 14297 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;  f1              3   39[BANK0 ] float 
 14300 ;;  f2              3   42[BANK0 ] float 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  f3              3   49[BANK0 ] float 
 14303 ;;  sign            1   53[BANK0 ] unsigned char 
 14304 ;;  exp             1   52[BANK0 ] unsigned char 
 14305 ;;  cntr            1   48[BANK0 ] unsigned char 
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  3   39[BANK0 ] float 
 14308 ;; Registers used:
 14309 ;;		wreg, status,2, status,0, cstack
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/0
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14315 ;;      Params:         0       6       0       0       0       0       0       0       0
 14316 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14317 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14318 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14319 ;;Total ram usage:       15 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:    7
 14322 ;; This function calls:
 14323 ;;		___ftpack
 14324 ;; This function is called by:
 14325 ;;		_getSensors
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text14
 14330  004C70                     __ptext14:
 14331                           	opt stack 0
 14332  004C70                     ___ftdiv:
 14333                           	opt stack 22
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;incstack = 0
 14337  004C70  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14338  004C74  0100               	movlb	0	; () banked
 14339  004C76  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14340  004C78  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14341  004C7A  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14342  004C7C  378D               	rlcf	??___ftdiv& (0+255),f,b
 14343  004C7E  E301               	bnc	u12261
 14344  004C80  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14345  004C82                     u12261:
 14346  004C82  518D               	movf	??___ftdiv& (0+255),w,b
 14347  004C84  6F94               	movwf	___ftdiv@exp& (0+255),b
 14348  004C86  5194               	movf	___ftdiv@exp& (0+255),w,b
 14349  004C88  A4D8               	btfss	status,2,c
 14350  004C8A  D007               	goto	l1873
 14351                           
 14352                           ; BSR set to: 0
 14353  004C8C  0E00               	movlw	0
 14354  004C8E  6F87               	movwf	?___ftdiv& (0+255),b
 14355  004C90  0E00               	movlw	0
 14356  004C92  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14357  004C94  0E00               	movlw	0
 14358  004C96  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14359                           
 14360                           ; BSR set to: 0
 14361  004C98  0012               	return	
 14362  004C9A                     l1873:
 14363                           
 14364                           ; BSR set to: 0
 14365                           
 14366                           ; BSR set to: 0
 14367  004C9A  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14368  004C9E  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14369  004CA0  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14370  004CA2  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14371  004CA4  378D               	rlcf	??___ftdiv& (0+255),f,b
 14372  004CA6  E301               	bnc	u12281
 14373  004CA8  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14374  004CAA                     u12281:
 14375  004CAA  518D               	movf	??___ftdiv& (0+255),w,b
 14376  004CAC  6F95               	movwf	___ftdiv@sign& (0+255),b
 14377  004CAE  5195               	movf	___ftdiv@sign& (0+255),w,b
 14378  004CB0  A4D8               	btfss	status,2,c
 14379  004CB2  D007               	goto	l1875
 14380                           
 14381                           ; BSR set to: 0
 14382  004CB4  0E00               	movlw	0
 14383  004CB6  6F87               	movwf	?___ftdiv& (0+255),b
 14384  004CB8  0E00               	movlw	0
 14385  004CBA  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14386  004CBC  0E00               	movlw	0
 14387  004CBE  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14388                           
 14389                           ; BSR set to: 0
 14390  004CC0  0012               	return	
 14391  004CC2                     l1875:
 14392                           
 14393                           ; BSR set to: 0
 14394                           
 14395                           ; BSR set to: 0
 14396  004CC2  0E00               	movlw	0
 14397  004CC4  6F91               	movwf	___ftdiv@f3& (0+255),b
 14398  004CC6  0E00               	movlw	0
 14399  004CC8  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14400  004CCA  0E00               	movlw	0
 14401  004CCC  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14402                           
 14403                           ; BSR set to: 0
 14404  004CCE  5195               	movf	___ftdiv@sign& (0+255),w,b
 14405  004CD0  0F89               	addlw	137
 14406  004CD2  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14407                           
 14408                           ; BSR set to: 0
 14409  004CD4  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14410                           
 14411                           ; BSR set to: 0
 14412  004CD8  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14413  004CDA  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14414                           
 14415                           ; BSR set to: 0
 14416  004CDC  0E80               	movlw	128
 14417  004CDE  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14418                           
 14419                           ; BSR set to: 0
 14420  004CE0  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14421                           
 14422                           ; BSR set to: 0
 14423  004CE2  0EFF               	movlw	255
 14424  004CE4  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14425  004CE6  0EFF               	movlw	255
 14426  004CE8  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14427  004CEA  0E00               	movlw	0
 14428  004CEC  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14429                           
 14430                           ; BSR set to: 0
 14431  004CEE  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14432                           
 14433                           ; BSR set to: 0
 14434  004CF0  0EFF               	movlw	255
 14435  004CF2  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14436  004CF4  0EFF               	movlw	255
 14437  004CF6  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14438  004CF8  0E00               	movlw	0
 14439  004CFA  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14440                           
 14441                           ; BSR set to: 0
 14442  004CFC  0E18               	movlw	24
 14443  004CFE  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14444  004D00                     
 14445                           ; BSR set to: 0
 14446                           
 14447                           ; BSR set to: 0
 14448  004D00  90D8               	bcf	status,0,c
 14449  004D02  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14450  004D04  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14451  004D06  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14452                           
 14453                           ; BSR set to: 0
 14454  004D08  518A               	movf	___ftdiv@f2& (0+255),w,b
 14455  004D0A  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14456  004D0C  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14457  004D0E  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14458  004D10  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14459  004D12  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14460  004D14  A0D8               	btfss	status,0,c
 14461  004D16  D007               	goto	l1877
 14462                           
 14463                           ; BSR set to: 0
 14464  004D18  518A               	movf	___ftdiv@f2& (0+255),w,b
 14465  004D1A  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14466  004D1C  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14467  004D1E  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14468  004D20  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14469  004D22  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14470                           
 14471                           ; BSR set to: 0
 14472  004D24  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14473  004D26                     l1877:
 14474                           
 14475                           ; BSR set to: 0
 14476  004D26  90D8               	bcf	status,0,c
 14477  004D28  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14478  004D2A  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14479  004D2C  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14480                           
 14481                           ; BSR set to: 0
 14482  004D2E  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14483  004D30  D7E7               	goto	l1876
 14484                           
 14485                           ; BSR set to: 0
 14486                           
 14487                           ; BSR set to: 0
 14488  004D32  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14489  004D36  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14490  004D3A  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14491  004D3E  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14492  004D42  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14493  004D46  ECD1  F027         	call	___ftpack	;wreg free
 14494  004D4A  C060  F087         	movff	?___ftpack,?___ftdiv
 14495  004D4E  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14496  004D52  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14497  004D56  0012               	return	
 14498  004D58                     __end_of___ftdiv:
 14499                           	opt stack 0
 14500                           tblptru	equ	0xFF8
 14501                           tblptrh	equ	0xFF7
 14502                           tblptrl	equ	0xFF6
 14503                           tablat	equ	0xFF5
 14504                           prodh	equ	0xFF4
 14505                           prodl	equ	0xFF3
 14506                           intcon	equ	0xFF2
 14507                           intcon2	equ	0xFF1
 14508                           intcon3	equ	0xFF0
 14509                           postinc0	equ	0xFEE
 14510                           wreg	equ	0xFE8
 14511                           postdec1	equ	0xFE5
 14512                           fsr1l	equ	0xFE1
 14513                           indf2	equ	0xFDF
 14514                           postinc2	equ	0xFDE
 14515                           postdec2	equ	0xFDD
 14516                           fsr2h	equ	0xFDA
 14517                           fsr2l	equ	0xFD9
 14518                           status	equ	0xFD8
 14519                           
 14520 ;; *************** function ___ftadd *****************
 14521 ;; Defined at:
 14522 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14523 ;; Parameters:    Size  Location     Type
 14524 ;;  f1              3   27[BANK0 ] float 
 14525 ;;  f2              3   30[BANK0 ] float 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  exp1            1   38[BANK0 ] unsigned char 
 14528 ;;  exp2            1   37[BANK0 ] unsigned char 
 14529 ;;  sign            1   36[BANK0 ] unsigned char 
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  3   27[BANK0 ] float 
 14532 ;; Registers used:
 14533 ;;		wreg, status,2, status,0, cstack
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14539 ;;      Params:         0       6       0       0       0       0       0       0       0
 14540 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14541 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14542 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14543 ;;Total ram usage:       12 bytes
 14544 ;; Hardware stack levels used:    1
 14545 ;; Hardware stack levels required when called:    7
 14546 ;; This function calls:
 14547 ;;		___ftpack
 14548 ;; This function is called by:
 14549 ;;		_getSensors
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text15
 14554  0041CA                     __ptext15:
 14555                           	opt stack 0
 14556  0041CA                     ___ftadd:
 14557                           	opt stack 22
 14558                           
 14559                           ;incstack = 0
 14560  0041CA  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14561  0041CE  0100               	movlb	0	; () banked
 14562  0041D0  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14563  0041D2  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14564  0041D4  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14565  0041D6  3781               	rlcf	??___ftadd& (0+255),f,b
 14566  0041D8  E301               	bnc	u12051
 14567  0041DA  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14568  0041DC                     u12051:
 14569  0041DC  5181               	movf	??___ftadd& (0+255),w,b
 14570  0041DE  6F86               	movwf	___ftadd@exp1& (0+255),b
 14571  0041E0  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14572  0041E4  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14573  0041E6  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14574  0041E8  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14575  0041EA  3781               	rlcf	??___ftadd& (0+255),f,b
 14576  0041EC  E301               	bnc	u12061
 14577  0041EE  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14578  0041F0                     u12061:
 14579  0041F0  5181               	movf	??___ftadd& (0+255),w,b
 14580  0041F2  6F85               	movwf	___ftadd@exp2& (0+255),b
 14581                           
 14582                           ; BSR set to: 0
 14583  0041F4  5186               	movf	___ftadd@exp1& (0+255),w,b
 14584  0041F6  B4D8               	btfsc	status,2,c
 14585  0041F8  D00B               	goto	u12090
 14586                           
 14587                           ; BSR set to: 0
 14588  0041FA  5185               	movf	___ftadd@exp2& (0+255),w,b
 14589  0041FC  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14590  0041FE  B0D8               	btfsc	status,0,c
 14591  004200  D00E               	goto	l1840
 14592                           
 14593                           ; BSR set to: 0
 14594  004202  5186               	movf	___ftadd@exp1& (0+255),w,b
 14595  004204  0800               	sublw	0
 14596  004206  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14597  004208  6F81               	movwf	??___ftadd& (0+255),b
 14598  00420A  0E18               	movlw	24
 14599  00420C  6581               	cpfsgt	??___ftadd& (0+255),b
 14600  00420E  D007               	goto	l1840
 14601  004210                     u12090:
 14602                           
 14603                           ; BSR set to: 0
 14604  004210  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14605  004214  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14606  004218  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14607  00421C  0012               	return	
 14608  00421E                     l1840:
 14609                           
 14610                           ; BSR set to: 0
 14611                           
 14612                           ; BSR set to: 0
 14613  00421E  5185               	movf	___ftadd@exp2& (0+255),w,b
 14614  004220  B4D8               	btfsc	status,2,c
 14615  004222  D00B               	goto	u12120
 14616                           
 14617                           ; BSR set to: 0
 14618  004224  5186               	movf	___ftadd@exp1& (0+255),w,b
 14619  004226  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14620  004228  B0D8               	btfsc	status,0,c
 14621  00422A  D00E               	goto	l1844
 14622                           
 14623                           ; BSR set to: 0
 14624  00422C  5185               	movf	___ftadd@exp2& (0+255),w,b
 14625  00422E  0800               	sublw	0
 14626  004230  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14627  004232  6F81               	movwf	??___ftadd& (0+255),b
 14628  004234  0E18               	movlw	24
 14629  004236  6581               	cpfsgt	??___ftadd& (0+255),b
 14630  004238  D007               	goto	l1844
 14631  00423A                     u12120:
 14632                           
 14633                           ; BSR set to: 0
 14634  00423A  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14635  00423E  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14636  004242  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14637  004246  0012               	return	
 14638  004248                     l1844:
 14639                           
 14640                           ; BSR set to: 0
 14641                           
 14642                           ; BSR set to: 0
 14643  004248  0E06               	movlw	6
 14644  00424A  6F84               	movwf	___ftadd@sign& (0+255),b
 14645                           
 14646                           ; BSR set to: 0
 14647  00424C  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14648                           
 14649                           ; BSR set to: 0
 14650  00424E  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14651                           
 14652                           ; BSR set to: 0
 14653                           
 14654                           ; BSR set to: 0
 14655  004250  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14656                           
 14657                           ; BSR set to: 0
 14658  004252  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14659                           
 14660                           ; BSR set to: 0
 14661  004254  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14662                           
 14663                           ; BSR set to: 0
 14664  004256  0EFF               	movlw	255
 14665  004258  177B               	andwf	___ftadd@f1& (0+255),f,b
 14666  00425A  0EFF               	movlw	255
 14667  00425C  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14668  00425E  0E00               	movlw	0
 14669  004260  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14670  004262  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14671                           
 14672                           ; BSR set to: 0
 14673  004264  0EFF               	movlw	255
 14674  004266  177E               	andwf	___ftadd@f2& (0+255),f,b
 14675  004268  0EFF               	movlw	255
 14676  00426A  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14677  00426C  0E00               	movlw	0
 14678  00426E  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14679                           
 14680                           ; BSR set to: 0
 14681  004270  5185               	movf	___ftadd@exp2& (0+255),w,b
 14682  004272  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14683  004274  B0D8               	btfsc	status,0,c
 14684  004276  D01B               	goto	l1849
 14685  004278                     u12150:
 14686                           
 14687                           ; BSR set to: 0
 14688                           
 14689                           ; BSR set to: 0
 14690  004278  90D8               	bcf	status,0,c
 14691  00427A  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14692  00427C  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14693  00427E  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14694  004280  0785               	decf	___ftadd@exp2& (0+255),f,b
 14695                           
 14696                           ; BSR set to: 0
 14697  004282  5186               	movf	___ftadd@exp1& (0+255),w,b
 14698  004284  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14699  004286  B4D8               	btfsc	status,2,c
 14700  004288  D00D               	goto	l1854
 14701                           
 14702                           ; BSR set to: 0
 14703  00428A  0784               	decf	___ftadd@sign& (0+255),f,b
 14704  00428C  C084  F081         	movff	___ftadd@sign,??___ftadd
 14705  004290  0E07               	movlw	7
 14706  004292  1781               	andwf	??___ftadd& (0+255),f,b
 14707  004294  B4D8               	btfsc	status,2,c
 14708  004296  D006               	goto	l1854
 14709  004298  D7EF               	goto	u12150
 14710  00429A                     
 14711                           ; BSR set to: 0
 14712                           
 14713                           ; BSR set to: 0
 14714  00429A  90D8               	bcf	status,0,c
 14715  00429C  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14716  00429E  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14717  0042A0  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14718  0042A2  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14719  0042A4                     l1854:
 14720                           
 14721                           ; BSR set to: 0
 14722                           
 14723                           ; BSR set to: 0
 14724  0042A4  5185               	movf	___ftadd@exp2& (0+255),w,b
 14725  0042A6  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14726  0042A8  B4D8               	btfsc	status,2,c
 14727  0042AA  D01F               	goto	u12220
 14728  0042AC  D7F6               	goto	l1855
 14729  0042AE                     l1849:
 14730                           
 14731                           ; BSR set to: 0
 14732                           
 14733                           ; BSR set to: 0
 14734  0042AE  5186               	movf	___ftadd@exp1& (0+255),w,b
 14735  0042B0  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14736  0042B2  B0D8               	btfsc	status,0,c
 14737  0042B4  D01A               	goto	u12220
 14738  0042B6                     u12190:
 14739                           
 14740                           ; BSR set to: 0
 14741                           
 14742                           ; BSR set to: 0
 14743  0042B6  90D8               	bcf	status,0,c
 14744  0042B8  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14745  0042BA  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14746  0042BC  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14747  0042BE  0786               	decf	___ftadd@exp1& (0+255),f,b
 14748                           
 14749                           ; BSR set to: 0
 14750  0042C0  5186               	movf	___ftadd@exp1& (0+255),w,b
 14751  0042C2  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14752  0042C4  B4D8               	btfsc	status,2,c
 14753  0042C6  D00D               	goto	l1863
 14754                           
 14755                           ; BSR set to: 0
 14756  0042C8  0784               	decf	___ftadd@sign& (0+255),f,b
 14757  0042CA  C084  F081         	movff	___ftadd@sign,??___ftadd
 14758  0042CE  0E07               	movlw	7
 14759  0042D0  1781               	andwf	??___ftadd& (0+255),f,b
 14760  0042D2  B4D8               	btfsc	status,2,c
 14761  0042D4  D006               	goto	l1863
 14762  0042D6  D7EF               	goto	u12190
 14763  0042D8                     
 14764                           ; BSR set to: 0
 14765                           
 14766                           ; BSR set to: 0
 14767  0042D8  90D8               	bcf	status,0,c
 14768  0042DA  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14769  0042DC  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14770  0042DE  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14771  0042E0  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14772  0042E2                     l1863:
 14773                           
 14774                           ; BSR set to: 0
 14775                           
 14776                           ; BSR set to: 0
 14777  0042E2  5185               	movf	___ftadd@exp2& (0+255),w,b
 14778  0042E4  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14779  0042E6  A4D8               	btfss	status,2,c
 14780  0042E8  D7F7               	goto	l1864
 14781  0042EA                     u12220:
 14782                           
 14783                           ; BSR set to: 0
 14784                           
 14785                           ; BSR set to: 0
 14786                           
 14787                           ; BSR set to: 0
 14788  0042EA  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14789  0042EC  D00C               	goto	l1866
 14790                           
 14791                           ; BSR set to: 0
 14792  0042EE  0EFF               	movlw	255
 14793  0042F0  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14794  0042F2  0EFF               	movlw	255
 14795  0042F4  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14796  0042F6  0EFF               	movlw	255
 14797  0042F8  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14798  0042FA  0E01               	movlw	1
 14799  0042FC  277B               	addwf	___ftadd@f1& (0+255),f,b
 14800  0042FE  0E00               	movlw	0
 14801  004300  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14802  004302  0E00               	movlw	0
 14803  004304  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14804  004306                     l1866:
 14805                           
 14806                           ; BSR set to: 0
 14807  004306  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14808  004308  D00C               	goto	l1867
 14809                           
 14810                           ; BSR set to: 0
 14811  00430A  0EFF               	movlw	255
 14812  00430C  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14813  00430E  0EFF               	movlw	255
 14814  004310  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14815  004312  0EFF               	movlw	255
 14816  004314  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14817  004316  0E01               	movlw	1
 14818  004318  277E               	addwf	___ftadd@f2& (0+255),f,b
 14819  00431A  0E00               	movlw	0
 14820  00431C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14821  00431E  0E00               	movlw	0
 14822  004320  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14823  004322                     l1867:
 14824                           
 14825                           ; BSR set to: 0
 14826                           
 14827                           ; BSR set to: 0
 14828  004322  0E00               	movlw	0
 14829  004324  6F84               	movwf	___ftadd@sign& (0+255),b
 14830                           
 14831                           ; BSR set to: 0
 14832  004326  517B               	movf	___ftadd@f1& (0+255),w,b
 14833  004328  277E               	addwf	___ftadd@f2& (0+255),f,b
 14834  00432A  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14835  00432C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14836  00432E  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14837  004330  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14838                           
 14839                           ; BSR set to: 0
 14840  004332  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14841  004334  D00E               	goto	l1868
 14842                           
 14843                           ; BSR set to: 0
 14844  004336  0EFF               	movlw	255
 14845  004338  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14846  00433A  0EFF               	movlw	255
 14847  00433C  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14848  00433E  0EFF               	movlw	255
 14849  004340  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14850  004342  0E01               	movlw	1
 14851  004344  277E               	addwf	___ftadd@f2& (0+255),f,b
 14852  004346  0E00               	movlw	0
 14853  004348  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14854  00434A  0E00               	movlw	0
 14855  00434C  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14856                           
 14857                           ; BSR set to: 0
 14858  00434E  0E01               	movlw	1
 14859  004350  6F84               	movwf	___ftadd@sign& (0+255),b
 14860  004352                     l1868:
 14861                           
 14862                           ; BSR set to: 0
 14863                           
 14864                           ; BSR set to: 0
 14865  004352  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14866  004356  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14867  00435A  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14868  00435E  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14869  004362  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14870  004366  ECD1  F027         	call	___ftpack	;wreg free
 14871  00436A  C060  F07B         	movff	?___ftpack,?___ftadd
 14872  00436E  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14873  004372  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14874  004376  0012               	return	
 14875  004378                     __end_of___ftadd:
 14876                           	opt stack 0
 14877                           tblptru	equ	0xFF8
 14878                           tblptrh	equ	0xFF7
 14879                           tblptrl	equ	0xFF6
 14880                           tablat	equ	0xFF5
 14881                           prodh	equ	0xFF4
 14882                           prodl	equ	0xFF3
 14883                           intcon	equ	0xFF2
 14884                           intcon2	equ	0xFF1
 14885                           intcon3	equ	0xFF0
 14886                           postinc0	equ	0xFEE
 14887                           wreg	equ	0xFE8
 14888                           postdec1	equ	0xFE5
 14889                           fsr1l	equ	0xFE1
 14890                           indf2	equ	0xFDF
 14891                           postinc2	equ	0xFDE
 14892                           postdec2	equ	0xFDD
 14893                           fsr2h	equ	0xFDA
 14894                           fsr2l	equ	0xFD9
 14895                           status	equ	0xFD8
 14896                           
 14897 ;; *************** function ___ftpack *****************
 14898 ;; Defined at:
 14899 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  arg             3    0[BANK0 ] unsigned um
 14902 ;;  exp             1    3[BANK0 ] unsigned char 
 14903 ;;  sign            1    4[BANK0 ] unsigned char 
 14904 ;; Auto vars:     Size  Location     Type
 14905 ;;		None
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  3    0[BANK0 ] float 
 14908 ;; Registers used:
 14909 ;;		wreg, status,2, status,0
 14910 ;; Tracked objects:
 14911 ;;		On entry : 0/0
 14912 ;;		On exit  : 0/0
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14915 ;;      Params:         0       5       0       0       0       0       0       0       0
 14916 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14917 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14918 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14919 ;;Total ram usage:        8 bytes
 14920 ;; Hardware stack levels used:    1
 14921 ;; Hardware stack levels required when called:    6
 14922 ;; This function calls:
 14923 ;;		Nothing
 14924 ;; This function is called by:
 14925 ;;		___ftadd
 14926 ;;		___ftdiv
 14927 ;;		___ftmul
 14928 ;;		___lwtoft
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           	psect	text16
 14933  004FA2                     __ptext16:
 14934                           	opt stack 0
 14935  004FA2                     ___ftpack:
 14936                           	opt stack 22
 14937                           
 14938                           ;incstack = 0
 14939  004FA2  0100               	movlb	0	; () banked
 14940  004FA4  5163               	movf	___ftpack@exp& (0+255),w,b
 14941  004FA6  B4D8               	btfsc	status,2,c
 14942  004FA8  D005               	goto	u8640
 14943                           
 14944                           ; BSR set to: 0
 14945  004FAA  5160               	movf	___ftpack@arg& (0+255),w,b
 14946  004FAC  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14947  004FAE  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14948  004FB0  A4D8               	btfss	status,2,c
 14949  004FB2  D00C               	goto	l1809
 14950  004FB4                     u8640:
 14951                           
 14952                           ; BSR set to: 0
 14953                           
 14954                           ; BSR set to: 0
 14955  004FB4  0E00               	movlw	0
 14956  004FB6  6F60               	movwf	?___ftpack& (0+255),b
 14957  004FB8  0E00               	movlw	0
 14958  004FBA  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14959  004FBC  0E00               	movlw	0
 14960  004FBE  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14961                           
 14962                           ; BSR set to: 0
 14963  004FC0  0012               	return	
 14964  004FC2                     
 14965                           ; BSR set to: 0
 14966                           
 14967                           ; BSR set to: 0
 14968  004FC2  2B63               	incf	___ftpack@exp& (0+255),f,b
 14969  004FC4  90D8               	bcf	status,0,c
 14970  004FC6  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14971  004FC8  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14972  004FCA  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14973  004FCC                     l1809:
 14974                           
 14975                           ; BSR set to: 0
 14976                           
 14977                           ; BSR set to: 0
 14978  004FCC  0E00               	movlw	0
 14979  004FCE  1560               	andwf	___ftpack@arg& (0+255),w,b
 14980  004FD0  6F65               	movwf	??___ftpack& (0+255),b
 14981  004FD2  0E00               	movlw	0
 14982  004FD4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14983  004FD6  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14984  004FD8  0EFE               	movlw	254
 14985  004FDA  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14986  004FDC  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14987  004FDE  5165               	movf	??___ftpack& (0+255),w,b
 14988  004FE0  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14989  004FE2  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14990  004FE4  B4D8               	btfsc	status,2,c
 14991  004FE6  D00C               	goto	l1812
 14992  004FE8  D7EC               	goto	l1810
 14993  004FEA                     
 14994                           ; BSR set to: 0
 14995                           
 14996                           ; BSR set to: 0
 14997  004FEA  2B63               	incf	___ftpack@exp& (0+255),f,b
 14998                           
 14999                           ; BSR set to: 0
 15000  004FEC  0E01               	movlw	1
 15001  004FEE  2760               	addwf	___ftpack@arg& (0+255),f,b
 15002  004FF0  0E00               	movlw	0
 15003  004FF2  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15004  004FF4  0E00               	movlw	0
 15005  004FF6  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15006  004FF8  90D8               	bcf	status,0,c
 15007  004FFA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15008  004FFC  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15009  004FFE  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15010  005000                     l1812:
 15011                           
 15012                           ; BSR set to: 0
 15013                           
 15014                           ; BSR set to: 0
 15015  005000  0E00               	movlw	0
 15016  005002  1560               	andwf	___ftpack@arg& (0+255),w,b
 15017  005004  6F65               	movwf	??___ftpack& (0+255),b
 15018  005006  0E00               	movlw	0
 15019  005008  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15020  00500A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15021  00500C  0EFF               	movlw	255
 15022  00500E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15023  005010  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15024  005012  5165               	movf	??___ftpack& (0+255),w,b
 15025  005014  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15026  005016  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15027  005018  B4D8               	btfsc	status,2,c
 15028  00501A  D006               	goto	l1815
 15029  00501C  D7E6               	goto	l1813
 15030  00501E                     
 15031                           ; BSR set to: 0
 15032                           
 15033                           ; BSR set to: 0
 15034  00501E  0763               	decf	___ftpack@exp& (0+255),f,b
 15035  005020  90D8               	bcf	status,0,c
 15036  005022  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15037  005024  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15038  005026  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15039  005028                     l1815:
 15040                           
 15041                           ; BSR set to: 0
 15042                           
 15043                           ; BSR set to: 0
 15044  005028  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15045  00502A  D003               	goto	u8680
 15046                           
 15047                           ; BSR set to: 0
 15048  00502C  0E02               	movlw	2
 15049  00502E  6163               	cpfslt	___ftpack@exp& (0+255),b
 15050  005030  D7F6               	goto	l1816
 15051  005032                     u8680:
 15052                           
 15053                           ; BSR set to: 0
 15054                           
 15055                           ; BSR set to: 0
 15056  005032  A163               	btfss	___ftpack@exp& (0+255),0,b
 15057                           
 15058                           ; BSR set to: 0
 15059  005034  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15060                           
 15061                           ; BSR set to: 0
 15062                           
 15063                           ; BSR set to: 0
 15064  005036  90D8               	bcf	status,0,c
 15065  005038  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15066  00503A  5163               	movf	___ftpack@exp& (0+255),w,b
 15067  00503C  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15068                           
 15069                           ; BSR set to: 0
 15070  00503E  5164               	movf	___ftpack@sign& (0+255),w,b
 15071  005040  A4D8               	btfss	status,2,c
 15072                           
 15073                           ; BSR set to: 0
 15074  005042  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15075                           
 15076                           ; BSR set to: 0
 15077                           
 15078                           ; BSR set to: 0
 15079  005044  C060  F060         	movff	___ftpack@arg,?___ftpack
 15080  005048  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15081  00504C  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15082  005050  0012               	return	
 15083  005052                     __end_of___ftpack:
 15084                           	opt stack 0
 15085                           tblptru	equ	0xFF8
 15086                           tblptrh	equ	0xFF7
 15087                           tblptrl	equ	0xFF6
 15088                           tablat	equ	0xFF5
 15089                           prodh	equ	0xFF4
 15090                           prodl	equ	0xFF3
 15091                           intcon	equ	0xFF2
 15092                           intcon2	equ	0xFF1
 15093                           intcon3	equ	0xFF0
 15094                           postinc0	equ	0xFEE
 15095                           wreg	equ	0xFE8
 15096                           postdec1	equ	0xFE5
 15097                           fsr1l	equ	0xFE1
 15098                           indf2	equ	0xFDF
 15099                           postinc2	equ	0xFDE
 15100                           postdec2	equ	0xFDD
 15101                           fsr2h	equ	0xFDA
 15102                           fsr2l	equ	0xFD9
 15103                           status	equ	0xFD8
 15104                           
 15105 ;; *************** function _faseAtual *****************
 15106 ;; Defined at:
 15107 ;;		line 8 in file "src/FuncoesControlador.h"
 15108 ;; Parameters:    Size  Location     Type
 15109 ;;  tp              1    wreg     unsigned char 
 15110 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 15111 ;;		 -> fase(1), 
 15112 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 15113 ;;		 -> tempajt(1), 
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;  tp              1    5[BANK0 ] unsigned char 
 15116 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 15117 ;;  _fasee          1    4[BANK0 ] unsigned char 
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  2    0[BANK0 ] PTR unsigned char 
 15120 ;; Registers used:
 15121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15122 ;; Tracked objects:
 15123 ;;		On entry : 0/0
 15124 ;;		On exit  : 0/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15127 ;;      Params:         0       4       0       0       0       0       0       0       0
 15128 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15130 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15131 ;;Total ram usage:        7 bytes
 15132 ;; Hardware stack levels used:    1
 15133 ;; Hardware stack levels required when called:    6
 15134 ;; This function calls:
 15135 ;;		Nothing
 15136 ;; This function is called by:
 15137 ;;		_main
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text17
 15142  004656                     __ptext17:
 15143                           	opt stack 0
 15144  004656                     _faseAtual:
 15145                           	opt stack 24
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;incstack = 0
 15149                           ;faseAtual@tp stored from wreg
 15150  004656  0100               	movlb	0	; () banked
 15151  004658  6F65               	movwf	faseAtual@tp& (0+255),b
 15152                           
 15153                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 15154  00465A  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15155  00465E  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15156  004662  50DF               	movf	indf2,w,c
 15157  004664  0100               	movlb	0	; () banked
 15158  004666  6F64               	movwf	faseAtual@_fasee& (0+255),b
 15159                           
 15160                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 15161  004668  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15162  00466C  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15163  004670  50DF               	movf	indf2,w,c
 15164  004672  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;FuncoesControlador.h: 11: if (tp == '?') {
 15168  004674  0E3F               	movlw	63
 15169  004676  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15170  004678  B4D8               	btfsc	status,2,c
 15171  00467A  D01A               	goto	l869
 15172  00467C  D027               	goto	l868
 15173  00467E                     
 15174                           ; BSR set to: 0
 15175                           
 15176                           ; BSR set to: 0
 15177  00467E  0EDE               	movlw	low STR_1
 15178  004680  6F60               	movwf	?_faseAtual& (0+255),b
 15179  004682  0E7E               	movlw	high STR_1
 15180  004684  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15181                           
 15182                           ; BSR set to: 0
 15183  004686  0012               	return	
 15184  004688                     
 15185                           ; BSR set to: 0
 15186                           
 15187                           ; BSR set to: 0
 15188  004688  0EBC               	movlw	low STR_2
 15189  00468A  6F60               	movwf	?_faseAtual& (0+255),b
 15190  00468C  0E7E               	movlw	high STR_2
 15191  00468E  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15192                           
 15193                           ; BSR set to: 0
 15194  004690  0012               	return	
 15195  004692                     
 15196                           ; BSR set to: 0
 15197                           
 15198                           ; BSR set to: 0
 15199  004692  0ED3               	movlw	low STR_3
 15200  004694  6F60               	movwf	?_faseAtual& (0+255),b
 15201  004696  0E7E               	movlw	high STR_3
 15202  004698  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15203                           
 15204                           ; BSR set to: 0
 15205  00469A  0012               	return	
 15206  00469C                     
 15207                           ; BSR set to: 0
 15208                           
 15209                           ; BSR set to: 0
 15210  00469C  0E14               	movlw	low STR_4
 15211  00469E  6F60               	movwf	?_faseAtual& (0+255),b
 15212  0046A0  0E7F               	movlw	high STR_4
 15213  0046A2  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15214                           
 15215                           ; BSR set to: 0
 15216  0046A4  0012               	return	
 15217  0046A6                     
 15218                           ; BSR set to: 0
 15219                           
 15220                           ; BSR set to: 0
 15221  0046A6  0EE6               	movlw	low STR_5
 15222  0046A8  6F60               	movwf	?_faseAtual& (0+255),b
 15223  0046AA  0E7F               	movlw	high STR_5
 15224  0046AC  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;FuncoesControlador.h: 18: }
 15228                           
 15229                           ; BSR set to: 0
 15230  0046AE  0012               	return	
 15231  0046B0                     l869:
 15232                           
 15233                           ; BSR set to: 0
 15234                           
 15235                           ; BSR set to: 0
 15236  0046B0  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15237                           
 15238                           ; Switch size 1, requested type "space"
 15239                           ; Number of cases is 4, Range of values is 1 to 4
 15240                           ; switch strategies available:
 15241                           ; Name         Instructions Cycles
 15242                           ; simple_byte           13     7 (average)
 15243                           ;	Chosen strategy is simple_byte
 15244  0046B2  0A01               	xorlw	1	; case 1
 15245  0046B4  B4D8               	btfsc	status,2,c
 15246  0046B6  D7E3               	goto	l870
 15247  0046B8  0A03               	xorlw	3	; case 2
 15248  0046BA  B4D8               	btfsc	status,2,c
 15249  0046BC  D7E5               	goto	l872
 15250  0046BE  0A01               	xorlw	1	; case 3
 15251  0046C0  B4D8               	btfsc	status,2,c
 15252  0046C2  D7E7               	goto	l873
 15253  0046C4  0A07               	xorlw	7	; case 4
 15254  0046C6  B4D8               	btfsc	status,2,c
 15255  0046C8  D7E9               	goto	l874
 15256  0046CA  D7ED               	goto	l875
 15257  0046CC                     l868:
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15261                           
 15262                           ; BSR set to: 0
 15263  0046CC  0E46               	movlw	70
 15264  0046CE  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15265  0046D0  A4D8               	btfss	status,2,c
 15266  0046D2  D031               	goto	l878
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15270  0046D4  0E65               	movlw	101
 15271  0046D6  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15272  0046D8  D007               	goto	l879
 15273                           
 15274                           ; BSR set to: 0
 15275  0046DA  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15276  0046DE  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15277  0046E2  0E01               	movlw	1
 15278  0046E4  6EDF               	movwf	indf2,c
 15279  0046E6  0012               	return	
 15280  0046E8                     l879:
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15284                           
 15285                           ; BSR set to: 0
 15286  0046E8  0E64               	movlw	100
 15287  0046EA  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15288  0046EC  D00A               	goto	l881
 15289                           
 15290                           ; BSR set to: 0
 15291  0046EE  0E6F               	movlw	111
 15292  0046F0  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15293  0046F2  D007               	goto	l881
 15294                           
 15295                           ; BSR set to: 0
 15296  0046F4  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15297  0046F8  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15298  0046FC  0E02               	movlw	2
 15299  0046FE  6EDF               	movwf	indf2,c
 15300  004700  0012               	return	
 15301  004702                     l881:
 15302                           
 15303                           ; BSR set to: 0
 15304                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15305                           
 15306                           ; BSR set to: 0
 15307  004702  0E6E               	movlw	110
 15308  004704  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15309  004706  D00A               	goto	l883
 15310                           
 15311                           ; BSR set to: 0
 15312  004708  0E86               	movlw	134
 15313  00470A  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15314  00470C  D007               	goto	l883
 15315                           
 15316                           ; BSR set to: 0
 15317  00470E  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15318  004712  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15319  004716  0E03               	movlw	3
 15320  004718  6EDF               	movwf	indf2,c
 15321  00471A  0012               	return	
 15322  00471C                     l883:
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15326                           
 15327                           ; BSR set to: 0
 15328  00471C  0E85               	movlw	133
 15329  00471E  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15330  004720  0012               	return	
 15331                           
 15332                           ; BSR set to: 0
 15333  004722  0EA1               	movlw	161
 15334  004724  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15335  004726  0012               	return	
 15336                           
 15337                           ; BSR set to: 0
 15338  004728  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15339  00472C  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15340  004730  0E04               	movlw	4
 15341  004732  6EDF               	movwf	indf2,c
 15342                           
 15343                           ; BSR set to: 0
 15344                           ;FuncoesControlador.h: 25: } else
 15345                           
 15346                           ; BSR set to: 0
 15347                           
 15348                           ; BSR set to: 0
 15349                           
 15350                           ; BSR set to: 0
 15351  004734  0012               	return	
 15352  004736                     l878:
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15356                           
 15357                           ; BSR set to: 0
 15358  004736  0E41               	movlw	65
 15359  004738  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15360  00473A  A4D8               	btfss	status,2,c
 15361  00473C  0012               	return	
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15365  00473E  05EC               	decf	_fase& (0+255),w,b
 15366  004740  A4D8               	btfss	status,2,c
 15367  004742  D007               	goto	l888
 15368                           
 15369                           ; BSR set to: 0
 15370  004744  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15371  004748  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15372  00474C  0E55               	movlw	85
 15373  00474E  6EDF               	movwf	indf2,c
 15374  004750  0012               	return	
 15375  004752                     l888:
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15379                           
 15380                           ; BSR set to: 0
 15381  004752  0E02               	movlw	2
 15382  004754  19EC               	xorwf	_fase& (0+255),w,b
 15383  004756  A4D8               	btfss	status,2,c
 15384  004758  D007               	goto	l890
 15385                           
 15386                           ; BSR set to: 0
 15387  00475A  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15388  00475E  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15389  004762  0E65               	movlw	101
 15390  004764  6EDF               	movwf	indf2,c
 15391  004766  0012               	return	
 15392  004768                     l890:
 15393                           
 15394                           ; BSR set to: 0
 15395                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15396                           
 15397                           ; BSR set to: 0
 15398  004768  0E03               	movlw	3
 15399  00476A  19EC               	xorwf	_fase& (0+255),w,b
 15400  00476C  A4D8               	btfss	status,2,c
 15401  00476E  D007               	goto	l892
 15402                           
 15403                           ; BSR set to: 0
 15404  004770  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15405  004774  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15406  004778  0E6F               	movlw	111
 15407  00477A  6EDF               	movwf	indf2,c
 15408  00477C  0012               	return	
 15409  00477E                     l892:
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15413                           
 15414                           ; BSR set to: 0
 15415  00477E  0E04               	movlw	4
 15416  004780  19EC               	xorwf	_fase& (0+255),w,b
 15417  004782  A4D8               	btfss	status,2,c
 15418  004784  0012               	return	
 15419                           
 15420                           ; BSR set to: 0
 15421  004786  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15422  00478A  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15423  00478E  0E86               	movlw	134
 15424  004790  6EDF               	movwf	indf2,c
 15425                           
 15426                           ; BSR set to: 0
 15427                           
 15428                           ; BSR set to: 0
 15429                           
 15430                           ; BSR set to: 0
 15431                           
 15432                           ; BSR set to: 0
 15433                           
 15434                           ; BSR set to: 0
 15435                           
 15436                           ; BSR set to: 0
 15437  004792  0012               	return	
 15438  004794                     __end_of_faseAtual:
 15439                           	opt stack 0
 15440                           tblptru	equ	0xFF8
 15441                           tblptrh	equ	0xFF7
 15442                           tblptrl	equ	0xFF6
 15443                           tablat	equ	0xFF5
 15444                           prodh	equ	0xFF4
 15445                           prodl	equ	0xFF3
 15446                           intcon	equ	0xFF2
 15447                           intcon2	equ	0xFF1
 15448                           intcon3	equ	0xFF0
 15449                           postinc0	equ	0xFEE
 15450                           wreg	equ	0xFE8
 15451                           postdec1	equ	0xFE5
 15452                           fsr1l	equ	0xFE1
 15453                           indf2	equ	0xFDF
 15454                           postinc2	equ	0xFDE
 15455                           postdec2	equ	0xFDD
 15456                           fsr2h	equ	0xFDA
 15457                           fsr2l	equ	0xFD9
 15458                           status	equ	0xFD8
 15459                           
 15460 ;; *************** function _enviaDadosWifi *****************
 15461 ;; Defined at:
 15462 ;;		line 189 in file "src/conexaoWifi.h"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;		None
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15467 ;;  i               1  118[BANK0 ] unsigned char 
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  1    wreg      void 
 15470 ;; Registers used:
 15471 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15477 ;;      Params:         0       0       0       0       0       0       0       0       0
 15478 ;;      Locals:         0      18       0       0       0       0       0       0       0
 15479 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15480 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15481 ;;Total ram usage:       20 bytes
 15482 ;; Hardware stack levels used:    1
 15483 ;; Hardware stack levels required when called:    9
 15484 ;; This function calls:
 15485 ;;		___wmul
 15486 ;;		_delay
 15487 ;;		_getMac
 15488 ;;		_limpaBuffer
 15489 ;;		_printf
 15490 ;;		_sprintf
 15491 ;;		_strlen
 15492 ;;		_strstr
 15493 ;; This function is called by:
 15494 ;;		_main
 15495 ;; This function uses a non-reentrant model
 15496 ;;
 15497                           
 15498                           	psect	text18
 15499  002BD6                     __ptext18:
 15500                           	opt stack 0
 15501  002BD6                     _enviaDadosWifi:
 15502                           	opt stack 21
 15503                           
 15504                           ;conexaoWifi.h: 190: if (t_wifi_restart == 0) {
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;incstack = 0
 15508  002BD6  0101               	movlb	1	; () banked
 15509  002BD8  5197               	movf	_t_wifi_restart& (0+255),w,b
 15510  002BDA  A4D8               	btfss	status,2,c
 15511  002BDC  D005               	goto	l1027
 15512                           
 15513                           ; BSR set to: 1
 15514                           ;conexaoWifi.h: 191: f_wifi_processo = 0;
 15515  002BDE  0E00               	movlw	0
 15516  002BE0  6F96               	movwf	_f_wifi_processo& (0+255),b
 15517                           
 15518                           ;conexaoWifi.h: 192: t_wifi_restart = 10;
 15519  002BE2  0E0A               	movlw	10
 15520  002BE4  6F97               	movwf	_t_wifi_restart& (0+255),b
 15521                           
 15522                           ;conexaoWifi.h: 193: } else if (strlen(wifi_MAC) == 12) {
 15523  002BE6  0012               	return	
 15524  002BE8                     l1027:
 15525                           
 15526                           ; BSR set to: 1
 15527                           
 15528                           ; BSR set to: 1
 15529  002BE8  0EB0               	movlw	low _wifi_MAC
 15530  002BEA  0100               	movlb	0	; () banked
 15531  002BEC  6F60               	movwf	strlen@s& (0+255),b
 15532  002BEE  0E02               	movlw	high _wifi_MAC
 15533  002BF0  6F61               	movwf	(strlen@s+1)& (0+255),b
 15534  002BF2  EC6E  F02C         	call	_strlen	;wreg free
 15535  002BF6  0E0C               	movlw	12
 15536  002BF8  0100               	movlb	0	; () banked
 15537  002BFA  1960               	xorwf	?_strlen& (0+255),w,b
 15538  002BFC  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15539  002BFE  B4D8               	btfsc	status,2,c
 15540  002C00  D211               	goto	l1030
 15541  002C02  D279               	goto	l1062
 15542  002C04                     
 15543                           ;conexaoWifi.h: 196: limpaBuffer();
 15544                           
 15545                           ; BSR set to: 0
 15546  002C04  EC75  F02D         	call	_limpaBuffer	;wreg free
 15547                           
 15548                           ;conexaoWifi.h: 197: printf("AT+CWMODE=1\r\n");
 15549  002C08  0E34               	movlw	low STR_44
 15550  002C0A  0100               	movlb	0	; () banked
 15551  002C0C  6F81               	movwf	printf@f& (0+255),b
 15552  002C0E  0E7E               	movlw	high STR_44
 15553  002C10  6F82               	movwf	(printf@f+1)& (0+255),b
 15554  002C12  ECB4  F02D         	call	_printf	;wreg free
 15555                           
 15556                           ;conexaoWifi.h: 198: wifi_conectado = 0;
 15557  002C16  0E00               	movlw	0
 15558  002C18  0101               	movlb	1	; () banked
 15559  002C1A  6F9A               	movwf	_wifi_conectado& (0+255),b
 15560                           
 15561                           ; BSR set to: 1
 15562                           ;conexaoWifi.h: 199: f_wifi_processo++;
 15563  002C1C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15564                           
 15565                           ;conexaoWifi.h: 200: break;
 15566  002C1E  0012               	return	
 15567  002C20                     
 15568                           ; BSR set to: 1
 15569                           ;conexaoWifi.h: 202: if (strstr(bufferSerial, "OK") != (0)) {
 15570                           
 15571                           ; BSR set to: 1
 15572  002C20  0E42               	movlw	low _bufferSerial
 15573  002C22  0100               	movlb	0	; () banked
 15574  002C24  6F6F               	movwf	strstr@s1& (0+255),b
 15575  002C26  0E02               	movlw	high _bufferSerial
 15576  002C28  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15577  002C2A  0EF5               	movlw	low STR_13
 15578  002C2C  6F71               	movwf	strstr@s2& (0+255),b
 15579  002C2E  0E7F               	movlw	high STR_13
 15580  002C30  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15581  002C32  EC7F  F028         	call	_strstr	;wreg free
 15582  002C36  0100               	movlb	0	; () banked
 15583  002C38  516F               	movf	?_strstr& (0+255),w,b
 15584  002C3A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15585  002C3C  B4D8               	btfsc	status,2,c
 15586  002C3E  0012               	return	
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;conexaoWifi.h: 203: f_wifi_processo++;
 15590  002C40  0101               	movlb	1	; () banked
 15591  002C42  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15592                           
 15593                           ; BSR set to: 1
 15594                           ;conexaoWifi.h: 204: }
 15595                           ;conexaoWifi.h: 205: break;
 15596  002C44  0012               	return	
 15597  002C46                     
 15598                           ; BSR set to: 1
 15599                           ;conexaoWifi.h: 207: limpaBuffer();
 15600                           
 15601                           ; BSR set to: 1
 15602  002C46  EC75  F02D         	call	_limpaBuffer	;wreg free
 15603                           
 15604                           ;conexaoWifi.h: 208: printf("AT+CIPMUX=0\r\n");
 15605  002C4A  0E26               	movlw	low STR_46
 15606  002C4C  0100               	movlb	0	; () banked
 15607  002C4E  6F81               	movwf	printf@f& (0+255),b
 15608  002C50  0E7E               	movlw	high STR_46
 15609  002C52  6F82               	movwf	(printf@f+1)& (0+255),b
 15610  002C54  ECB4  F02D         	call	_printf	;wreg free
 15611                           
 15612                           ;conexaoWifi.h: 209: f_wifi_processo++;
 15613  002C58  0101               	movlb	1	; () banked
 15614  002C5A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15615                           
 15616                           ;conexaoWifi.h: 210: break;
 15617  002C5C  0012               	return	
 15618  002C5E                     
 15619                           ; BSR set to: 1
 15620                           ;conexaoWifi.h: 212: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "link"
      +                          ) != (0)) {
 15621                           
 15622                           ; BSR set to: 1
 15623  002C5E  0E42               	movlw	low _bufferSerial
 15624  002C60  0100               	movlb	0	; () banked
 15625  002C62  6F6F               	movwf	strstr@s1& (0+255),b
 15626  002C64  0E02               	movlw	high _bufferSerial
 15627  002C66  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15628  002C68  0EDC               	movlw	low STR_48
 15629  002C6A  6F71               	movwf	strstr@s2& (0+255),b
 15630  002C6C  0E7F               	movlw	high STR_48
 15631  002C6E  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15632  002C70  EC7F  F028         	call	_strstr	;wreg free
 15633  002C74  0100               	movlb	0	; () banked
 15634  002C76  516F               	movf	?_strstr& (0+255),w,b
 15635  002C78  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15636  002C7A  B4D8               	btfsc	status,2,c
 15637  002C7C  D002               	goto	u13110
 15638  002C7E  0E01               	movlw	1
 15639  002C80  D001               	goto	u13112
 15640  002C82                     u13110:
 15641  002C82  0E00               	movlw	0
 15642  002C84                     u13112:
 15643  002C84  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15644  002C86  0E42               	movlw	low _bufferSerial
 15645  002C88  6F6F               	movwf	strstr@s1& (0+255),b
 15646  002C8A  0E02               	movlw	high _bufferSerial
 15647  002C8C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15648  002C8E  0EF5               	movlw	low STR_13
 15649  002C90  6F71               	movwf	strstr@s2& (0+255),b
 15650  002C92  0E7F               	movlw	high STR_13
 15651  002C94  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15652  002C96  EC7F  F028         	call	_strstr	;wreg free
 15653  002C9A  0100               	movlb	0	; () banked
 15654  002C9C  516F               	movf	?_strstr& (0+255),w,b
 15655  002C9E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15656  002CA0  B4D8               	btfsc	status,2,c
 15657  002CA2  D002               	goto	u13120
 15658  002CA4  0E01               	movlw	1
 15659  002CA6  D001               	goto	u13122
 15660  002CA8                     u13120:
 15661  002CA8  0E00               	movlw	0
 15662  002CAA                     u13122:
 15663  002CAA  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15664  002CAC  A0E8               	btfss	wreg,0,c
 15665  002CAE  0012               	return	
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;conexaoWifi.h: 213: f_wifi_processo++;
 15669  002CB0  0101               	movlb	1	; () banked
 15670  002CB2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15671                           
 15672                           ; BSR set to: 1
 15673                           ;conexaoWifi.h: 214: }
 15674                           ;conexaoWifi.h: 215: break;
 15675  002CB4  0012               	return	
 15676  002CB6                     
 15677                           ; BSR set to: 1
 15678                           ;conexaoWifi.h: 217: limpaBuffer();
 15679                           
 15680                           ; BSR set to: 1
 15681  002CB6  EC75  F02D         	call	_limpaBuffer	;wreg free
 15682                           
 15683                           ;conexaoWifi.h: 218: delay(10);
 15684  002CBA  0E00               	movlw	0
 15685  002CBC  0100               	movlb	0	; () banked
 15686  002CBE  6F61               	movwf	(delay@x+1)& (0+255),b
 15687  002CC0  0E0A               	movlw	10
 15688  002CC2  6F60               	movwf	delay@x& (0+255),b
 15689  002CC4  EC94  F02E         	call	_delay	;wreg free
 15690                           
 15691                           ;conexaoWifi.h: 219: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15692  002CC8  0EFD               	movlw	low STR_49
 15693  002CCA  0100               	movlb	0	; () banked
 15694  002CCC  6F81               	movwf	printf@f& (0+255),b
 15695  002CCE  0E7B               	movlw	high STR_49
 15696  002CD0  6F82               	movwf	(printf@f+1)& (0+255),b
 15697  002CD2  0EA1               	movlw	low _ssid
 15698  002CD4  6F83               	movwf	(?_printf+2)& (0+255),b
 15699  002CD6  0E02               	movlw	high _ssid
 15700  002CD8  6F84               	movwf	(?_printf+3)& (0+255),b
 15701  002CDA  0E92               	movlw	low _senha
 15702  002CDC  6F85               	movwf	(?_printf+4)& (0+255),b
 15703  002CDE  0E02               	movlw	high _senha
 15704  002CE0  6F86               	movwf	(?_printf+5)& (0+255),b
 15705  002CE2  ECB4  F02D         	call	_printf	;wreg free
 15706                           
 15707                           ;conexaoWifi.h: 220: f_wifi_processo++;
 15708  002CE6  0101               	movlb	1	; () banked
 15709  002CE8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;conexaoWifi.h: 221: t_wifi_restart = 35;
 15713  002CEA  0E23               	movlw	35
 15714  002CEC  6F97               	movwf	_t_wifi_restart& (0+255),b
 15715                           
 15716                           ;conexaoWifi.h: 222: break;
 15717  002CEE  0012               	return	
 15718  002CF0                     
 15719                           ; BSR set to: 1
 15720                           ;conexaoWifi.h: 225: f_wifi_processo++;
 15721                           
 15722                           ; BSR set to: 1
 15723  002CF0  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15724                           
 15725                           ;conexaoWifi.h: 227: break;
 15726  002CF2  0012               	return	
 15727  002CF4                     
 15728                           ; BSR set to: 1
 15729                           ;conexaoWifi.h: 229: limpaBuffer();
 15730                           
 15731                           ; BSR set to: 1
 15732  002CF4  EC75  F02D         	call	_limpaBuffer	;wreg free
 15733                           
 15734                           ;conexaoWifi.h: 230: if (t_wifi_restart <= 15) {
 15735  002CF8  0E10               	movlw	16
 15736  002CFA  0101               	movlb	1	; () banked
 15737  002CFC  6197               	cpfslt	_t_wifi_restart& (0+255),b
 15738  002CFE  0012               	return	
 15739                           
 15740                           ; BSR set to: 1
 15741                           ;conexaoWifi.h: 231: printf("AT+CIPSTATUS\r\n");
 15742  002D00  0EF9               	movlw	low STR_50
 15743  002D02  0100               	movlb	0	; () banked
 15744  002D04  6F81               	movwf	printf@f& (0+255),b
 15745  002D06  0E7D               	movlw	high STR_50
 15746  002D08  6F82               	movwf	(printf@f+1)& (0+255),b
 15747  002D0A  ECB4  F02D         	call	_printf	;wreg free
 15748                           
 15749                           ;conexaoWifi.h: 232: f_wifi_processo++;
 15750  002D0E  0101               	movlb	1	; () banked
 15751  002D10  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15752                           
 15753                           ; BSR set to: 1
 15754                           ;conexaoWifi.h: 233: }
 15755                           ;conexaoWifi.h: 234: break;
 15756  002D12  0012               	return	
 15757  002D14                     
 15758                           ; BSR set to: 1
 15759                           ;conexaoWifi.h: 236: if (strstr(bufferSerial, "2") != (0) | strstr(bufferSerial, "4") !=
      +                           (0)) {
 15760                           
 15761                           ; BSR set to: 1
 15762  002D14  0E42               	movlw	low _bufferSerial
 15763  002D16  0100               	movlb	0	; () banked
 15764  002D18  6F6F               	movwf	strstr@s1& (0+255),b
 15765  002D1A  0E02               	movlw	high _bufferSerial
 15766  002D1C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15767  002D1E  0EFC               	movlw	low STR_52
 15768  002D20  6F71               	movwf	strstr@s2& (0+255),b
 15769  002D22  0E7F               	movlw	high STR_52
 15770  002D24  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15771  002D26  EC7F  F028         	call	_strstr	;wreg free
 15772  002D2A  0100               	movlb	0	; () banked
 15773  002D2C  516F               	movf	?_strstr& (0+255),w,b
 15774  002D2E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15775  002D30  B4D8               	btfsc	status,2,c
 15776  002D32  D002               	goto	u13150
 15777  002D34  0E01               	movlw	1
 15778  002D36  D001               	goto	u13152
 15779  002D38                     u13150:
 15780  002D38  0E00               	movlw	0
 15781  002D3A                     u13152:
 15782  002D3A  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15783  002D3C  0E42               	movlw	low _bufferSerial
 15784  002D3E  6F6F               	movwf	strstr@s1& (0+255),b
 15785  002D40  0E02               	movlw	high _bufferSerial
 15786  002D42  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15787  002D44  0EFA               	movlw	low STR_51
 15788  002D46  6F71               	movwf	strstr@s2& (0+255),b
 15789  002D48  0E7F               	movlw	high STR_51
 15790  002D4A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15791  002D4C  EC7F  F028         	call	_strstr	;wreg free
 15792  002D50  0100               	movlb	0	; () banked
 15793  002D52  516F               	movf	?_strstr& (0+255),w,b
 15794  002D54  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15795  002D56  B4D8               	btfsc	status,2,c
 15796  002D58  D002               	goto	u13160
 15797  002D5A  0E01               	movlw	1
 15798  002D5C  D001               	goto	u13162
 15799  002D5E                     u13160:
 15800  002D5E  0E00               	movlw	0
 15801  002D60                     u13162:
 15802  002D60  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15803  002D62  A0E8               	btfss	wreg,0,c
 15804  002D64  0012               	return	
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;conexaoWifi.h: 237: wifi_conectado = 1;
 15808  002D66  0E01               	movlw	1
 15809  002D68  0101               	movlb	1	; () banked
 15810  002D6A  6F9A               	movwf	_wifi_conectado& (0+255),b
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;conexaoWifi.h: 238: f_wifi_processo++;
 15814  002D6C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15815                           
 15816                           ; BSR set to: 1
 15817                           ;conexaoWifi.h: 239: }
 15818                           ;conexaoWifi.h: 240: break;
 15819  002D6E  0012               	return	
 15820  002D70                     
 15821                           ; BSR set to: 1
 15822                           ;conexaoWifi.h: 242: limpaBuffer();
 15823                           
 15824                           ; BSR set to: 1
 15825  002D70  EC75  F02D         	call	_limpaBuffer	;wreg free
 15826                           
 15827                           ;conexaoWifi.h: 244: printf("AT+CIPSTART=\"TCP\",\"18.228.154.248\",80\r\n");
 15828  002D74  0E70               	movlw	low STR_53
 15829  002D76  0100               	movlb	0	; () banked
 15830  002D78  6F81               	movwf	printf@f& (0+255),b
 15831  002D7A  0E7B               	movlw	high STR_53
 15832  002D7C  6F82               	movwf	(printf@f+1)& (0+255),b
 15833  002D7E  ECB4  F02D         	call	_printf	;wreg free
 15834                           
 15835                           ;conexaoWifi.h: 245: f_wifi_processo++;
 15836  002D82  0101               	movlb	1	; () banked
 15837  002D84  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15838                           
 15839                           ;conexaoWifi.h: 246: break;
 15840  002D86  0012               	return	
 15841  002D88                     
 15842                           ; BSR set to: 1
 15843                           ;conexaoWifi.h: 248: if (strstr(bufferSerial, "OK") != (0)) {
 15844                           
 15845                           ; BSR set to: 1
 15846  002D88  0E42               	movlw	low _bufferSerial
 15847  002D8A  0100               	movlb	0	; () banked
 15848  002D8C  6F6F               	movwf	strstr@s1& (0+255),b
 15849  002D8E  0E02               	movlw	high _bufferSerial
 15850  002D90  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15851  002D92  0EF5               	movlw	low STR_13
 15852  002D94  6F71               	movwf	strstr@s2& (0+255),b
 15853  002D96  0E7F               	movlw	high STR_13
 15854  002D98  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15855  002D9A  EC7F  F028         	call	_strstr	;wreg free
 15856  002D9E  0100               	movlb	0	; () banked
 15857  002DA0  516F               	movf	?_strstr& (0+255),w,b
 15858  002DA2  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15859  002DA4  B4D8               	btfsc	status,2,c
 15860  002DA6  0012               	return	
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;conexaoWifi.h: 249: f_wifi_processo++;
 15864  002DA8  0101               	movlb	1	; () banked
 15865  002DAA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15866                           
 15867                           ; BSR set to: 1
 15868                           ;conexaoWifi.h: 250: }
 15869                           ;conexaoWifi.h: 251: break;
 15870  002DAC  0012               	return	
 15871  002DAE                     
 15872                           ; BSR set to: 1
 15873                           ;conexaoWifi.h: 253: limpaBuffer();
 15874                           
 15875                           ; BSR set to: 1
 15876  002DAE  EC75  F02D         	call	_limpaBuffer	;wreg free
 15877                           
 15878                           ;conexaoWifi.h: 254: printf("AT+CIPSENDEX=260\r\n");
 15879  002DB2  0EDD               	movlw	low STR_55
 15880  002DB4  0100               	movlb	0	; () banked
 15881  002DB6  6F81               	movwf	printf@f& (0+255),b
 15882  002DB8  0E7C               	movlw	high STR_55
 15883  002DBA  6F82               	movwf	(printf@f+1)& (0+255),b
 15884  002DBC  ECB4  F02D         	call	_printf	;wreg free
 15885                           
 15886                           ;conexaoWifi.h: 255: f_wifi_processo++;
 15887  002DC0  0101               	movlb	1	; () banked
 15888  002DC2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15889                           
 15890                           ;conexaoWifi.h: 256: break;
 15891  002DC4  0012               	return	
 15892  002DC6                     
 15893                           ; BSR set to: 1
 15894                           ;conexaoWifi.h: 258: if (strstr(bufferSerial, ">") != (0)) {
 15895                           
 15896                           ; BSR set to: 1
 15897  002DC6  0E42               	movlw	low _bufferSerial
 15898  002DC8  0100               	movlb	0	; () banked
 15899  002DCA  6F6F               	movwf	strstr@s1& (0+255),b
 15900  002DCC  0E02               	movlw	high _bufferSerial
 15901  002DCE  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15902  002DD0  0E77               	movlw	low (STR_107+18)
 15903  002DD2  6F71               	movwf	strstr@s2& (0+255),b
 15904  002DD4  0E7C               	movlw	high (STR_107+18)
 15905  002DD6  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15906  002DD8  EC7F  F028         	call	_strstr	;wreg free
 15907  002DDC  0100               	movlb	0	; () banked
 15908  002DDE  516F               	movf	?_strstr& (0+255),w,b
 15909  002DE0  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15910  002DE2  B4D8               	btfsc	status,2,c
 15911  002DE4  0012               	return	
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;conexaoWifi.h: 259: f_wifi_processo++;
 15915  002DE6  0101               	movlb	1	; () banked
 15916  002DE8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15917                           
 15918                           ; BSR set to: 1
 15919                           ;conexaoWifi.h: 260: }
 15920                           ;conexaoWifi.h: 261: break;
 15921  002DEA  0012               	return	
 15922  002DEC                     
 15923                           ; BSR set to: 1
 15924                           ;conexaoWifi.h: 263: limpaBuffer();
 15925                           
 15926                           ; BSR set to: 1
 15927  002DEC  EC75  F02D         	call	_limpaBuffer	;wreg free
 15928                           
 15929                           ;conexaoWifi.h: 264: char i = 0;
 15930  002DF0  0E00               	movlw	0
 15931  002DF2  0100               	movlb	0	; () banked
 15932  002DF4  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;conexaoWifi.h: 265: char AUX[15];
 15936                           ;conexaoWifi.h: 266: sprintf(AUX, "%s", "Nov 09 2019");
 15937  002DF6  0EC5               	movlw	low enviaDadosWifi@AUX
 15938  002DF8  6F81               	movwf	sprintf@wh& (0+255),b
 15939  002DFA  0E00               	movlw	high enviaDadosWifi@AUX
 15940  002DFC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15941  002DFE  0E25               	movlw	low (STR_82+7)
 15942  002E00  6F83               	movwf	sprintf@f& (0+255),b
 15943  002E02  0E7F               	movlw	high (STR_82+7)
 15944  002E04  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15945  002E06  0EA4               	movlw	low STR_58
 15946  002E08  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15947  002E0A  0E7E               	movlw	high STR_58
 15948  002E0C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15949  002E0E  EC10  F02D         	call	_sprintf	;wreg free
 15950                           
 15951                           ;conexaoWifi.h: 267: for (i = 0; i < strlen(AUX); i++) {
 15952  002E12  0E00               	movlw	0
 15953  002E14  0100               	movlb	0	; () banked
 15954  002E16  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15955  002E18  D017               	goto	l1051
 15956  002E1A                     
 15957                           ; BSR set to: 0
 15958                           ;conexaoWifi.h: 268: if (AUX[i] == ' ') AUX[i] = '-';
 15959                           
 15960                           ; BSR set to: 0
 15961  002E1A  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 15962  002E1C  0D01               	mullw	1
 15963  002E1E  0EC5               	movlw	low enviaDadosWifi@AUX
 15964  002E20  24F3               	addwf	prodl,w,c
 15965  002E22  6ED9               	movwf	fsr2l,c
 15966  002E24  0E00               	movlw	high enviaDadosWifi@AUX
 15967  002E26  20F4               	addwfc	prodh,w,c
 15968  002E28  6EDA               	movwf	fsr2h,c
 15969  002E2A  0E20               	movlw	32
 15970  002E2C  18DE               	xorwf	postinc2,w,c
 15971  002E2E  A4D8               	btfss	status,2,c
 15972  002E30  D00A               	goto	l1053
 15973                           
 15974                           ; BSR set to: 0
 15975  002E32  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 15976  002E34  0D01               	mullw	1
 15977  002E36  0EC5               	movlw	low enviaDadosWifi@AUX
 15978  002E38  24F3               	addwf	prodl,w,c
 15979  002E3A  6ED9               	movwf	fsr2l,c
 15980  002E3C  0E00               	movlw	high enviaDadosWifi@AUX
 15981  002E3E  20F4               	addwfc	prodh,w,c
 15982  002E40  6EDA               	movwf	fsr2h,c
 15983  002E42  0E2D               	movlw	45
 15984  002E44  6EDF               	movwf	indf2,c
 15985  002E46                     l1053:
 15986                           
 15987                           ; BSR set to: 0
 15988                           
 15989                           ; BSR set to: 0
 15990  002E46  2BD6               	incf	enviaDadosWifi@i& (0+255),f,b
 15991  002E48                     l1051:
 15992                           
 15993                           ; BSR set to: 0
 15994                           
 15995                           ; BSR set to: 0
 15996  002E48  0EC5               	movlw	low enviaDadosWifi@AUX
 15997  002E4A  6F60               	movwf	strlen@s& (0+255),b
 15998  002E4C  0E00               	movlw	high enviaDadosWifi@AUX
 15999  002E4E  6F61               	movwf	(strlen@s+1)& (0+255),b
 16000  002E50  EC6E  F02C         	call	_strlen	;wreg free
 16001  002E54  0100               	movlb	0	; () banked
 16002  002E56  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 16003  002E58  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16004  002E5A  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 16005  002E5C  5160               	movf	?_strlen& (0+255),w,b
 16006  002E5E  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 16007  002E60  5161               	movf	(?_strlen+1)& (0+255),w,b
 16008  002E62  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16009  002E64  A0D8               	btfss	status,0,c
 16010  002E66  D7D9               	goto	l1052
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;conexaoWifi.h: 269: }
 16014                           ;conexaoWifi.h: 271: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 16015                           
 16016                           ; BSR set to: 0
 16017  002E68  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
 16018  002E6C  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 16019  002E70  0E00               	movlw	0
 16020  002E72  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16021  002E74  0E27               	movlw	39
 16022  002E76  6F62               	movwf	___wmul@multiplicand& (0+255),b
 16023  002E78  ECA9  F02E         	call	___wmul	;wreg free
 16024  002E7C  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2490
 16025  002E80  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2490+1
 16026                           
 16027                           ;conexaoWifi.h: 269: }
 16028                           ;conexaoWifi.h: 271: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 16029  002E84  0E9B               	movlw	low STR_59
 16030  002E86  0100               	movlb	0	; () banked
 16031  002E88  6F81               	movwf	printf@f& (0+255),b
 16032  002E8A  0E7A               	movlw	high STR_59
 16033  002E8C  6F82               	movwf	(printf@f+1)& (0+255),b
 16034  002E8E  C0FD  F083         	movff	_temp,?_printf+2
 16035  002E92  6B84               	clrf	(?_printf+3)& (0+255),b
 16036  002E94  C0EA  F085         	movff	_tempajt,?_printf+4
 16037  002E98  6B86               	clrf	(?_printf+5)& (0+255),b
 16038  002E9A  C0FC  F087         	movff	_umid,?_printf+6
 16039  002E9E  6B88               	clrf	(?_printf+7)& (0+255),b
 16040  002EA0  C0E9  F089         	movff	_umidajt,?_printf+8
 16041  002EA4  6B8A               	clrf	(?_printf+9)& (0+255),b
 16042  002EA6  C0F9  F08B         	movff	_fornalha,?_printf+10
 16043  002EAA  6B8C               	clrf	(?_printf+11)& (0+255),b
 16044  002EAC  C0FA  F08D         	movff	_buzzer,?_printf+12
 16045  002EB0  6B8E               	clrf	(?_printf+13)& (0+255),b
 16046  002EB2  C0F6  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 16047  002EB6  6B90               	clrf	(?_printf+15)& (0+255),b
 16048  002EB8  C0F8  F091         	movff	_trava_fase,?_printf+16
 16049  002EBC  6B92               	clrf	(?_printf+17)& (0+255),b
 16050  002EBE  C0EC  F093         	movff	_fase,?_printf+18
 16051  002EC2  6B94               	clrf	(?_printf+19)& (0+255),b
 16052  002EC4  C0EB  F095         	movff	_clima,?_printf+20
 16053  002EC8  6B96               	clrf	(?_printf+21)& (0+255),b
 16054  002ECA  C0F7  F097         	movff	_tipo_sensor_umidade,?_printf+22
 16055  002ECE  6B98               	clrf	(?_printf+23)& (0+255),b
 16056  002ED0  0EB0               	movlw	low _wifi_MAC
 16057  002ED2  6F99               	movwf	(?_printf+24)& (0+255),b
 16058  002ED4  0E02               	movlw	high _wifi_MAC
 16059  002ED6  6F9A               	movwf	(?_printf+25)& (0+255),b
 16060  002ED8  C0D4  F09B         	movff	_enviaDadosWifi$2490,?_printf+26
 16061  002EDC  C0D5  F09C         	movff	_enviaDadosWifi$2490+1,?_printf+27
 16062  002EE0  0EC5               	movlw	low enviaDadosWifi@AUX
 16063  002EE2  6F9D               	movwf	(?_printf+28)& (0+255),b
 16064  002EE4  0E00               	movlw	high enviaDadosWifi@AUX
 16065  002EE6  6F9E               	movwf	(?_printf+29)& (0+255),b
 16066  002EE8  C0FE  F09F         	movff	_f_falta_energia,?_printf+30
 16067  002EEC  6BA0               	clrf	(?_printf+31)& (0+255),b
 16068  002EEE  C0F7  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 16069  002EF2  6BA2               	clrf	(?_printf+33)& (0+255),b
 16070  002EF4  C0EF  F0A3         	movff	_h_abafador,?_printf+34
 16071  002EF8  6BA4               	clrf	(?_printf+35)& (0+255),b
 16072  002EFA  C1F4  F0A5         	movff	_h_flap,?_printf+36
 16073  002EFE  6BA6               	clrf	(?_printf+37)& (0+255),b
 16074  002F00  C0F0  F0A7         	movff	_h_venotinha,?_printf+38
 16075  002F04  6BA8               	clrf	(?_printf+39)& (0+255),b
 16076  002F06  C0F1  F0A9         	movff	_h_modo_seguranca,?_printf+40
 16077  002F0A  6BAA               	clrf	(?_printf+41)& (0+255),b
 16078  002F0C  C0EE  F0AB         	movff	_h_buzzer,?_printf+42
 16079  002F10  6BAC               	clrf	(?_printf+43)& (0+255),b
 16080  002F12  C0F5  F0AD         	movff	_t_flap_ligado,?_printf+44
 16081  002F16  6BAE               	clrf	(?_printf+45)& (0+255),b
 16082  002F18  C0F4  F0AF         	movff	_t_flap_intervalo,?_printf+46
 16083  002F1C  6BB0               	clrf	(?_printf+47)& (0+255),b
 16084  002F1E  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 16085  002F22  6BB2               	clrf	(?_printf+49)& (0+255),b
 16086  002F24  C0F3  F0B3         	movff	_t_temp_automatica,?_printf+50
 16087  002F28  6BB4               	clrf	(?_printf+51)& (0+255),b
 16088  002F2A  C1F1  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 16089  002F2E  C1F2  F0B6         	movff	_wifi_habilita_alteracao+1,?_printf+53
 16090  002F32  C1EF  F0B7         	movff	_wifi_SENHA,?_printf+54
 16091  002F36  C1F0  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 16092  002F3A  C0ED  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 16093  002F3E  6BBA               	clrf	(?_printf+57)& (0+255),b
 16094  002F40  C0F2  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 16095  002F44  6BBC               	clrf	(?_printf+59)& (0+255),b
 16096  002F46  ECB4  F02D         	call	_printf	;wreg free
 16097                           
 16098                           ;conexaoWifi.h: 272: f_wifi_processo++;
 16099  002F4A  0101               	movlb	1	; () banked
 16100  002F4C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16101                           
 16102                           ;conexaoWifi.h: 273: break;
 16103  002F4E  0012               	return	
 16104  002F50                     
 16105                           ; BSR set to: 1
 16106                           ;conexaoWifi.h: 275: if (strstr(bufferSerial, "200") != (0) | strstr(bufferSerial, "save
      +                          ") != (0)) {
 16107                           
 16108                           ; BSR set to: 1
 16109  002F50  0E42               	movlw	low _bufferSerial
 16110  002F52  0100               	movlb	0	; () banked
 16111  002F54  6F6F               	movwf	strstr@s1& (0+255),b
 16112  002F56  0E02               	movlw	high _bufferSerial
 16113  002F58  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16114  002F5A  0ED7               	movlw	low STR_61
 16115  002F5C  6F71               	movwf	strstr@s2& (0+255),b
 16116  002F5E  0E7F               	movlw	high STR_61
 16117  002F60  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16118  002F62  EC7F  F028         	call	_strstr	;wreg free
 16119  002F66  0100               	movlb	0	; () banked
 16120  002F68  516F               	movf	?_strstr& (0+255),w,b
 16121  002F6A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16122  002F6C  B4D8               	btfsc	status,2,c
 16123  002F6E  D002               	goto	u13220
 16124  002F70  0E01               	movlw	1
 16125  002F72  D001               	goto	u13222
 16126  002F74                     u13220:
 16127  002F74  0E00               	movlw	0
 16128  002F76                     u13222:
 16129  002F76  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16130  002F78  0E42               	movlw	low _bufferSerial
 16131  002F7A  6F6F               	movwf	strstr@s1& (0+255),b
 16132  002F7C  0E02               	movlw	high _bufferSerial
 16133  002F7E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16134  002F80  0EEA               	movlw	low STR_60
 16135  002F82  6F71               	movwf	strstr@s2& (0+255),b
 16136  002F84  0E7F               	movlw	high STR_60
 16137  002F86  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16138  002F88  EC7F  F028         	call	_strstr	;wreg free
 16139  002F8C  0100               	movlb	0	; () banked
 16140  002F8E  516F               	movf	?_strstr& (0+255),w,b
 16141  002F90  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16142  002F92  B4D8               	btfsc	status,2,c
 16143  002F94  D002               	goto	u13230
 16144  002F96  0E01               	movlw	1
 16145  002F98  D001               	goto	u13232
 16146  002F9A                     u13230:
 16147  002F9A  0E00               	movlw	0
 16148  002F9C                     u13232:
 16149  002F9C  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16150  002F9E  A0E8               	btfss	wreg,0,c
 16151  002FA0  0012               	return	
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;conexaoWifi.h: 276: f_wifi_processo++;
 16155  002FA2  0101               	movlb	1	; () banked
 16156  002FA4  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16157                           
 16158                           ; BSR set to: 1
 16159                           ;conexaoWifi.h: 277: }
 16160                           ;conexaoWifi.h: 278: break;
 16161  002FA6  0012               	return	
 16162  002FA8                     
 16163                           ; BSR set to: 1
 16164                           ;conexaoWifi.h: 280: limpaBuffer();
 16165                           
 16166                           ; BSR set to: 1
 16167  002FA8  EC75  F02D         	call	_limpaBuffer	;wreg free
 16168                           
 16169                           ;conexaoWifi.h: 281: printf("AT+CIPCLOSE\r\n");
 16170  002FAC  0E5E               	movlw	low STR_62
 16171  002FAE  0100               	movlb	0	; () banked
 16172  002FB0  6F81               	movwf	printf@f& (0+255),b
 16173  002FB2  0E7E               	movlw	high STR_62
 16174  002FB4  6F82               	movwf	(printf@f+1)& (0+255),b
 16175  002FB6  ECB4  F02D         	call	_printf	;wreg free
 16176                           
 16177                           ;conexaoWifi.h: 282: f_wifi_processo++;
 16178  002FBA  0101               	movlb	1	; () banked
 16179  002FBC  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16180                           
 16181                           ;conexaoWifi.h: 283: break;
 16182  002FBE  0012               	return	
 16183  002FC0                     
 16184                           ; BSR set to: 1
 16185                           ;conexaoWifi.h: 285: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "CLOSE
      +                          D") != (0)) {
 16186                           
 16187                           ; BSR set to: 1
 16188  002FC0  0E42               	movlw	low _bufferSerial
 16189  002FC2  0100               	movlb	0	; () banked
 16190  002FC4  6F6F               	movwf	strstr@s1& (0+255),b
 16191  002FC6  0E02               	movlw	high _bufferSerial
 16192  002FC8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16193  002FCA  0E90               	movlw	low STR_64
 16194  002FCC  6F71               	movwf	strstr@s2& (0+255),b
 16195  002FCE  0E7F               	movlw	high STR_64
 16196  002FD0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16197  002FD2  EC7F  F028         	call	_strstr	;wreg free
 16198  002FD6  0100               	movlb	0	; () banked
 16199  002FD8  516F               	movf	?_strstr& (0+255),w,b
 16200  002FDA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16201  002FDC  B4D8               	btfsc	status,2,c
 16202  002FDE  D002               	goto	u13250
 16203  002FE0  0E01               	movlw	1
 16204  002FE2  D001               	goto	u13252
 16205  002FE4                     u13250:
 16206  002FE4  0E00               	movlw	0
 16207  002FE6                     u13252:
 16208  002FE6  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16209  002FE8  0E42               	movlw	low _bufferSerial
 16210  002FEA  6F6F               	movwf	strstr@s1& (0+255),b
 16211  002FEC  0E02               	movlw	high _bufferSerial
 16212  002FEE  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16213  002FF0  0EF5               	movlw	low STR_13
 16214  002FF2  6F71               	movwf	strstr@s2& (0+255),b
 16215  002FF4  0E7F               	movlw	high STR_13
 16216  002FF6  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16217  002FF8  EC7F  F028         	call	_strstr	;wreg free
 16218  002FFC  0100               	movlb	0	; () banked
 16219  002FFE  516F               	movf	?_strstr& (0+255),w,b
 16220  003000  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16221  003002  B4D8               	btfsc	status,2,c
 16222  003004  D002               	goto	u13260
 16223  003006  0E01               	movlw	1
 16224  003008  D001               	goto	u13262
 16225  00300A                     u13260:
 16226  00300A  0E00               	movlw	0
 16227  00300C                     u13262:
 16228  00300C  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16229  00300E  A0E8               	btfss	wreg,0,c
 16230  003010  0012               	return	
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;conexaoWifi.h: 286: f_wifi_processo = 6;
 16234  003012  0E06               	movlw	6
 16235  003014  0101               	movlb	1	; () banked
 16236  003016  6F96               	movwf	_f_wifi_processo& (0+255),b
 16237                           
 16238                           ;conexaoWifi.h: 287: t_wifi_restart = 25;
 16239  003018  0E19               	movlw	25
 16240  00301A  6F97               	movwf	_t_wifi_restart& (0+255),b
 16241                           
 16242                           ; BSR set to: 1
 16243                           ;conexaoWifi.h: 288: }
 16244                           ;conexaoWifi.h: 289: break;
 16245  00301C  0012               	return	
 16246  00301E                     
 16247                           ; BSR set to: 1
 16248                           ;conexaoWifi.h: 291: f_wifi_processo = 0;
 16249                           
 16250                           ; BSR set to: 1
 16251  00301E  0E00               	movlw	0
 16252  003020  6F96               	movwf	_f_wifi_processo& (0+255),b
 16253                           
 16254                           ;conexaoWifi.h: 292: }
 16255  003022  0012               	return	
 16256  003024                     l1030:
 16257                           
 16258                           ; BSR set to: 1
 16259  003024  0101               	movlb	1	; () banked
 16260  003026  5196               	movf	_f_wifi_processo& (0+255),w,b
 16261                           
 16262                           ; Switch size 1, requested type "space"
 16263                           ; Number of cases is 16, Range of values is 0 to 15
 16264                           ; switch strategies available:
 16265                           ; Name         Instructions Cycles
 16266                           ; simple_byte           49    25 (average)
 16267                           ;	Chosen strategy is simple_byte
 16268  003028  0A00               	xorlw	0	; case 0
 16269  00302A  B4D8               	btfsc	status,2,c
 16270  00302C  D5EB               	goto	l1031
 16271  00302E  0A01               	xorlw	1	; case 1
 16272  003030  B4D8               	btfsc	status,2,c
 16273  003032  D5F6               	goto	l1033
 16274  003034  0A03               	xorlw	3	; case 2
 16275  003036  B4D8               	btfsc	status,2,c
 16276  003038  D606               	goto	l1035
 16277  00303A  0A01               	xorlw	1	; case 3
 16278  00303C  B4D8               	btfsc	status,2,c
 16279  00303E  D60F               	goto	l1036
 16280  003040  0A07               	xorlw	7	; case 4
 16281  003042  B4D8               	btfsc	status,2,c
 16282  003044  D638               	goto	l1038
 16283  003046  0A01               	xorlw	1	; case 5
 16284  003048  B4D8               	btfsc	status,2,c
 16285  00304A  D652               	goto	l1039
 16286  00304C  0A03               	xorlw	3	; case 6
 16287  00304E  B4D8               	btfsc	status,2,c
 16288  003050  D651               	goto	l1040
 16289  003052  0A01               	xorlw	1	; case 7
 16290  003054  B4D8               	btfsc	status,2,c
 16291  003056  D65E               	goto	l1042
 16292  003058  0A0F               	xorlw	15	; case 8
 16293  00305A  B4D8               	btfsc	status,2,c
 16294  00305C  D689               	goto	l1044
 16295  00305E  0A01               	xorlw	1	; case 9
 16296  003060  B4D8               	btfsc	status,2,c
 16297  003062  D692               	goto	l1045
 16298  003064  0A03               	xorlw	3	; case 10
 16299  003066  B4D8               	btfsc	status,2,c
 16300  003068  D6A2               	goto	l1047
 16301  00306A  0A01               	xorlw	1	; case 11
 16302  00306C  B4D8               	btfsc	status,2,c
 16303  00306E  D6AB               	goto	l1048
 16304  003070  0A07               	xorlw	7	; case 12
 16305  003072  B4D8               	btfsc	status,2,c
 16306  003074  D6BB               	goto	l1050
 16307  003076  0A01               	xorlw	1	; case 13
 16308  003078  B4D8               	btfsc	status,2,c
 16309  00307A  D76A               	goto	l1055
 16310  00307C  0A03               	xorlw	3	; case 14
 16311  00307E  B4D8               	btfsc	status,2,c
 16312  003080  D793               	goto	l1057
 16313  003082  0A01               	xorlw	1	; case 15
 16314  003084  B4D8               	btfsc	status,2,c
 16315  003086  D79C               	goto	l1058
 16316  003088  D7CA               	goto	l1060
 16317  00308A                     
 16318                           ; BSR set to: 1
 16319                           ;conexaoWifi.h: 296: limpaBuffer();
 16320                           
 16321                           ; BSR set to: 1
 16322  00308A  EC75  F02D         	call	_limpaBuffer	;wreg free
 16323                           
 16324                           ;conexaoWifi.h: 297: printf("AT+CIFSR\r\n");
 16325  00308E  0EC8               	movlw	low STR_65
 16326  003090  0100               	movlb	0	; () banked
 16327  003092  6F81               	movwf	printf@f& (0+255),b
 16328  003094  0E7E               	movlw	high STR_65
 16329  003096  6F82               	movwf	(printf@f+1)& (0+255),b
 16330  003098  ECB4  F02D         	call	_printf	;wreg free
 16331                           
 16332                           ;conexaoWifi.h: 298: f_wifi_processo++;
 16333  00309C  0101               	movlb	1	; () banked
 16334  00309E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16335                           
 16336                           ;conexaoWifi.h: 299: break;
 16337  0030A0  0012               	return	
 16338  0030A2                     
 16339                           ; BSR set to: 1
 16340                           ;conexaoWifi.h: 301: if (strstr(bufferSerial, "MAC") != (0)) {
 16341                           
 16342                           ; BSR set to: 1
 16343  0030A2  0E42               	movlw	low _bufferSerial
 16344  0030A4  0100               	movlb	0	; () banked
 16345  0030A6  6F6F               	movwf	strstr@s1& (0+255),b
 16346  0030A8  0E02               	movlw	high _bufferSerial
 16347  0030AA  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16348  0030AC  0EEE               	movlw	low STR_66
 16349  0030AE  6F71               	movwf	strstr@s2& (0+255),b
 16350  0030B0  0E7F               	movlw	high STR_66
 16351  0030B2  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16352  0030B4  EC7F  F028         	call	_strstr	;wreg free
 16353  0030B8  0100               	movlb	0	; () banked
 16354  0030BA  516F               	movf	?_strstr& (0+255),w,b
 16355  0030BC  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16356  0030BE  B4D8               	btfsc	status,2,c
 16357  0030C0  0012               	return	
 16358                           
 16359                           ; BSR set to: 0
 16360                           ;conexaoWifi.h: 302: getMac(strstr(bufferSerial, "MAC"), wifi_MAC);
 16361  0030C2  0E42               	movlw	low _bufferSerial
 16362  0030C4  6F6F               	movwf	strstr@s1& (0+255),b
 16363  0030C6  0E02               	movlw	high _bufferSerial
 16364  0030C8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16365  0030CA  0EEE               	movlw	low STR_66
 16366  0030CC  6F71               	movwf	strstr@s2& (0+255),b
 16367  0030CE  0E7F               	movlw	high STR_66
 16368  0030D0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16369  0030D2  EC7F  F028         	call	_strstr	;wreg free
 16370  0030D6  C06F  F073         	movff	?_strstr,getMac@mac
 16371  0030DA  C070  F074         	movff	?_strstr+1,getMac@mac+1
 16372  0030DE  0EB0               	movlw	low _wifi_MAC
 16373  0030E0  0100               	movlb	0	; () banked
 16374  0030E2  6F75               	movwf	getMac@var& (0+255),b
 16375  0030E4  0E02               	movlw	high _wifi_MAC
 16376  0030E6  6F76               	movwf	(getMac@var+1)& (0+255),b
 16377  0030E8  ECBC  F021         	call	_getMac	;wreg free
 16378                           
 16379                           ;conexaoWifi.h: 303: }
 16380                           ;conexaoWifi.h: 304: break;
 16381  0030EC  0012               	return	
 16382  0030EE                     
 16383                           ;conexaoWifi.h: 306: f_wifi_processo = 0;
 16384  0030EE  0E00               	movlw	0
 16385  0030F0  0101               	movlb	1	; () banked
 16386  0030F2  6F96               	movwf	_f_wifi_processo& (0+255),b
 16387                           
 16388                           ; BSR set to: 1
 16389                           ;conexaoWifi.h: 308: }
 16390                           
 16391                           ;conexaoWifi.h: 307: break;
 16392  0030F4  0012               	return	
 16393  0030F6                     l1062:
 16394                           
 16395                           ; BSR set to: 1
 16396  0030F6  0101               	movlb	1	; () banked
 16397  0030F8  5196               	movf	_f_wifi_processo& (0+255),w,b
 16398                           
 16399                           ; Switch size 1, requested type "space"
 16400                           ; Number of cases is 2, Range of values is 0 to 1
 16401                           ; switch strategies available:
 16402                           ; Name         Instructions Cycles
 16403                           ; simple_byte            7     4 (average)
 16404                           ;	Chosen strategy is simple_byte
 16405  0030FA  0A00               	xorlw	0	; case 0
 16406  0030FC  B4D8               	btfsc	status,2,c
 16407  0030FE  D7C5               	goto	l1063
 16408  003100  0A01               	xorlw	1	; case 1
 16409  003102  B4D8               	btfsc	status,2,c
 16410  003104  D7CE               	goto	l1065
 16411  003106  D7F3               	goto	l1067
 16412  003108                     __end_of_enviaDadosWifi:
 16413                           	opt stack 0
 16414                           tblptru	equ	0xFF8
 16415                           tblptrh	equ	0xFF7
 16416                           tblptrl	equ	0xFF6
 16417                           tablat	equ	0xFF5
 16418                           prodh	equ	0xFF4
 16419                           prodl	equ	0xFF3
 16420                           intcon	equ	0xFF2
 16421                           intcon2	equ	0xFF1
 16422                           intcon3	equ	0xFF0
 16423                           postinc0	equ	0xFEE
 16424                           wreg	equ	0xFE8
 16425                           postdec1	equ	0xFE5
 16426                           fsr1l	equ	0xFE1
 16427                           indf2	equ	0xFDF
 16428                           postinc2	equ	0xFDE
 16429                           postdec2	equ	0xFDD
 16430                           fsr2h	equ	0xFDA
 16431                           fsr2l	equ	0xFD9
 16432                           status	equ	0xFD8
 16433                           
 16434 ;; *************** function _getMac *****************
 16435 ;; Defined at:
 16436 ;;		line 28 in file "src/conexaoWifi.h"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;  mac             2   19[BANK0 ] PTR unsigned char 
 16439 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 16440 ;;		 -> bufferSerial(80), 
 16441 ;;  var             2   21[BANK0 ] PTR unsigned char 
 16442 ;;		 -> wifi_MAC(24), 
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;  i               1   27[BANK0 ] unsigned char 
 16445 ;;  men             1   26[BANK0 ] unsigned char 
 16446 ;;  j               1   25[BANK0 ] unsigned char 
 16447 ;; Return value:  Size  Location     Type
 16448 ;;                  1    wreg      void 
 16449 ;; Registers used:
 16450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16451 ;; Tracked objects:
 16452 ;;		On entry : 0/0
 16453 ;;		On exit  : 0/0
 16454 ;;		Unchanged: 0/0
 16455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16456 ;;      Params:         0       4       0       0       0       0       0       0       0
 16457 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16458 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16459 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16460 ;;Total ram usage:        9 bytes
 16461 ;; Hardware stack levels used:    1
 16462 ;; Hardware stack levels required when called:    7
 16463 ;; This function calls:
 16464 ;;		_strlen
 16465 ;; This function is called by:
 16466 ;;		_enviaDadosWifi
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           	psect	text19
 16471  004378                     __ptext19:
 16472                           	opt stack 0
 16473  004378                     _getMac:
 16474                           	opt stack 22
 16475                           
 16476                           ;conexaoWifi.h: 29: unsigned char i = 0;
 16477                           
 16478                           ;incstack = 0
 16479  004378  0E00               	movlw	0
 16480  00437A  0100               	movlb	0	; () banked
 16481  00437C  6F7B               	movwf	getMac@i& (0+255),b
 16482                           
 16483                           ;conexaoWifi.h: 30: unsigned char j = 0;
 16484  00437E  0E00               	movlw	0
 16485  004380  6F79               	movwf	getMac@j& (0+255),b
 16486                           
 16487                           ;conexaoWifi.h: 31: unsigned char men = 0;
 16488  004382  0E00               	movlw	0
 16489  004384  6F7A               	movwf	getMac@men& (0+255),b
 16490                           
 16491                           ;conexaoWifi.h: 32: for (i = 0; i < strlen(mac); i++) {
 16492  004386  0E00               	movlw	0
 16493  004388  6F7B               	movwf	getMac@i& (0+255),b
 16494  00438A  D09D               	goto	l965
 16495  00438C                     
 16496                           ; BSR set to: 0
 16497                           ;conexaoWifi.h: 33: if (mac[i] == '"' && men == 0) {
 16498                           
 16499                           ; BSR set to: 0
 16500  00438C  517B               	movf	getMac@i& (0+255),w,b
 16501  00438E  0D01               	mullw	1
 16502  004390  C073  F077         	movff	getMac@mac,??_getMac
 16503  004394  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16504  004398  50F3               	movf	prodl,w,c
 16505  00439A  2777               	addwf	??_getMac& (0+255),f,b
 16506  00439C  50F4               	movf	prodh,w,c
 16507  00439E  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16508  0043A0  C077  FFF6         	movff	??_getMac,tblptrl
 16509  0043A4  C078  FFF7         	movff	??_getMac+1,tblptrh
 16510  0043A8  6AF8               	clrf	tblptru,c
 16511  0043AA  0E07               	movlw	(high __ramtop+-1)
 16512  0043AC  64F7               	cpfsgt	tblptrh,c
 16513  0043AE  D003               	bra	u11777
 16514  0043B0  0008               	tblrd		*
 16515  0043B2  50F5               	movf	tablat,w,c
 16516  0043B4  D005               	bra	u11770
 16517  0043B6                     u11777:
 16518  0043B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16519  0043BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16520  0043BE  50EF               	movf	indf0,w,c
 16521  0043C0                     u11770:
 16522  0043C0  0A22               	xorlw	34
 16523  0043C2  A4D8               	btfss	status,2,c
 16524  0043C4  D007               	goto	l967
 16525  0043C6  0100               	movlb	0	; () banked
 16526  0043C8  517A               	movf	getMac@men& (0+255),w,b
 16527  0043CA  A4D8               	btfss	status,2,c
 16528  0043CC  D003               	goto	l967
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;conexaoWifi.h: 34: men = 1;
 16532  0043CE  0E01               	movlw	1
 16533  0043D0  6F7A               	movwf	getMac@men& (0+255),b
 16534                           
 16535                           ;conexaoWifi.h: 35: } else if (mac[i] == '"' && men == 1) {
 16536  0043D2  D077               	goto	l972
 16537  0043D4                     l967:
 16538                           
 16539                           ; BSR set to: 0
 16540  0043D4  0100               	movlb	0	; () banked
 16541  0043D6  517B               	movf	getMac@i& (0+255),w,b
 16542  0043D8  0D01               	mullw	1
 16543  0043DA  C073  F077         	movff	getMac@mac,??_getMac
 16544  0043DE  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16545  0043E2  50F3               	movf	prodl,w,c
 16546  0043E4  2777               	addwf	??_getMac& (0+255),f,b
 16547  0043E6  50F4               	movf	prodh,w,c
 16548  0043E8  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16549  0043EA  C077  FFF6         	movff	??_getMac,tblptrl
 16550  0043EE  C078  FFF7         	movff	??_getMac+1,tblptrh
 16551  0043F2  6AF8               	clrf	tblptru,c
 16552  0043F4  0E07               	movlw	(high __ramtop+-1)
 16553  0043F6  64F7               	cpfsgt	tblptrh,c
 16554  0043F8  D003               	bra	u11807
 16555  0043FA  0008               	tblrd		*
 16556  0043FC  50F5               	movf	tablat,w,c
 16557  0043FE  D005               	bra	u11800
 16558  004400                     u11807:
 16559  004400  CFF6 FFE9          	movff	tblptrl,fsr0l
 16560  004404  CFF7 FFEA          	movff	tblptrh,fsr0h
 16561  004408  50EF               	movf	indf0,w,c
 16562  00440A                     u11800:
 16563  00440A  0A22               	xorlw	34
 16564  00440C  A4D8               	btfss	status,2,c
 16565  00440E  D00F               	goto	l969
 16566  004410  0100               	movlb	0	; () banked
 16567  004412  057A               	decf	getMac@men& (0+255),w,b
 16568  004414  A4D8               	btfss	status,2,c
 16569  004416  D00B               	goto	l969
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;conexaoWifi.h: 36: var[j] = '\0';
 16573  004418  5179               	movf	getMac@j& (0+255),w,b
 16574  00441A  0D01               	mullw	1
 16575  00441C  50F3               	movf	prodl,w,c
 16576  00441E  2575               	addwf	getMac@var& (0+255),w,b
 16577  004420  6ED9               	movwf	fsr2l,c
 16578  004422  50F4               	movf	prodh,w,c
 16579  004424  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16580  004426  6EDA               	movwf	fsr2h,c
 16581  004428  0E00               	movlw	0
 16582  00442A  6EDF               	movwf	indf2,c
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;conexaoWifi.h: 37: return;
 16586  00442C  0012               	return	
 16587  00442E                     l969:
 16588                           
 16589                           ; BSR set to: 0
 16590  00442E  0100               	movlb	0	; () banked
 16591  004430  517A               	movf	getMac@men& (0+255),w,b
 16592  004432  B4D8               	btfsc	status,2,c
 16593  004434  D046               	goto	l972
 16594                           
 16595                           ; BSR set to: 0
 16596  004436  517B               	movf	getMac@i& (0+255),w,b
 16597  004438  0D01               	mullw	1
 16598  00443A  C073  F077         	movff	getMac@mac,??_getMac
 16599  00443E  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16600  004442  50F3               	movf	prodl,w,c
 16601  004444  2777               	addwf	??_getMac& (0+255),f,b
 16602  004446  50F4               	movf	prodh,w,c
 16603  004448  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16604  00444A  C077  FFF6         	movff	??_getMac,tblptrl
 16605  00444E  C078  FFF7         	movff	??_getMac+1,tblptrh
 16606  004452  6AF8               	clrf	tblptru,c
 16607  004454  0E07               	movlw	(high __ramtop+-1)
 16608  004456  64F7               	cpfsgt	tblptrh,c
 16609  004458  D003               	bra	u11847
 16610  00445A  0008               	tblrd		*
 16611  00445C  50F5               	movf	tablat,w,c
 16612  00445E  D005               	bra	u11840
 16613  004460                     u11847:
 16614  004460  CFF6 FFE9          	movff	tblptrl,fsr0l
 16615  004464  CFF7 FFEA          	movff	tblptrh,fsr0h
 16616  004468  50EF               	movf	indf0,w,c
 16617  00446A                     u11840:
 16618  00446A  0A3A               	xorlw	58
 16619  00446C  B4D8               	btfsc	status,2,c
 16620  00446E  D029               	goto	l972
 16621  004470  0E0C               	movlw	12
 16622  004472  0100               	movlb	0	; () banked
 16623  004474  6179               	cpfslt	getMac@j& (0+255),b
 16624  004476  D025               	goto	l972
 16625                           
 16626                           ; BSR set to: 0
 16627                           ;conexaoWifi.h: 39: var[j++] = mac[i];
 16628  004478  517B               	movf	getMac@i& (0+255),w,b
 16629  00447A  0D01               	mullw	1
 16630  00447C  C073  F077         	movff	getMac@mac,??_getMac
 16631  004480  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16632  004484  50F3               	movf	prodl,w,c
 16633  004486  2777               	addwf	??_getMac& (0+255),f,b
 16634  004488  50F4               	movf	prodh,w,c
 16635  00448A  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16636  00448C  C077  FFF6         	movff	??_getMac,tblptrl
 16637  004490  C078  FFF7         	movff	??_getMac+1,tblptrh
 16638  004494  6AF8               	clrf	tblptru,c
 16639  004496  5179               	movf	getMac@j& (0+255),w,b
 16640  004498  0D01               	mullw	1
 16641  00449A  50F3               	movf	prodl,w,c
 16642  00449C  2575               	addwf	getMac@var& (0+255),w,b
 16643  00449E  6ED9               	movwf	fsr2l,c
 16644  0044A0  50F4               	movf	prodh,w,c
 16645  0044A2  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16646  0044A4  6EDA               	movwf	fsr2h,c
 16647  0044A6  0E07               	movlw	(high __ramtop+-1)
 16648  0044A8  64F7               	cpfsgt	tblptrh,c
 16649  0044AA  D003               	bra	u11877
 16650  0044AC  0008               	tblrd		*
 16651  0044AE  50F5               	movf	tablat,w,c
 16652  0044B0  D005               	bra	u11870
 16653  0044B2                     u11877:
 16654  0044B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16655  0044B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16656  0044BA  50EF               	movf	indf0,w,c
 16657  0044BC                     u11870:
 16658  0044BC  6EDF               	movwf	indf2,c
 16659  0044BE  0100               	movlb	0	; () banked
 16660  0044C0  2B79               	incf	getMac@j& (0+255),f,b
 16661  0044C2                     l972:
 16662                           
 16663                           ; BSR set to: 0
 16664                           
 16665                           ; BSR set to: 0
 16666                           
 16667                           ; BSR set to: 0
 16668  0044C2  0100               	movlb	0	; () banked
 16669  0044C4  2B7B               	incf	getMac@i& (0+255),f,b
 16670  0044C6                     l965:
 16671                           
 16672                           ; BSR set to: 0
 16673                           
 16674                           ; BSR set to: 0
 16675  0044C6  C073  F060         	movff	getMac@mac,strlen@s
 16676  0044CA  C074  F061         	movff	getMac@mac+1,strlen@s+1
 16677  0044CE  EC6E  F02C         	call	_strlen	;wreg free
 16678  0044D2  0100               	movlb	0	; () banked
 16679  0044D4  517B               	movf	getMac@i& (0+255),w,b
 16680  0044D6  6F77               	movwf	??_getMac& (0+255),b
 16681  0044D8  6B78               	clrf	(??_getMac+1)& (0+255),b
 16682  0044DA  5160               	movf	?_strlen& (0+255),w,b
 16683  0044DC  5D77               	subwf	??_getMac& (0+255),w,b
 16684  0044DE  5161               	movf	(?_strlen+1)& (0+255),w,b
 16685  0044E0  5978               	subwfb	(??_getMac+1)& (0+255),w,b
 16686  0044E2  B0D8               	btfsc	status,0,c
 16687  0044E4  0012               	return	
 16688  0044E6  D752               	goto	l966
 16689  0044E8                     __end_of_getMac:
 16690                           	opt stack 0
 16691                           tblptru	equ	0xFF8
 16692                           tblptrh	equ	0xFF7
 16693                           tblptrl	equ	0xFF6
 16694                           tablat	equ	0xFF5
 16695                           prodh	equ	0xFF4
 16696                           prodl	equ	0xFF3
 16697                           intcon	equ	0xFF2
 16698                           intcon2	equ	0xFF1
 16699                           intcon3	equ	0xFF0
 16700                           indf0	equ	0xFEF
 16701                           postinc0	equ	0xFEE
 16702                           fsr0h	equ	0xFEA
 16703                           fsr0l	equ	0xFE9
 16704                           wreg	equ	0xFE8
 16705                           postdec1	equ	0xFE5
 16706                           fsr1l	equ	0xFE1
 16707                           indf2	equ	0xFDF
 16708                           postinc2	equ	0xFDE
 16709                           postdec2	equ	0xFDD
 16710                           fsr2h	equ	0xFDA
 16711                           fsr2l	equ	0xFD9
 16712                           status	equ	0xFD8
 16713                           
 16714 ;; *************** function _criaCaracteresCGRAM *****************
 16715 ;; Defined at:
 16716 ;;		line 180 in file "src/lcd.h"
 16717 ;; Parameters:    Size  Location     Type
 16718 ;;		None
 16719 ;; Auto vars:     Size  Location     Type
 16720 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16721 ;;  i               1   67[BANK0 ] unsigned char 
 16722 ;;  j               1   66[BANK0 ] unsigned char 
 16723 ;;  k               1   65[BANK0 ] unsigned char 
 16724 ;; Return value:  Size  Location     Type
 16725 ;;                  1    wreg      void 
 16726 ;; Registers used:
 16727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16728 ;; Tracked objects:
 16729 ;;		On entry : 0/0
 16730 ;;		On exit  : 0/0
 16731 ;;		Unchanged: 0/0
 16732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16733 ;;      Params:         0       0       0       0       0       0       0       0       0
 16734 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16735 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16736 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16737 ;;Total ram usage:       64 bytes
 16738 ;; Hardware stack levels used:    1
 16739 ;; Hardware stack levels required when called:    8
 16740 ;; This function calls:
 16741 ;;		_Lcd_Cmd
 16742 ;;		_Lcd_Write_Char
 16743 ;; This function is called by:
 16744 ;;		_main
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748                           	psect	text20
 16749  005052                     __ptext20:
 16750                           	opt stack 0
 16751  005052                     _criaCaracteresCGRAM:
 16752                           	opt stack 22
 16753                           
 16754                           ;lcd.h: 187: const char character[7][8] = {
 16755                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16756                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16757                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16758                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16759                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16760                           ;lcd.h: 196: };
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;incstack = 0
 16764  005052  0E99               	movlw	low criaCaracteresCGRAM@F3896
 16765  005054  6EF6               	movwf	tblptrl,c
 16766  005056                     	if	1	;There is more than 1 active tblptr byte
 16767  005056  0E77               	movlw	high criaCaracteresCGRAM@F3896
 16768  005058  6EF7               	movwf	tblptrh,c
 16769  00505A                     	endif
 16770  00505A                     	if	0	;There are less than 3 active tblptr bytes
 16771  00505A                     	endif
 16772  00505A  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16773  00505E  0E37               	movlw	55
 16774  005060                     u12570:
 16775  005060  0009               	tblrd		*+
 16776  005062  CFF5 FFDE          	movff	tablat,postinc2
 16777  005066  06E8               	decf	wreg,f,c
 16778  005068  E2FB               	bc	u12570
 16779                           
 16780                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16781  00506A  0E04               	movlw	4
 16782  00506C  ECE4  F02E         	call	_Lcd_Cmd
 16783                           
 16784                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16785  005070  0E00               	movlw	0
 16786  005072  ECE4  F02E         	call	_Lcd_Cmd
 16787                           
 16788                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16789  005076  0E21               	movlw	33
 16790  005078                     u15387:
 16791  005078  2EE8               	decfsz	wreg,f,c
 16792  00507A  D7FE               	bra	u15387
 16793  00507C  F000               	nop	
 16794                           
 16795                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16796  00507E  0E00               	movlw	0
 16797  005080  0100               	movlb	0	; () banked
 16798  005082  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16799                           
 16800                           ; BSR set to: 0
 16801  005084  0E00               	movlw	0
 16802  005086  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16803                           
 16804                           ; BSR set to: 0
 16805  005088  0E00               	movlw	0
 16806  00508A  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16810  00508C  0E00               	movlw	0
 16811  00508E  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16812  005090                     l8295:
 16813                           
 16814                           ; BSR set to: 0
 16815  005090  0E04               	movlw	4
 16816  005092  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16817  005094  D001               	goto	l267
 16818  005096  0012               	return	
 16819  005098                     l267:
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;lcd.h: 202: if (k == 1) i = 0;
 16823                           
 16824                           ; BSR set to: 0
 16825  005098  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16826  00509A  A4D8               	btfss	status,2,c
 16827  00509C  D002               	goto	l269
 16828                           
 16829                           ; BSR set to: 0
 16830  00509E  0E00               	movlw	0
 16831  0050A0  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16832  0050A2                     l269:
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16836  0050A2  0E00               	movlw	0
 16837  0050A4  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16838  0050A6                     l8303:
 16839                           
 16840                           ; BSR set to: 0
 16841  0050A6  0E07               	movlw	7
 16842  0050A8  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16843  0050AA  D001               	goto	l270
 16844  0050AC  D025               	goto	u12620
 16845  0050AE                     l270:
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16849                           
 16850                           ; BSR set to: 0
 16851  0050AE  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16852  0050B0  A4D8               	btfss	status,2,c
 16853  0050B2  D005               	goto	l273
 16854                           
 16855                           ; BSR set to: 0
 16856  0050B4  0E00               	movlw	0
 16857  0050B6  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16858  0050B8  0E00               	movlw	0
 16859  0050BA  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16860  0050BC  D017               	goto	l275
 16861  0050BE                     l273:
 16862                           
 16863                           ; BSR set to: 0
 16864                           
 16865                           ; BSR set to: 0
 16866  0050BE  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16867  0050C0  0D08               	mullw	8
 16868  0050C2  0E67               	movlw	low criaCaracteresCGRAM@character
 16869  0050C4  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16870  0050C6  0E00               	movlw	high criaCaracteresCGRAM@character
 16871  0050C8  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16872  0050CA  50F3               	movf	prodl,w,c
 16873  0050CC  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16874  0050CE  50F4               	movf	prodh,w,c
 16875  0050D0  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16876  0050D2  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16877  0050D4  0D01               	mullw	1
 16878  0050D6  50F3               	movf	prodl,w,c
 16879  0050D8  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16880  0050DA  6ED9               	movwf	fsr2l,c
 16881  0050DC  50F4               	movf	prodh,w,c
 16882  0050DE  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16883  0050E0  6EDA               	movwf	fsr2h,c
 16884  0050E2  50DF               	movf	indf2,w,c
 16885  0050E4  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16886  0050E6  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16887  0050E8  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16888  0050EA  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16889  0050EC                     l275:
 16890                           
 16891                           ; BSR set to: 0
 16892                           
 16893                           ; BSR set to: 0
 16894  0050EC  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16895  0050EE  EC95  F02D         	call	_Lcd_Write_Char
 16896  0050F2  0100               	movlb	0	; () banked
 16897  0050F4  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16898  0050F6  D7D7               	goto	l8303
 16899  0050F8                     u12620:
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;lcd.h: 205: }
 16903                           ;lcd.h: 206: k++;
 16904                           
 16905                           ; BSR set to: 0
 16906  0050F8  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16907  0050FA  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16908  0050FC  D7C9               	goto	l8295
 16909  0050FE                     __end_of_criaCaracteresCGRAM:
 16910                           	opt stack 0
 16911                           tblptru	equ	0xFF8
 16912                           tblptrh	equ	0xFF7
 16913                           tblptrl	equ	0xFF6
 16914                           tablat	equ	0xFF5
 16915                           prodh	equ	0xFF4
 16916                           prodl	equ	0xFF3
 16917                           intcon	equ	0xFF2
 16918                           intcon2	equ	0xFF1
 16919                           intcon3	equ	0xFF0
 16920                           indf0	equ	0xFEF
 16921                           postinc0	equ	0xFEE
 16922                           fsr0h	equ	0xFEA
 16923                           fsr0l	equ	0xFE9
 16924                           wreg	equ	0xFE8
 16925                           postdec1	equ	0xFE5
 16926                           fsr1l	equ	0xFE1
 16927                           indf2	equ	0xFDF
 16928                           postinc2	equ	0xFDE
 16929                           postdec2	equ	0xFDD
 16930                           fsr2h	equ	0xFDA
 16931                           fsr2l	equ	0xFD9
 16932                           status	equ	0xFD8
 16933                           
 16934 ;; *************** function _controle *****************
 16935 ;; Defined at:
 16936 ;;		line 148 in file "src/Controle.h"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;		None
 16939 ;; Auto vars:     Size  Location     Type
 16940 ;;		None
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  1    wreg      void 
 16943 ;; Registers used:
 16944 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16950 ;;      Params:         0       0       0       0       0       0       0       0       0
 16951 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16952 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16953 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16954 ;;Total ram usage:        7 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    8
 16957 ;; This function calls:
 16958 ;;		_acaoFlap
 16959 ;;		_setLed
 16960 ;; This function is called by:
 16961 ;;		_main
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text21
 16966  003AEC                     __ptext21:
 16967                           	opt stack 0
 16968  003AEC                     _controle:
 16969                           	opt stack 22
 16970                           
 16971                           ;Controle.h: 150: if (f_falta_energia == 0) {
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;incstack = 0
 16975  003AEC  0100               	movlb	0	; () banked
 16976  003AEE  51FE               	movf	_f_falta_energia& (0+255),w,b
 16977  003AF0  A4D8               	btfss	status,2,c
 16978  003AF2  D02B               	goto	l1156
 16979                           
 16980                           ; BSR set to: 0
 16981                           ;Controle.h: 151: LATBbits.LATB5 = blinkk;
 16982  003AF4  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16983  003AF6  D002               	bra	u13695
 16984  003AF8  8A8A               	bsf	3978,5,c	;volatile
 16985  003AFA  D001               	bra	u13697
 16986  003AFC                     u13695:
 16987  003AFC  9A8A               	bcf	3978,5,c	;volatile
 16988  003AFE                     u13697:
 16989                           
 16990                           ;Controle.h: 152: LATEbits.LE0 = 0;
 16991  003AFE  908D               	bcf	3981,0,c	;volatile
 16992                           
 16993                           ;Controle.h: 153: LATDbits.LD0 = 1;
 16994  003B00  808C               	bsf	3980,0,c	;volatile
 16995                           
 16996                           ;Controle.h: 154: LATDbits.LD1 = 0;
 16997  003B02  928C               	bcf	3980,1,c	;volatile
 16998                           
 16999                           ;Controle.h: 155: acaoFlap(1, 10, 0);
 17000  003B04  0E00               	movlw	0
 17001  003B06  0100               	movlb	0	; () banked
 17002  003B08  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17003  003B0A  0E0A               	movlw	10
 17004  003B0C  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17005  003B0E  0E00               	movlw	0
 17006  003B10  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17007  003B12  0E00               	movlw	0
 17008  003B14  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17009  003B16  0E01               	movlw	1
 17010  003B18  EC4B  F02A         	call	_acaoFlap
 17011                           
 17012                           ;Controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 17013  003B1C  0441               	decf	_f_buzzer_falta_energia,w,c
 17014  003B1E  A4D8               	btfss	status,2,c
 17015  003B20  D008               	goto	l1157
 17016  003B22  0100               	movlb	0	; () banked
 17017  003B24  51FA               	movf	_buzzer& (0+255),w,b
 17018  003B26  A4D8               	btfss	status,2,c
 17019  003B28  D004               	goto	l1157
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;Controle.h: 157: buzzer = 1;
 17023  003B2A  0E01               	movlw	1
 17024  003B2C  6FFA               	movwf	_buzzer& (0+255),b
 17025                           
 17026                           ;Controle.h: 158: f_buzzer_falta_energia = 0;
 17027  003B2E  0E00               	movlw	0
 17028  003B30  6E41               	movwf	_f_buzzer_falta_energia,c
 17029  003B32                     l1157:
 17030                           
 17031                           ;Controle.h: 159: }
 17032                           ;Controle.h: 160: if (buzzer) {
 17033  003B32  0100               	movlb	0	; () banked
 17034  003B34  51FA               	movf	_buzzer& (0+255),w,b
 17035  003B36  B4D8               	btfsc	status,2,c
 17036  003B38  D006               	goto	l1158
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;Controle.h: 161: LATCbits.LC1 = blinkk;
 17040  003B3A  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17041  003B3C  D002               	bra	u13735
 17042  003B3E  828B               	bsf	3979,1,c	;volatile
 17043  003B40  D001               	bra	u13737
 17044  003B42                     u13735:
 17045  003B42  928B               	bcf	3979,1,c	;volatile
 17046  003B44                     u13737:
 17047                           
 17048                           ;Controle.h: 162: } else {
 17049  003B44  0012               	return	
 17050  003B46                     l1158:
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;Controle.h: 163: LATCbits.LC1 = 0;
 17054  003B46  928B               	bcf	3979,1,c	;volatile
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;Controle.h: 164: }
 17058                           ;Controle.h: 165: return;
 17059  003B48  0012               	return	
 17060  003B4A                     l1156:
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;Controle.h: 167: f_buzzer_falta_energia = 1;
 17064                           
 17065                           ; BSR set to: 0
 17066  003B4A  0E01               	movlw	1
 17067  003B4C  6E41               	movwf	_f_buzzer_falta_energia,c
 17068                           
 17069                           ; BSR set to: 0
 17070                           ;Controle.h: 168: }
 17071                           ;Controle.h: 172: LATBbits.LATB5 = 1;
 17072                           
 17073                           ; BSR set to: 0
 17074  003B4E  8A8A               	bsf	3978,5,c	;volatile
 17075                           
 17076                           ; BSR set to: 0
 17077                           ;Controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 17078  003B50  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17079  003B52  C0FD  F068         	movff	_temp,??_controle
 17080  003B56  6B69               	clrf	(??_controle+1)& (0+255),b
 17081  003B58  2768               	addwf	??_controle& (0+255),f,b
 17082  003B5A  0E00               	movlw	0
 17083  003B5C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17084  003B5E  51EA               	movf	_tempajt& (0+255),w,b
 17085  003B60  6F6A               	movwf	(??_controle+2)& (0+255),b
 17086  003B62  6B6B               	clrf	(??_controle+3)& (0+255),b
 17087  003B64  5168               	movf	??_controle& (0+255),w,b
 17088  003B66  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17089  003B68  516B               	movf	(??_controle+3)& (0+255),w,b
 17090  003B6A  0A80               	xorlw	128
 17091  003B6C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17092  003B6E  5169               	movf	(??_controle+1)& (0+255),w,b
 17093  003B70  0A80               	xorlw	128
 17094  003B72  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17095  003B74  B0D8               	btfsc	status,0,c
 17096  003B76  D01B               	goto	u13750
 17097                           
 17098                           ; BSR set to: 0
 17099  003B78  51EA               	movf	_tempajt& (0+255),w,b
 17100  003B7A  6F68               	movwf	??_controle& (0+255),b
 17101  003B7C  6B69               	clrf	(??_controle+1)& (0+255),b
 17102  003B7E  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17103  003B80  6F6A               	movwf	(??_controle+2)& (0+255),b
 17104  003B82  6B6B               	clrf	(??_controle+3)& (0+255),b
 17105  003B84  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17106  003B86  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17107  003B88  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17108  003B8A  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17109  003B8C  51FD               	movf	_temp& (0+255),w,b
 17110  003B8E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17111  003B90  6B6D               	clrf	(??_controle+5)& (0+255),b
 17112  003B92  516A               	movf	(??_controle+2)& (0+255),w,b
 17113  003B94  276C               	addwf	(??_controle+4)& (0+255),f,b
 17114  003B96  516B               	movf	(??_controle+3)& (0+255),w,b
 17115  003B98  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17116  003B9A  5168               	movf	??_controle& (0+255),w,b
 17117  003B9C  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17118  003B9E  516D               	movf	(??_controle+5)& (0+255),w,b
 17119  003BA0  0A80               	xorlw	128
 17120  003BA2  6F6E               	movwf	(??_controle+6)& (0+255),b
 17121  003BA4  5169               	movf	(??_controle+1)& (0+255),w,b
 17122  003BA6  0A80               	xorlw	128
 17123  003BA8  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17124  003BAA  A0D8               	btfss	status,0,c
 17125  003BAC  D024               	goto	l1162
 17126  003BAE                     u13750:
 17127                           
 17128                           ; BSR set to: 0
 17129                           
 17130                           ; BSR set to: 0
 17131  003BAE  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17132  003BB0  B4D8               	btfsc	status,2,c
 17133  003BB2  D021               	goto	l1162
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;Controle.h: 175: setLed(8, 1);
 17137  003BB4  0E01               	movlw	1
 17138  003BB6  6F60               	movwf	setLed@acao& (0+255),b
 17139  003BB8  0E08               	movlw	8
 17140  003BBA  EC1A  F02F         	call	_setLed
 17141                           
 17142                           ;Controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 17143  003BBE  0E00               	movlw	0
 17144  003BC0  0100               	movlb	0	; () banked
 17145  003BC2  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17146  003BC4  0E0A               	movlw	10
 17147  003BC6  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17148  003BC8  0E00               	movlw	0
 17149  003BCA  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17150  003BCC  0E00               	movlw	0
 17151  003BCE  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17152  003BD0  0E00               	movlw	0
 17153  003BD2  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17154  003BD4  0E01               	movlw	1
 17155  003BD6  EC4B  F02A         	call	_acaoFlap
 17156                           
 17157                           ;Controle.h: 177: if (t_controle_modo_seguranca == 0) {
 17158  003BDA  5033               	movf	_t_controle_modo_seguranca,w,c
 17159  003BDC  1034               	iorwf	_t_controle_modo_seguranca+1,w,c
 17160  003BDE  A4D8               	btfss	status,2,c
 17161  003BE0  D043               	goto	l1169
 17162                           
 17163                           ;Controle.h: 178: t_controle_modo_seguranca = 1800;
 17164  003BE2  0E07               	movlw	7
 17165  003BE4  6E34               	movwf	_t_controle_modo_seguranca+1,c
 17166  003BE6  0E08               	movlw	8
 17167  003BE8  6E33               	movwf	_t_controle_modo_seguranca,c
 17168                           
 17169                           ;Controle.h: 179: md_seguranca = ~md_seguranca;
 17170  003BEA  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17171  003BEC  D002               	goto	u13780
 17172  003BEE  824F               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17173  003BF0  D03B               	goto	l1169
 17174  003BF2                     u13780:
 17175  003BF2  924F               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17176                           
 17177                           ;Controle.h: 180: }
 17178                           ;Controle.h: 181: } else {
 17179  003BF4  D039               	goto	l1169
 17180  003BF6                     l1162:
 17181                           
 17182                           ;Controle.h: 182: setLed(8, 0);
 17183  003BF6  0E00               	movlw	0
 17184  003BF8  0100               	movlb	0	; () banked
 17185  003BFA  6F60               	movwf	setLed@acao& (0+255),b
 17186  003BFC  0E08               	movlw	8
 17187  003BFE  EC1A  F02F         	call	_setLed
 17188                           
 17189                           ;Controle.h: 183: if (umid >= (umidajt + h_flap)) {
 17190  003C02  0101               	movlb	1	; () banked
 17191  003C04  51F4               	movf	_h_flap& (0+255),w,b
 17192  003C06  C0E9  F068         	movff	_umidajt,??_controle
 17193  003C0A  0100               	movlb	0	; () banked
 17194  003C0C  6B69               	clrf	(??_controle+1)& (0+255),b
 17195  003C0E  2768               	addwf	??_controle& (0+255),f,b
 17196  003C10  0E00               	movlw	0
 17197  003C12  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17198  003C14  51FC               	movf	_umid& (0+255),w,b
 17199  003C16  6F6A               	movwf	(??_controle+2)& (0+255),b
 17200  003C18  6B6B               	clrf	(??_controle+3)& (0+255),b
 17201  003C1A  5168               	movf	??_controle& (0+255),w,b
 17202  003C1C  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17203  003C1E  516B               	movf	(??_controle+3)& (0+255),w,b
 17204  003C20  0A80               	xorlw	128
 17205  003C22  6F6C               	movwf	(??_controle+4)& (0+255),b
 17206  003C24  5169               	movf	(??_controle+1)& (0+255),w,b
 17207  003C26  0A80               	xorlw	128
 17208  003C28  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17209  003C2A  A0D8               	btfss	status,0,c
 17210  003C2C  D00D               	goto	l1167
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;Controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 17214  003C2E  C0F5  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 17215  003C32  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17216  003C34  51F4               	movf	_t_flap_intervalo& (0+255),w,b
 17217  003C36  0D0A               	mullw	10
 17218  003C38  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 17219  003C3C  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 17220  003C40  0E01               	movlw	1
 17221  003C42  EC4B  F02A         	call	_acaoFlap
 17222                           
 17223                           ;Controle.h: 185: } else if (umid <= umidajt) {
 17224  003C46  D010               	goto	l1169
 17225  003C48                     l1167:
 17226  003C48  0100               	movlb	0	; () banked
 17227  003C4A  51FC               	movf	_umid& (0+255),w,b
 17228  003C4C  5DE9               	subwf	_umidajt& (0+255),w,b
 17229  003C4E  A0D8               	btfss	status,0,c
 17230  003C50  D00B               	goto	l1169
 17231                           
 17232                           ; BSR set to: 0
 17233                           ;Controle.h: 186: acaoFlap(0, 200, 600);
 17234  003C52  0E00               	movlw	0
 17235  003C54  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17236  003C56  0EC8               	movlw	200
 17237  003C58  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17238  003C5A  0E02               	movlw	2
 17239  003C5C  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17240  003C5E  0E58               	movlw	88
 17241  003C60  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17242  003C62  0E00               	movlw	0
 17243  003C64  EC4B  F02A         	call	_acaoFlap
 17244  003C68                     l1169:
 17245                           
 17246                           ;Controle.h: 187: }
 17247                           ;Controle.h: 188: }
 17248                           ;Controle.h: 189: if (temp > 0) {
 17249  003C68  0100               	movlb	0	; () banked
 17250  003C6A  51FD               	movf	_temp& (0+255),w,b
 17251  003C6C  B4D8               	btfsc	status,2,c
 17252  003C6E  D03D               	goto	l1170
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;Controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 17256  003C70  51EF               	movf	_h_abafador& (0+255),w,b
 17257  003C72  C0FD  F068         	movff	_temp,??_controle
 17258  003C76  6B69               	clrf	(??_controle+1)& (0+255),b
 17259  003C78  2768               	addwf	??_controle& (0+255),f,b
 17260  003C7A  0E00               	movlw	0
 17261  003C7C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17262  003C7E  51EA               	movf	_tempajt& (0+255),w,b
 17263  003C80  6F6A               	movwf	(??_controle+2)& (0+255),b
 17264  003C82  6B6B               	clrf	(??_controle+3)& (0+255),b
 17265  003C84  5168               	movf	??_controle& (0+255),w,b
 17266  003C86  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17267  003C88  516B               	movf	(??_controle+3)& (0+255),w,b
 17268  003C8A  0A80               	xorlw	128
 17269  003C8C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17270  003C8E  5169               	movf	(??_controle+1)& (0+255),w,b
 17271  003C90  0A80               	xorlw	128
 17272  003C92  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17273  003C94  A0D8               	btfss	status,0,c
 17274  003C96  D002               	goto	l1171
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;Controle.h: 191: LATEbits.LE0 = 1;
 17278  003C98  808D               	bsf	3981,0,c	;volatile
 17279  003C9A  D008               	goto	L30
 17280  003C9C                     l1171:
 17281                           
 17282                           ; BSR set to: 0
 17283                           
 17284                           ; BSR set to: 0
 17285  003C9C  51EA               	movf	_tempajt& (0+255),w,b
 17286  003C9E  5DFD               	subwf	_temp& (0+255),w,b
 17287  003CA0  A0D8               	btfss	status,0,c
 17288  003CA2  D003               	goto	l1173
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;Controle.h: 194: LATEbits.LE0 = 0;
 17292  003CA4  908D               	bcf	3981,0,c	;volatile
 17293                           
 17294                           ;Controle.h: 195: LATDbits.LD0 = 1;
 17295  003CA6  808C               	bsf	3980,0,c	;volatile
 17296                           
 17297                           ;Controle.h: 196: } else {
 17298  003CA8  D002               	goto	l1174
 17299  003CAA                     l1173:
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;Controle.h: 197: LATEbits.LE0 = 0;
 17303  003CAA  908D               	bcf	3981,0,c	;volatile
 17304  003CAC                     L30:
 17305                           
 17306                           ;Controle.h: 198: LATDbits.LD0 = 0;
 17307  003CAC  908C               	bcf	3980,0,c	;volatile
 17308  003CAE                     l1174:
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;Controle.h: 199: }
 17312                           ;Controle.h: 201: if (fornalha == 1) {
 17313                           
 17314                           ; BSR set to: 0
 17315                           
 17316                           ; BSR set to: 0
 17317  003CAE  05F9               	decf	_fornalha& (0+255),w,b
 17318  003CB0  A4D8               	btfss	status,2,c
 17319  003CB2  D01D               	goto	L31
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;Controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 17323  003CB4  51F0               	movf	_h_venotinha& (0+255),w,b
 17324  003CB6  C0FD  F068         	movff	_temp,??_controle
 17325  003CBA  6B69               	clrf	(??_controle+1)& (0+255),b
 17326  003CBC  2768               	addwf	??_controle& (0+255),f,b
 17327  003CBE  0E00               	movlw	0
 17328  003CC0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17329  003CC2  51EA               	movf	_tempajt& (0+255),w,b
 17330  003CC4  6F6A               	movwf	(??_controle+2)& (0+255),b
 17331  003CC6  6B6B               	clrf	(??_controle+3)& (0+255),b
 17332  003CC8  5168               	movf	??_controle& (0+255),w,b
 17333  003CCA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17334  003CCC  516B               	movf	(??_controle+3)& (0+255),w,b
 17335  003CCE  0A80               	xorlw	128
 17336  003CD0  6F6C               	movwf	(??_controle+4)& (0+255),b
 17337  003CD2  5169               	movf	(??_controle+1)& (0+255),w,b
 17338  003CD4  0A80               	xorlw	128
 17339  003CD6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17340  003CD8  A0D8               	btfss	status,0,c
 17341  003CDA  D002               	goto	l1176
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;Controle.h: 203: LATDbits.LD1 = 1;
 17345  003CDC  828C               	bsf	3980,1,c	;volatile
 17346                           
 17347                           ;Controle.h: 205: } else if (temp >= tempajt) {
 17348  003CDE  D008               	goto	l1180
 17349  003CE0                     l1176:
 17350                           
 17351                           ; BSR set to: 0
 17352                           
 17353                           ; BSR set to: 0
 17354  003CE0  51EA               	movf	_tempajt& (0+255),w,b
 17355  003CE2  5DFD               	subwf	_temp& (0+255),w,b
 17356  003CE4  A0D8               	btfss	status,0,c
 17357  003CE6  D004               	goto	l1180
 17358  003CE8  D002               	goto	L31
 17359  003CEA                     l1170:
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;Controle.h: 213: LATEbits.LE0 = 0;
 17363  003CEA  908D               	bcf	3981,0,c	;volatile
 17364                           
 17365                           ;Controle.h: 214: LATDbits.LD0 = 1;
 17366  003CEC  808C               	bsf	3980,0,c	;volatile
 17367  003CEE                     L31:
 17368                           
 17369                           ;Controle.h: 215: LATDbits.LD1 = 0;
 17370  003CEE  928C               	bcf	3980,1,c	;volatile
 17371  003CF0                     l1180:
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;Controle.h: 216: }
 17375                           ;Controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 17376                           
 17377                           ; BSR set to: 0
 17378  003CF0  05F9               	decf	_fornalha& (0+255),w,b
 17379  003CF2  A4D8               	btfss	status,2,c
 17380  003CF4  D007               	goto	l1181
 17381                           
 17382                           ; BSR set to: 0
 17383  003CF6  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17384  003CF8  B4D8               	btfsc	status,2,c
 17385  003CFA  D004               	goto	l1181
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;Controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 17389  003CFC  C0F2  F035         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 17390  003D00  6A36               	clrf	_t_controle_religar_ventoinha+1,c
 17391                           
 17392                           ;Controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 17393  003D02  D009               	goto	l1183
 17394  003D04                     l1181:
 17395                           
 17396                           ; BSR set to: 0
 17397                           
 17398                           ; BSR set to: 0
 17399  003D04  5035               	movf	_t_controle_religar_ventoinha,w,c
 17400  003D06  1036               	iorwf	_t_controle_religar_ventoinha+1,w,c
 17401  003D08  A4D8               	btfss	status,2,c
 17402  003D0A  D005               	goto	l1183
 17403                           
 17404                           ; BSR set to: 0
 17405  003D0C  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17406  003D0E  B4D8               	btfsc	status,2,c
 17407  003D10  D002               	goto	l1183
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;Controle.h: 222: fornalha = 1;
 17411  003D12  0E01               	movlw	1
 17412  003D14  6FF9               	movwf	_fornalha& (0+255),b
 17413  003D16                     l1183:
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;Controle.h: 223: }
 17417                           ;Controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 17418                           
 17419                           ; BSR set to: 0
 17420                           
 17421                           ; BSR set to: 0
 17422  003D16  05FA               	decf	_buzzer& (0+255),w,b
 17423  003D18  A4D8               	btfss	status,2,c
 17424  003D1A  D043               	goto	l1188
 17425                           
 17426                           ; BSR set to: 0
 17427  003D1C  503F               	movf	_t_controle_buzzer,w,c
 17428  003D1E  A4D8               	btfss	status,2,c
 17429  003D20  D040               	goto	l1188
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;Controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 17433  003D22  51EE               	movf	_h_buzzer& (0+255),w,b
 17434  003D24  C0FD  F068         	movff	_temp,??_controle
 17435  003D28  6B69               	clrf	(??_controle+1)& (0+255),b
 17436  003D2A  2768               	addwf	??_controle& (0+255),f,b
 17437  003D2C  0E00               	movlw	0
 17438  003D2E  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17439  003D30  51EA               	movf	_tempajt& (0+255),w,b
 17440  003D32  6F6A               	movwf	(??_controle+2)& (0+255),b
 17441  003D34  6B6B               	clrf	(??_controle+3)& (0+255),b
 17442  003D36  5168               	movf	??_controle& (0+255),w,b
 17443  003D38  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17444  003D3A  516B               	movf	(??_controle+3)& (0+255),w,b
 17445  003D3C  0A80               	xorlw	128
 17446  003D3E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17447  003D40  5169               	movf	(??_controle+1)& (0+255),w,b
 17448  003D42  0A80               	xorlw	128
 17449  003D44  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17450  003D46  B0D8               	btfsc	status,0,c
 17451  003D48  D01B               	goto	u13950
 17452                           
 17453                           ; BSR set to: 0
 17454  003D4A  51EA               	movf	_tempajt& (0+255),w,b
 17455  003D4C  6F68               	movwf	??_controle& (0+255),b
 17456  003D4E  6B69               	clrf	(??_controle+1)& (0+255),b
 17457  003D50  51EE               	movf	_h_buzzer& (0+255),w,b
 17458  003D52  6F6A               	movwf	(??_controle+2)& (0+255),b
 17459  003D54  6B6B               	clrf	(??_controle+3)& (0+255),b
 17460  003D56  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17461  003D58  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17462  003D5A  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17463  003D5C  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17464  003D5E  51FD               	movf	_temp& (0+255),w,b
 17465  003D60  6F6C               	movwf	(??_controle+4)& (0+255),b
 17466  003D62  6B6D               	clrf	(??_controle+5)& (0+255),b
 17467  003D64  516A               	movf	(??_controle+2)& (0+255),w,b
 17468  003D66  276C               	addwf	(??_controle+4)& (0+255),f,b
 17469  003D68  516B               	movf	(??_controle+3)& (0+255),w,b
 17470  003D6A  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17471  003D6C  5168               	movf	??_controle& (0+255),w,b
 17472  003D6E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17473  003D70  516D               	movf	(??_controle+5)& (0+255),w,b
 17474  003D72  0A80               	xorlw	128
 17475  003D74  6F6E               	movwf	(??_controle+6)& (0+255),b
 17476  003D76  5169               	movf	(??_controle+1)& (0+255),w,b
 17477  003D78  0A80               	xorlw	128
 17478  003D7A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17479  003D7C  A0D8               	btfss	status,0,c
 17480  003D7E  D010               	goto	l1185
 17481  003D80                     u13950:
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;Controle.h: 228: t_controle_buzzer = 10;
 17485                           
 17486                           ; BSR set to: 0
 17487  003D80  0E0A               	movlw	10
 17488  003D82  6E3F               	movwf	_t_controle_buzzer,c
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;Controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 17492  003D84  A28B               	btfss	3979,1,c	;volatile
 17493  003D86  D002               	goto	u13960
 17494  003D88  0E01               	movlw	1
 17495  003D8A  D001               	goto	u13966
 17496  003D8C                     u13960:
 17497  003D8C  0E00               	movlw	0
 17498  003D8E                     u13966:
 17499  003D8E  0AFF               	xorlw	255
 17500  003D90  6F68               	movwf	??_controle& (0+255),b
 17501  003D92  4768               	rlncf	??_controle& (0+255),f,b
 17502  003D94  508B               	movf	3979,w,c	;volatile
 17503  003D96  1968               	xorwf	??_controle& (0+255),w,b
 17504  003D98  0BFD               	andlw	-3
 17505  003D9A  1968               	xorwf	??_controle& (0+255),w,b
 17506  003D9C  6E8B               	movwf	3979,c	;volatile
 17507                           
 17508                           ;Controle.h: 230: } else {
 17509  003D9E  D001               	goto	l1188
 17510  003DA0                     l1185:
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;Controle.h: 231: LATCbits.LC1 = 0;
 17514  003DA0  928B               	bcf	3979,1,c	;volatile
 17515  003DA2                     l1188:
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;Controle.h: 232: }
 17519                           ;Controle.h: 233: }
 17520                           ;Controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 17521                           
 17522                           ; BSR set to: 0
 17523                           
 17524                           ; BSR set to: 0
 17525  003DA2  05FA               	decf	_buzzer& (0+255),w,b
 17526  003DA4  A4D8               	btfss	status,2,c
 17527  003DA6  D007               	goto	l1189
 17528                           
 17529                           ; BSR set to: 0
 17530  003DA8  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17531  003DAA  B4D8               	btfsc	status,2,c
 17532  003DAC  D004               	goto	l1189
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;Controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 17536  003DAE  C0FF  F037         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 17537  003DB2  6A38               	clrf	_t_controle_religar_buzzer+1,c
 17538                           
 17539                           ;Controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 17540  003DB4  D009               	goto	l1191
 17541  003DB6                     l1189:
 17542                           
 17543                           ; BSR set to: 0
 17544                           
 17545                           ; BSR set to: 0
 17546  003DB6  5037               	movf	_t_controle_religar_buzzer,w,c
 17547  003DB8  1038               	iorwf	_t_controle_religar_buzzer+1,w,c
 17548  003DBA  A4D8               	btfss	status,2,c
 17549  003DBC  D005               	goto	l1191
 17550                           
 17551                           ; BSR set to: 0
 17552  003DBE  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17553  003DC0  B4D8               	btfsc	status,2,c
 17554  003DC2  D002               	goto	l1191
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;Controle.h: 237: buzzer = 1;
 17558  003DC4  0E01               	movlw	1
 17559  003DC6  6FFA               	movwf	_buzzer& (0+255),b
 17560  003DC8                     l1191:
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;Controle.h: 238: }
 17564                           ;Controle.h: 239: if (!buzzer) {
 17565                           
 17566                           ; BSR set to: 0
 17567  003DC8  51FA               	movf	_buzzer& (0+255),w,b
 17568  003DCA  B4D8               	btfsc	status,2,c
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;Controle.h: 240: LATCbits.LC1 = 0;
 17572  003DCC  928B               	bcf	3979,1,c	;volatile
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;Controle.h: 241: }
 17576                           ;Controle.h: 245: if (temp + 3 < tempajt) {
 17577                           
 17578                           ; BSR set to: 0
 17579  003DCE  51EA               	movf	_tempajt& (0+255),w,b
 17580  003DD0  6F68               	movwf	??_controle& (0+255),b
 17581  003DD2  6B69               	clrf	(??_controle+1)& (0+255),b
 17582  003DD4  51FD               	movf	_temp& (0+255),w,b
 17583  003DD6  6F6A               	movwf	(??_controle+2)& (0+255),b
 17584  003DD8  6B6B               	clrf	(??_controle+3)& (0+255),b
 17585  003DDA  0E03               	movlw	3
 17586  003DDC  276A               	addwf	(??_controle+2)& (0+255),f,b
 17587  003DDE  0E00               	movlw	0
 17588  003DE0  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17589  003DE2  5168               	movf	??_controle& (0+255),w,b
 17590  003DE4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17591  003DE6  516B               	movf	(??_controle+3)& (0+255),w,b
 17592  003DE8  0A80               	xorlw	128
 17593  003DEA  6F6C               	movwf	(??_controle+4)& (0+255),b
 17594  003DEC  5169               	movf	(??_controle+1)& (0+255),w,b
 17595  003DEE  0A80               	xorlw	128
 17596  003DF0  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17597  003DF2  B0D8               	btfsc	status,0,c
 17598  003DF4  D00C               	goto	l1193
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;Controle.h: 246: setLed(16, 1);
 17602  003DF6  0E01               	movlw	1
 17603  003DF8  6F60               	movwf	setLed@acao& (0+255),b
 17604  003DFA  0E10               	movlw	16
 17605  003DFC  EC1A  F02F         	call	_setLed
 17606                           
 17607                           ;Controle.h: 247: setLed(32, 0);
 17608  003E00  0E00               	movlw	0
 17609  003E02  0100               	movlb	0	; () banked
 17610  003E04  6F60               	movwf	setLed@acao& (0+255),b
 17611  003E06  0E20               	movlw	32
 17612  003E08  EC1A  F02F         	call	_setLed
 17613                           
 17614                           ;Controle.h: 248: } else if (temp - 3 > tempajt) {
 17615  003E0C  D031               	goto	l1196
 17616  003E0E                     l1193:
 17617  003E0E  0EFD               	movlw	253
 17618  003E10  0100               	movlb	0	; () banked
 17619  003E12  6F68               	movwf	??_controle& (0+255),b
 17620  003E14  0EFF               	movlw	255
 17621  003E16  6F69               	movwf	(??_controle+1)& (0+255),b
 17622  003E18  51FD               	movf	_temp& (0+255),w,b
 17623  003E1A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17624  003E1C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17625  003E1E  5168               	movf	??_controle& (0+255),w,b
 17626  003E20  276A               	addwf	(??_controle+2)& (0+255),f,b
 17627  003E22  5169               	movf	(??_controle+1)& (0+255),w,b
 17628  003E24  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17629  003E26  51EA               	movf	_tempajt& (0+255),w,b
 17630  003E28  6F6C               	movwf	(??_controle+4)& (0+255),b
 17631  003E2A  6B6D               	clrf	(??_controle+5)& (0+255),b
 17632  003E2C  516A               	movf	(??_controle+2)& (0+255),w,b
 17633  003E2E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17634  003E30  516D               	movf	(??_controle+5)& (0+255),w,b
 17635  003E32  0A80               	xorlw	128
 17636  003E34  6F6E               	movwf	(??_controle+6)& (0+255),b
 17637  003E36  516B               	movf	(??_controle+3)& (0+255),w,b
 17638  003E38  0A80               	xorlw	128
 17639  003E3A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17640  003E3C  B0D8               	btfsc	status,0,c
 17641  003E3E  D00C               	goto	l1195
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;Controle.h: 249: setLed(32, 1);
 17645  003E40  0E01               	movlw	1
 17646  003E42  6F60               	movwf	setLed@acao& (0+255),b
 17647  003E44  0E20               	movlw	32
 17648  003E46  EC1A  F02F         	call	_setLed
 17649                           
 17650                           ;Controle.h: 250: setLed(16, 0);
 17651  003E4A  0E00               	movlw	0
 17652  003E4C  0100               	movlb	0	; () banked
 17653  003E4E  6F60               	movwf	setLed@acao& (0+255),b
 17654  003E50  0E10               	movlw	16
 17655  003E52  EC1A  F02F         	call	_setLed
 17656                           
 17657                           ;Controle.h: 251: } else {
 17658  003E56  D00C               	goto	l1196
 17659  003E58                     l1195:
 17660                           
 17661                           ;Controle.h: 252: setLed(32, 0);
 17662  003E58  0E00               	movlw	0
 17663  003E5A  0100               	movlb	0	; () banked
 17664  003E5C  6F60               	movwf	setLed@acao& (0+255),b
 17665  003E5E  0E20               	movlw	32
 17666  003E60  EC1A  F02F         	call	_setLed
 17667                           
 17668                           ;Controle.h: 253: setLed(16, 0);
 17669  003E64  0E00               	movlw	0
 17670  003E66  0100               	movlb	0	; () banked
 17671  003E68  6F60               	movwf	setLed@acao& (0+255),b
 17672  003E6A  0E10               	movlw	16
 17673  003E6C  EC1A  F02F         	call	_setLed
 17674  003E70                     l1196:
 17675                           
 17676                           ;Controle.h: 254: }
 17677                           ;Controle.h: 256: if (umid + 3 < umidajt) {
 17678  003E70  0100               	movlb	0	; () banked
 17679  003E72  51E9               	movf	_umidajt& (0+255),w,b
 17680  003E74  6F68               	movwf	??_controle& (0+255),b
 17681  003E76  6B69               	clrf	(??_controle+1)& (0+255),b
 17682  003E78  51FC               	movf	_umid& (0+255),w,b
 17683  003E7A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17684  003E7C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17685  003E7E  0E03               	movlw	3
 17686  003E80  276A               	addwf	(??_controle+2)& (0+255),f,b
 17687  003E82  0E00               	movlw	0
 17688  003E84  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17689  003E86  5168               	movf	??_controle& (0+255),w,b
 17690  003E88  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17691  003E8A  516B               	movf	(??_controle+3)& (0+255),w,b
 17692  003E8C  0A80               	xorlw	128
 17693  003E8E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17694  003E90  5169               	movf	(??_controle+1)& (0+255),w,b
 17695  003E92  0A80               	xorlw	128
 17696  003E94  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17697  003E96  B0D8               	btfsc	status,0,c
 17698  003E98  D00C               	goto	l1197
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;Controle.h: 257: setLed(1, 0);
 17702  003E9A  0E00               	movlw	0
 17703  003E9C  6F60               	movwf	setLed@acao& (0+255),b
 17704  003E9E  0E01               	movlw	1
 17705  003EA0  EC1A  F02F         	call	_setLed
 17706                           
 17707                           ;Controle.h: 258: setLed(2, 1);
 17708  003EA4  0E01               	movlw	1
 17709  003EA6  0100               	movlb	0	; () banked
 17710  003EA8  6F60               	movwf	setLed@acao& (0+255),b
 17711  003EAA  0E02               	movlw	2
 17712  003EAC  EC1A  F02F         	call	_setLed
 17713                           
 17714                           ;Controle.h: 259: } else if (umid - 3 > umidajt) {
 17715  003EB0  0012               	return	
 17716  003EB2                     l1197:
 17717  003EB2  0EFD               	movlw	253
 17718  003EB4  0100               	movlb	0	; () banked
 17719  003EB6  6F68               	movwf	??_controle& (0+255),b
 17720  003EB8  0EFF               	movlw	255
 17721  003EBA  6F69               	movwf	(??_controle+1)& (0+255),b
 17722  003EBC  51FC               	movf	_umid& (0+255),w,b
 17723  003EBE  6F6A               	movwf	(??_controle+2)& (0+255),b
 17724  003EC0  6B6B               	clrf	(??_controle+3)& (0+255),b
 17725  003EC2  5168               	movf	??_controle& (0+255),w,b
 17726  003EC4  276A               	addwf	(??_controle+2)& (0+255),f,b
 17727  003EC6  5169               	movf	(??_controle+1)& (0+255),w,b
 17728  003EC8  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17729  003ECA  51E9               	movf	_umidajt& (0+255),w,b
 17730  003ECC  6F6C               	movwf	(??_controle+4)& (0+255),b
 17731  003ECE  6B6D               	clrf	(??_controle+5)& (0+255),b
 17732  003ED0  516A               	movf	(??_controle+2)& (0+255),w,b
 17733  003ED2  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17734  003ED4  516D               	movf	(??_controle+5)& (0+255),w,b
 17735  003ED6  0A80               	xorlw	128
 17736  003ED8  6F6E               	movwf	(??_controle+6)& (0+255),b
 17737  003EDA  516B               	movf	(??_controle+3)& (0+255),w,b
 17738  003EDC  0A80               	xorlw	128
 17739  003EDE  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17740  003EE0  B0D8               	btfsc	status,0,c
 17741  003EE2  D00C               	goto	l1199
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;Controle.h: 260: setLed(1, 1);
 17745  003EE4  0E01               	movlw	1
 17746  003EE6  6F60               	movwf	setLed@acao& (0+255),b
 17747  003EE8  0E01               	movlw	1
 17748  003EEA  EC1A  F02F         	call	_setLed
 17749                           
 17750                           ;Controle.h: 261: setLed(2, 0);
 17751  003EEE  0E00               	movlw	0
 17752  003EF0  0100               	movlb	0	; () banked
 17753  003EF2  6F60               	movwf	setLed@acao& (0+255),b
 17754  003EF4  0E02               	movlw	2
 17755  003EF6  EC1A  F02F         	call	_setLed
 17756                           
 17757                           ;Controle.h: 262: } else {
 17758  003EFA  0012               	return	
 17759  003EFC                     l1199:
 17760                           
 17761                           ;Controle.h: 263: setLed(1, 0);
 17762  003EFC  0E00               	movlw	0
 17763  003EFE  0100               	movlb	0	; () banked
 17764  003F00  6F60               	movwf	setLed@acao& (0+255),b
 17765  003F02  0E01               	movlw	1
 17766  003F04  EC1A  F02F         	call	_setLed
 17767                           
 17768                           ;Controle.h: 264: setLed(2, 0);
 17769  003F08  0E00               	movlw	0
 17770  003F0A  0100               	movlb	0	; () banked
 17771  003F0C  6F60               	movwf	setLed@acao& (0+255),b
 17772  003F0E  0E02               	movlw	2
 17773  003F10  EC1A  F02F         	call	_setLed
 17774  003F14  0012               	return	
 17775  003F16                     __end_of_controle:
 17776                           	opt stack 0
 17777                           tblptru	equ	0xFF8
 17778                           tblptrh	equ	0xFF7
 17779                           tblptrl	equ	0xFF6
 17780                           tablat	equ	0xFF5
 17781                           prodh	equ	0xFF4
 17782                           prodl	equ	0xFF3
 17783                           intcon	equ	0xFF2
 17784                           intcon2	equ	0xFF1
 17785                           intcon3	equ	0xFF0
 17786                           indf0	equ	0xFEF
 17787                           postinc0	equ	0xFEE
 17788                           fsr0h	equ	0xFEA
 17789                           fsr0l	equ	0xFE9
 17790                           wreg	equ	0xFE8
 17791                           postdec1	equ	0xFE5
 17792                           fsr1l	equ	0xFE1
 17793                           indf2	equ	0xFDF
 17794                           postinc2	equ	0xFDE
 17795                           postdec2	equ	0xFDD
 17796                           fsr2h	equ	0xFDA
 17797                           fsr2l	equ	0xFD9
 17798                           status	equ	0xFD8
 17799                           
 17800 ;; *************** function _acaoFlap *****************
 17801 ;; Defined at:
 17802 ;;		line 123 in file "src/Controle.h"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  acao            1    wreg     unsigned char 
 17805 ;;  tempo_ativad    2    2[BANK0 ] int 
 17806 ;;  tempo_aguard    2    4[BANK0 ] int 
 17807 ;; Auto vars:     Size  Location     Type
 17808 ;;  acao            1    7[BANK0 ] unsigned char 
 17809 ;; Return value:  Size  Location     Type
 17810 ;;                  1    wreg      void 
 17811 ;; Registers used:
 17812 ;;		wreg, status,2, status,0, cstack
 17813 ;; Tracked objects:
 17814 ;;		On entry : 0/0
 17815 ;;		On exit  : 0/0
 17816 ;;		Unchanged: 0/0
 17817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17818 ;;      Params:         0       4       0       0       0       0       0       0       0
 17819 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17820 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17821 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17822 ;;Total ram usage:        6 bytes
 17823 ;; Hardware stack levels used:    1
 17824 ;; Hardware stack levels required when called:    7
 17825 ;; This function calls:
 17826 ;;		_setLed
 17827 ;; This function is called by:
 17828 ;;		_controle
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           	psect	text22
 17833  005496                     __ptext22:
 17834                           	opt stack 0
 17835  005496                     _acaoFlap:
 17836                           	opt stack 22
 17837                           
 17838                           ;incstack = 0
 17839                           ;acaoFlap@acao stored from wreg
 17840  005496  0100               	movlb	0	; () banked
 17841  005498  6F67               	movwf	acaoFlap@acao& (0+255),b
 17842                           
 17843                           ;Controle.h: 124: if (acao != _acao_flap) {
 17844  00549A  5042               	movf	__acao_flap,w,c
 17845  00549C  0100               	movlb	0	; () banked
 17846  00549E  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17847  0054A0  B4D8               	btfsc	status,2,c
 17848  0054A2  D007               	goto	l1147
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;Controle.h: 125: t_controle_flap = 0;
 17852  0054A4  0E00               	movlw	0
 17853  0054A6  6E3A               	movwf	_t_controle_flap+1,c
 17854  0054A8  0E00               	movlw	0
 17855  0054AA  6E39               	movwf	_t_controle_flap,c
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;Controle.h: 126: _acao_flap = acao;
 17859  0054AC  C067  F042         	movff	acaoFlap@acao,__acao_flap
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;Controle.h: 127: return;
 17863  0054B0  0012               	return	
 17864  0054B2                     l1147:
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;Controle.h: 128: }
 17868                           ;Controle.h: 129: if (acao) {
 17869                           
 17870                           ; BSR set to: 0
 17871  0054B2  5167               	movf	acaoFlap@acao& (0+255),w,b
 17872  0054B4  B4D8               	btfsc	status,2,c
 17873  0054B6  D006               	goto	l1149
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;Controle.h: 130: setLed(4, 1);
 17877  0054B8  0E01               	movlw	1
 17878  0054BA  6F60               	movwf	setLed@acao& (0+255),b
 17879  0054BC  0E04               	movlw	4
 17880  0054BE  EC1A  F02F         	call	_setLed
 17881                           
 17882                           ;Controle.h: 131: } else {
 17883  0054C2  D006               	goto	l1150
 17884  0054C4                     l1149:
 17885                           
 17886                           ;Controle.h: 132: setLed(4, 0);
 17887  0054C4  0E00               	movlw	0
 17888  0054C6  0100               	movlb	0	; () banked
 17889  0054C8  6F60               	movwf	setLed@acao& (0+255),b
 17890  0054CA  0E04               	movlw	4
 17891  0054CC  EC1A  F02F         	call	_setLed
 17892  0054D0                     l1150:
 17893                           
 17894                           ;Controle.h: 133: }
 17895                           ;Controle.h: 135: if (!t_controle_flap) {
 17896  0054D0  5039               	movf	_t_controle_flap,w,c
 17897  0054D2  103A               	iorwf	_t_controle_flap+1,w,c
 17898  0054D4  A4D8               	btfss	status,2,c
 17899  0054D6  D007               	goto	l1151
 17900                           
 17901                           ;Controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17902  0054D8  0100               	movlb	0	; () banked
 17903  0054DA  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17904  0054DC  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17905  0054DE  6E39               	movwf	_t_controle_flap,c
 17906  0054E0  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17907  0054E2  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17908  0054E4  6E3A               	movwf	_t_controle_flap+1,c
 17909  0054E6                     l1151:
 17910                           
 17911                           ;Controle.h: 137: }
 17912                           ;Controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17913  0054E6  5039               	movf	_t_controle_flap,w,c
 17914  0054E8  0100               	movlb	0	; () banked
 17915  0054EA  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17916  0054EC  503A               	movf	_t_controle_flap+1,w,c
 17917  0054EE  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17918  0054F0  B0D8               	btfsc	status,0,c
 17919  0054F2  D015               	goto	l1152
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;Controle.h: 140: LATAbits.LA5 = !acao;
 17923  0054F4  5167               	movf	acaoFlap@acao& (0+255),w,b
 17924  0054F6  A4D8               	btfss	status,2,c
 17925  0054F8  D003               	goto	u11950
 17926  0054FA  6B66               	clrf	??_acaoFlap& (0+255),b
 17927  0054FC  2B66               	incf	??_acaoFlap& (0+255),f,b
 17928  0054FE  D002               	goto	u11968
 17929  005500                     u11950:
 17930  005500  0100               	movlb	0	; () banked
 17931  005502  6B66               	clrf	??_acaoFlap& (0+255),b
 17932  005504                     u11968:
 17933  005504  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17934  005506  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17935  005508  5089               	movf	3977,w,c	;volatile
 17936  00550A  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17937  00550C  0BDF               	andlw	-33
 17938  00550E  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17939  005510  6E89               	movwf	3977,c	;volatile
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;Controle.h: 141: LATCbits.LC2 = acao;
 17943  005512  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17944  005514  D002               	bra	u11975
 17945  005516  948B               	bcf	3979,2,c	;volatile
 17946  005518  D001               	bra	u11976
 17947  00551A                     u11975:
 17948  00551A  848B               	bsf	3979,2,c	;volatile
 17949  00551C                     u11976:
 17950                           
 17951                           ;Controle.h: 142: } else {
 17952  00551C  0012               	return	
 17953  00551E                     l1152:
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;Controle.h: 143: LATAbits.LA5 = 0;
 17957  00551E  9A89               	bcf	3977,5,c	;volatile
 17958                           
 17959                           ;Controle.h: 144: LATCbits.LC2 = 0;
 17960  005520  948B               	bcf	3979,2,c	;volatile
 17961  005522  0012               	return	
 17962  005524                     __end_of_acaoFlap:
 17963                           	opt stack 0
 17964                           tblptru	equ	0xFF8
 17965                           tblptrh	equ	0xFF7
 17966                           tblptrl	equ	0xFF6
 17967                           tablat	equ	0xFF5
 17968                           prodh	equ	0xFF4
 17969                           prodl	equ	0xFF3
 17970                           intcon	equ	0xFF2
 17971                           intcon2	equ	0xFF1
 17972                           intcon3	equ	0xFF0
 17973                           indf0	equ	0xFEF
 17974                           postinc0	equ	0xFEE
 17975                           fsr0h	equ	0xFEA
 17976                           fsr0l	equ	0xFE9
 17977                           wreg	equ	0xFE8
 17978                           postdec1	equ	0xFE5
 17979                           fsr1l	equ	0xFE1
 17980                           indf2	equ	0xFDF
 17981                           postinc2	equ	0xFDE
 17982                           postdec2	equ	0xFDD
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987 ;; *************** function _setLed *****************
 17988 ;; Defined at:
 17989 ;;		line 18 in file "src/Led_display.h"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;  led             1    wreg     unsigned char 
 17992 ;;  acao            1    0[BANK0 ] unsigned char 
 17993 ;; Auto vars:     Size  Location     Type
 17994 ;;  led             1    1[BANK0 ] unsigned char 
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      void 
 17997 ;; Registers used:
 17998 ;;		wreg, status,2, status,0
 17999 ;; Tracked objects:
 18000 ;;		On entry : 0/0
 18001 ;;		On exit  : 0/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18004 ;;      Params:         0       1       0       0       0       0       0       0       0
 18005 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18007 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18008 ;;Total ram usage:        2 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; Hardware stack levels required when called:    6
 18011 ;; This function calls:
 18012 ;;		Nothing
 18013 ;; This function is called by:
 18014 ;;		_acaoFlap
 18015 ;;		_controle
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           	psect	text23
 18020  005E34                     __ptext23:
 18021                           	opt stack 0
 18022  005E34                     _setLed:
 18023                           	opt stack 23
 18024                           
 18025                           ;incstack = 0
 18026                           ;setLed@led stored from wreg
 18027  005E34  0100               	movlb	0	; () banked
 18028  005E36  6F61               	movwf	setLed@led& (0+255),b
 18029                           
 18030                           ;Led_display.h: 19: if (acao) {
 18031  005E38  0100               	movlb	0	; () banked
 18032  005E3A  5160               	movf	setLed@acao& (0+255),w,b
 18033  005E3C  B4D8               	btfsc	status,2,c
 18034  005E3E  D004               	goto	l213
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;Led_display.h: 20: leds = leds | led;
 18038  005E40  5045               	movf	_leds,w,c
 18039  005E42  1161               	iorwf	setLed@led& (0+255),w,b
 18040  005E44  6E45               	movwf	_leds,c
 18041                           
 18042                           ;Led_display.h: 22: } else {
 18043  005E46  0012               	return	
 18044  005E48                     l213:
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;Led_display.h: 23: leds = leds&~led;
 18048                           
 18049                           ; BSR set to: 0
 18050  005E48  5161               	movf	setLed@led& (0+255),w,b
 18051  005E4A  0AFF               	xorlw	255
 18052  005E4C  1445               	andwf	_leds,w,c
 18053  005E4E  6E45               	movwf	_leds,c
 18054  005E50  0012               	return	
 18055  005E52                     __end_of_setLed:
 18056                           	opt stack 0
 18057                           tblptru	equ	0xFF8
 18058                           tblptrh	equ	0xFF7
 18059                           tblptrl	equ	0xFF6
 18060                           tablat	equ	0xFF5
 18061                           prodh	equ	0xFF4
 18062                           prodl	equ	0xFF3
 18063                           intcon	equ	0xFF2
 18064                           intcon2	equ	0xFF1
 18065                           intcon3	equ	0xFF0
 18066                           indf0	equ	0xFEF
 18067                           postinc0	equ	0xFEE
 18068                           fsr0h	equ	0xFEA
 18069                           fsr0l	equ	0xFE9
 18070                           wreg	equ	0xFE8
 18071                           postdec1	equ	0xFE5
 18072                           fsr1l	equ	0xFE1
 18073                           indf2	equ	0xFDF
 18074                           postinc2	equ	0xFDE
 18075                           postdec2	equ	0xFDD
 18076                           fsr2h	equ	0xFDA
 18077                           fsr2l	equ	0xFD9
 18078                           status	equ	0xFD8
 18079                           
 18080 ;; *************** function _climaAtual *****************
 18081 ;; Defined at:
 18082 ;;		line 34 in file "src/FuncoesControlador.h"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;  c               1    wreg     unsigned char 
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  c               1    2[BANK0 ] unsigned char 
 18087 ;; Return value:  Size  Location     Type
 18088 ;;                  2    0[BANK0 ] PTR unsigned char 
 18089 ;; Registers used:
 18090 ;;		wreg, status,2, status,0
 18091 ;; Tracked objects:
 18092 ;;		On entry : 0/0
 18093 ;;		On exit  : 0/0
 18094 ;;		Unchanged: 0/0
 18095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18096 ;;      Params:         0       2       0       0       0       0       0       0       0
 18097 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18099 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18100 ;;Total ram usage:        3 bytes
 18101 ;; Hardware stack levels used:    1
 18102 ;; Hardware stack levels required when called:    6
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		_main
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           	psect	text24
 18111  0059D8                     __ptext24:
 18112                           	opt stack 0
 18113  0059D8                     _climaAtual:
 18114                           	opt stack 24
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;incstack = 0
 18118                           ;climaAtual@c stored from wreg
 18119  0059D8  0100               	movlb	0	; () banked
 18120  0059DA  6F62               	movwf	climaAtual@c& (0+255),b
 18121                           
 18122                           ;FuncoesControlador.h: 35: switch (c) {
 18123  0059DC  D015               	goto	l897
 18124  0059DE  0EC7               	movlw	low STR_6
 18125  0059E0  0100               	movlb	0	; () banked
 18126  0059E2  6F60               	movwf	?_climaAtual& (0+255),b
 18127  0059E4  0E7F               	movlw	high STR_6
 18128  0059E6  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18129                           
 18130                           ; BSR set to: 0
 18131  0059E8  0012               	return	
 18132  0059EA                     
 18133                           ; BSR set to: 0
 18134                           
 18135                           ; BSR set to: 0
 18136  0059EA  0E97               	movlw	low STR_7
 18137  0059EC  6F60               	movwf	?_climaAtual& (0+255),b
 18138  0059EE  0E7F               	movlw	high STR_7
 18139  0059F0  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18140                           
 18141                           ; BSR set to: 0
 18142  0059F2  0012               	return	
 18143  0059F4                     
 18144                           ; BSR set to: 0
 18145                           
 18146                           ; BSR set to: 0
 18147  0059F4  0EE1               	movlw	low STR_8
 18148  0059F6  6F60               	movwf	?_climaAtual& (0+255),b
 18149  0059F8  0E7F               	movlw	high STR_8
 18150  0059FA  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18151                           
 18152                           ; BSR set to: 0
 18153  0059FC  0012               	return	
 18154  0059FE                     
 18155                           ; BSR set to: 0
 18156                           
 18157                           ; BSR set to: 0
 18158  0059FE  0EF2               	movlw	low STR_9
 18159  005A00  6F60               	movwf	?_climaAtual& (0+255),b
 18160  005A02  0E7F               	movlw	high STR_9
 18161  005A04  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;FuncoesControlador.h: 41: }
 18165                           
 18166                           ; BSR set to: 0
 18167  005A06  0012               	return	
 18168  005A08                     l897:
 18169                           
 18170                           ; BSR set to: 0
 18171  005A08  0100               	movlb	0	; () banked
 18172  005A0A  5162               	movf	climaAtual@c& (0+255),w,b
 18173                           
 18174                           ; Switch size 1, requested type "space"
 18175                           ; Number of cases is 3, Range of values is 1 to 3
 18176                           ; switch strategies available:
 18177                           ; Name         Instructions Cycles
 18178                           ; simple_byte           10     6 (average)
 18179                           ;	Chosen strategy is simple_byte
 18180  005A0C  0A01               	xorlw	1	; case 1
 18181  005A0E  B4D8               	btfsc	status,2,c
 18182  005A10  D7E6               	goto	l898
 18183  005A12  0A03               	xorlw	3	; case 2
 18184  005A14  B4D8               	btfsc	status,2,c
 18185  005A16  D7E9               	goto	l900
 18186  005A18  0A01               	xorlw	1	; case 3
 18187  005A1A  B4D8               	btfsc	status,2,c
 18188  005A1C  D7EB               	goto	l901
 18189  005A1E  D7EF               	goto	l902
 18190  005A20                     __end_of_climaAtual:
 18191                           	opt stack 0
 18192                           tblptru	equ	0xFF8
 18193                           tblptrh	equ	0xFF7
 18194                           tblptrl	equ	0xFF6
 18195                           tablat	equ	0xFF5
 18196                           prodh	equ	0xFF4
 18197                           prodl	equ	0xFF3
 18198                           intcon	equ	0xFF2
 18199                           intcon2	equ	0xFF1
 18200                           intcon3	equ	0xFF0
 18201                           indf0	equ	0xFEF
 18202                           postinc0	equ	0xFEE
 18203                           fsr0h	equ	0xFEA
 18204                           fsr0l	equ	0xFE9
 18205                           wreg	equ	0xFE8
 18206                           postdec1	equ	0xFE5
 18207                           fsr1l	equ	0xFE1
 18208                           indf2	equ	0xFDF
 18209                           postinc2	equ	0xFDE
 18210                           postdec2	equ	0xFDD
 18211                           fsr2h	equ	0xFDA
 18212                           fsr2l	equ	0xFD9
 18213                           status	equ	0xFD8
 18214                           
 18215 ;; *************** function _btPress *****************
 18216 ;; Defined at:
 18217 ;;		line 26 in file "src/Teclado.h"
 18218 ;; Parameters:    Size  Location     Type
 18219 ;;  bt              1    wreg     unsigned char 
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;  bt              1    0[BANK0 ] unsigned char 
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      unsigned char 
 18224 ;; Registers used:
 18225 ;;		wreg, status,2, status,0
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18231 ;;      Params:         0       0       0       0       0       0       0       0       0
 18232 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18234 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18235 ;;Total ram usage:        1 bytes
 18236 ;; Hardware stack levels used:    1
 18237 ;; Hardware stack levels required when called:    6
 18238 ;; This function calls:
 18239 ;;		Nothing
 18240 ;; This function is called by:
 18241 ;;		_main
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           	psect	text25
 18246  005E52                     __ptext25:
 18247                           	opt stack 0
 18248  005E52                     _btPress:
 18249                           	opt stack 24
 18250                           
 18251                           ; BSR set to: 0
 18252                           ;incstack = 0
 18253                           ;btPress@bt stored from wreg
 18254  005E52  0100               	movlb	0	; () banked
 18255  005E54  6F60               	movwf	btPress@bt& (0+255),b
 18256                           
 18257                           ;Teclado.h: 27: if (bt_flag == bt) {
 18258  005E56  0100               	movlb	0	; () banked
 18259  005E58  5160               	movf	btPress@bt& (0+255),w,b
 18260  005E5A  1844               	xorwf	_bt_flag,w,c
 18261  005E5C  B4D8               	btfsc	status,2,c
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 18265  005E5E  A481               	btfss	3969,2,c	;volatile
 18266  005E60  D004               	goto	l292
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;Teclado.h: 29: bt_flag = 0;
 18270  005E62  0E00               	movlw	0
 18271  005E64  6E44               	movwf	_bt_flag,c
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;Teclado.h: 30: return 1;
 18275  005E66  0E01               	movlw	1
 18276                           
 18277                           ; BSR set to: 0
 18278  005E68  0012               	return	
 18279  005E6A                     l292:
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;Teclado.h: 31: }
 18283                           ;Teclado.h: 32: }
 18284                           ;Teclado.h: 33: return 0;
 18285                           
 18286                           ; BSR set to: 0
 18287                           
 18288                           ; BSR set to: 0
 18289  005E6A  0E00               	movlw	0
 18290  005E6C  0012               	return	
 18291  005E6E                     __end_of_btPress:
 18292                           	opt stack 0
 18293                           tblptru	equ	0xFF8
 18294                           tblptrh	equ	0xFF7
 18295                           tblptrl	equ	0xFF6
 18296                           tablat	equ	0xFF5
 18297                           prodh	equ	0xFF4
 18298                           prodl	equ	0xFF3
 18299                           intcon	equ	0xFF2
 18300                           intcon2	equ	0xFF1
 18301                           intcon3	equ	0xFF0
 18302                           indf0	equ	0xFEF
 18303                           postinc0	equ	0xFEE
 18304                           fsr0h	equ	0xFEA
 18305                           fsr0l	equ	0xFE9
 18306                           wreg	equ	0xFE8
 18307                           postdec1	equ	0xFE5
 18308                           fsr1l	equ	0xFE1
 18309                           indf2	equ	0xFDF
 18310                           postinc2	equ	0xFDE
 18311                           postdec2	equ	0xFDD
 18312                           fsr2h	equ	0xFDA
 18313                           fsr2l	equ	0xFD9
 18314                           status	equ	0xFD8
 18315                           
 18316 ;; *************** function _blink *****************
 18317 ;; Defined at:
 18318 ;;		line 212 in file "src/lcd.h"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  line            2    0[BANK0 ] PTR unsigned char 
 18321 ;;		 -> line3(21), line2(21), line1(21), 
 18322 ;;  start           1    2[BANK0 ] unsigned char 
 18323 ;;  end             1    3[BANK0 ] unsigned char 
 18324 ;; Auto vars:     Size  Location     Type
 18325 ;;  i               1    4[BANK0 ] unsigned char 
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  1    wreg      void 
 18328 ;; Registers used:
 18329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18335 ;;      Params:         0       4       0       0       0       0       0       0       0
 18336 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18338 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18339 ;;Total ram usage:        5 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:    6
 18342 ;; This function calls:
 18343 ;;		Nothing
 18344 ;; This function is called by:
 18345 ;;		_main
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text26
 18350  005C0A                     __ptext26:
 18351                           	opt stack 0
 18352  005C0A                     _blink:
 18353                           	opt stack 24
 18354                           
 18355                           ;lcd.h: 213: if (blinkk) {
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;incstack = 0
 18359  005C0A  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 18360  005C0C  0012               	return	
 18361                           
 18362                           ;lcd.h: 214: char i = 0;
 18363  005C0E  0E00               	movlw	0
 18364  005C10  0100               	movlb	0	; () banked
 18365  005C12  6F64               	movwf	blink@i& (0+255),b
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 18369  005C14  0762               	decf	blink@start& (0+255),f,b
 18370  005C16  C062  F064         	movff	blink@start,blink@i
 18371  005C1A  D00B               	goto	l280
 18372  005C1C                     
 18373                           ; BSR set to: 0
 18374                           ;lcd.h: 216: line[i] = ' ';
 18375                           
 18376                           ; BSR set to: 0
 18377  005C1C  5164               	movf	blink@i& (0+255),w,b
 18378  005C1E  0D01               	mullw	1
 18379  005C20  50F3               	movf	prodl,w,c
 18380  005C22  2560               	addwf	blink@line& (0+255),w,b
 18381  005C24  6ED9               	movwf	fsr2l,c
 18382  005C26  50F4               	movf	prodh,w,c
 18383  005C28  2161               	addwfc	(blink@line+1)& (0+255),w,b
 18384  005C2A  6EDA               	movwf	fsr2h,c
 18385  005C2C  0E20               	movlw	32
 18386  005C2E  6EDF               	movwf	indf2,c
 18387                           
 18388                           ; BSR set to: 0
 18389  005C30  2B64               	incf	blink@i& (0+255),f,b
 18390  005C32                     l280:
 18391                           
 18392                           ; BSR set to: 0
 18393                           
 18394                           ; BSR set to: 0
 18395  005C32  5163               	movf	blink@end& (0+255),w,b
 18396  005C34  5D64               	subwf	blink@i& (0+255),w,b
 18397  005C36  B0D8               	btfsc	status,0,c
 18398  005C38  0012               	return	
 18399  005C3A  D7F0               	goto	l281
 18400  005C3C                     __end_of_blink:
 18401                           	opt stack 0
 18402                           tblptru	equ	0xFF8
 18403                           tblptrh	equ	0xFF7
 18404                           tblptrl	equ	0xFF6
 18405                           tablat	equ	0xFF5
 18406                           prodh	equ	0xFF4
 18407                           prodl	equ	0xFF3
 18408                           intcon	equ	0xFF2
 18409                           intcon2	equ	0xFF1
 18410                           intcon3	equ	0xFF0
 18411                           indf0	equ	0xFEF
 18412                           postinc0	equ	0xFEE
 18413                           fsr0h	equ	0xFEA
 18414                           fsr0l	equ	0xFE9
 18415                           wreg	equ	0xFE8
 18416                           postdec1	equ	0xFE5
 18417                           fsr1l	equ	0xFE1
 18418                           indf2	equ	0xFDF
 18419                           postinc2	equ	0xFDE
 18420                           postdec2	equ	0xFDD
 18421                           fsr2h	equ	0xFDA
 18422                           fsr2l	equ	0xFD9
 18423                           status	equ	0xFD8
 18424                           
 18425 ;; *************** function _alterarConfigWifi *****************
 18426 ;; Defined at:
 18427 ;;		line 67 in file "src/conexaoWifi.h"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;		None
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  i               1   99[BANK0 ] unsigned char 
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      void 
 18434 ;; Registers used:
 18435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18441 ;;      Params:         0       0       0       0       0       0       0       0       0
 18442 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18443 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18444 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18445 ;;Total ram usage:        1 bytes
 18446 ;; Hardware stack levels used:    1
 18447 ;; Hardware stack levels required when called:   10
 18448 ;; This function calls:
 18449 ;;		_atualizaLCD
 18450 ;;		_delay
 18451 ;;		_filtroStr
 18452 ;;		_limpaBuffer
 18453 ;;		_printf
 18454 ;;		_sprintf
 18455 ;;		_strlen
 18456 ;;		_strstr
 18457 ;;		_writeEEPROM_ext
 18458 ;; This function is called by:
 18459 ;;		_main
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           	psect	text27
 18464  003620                     __ptext27:
 18465                           	opt stack 0
 18466  003620                     _alterarConfigWifi:
 18467                           	opt stack 20
 18468                           
 18469                           ;conexaoWifi.h: 69: if (t_wifi_restart == 0) {
 18470                           
 18471                           ;incstack = 0
 18472  003620  0101               	movlb	1	; () banked
 18473  003622  5197               	movf	_t_wifi_restart& (0+255),w,b
 18474  003624  A4D8               	btfss	status,2,c
 18475  003626  D007               	goto	l986
 18476                           
 18477                           ; BSR set to: 1
 18478                           ;conexaoWifi.h: 70: menu = 8;
 18479  003628  0E08               	movlw	8
 18480  00362A  0100               	movlb	0	; () banked
 18481  00362C  6FFB               	movwf	_menu& (0+255),b
 18482                           
 18483                           ;conexaoWifi.h: 71: opcaomenu = 1;
 18484  00362E  0E01               	movlw	1
 18485  003630  0101               	movlb	1	; () banked
 18486  003632  6F99               	movwf	_opcaomenu& (0+255),b
 18487                           
 18488                           ; BSR set to: 1
 18489                           ;conexaoWifi.h: 73: } else {
 18490                           
 18491                           ; BSR set to: 1
 18492                           ;conexaoWifi.h: 72: return;
 18493  003634  0012               	return	
 18494  003636                     l986:
 18495                           
 18496                           ; BSR set to: 1
 18497                           ;conexaoWifi.h: 74: delay(10);
 18498                           
 18499                           ; BSR set to: 1
 18500  003636  0E00               	movlw	0
 18501  003638  0100               	movlb	0	; () banked
 18502  00363A  6F61               	movwf	(delay@x+1)& (0+255),b
 18503  00363C  0E0A               	movlw	10
 18504  00363E  6F60               	movwf	delay@x& (0+255),b
 18505  003640  EC94  F02E         	call	_delay	;wreg free
 18506                           
 18507                           ;conexaoWifi.h: 75: switch (f_wifi_processo) {
 18508  003644  D223               	goto	l989
 18509  003646                     
 18510                           ;conexaoWifi.h: 77: limpaBuffer();
 18511  003646  EC75  F02D         	call	_limpaBuffer	;wreg free
 18512                           
 18513                           ;conexaoWifi.h: 78: printf("AT+CWMODE=2\r\n");
 18514  00364A  0E50               	movlw	low STR_12
 18515  00364C  0100               	movlb	0	; () banked
 18516  00364E  6F81               	movwf	printf@f& (0+255),b
 18517  003650  0E7E               	movlw	high STR_12
 18518  003652  6F82               	movwf	(printf@f+1)& (0+255),b
 18519  003654  ECB4  F02D         	call	_printf	;wreg free
 18520                           
 18521                           ;conexaoWifi.h: 79: wifi_conectado = 0;
 18522  003658  0E00               	movlw	0
 18523  00365A  0101               	movlb	1	; () banked
 18524  00365C  6F9A               	movwf	_wifi_conectado& (0+255),b
 18525                           
 18526                           ; BSR set to: 1
 18527                           ;conexaoWifi.h: 80: f_wifi_processo++;
 18528  00365E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18529                           
 18530                           ;conexaoWifi.h: 81: break;
 18531  003660  0012               	return	
 18532  003662                     
 18533                           ; BSR set to: 1
 18534                           ;conexaoWifi.h: 83: if (strstr(bufferSerial, "OK") != (0)) {
 18535                           
 18536                           ; BSR set to: 1
 18537  003662  0E42               	movlw	low _bufferSerial
 18538  003664  0100               	movlb	0	; () banked
 18539  003666  6F6F               	movwf	strstr@s1& (0+255),b
 18540  003668  0E02               	movlw	high _bufferSerial
 18541  00366A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18542  00366C  0EF5               	movlw	low STR_13
 18543  00366E  6F71               	movwf	strstr@s2& (0+255),b
 18544  003670  0E7F               	movlw	high STR_13
 18545  003672  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18546  003674  EC7F  F028         	call	_strstr	;wreg free
 18547  003678  0100               	movlb	0	; () banked
 18548  00367A  516F               	movf	?_strstr& (0+255),w,b
 18549  00367C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18550  00367E  B4D8               	btfsc	status,2,c
 18551  003680  0012               	return	
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;conexaoWifi.h: 84: f_wifi_processo++;
 18555  003682  0101               	movlb	1	; () banked
 18556  003684  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18557                           
 18558                           ; BSR set to: 1
 18559                           ;conexaoWifi.h: 85: }
 18560                           ;conexaoWifi.h: 86: break;
 18561  003686  0012               	return	
 18562  003688                     
 18563                           ; BSR set to: 1
 18564                           ;conexaoWifi.h: 88: limpaBuffer();
 18565                           
 18566                           ; BSR set to: 1
 18567  003688  EC75  F02D         	call	_limpaBuffer	;wreg free
 18568                           
 18569                           ;conexaoWifi.h: 89: printf("AT+CIPMUX=1\r\n");
 18570  00368C  0E42               	movlw	low STR_14
 18571  00368E  0100               	movlb	0	; () banked
 18572  003690  6F81               	movwf	printf@f& (0+255),b
 18573  003692  0E7E               	movlw	high STR_14
 18574  003694  6F82               	movwf	(printf@f+1)& (0+255),b
 18575  003696  ECB4  F02D         	call	_printf	;wreg free
 18576                           
 18577                           ;conexaoWifi.h: 90: f_wifi_processo++;
 18578  00369A  0101               	movlb	1	; () banked
 18579  00369C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18580                           
 18581                           ;conexaoWifi.h: 91: break;
 18582  00369E  0012               	return	
 18583  0036A0                     
 18584                           ; BSR set to: 1
 18585                           ;conexaoWifi.h: 93: if (strstr(bufferSerial, "OK") != (0)) {
 18586                           
 18587                           ; BSR set to: 1
 18588  0036A0  0E42               	movlw	low _bufferSerial
 18589  0036A2  0100               	movlb	0	; () banked
 18590  0036A4  6F6F               	movwf	strstr@s1& (0+255),b
 18591  0036A6  0E02               	movlw	high _bufferSerial
 18592  0036A8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18593  0036AA  0EF5               	movlw	low STR_13
 18594  0036AC  6F71               	movwf	strstr@s2& (0+255),b
 18595  0036AE  0E7F               	movlw	high STR_13
 18596  0036B0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18597  0036B2  EC7F  F028         	call	_strstr	;wreg free
 18598  0036B6  0100               	movlb	0	; () banked
 18599  0036B8  516F               	movf	?_strstr& (0+255),w,b
 18600  0036BA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18601  0036BC  B4D8               	btfsc	status,2,c
 18602  0036BE  0012               	return	
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;conexaoWifi.h: 94: f_wifi_processo++;
 18606  0036C0  0101               	movlb	1	; () banked
 18607  0036C2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18608                           
 18609                           ; BSR set to: 1
 18610                           ;conexaoWifi.h: 95: }
 18611                           ;conexaoWifi.h: 96: break;
 18612  0036C4  0012               	return	
 18613  0036C6                     
 18614                           ; BSR set to: 1
 18615                           ;conexaoWifi.h: 98: limpaBuffer();
 18616                           
 18617                           ; BSR set to: 1
 18618  0036C6  EC75  F02D         	call	_limpaBuffer	;wreg free
 18619                           
 18620                           ;conexaoWifi.h: 99: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18621  0036CA  0E98               	movlw	low STR_16
 18622  0036CC  0100               	movlb	0	; () banked
 18623  0036CE  6F81               	movwf	printf@f& (0+255),b
 18624  0036D0  0E7B               	movlw	high STR_16
 18625  0036D2  6F82               	movwf	(printf@f+1)& (0+255),b
 18626  0036D4  ECB4  F02D         	call	_printf	;wreg free
 18627                           
 18628                           ;conexaoWifi.h: 100: f_wifi_processo++;
 18629  0036D8  0101               	movlb	1	; () banked
 18630  0036DA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18631                           
 18632                           ;conexaoWifi.h: 101: break;
 18633  0036DC  0012               	return	
 18634  0036DE                     
 18635                           ; BSR set to: 1
 18636                           ;conexaoWifi.h: 103: if (strstr(bufferSerial, "OK") != (0)) {
 18637                           
 18638                           ; BSR set to: 1
 18639  0036DE  0E42               	movlw	low _bufferSerial
 18640  0036E0  0100               	movlb	0	; () banked
 18641  0036E2  6F6F               	movwf	strstr@s1& (0+255),b
 18642  0036E4  0E02               	movlw	high _bufferSerial
 18643  0036E6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18644  0036E8  0EF5               	movlw	low STR_13
 18645  0036EA  6F71               	movwf	strstr@s2& (0+255),b
 18646  0036EC  0E7F               	movlw	high STR_13
 18647  0036EE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18648  0036F0  EC7F  F028         	call	_strstr	;wreg free
 18649  0036F4  0100               	movlb	0	; () banked
 18650  0036F6  516F               	movf	?_strstr& (0+255),w,b
 18651  0036F8  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18652  0036FA  B4D8               	btfsc	status,2,c
 18653  0036FC  0012               	return	
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;conexaoWifi.h: 104: f_wifi_processo++;
 18657  0036FE  0101               	movlb	1	; () banked
 18658  003700  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18659                           
 18660                           ; BSR set to: 1
 18661                           ;conexaoWifi.h: 105: }
 18662                           ;conexaoWifi.h: 106: break;
 18663  003702  0012               	return	
 18664  003704                     
 18665                           ; BSR set to: 1
 18666                           ;conexaoWifi.h: 108: limpaBuffer();
 18667                           
 18668                           ; BSR set to: 1
 18669  003704  EC75  F02D         	call	_limpaBuffer	;wreg free
 18670                           
 18671                           ;conexaoWifi.h: 109: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18672  003708  0EBB               	movlw	low STR_18
 18673  00370A  0100               	movlb	0	; () banked
 18674  00370C  6F81               	movwf	printf@f& (0+255),b
 18675  00370E  0E7B               	movlw	high STR_18
 18676  003710  6F82               	movwf	(printf@f+1)& (0+255),b
 18677  003712  ECB4  F02D         	call	_printf	;wreg free
 18678                           
 18679                           ;conexaoWifi.h: 110: f_wifi_processo++;
 18680  003716  0101               	movlb	1	; () banked
 18681  003718  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18682                           
 18683                           ;conexaoWifi.h: 111: break;
 18684  00371A  0012               	return	
 18685  00371C                     
 18686                           ; BSR set to: 1
 18687                           ;conexaoWifi.h: 113: if (strstr(bufferSerial, "OK") != (0)) {
 18688                           
 18689                           ; BSR set to: 1
 18690  00371C  0E42               	movlw	low _bufferSerial
 18691  00371E  0100               	movlb	0	; () banked
 18692  003720  6F6F               	movwf	strstr@s1& (0+255),b
 18693  003722  0E02               	movlw	high _bufferSerial
 18694  003724  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18695  003726  0EF5               	movlw	low STR_13
 18696  003728  6F71               	movwf	strstr@s2& (0+255),b
 18697  00372A  0E7F               	movlw	high STR_13
 18698  00372C  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18699  00372E  EC7F  F028         	call	_strstr	;wreg free
 18700  003732  0100               	movlb	0	; () banked
 18701  003734  516F               	movf	?_strstr& (0+255),w,b
 18702  003736  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18703  003738  B4D8               	btfsc	status,2,c
 18704  00373A  0012               	return	
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;conexaoWifi.h: 114: f_wifi_processo++;
 18708  00373C  0101               	movlb	1	; () banked
 18709  00373E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18710                           
 18711                           ; BSR set to: 1
 18712                           ;conexaoWifi.h: 115: }
 18713                           ;conexaoWifi.h: 116: break;
 18714  003740  0012               	return	
 18715  003742                     
 18716                           ; BSR set to: 1
 18717                           ;conexaoWifi.h: 118: limpaBuffer();
 18718                           
 18719                           ; BSR set to: 1
 18720  003742  EC75  F02D         	call	_limpaBuffer	;wreg free
 18721                           
 18722                           ;conexaoWifi.h: 119: printf("AT+CIPSERVER=1,8080\r\n");
 18723  003746  0ED1               	movlw	low STR_20
 18724  003748  0100               	movlb	0	; () banked
 18725  00374A  6F81               	movwf	printf@f& (0+255),b
 18726  00374C  0E7B               	movlw	high STR_20
 18727  00374E  6F82               	movwf	(printf@f+1)& (0+255),b
 18728  003750  ECB4  F02D         	call	_printf	;wreg free
 18729                           
 18730                           ;conexaoWifi.h: 120: f_wifi_processo++;
 18731  003754  0101               	movlb	1	; () banked
 18732  003756  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18733                           
 18734                           ;conexaoWifi.h: 121: break;
 18735  003758  0012               	return	
 18736  00375A                     
 18737                           ; BSR set to: 1
 18738                           ;conexaoWifi.h: 123: if (strstr(bufferSerial, "OK") != (0)) {
 18739                           
 18740                           ; BSR set to: 1
 18741  00375A  0E42               	movlw	low _bufferSerial
 18742  00375C  0100               	movlb	0	; () banked
 18743  00375E  6F6F               	movwf	strstr@s1& (0+255),b
 18744  003760  0E02               	movlw	high _bufferSerial
 18745  003762  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18746  003764  0EF5               	movlw	low STR_13
 18747  003766  6F71               	movwf	strstr@s2& (0+255),b
 18748  003768  0E7F               	movlw	high STR_13
 18749  00376A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18750  00376C  EC7F  F028         	call	_strstr	;wreg free
 18751  003770  0100               	movlb	0	; () banked
 18752  003772  516F               	movf	?_strstr& (0+255),w,b
 18753  003774  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18754  003776  B4D8               	btfsc	status,2,c
 18755  003778  0012               	return	
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;conexaoWifi.h: 124: f_wifi_processo++;
 18759  00377A  0101               	movlb	1	; () banked
 18760  00377C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18761                           
 18762                           ; BSR set to: 1
 18763                           ;conexaoWifi.h: 125: t_wifi_restart = 180;
 18764  00377E  0EB4               	movlw	180
 18765  003780  6F97               	movwf	_t_wifi_restart& (0+255),b
 18766                           
 18767                           ; BSR set to: 1
 18768                           ;conexaoWifi.h: 126: }
 18769                           ;conexaoWifi.h: 127: break;
 18770  003782  0012               	return	
 18771  003784                     
 18772                           ; BSR set to: 1
 18773                           ;conexaoWifi.h: 129: sprintf(line1, "Conecte-se a rede e");
 18774                           
 18775                           ; BSR set to: 1
 18776  003784  0EDA               	movlw	low _line1
 18777  003786  0100               	movlb	0	; () banked
 18778  003788  6F81               	movwf	sprintf@wh& (0+255),b
 18779  00378A  0E01               	movlw	high _line1
 18780  00378C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18781  00378E  0EC9               	movlw	low STR_22
 18782  003790  6F83               	movwf	sprintf@f& (0+255),b
 18783  003792  0E7C               	movlw	high STR_22
 18784  003794  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18785  003796  EC10  F02D         	call	_sprintf	;wreg free
 18786                           
 18787                           ;conexaoWifi.h: 130: sprintf(line2, "acesse o IP para");
 18788  00379A  0EC5               	movlw	low _line2
 18789  00379C  0100               	movlb	0	; () banked
 18790  00379E  6F81               	movwf	sprintf@wh& (0+255),b
 18791  0037A0  0E01               	movlw	high _line2
 18792  0037A2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18793  0037A4  0E83               	movlw	low STR_23
 18794  0037A6  6F83               	movwf	sprintf@f& (0+255),b
 18795  0037A8  0E7D               	movlw	high STR_23
 18796  0037AA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18797  0037AC  EC10  F02D         	call	_sprintf	;wreg free
 18798                           
 18799                           ;conexaoWifi.h: 131: sprintf(line3, "configurar o WIFI...");
 18800  0037B0  0EB0               	movlw	low _line3
 18801  0037B2  0100               	movlb	0	; () banked
 18802  0037B4  6F81               	movwf	sprintf@wh& (0+255),b
 18803  0037B6  0E01               	movlw	high _line3
 18804  0037B8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18805  0037BA  0E27               	movlw	low STR_24
 18806  0037BC  6F83               	movwf	sprintf@f& (0+255),b
 18807  0037BE  0E7C               	movlw	high STR_24
 18808  0037C0  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18809  0037C2  EC10  F02D         	call	_sprintf	;wreg free
 18810                           
 18811                           ;conexaoWifi.h: 132: sprintf(line4, "10.1.1.1:8080");
 18812  0037C6  0E9B               	movlw	low _line4
 18813  0037C8  0100               	movlb	0	; () banked
 18814  0037CA  6F81               	movwf	sprintf@wh& (0+255),b
 18815  0037CC  0E01               	movlw	high _line4
 18816  0037CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18817  0037D0  0E88               	movlw	low STR_25
 18818  0037D2  6F83               	movwf	sprintf@f& (0+255),b
 18819  0037D4  0E7E               	movlw	high STR_25
 18820  0037D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18821  0037D8  EC10  F02D         	call	_sprintf	;wreg free
 18822                           
 18823                           ;conexaoWifi.h: 133: if ((strstr(bufferSerial, "+IPD") != (0)) || (strstr(bufferSerial, 
      +                          "Accept") != (0)) || (strstr(bufferSerial, "CONNECT") != (0))) {
 18824  0037DC  0E42               	movlw	low _bufferSerial
 18825  0037DE  0100               	movlb	0	; () banked
 18826  0037E0  6F6F               	movwf	strstr@s1& (0+255),b
 18827  0037E2  0E02               	movlw	high _bufferSerial
 18828  0037E4  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18829  0037E6  0ECD               	movlw	low STR_26
 18830  0037E8  6F71               	movwf	strstr@s2& (0+255),b
 18831  0037EA  0E7F               	movlw	high STR_26
 18832  0037EC  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18833  0037EE  EC7F  F028         	call	_strstr	;wreg free
 18834  0037F2  0100               	movlb	0	; () banked
 18835  0037F4  516F               	movf	?_strstr& (0+255),w,b
 18836  0037F6  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18837  0037F8  A4D8               	btfss	status,2,c
 18838  0037FA  D01E               	goto	u12990
 18839                           
 18840                           ; BSR set to: 0
 18841  0037FC  0E42               	movlw	low _bufferSerial
 18842  0037FE  6F6F               	movwf	strstr@s1& (0+255),b
 18843  003800  0E02               	movlw	high _bufferSerial
 18844  003802  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18845  003804  0EBA               	movlw	low STR_27
 18846  003806  6F71               	movwf	strstr@s2& (0+255),b
 18847  003808  0E7F               	movlw	high STR_27
 18848  00380A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18849  00380C  EC7F  F028         	call	_strstr	;wreg free
 18850  003810  0100               	movlb	0	; () banked
 18851  003812  516F               	movf	?_strstr& (0+255),w,b
 18852  003814  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18853  003816  A4D8               	btfss	status,2,c
 18854  003818  D00F               	goto	u12990
 18855                           
 18856                           ; BSR set to: 0
 18857  00381A  0E42               	movlw	low _bufferSerial
 18858  00381C  6F6F               	movwf	strstr@s1& (0+255),b
 18859  00381E  0E02               	movlw	high _bufferSerial
 18860  003820  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18861  003822  0E6A               	movlw	low STR_28
 18862  003824  6F71               	movwf	strstr@s2& (0+255),b
 18863  003826  0E7F               	movlw	high STR_28
 18864  003828  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18865  00382A  EC7F  F028         	call	_strstr	;wreg free
 18866  00382E  0100               	movlb	0	; () banked
 18867  003830  516F               	movf	?_strstr& (0+255),w,b
 18868  003832  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18869  003834  B4D8               	btfsc	status,2,c
 18870  003836  0012               	return	
 18871  003838                     u12990:
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;conexaoWifi.h: 134: delay(400);
 18875                           
 18876                           ; BSR set to: 0
 18877  003838  0E01               	movlw	1
 18878  00383A  6F61               	movwf	(delay@x+1)& (0+255),b
 18879  00383C  0E90               	movlw	144
 18880  00383E  6F60               	movwf	delay@x& (0+255),b
 18881  003840  EC94  F02E         	call	_delay	;wreg free
 18882                           
 18883                           ;conexaoWifi.h: 135: f_wifi_processo++;
 18884  003844  0101               	movlb	1	; () banked
 18885  003846  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18886                           
 18887                           ; BSR set to: 1
 18888                           ;conexaoWifi.h: 136: }
 18889                           ;conexaoWifi.h: 137: break;
 18890  003848  0012               	return	
 18891  00384A                     
 18892                           ; BSR set to: 1
 18893                           ;conexaoWifi.h: 139: limpaBuffer();
 18894                           
 18895                           ; BSR set to: 1
 18896  00384A  EC75  F02D         	call	_limpaBuffer	;wreg free
 18897                           
 18898                           ;conexaoWifi.h: 140: printf("AT+CIPSENDEX=0,800\r\n");
 18899  00384E  0E12               	movlw	low STR_29
 18900  003850  0100               	movlb	0	; () banked
 18901  003852  6F81               	movwf	printf@f& (0+255),b
 18902  003854  0E7C               	movlw	high STR_29
 18903  003856  6F82               	movwf	(printf@f+1)& (0+255),b
 18904  003858  ECB4  F02D         	call	_printf	;wreg free
 18905                           
 18906                           ;conexaoWifi.h: 141: f_wifi_processo++;
 18907  00385C  0101               	movlb	1	; () banked
 18908  00385E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18909                           
 18910                           ;conexaoWifi.h: 142: break;
 18911  003860  0012               	return	
 18912  003862                     
 18913                           ; BSR set to: 1
 18914                           ;conexaoWifi.h: 144: if (strstr(bufferSerial, ">") != (0)) {
 18915                           
 18916                           ; BSR set to: 1
 18917  003862  0E42               	movlw	low _bufferSerial
 18918  003864  0100               	movlb	0	; () banked
 18919  003866  6F6F               	movwf	strstr@s1& (0+255),b
 18920  003868  0E02               	movlw	high _bufferSerial
 18921  00386A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18922  00386C  0E77               	movlw	low (STR_107+18)
 18923  00386E  6F71               	movwf	strstr@s2& (0+255),b
 18924  003870  0E7C               	movlw	high (STR_107+18)
 18925  003872  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18926  003874  EC7F  F028         	call	_strstr	;wreg free
 18927  003878  0100               	movlb	0	; () banked
 18928  00387A  516F               	movf	?_strstr& (0+255),w,b
 18929  00387C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18930  00387E  B4D8               	btfsc	status,2,c
 18931  003880  0012               	return	
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;conexaoWifi.h: 145: f_wifi_processo++;
 18935  003882  0101               	movlb	1	; () banked
 18936  003884  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;conexaoWifi.h: 146: }
 18940                           ;conexaoWifi.h: 147: break;
 18941  003886  0012               	return	
 18942  003888                     
 18943                           ; BSR set to: 1
 18944                           ;conexaoWifi.h: 149: limpaBuffer();
 18945                           
 18946                           ; BSR set to: 1
 18947  003888  EC75  F02D         	call	_limpaBuffer	;wreg free
 18948                           
 18949                           ;conexaoWifi.h: 150: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18950  00388C  0E43               	movlw	low STR_31
 18951  00388E  0100               	movlb	0	; () banked
 18952  003890  6F81               	movwf	printf@f& (0+255),b
 18953  003892  0E7B               	movlw	high STR_31
 18954  003894  6F82               	movwf	(printf@f+1)& (0+255),b
 18955  003896  ECB4  F02D         	call	_printf	;wreg free
 18956                           
 18957                           ;conexaoWifi.h: 151: delay(100);
 18958  00389A  0E00               	movlw	0
 18959  00389C  0100               	movlb	0	; () banked
 18960  00389E  6F61               	movwf	(delay@x+1)& (0+255),b
 18961  0038A0  0E64               	movlw	100
 18962  0038A2  6F60               	movwf	delay@x& (0+255),b
 18963  0038A4  EC94  F02E         	call	_delay	;wreg free
 18964                           
 18965                           ;conexaoWifi.h: 152: printf("<html><head><title>WIFI</title><style>*{font-size: 35px;fon
      +                          t-family:sans-serif;}form{height:450px;display:flex;flex-direction:column;justify-conten
      +                          t:space-around;align-items:center;margin:0 auto;}button{width:280px;height:60px;color:Wh
      +                          ite;bac
 18966  0038A8  0EDB               	movlw	low STR_32
 18967  0038AA  0100               	movlb	0	; () banked
 18968  0038AC  6F81               	movwf	printf@f& (0+255),b
 18969  0038AE  0E77               	movlw	high STR_32
 18970  0038B0  6F82               	movwf	(printf@f+1)& (0+255),b
 18971  0038B2  ECB4  F02D         	call	_printf	;wreg free
 18972                           
 18973                           ;conexaoWifi.h: 153: delay(800);
 18974  0038B6  0E03               	movlw	3
 18975  0038B8  0100               	movlb	0	; () banked
 18976  0038BA  6F61               	movwf	(delay@x+1)& (0+255),b
 18977  0038BC  0E20               	movlw	32
 18978  0038BE  6F60               	movwf	delay@x& (0+255),b
 18979  0038C0  EC94  F02E         	call	_delay	;wreg free
 18980                           
 18981                           ;conexaoWifi.h: 154: printf("AT+CIPCLOSE=0\r\n");
 18982  0038C4  0EE9               	movlw	low STR_33
 18983  0038C6  0100               	movlb	0	; () banked
 18984  0038C8  6F81               	movwf	printf@f& (0+255),b
 18985  0038CA  0E7D               	movlw	high STR_33
 18986  0038CC  6F82               	movwf	(printf@f+1)& (0+255),b
 18987  0038CE  ECB4  F02D         	call	_printf	;wreg free
 18988                           
 18989                           ;conexaoWifi.h: 155: delay(300);
 18990  0038D2  0E01               	movlw	1
 18991  0038D4  0100               	movlb	0	; () banked
 18992  0038D6  6F61               	movwf	(delay@x+1)& (0+255),b
 18993  0038D8  0E2C               	movlw	44
 18994  0038DA  6F60               	movwf	delay@x& (0+255),b
 18995  0038DC  EC94  F02E         	call	_delay	;wreg free
 18996                           
 18997                           ;conexaoWifi.h: 156: t_wifi_restart = 180;
 18998  0038E0  0EB4               	movlw	180
 18999  0038E2  0101               	movlb	1	; () banked
 19000  0038E4  6F97               	movwf	_t_wifi_restart& (0+255),b
 19001                           
 19002                           ; BSR set to: 1
 19003                           ;conexaoWifi.h: 157: limpaBuffer();
 19004  0038E6  EC75  F02D         	call	_limpaBuffer	;wreg free
 19005                           
 19006                           ;conexaoWifi.h: 158: f_wifi_processo++;
 19007  0038EA  0101               	movlb	1	; () banked
 19008  0038EC  2B96               	incf	_f_wifi_processo& (0+255),f,b
 19009                           
 19010                           ;conexaoWifi.h: 159: break;
 19011  0038EE  0012               	return	
 19012  0038F0                     
 19013                           ; BSR set to: 1
 19014                           ;conexaoWifi.h: 161: sprintf(line4, "Aguardando...");
 19015                           
 19016                           ; BSR set to: 1
 19017  0038F0  0E9B               	movlw	low _line4
 19018  0038F2  0100               	movlb	0	; () banked
 19019  0038F4  6F81               	movwf	sprintf@wh& (0+255),b
 19020  0038F6  0E01               	movlw	high _line4
 19021  0038F8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19022  0038FA  0E7A               	movlw	low STR_34
 19023  0038FC  6F83               	movwf	sprintf@f& (0+255),b
 19024  0038FE  0E7E               	movlw	high STR_34
 19025  003900  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19026  003902  EC10  F02D         	call	_sprintf	;wreg free
 19027                           
 19028                           ;conexaoWifi.h: 162: if ((strstr(bufferSerial, "ssid") != (0)) && (strstr(bufferSerial, 
      +                          "fimstr") != (0))) {
 19029  003906  0E42               	movlw	low _bufferSerial
 19030  003908  0100               	movlb	0	; () banked
 19031  00390A  6F6F               	movwf	strstr@s1& (0+255),b
 19032  00390C  0E02               	movlw	high _bufferSerial
 19033  00390E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19034  003910  0ED2               	movlw	low STR_35
 19035  003912  6F71               	movwf	strstr@s2& (0+255),b
 19036  003914  0E7F               	movlw	high STR_35
 19037  003916  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19038  003918  EC7F  F028         	call	_strstr	;wreg free
 19039  00391C  0100               	movlb	0	; () banked
 19040  00391E  516F               	movf	?_strstr& (0+255),w,b
 19041  003920  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19042  003922  B4D8               	btfsc	status,2,c
 19043  003924  0012               	return	
 19044                           
 19045                           ; BSR set to: 0
 19046  003926  0E42               	movlw	low _bufferSerial
 19047  003928  6F6F               	movwf	strstr@s1& (0+255),b
 19048  00392A  0E02               	movlw	high _bufferSerial
 19049  00392C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19050  00392E  0EAC               	movlw	low STR_36
 19051  003930  6F71               	movwf	strstr@s2& (0+255),b
 19052  003932  0E7F               	movlw	high STR_36
 19053  003934  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19054  003936  EC7F  F028         	call	_strstr	;wreg free
 19055  00393A  0100               	movlb	0	; () banked
 19056  00393C  516F               	movf	?_strstr& (0+255),w,b
 19057  00393E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19058  003940  B4D8               	btfsc	status,2,c
 19059  003942  0012               	return	
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;conexaoWifi.h: 163: filtroStr("ssid=", "&", bufferSerial, ssid);
 19063  003944  0EC1               	movlw	low STR_37
 19064  003946  6F91               	movwf	filtroStr@inicio& (0+255),b
 19065  003948  0E7F               	movlw	high STR_37
 19066  00394A  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19067  00394C  0EF8               	movlw	low STR_38
 19068  00394E  6F93               	movwf	filtroStr@fim& (0+255),b
 19069  003950  0E7F               	movlw	high STR_38
 19070  003952  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19071  003954  0E42               	movlw	low _bufferSerial
 19072  003956  6F95               	movwf	filtroStr@str& (0+255),b
 19073  003958  0E02               	movlw	high _bufferSerial
 19074  00395A  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19075  00395C  0EA1               	movlw	low _ssid
 19076  00395E  6F97               	movwf	filtroStr@strdest& (0+255),b
 19077  003960  0E02               	movlw	high _ssid
 19078  003962  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19079  003964  EC74  F022         	call	_filtroStr	;wreg free
 19080                           
 19081                           ;conexaoWifi.h: 164: filtroStr("senha=", "&", bufferSerial, senha);
 19082  003968  0E89               	movlw	low STR_39
 19083  00396A  0100               	movlb	0	; () banked
 19084  00396C  6F91               	movwf	filtroStr@inicio& (0+255),b
 19085  00396E  0E7F               	movlw	high STR_39
 19086  003970  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19087  003972  0EF8               	movlw	low STR_38
 19088  003974  6F93               	movwf	filtroStr@fim& (0+255),b
 19089  003976  0E7F               	movlw	high STR_38
 19090  003978  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19091  00397A  0E42               	movlw	low _bufferSerial
 19092  00397C  6F95               	movwf	filtroStr@str& (0+255),b
 19093  00397E  0E02               	movlw	high _bufferSerial
 19094  003980  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19095  003982  0E92               	movlw	low _senha
 19096  003984  6F97               	movwf	filtroStr@strdest& (0+255),b
 19097  003986  0E02               	movlw	high _senha
 19098  003988  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19099  00398A  EC74  F022         	call	_filtroStr	;wreg free
 19100                           
 19101                           ;conexaoWifi.h: 166: sprintf(line1, "%s", ssid);
 19102  00398E  0EDA               	movlw	low _line1
 19103  003990  0100               	movlb	0	; () banked
 19104  003992  6F81               	movwf	sprintf@wh& (0+255),b
 19105  003994  0E01               	movlw	high _line1
 19106  003996  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19107  003998  0E25               	movlw	low (STR_82+7)
 19108  00399A  6F83               	movwf	sprintf@f& (0+255),b
 19109  00399C  0E7F               	movlw	high (STR_82+7)
 19110  00399E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19111  0039A0  0EA1               	movlw	low _ssid
 19112  0039A2  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19113  0039A4  0E02               	movlw	high _ssid
 19114  0039A6  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19115  0039A8  EC10  F02D         	call	_sprintf	;wreg free
 19116                           
 19117                           ;conexaoWifi.h: 167: sprintf(line2, "%s", senha);
 19118  0039AC  0EC5               	movlw	low _line2
 19119  0039AE  0100               	movlb	0	; () banked
 19120  0039B0  6F81               	movwf	sprintf@wh& (0+255),b
 19121  0039B2  0E01               	movlw	high _line2
 19122  0039B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19123  0039B6  0E25               	movlw	low (STR_82+7)
 19124  0039B8  6F83               	movwf	sprintf@f& (0+255),b
 19125  0039BA  0E7F               	movlw	high (STR_82+7)
 19126  0039BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19127  0039BE  0E92               	movlw	low _senha
 19128  0039C0  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19129  0039C2  0E02               	movlw	high _senha
 19130  0039C4  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19131  0039C6  EC10  F02D         	call	_sprintf	;wreg free
 19132                           
 19133                           ;conexaoWifi.h: 168: sprintf(line4, "OK...        ");
 19134  0039CA  0E9B               	movlw	low _line4
 19135  0039CC  0100               	movlb	0	; () banked
 19136  0039CE  6F81               	movwf	sprintf@wh& (0+255),b
 19137  0039D0  0E01               	movlw	high _line4
 19138  0039D2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19139  0039D4  0E6C               	movlw	low STR_43
 19140  0039D6  6F83               	movwf	sprintf@f& (0+255),b
 19141  0039D8  0E7E               	movlw	high STR_43
 19142  0039DA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19143  0039DC  EC10  F02D         	call	_sprintf	;wreg free
 19144                           
 19145                           ;conexaoWifi.h: 169: atualizaLCD(line1, line2, line3, line4);
 19146  0039E0  0EDA               	movlw	low _line1
 19147  0039E2  0100               	movlb	0	; () banked
 19148  0039E4  6F68               	movwf	atualizaLCD@line1& (0+255),b
 19149  0039E6  0E01               	movlw	high _line1
 19150  0039E8  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 19151  0039EA  0EC5               	movlw	low _line2
 19152  0039EC  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 19153  0039EE  0E01               	movlw	high _line2
 19154  0039F0  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 19155  0039F2  0EB0               	movlw	low _line3
 19156  0039F4  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 19157  0039F6  0E01               	movlw	high _line3
 19158  0039F8  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 19159  0039FA  0E9B               	movlw	low _line4
 19160  0039FC  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 19161  0039FE  0E01               	movlw	high _line4
 19162  003A00  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 19163  003A02  EC14  F027         	call	_atualizaLCD	;wreg free
 19164                           
 19165                           ;conexaoWifi.h: 171: if (strlen(ssid) > 3) {
 19166  003A06  0EA1               	movlw	low _ssid
 19167  003A08  0100               	movlb	0	; () banked
 19168  003A0A  6F60               	movwf	strlen@s& (0+255),b
 19169  003A0C  0E02               	movlw	high _ssid
 19170  003A0E  6F61               	movwf	(strlen@s+1)& (0+255),b
 19171  003A10  EC6E  F02C         	call	_strlen	;wreg free
 19172  003A14  0100               	movlb	0	; () banked
 19173  003A16  5161               	movf	(?_strlen+1)& (0+255),w,b
 19174  003A18  E104               	bnz	u13030
 19175  003A1A  0E04               	movlw	4
 19176  003A1C  5D60               	subwf	?_strlen& (0+255),w,b
 19177  003A1E  A0D8               	btfss	status,0,c
 19178  003A20  D030               	goto	u13070
 19179  003A22                     u13030:
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;conexaoWifi.h: 172: unsigned char i = 0;
 19183  003A22  0E00               	movlw	0
 19184  003A24  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19185                           
 19186                           ;conexaoWifi.h: 173: for (i = 0; i < 15; i++) {
 19187  003A26  0E00               	movlw	0
 19188  003A28  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19189  003A2A                     l8647:
 19190                           
 19191                           ; BSR set to: 0
 19192  003A2A  0E0E               	movlw	14
 19193  003A2C  65C3               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19194  003A2E  D001               	goto	l1017
 19195  003A30  D011               	goto	u13050
 19196  003A32                     l1017:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;conexaoWifi.h: 174: writeEEPROM_ext((40 + i), ssid[i]);
 19200                           
 19201                           ; BSR set to: 0
 19202  003A32  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19203  003A34  0D01               	mullw	1
 19204  003A36  0EA1               	movlw	low _ssid
 19205  003A38  24F3               	addwf	prodl,w,c
 19206  003A3A  6ED9               	movwf	fsr2l,c
 19207  003A3C  0E02               	movlw	high _ssid
 19208  003A3E  20F4               	addwfc	prodh,w,c
 19209  003A40  6EDA               	movwf	fsr2h,c
 19210  003A42  50DF               	movf	indf2,w,c
 19211  003A44  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19212  003A46  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19213  003A48  0F28               	addlw	40
 19214  003A4A  EC54  F02D         	call	_writeEEPROM_ext
 19215  003A4E  0100               	movlb	0	; () banked
 19216  003A50  2BC3               	incf	alterarConfigWifi@i& (0+255),f,b
 19217  003A52  D7EB               	goto	l8647
 19218  003A54                     u13050:
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;conexaoWifi.h: 175: }
 19222                           ;conexaoWifi.h: 176: for (i = 0; i < 15; i++) {
 19223                           
 19224                           ; BSR set to: 0
 19225  003A54  0E00               	movlw	0
 19226  003A56  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19227  003A58                     l8659:
 19228                           
 19229                           ; BSR set to: 0
 19230  003A58  0E0E               	movlw	14
 19231  003A5A  65C3               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19232  003A5C  D001               	goto	l1019
 19233  003A5E  D011               	goto	u13070
 19234  003A60                     l1019:
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;conexaoWifi.h: 177: writeEEPROM_ext((60 + i), senha[i]);
 19238                           
 19239                           ; BSR set to: 0
 19240  003A60  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19241  003A62  0D01               	mullw	1
 19242  003A64  0E92               	movlw	low _senha
 19243  003A66  24F3               	addwf	prodl,w,c
 19244  003A68  6ED9               	movwf	fsr2l,c
 19245  003A6A  0E02               	movlw	high _senha
 19246  003A6C  20F4               	addwfc	prodh,w,c
 19247  003A6E  6EDA               	movwf	fsr2h,c
 19248  003A70  50DF               	movf	indf2,w,c
 19249  003A72  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19250  003A74  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19251  003A76  0F3C               	addlw	60
 19252  003A78  EC54  F02D         	call	_writeEEPROM_ext
 19253  003A7C  0100               	movlb	0	; () banked
 19254  003A7E  2BC3               	incf	alterarConfigWifi@i& (0+255),f,b
 19255  003A80  D7EB               	goto	l8659
 19256  003A82                     u13070:
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;conexaoWifi.h: 178: }
 19260                           ;conexaoWifi.h: 179: }
 19261                           ;conexaoWifi.h: 180: while (1) {
 19262                           
 19263                           ; BSR set to: 0
 19264  003A82  D7FF               	goto	u13070
 19265  003A84  0E00               	movlw	0
 19266  003A86  0101               	movlb	1	; () banked
 19267  003A88  6F96               	movwf	_f_wifi_processo& (0+255),b
 19268                           
 19269                           ;conexaoWifi.h: 185: }
 19270  003A8A  0012               	return	
 19271  003A8C                     l989:
 19272                           
 19273                           ; BSR set to: 1
 19274  003A8C  0101               	movlb	1	; () banked
 19275  003A8E  5196               	movf	_f_wifi_processo& (0+255),w,b
 19276                           
 19277                           ; Switch size 1, requested type "space"
 19278                           ; Number of cases is 15, Range of values is 0 to 14
 19279                           ; switch strategies available:
 19280                           ; Name         Instructions Cycles
 19281                           ; simple_byte           46    24 (average)
 19282                           ;	Chosen strategy is simple_byte
 19283  003A90  0A00               	xorlw	0	; case 0
 19284  003A92  B4D8               	btfsc	status,2,c
 19285  003A94  D5D8               	goto	l990
 19286  003A96  0A01               	xorlw	1	; case 1
 19287  003A98  B4D8               	btfsc	status,2,c
 19288  003A9A  D5E3               	goto	l992
 19289  003A9C  0A03               	xorlw	3	; case 2
 19290  003A9E  B4D8               	btfsc	status,2,c
 19291  003AA0  D5F3               	goto	l994
 19292  003AA2  0A01               	xorlw	1	; case 3
 19293  003AA4  B4D8               	btfsc	status,2,c
 19294  003AA6  D5FC               	goto	l995
 19295  003AA8  0A07               	xorlw	7	; case 4
 19296  003AAA  B4D8               	btfsc	status,2,c
 19297  003AAC  D60C               	goto	l997
 19298  003AAE  0A01               	xorlw	1	; case 5
 19299  003AB0  B4D8               	btfsc	status,2,c
 19300  003AB2  D615               	goto	l998
 19301  003AB4  0A03               	xorlw	3	; case 6
 19302  003AB6  B4D8               	btfsc	status,2,c
 19303  003AB8  D625               	goto	l1000
 19304  003ABA  0A01               	xorlw	1	; case 7
 19305  003ABC  B4D8               	btfsc	status,2,c
 19306  003ABE  D62E               	goto	l1001
 19307  003AC0  0A0F               	xorlw	15	; case 8
 19308  003AC2  B4D8               	btfsc	status,2,c
 19309  003AC4  D63E               	goto	l1003
 19310  003AC6  0A01               	xorlw	1	; case 9
 19311  003AC8  B4D8               	btfsc	status,2,c
 19312  003ACA  D647               	goto	l1004
 19313  003ACC  0A03               	xorlw	3	; case 10
 19314  003ACE  B4D8               	btfsc	status,2,c
 19315  003AD0  D659               	goto	l1006
 19316  003AD2  0A01               	xorlw	1	; case 11
 19317  003AD4  B4D8               	btfsc	status,2,c
 19318  003AD6  D6B9               	goto	l1010
 19319  003AD8  0A07               	xorlw	7	; case 12
 19320  003ADA  B4D8               	btfsc	status,2,c
 19321  003ADC  D6C2               	goto	l1011
 19322  003ADE  0A01               	xorlw	1	; case 13
 19323  003AE0  B4D8               	btfsc	status,2,c
 19324  003AE2  D6D2               	goto	l1013
 19325  003AE4  0A03               	xorlw	3	; case 14
 19326  003AE6  B4D8               	btfsc	status,2,c
 19327  003AE8  D703               	goto	l1014
 19328  003AEA  D7CC               	goto	l1024
 19329  003AEC                     __end_of_alterarConfigWifi:
 19330                           	opt stack 0
 19331                           tblptru	equ	0xFF8
 19332                           tblptrh	equ	0xFF7
 19333                           tblptrl	equ	0xFF6
 19334                           tablat	equ	0xFF5
 19335                           prodh	equ	0xFF4
 19336                           prodl	equ	0xFF3
 19337                           intcon	equ	0xFF2
 19338                           intcon2	equ	0xFF1
 19339                           intcon3	equ	0xFF0
 19340                           indf0	equ	0xFEF
 19341                           postinc0	equ	0xFEE
 19342                           fsr0h	equ	0xFEA
 19343                           fsr0l	equ	0xFE9
 19344                           wreg	equ	0xFE8
 19345                           postdec1	equ	0xFE5
 19346                           fsr1l	equ	0xFE1
 19347                           indf2	equ	0xFDF
 19348                           postinc2	equ	0xFDE
 19349                           postdec2	equ	0xFDD
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function _writeEEPROM_ext *****************
 19355 ;; Defined at:
 19356 ;;		line 14 in file "src/Eeprom_ext.h"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;  adress          1    wreg     unsigned char 
 19359 ;;  data            1    3[BANK0 ] unsigned char 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  adress          1    4[BANK0 ] unsigned char 
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, status,2, status,0, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19371 ;;      Params:         0       1       0       0       0       0       0       0       0
 19372 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19374 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19375 ;;Total ram usage:        2 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:    8
 19378 ;; This function calls:
 19379 ;;		_I2C_Start
 19380 ;;		_I2C_Stop
 19381 ;;		_I2C_Write
 19382 ;;		_delay
 19383 ;; This function is called by:
 19384 ;;		_setUmidade
 19385 ;;		_setRangeValor
 19386 ;;		_alterarConfigWifi
 19387 ;;		_main
 19388 ;;		_writeEEPROM16_ext
 19389 ;; This function uses a non-reentrant model
 19390 ;;
 19391                           
 19392                           	psect	text28
 19393  005AA8                     __ptext28:
 19394                           	opt stack 0
 19395  005AA8                     _writeEEPROM_ext:
 19396                           	opt stack 22
 19397                           
 19398                           ;incstack = 0
 19399                           ;writeEEPROM_ext@adress stored from wreg
 19400  005AA8  0100               	movlb	0	; () banked
 19401  005AAA  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 19402                           
 19403                           ;Eeprom_ext.h: 16: I2C_Start();
 19404  005AAC  EC84  F02F         	call	_I2C_Start	;wreg free
 19405                           
 19406                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 19407  005AB0  0E00               	movlw	0
 19408  005AB2  0100               	movlb	0	; () banked
 19409  005AB4  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 19410  005AB6  0EA0               	movlw	160
 19411  005AB8  6F61               	movwf	I2C_Write@d& (0+255),b
 19412  005ABA  EC72  F02F         	call	_I2C_Write	;wreg free
 19413                           
 19414                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 19415  005ABE  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 19416  005AC2  0100               	movlb	0	; () banked
 19417  005AC4  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19418  005AC6  EC72  F02F         	call	_I2C_Write	;wreg free
 19419                           
 19420                           ;Eeprom_ext.h: 20: I2C_Write(data);
 19421  005ACA  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 19422  005ACE  0100               	movlb	0	; () banked
 19423  005AD0  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19424  005AD2  EC72  F02F         	call	_I2C_Write	;wreg free
 19425                           
 19426                           ;Eeprom_ext.h: 21: I2C_Stop();
 19427  005AD6  EC80  F02F         	call	_I2C_Stop	;wreg free
 19428                           
 19429                           ;Eeprom_ext.h: 22: delay(105);
 19430  005ADA  0E00               	movlw	0
 19431  005ADC  0100               	movlb	0	; () banked
 19432  005ADE  6F61               	movwf	(delay@x+1)& (0+255),b
 19433  005AE0  0E69               	movlw	105
 19434  005AE2  6F60               	movwf	delay@x& (0+255),b
 19435  005AE4  EC94  F02E         	call	_delay	;wreg free
 19436  005AE8  0012               	return		;funcret
 19437  005AEA                     __end_of_writeEEPROM_ext:
 19438                           	opt stack 0
 19439                           tblptru	equ	0xFF8
 19440                           tblptrh	equ	0xFF7
 19441                           tblptrl	equ	0xFF6
 19442                           tablat	equ	0xFF5
 19443                           prodh	equ	0xFF4
 19444                           prodl	equ	0xFF3
 19445                           intcon	equ	0xFF2
 19446                           intcon2	equ	0xFF1
 19447                           intcon3	equ	0xFF0
 19448                           indf0	equ	0xFEF
 19449                           postinc0	equ	0xFEE
 19450                           fsr0h	equ	0xFEA
 19451                           fsr0l	equ	0xFE9
 19452                           wreg	equ	0xFE8
 19453                           postdec1	equ	0xFE5
 19454                           fsr1l	equ	0xFE1
 19455                           indf2	equ	0xFDF
 19456                           postinc2	equ	0xFDE
 19457                           postdec2	equ	0xFDD
 19458                           fsr2h	equ	0xFDA
 19459                           fsr2l	equ	0xFD9
 19460                           status	equ	0xFD8
 19461                           
 19462 ;; *************** function _I2C_Write *****************
 19463 ;; Defined at:
 19464 ;;		line 41 in file "src/I2C.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;  d               2    1[BANK0 ] unsigned int 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;		None
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      void 
 19471 ;; Registers used:
 19472 ;;		wreg, status,2, status,0, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19478 ;;      Params:         0       2       0       0       0       0       0       0       0
 19479 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19481 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19482 ;;Total ram usage:        2 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:    7
 19485 ;; This function calls:
 19486 ;;		_I2C_Wait
 19487 ;; This function is called by:
 19488 ;;		_updateLeds
 19489 ;;		_writeEEPROM_ext
 19490 ;;		_readEEPROM_ext
 19491 ;; This function uses a non-reentrant model
 19492 ;;
 19493                           
 19494                           	psect	text29
 19495  005EE4                     __ptext29:
 19496                           	opt stack 0
 19497  005EE4                     _I2C_Write:
 19498                           	opt stack 22
 19499                           
 19500                           ;I2C.c: 42: I2C_Wait();
 19501                           
 19502                           ;incstack = 0
 19503  005EE4  EC51  F02F         	call	_I2C_Wait	;wreg free
 19504                           
 19505                           ;I2C.c: 43: SSPBUF = d;
 19506  005EE8  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19507  005EEC  0012               	return		;funcret
 19508  005EEE                     __end_of_I2C_Write:
 19509                           	opt stack 0
 19510                           tblptru	equ	0xFF8
 19511                           tblptrh	equ	0xFF7
 19512                           tblptrl	equ	0xFF6
 19513                           tablat	equ	0xFF5
 19514                           prodh	equ	0xFF4
 19515                           prodl	equ	0xFF3
 19516                           intcon	equ	0xFF2
 19517                           intcon2	equ	0xFF1
 19518                           intcon3	equ	0xFF0
 19519                           indf0	equ	0xFEF
 19520                           postinc0	equ	0xFEE
 19521                           fsr0h	equ	0xFEA
 19522                           fsr0l	equ	0xFE9
 19523                           wreg	equ	0xFE8
 19524                           postdec1	equ	0xFE5
 19525                           fsr1l	equ	0xFE1
 19526                           indf2	equ	0xFDF
 19527                           postinc2	equ	0xFDE
 19528                           postdec2	equ	0xFDD
 19529                           fsr2h	equ	0xFDA
 19530                           fsr2l	equ	0xFD9
 19531                           status	equ	0xFD8
 19532                           
 19533 ;; *************** function _I2C_Stop *****************
 19534 ;; Defined at:
 19535 ;;		line 35 in file "src/I2C.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;		None
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;		None
 19540 ;; Return value:  Size  Location     Type
 19541 ;;                  1    wreg      void 
 19542 ;; Registers used:
 19543 ;;		wreg, status,2, status,0, cstack
 19544 ;; Tracked objects:
 19545 ;;		On entry : 0/0
 19546 ;;		On exit  : 0/0
 19547 ;;		Unchanged: 0/0
 19548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19549 ;;      Params:         0       0       0       0       0       0       0       0       0
 19550 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19551 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19552 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19553 ;;Total ram usage:        0 bytes
 19554 ;; Hardware stack levels used:    1
 19555 ;; Hardware stack levels required when called:    7
 19556 ;; This function calls:
 19557 ;;		_I2C_Wait
 19558 ;; This function is called by:
 19559 ;;		_updateLeds
 19560 ;;		_writeEEPROM_ext
 19561 ;;		_readEEPROM_ext
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text30
 19566  005F00                     __ptext30:
 19567                           	opt stack 0
 19568  005F00                     _I2C_Stop:
 19569                           	opt stack 22
 19570                           
 19571                           ;I2C.c: 36: I2C_Wait();
 19572                           
 19573                           ;incstack = 0
 19574  005F00  EC51  F02F         	call	_I2C_Wait	;wreg free
 19575                           
 19576                           ;I2C.c: 37: PEN = 1;
 19577  005F04  84C5               	bsf	4037,2,c	;volatile
 19578  005F06  0012               	return		;funcret
 19579  005F08                     __end_of_I2C_Stop:
 19580                           	opt stack 0
 19581                           tblptru	equ	0xFF8
 19582                           tblptrh	equ	0xFF7
 19583                           tblptrl	equ	0xFF6
 19584                           tablat	equ	0xFF5
 19585                           prodh	equ	0xFF4
 19586                           prodl	equ	0xFF3
 19587                           intcon	equ	0xFF2
 19588                           intcon2	equ	0xFF1
 19589                           intcon3	equ	0xFF0
 19590                           indf0	equ	0xFEF
 19591                           postinc0	equ	0xFEE
 19592                           fsr0h	equ	0xFEA
 19593                           fsr0l	equ	0xFE9
 19594                           wreg	equ	0xFE8
 19595                           postdec1	equ	0xFE5
 19596                           fsr1l	equ	0xFE1
 19597                           indf2	equ	0xFDF
 19598                           postinc2	equ	0xFDE
 19599                           postdec2	equ	0xFDD
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _I2C_Start *****************
 19605 ;; Defined at:
 19606 ;;		line 25 in file "src/I2C.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		wreg, status,2, status,0, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19623 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19624 ;;Total ram usage:        0 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:    7
 19627 ;; This function calls:
 19628 ;;		_I2C_Wait
 19629 ;; This function is called by:
 19630 ;;		_updateLeds
 19631 ;;		_writeEEPROM_ext
 19632 ;;		_readEEPROM_ext
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text31
 19637  005F08                     __ptext31:
 19638                           	opt stack 0
 19639  005F08                     _I2C_Start:
 19640                           	opt stack 22
 19641                           
 19642                           ;I2C.c: 26: I2C_Wait();
 19643                           
 19644                           ;incstack = 0
 19645  005F08  EC51  F02F         	call	_I2C_Wait	;wreg free
 19646                           
 19647                           ;I2C.c: 27: SEN = 1;
 19648  005F0C  80C5               	bsf	4037,0,c	;volatile
 19649  005F0E  0012               	return		;funcret
 19650  005F10                     __end_of_I2C_Start:
 19651                           	opt stack 0
 19652                           tblptru	equ	0xFF8
 19653                           tblptrh	equ	0xFF7
 19654                           tblptrl	equ	0xFF6
 19655                           tablat	equ	0xFF5
 19656                           prodh	equ	0xFF4
 19657                           prodl	equ	0xFF3
 19658                           intcon	equ	0xFF2
 19659                           intcon2	equ	0xFF1
 19660                           intcon3	equ	0xFF0
 19661                           indf0	equ	0xFEF
 19662                           postinc0	equ	0xFEE
 19663                           fsr0h	equ	0xFEA
 19664                           fsr0l	equ	0xFE9
 19665                           wreg	equ	0xFE8
 19666                           postdec1	equ	0xFE5
 19667                           fsr1l	equ	0xFE1
 19668                           indf2	equ	0xFDF
 19669                           postinc2	equ	0xFDE
 19670                           postdec2	equ	0xFDD
 19671                           fsr2h	equ	0xFDA
 19672                           fsr2l	equ	0xFD9
 19673                           status	equ	0xFD8
 19674                           
 19675 ;; *************** function _I2C_Wait *****************
 19676 ;; Defined at:
 19677 ;;		line 21 in file "src/I2C.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;		None
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;		None
 19682 ;; Return value:  Size  Location     Type
 19683 ;;                  1    wreg      void 
 19684 ;; Registers used:
 19685 ;;		wreg, status,2, status,0
 19686 ;; Tracked objects:
 19687 ;;		On entry : 0/0
 19688 ;;		On exit  : 0/0
 19689 ;;		Unchanged: 0/0
 19690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19691 ;;      Params:         0       0       0       0       0       0       0       0       0
 19692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19693 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19694 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19695 ;;Total ram usage:        1 bytes
 19696 ;; Hardware stack levels used:    1
 19697 ;; Hardware stack levels required when called:    6
 19698 ;; This function calls:
 19699 ;;		Nothing
 19700 ;; This function is called by:
 19701 ;;		_I2C_Start
 19702 ;;		_I2C_Restart
 19703 ;;		_I2C_Stop
 19704 ;;		_I2C_Write
 19705 ;;		_I2C_Read
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text32
 19710  005EA2                     __ptext32:
 19711                           	opt stack 0
 19712  005EA2                     _I2C_Wait:
 19713                           	opt stack 22
 19714                           
 19715                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19716                           
 19717                           ;incstack = 0
 19718  005EA2  B4C7               	btfsc	4039,2,c	;volatile
 19719  005EA4  D7FE               	goto	_I2C_Wait
 19720  005EA6  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19721  005EAA  0E1F               	movlw	31
 19722  005EAC  0100               	movlb	0	; () banked
 19723  005EAE  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19724  005EB0  B4D8               	btfsc	status,2,c
 19725  005EB2  0012               	return	
 19726  005EB4  D7F6               	goto	_I2C_Wait
 19727  005EB6                     __end_of_I2C_Wait:
 19728                           	opt stack 0
 19729                           tblptru	equ	0xFF8
 19730                           tblptrh	equ	0xFF7
 19731                           tblptrl	equ	0xFF6
 19732                           tablat	equ	0xFF5
 19733                           prodh	equ	0xFF4
 19734                           prodl	equ	0xFF3
 19735                           intcon	equ	0xFF2
 19736                           intcon2	equ	0xFF1
 19737                           intcon3	equ	0xFF0
 19738                           indf0	equ	0xFEF
 19739                           postinc0	equ	0xFEE
 19740                           fsr0h	equ	0xFEA
 19741                           fsr0l	equ	0xFE9
 19742                           wreg	equ	0xFE8
 19743                           postdec1	equ	0xFE5
 19744                           fsr1l	equ	0xFE1
 19745                           indf2	equ	0xFDF
 19746                           postinc2	equ	0xFDE
 19747                           postdec2	equ	0xFDD
 19748                           fsr2h	equ	0xFDA
 19749                           fsr2l	equ	0xFD9
 19750                           status	equ	0xFD8
 19751                           
 19752 ;; *************** function _printf *****************
 19753 ;; Defined at:
 19754 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19755 ;; Parameters:    Size  Location     Type
 19756 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19757 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(168), 
 19758 ;;		 -> STR_55(19), STR_53(40), STR_50(15), STR_49(21), 
 19759 ;;		 -> STR_46(14), STR_44(14), STR_33(16), STR_32(704), 
 19760 ;;		 -> STR_31(45), STR_29(21), STR_20(22), STR_18(22), 
 19761 ;;		 -> STR_16(35), STR_14(14), STR_12(14), 
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;  pb              4   95[BANK0 ] struct __prbuf
 19764 ;;  ap              2   93[BANK0 ] PTR void [1]
 19765 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  2   33[BANK0 ] int 
 19768 ;; Registers used:
 19769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19775 ;;      Params:         0      60       0       0       0       0       0       0       0
 19776 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19778 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19779 ;;Total ram usage:       66 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:    8
 19782 ;; This function calls:
 19783 ;;		__doprnt
 19784 ;; This function is called by:
 19785 ;;		_alterarConfigWifi
 19786 ;;		_enviaDadosWifi
 19787 ;;		_main
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text33
 19792  005B68                     __ptext33:
 19793                           	opt stack 0
 19794  005B68                     _printf:
 19795                           	opt stack 22
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;incstack = 0
 19799  005B68  0E00               	movlw	0
 19800  005B6A  0100               	movlb	0	; () banked
 19801  005B6C  6FBF               	movwf	printf@pb& (0+255),b
 19802  005B6E  0E00               	movlw	0
 19803  005B70  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19804  005B72  0EC8               	movlw	low _putch
 19805  005B74  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19806  005B76  0E5E               	movlw	high _putch
 19807  005B78  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19808  005B7A  0E83               	movlw	low (?_printf+2)
 19809  005B7C  6FBD               	movwf	printf@ap& (0+255),b
 19810  005B7E  0E00               	movlw	high (?_printf+2)
 19811  005B80  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;	Return value of _printf is never used
 19815  005B82  0EBF               	movlw	low printf@pb
 19816  005B84  6F6C               	movwf	__doprnt@pb& (0+255),b
 19817  005B86  0E00               	movlw	high printf@pb
 19818  005B88  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19819  005B8A  C081  F06E         	movff	printf@f,__doprnt@f
 19820  005B8E  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19821  005B92  0EBD               	movlw	low printf@ap
 19822  005B94  6F70               	movwf	__doprnt@ap& (0+255),b
 19823  005B96  0E00               	movlw	high printf@ap
 19824  005B98  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19825  005B9A  EC0B  F013         	call	__doprnt	;wreg free
 19826  005B9E  0012               	return	
 19827  005BA0                     __end_of_printf:
 19828                           	opt stack 0
 19829                           tblptru	equ	0xFF8
 19830                           tblptrh	equ	0xFF7
 19831                           tblptrl	equ	0xFF6
 19832                           tablat	equ	0xFF5
 19833                           prodh	equ	0xFF4
 19834                           prodl	equ	0xFF3
 19835                           intcon	equ	0xFF2
 19836                           intcon2	equ	0xFF1
 19837                           intcon3	equ	0xFF0
 19838                           indf0	equ	0xFEF
 19839                           postinc0	equ	0xFEE
 19840                           fsr0h	equ	0xFEA
 19841                           fsr0l	equ	0xFE9
 19842                           wreg	equ	0xFE8
 19843                           postdec1	equ	0xFE5
 19844                           fsr1l	equ	0xFE1
 19845                           indf2	equ	0xFDF
 19846                           postinc2	equ	0xFDE
 19847                           postdec2	equ	0xFDD
 19848                           fsr2h	equ	0xFDA
 19849                           fsr2l	equ	0xFD9
 19850                           status	equ	0xFD8
 19851                           
 19852 ;; *************** function _limpaBuffer *****************
 19853 ;; Defined at:
 19854 ;;		line 21 in file "src/conexaoWifi.h"
 19855 ;; Parameters:    Size  Location     Type
 19856 ;;		None
 19857 ;; Auto vars:     Size  Location     Type
 19858 ;;		None
 19859 ;; Return value:  Size  Location     Type
 19860 ;;                  1    wreg      void 
 19861 ;; Registers used:
 19862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19863 ;; Tracked objects:
 19864 ;;		On entry : 0/0
 19865 ;;		On exit  : 0/0
 19866 ;;		Unchanged: 0/0
 19867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19868 ;;      Params:         0       0       0       0       0       0       0       0       0
 19869 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19871 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19872 ;;Total ram usage:        0 bytes
 19873 ;; Hardware stack levels used:    1
 19874 ;; Hardware stack levels required when called:    7
 19875 ;; This function calls:
 19876 ;;		_delay
 19877 ;;		_memset
 19878 ;; This function is called by:
 19879 ;;		_alterarConfigWifi
 19880 ;;		_enviaDadosWifi
 19881 ;; This function uses a non-reentrant model
 19882 ;;
 19883                           
 19884                           	psect	text34
 19885  005AEA                     __ptext34:
 19886                           	opt stack 0
 19887  005AEA                     _limpaBuffer:
 19888                           	opt stack 22
 19889                           
 19890                           ;conexaoWifi.h: 22: delay(5);
 19891                           
 19892                           ;incstack = 0
 19893  005AEA  0E00               	movlw	0
 19894  005AEC  0100               	movlb	0	; () banked
 19895  005AEE  6F61               	movwf	(delay@x+1)& (0+255),b
 19896  005AF0  0E05               	movlw	5
 19897  005AF2  6F60               	movwf	delay@x& (0+255),b
 19898  005AF4  EC94  F02E         	call	_delay	;wreg free
 19899                           
 19900                           ;conexaoWifi.h: 23: memset(bufferSerial, 0, sizeof (bufferSerial));
 19901  005AF8  0E42               	movlw	low _bufferSerial
 19902  005AFA  0100               	movlb	0	; () banked
 19903  005AFC  6F60               	movwf	memset@p1& (0+255),b
 19904  005AFE  0E02               	movlw	high _bufferSerial
 19905  005B00  6F61               	movwf	(memset@p1+1)& (0+255),b
 19906  005B02  0E00               	movlw	0
 19907  005B04  6F63               	movwf	(memset@c+1)& (0+255),b
 19908  005B06  0E00               	movlw	0
 19909  005B08  6F62               	movwf	memset@c& (0+255),b
 19910  005B0A  0E00               	movlw	0
 19911  005B0C  6F65               	movwf	(memset@n+1)& (0+255),b
 19912  005B0E  0E50               	movlw	80
 19913  005B10  6F64               	movwf	memset@n& (0+255),b
 19914  005B12  EC36  F02E         	call	_memset	;wreg free
 19915                           
 19916                           ;conexaoWifi.h: 24: cbf = 0;
 19917  005B16  0E00               	movlw	0
 19918  005B18  6E43               	movwf	_cbf,c
 19919                           
 19920                           ;conexaoWifi.h: 25: delay(5);
 19921  005B1A  0E00               	movlw	0
 19922  005B1C  0100               	movlb	0	; () banked
 19923  005B1E  6F61               	movwf	(delay@x+1)& (0+255),b
 19924  005B20  0E05               	movlw	5
 19925  005B22  6F60               	movwf	delay@x& (0+255),b
 19926  005B24  EC94  F02E         	call	_delay	;wreg free
 19927  005B28  0012               	return		;funcret
 19928  005B2A                     __end_of_limpaBuffer:
 19929                           	opt stack 0
 19930                           tblptru	equ	0xFF8
 19931                           tblptrh	equ	0xFF7
 19932                           tblptrl	equ	0xFF6
 19933                           tablat	equ	0xFF5
 19934                           prodh	equ	0xFF4
 19935                           prodl	equ	0xFF3
 19936                           intcon	equ	0xFF2
 19937                           intcon2	equ	0xFF1
 19938                           intcon3	equ	0xFF0
 19939                           indf0	equ	0xFEF
 19940                           postinc0	equ	0xFEE
 19941                           fsr0h	equ	0xFEA
 19942                           fsr0l	equ	0xFE9
 19943                           wreg	equ	0xFE8
 19944                           postdec1	equ	0xFE5
 19945                           fsr1l	equ	0xFE1
 19946                           indf2	equ	0xFDF
 19947                           postinc2	equ	0xFDE
 19948                           postdec2	equ	0xFDD
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953 ;; *************** function _memset *****************
 19954 ;; Defined at:
 19955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;  p1              2    0[BANK0 ] PTR void 
 19958 ;;		 -> bufferSerial(80), 
 19959 ;;  c               2    2[BANK0 ] int 
 19960 ;;  n               2    4[BANK0 ] unsigned int 
 19961 ;; Auto vars:     Size  Location     Type
 19962 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19963 ;;		 -> bufferSerial(80), 
 19964 ;; Return value:  Size  Location     Type
 19965 ;;                  2    0[BANK0 ] PTR void 
 19966 ;; Registers used:
 19967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19968 ;; Tracked objects:
 19969 ;;		On entry : 0/0
 19970 ;;		On exit  : 0/0
 19971 ;;		Unchanged: 0/0
 19972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19973 ;;      Params:         0       6       0       0       0       0       0       0       0
 19974 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19975 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19976 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19977 ;;Total ram usage:        8 bytes
 19978 ;; Hardware stack levels used:    1
 19979 ;; Hardware stack levels required when called:    6
 19980 ;; This function calls:
 19981 ;;		Nothing
 19982 ;; This function is called by:
 19983 ;;		_limpaBuffer
 19984 ;; This function uses a non-reentrant model
 19985 ;;
 19986                           
 19987                           	psect	text35
 19988  005C6C                     __ptext35:
 19989                           	opt stack 0
 19990  005C6C                     _memset:
 19991                           	opt stack 22
 19992                           
 19993                           ;incstack = 0
 19994  005C6C  C060  F066         	movff	memset@p1,memset@p
 19995  005C70  C061  F067         	movff	memset@p1+1,memset@p+1
 19996  005C74  D009               	goto	l2027
 19997  005C76                     l6561:
 19998  005C76  C066  FFD9         	movff	memset@p,fsr2l
 19999  005C7A  C067  FFDA         	movff	memset@p+1,fsr2h
 20000  005C7E  C062  FFDF         	movff	memset@c,indf2
 20001  005C82  0100               	movlb	0	; () banked
 20002  005C84  4B66               	infsnz	memset@p& (0+255),f,b
 20003  005C86  2B67               	incf	(memset@p+1)& (0+255),f,b
 20004  005C88                     l2027:
 20005                           
 20006                           ; BSR set to: 0
 20007  005C88  0100               	movlb	0	; () banked
 20008  005C8A  0764               	decf	memset@n& (0+255),f,b
 20009  005C8C  A0D8               	btfss	status,0,c
 20010  005C8E  0765               	decf	(memset@n+1)& (0+255),f,b
 20011  005C90  2964               	incf	memset@n& (0+255),w,b
 20012  005C92  E1F1               	bnz	l6561
 20013  005C94  2965               	incf	(memset@n+1)& (0+255),w,b
 20014  005C96  B4D8               	btfsc	status,2,c
 20015  005C98  0012               	return	
 20016  005C9A  D7ED               	goto	l2028
 20017  005C9C                     __end_of_memset:
 20018                           	opt stack 0
 20019                           tblptru	equ	0xFF8
 20020                           tblptrh	equ	0xFF7
 20021                           tblptrl	equ	0xFF6
 20022                           tablat	equ	0xFF5
 20023                           prodh	equ	0xFF4
 20024                           prodl	equ	0xFF3
 20025                           intcon	equ	0xFF2
 20026                           intcon2	equ	0xFF1
 20027                           intcon3	equ	0xFF0
 20028                           indf0	equ	0xFEF
 20029                           postinc0	equ	0xFEE
 20030                           fsr0h	equ	0xFEA
 20031                           fsr0l	equ	0xFE9
 20032                           wreg	equ	0xFE8
 20033                           postdec1	equ	0xFE5
 20034                           fsr1l	equ	0xFE1
 20035                           indf2	equ	0xFDF
 20036                           postinc2	equ	0xFDE
 20037                           postdec2	equ	0xFDD
 20038                           fsr2h	equ	0xFDA
 20039                           fsr2l	equ	0xFD9
 20040                           status	equ	0xFD8
 20041                           
 20042 ;; *************** function _delay *****************
 20043 ;; Defined at:
 20044 ;;		line 18 in file "src/function.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;  x               2    0[BANK0 ] int 
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;		None
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      void 
 20051 ;; Registers used:
 20052 ;;		wreg, status,2, status,0
 20053 ;; Tracked objects:
 20054 ;;		On entry : 0/0
 20055 ;;		On exit  : 0/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20058 ;;      Params:         0       2       0       0       0       0       0       0       0
 20059 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20060 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20061 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20062 ;;Total ram usage:        3 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; Hardware stack levels required when called:    6
 20065 ;; This function calls:
 20066 ;;		Nothing
 20067 ;; This function is called by:
 20068 ;;		_writeEEPROM_ext
 20069 ;;		_limpaBuffer
 20070 ;;		_alterarConfigWifi
 20071 ;;		_enviaDadosWifi
 20072 ;;		_main
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           	psect	text36
 20077  005D28                     __ptext36:
 20078                           	opt stack 0
 20079  005D28                     _delay:
 20080                           	opt stack 23
 20081                           
 20082                           ;function.c: 19: while (x--) {
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;incstack = 0
 20086  005D28  D00A               	goto	l1477
 20087  005D2A                     l6555:
 20088                           
 20089                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 20090  005D2A  0E03               	movlw	3
 20091  005D2C  0100               	movlb	0	; () banked
 20092  005D2E  6F62               	movwf	??_delay& (0+255),b
 20093  005D30  0E97               	movlw	151
 20094  005D32                     u15397:
 20095  005D32  2EE8               	decfsz	wreg,f,c
 20096  005D34  D7FE               	bra	u15397
 20097  005D36  2F62               	decfsz	??_delay& (0+255),f,b
 20098  005D38  D7FC               	bra	u15397
 20099  005D3A  D000               	nop2	
 20100  005D3C  0004               	clrwdt		;# 
 20101  005D3E                     l1477:
 20102  005D3E  0100               	movlb	0	; () banked
 20103  005D40  0760               	decf	delay@x& (0+255),f,b
 20104  005D42  A0D8               	btfss	status,0,c
 20105  005D44  0761               	decf	(delay@x+1)& (0+255),f,b
 20106  005D46  2960               	incf	delay@x& (0+255),w,b
 20107  005D48  E1F0               	bnz	l6555
 20108  005D4A  2961               	incf	(delay@x+1)& (0+255),w,b
 20109  005D4C  B4D8               	btfsc	status,2,c
 20110  005D4E  0012               	return	
 20111  005D50  D7EC               	goto	l1478
 20112  005D52                     __end_of_delay:
 20113                           	opt stack 0
 20114                           tblptru	equ	0xFF8
 20115                           tblptrh	equ	0xFF7
 20116                           tblptrl	equ	0xFF6
 20117                           tablat	equ	0xFF5
 20118                           prodh	equ	0xFF4
 20119                           prodl	equ	0xFF3
 20120                           intcon	equ	0xFF2
 20121                           intcon2	equ	0xFF1
 20122                           intcon3	equ	0xFF0
 20123                           indf0	equ	0xFEF
 20124                           postinc0	equ	0xFEE
 20125                           fsr0h	equ	0xFEA
 20126                           fsr0l	equ	0xFE9
 20127                           wreg	equ	0xFE8
 20128                           postdec1	equ	0xFE5
 20129                           fsr1l	equ	0xFE1
 20130                           indf2	equ	0xFDF
 20131                           postinc2	equ	0xFDE
 20132                           postdec2	equ	0xFDD
 20133                           fsr2h	equ	0xFDA
 20134                           fsr2l	equ	0xFD9
 20135                           status	equ	0xFD8
 20136                           
 20137 ;; *************** function _filtroStr *****************
 20138 ;; Defined at:
 20139 ;;		line 44 in file "src/conexaoWifi.h"
 20140 ;; Parameters:    Size  Location     Type
 20141 ;;  inicio          2   49[BANK0 ] PTR unsigned char 
 20142 ;;		 -> STR_39(7), STR_37(6), 
 20143 ;;  fim             2   51[BANK0 ] PTR unsigned char 
 20144 ;;		 -> STR_40(2), STR_38(2), 
 20145 ;;  str             2   53[BANK0 ] PTR unsigned char 
 20146 ;;		 -> bufferSerial(80), 
 20147 ;;  strdest         2   55[BANK0 ] PTR unsigned char 
 20148 ;;		 -> senha(15), ssid(15), 
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  _str           82    0[BANK1 ] unsigned char [82]
 20151 ;;  aux            60   82[BANK1 ] unsigned char [60]
 20152 ;;  p               2  147[BANK1 ] PTR unsigned char 
 20153 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20154 ;;		 -> bufferSerial(80), 
 20155 ;;  i               1  149[BANK1 ] unsigned char 
 20156 ;;  x               1  146[BANK1 ] unsigned char 
 20157 ;;  count           1  145[BANK1 ] unsigned char 
 20158 ;;  y               1  144[BANK1 ] unsigned char 
 20159 ;; Return value:  Size  Location     Type
 20160 ;;                  1    wreg      void 
 20161 ;; Registers used:
 20162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20163 ;; Tracked objects:
 20164 ;;		On entry : 0/0
 20165 ;;		On exit  : 0/0
 20166 ;;		Unchanged: 0/0
 20167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20168 ;;      Params:         0       8       0       0       0       0       0       0       0
 20169 ;;      Locals:         0       0     150       0       0       0       0       0       0
 20170 ;;      Temps:          0       5       0       0       0       0       0       0       0
 20171 ;;      Totals:         0      13     150       0       0       0       0       0       0
 20172 ;;Total ram usage:      163 bytes
 20173 ;; Hardware stack levels used:    1
 20174 ;; Hardware stack levels required when called:    9
 20175 ;; This function calls:
 20176 ;;		_sprintf
 20177 ;;		_strcpy
 20178 ;;		_strlen
 20179 ;;		_strncpy
 20180 ;;		_strstr
 20181 ;;		_strtok
 20182 ;; This function is called by:
 20183 ;;		_alterarConfigWifi
 20184 ;; This function uses a non-reentrant model
 20185 ;;
 20186                           
 20187                           	psect	text37
 20188  0044E8                     __ptext37:
 20189                           	opt stack 0
 20190  0044E8                     _filtroStr:
 20191                           	opt stack 20
 20192                           
 20193                           ;conexaoWifi.h: 45: char i = 0;
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;incstack = 0
 20197  0044E8  0E00               	movlw	0
 20198  0044EA  0101               	movlb	1	; () banked
 20199  0044EC  6F95               	movwf	filtroStr@i& (0+255),b
 20200                           
 20201                           ;conexaoWifi.h: 46: char x = 0;
 20202  0044EE  0E00               	movlw	0
 20203  0044F0  6F92               	movwf	filtroStr@x& (0+255),b
 20204                           
 20205                           ;conexaoWifi.h: 47: char y = 0;
 20206  0044F2  0E00               	movlw	0
 20207  0044F4  6F90               	movwf	filtroStr@y& (0+255),b
 20208                           
 20209                           ;conexaoWifi.h: 48: char count = 0;
 20210  0044F6  0E00               	movlw	0
 20211  0044F8  6F91               	movwf	filtroStr@count& (0+255),b
 20212                           
 20213                           ; BSR set to: 1
 20214                           ;conexaoWifi.h: 49: char *p;
 20215                           ;conexaoWifi.h: 50: char _str[82];
 20216                           ;conexaoWifi.h: 51: char aux[60];
 20217                           ;conexaoWifi.h: 53: strncpy(_str, str, 80);
 20218  0044FA  0E00               	movlw	low filtroStr@_str
 20219  0044FC  0100               	movlb	0	; () banked
 20220  0044FE  6F60               	movwf	strncpy@to& (0+255),b
 20221  004500  0E01               	movlw	high filtroStr@_str
 20222  004502  6F61               	movwf	(strncpy@to+1)& (0+255),b
 20223  004504  C095  F062         	movff	filtroStr@str,strncpy@from
 20224  004508  C096  F063         	movff	filtroStr@str+1,strncpy@from+1
 20225  00450C  0E00               	movlw	0
 20226  00450E  6F65               	movwf	(strncpy@size+1)& (0+255),b
 20227  004510  0E50               	movlw	80
 20228  004512  6F64               	movwf	strncpy@size& (0+255),b
 20229  004514  EC3D  F02C         	call	_strncpy	;wreg free
 20230                           
 20231                           ;conexaoWifi.h: 54: p = strstr(_str, inicio);
 20232  004518  0E00               	movlw	low filtroStr@_str
 20233  00451A  0100               	movlb	0	; () banked
 20234  00451C  6F6F               	movwf	strstr@s1& (0+255),b
 20235  00451E  0E01               	movlw	high filtroStr@_str
 20236  004520  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20237  004522  C091  F071         	movff	filtroStr@inicio,strstr@s2
 20238  004526  C092  F072         	movff	filtroStr@inicio+1,strstr@s2+1
 20239  00452A  EC7F  F028         	call	_strstr	;wreg free
 20240  00452E  C06F  F193         	movff	?_strstr,filtroStr@p
 20241  004532  C070  F194         	movff	?_strstr+1,filtroStr@p+1
 20242                           
 20243                           ;conexaoWifi.h: 55: strcpy(p, strtok(p, fim));
 20244  004536  C193  F071         	movff	filtroStr@p,strcpy@to
 20245  00453A  C194  F072         	movff	filtroStr@p+1,strcpy@to+1
 20246  00453E  C193  F06D         	movff	filtroStr@p,strtok@s1
 20247  004542  C194  F06E         	movff	filtroStr@p+1,strtok@s1+1
 20248  004546  C093  F06F         	movff	filtroStr@fim,strtok@s2
 20249  00454A  C094  F070         	movff	filtroStr@fim+1,strtok@s2+1
 20250  00454E  EC4D  F024         	call	_strtok	;wreg free
 20251  004552  C06D  F073         	movff	?_strtok,strcpy@from
 20252  004556  C06E  F074         	movff	?_strtok+1,strcpy@from+1
 20253  00455A  EC0A  F02C         	call	_strcpy	;wreg free
 20254                           
 20255                           ;conexaoWifi.h: 56: sprintf(aux, "%s", p);
 20256  00455E  0E52               	movlw	low filtroStr@aux
 20257  004560  0100               	movlb	0	; () banked
 20258  004562  6F81               	movwf	sprintf@wh& (0+255),b
 20259  004564  0E01               	movlw	high filtroStr@aux
 20260  004566  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20261  004568  0E25               	movlw	low (STR_82+7)
 20262  00456A  6F83               	movwf	sprintf@f& (0+255),b
 20263  00456C  0E7F               	movlw	high (STR_82+7)
 20264  00456E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20265  004570  C193  F085         	movff	filtroStr@p,?_sprintf+4
 20266  004574  C194  F086         	movff	filtroStr@p+1,?_sprintf+5
 20267  004578  EC10  F02D         	call	_sprintf	;wreg free
 20268                           
 20269                           ;conexaoWifi.h: 58: x = strlen(inicio);
 20270  00457C  C091  F060         	movff	filtroStr@inicio,strlen@s
 20271  004580  C092  F061         	movff	filtroStr@inicio+1,strlen@s+1
 20272  004584  EC6E  F02C         	call	_strlen	;wreg free
 20273  004588  0100               	movlb	0	; () banked
 20274  00458A  5160               	movf	?_strlen& (0+255),w,b
 20275  00458C  0101               	movlb	1	; () banked
 20276  00458E  6F92               	movwf	filtroStr@x& (0+255),b
 20277                           
 20278                           ; BSR set to: 1
 20279                           ;conexaoWifi.h: 59: y = strlen(aux);
 20280  004590  0E52               	movlw	low filtroStr@aux
 20281  004592  0100               	movlb	0	; () banked
 20282  004594  6F60               	movwf	strlen@s& (0+255),b
 20283  004596  0E01               	movlw	high filtroStr@aux
 20284  004598  6F61               	movwf	(strlen@s+1)& (0+255),b
 20285  00459A  EC6E  F02C         	call	_strlen	;wreg free
 20286  00459E  0100               	movlb	0	; () banked
 20287  0045A0  5160               	movf	?_strlen& (0+255),w,b
 20288  0045A2  0101               	movlb	1	; () banked
 20289  0045A4  6F90               	movwf	filtroStr@y& (0+255),b
 20290                           
 20291                           ; BSR set to: 1
 20292                           ;conexaoWifi.h: 61: for (i = x; i < (x + y); i++) {
 20293  0045A6  C192  F195         	movff	filtroStr@x,filtroStr@i
 20294  0045AA  D02F               	goto	l976
 20295  0045AC                     
 20296                           ;conexaoWifi.h: 62: strdest[count++] = (char) (aux[i] == '+') ? ' ' : aux[i];
 20297                           
 20298                           ; BSR set to: 1
 20299  0045AC  0101               	movlb	1	; () banked
 20300  0045AE  5195               	movf	filtroStr@i& (0+255),w,b
 20301  0045B0  0D01               	mullw	1
 20302  0045B2  0E52               	movlw	low filtroStr@aux
 20303  0045B4  24F3               	addwf	prodl,w,c
 20304  0045B6  6ED9               	movwf	fsr2l,c
 20305  0045B8  0E01               	movlw	high filtroStr@aux
 20306  0045BA  20F4               	addwfc	prodh,w,c
 20307  0045BC  6EDA               	movwf	fsr2h,c
 20308  0045BE  0E2B               	movlw	43
 20309  0045C0  18DE               	xorwf	postinc2,w,c
 20310  0045C2  B4D8               	btfsc	status,2,c
 20311  0045C4  D010               	goto	l979
 20312                           
 20313                           ; BSR set to: 1
 20314  0045C6  5195               	movf	filtroStr@i& (0+255),w,b
 20315  0045C8  0D01               	mullw	1
 20316  0045CA  0E52               	movlw	low filtroStr@aux
 20317  0045CC  24F3               	addwf	prodl,w,c
 20318  0045CE  6ED9               	movwf	fsr2l,c
 20319  0045D0  0E01               	movlw	high filtroStr@aux
 20320  0045D2  20F4               	addwfc	prodh,w,c
 20321  0045D4  6EDA               	movwf	fsr2h,c
 20322  0045D6  50DF               	movf	indf2,w,c
 20323  0045D8  0100               	movlb	0	; () banked
 20324  0045DA  6F99               	movwf	??_filtroStr& (0+255),b
 20325  0045DC  5199               	movf	??_filtroStr& (0+255),w,b
 20326  0045DE  0101               	movlb	1	; () banked
 20327  0045E0  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20328  0045E2  6B8F               	clrf	(_filtroStr$1335+1)& (0+255),b
 20329  0045E4  D004               	goto	l981
 20330  0045E6                     l979:
 20331                           
 20332                           ; BSR set to: 1
 20333                           
 20334                           ; BSR set to: 1
 20335  0045E6  0E00               	movlw	0
 20336  0045E8  6F8F               	movwf	(_filtroStr$1335+1)& (0+255),b
 20337  0045EA  0E20               	movlw	32
 20338  0045EC  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20339  0045EE                     l981:
 20340                           
 20341                           ; BSR set to: 1
 20342                           
 20343                           ; BSR set to: 1
 20344  0045EE  5191               	movf	filtroStr@count& (0+255),w,b
 20345  0045F0  0D01               	mullw	1
 20346  0045F2  50F3               	movf	prodl,w,c
 20347  0045F4  0100               	movlb	0	; () banked
 20348  0045F6  2597               	addwf	filtroStr@strdest& (0+255),w,b
 20349  0045F8  6ED9               	movwf	fsr2l,c
 20350  0045FA  50F4               	movf	prodh,w,c
 20351  0045FC  2198               	addwfc	(filtroStr@strdest+1)& (0+255),w,b
 20352  0045FE  6EDA               	movwf	fsr2h,c
 20353  004600  C18E  FFDF         	movff	_filtroStr$1335,indf2
 20354                           
 20355                           ; BSR set to: 0
 20356  004604  0101               	movlb	1	; () banked
 20357  004606  2B91               	incf	filtroStr@count& (0+255),f,b
 20358                           
 20359                           ; BSR set to: 1
 20360  004608  2B95               	incf	filtroStr@i& (0+255),f,b
 20361  00460A                     l976:
 20362                           
 20363                           ; BSR set to: 1
 20364                           
 20365                           ; BSR set to: 1
 20366  00460A  5190               	movf	filtroStr@y& (0+255),w,b
 20367  00460C  C192  F099         	movff	filtroStr@x,??_filtroStr
 20368  004610  0100               	movlb	0	; () banked
 20369  004612  6B9A               	clrf	(??_filtroStr+1)& (0+255),b
 20370  004614  2799               	addwf	??_filtroStr& (0+255),f,b
 20371  004616  0E00               	movlw	0
 20372  004618  239A               	addwfc	(??_filtroStr+1)& (0+255),f,b
 20373  00461A  0101               	movlb	1	; () banked
 20374  00461C  5195               	movf	filtroStr@i& (0+255),w,b
 20375  00461E  0100               	movlb	0	; () banked
 20376  004620  6F9B               	movwf	(??_filtroStr+2)& (0+255),b
 20377  004622  6B9C               	clrf	(??_filtroStr+3)& (0+255),b
 20378  004624  5199               	movf	??_filtroStr& (0+255),w,b
 20379  004626  5D9B               	subwf	(??_filtroStr+2)& (0+255),w,b
 20380  004628  519C               	movf	(??_filtroStr+3)& (0+255),w,b
 20381  00462A  0A80               	xorlw	128
 20382  00462C  6F9D               	movwf	(??_filtroStr+4)& (0+255),b
 20383  00462E  519A               	movf	(??_filtroStr+1)& (0+255),w,b
 20384  004630  0A80               	xorlw	128
 20385  004632  599D               	subwfb	(??_filtroStr+4)& (0+255),w,b
 20386  004634  A0D8               	btfss	status,0,c
 20387  004636  D7BA               	goto	l977
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;conexaoWifi.h: 63: }
 20391                           ;conexaoWifi.h: 64: sprintf(strdest, "%s", strdest);
 20392                           
 20393                           ; BSR set to: 0
 20394  004638  C097  F081         	movff	filtroStr@strdest,sprintf@wh
 20395  00463C  C098  F082         	movff	filtroStr@strdest+1,sprintf@wh+1
 20396  004640  0E25               	movlw	low (STR_82+7)
 20397  004642  6F83               	movwf	sprintf@f& (0+255),b
 20398  004644  0E7F               	movlw	high (STR_82+7)
 20399  004646  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20400  004648  C097  F085         	movff	filtroStr@strdest,?_sprintf+4
 20401  00464C  C098  F086         	movff	filtroStr@strdest+1,?_sprintf+5
 20402  004650  EC10  F02D         	call	_sprintf	;wreg free
 20403  004654  0012               	return		;funcret
 20404  004656                     __end_of_filtroStr:
 20405                           	opt stack 0
 20406                           tblptru	equ	0xFF8
 20407                           tblptrh	equ	0xFF7
 20408                           tblptrl	equ	0xFF6
 20409                           tablat	equ	0xFF5
 20410                           prodh	equ	0xFF4
 20411                           prodl	equ	0xFF3
 20412                           intcon	equ	0xFF2
 20413                           intcon2	equ	0xFF1
 20414                           intcon3	equ	0xFF0
 20415                           indf0	equ	0xFEF
 20416                           postinc0	equ	0xFEE
 20417                           fsr0h	equ	0xFEA
 20418                           fsr0l	equ	0xFE9
 20419                           wreg	equ	0xFE8
 20420                           postdec1	equ	0xFE5
 20421                           fsr1l	equ	0xFE1
 20422                           indf2	equ	0xFDF
 20423                           postinc2	equ	0xFDE
 20424                           postdec2	equ	0xFDD
 20425                           fsr2h	equ	0xFDA
 20426                           fsr2l	equ	0xFD9
 20427                           status	equ	0xFD8
 20428                           
 20429 ;; *************** function _strtok *****************
 20430 ;; Defined at:
 20431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strtok.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;  s1              2   13[BANK0 ] PTR unsigned char 
 20434 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20435 ;;		 -> bufferSerial(80), 
 20436 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
 20437 ;;		 -> STR_40(2), STR_38(2), 
 20438 ;; Auto vars:     Size  Location     Type
 20439 ;;		None
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  2   13[BANK0 ] PTR unsigned char 
 20442 ;; Registers used:
 20443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20449 ;;      Params:         0       4       0       0       0       0       0       0       0
 20450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20452 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20453 ;;Total ram usage:        4 bytes
 20454 ;; Hardware stack levels used:    1
 20455 ;; Hardware stack levels required when called:    8
 20456 ;; This function calls:
 20457 ;;		_strcspn
 20458 ;;		_strspn
 20459 ;; This function is called by:
 20460 ;;		_filtroStr
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           	psect	text38
 20465  00489A                     __ptext38:
 20466                           	opt stack 0
 20467  00489A                     _strtok:
 20468                           	opt stack 20
 20469                           
 20470                           ;incstack = 0
 20471  00489A  0100               	movlb	0	; () banked
 20472  00489C  516D               	movf	strtok@s1& (0+255),w,b
 20473  00489E  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20474  0048A0  A4D8               	btfss	status,2,c
 20475  0048A2  D004               	goto	l2212
 20476                           
 20477                           ; BSR set to: 0
 20478  0048A4  C031  F06D         	movff	strtok@sp,strtok@s1
 20479  0048A8  C032  F06E         	movff	strtok@sp+1,strtok@s1+1
 20480  0048AC                     l2212:
 20481                           
 20482                           ; BSR set to: 0
 20483  0048AC  516D               	movf	strtok@s1& (0+255),w,b
 20484  0048AE  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20485  0048B0  A4D8               	btfss	status,2,c
 20486  0048B2  D005               	goto	l2213
 20487                           
 20488                           ; BSR set to: 0
 20489  0048B4  0E00               	movlw	0
 20490  0048B6  6F6D               	movwf	?_strtok& (0+255),b
 20491  0048B8  0E00               	movlw	0
 20492  0048BA  6F6E               	movwf	(?_strtok+1)& (0+255),b
 20493                           
 20494                           ; BSR set to: 0
 20495  0048BC  0012               	return	
 20496  0048BE                     l2213:
 20497                           
 20498                           ; BSR set to: 0
 20499                           
 20500                           ; BSR set to: 0
 20501  0048BE  C06D  F066         	movff	strtok@s1,strspn@s1
 20502  0048C2  C06E  F067         	movff	strtok@s1+1,strspn@s1+1
 20503  0048C6  C06F  F068         	movff	strtok@s2,strspn@s2
 20504  0048CA  C070  F069         	movff	strtok@s2+1,strspn@s2+1
 20505  0048CE  EC92  F02A         	call	_strspn	;wreg free
 20506  0048D2  0100               	movlb	0	; () banked
 20507  0048D4  5166               	movf	?_strspn& (0+255),w,b
 20508  0048D6  276D               	addwf	strtok@s1& (0+255),f,b
 20509  0048D8  5167               	movf	(?_strspn+1)& (0+255),w,b
 20510  0048DA  236E               	addwfc	(strtok@s1+1)& (0+255),f,b
 20511                           
 20512                           ; BSR set to: 0
 20513  0048DC  C06D  FFF6         	movff	strtok@s1,tblptrl
 20514  0048E0  C06E  FFF7         	movff	strtok@s1+1,tblptrh
 20515  0048E4  6AF8               	clrf	tblptru,c
 20516  0048E6  0E07               	movlw	(high __ramtop+-1)
 20517  0048E8  64F7               	cpfsgt	tblptrh,c
 20518  0048EA  D003               	bra	u8557
 20519  0048EC  0008               	tblrd		*
 20520  0048EE  50F5               	movf	tablat,w,c
 20521  0048F0  D005               	bra	u8550
 20522  0048F2                     u8557:
 20523  0048F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20524  0048F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20525  0048FA  50EF               	movf	indf0,w,c
 20526  0048FC                     u8550:
 20527  0048FC  0900               	iorlw	0
 20528  0048FE  A4D8               	btfss	status,2,c
 20529  004900  D009               	goto	l2215
 20530  004902  0E00               	movlw	0
 20531  004904  6E31               	movwf	strtok@sp,c
 20532  004906  0E00               	movlw	0
 20533  004908  6E32               	movwf	strtok@sp+1,c
 20534  00490A  C031  F06D         	movff	strtok@sp,?_strtok
 20535  00490E  C032  F06E         	movff	strtok@sp+1,?_strtok+1
 20536  004912  0012               	return	
 20537  004914                     l2215:
 20538  004914  C06D  F066         	movff	strtok@s1,strcspn@s1
 20539  004918  C06E  F067         	movff	strtok@s1+1,strcspn@s1+1
 20540  00491C  C06F  F068         	movff	strtok@s2,strcspn@s2
 20541  004920  C070  F069         	movff	strtok@s2+1,strcspn@s2+1
 20542  004924  ECD4  F02A         	call	_strcspn	;wreg free
 20543  004928  0100               	movlb	0	; () banked
 20544  00492A  5166               	movf	?_strcspn& (0+255),w,b
 20545  00492C  256D               	addwf	strtok@s1& (0+255),w,b
 20546  00492E  6E31               	movwf	strtok@sp,c
 20547  004930  5167               	movf	(?_strcspn+1)& (0+255),w,b
 20548  004932  216E               	addwfc	(strtok@s1+1)& (0+255),w,b
 20549  004934  6E32               	movwf	strtok@sp+1,c
 20550                           
 20551                           ; BSR set to: 0
 20552  004936  C031  FFF6         	movff	strtok@sp,tblptrl
 20553  00493A  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20554  00493E  6AF8               	clrf	tblptru,c
 20555  004940  0E07               	movlw	(high __ramtop+-1)
 20556  004942  64F7               	cpfsgt	tblptrh,c
 20557  004944  D003               	bra	u8577
 20558  004946  0008               	tblrd		*
 20559  004948  50F5               	movf	tablat,w,c
 20560  00494A  D005               	bra	u8570
 20561  00494C                     u8577:
 20562  00494C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20563  004950  CFF7 FFEA          	movff	tblptrh,fsr0h
 20564  004954  50EF               	movf	indf0,w,c
 20565  004956                     u8570:
 20566  004956  0900               	iorlw	0
 20567  004958  B4D8               	btfsc	status,2,c
 20568  00495A  D015               	goto	l2216
 20569  00495C  C031  FFF6         	movff	strtok@sp,tblptrl
 20570  004960  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20571  004964  6AF8               	clrf	tblptru,c
 20572  004966  0E07               	movlw	(high __ramtop+-1)
 20573  004968  64F7               	cpfsgt	tblptrh,c
 20574  00496A  D004               	bra	u8597
 20575  00496C  0E00               	movlw	0
 20576  00496E  6EF5               	movwf	tablat,c
 20577  004970  000C               	tblwt		*
 20578  004972  D006               	bra	u8590
 20579  004974                     u8597:
 20580  004974  CFF6 FFE9          	movff	tblptrl,fsr0l
 20581  004978  CFF7 FFEA          	movff	tblptrh,fsr0h
 20582  00497C  0E00               	movlw	0
 20583  00497E  6EEF               	movwf	indf0,c
 20584  004980                     u8590:
 20585  004980  4A31               	infsnz	strtok@sp,f,c
 20586  004982  2A32               	incf	strtok@sp+1,f,c
 20587  004984  D004               	goto	l2217
 20588  004986                     l2216:
 20589  004986  0E00               	movlw	0
 20590  004988  6E31               	movwf	strtok@sp,c
 20591  00498A  0E00               	movlw	0
 20592  00498C  6E32               	movwf	strtok@sp+1,c
 20593  00498E                     l2217:
 20594  00498E  C06D  F06D         	movff	strtok@s1,?_strtok
 20595  004992  C06E  F06E         	movff	strtok@s1+1,?_strtok+1
 20596  004996  0012               	return	
 20597  004998                     __end_of_strtok:
 20598                           	opt stack 0
 20599                           tblptru	equ	0xFF8
 20600                           tblptrh	equ	0xFF7
 20601                           tblptrl	equ	0xFF6
 20602                           tablat	equ	0xFF5
 20603                           prodh	equ	0xFF4
 20604                           prodl	equ	0xFF3
 20605                           intcon	equ	0xFF2
 20606                           intcon2	equ	0xFF1
 20607                           intcon3	equ	0xFF0
 20608                           indf0	equ	0xFEF
 20609                           postinc0	equ	0xFEE
 20610                           fsr0h	equ	0xFEA
 20611                           fsr0l	equ	0xFE9
 20612                           wreg	equ	0xFE8
 20613                           postdec1	equ	0xFE5
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           fsr2h	equ	0xFDA
 20619                           fsr2l	equ	0xFD9
 20620                           status	equ	0xFD8
 20621                           
 20622 ;; *************** function _strspn *****************
 20623 ;; Defined at:
 20624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strspn.c"
 20625 ;; Parameters:    Size  Location     Type
 20626 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20627 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20628 ;;		 -> bufferSerial(80), 
 20629 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20630 ;;		 -> STR_40(2), STR_38(2), 
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;  i               2   11[BANK0 ] unsigned int 
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  2    6[BANK0 ] unsigned int 
 20635 ;; Registers used:
 20636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20637 ;; Tracked objects:
 20638 ;;		On entry : 0/0
 20639 ;;		On exit  : 0/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20642 ;;      Params:         0       4       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20644 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20645 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        7 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:    7
 20649 ;; This function calls:
 20650 ;;		_strchr
 20651 ;; This function is called by:
 20652 ;;		_strtok
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           	psect	text39
 20657  005524                     __ptext39:
 20658                           	opt stack 0
 20659  005524                     _strspn:
 20660                           	opt stack 20
 20661                           
 20662                           ;incstack = 0
 20663  005524  0E00               	movlw	0
 20664  005526  0100               	movlb	0	; () banked
 20665  005528  6F6C               	movwf	(strspn@i+1)& (0+255),b
 20666  00552A  0E00               	movlw	0
 20667  00552C  6F6B               	movwf	strspn@i& (0+255),b
 20668  00552E  D004               	goto	l2266
 20669  005530                     
 20670                           ; BSR set to: 0
 20671                           
 20672                           ; BSR set to: 0
 20673  005530  4B66               	infsnz	strspn@s1& (0+255),f,b
 20674  005532  2B67               	incf	(strspn@s1+1)& (0+255),f,b
 20675  005534  4B6B               	infsnz	strspn@i& (0+255),f,b
 20676  005536  2B6C               	incf	(strspn@i+1)& (0+255),f,b
 20677  005538                     l2266:
 20678                           
 20679                           ; BSR set to: 0
 20680                           
 20681                           ; BSR set to: 0
 20682  005538  C066  FFF6         	movff	strspn@s1,tblptrl
 20683  00553C  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20684  005540  6AF8               	clrf	tblptru,c
 20685  005542  0E07               	movlw	(high __ramtop+-1)
 20686  005544  64F7               	cpfsgt	tblptrh,c
 20687  005546  D003               	bra	u8327
 20688  005548  0008               	tblrd		*
 20689  00554A  50F5               	movf	tablat,w,c
 20690  00554C  D005               	bra	u8320
 20691  00554E                     u8327:
 20692  00554E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20693  005552  CFF7 FFEA          	movff	tblptrh,fsr0h
 20694  005556  50EF               	movf	indf0,w,c
 20695  005558                     u8320:
 20696  005558  0900               	iorlw	0
 20697  00555A  B4D8               	btfsc	status,2,c
 20698  00555C  D020               	goto	u8350
 20699  00555E  C068  F060         	movff	strspn@s2,strchr@ptr
 20700  005562  C069  F061         	movff	strspn@s2+1,strchr@ptr+1
 20701  005566  C066  FFF6         	movff	strspn@s1,tblptrl
 20702  00556A  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20703  00556E  6AF8               	clrf	tblptru,c
 20704  005570  0E07               	movlw	(high __ramtop+-1)
 20705  005572  64F7               	cpfsgt	tblptrh,c
 20706  005574  D003               	bra	u8347
 20707  005576  0008               	tblrd		*
 20708  005578  50F5               	movf	tablat,w,c
 20709  00557A  D005               	bra	u8340
 20710  00557C                     u8347:
 20711  00557C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20712  005580  CFF7 FFEA          	movff	tblptrh,fsr0h
 20713  005584  50EF               	movf	indf0,w,c
 20714  005586                     u8340:
 20715  005586  0100               	movlb	0	; () banked
 20716  005588  6F6A               	movwf	??_strspn& (0+255),b
 20717  00558A  516A               	movf	??_strspn& (0+255),w,b
 20718  00558C  6F62               	movwf	strchr@chr& (0+255),b
 20719  00558E  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20720  005590  EC9A  F02B         	call	_strchr	;wreg free
 20721  005594  0100               	movlb	0	; () banked
 20722  005596  5160               	movf	?_strchr& (0+255),w,b
 20723  005598  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20724  00559A  A4D8               	btfss	status,2,c
 20725  00559C  D7C9               	goto	l2267
 20726  00559E                     u8350:
 20727                           
 20728                           ; BSR set to: 0
 20729  00559E  C06B  F066         	movff	strspn@i,?_strspn
 20730  0055A2  C06C  F067         	movff	strspn@i+1,?_strspn+1
 20731  0055A6  0012               	return		;funcret
 20732  0055A8                     __end_of_strspn:
 20733                           	opt stack 0
 20734                           tblptru	equ	0xFF8
 20735                           tblptrh	equ	0xFF7
 20736                           tblptrl	equ	0xFF6
 20737                           tablat	equ	0xFF5
 20738                           prodh	equ	0xFF4
 20739                           prodl	equ	0xFF3
 20740                           intcon	equ	0xFF2
 20741                           intcon2	equ	0xFF1
 20742                           intcon3	equ	0xFF0
 20743                           indf0	equ	0xFEF
 20744                           postinc0	equ	0xFEE
 20745                           fsr0h	equ	0xFEA
 20746                           fsr0l	equ	0xFE9
 20747                           wreg	equ	0xFE8
 20748                           postdec1	equ	0xFE5
 20749                           fsr1l	equ	0xFE1
 20750                           indf2	equ	0xFDF
 20751                           postinc2	equ	0xFDE
 20752                           postdec2	equ	0xFDD
 20753                           fsr2h	equ	0xFDA
 20754                           fsr2l	equ	0xFD9
 20755                           status	equ	0xFD8
 20756                           
 20757 ;; *************** function _strcspn *****************
 20758 ;; Defined at:
 20759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcspn.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20762 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20763 ;;		 -> bufferSerial(80), 
 20764 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20765 ;;		 -> STR_40(2), STR_38(2), 
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;  i               2   11[BANK0 ] unsigned int 
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  2    6[BANK0 ] unsigned int 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20777 ;;      Params:         0       4       0       0       0       0       0       0       0
 20778 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20779 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20780 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20781 ;;Total ram usage:        7 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:    7
 20784 ;; This function calls:
 20785 ;;		_strchr
 20786 ;; This function is called by:
 20787 ;;		_strtok
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text40
 20792  0055A8                     __ptext40:
 20793                           	opt stack 0
 20794  0055A8                     _strcspn:
 20795                           	opt stack 20
 20796                           
 20797                           ;incstack = 0
 20798  0055A8  0E00               	movlw	0
 20799  0055AA  0100               	movlb	0	; () banked
 20800  0055AC  6F6C               	movwf	(strcspn@i+1)& (0+255),b
 20801  0055AE  0E00               	movlw	0
 20802  0055B0  6F6B               	movwf	strcspn@i& (0+255),b
 20803  0055B2  D004               	goto	l2247
 20804  0055B4                     
 20805                           ; BSR set to: 0
 20806                           
 20807                           ; BSR set to: 0
 20808  0055B4  4B66               	infsnz	strcspn@s1& (0+255),f,b
 20809  0055B6  2B67               	incf	(strcspn@s1+1)& (0+255),f,b
 20810  0055B8  4B6B               	infsnz	strcspn@i& (0+255),f,b
 20811  0055BA  2B6C               	incf	(strcspn@i+1)& (0+255),f,b
 20812  0055BC                     l2247:
 20813                           
 20814                           ; BSR set to: 0
 20815                           
 20816                           ; BSR set to: 0
 20817  0055BC  C066  FFF6         	movff	strcspn@s1,tblptrl
 20818  0055C0  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20819  0055C4  6AF8               	clrf	tblptru,c
 20820  0055C6  0E07               	movlw	(high __ramtop+-1)
 20821  0055C8  64F7               	cpfsgt	tblptrh,c
 20822  0055CA  D003               	bra	u8367
 20823  0055CC  0008               	tblrd		*
 20824  0055CE  50F5               	movf	tablat,w,c
 20825  0055D0  D005               	bra	u8360
 20826  0055D2                     u8367:
 20827  0055D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20828  0055D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20829  0055DA  50EF               	movf	indf0,w,c
 20830  0055DC                     u8360:
 20831  0055DC  0900               	iorlw	0
 20832  0055DE  B4D8               	btfsc	status,2,c
 20833  0055E0  D020               	goto	u8390
 20834  0055E2  C068  F060         	movff	strcspn@s2,strchr@ptr
 20835  0055E6  C069  F061         	movff	strcspn@s2+1,strchr@ptr+1
 20836  0055EA  C066  FFF6         	movff	strcspn@s1,tblptrl
 20837  0055EE  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20838  0055F2  6AF8               	clrf	tblptru,c
 20839  0055F4  0E07               	movlw	(high __ramtop+-1)
 20840  0055F6  64F7               	cpfsgt	tblptrh,c
 20841  0055F8  D003               	bra	u8387
 20842  0055FA  0008               	tblrd		*
 20843  0055FC  50F5               	movf	tablat,w,c
 20844  0055FE  D005               	bra	u8380
 20845  005600                     u8387:
 20846  005600  CFF6 FFE9          	movff	tblptrl,fsr0l
 20847  005604  CFF7 FFEA          	movff	tblptrh,fsr0h
 20848  005608  50EF               	movf	indf0,w,c
 20849  00560A                     u8380:
 20850  00560A  0100               	movlb	0	; () banked
 20851  00560C  6F6A               	movwf	??_strcspn& (0+255),b
 20852  00560E  516A               	movf	??_strcspn& (0+255),w,b
 20853  005610  6F62               	movwf	strchr@chr& (0+255),b
 20854  005612  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20855  005614  EC9A  F02B         	call	_strchr	;wreg free
 20856  005618  0100               	movlb	0	; () banked
 20857  00561A  5160               	movf	?_strchr& (0+255),w,b
 20858  00561C  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20859  00561E  B4D8               	btfsc	status,2,c
 20860  005620  D7C9               	goto	l2248
 20861  005622                     u8390:
 20862                           
 20863                           ; BSR set to: 0
 20864  005622  C06B  F066         	movff	strcspn@i,?_strcspn
 20865  005626  C06C  F067         	movff	strcspn@i+1,?_strcspn+1
 20866  00562A  0012               	return		;funcret
 20867  00562C                     __end_of_strcspn:
 20868                           	opt stack 0
 20869                           tblptru	equ	0xFF8
 20870                           tblptrh	equ	0xFF7
 20871                           tblptrl	equ	0xFF6
 20872                           tablat	equ	0xFF5
 20873                           prodh	equ	0xFF4
 20874                           prodl	equ	0xFF3
 20875                           intcon	equ	0xFF2
 20876                           intcon2	equ	0xFF1
 20877                           intcon3	equ	0xFF0
 20878                           indf0	equ	0xFEF
 20879                           postinc0	equ	0xFEE
 20880                           fsr0h	equ	0xFEA
 20881                           fsr0l	equ	0xFE9
 20882                           wreg	equ	0xFE8
 20883                           postdec1	equ	0xFE5
 20884                           fsr1l	equ	0xFE1
 20885                           indf2	equ	0xFDF
 20886                           postinc2	equ	0xFDE
 20887                           postdec2	equ	0xFDD
 20888                           fsr2h	equ	0xFDA
 20889                           fsr2l	equ	0xFD9
 20890                           status	equ	0xFD8
 20891                           
 20892 ;; *************** function _strstr *****************
 20893 ;; Defined at:
 20894 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 20895 ;; Parameters:    Size  Location     Type
 20896 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 20897 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20898 ;;		 -> bufferSerial(80), 
 20899 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 20900 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 20901 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 20902 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 20903 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 20904 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 20905 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 20906 ;;		 -> STR_15(3), STR_13(3), 
 20907 ;; Auto vars:     Size  Location     Type
 20908 ;;		None
 20909 ;; Return value:  Size  Location     Type
 20910 ;;                  2   15[BANK0 ] PTR unsigned char 
 20911 ;; Registers used:
 20912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20913 ;; Tracked objects:
 20914 ;;		On entry : 0/0
 20915 ;;		On exit  : 0/0
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20918 ;;      Params:         0       4       0       0       0       0       0       0       0
 20919 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20921 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20922 ;;Total ram usage:        4 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; Hardware stack levels required when called:    7
 20925 ;; This function calls:
 20926 ;;		_strchr
 20927 ;;		_strlen
 20928 ;;		_strncmp
 20929 ;; This function is called by:
 20930 ;;		_filtroStr
 20931 ;;		_alterarConfigWifi
 20932 ;;		_enviaDadosWifi
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           	psect	text41
 20937  0050FE                     __ptext41:
 20938                           	opt stack 0
 20939  0050FE                     _strstr:
 20940                           	opt stack 22
 20941                           
 20942                           ;incstack = 0
 20943  0050FE  D032               	goto	l2197
 20944  005100  C06F  F066         	movff	strstr@s1,strncmp@s1
 20945  005104  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 20946  005108  C071  F068         	movff	strstr@s2,strncmp@s2
 20947  00510C  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 20948  005110  C071  F060         	movff	strstr@s2,strlen@s
 20949  005114  C072  F061         	movff	strstr@s2+1,strlen@s+1
 20950  005118  EC6E  F02C         	call	_strlen	;wreg free
 20951  00511C  C060  F06A         	movff	?_strlen,strncmp@len
 20952  005120  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 20953  005124  ECAC  F026         	call	_strncmp	;wreg free
 20954  005128  0100               	movlb	0	; () banked
 20955  00512A  5166               	movf	?_strncmp& (0+255),w,b
 20956  00512C  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 20957  00512E  A4D8               	btfss	status,2,c
 20958  005130  D005               	goto	l2199
 20959                           
 20960                           ; BSR set to: 0
 20961  005132  C06F  F06F         	movff	strstr@s1,?_strstr
 20962  005136  C070  F070         	movff	strstr@s1+1,?_strstr+1
 20963                           
 20964                           ; BSR set to: 0
 20965  00513A  0012               	return	
 20966  00513C                     l2199:
 20967                           
 20968                           ; BSR set to: 0
 20969                           
 20970                           ; BSR set to: 0
 20971  00513C  0E01               	movlw	1
 20972  00513E  256F               	addwf	strstr@s1& (0+255),w,b
 20973  005140  6F60               	movwf	strchr@ptr& (0+255),b
 20974  005142  0E00               	movlw	0
 20975  005144  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 20976  005146  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 20977  005148  C071  FFF6         	movff	strstr@s2,tblptrl
 20978  00514C  C072  FFF7         	movff	strstr@s2+1,tblptrh
 20979  005150                     	if	0	;tblptru may be non-zero
 20980  005150                     	endif
 20981  005150                     	if	0	;tblptru may be non-zero
 20982  005150                     	endif
 20983  005150  0008               	tblrd		*
 20984  005152  50F5               	movf	tablat,w,c
 20985  005154  6F62               	movwf	strchr@chr& (0+255),b
 20986  005156  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20987  005158  EC9A  F02B         	call	_strchr	;wreg free
 20988  00515C  C060  F06F         	movff	?_strchr,strstr@s1
 20989  005160  C061  F070         	movff	?_strchr+1,strstr@s1+1
 20990  005164                     l2197:
 20991  005164  0100               	movlb	0	; () banked
 20992  005166  516F               	movf	strstr@s1& (0+255),w,b
 20993  005168  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 20994  00516A  B4D8               	btfsc	status,2,c
 20995  00516C  D013               	goto	u8520
 20996                           
 20997                           ; BSR set to: 0
 20998  00516E  C06F  FFF6         	movff	strstr@s1,tblptrl
 20999  005172  C070  FFF7         	movff	strstr@s1+1,tblptrh
 21000  005176  6AF8               	clrf	tblptru,c
 21001  005178  0E07               	movlw	(high __ramtop+-1)
 21002  00517A  64F7               	cpfsgt	tblptrh,c
 21003  00517C  D003               	bra	u8517
 21004  00517E  0008               	tblrd		*
 21005  005180  50F5               	movf	tablat,w,c
 21006  005182  D005               	bra	u8510
 21007  005184                     u8517:
 21008  005184  CFF6 FFE9          	movff	tblptrl,fsr0l
 21009  005188  CFF7 FFEA          	movff	tblptrh,fsr0h
 21010  00518C  50EF               	movf	indf0,w,c
 21011  00518E                     u8510:
 21012  00518E  0900               	iorlw	0
 21013  005190  A4D8               	btfss	status,2,c
 21014  005192  D7B6               	goto	l2198
 21015  005194                     u8520:
 21016  005194  0E00               	movlw	0
 21017  005196  0100               	movlb	0	; () banked
 21018  005198  6F6F               	movwf	?_strstr& (0+255),b
 21019  00519A  0E00               	movlw	0
 21020  00519C  6F70               	movwf	(?_strstr+1)& (0+255),b
 21021  00519E  0012               	return	
 21022  0051A0                     __end_of_strstr:
 21023                           	opt stack 0
 21024                           tblptru	equ	0xFF8
 21025                           tblptrh	equ	0xFF7
 21026                           tblptrl	equ	0xFF6
 21027                           tablat	equ	0xFF5
 21028                           prodh	equ	0xFF4
 21029                           prodl	equ	0xFF3
 21030                           intcon	equ	0xFF2
 21031                           intcon2	equ	0xFF1
 21032                           intcon3	equ	0xFF0
 21033                           indf0	equ	0xFEF
 21034                           postinc0	equ	0xFEE
 21035                           fsr0h	equ	0xFEA
 21036                           fsr0l	equ	0xFE9
 21037                           wreg	equ	0xFE8
 21038                           postdec1	equ	0xFE5
 21039                           fsr1l	equ	0xFE1
 21040                           indf2	equ	0xFDF
 21041                           postinc2	equ	0xFDE
 21042                           postdec2	equ	0xFDD
 21043                           fsr2h	equ	0xFDA
 21044                           fsr2l	equ	0xFD9
 21045                           status	equ	0xFD8
 21046                           
 21047 ;; *************** function _strncmp *****************
 21048 ;; Defined at:
 21049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 21050 ;; Parameters:    Size  Location     Type
 21051 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21052 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21053 ;;		 -> bufferSerial(80), 
 21054 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21055 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21056 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 21057 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 21058 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 21059 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 21060 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 21061 ;;		 -> STR_15(3), STR_13(3), 
 21062 ;;  len             2   10[BANK0 ] unsigned int 
 21063 ;; Auto vars:     Size  Location     Type
 21064 ;;		None
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  2    6[BANK0 ] int 
 21067 ;; Registers used:
 21068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21069 ;; Tracked objects:
 21070 ;;		On entry : 0/0
 21071 ;;		On exit  : 0/0
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21074 ;;      Params:         0       6       0       0       0       0       0       0       0
 21075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21076 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21077 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21078 ;;Total ram usage:        9 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:    6
 21081 ;; This function calls:
 21082 ;;		Nothing
 21083 ;; This function is called by:
 21084 ;;		_strstr
 21085 ;; This function uses a non-reentrant model
 21086 ;;
 21087                           
 21088                           	psect	text42
 21089  004D58                     __ptext42:
 21090                           	opt stack 0
 21091  004D58                     _strncmp:
 21092                           	opt stack 22
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;incstack = 0
 21096  004D58  D059               	goto	l2255
 21097  004D5A                     l6443:
 21098  004D5A  C066  FFF6         	movff	strncmp@s1,tblptrl
 21099  004D5E  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21100  004D62  6AF8               	clrf	tblptru,c
 21101  004D64  0E07               	movlw	(high __ramtop+-1)
 21102  004D66  64F7               	cpfsgt	tblptrh,c
 21103  004D68  D003               	bra	u8277
 21104  004D6A  0008               	tblrd		*
 21105  004D6C  50F5               	movf	tablat,w,c
 21106  004D6E  D005               	bra	u8270
 21107  004D70                     u8277:
 21108  004D70  CFF6 FFE9          	movff	tblptrl,fsr0l
 21109  004D74  CFF7 FFEA          	movff	tblptrh,fsr0h
 21110  004D78  50EF               	movf	indf0,w,c
 21111  004D7A                     u8270:
 21112  004D7A  0900               	iorlw	0
 21113  004D7C  B4D8               	btfsc	status,2,c
 21114  004D7E  D01B               	goto	u8290
 21115  004D80  C068  FFF6         	movff	strncmp@s2,tblptrl
 21116  004D84  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21117  004D88                     	if	0	;tblptru may be non-zero
 21118  004D88                     	endif
 21119  004D88                     	if	0	;tblptru may be non-zero
 21120  004D88                     	endif
 21121  004D88  0008               	tblrd		*
 21122  004D8A  CFF5 F06C          	movff	tablat,??_strncmp
 21123  004D8E  C066  FFF6         	movff	strncmp@s1,tblptrl
 21124  004D92  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21125  004D96  6AF8               	clrf	tblptru,c
 21126  004D98  0100               	movlb	0	; () banked
 21127  004D9A  0E07               	movlw	(high __ramtop+-1)
 21128  004D9C  64F7               	cpfsgt	tblptrh,c
 21129  004D9E  D003               	bra	u8297
 21130  004DA0  0008               	tblrd		*
 21131  004DA2  50F5               	movf	tablat,w,c
 21132  004DA4  D005               	bra	u8295
 21133  004DA6                     u8297:
 21134  004DA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21135  004DAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21136  004DAE  50EF               	movf	indf0,w,c
 21137  004DB0                     u8295:
 21138  004DB0  196C               	xorwf	??_strncmp& (0+255),w,b
 21139  004DB2  B4D8               	btfsc	status,2,c
 21140  004DB4  D026               	goto	l2257
 21141  004DB6                     u8290:
 21142  004DB6  C068  FFF6         	movff	strncmp@s2,tblptrl
 21143  004DBA  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21144  004DBE                     	if	0	;tblptru may be non-zero
 21145  004DBE                     	endif
 21146  004DBE                     	if	0	;tblptru may be non-zero
 21147  004DBE                     	endif
 21148  004DBE  0008               	tblrd		*
 21149  004DC0  50F5               	movf	tablat,w,c
 21150  004DC2  0100               	movlb	0	; () banked
 21151  004DC4  6F6C               	movwf	??_strncmp& (0+255),b
 21152  004DC6  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21153  004DC8  1F6C               	comf	??_strncmp& (0+255),f,b
 21154  004DCA  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21155  004DCC  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21156  004DCE  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21157  004DD0  C066  FFF6         	movff	strncmp@s1,tblptrl
 21158  004DD4  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21159  004DD8  6AF8               	clrf	tblptru,c
 21160  004DDA  0E07               	movlw	(high __ramtop+-1)
 21161  004DDC  64F7               	cpfsgt	tblptrh,c
 21162  004DDE  D003               	bra	u8307
 21163  004DE0  0008               	tblrd		*
 21164  004DE2  50F5               	movf	tablat,w,c
 21165  004DE4  D005               	bra	u8300
 21166  004DE6                     u8307:
 21167  004DE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21168  004DEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21169  004DEE  50EF               	movf	indf0,w,c
 21170  004DF0                     u8300:
 21171  004DF0  0100               	movlb	0	; () banked
 21172  004DF2  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21173  004DF4  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21174  004DF6  256C               	addwf	??_strncmp& (0+255),w,b
 21175  004DF8  6F66               	movwf	?_strncmp& (0+255),b
 21176  004DFA  0E00               	movlw	0
 21177  004DFC  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21178  004DFE  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21179                           
 21180                           ; BSR set to: 0
 21181  004E00  0012               	return	
 21182  004E02                     l2257:
 21183                           
 21184                           ; BSR set to: 0
 21185  004E02  0100               	movlb	0	; () banked
 21186  004E04  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21187  004E06  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21188  004E08  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21189  004E0A  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21190  004E0C                     l2255:
 21191                           
 21192                           ; BSR set to: 0
 21193  004E0C  0100               	movlb	0	; () banked
 21194  004E0E  076A               	decf	strncmp@len& (0+255),f,b
 21195  004E10  A0D8               	btfss	status,0,c
 21196  004E12  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21197  004E14  296A               	incf	strncmp@len& (0+255),w,b
 21198  004E16  E1A1               	bnz	l6443
 21199  004E18  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21200  004E1A  A4D8               	btfss	status,2,c
 21201  004E1C  D79E               	goto	l2256
 21202                           
 21203                           ; BSR set to: 0
 21204                           
 21205                           ; BSR set to: 0
 21206  004E1E  0E00               	movlw	0
 21207  004E20  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21208  004E22  0E00               	movlw	0
 21209  004E24  6F66               	movwf	?_strncmp& (0+255),b
 21210  004E26  0012               	return	
 21211  004E28                     __end_of_strncmp:
 21212                           	opt stack 0
 21213                           tblptru	equ	0xFF8
 21214                           tblptrh	equ	0xFF7
 21215                           tblptrl	equ	0xFF6
 21216                           tablat	equ	0xFF5
 21217                           prodh	equ	0xFF4
 21218                           prodl	equ	0xFF3
 21219                           intcon	equ	0xFF2
 21220                           intcon2	equ	0xFF1
 21221                           intcon3	equ	0xFF0
 21222                           indf0	equ	0xFEF
 21223                           postinc0	equ	0xFEE
 21224                           fsr0h	equ	0xFEA
 21225                           fsr0l	equ	0xFE9
 21226                           wreg	equ	0xFE8
 21227                           postdec1	equ	0xFE5
 21228                           fsr1l	equ	0xFE1
 21229                           indf2	equ	0xFDF
 21230                           postinc2	equ	0xFDE
 21231                           postdec2	equ	0xFDD
 21232                           fsr2h	equ	0xFDA
 21233                           fsr2l	equ	0xFD9
 21234                           status	equ	0xFD8
 21235                           
 21236 ;; *************** function _strlen *****************
 21237 ;; Defined at:
 21238 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21241 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21242 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21243 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21244 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21245 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21246 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21247 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21248 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21249 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21250 ;; Auto vars:     Size  Location     Type
 21251 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21252 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21253 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21254 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21255 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21256 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21257 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21258 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21259 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21260 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  2    0[BANK0 ] unsigned int 
 21263 ;; Registers used:
 21264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21270 ;;      Params:         0       2       0       0       0       0       0       0       0
 21271 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21272 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21273 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21274 ;;Total ram usage:        6 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:    6
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_getMac
 21281 ;;		_filtroStr
 21282 ;;		_alterarConfigWifi
 21283 ;;		_enviaDadosWifi
 21284 ;;		_strstr
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           	psect	text43
 21289  0058DC                     __ptext43:
 21290                           	opt stack 0
 21291  0058DC                     _strlen:
 21292                           	opt stack 22
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;incstack = 0
 21296  0058DC  C060  F064         	movff	strlen@s,strlen@cp
 21297  0058E0  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21298  0058E4  D003               	goto	l2175
 21299  0058E6  0100               	movlb	0	; () banked
 21300  0058E8  4B64               	infsnz	strlen@cp& (0+255),f,b
 21301  0058EA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21302  0058EC                     l2175:
 21303                           
 21304                           ; BSR set to: 0
 21305  0058EC  C064  FFF6         	movff	strlen@cp,tblptrl
 21306  0058F0  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21307  0058F4  6AF8               	clrf	tblptru,c
 21308  0058F6  0E07               	movlw	(high __ramtop+-1)
 21309  0058F8  64F7               	cpfsgt	tblptrh,c
 21310  0058FA  D003               	bra	u7887
 21311  0058FC  0008               	tblrd		*
 21312  0058FE  50F5               	movf	tablat,w,c
 21313  005900  D005               	bra	u7880
 21314  005902                     u7887:
 21315  005902  CFF6 FFE9          	movff	tblptrl,fsr0l
 21316  005906  CFF7 FFEA          	movff	tblptrh,fsr0h
 21317  00590A  50EF               	movf	indf0,w,c
 21318  00590C                     u7880:
 21319  00590C  0900               	iorlw	0
 21320  00590E  A4D8               	btfss	status,2,c
 21321  005910  D7EA               	goto	l2176
 21322  005912  C060  F062         	movff	strlen@s,??_strlen
 21323  005916  C061  F063         	movff	strlen@s+1,??_strlen+1
 21324  00591A  0100               	movlb	0	; () banked
 21325  00591C  1F62               	comf	??_strlen& (0+255),f,b
 21326  00591E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21327  005920  4B62               	infsnz	??_strlen& (0+255),f,b
 21328  005922  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21329  005924  5164               	movf	strlen@cp& (0+255),w,b
 21330  005926  2562               	addwf	??_strlen& (0+255),w,b
 21331  005928  6F60               	movwf	?_strlen& (0+255),b
 21332  00592A  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21333  00592C  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21334  00592E  6F61               	movwf	(?_strlen+1)& (0+255),b
 21335  005930  0012               	return	
 21336  005932                     __end_of_strlen:
 21337                           	opt stack 0
 21338                           tblptru	equ	0xFF8
 21339                           tblptrh	equ	0xFF7
 21340                           tblptrl	equ	0xFF6
 21341                           tablat	equ	0xFF5
 21342                           prodh	equ	0xFF4
 21343                           prodl	equ	0xFF3
 21344                           intcon	equ	0xFF2
 21345                           intcon2	equ	0xFF1
 21346                           intcon3	equ	0xFF0
 21347                           indf0	equ	0xFEF
 21348                           postinc0	equ	0xFEE
 21349                           fsr0h	equ	0xFEA
 21350                           fsr0l	equ	0xFE9
 21351                           wreg	equ	0xFE8
 21352                           postdec1	equ	0xFE5
 21353                           fsr1l	equ	0xFE1
 21354                           indf2	equ	0xFDF
 21355                           postinc2	equ	0xFDE
 21356                           postdec2	equ	0xFDD
 21357                           fsr2h	equ	0xFDA
 21358                           fsr2l	equ	0xFD9
 21359                           status	equ	0xFD8
 21360                           
 21361 ;; *************** function _strchr *****************
 21362 ;; Defined at:
 21363 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 21364 ;; Parameters:    Size  Location     Type
 21365 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21366 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21367 ;;		 -> bufferSerial(80), 
 21368 ;;  chr             2    2[BANK0 ] int 
 21369 ;; Auto vars:     Size  Location     Type
 21370 ;;		None
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  2    0[BANK0 ] PTR unsigned char 
 21373 ;; Registers used:
 21374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21380 ;;      Params:         0       4       0       0       0       0       0       0       0
 21381 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21382 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21383 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21384 ;;Total ram usage:        6 bytes
 21385 ;; Hardware stack levels used:    1
 21386 ;; Hardware stack levels required when called:    6
 21387 ;; This function calls:
 21388 ;;		Nothing
 21389 ;; This function is called by:
 21390 ;;		_strstr
 21391 ;;		_strcspn
 21392 ;;		_strspn
 21393 ;; This function uses a non-reentrant model
 21394 ;;
 21395                           
 21396                           	psect	text44
 21397  005734                     __ptext44:
 21398                           	opt stack 0
 21399  005734                     _strchr:
 21400                           	opt stack 22
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;incstack = 0
 21404  005734  C060  FFF6         	movff	strchr@ptr,tblptrl
 21405  005738  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 21406  00573C  6AF8               	clrf	tblptru,c
 21407  00573E  0E07               	movlw	(high __ramtop+-1)
 21408  005740  64F7               	cpfsgt	tblptrh,c
 21409  005742  D003               	bra	u7827
 21410  005744  0008               	tblrd		*
 21411  005746  50F5               	movf	tablat,w,c
 21412  005748  D005               	bra	u7820
 21413  00574A                     u7827:
 21414  00574A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21415  00574E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21416  005752  50EF               	movf	indf0,w,c
 21417  005754                     u7820:
 21418  005754  0100               	movlb	0	; () banked
 21419  005756  1962               	xorwf	strchr@chr& (0+255),w,b
 21420  005758  A4D8               	btfss	status,2,c
 21421  00575A  D005               	goto	l2240
 21422                           
 21423                           ; BSR set to: 0
 21424  00575C  C060  F060         	movff	strchr@ptr,?_strchr
 21425  005760  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21426                           
 21427                           ; BSR set to: 0
 21428  005764  0012               	return	
 21429  005766                     l2240:
 21430                           
 21431                           ; BSR set to: 0
 21432                           
 21433                           ; BSR set to: 0
 21434  005766  5160               	movf	strchr@ptr& (0+255),w,b
 21435  005768  6F64               	movwf	??_strchr& (0+255),b
 21436  00576A  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 21437  00576C  6F65               	movwf	(??_strchr+1)& (0+255),b
 21438  00576E  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21439  005770  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21440  005772  C064  FFF6         	movff	??_strchr,tblptrl
 21441  005776  C065  FFF7         	movff	??_strchr+1,tblptrh
 21442  00577A  6AF8               	clrf	tblptru,c
 21443  00577C  0E07               	movlw	(high __ramtop+-1)
 21444  00577E  64F7               	cpfsgt	tblptrh,c
 21445  005780  D003               	bra	u7847
 21446  005782  0008               	tblrd		*
 21447  005784  50F5               	movf	tablat,w,c
 21448  005786  D005               	bra	u7840
 21449  005788                     u7847:
 21450  005788  CFF6 FFE9          	movff	tblptrl,fsr0l
 21451  00578C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21452  005790  50EF               	movf	indf0,w,c
 21453  005792                     u7840:
 21454  005792  0900               	iorlw	0
 21455  005794  A4D8               	btfss	status,2,c
 21456  005796  D7CE               	goto	_strchr
 21457  005798  0E00               	movlw	0
 21458  00579A  0100               	movlb	0	; () banked
 21459  00579C  6F60               	movwf	?_strchr& (0+255),b
 21460  00579E  0E00               	movlw	0
 21461  0057A0  6F61               	movwf	(?_strchr+1)& (0+255),b
 21462  0057A2  0012               	return	
 21463  0057A4                     __end_of_strchr:
 21464                           	opt stack 0
 21465                           tblptru	equ	0xFF8
 21466                           tblptrh	equ	0xFF7
 21467                           tblptrl	equ	0xFF6
 21468                           tablat	equ	0xFF5
 21469                           prodh	equ	0xFF4
 21470                           prodl	equ	0xFF3
 21471                           intcon	equ	0xFF2
 21472                           intcon2	equ	0xFF1
 21473                           intcon3	equ	0xFF0
 21474                           indf0	equ	0xFEF
 21475                           postinc0	equ	0xFEE
 21476                           fsr0h	equ	0xFEA
 21477                           fsr0l	equ	0xFE9
 21478                           wreg	equ	0xFE8
 21479                           postdec1	equ	0xFE5
 21480                           fsr1l	equ	0xFE1
 21481                           indf2	equ	0xFDF
 21482                           postinc2	equ	0xFDE
 21483                           postdec2	equ	0xFDD
 21484                           fsr2h	equ	0xFDA
 21485                           fsr2l	equ	0xFD9
 21486                           status	equ	0xFD8
 21487                           
 21488 ;; *************** function _strncpy *****************
 21489 ;; Defined at:
 21490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncpy.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21493 ;;		 -> filtroStr@_str(82), 
 21494 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21495 ;;		 -> bufferSerial(80), 
 21496 ;;  size            2    4[BANK0 ] unsigned int 
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;  cp              2    6[BANK0 ] PTR unsigned char 
 21499 ;;		 -> filtroStr@_str(82), 
 21500 ;; Return value:  Size  Location     Type
 21501 ;;                  2    0[BANK0 ] PTR unsigned char 
 21502 ;; Registers used:
 21503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21504 ;; Tracked objects:
 21505 ;;		On entry : 0/0
 21506 ;;		On exit  : 0/0
 21507 ;;		Unchanged: 0/0
 21508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21509 ;;      Params:         0       6       0       0       0       0       0       0       0
 21510 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21512 ;;      Totals:         0       8       0       0       0       0       0       0       0
 21513 ;;Total ram usage:        8 bytes
 21514 ;; Hardware stack levels used:    1
 21515 ;; Hardware stack levels required when called:    6
 21516 ;; This function calls:
 21517 ;;		Nothing
 21518 ;; This function is called by:
 21519 ;;		_filtroStr
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523                           	psect	text45
 21524  00587A                     __ptext45:
 21525                           	opt stack 0
 21526  00587A                     _strncpy:
 21527                           	opt stack 22
 21528                           
 21529                           ; BSR set to: 0
 21530                           ;incstack = 0
 21531  00587A  C060  F066         	movff	strncpy@to,strncpy@cp
 21532  00587E  C061  F067         	movff	strncpy@to+1,strncpy@cp+1
 21533  005882  D015               	goto	l2183
 21534  005884  0100               	movlb	0	; () banked
 21535  005886  0764               	decf	strncpy@size& (0+255),f,b
 21536  005888  A0D8               	btfss	status,0,c
 21537  00588A  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21538                           
 21539                           ; BSR set to: 0
 21540  00588C  C062  FFD9         	movff	strncpy@from,fsr2l
 21541  005890  C063  FFDA         	movff	strncpy@from+1,fsr2h
 21542  005894  4B62               	infsnz	strncpy@from& (0+255),f,b
 21543  005896  2B63               	incf	(strncpy@from+1)& (0+255),f,b
 21544  005898  C066  FFE1         	movff	strncpy@cp,fsr1l
 21545  00589C  C067  FFE2         	movff	strncpy@cp+1,fsr1h
 21546  0058A0  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21547  0058A2  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21548  0058A4  CFDF FFE7          	movff	indf2,indf1
 21549  0058A8  50E7               	movf	indf1,w,c
 21550  0058AA  B4D8               	btfsc	status,2,c
 21551  0058AC  D00E               	goto	l2185
 21552  0058AE                     l2183:
 21553                           
 21554                           ; BSR set to: 0
 21555                           
 21556                           ; BSR set to: 0
 21557  0058AE  0100               	movlb	0	; () banked
 21558  0058B0  5164               	movf	strncpy@size& (0+255),w,b
 21559  0058B2  1165               	iorwf	(strncpy@size+1)& (0+255),w,b
 21560  0058B4  B4D8               	btfsc	status,2,c
 21561  0058B6  D009               	goto	l2185
 21562  0058B8  D7E5               	goto	l2182
 21563  0058BA                     l6577:
 21564                           
 21565                           ; BSR set to: 0
 21566  0058BA  C066  FFD9         	movff	strncpy@cp,fsr2l
 21567  0058BE  C067  FFDA         	movff	strncpy@cp+1,fsr2h
 21568  0058C2  0E00               	movlw	0
 21569  0058C4  6EDF               	movwf	indf2,c
 21570                           
 21571                           ; BSR set to: 0
 21572  0058C6  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21573  0058C8  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21574  0058CA                     l2185:
 21575                           
 21576                           ; BSR set to: 0
 21577                           
 21578                           ; BSR set to: 0
 21579  0058CA  0764               	decf	strncpy@size& (0+255),f,b
 21580  0058CC  A0D8               	btfss	status,0,c
 21581  0058CE  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21582  0058D0  2964               	incf	strncpy@size& (0+255),w,b
 21583  0058D2  E1F3               	bnz	l6577
 21584  0058D4  2965               	incf	(strncpy@size+1)& (0+255),w,b
 21585  0058D6  B4D8               	btfsc	status,2,c
 21586  0058D8  0012               	return	
 21587  0058DA  D7EF               	goto	l2186
 21588  0058DC                     __end_of_strncpy:
 21589                           	opt stack 0
 21590                           tblptru	equ	0xFF8
 21591                           tblptrh	equ	0xFF7
 21592                           tblptrl	equ	0xFF6
 21593                           tablat	equ	0xFF5
 21594                           prodh	equ	0xFF4
 21595                           prodl	equ	0xFF3
 21596                           intcon	equ	0xFF2
 21597                           intcon2	equ	0xFF1
 21598                           intcon3	equ	0xFF0
 21599                           indf0	equ	0xFEF
 21600                           postinc0	equ	0xFEE
 21601                           fsr0h	equ	0xFEA
 21602                           fsr0l	equ	0xFE9
 21603                           wreg	equ	0xFE8
 21604                           indf1	equ	0xFE7
 21605                           postdec1	equ	0xFE5
 21606                           fsr1h	equ	0xFE2
 21607                           fsr1l	equ	0xFE1
 21608                           indf2	equ	0xFDF
 21609                           postinc2	equ	0xFDE
 21610                           postdec2	equ	0xFDD
 21611                           fsr2h	equ	0xFDA
 21612                           fsr2l	equ	0xFD9
 21613                           status	equ	0xFD8
 21614                           
 21615 ;; *************** function _strcpy *****************
 21616 ;; Defined at:
 21617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 21618 ;; Parameters:    Size  Location     Type
 21619 ;;  to              2   17[BANK0 ] PTR unsigned char 
 21620 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21621 ;;		 -> bufferSerial(80), 
 21622 ;;  from            2   19[BANK0 ] PTR const unsigned char 
 21623 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21624 ;;		 -> bufferSerial(80), 
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 21627 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21628 ;;		 -> bufferSerial(80), 
 21629 ;; Return value:  Size  Location     Type
 21630 ;;                  2   17[BANK0 ] PTR unsigned char 
 21631 ;; Registers used:
 21632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21633 ;; Tracked objects:
 21634 ;;		On entry : 0/0
 21635 ;;		On exit  : 0/0
 21636 ;;		Unchanged: 0/0
 21637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21638 ;;      Params:         0       4       0       0       0       0       0       0       0
 21639 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21640 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21641 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21642 ;;Total ram usage:        7 bytes
 21643 ;; Hardware stack levels used:    1
 21644 ;; Hardware stack levels required when called:    6
 21645 ;; This function calls:
 21646 ;;		Nothing
 21647 ;; This function is called by:
 21648 ;;		_filtroStr
 21649 ;; This function uses a non-reentrant model
 21650 ;;
 21651                           
 21652                           	psect	text46
 21653  005814                     __ptext46:
 21654                           	opt stack 0
 21655  005814                     _strcpy:
 21656                           	opt stack 22
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;incstack = 0
 21660  005814  C071  F076         	movff	strcpy@to,strcpy@cp
 21661  005818  C072  F077         	movff	strcpy@to+1,strcpy@cp+1
 21662  00581C  D005               	goto	l2169
 21663  00581E  0100               	movlb	0	; () banked
 21664  005820  4B76               	infsnz	strcpy@cp& (0+255),f,b
 21665  005822  2B77               	incf	(strcpy@cp+1)& (0+255),f,b
 21666  005824  4B73               	infsnz	strcpy@from& (0+255),f,b
 21667  005826  2B74               	incf	(strcpy@from+1)& (0+255),f,b
 21668  005828                     l2169:
 21669                           
 21670                           ; BSR set to: 0
 21671  005828  C073  FFF6         	movff	strcpy@from,tblptrl
 21672  00582C  C074  FFF7         	movff	strcpy@from+1,tblptrh
 21673  005830  6AF8               	clrf	tblptru,c
 21674  005832  0E07               	movlw	(high __ramtop+-1)
 21675  005834  64F7               	cpfsgt	tblptrh,c
 21676  005836  D003               	bra	u8607
 21677  005838  0008               	tblrd		*
 21678  00583A  50F5               	movf	tablat,w,c
 21679  00583C  D005               	bra	u8600
 21680  00583E                     u8607:
 21681  00583E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21682  005842  CFF7 FFEA          	movff	tblptrh,fsr0h
 21683  005846  50EF               	movf	indf0,w,c
 21684  005848                     u8600:
 21685  005848  C076  FFF6         	movff	strcpy@cp,tblptrl
 21686  00584C  C077  FFF7         	movff	strcpy@cp+1,tblptrh
 21687  005850  6AF8               	clrf	tblptru,c
 21688  005852  0100               	movlb	0	; () banked
 21689  005854  6F75               	movwf	??_strcpy& (0+255),b
 21690  005856  0E07               	movlw	(high __ramtop+-1)
 21691  005858  64F7               	cpfsgt	tblptrh,c
 21692  00585A  D004               	bra	u8617
 21693  00585C  C075  FFF5         	movff	??_strcpy,tablat
 21694  005860  000C               	tblwt		*
 21695  005862  D006               	bra	u8610
 21696  005864                     u8617:
 21697  005864  CFF6 FFE9          	movff	tblptrl,fsr0l
 21698  005868  CFF7 FFEA          	movff	tblptrh,fsr0h
 21699  00586C  C075  FFEF         	movff	??_strcpy,indf0
 21700  005870                     u8610:
 21701  005870  0100               	movlb	0	; () banked
 21702  005872  5175               	movf	??_strcpy& (0+255),w,b
 21703  005874  B4D8               	btfsc	status,2,c
 21704  005876  0012               	return	
 21705  005878  D7D2               	goto	l2170
 21706  00587A                     __end_of_strcpy:
 21707                           	opt stack 0
 21708                           tblptru	equ	0xFF8
 21709                           tblptrh	equ	0xFF7
 21710                           tblptrl	equ	0xFF6
 21711                           tablat	equ	0xFF5
 21712                           prodh	equ	0xFF4
 21713                           prodl	equ	0xFF3
 21714                           intcon	equ	0xFF2
 21715                           intcon2	equ	0xFF1
 21716                           intcon3	equ	0xFF0
 21717                           indf0	equ	0xFEF
 21718                           postinc0	equ	0xFEE
 21719                           fsr0h	equ	0xFEA
 21720                           fsr0l	equ	0xFE9
 21721                           wreg	equ	0xFE8
 21722                           indf1	equ	0xFE7
 21723                           postdec1	equ	0xFE5
 21724                           fsr1h	equ	0xFE2
 21725                           fsr1l	equ	0xFE1
 21726                           indf2	equ	0xFDF
 21727                           postinc2	equ	0xFDE
 21728                           postdec2	equ	0xFDD
 21729                           fsr2h	equ	0xFDA
 21730                           fsr2l	equ	0xFD9
 21731                           status	equ	0xFD8
 21732                           
 21733 ;; *************** function _sprintf *****************
 21734 ;; Defined at:
 21735 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 21738 ;;		 -> enviaDadosWifi@AUX(15), senha(15), ssid(15), line4(21), 
 21739 ;;		 -> line3(21), line2(21), line1(21), filtroStr@aux(60), 
 21740 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 21741 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21742 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21743 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21744 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21745 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21746 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21747 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21748 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21749 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21750 ;;		 -> STR_57(3), STR_43(14), STR_42(3), STR_41(3), 
 21751 ;;		 -> STR_34(14), STR_25(14), STR_24(21), STR_23(17), 
 21752 ;;		 -> STR_22(20), STR_11(3), STR_10(3), 
 21753 ;; Auto vars:     Size  Location     Type
 21754 ;;  pb              4   45[BANK0 ] struct __prbuf
 21755 ;;  ap              2   43[BANK0 ] PTR void [1]
 21756 ;;		 -> ?_sprintf(2), ?_printf(2), 
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  2   33[BANK0 ] int 
 21759 ;; Registers used:
 21760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21766 ;;      Params:         0      10       0       0       0       0       0       0       0
 21767 ;;      Locals:         0       6       0       0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21769 ;;      Totals:         0      16       0       0       0       0       0       0       0
 21770 ;;Total ram usage:       16 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:    8
 21773 ;; This function calls:
 21774 ;;		__doprnt
 21775 ;; This function is called by:
 21776 ;;		_filtroStr
 21777 ;;		_alterarConfigWifi
 21778 ;;		_enviaDadosWifi
 21779 ;;		_main
 21780 ;; This function uses a non-reentrant model
 21781 ;;
 21782                           
 21783                           	psect	text47
 21784  005A20                     __ptext47:
 21785                           	opt stack 0
 21786  005A20                     _sprintf:
 21787                           	opt stack 22
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;incstack = 0
 21791  005A20  C081  F08D         	movff	sprintf@wh,sprintf@pb
 21792  005A24  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 21793  005A28  0E00               	movlw	0
 21794  005A2A  0100               	movlb	0	; () banked
 21795  005A2C  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 21796  005A2E  0E00               	movlw	0
 21797  005A30  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 21798  005A32  0E85               	movlw	low (?_sprintf+4)
 21799  005A34  6F8B               	movwf	sprintf@ap& (0+255),b
 21800  005A36  0E00               	movlw	high (?_sprintf+4)
 21801  005A38  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 21802                           
 21803                           ; BSR set to: 0
 21804  005A3A  0E8D               	movlw	low sprintf@pb
 21805  005A3C  6F6C               	movwf	__doprnt@pb& (0+255),b
 21806  005A3E  0E00               	movlw	high sprintf@pb
 21807  005A40  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 21808  005A42  C083  F06E         	movff	sprintf@f,__doprnt@f
 21809  005A46  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 21810  005A4A  0E8B               	movlw	low sprintf@ap
 21811  005A4C  6F70               	movwf	__doprnt@ap& (0+255),b
 21812  005A4E  0E00               	movlw	high sprintf@ap
 21813  005A50  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 21814  005A52  EC0B  F013         	call	__doprnt	;wreg free
 21815  005A56  C08D  FFD9         	movff	sprintf@pb,fsr2l
 21816  005A5A  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 21817  005A5E  0E00               	movlw	0
 21818  005A60  6EDF               	movwf	indf2,c
 21819  005A62  0012               	return	
 21820  005A64                     __end_of_sprintf:
 21821                           	opt stack 0
 21822                           tblptru	equ	0xFF8
 21823                           tblptrh	equ	0xFF7
 21824                           tblptrl	equ	0xFF6
 21825                           tablat	equ	0xFF5
 21826                           prodh	equ	0xFF4
 21827                           prodl	equ	0xFF3
 21828                           intcon	equ	0xFF2
 21829                           intcon2	equ	0xFF1
 21830                           intcon3	equ	0xFF0
 21831                           indf0	equ	0xFEF
 21832                           postinc0	equ	0xFEE
 21833                           fsr0h	equ	0xFEA
 21834                           fsr0l	equ	0xFE9
 21835                           wreg	equ	0xFE8
 21836                           indf1	equ	0xFE7
 21837                           postdec1	equ	0xFE5
 21838                           fsr1h	equ	0xFE2
 21839                           fsr1l	equ	0xFE1
 21840                           indf2	equ	0xFDF
 21841                           postinc2	equ	0xFDE
 21842                           postdec2	equ	0xFDD
 21843                           fsr2h	equ	0xFDA
 21844                           fsr2l	equ	0xFD9
 21845                           status	equ	0xFD8
 21846                           
 21847 ;; *************** function __doprnt *****************
 21848 ;; Defined at:
 21849 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 21852 ;;		 -> sprintf@pb(4), printf@pb(4), 
 21853 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 21854 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21855 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21856 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21857 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21858 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21859 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21860 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21861 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21862 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21863 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(168), 
 21864 ;;		 -> STR_57(3), STR_55(19), STR_53(40), STR_50(15), 
 21865 ;;		 -> STR_49(21), STR_46(14), STR_44(14), STR_43(14), 
 21866 ;;		 -> STR_42(3), STR_41(3), STR_34(14), STR_33(16), 
 21867 ;;		 -> STR_32(704), STR_31(45), STR_29(21), STR_25(14), 
 21868 ;;		 -> STR_24(21), STR_23(17), STR_22(20), STR_20(22), 
 21869 ;;		 -> STR_18(22), STR_16(35), STR_14(14), STR_12(14), 
 21870 ;;		 -> STR_11(3), STR_10(3), 
 21871 ;;  ap              2   16[BANK0 ] PTR PTR void 
 21872 ;;		 -> sprintf@ap(2), printf@ap(2), 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  tmpval          4    0        struct .
 21875 ;;  width           2   30[BANK0 ] int 
 21876 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 21877 ;;		 -> ?_sprintf(2), ?_printf(2), STR_112(7), _doprnt@c(1), 
 21878 ;;		 -> STR_91(10), STR_90(7), STR_88(11), STR_87(8), 
 21879 ;;		 -> STR_85(11), STR_84(7), STR_72(12), STR_58(12), 
 21880 ;;		 -> enviaDadosWifi@AUX(15), wifi_MAC(24), STR_40(2), senha(15), 
 21881 ;;		 -> STR_38(2), ssid(15), line4(21), line3(21), 
 21882 ;;		 -> line2(21), line1(21), NULL(0), filtroStr@aux(60), 
 21883 ;;		 -> filtroStr@_str(82), bufferSerial(80), STR_9(3), STR_8(5), 
 21884 ;;		 -> STR_7(7), STR_6(6), STR_5(4), STR_4(10), 
 21885 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
 21886 ;;  len             2   26[BANK0 ] unsigned int 
 21887 ;;  val             2   24[BANK0 ] unsigned int 
 21888 ;;  c               1   32[BANK0 ] char 
 21889 ;;  flag            1   23[BANK0 ] unsigned char 
 21890 ;;  prec            1   22[BANK0 ] char 
 21891 ;; Return value:  Size  Location     Type
 21892 ;;                  2   12[BANK0 ] int 
 21893 ;; Registers used:
 21894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21895 ;; Tracked objects:
 21896 ;;		On entry : 0/0
 21897 ;;		On exit  : 0/0
 21898 ;;		Unchanged: 0/0
 21899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21900 ;;      Params:         0       6       0       0       0       0       0       0       0
 21901 ;;      Locals:         0      11       0       0       0       0       0       0       0
 21902 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21903 ;;      Totals:         0      21       0       0       0       0       0       0       0
 21904 ;;Total ram usage:       21 bytes
 21905 ;; Hardware stack levels used:    1
 21906 ;; Hardware stack levels required when called:    7
 21907 ;; This function calls:
 21908 ;;		Absolute function
 21909 ;;		___lwdiv
 21910 ;;		___lwmod
 21911 ;;		___wmul
 21912 ;;		_isdigit
 21913 ;;		_putch
 21914 ;; This function is called by:
 21915 ;;		_printf
 21916 ;;		_sprintf
 21917 ;; This function uses a non-reentrant model
 21918 ;;
 21919                           
 21920                           	psect	text48
 21921  002616                     __ptext48:
 21922                           	opt stack 0
 21923  002616                     __doprnt:
 21924                           	opt stack 22
 21925                           
 21926                           ;doprnt.c: 499: signed char c;
 21927                           ;doprnt.c: 501: int width;
 21928                           ;doprnt.c: 506: signed char prec;
 21929                           ;doprnt.c: 508: unsigned char flag;
 21930                           ;doprnt.c: 523: union {
 21931                           ;doprnt.c: 524: unsigned long vd;
 21932                           ;doprnt.c: 525: double integ;
 21933                           ;doprnt.c: 526: } tmpval;
 21934                           ;doprnt.c: 528: unsigned int val;
 21935                           ;doprnt.c: 529: unsigned len;
 21936                           ;doprnt.c: 530: const char * cp;
 21937                           ;doprnt.c: 536: while(c = *f++) {
 21938                           
 21939                           ;incstack = 0
 21940  002616  D2CC               	goto	u8250
 21941  002618                     
 21942                           ;doprnt.c: 538: if(c != '%')
 21943  002618  0E25               	movlw	37
 21944  00261A  0100               	movlb	0	; () banked
 21945  00261C  1980               	xorwf	__doprnt@c& (0+255),w,b
 21946  00261E  B4D8               	btfsc	status,2,c
 21947  002620  D033               	goto	l1541
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;doprnt.c: 540: {
 21951                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 21952  002622  EE20 F002          	lfsr	2,2
 21953  002626  516C               	movf	__doprnt@pb& (0+255),w,b
 21954  002628  26D9               	addwf	fsr2l,f,c
 21955  00262A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21956  00262C  22DA               	addwfc	fsr2h,f,c
 21957  00262E  50DE               	movf	postinc2,w,c
 21958  002630  10DE               	iorwf	postinc2,w,c
 21959  002632  B4D8               	btfsc	status,2,c
 21960  002634  D013               	goto	l1542
 21961                           
 21962                           ; BSR set to: 0
 21963  002636  EE20 F002          	lfsr	2,2
 21964  00263A  516C               	movf	__doprnt@pb& (0+255),w,b
 21965  00263C  26D9               	addwf	fsr2l,f,c
 21966  00263E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21967  002640  22DA               	addwfc	fsr2h,f,c
 21968  002642  D801               	call	u7948
 21969  002644  D2B5               	goto	u8250
 21970  002646                     u7948:
 21971  002646  0005               	push	
 21972  002648  6EFA               	movwf	pclath,c
 21973  00264A  50DE               	movf	postinc2,w,c
 21974  00264C  6EFD               	movwf	tosl,c
 21975  00264E  50DE               	movf	postinc2,w,c
 21976  002650  6EFE               	movwf	tosh,c
 21977  002652  50F8               	movf	tblptru,w,c
 21978  002654  6EFF               	movwf	tosu,c
 21979  002656  50FA               	movf	pclath,w,c
 21980  002658  5180               	movf	__doprnt@c& (0+255),w,b
 21981  00265A  0012               	return		;indir
 21982  00265C                     l1542:
 21983  00265C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21984  002660  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21985  002664  CFDE F072          	movff	postinc2,??__doprnt
 21986  002668  CFDD F073          	movff	postdec2,??__doprnt+1
 21987  00266C  C072  FFD9         	movff	??__doprnt,fsr2l
 21988  002670  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21989  002674  C080  FFDF         	movff	__doprnt@c,indf2
 21990  002678  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21991  00267C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21992  002680  2ADE               	incf	postinc2,f,c
 21993  002682  0E00               	movlw	0
 21994  002684  22DD               	addwfc	postdec2,f,c
 21995                           
 21996                           ;doprnt.c: 542: continue;
 21997  002686  D294               	goto	u8250
 21998  002688                     l1541:
 21999                           
 22000                           ;doprnt.c: 543: }
 22001                           ;doprnt.c: 546: width = 0;
 22002  002688  0E00               	movlw	0
 22003  00268A  0100               	movlb	0	; () banked
 22004  00268C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22005  00268E  0E00               	movlw	0
 22006  002690  6F7E               	movwf	__doprnt@width& (0+255),b
 22007                           
 22008                           ;doprnt.c: 548: flag = 0;
 22009  002692  0E00               	movlw	0
 22010  002694  6F77               	movwf	__doprnt@flag& (0+255),b
 22011                           
 22012                           ; BSR set to: 0
 22013                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 22014  002696  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22015  00269A  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22016  00269E                     	if	0	;tblptru may be non-zero
 22017  00269E                     	endif
 22018  00269E                     	if	0	;tblptru may be non-zero
 22019  00269E                     	endif
 22020  00269E  0008               	tblrd		*
 22021  0026A0  50F5               	movf	tablat,w,c
 22022  0026A2  EC09  F02F         	call	_isdigit
 22023  0026A6  A0D8               	btfss	status,0,c
 22024  0026A8  D13C               	goto	l1547
 22025                           
 22026                           ;doprnt.c: 598: width = 0;
 22027  0026AA  0E00               	movlw	0
 22028  0026AC  0100               	movlb	0	; () banked
 22029  0026AE  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22030  0026B0  0E00               	movlw	0
 22031  0026B2  6F7E               	movwf	__doprnt@width& (0+255),b
 22032  0026B4                     
 22033                           ;doprnt.c: 600: width *= 10;
 22034                           
 22035                           ; BSR set to: 0
 22036  0026B4  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 22037  0026B8  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 22038  0026BC  0E00               	movlw	0
 22039  0026BE  0100               	movlb	0	; () banked
 22040  0026C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22041  0026C2  0E0A               	movlw	10
 22042  0026C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 22043  0026C6  ECA9  F02E         	call	___wmul	;wreg free
 22044  0026CA  C060  F07E         	movff	?___wmul,__doprnt@width
 22045  0026CE  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 22046                           
 22047                           ;doprnt.c: 601: width += *f++ - '0';
 22048  0026D2  0ED0               	movlw	208
 22049  0026D4  0100               	movlb	0	; () banked
 22050  0026D6  6F72               	movwf	??__doprnt& (0+255),b
 22051  0026D8  0EFF               	movlw	255
 22052  0026DA  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22053  0026DC  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22054  0026E0  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22055  0026E4                     	if	0	;tblptru may be non-zero
 22056  0026E4                     	endif
 22057  0026E4                     	if	0	;tblptru may be non-zero
 22058  0026E4                     	endif
 22059  0026E4  0008               	tblrd		*
 22060  0026E6  50F5               	movf	tablat,w,c
 22061  0026E8  6F74               	movwf	(??__doprnt+2)& (0+255),b
 22062  0026EA  6B75               	clrf	(??__doprnt+3)& (0+255),b
 22063  0026EC  5172               	movf	??__doprnt& (0+255),w,b
 22064  0026EE  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 22065  0026F0  5173               	movf	(??__doprnt+1)& (0+255),w,b
 22066  0026F2  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 22067  0026F4  5174               	movf	(??__doprnt+2)& (0+255),w,b
 22068  0026F6  277E               	addwf	__doprnt@width& (0+255),f,b
 22069  0026F8  5175               	movf	(??__doprnt+3)& (0+255),w,b
 22070  0026FA  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22071                           
 22072                           ; BSR set to: 0
 22073  0026FC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22074  0026FE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22078  002700  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22079  002704  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22080  002708                     	if	0	;tblptru may be non-zero
 22081  002708                     	endif
 22082  002708                     	if	0	;tblptru may be non-zero
 22083  002708                     	endif
 22084  002708  0008               	tblrd		*
 22085  00270A  50F5               	movf	tablat,w,c
 22086  00270C  EC09  F02F         	call	_isdigit
 22087  002710  A0D8               	btfss	status,0,c
 22088  002712  D107               	goto	l1547
 22089  002714  D7CF               	goto	l1545
 22090  002716                     
 22091                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22092  002716  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22093  00271A  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22094  00271E  CFDF F072          	movff	indf2,??__doprnt
 22095  002722  0E02               	movlw	2
 22096  002724  26DE               	addwf	postinc2,f,c
 22097  002726  CFDF F073          	movff	indf2,??__doprnt+1
 22098  00272A  0E00               	movlw	0
 22099  00272C  22DD               	addwfc	postdec2,f,c
 22100  00272E  C072  FFD9         	movff	??__doprnt,fsr2l
 22101  002732  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22102  002736  CFDE F07C          	movff	postinc2,__doprnt@cp
 22103  00273A  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 22104                           
 22105                           ;doprnt.c: 740: if(!cp)
 22106  00273E  0100               	movlb	0	; () banked
 22107  002740  517C               	movf	__doprnt@cp& (0+255),w,b
 22108  002742  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 22109  002744  A4D8               	btfss	status,2,c
 22110  002746  D004               	goto	l1554
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;doprnt.c: 741: cp = "(null)";
 22114  002748  0E82               	movlw	low STR_112
 22115  00274A  6F7C               	movwf	__doprnt@cp& (0+255),b
 22116  00274C  0E7F               	movlw	high STR_112
 22117  00274E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22118  002750                     l1554:
 22119                           
 22120                           ; BSR set to: 0
 22121                           ;doprnt.c: 745: len = 0;
 22122                           
 22123                           ; BSR set to: 0
 22124  002750  0E00               	movlw	0
 22125  002752  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22126  002754  0E00               	movlw	0
 22127  002756  6F7A               	movwf	__doprnt@len& (0+255),b
 22128                           
 22129                           ;doprnt.c: 746: while(cp[len])
 22130  002758  D003               	goto	l1555
 22131  00275A                     
 22132                           ;doprnt.c: 747: len++;
 22133                           
 22134                           ; BSR set to: 0
 22135  00275A  0100               	movlb	0	; () banked
 22136  00275C  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 22137  00275E  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 22138  002760                     l1555:
 22139                           
 22140                           ; BSR set to: 0
 22141                           
 22142                           ; BSR set to: 0
 22143  002760  517A               	movf	__doprnt@len& (0+255),w,b
 22144  002762  257C               	addwf	__doprnt@cp& (0+255),w,b
 22145  002764  6F72               	movwf	??__doprnt& (0+255),b
 22146  002766  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22147  002768  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 22148  00276A  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22149  00276C  C072  FFF6         	movff	??__doprnt,tblptrl
 22150  002770  C073  FFF7         	movff	??__doprnt+1,tblptrh
 22151  002774  6AF8               	clrf	tblptru,c
 22152  002776  0E07               	movlw	(high __ramtop+-1)
 22153  002778  64F7               	cpfsgt	tblptrh,c
 22154  00277A  D003               	bra	u7987
 22155  00277C  0008               	tblrd		*
 22156  00277E  50F5               	movf	tablat,w,c
 22157  002780  D005               	bra	u7980
 22158  002782                     u7987:
 22159  002782  CFF6 FFE9          	movff	tblptrl,fsr0l
 22160  002786  CFF7 FFEA          	movff	tblptrh,fsr0h
 22161  00278A  50EF               	movf	indf0,w,c
 22162  00278C                     u7980:
 22163  00278C  0900               	iorlw	0
 22164  00278E  A4D8               	btfss	status,2,c
 22165  002790  D7E4               	goto	l1556
 22166  002792                     u7990:
 22167                           
 22168                           ;doprnt.c: 757: if(width > len)
 22169                           
 22170                           ;doprnt.c: 750: dostring:
 22171  002792  0100               	movlb	0	; () banked
 22172  002794  517E               	movf	__doprnt@width& (0+255),w,b
 22173  002796  5D7A               	subwf	__doprnt@len& (0+255),w,b
 22174  002798  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22175  00279A  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 22176  00279C  B0D8               	btfsc	status,0,c
 22177  00279E  D005               	goto	l1559
 22178                           
 22179                           ; BSR set to: 0
 22180                           ;doprnt.c: 758: width -= len;
 22181  0027A0  517A               	movf	__doprnt@len& (0+255),w,b
 22182  0027A2  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22183  0027A4  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22184  0027A6  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22185  0027A8  D037               	goto	l1564
 22186  0027AA                     l1559:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;doprnt.c: 759: else
 22190                           ;doprnt.c: 760: width = 0;
 22191                           
 22192                           ; BSR set to: 0
 22193  0027AA  0E00               	movlw	0
 22194  0027AC  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22195  0027AE  0E00               	movlw	0
 22196  0027B0  6F7E               	movwf	__doprnt@width& (0+255),b
 22197                           
 22198                           ; BSR set to: 0
 22199                           ;doprnt.c: 764: while(width--)
 22200  0027B2  D032               	goto	l1564
 22201  0027B4                     l6331:
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22205  0027B4  EE20 F002          	lfsr	2,2
 22206  0027B8  516C               	movf	__doprnt@pb& (0+255),w,b
 22207  0027BA  26D9               	addwf	fsr2l,f,c
 22208  0027BC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22209  0027BE  22DA               	addwfc	fsr2h,f,c
 22210  0027C0  50DE               	movf	postinc2,w,c
 22211  0027C2  10DE               	iorwf	postinc2,w,c
 22212  0027C4  B4D8               	btfsc	status,2,c
 22213  0027C6  D013               	goto	l1563
 22214                           
 22215                           ; BSR set to: 0
 22216  0027C8  EE20 F002          	lfsr	2,2
 22217  0027CC  516C               	movf	__doprnt@pb& (0+255),w,b
 22218  0027CE  26D9               	addwf	fsr2l,f,c
 22219  0027D0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22220  0027D2  22DA               	addwfc	fsr2h,f,c
 22221  0027D4  D801               	call	u8028
 22222  0027D6  D020               	goto	l1564
 22223  0027D8                     u8028:
 22224  0027D8  0005               	push	
 22225  0027DA  6EFA               	movwf	pclath,c
 22226  0027DC  50DE               	movf	postinc2,w,c
 22227  0027DE  6EFD               	movwf	tosl,c
 22228  0027E0  50DE               	movf	postinc2,w,c
 22229  0027E2  6EFE               	movwf	tosh,c
 22230  0027E4  50F8               	movf	tblptru,w,c
 22231  0027E6  6EFF               	movwf	tosu,c
 22232  0027E8  50FA               	movf	pclath,w,c
 22233  0027EA  0E20               	movlw	32
 22234  0027EC  0012               	return		;indir
 22235  0027EE                     l1563:
 22236  0027EE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22237  0027F2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22238  0027F6  CFDE F072          	movff	postinc2,??__doprnt
 22239  0027FA  CFDD F073          	movff	postdec2,??__doprnt+1
 22240  0027FE  C072  FFD9         	movff	??__doprnt,fsr2l
 22241  002802  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22242  002806  0E20               	movlw	32
 22243  002808  6EDF               	movwf	indf2,c
 22244  00280A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22245  00280E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22246  002812  2ADE               	incf	postinc2,f,c
 22247  002814  0E00               	movlw	0
 22248  002816  22DD               	addwfc	postdec2,f,c
 22249  002818                     l1564:
 22250  002818  0100               	movlb	0	; () banked
 22251  00281A  077E               	decf	__doprnt@width& (0+255),f,b
 22252  00281C  A0D8               	btfss	status,0,c
 22253  00281E  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22254  002820  297E               	incf	__doprnt@width& (0+255),w,b
 22255  002822  E1C8               	bnz	l6331
 22256  002824  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 22257  002826  B4D8               	btfsc	status,2,c
 22258  002828  D058               	goto	l1569
 22259  00282A  D7C4               	goto	l1562
 22260  00282C                     l6341:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 22264  00282C  EE20 F002          	lfsr	2,2
 22265  002830  516C               	movf	__doprnt@pb& (0+255),w,b
 22266  002832  26D9               	addwf	fsr2l,f,c
 22267  002834  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22268  002836  22DA               	addwfc	fsr2h,f,c
 22269  002838  50DE               	movf	postinc2,w,c
 22270  00283A  10DE               	iorwf	postinc2,w,c
 22271  00283C  B4D8               	btfsc	status,2,c
 22272  00283E  D026               	goto	l1568
 22273                           
 22274                           ; BSR set to: 0
 22275  002840  EE20 F002          	lfsr	2,2
 22276  002844  516C               	movf	__doprnt@pb& (0+255),w,b
 22277  002846  26D9               	addwf	fsr2l,f,c
 22278  002848  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22279  00284A  22DA               	addwfc	fsr2h,f,c
 22280  00284C  D801               	call	u8058
 22281  00284E  D01A               	goto	u8059
 22282  002850                     u8058:
 22283  002850  0005               	push	
 22284  002852  6EFA               	movwf	pclath,c
 22285  002854  50DE               	movf	postinc2,w,c
 22286  002856  6EFD               	movwf	tosl,c
 22287  002858  50DE               	movf	postinc2,w,c
 22288  00285A  6EFE               	movwf	tosh,c
 22289  00285C  50F8               	movf	tblptru,w,c
 22290  00285E  6EFF               	movwf	tosu,c
 22291  002860  50FA               	movf	pclath,w,c
 22292  002862  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22293  002866  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22294  00286A  6AF8               	clrf	tblptru,c
 22295  00286C  0E07               	movlw	(high __ramtop+-1)
 22296  00286E  64F7               	cpfsgt	tblptrh,c
 22297  002870  D003               	bra	u8067
 22298  002872  0008               	tblrd		*
 22299  002874  50F5               	movf	tablat,w,c
 22300  002876  D005               	bra	u8060
 22301  002878                     u8067:
 22302  002878  CFF6 FFE9          	movff	tblptrl,fsr0l
 22303  00287C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22304  002880  50EF               	movf	indf0,w,c
 22305  002882                     u8060:
 22306  002882  0012               	return		;indir
 22307  002884                     u8059:
 22308  002884  0100               	movlb	0	; () banked
 22309  002886  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22310  002888  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22311  00288A  D027               	goto	l1569
 22312  00288C                     l1568:
 22313                           
 22314                           ; BSR set to: 0
 22315                           
 22316                           ; BSR set to: 0
 22317  00288C  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22318  002890  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22319  002894  6AF8               	clrf	tblptru,c
 22320  002896  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22321  00289A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22322  00289E  CFDE F072          	movff	postinc2,??__doprnt
 22323  0028A2  CFDD F073          	movff	postdec2,??__doprnt+1
 22324  0028A6  C072  FFD9         	movff	??__doprnt,fsr2l
 22325  0028AA  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22326  0028AE  0E07               	movlw	(high __ramtop+-1)
 22327  0028B0  64F7               	cpfsgt	tblptrh,c
 22328  0028B2  D003               	bra	u8077
 22329  0028B4  0008               	tblrd		*
 22330  0028B6  50F5               	movf	tablat,w,c
 22331  0028B8  D005               	bra	u8070
 22332  0028BA                     u8077:
 22333  0028BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22334  0028BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22335  0028C2  50EF               	movf	indf0,w,c
 22336  0028C4                     u8070:
 22337  0028C4  6EDF               	movwf	indf2,c
 22338  0028C6  0100               	movlb	0	; () banked
 22339  0028C8  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22340  0028CA  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22341                           
 22342                           ; BSR set to: 0
 22343  0028CC  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22344  0028D0  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22345  0028D4  2ADE               	incf	postinc2,f,c
 22346  0028D6  0E00               	movlw	0
 22347  0028D8  22DD               	addwfc	postdec2,f,c
 22348  0028DA                     l1569:
 22349                           
 22350                           ; BSR set to: 0
 22351                           
 22352                           ; BSR set to: 0
 22353                           
 22354                           ; BSR set to: 0
 22355  0028DA  077A               	decf	__doprnt@len& (0+255),f,b
 22356  0028DC  A0D8               	btfss	status,0,c
 22357  0028DE  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 22358  0028E0  297A               	incf	__doprnt@len& (0+255),w,b
 22359  0028E2  E1A4               	bnz	l6341
 22360  0028E4  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 22361  0028E6  B4D8               	btfsc	status,2,c
 22362  0028E8  D163               	goto	u8250
 22363  0028EA  D7A0               	goto	l1567
 22364  0028EC                     
 22365                           ; BSR set to: 0
 22366                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 22367                           
 22368                           ; BSR set to: 0
 22369  0028EC  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22370  0028F0  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22371  0028F4  CFDF F072          	movff	indf2,??__doprnt
 22372  0028F8  0E02               	movlw	2
 22373  0028FA  26DE               	addwf	postinc2,f,c
 22374  0028FC  CFDF F073          	movff	indf2,??__doprnt+1
 22375  002900  0E00               	movlw	0
 22376  002902  22DD               	addwfc	postdec2,f,c
 22377  002904  C072  FFD9         	movff	??__doprnt,fsr2l
 22378  002908  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22379  00290C  50DF               	movf	indf2,w,c
 22380  00290E  6F80               	movwf	__doprnt@c& (0+255),b
 22381  002910                     
 22382                           ; BSR set to: 0
 22383                           ;doprnt.c: 805: cp = (char *)&c;
 22384                           
 22385                           ; BSR set to: 0
 22386  002910  0E80               	movlw	low __doprnt@c
 22387  002912  6F7C               	movwf	__doprnt@cp& (0+255),b
 22388  002914  0E00               	movlw	high __doprnt@c
 22389  002916  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;doprnt.c: 806: len = 1;
 22393  002918  0E00               	movlw	0
 22394  00291A  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22395  00291C  0E01               	movlw	1
 22396  00291E  6F7A               	movwf	__doprnt@len& (0+255),b
 22397                           
 22398                           ;doprnt.c: 807: goto dostring;
 22399  002920  D738               	goto	u7990
 22400  002922                     l1547:
 22401                           
 22402                           ; BSR set to: 0
 22403  002922  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22404  002926  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22405  00292A  0100               	movlb	0	; () banked
 22406  00292C  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22407  00292E  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22408  002930                     	if	0	;tblptru may be non-zero
 22409  002930                     	endif
 22410  002930                     	if	0	;tblptru may be non-zero
 22411  002930                     	endif
 22412  002930  0008               	tblrd		*
 22413  002932  CFF5 F080          	movff	tablat,__doprnt@c
 22414  002936  5180               	movf	__doprnt@c& (0+255),w,b
 22415                           
 22416                           ; Switch size 1, requested type "space"
 22417                           ; Number of cases is 5, Range of values is 0 to 115
 22418                           ; switch strategies available:
 22419                           ; Name         Instructions Cycles
 22420                           ; simple_byte           16     9 (average)
 22421                           ;	Chosen strategy is simple_byte
 22422  002938  0A00               	xorlw	0	; case 0
 22423  00293A  B4D8               	btfsc	status,2,c
 22424  00293C  D146               	goto	u8260
 22425  00293E  0A63               	xorlw	99	; case 99
 22426  002940  B4D8               	btfsc	status,2,c
 22427  002942  D7D4               	goto	l1571
 22428  002944  0A07               	xorlw	7	; case 100
 22429  002946  B4D8               	btfsc	status,2,c
 22430  002948  D007               	goto	l1552
 22431  00294A  0A0D               	xorlw	13	; case 105
 22432  00294C  B4D8               	btfsc	status,2,c
 22433  00294E  D004               	goto	l1552
 22434  002950  0A1A               	xorlw	26	; case 115
 22435  002952  B4D8               	btfsc	status,2,c
 22436  002954  D6E0               	goto	l1553
 22437  002956  D7DC               	goto	l1572
 22438  002958                     l1552:
 22439                           
 22440                           ;doprnt.c: 1253: {
 22441                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 22442                           
 22443                           ; BSR set to: 0
 22444  002958  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22445  00295C  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22446  002960  CFDF F072          	movff	indf2,??__doprnt
 22447  002964  0E02               	movlw	2
 22448  002966  26DE               	addwf	postinc2,f,c
 22449  002968  CFDF F073          	movff	indf2,??__doprnt+1
 22450  00296C  0E00               	movlw	0
 22451  00296E  22DD               	addwfc	postdec2,f,c
 22452  002970  C072  FFD9         	movff	??__doprnt,fsr2l
 22453  002974  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22454  002978  CFDE F078          	movff	postinc2,__doprnt@val
 22455  00297C  CFDD F079          	movff	postdec2,__doprnt@val+1
 22456                           
 22457                           ;doprnt.c: 1261: if((int)val < 0) {
 22458  002980  0100               	movlb	0	; () banked
 22459  002982  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 22460  002984  D006               	goto	l1573
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;doprnt.c: 1262: flag |= 0x03;
 22464  002986  0E03               	movlw	3
 22465  002988  1377               	iorwf	__doprnt@flag& (0+255),f,b
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;doprnt.c: 1263: val = -val;
 22469  00298A  6D78               	negf	__doprnt@val& (0+255),b
 22470  00298C  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 22471  00298E  B0D8               	btfsc	status,0,c
 22472  002990  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 22473  002992                     l1573:
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;doprnt.c: 1264: }
 22477                           ;doprnt.c: 1266: }
 22478                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22479                           
 22480                           ; BSR set to: 0
 22481  002992  0E01               	movlw	1
 22482  002994  6F80               	movwf	__doprnt@c& (0+255),b
 22483  002996                     l6375:
 22484                           
 22485                           ; BSR set to: 0
 22486  002996  0E05               	movlw	5
 22487  002998  1980               	xorwf	__doprnt@c& (0+255),w,b
 22488  00299A  B4D8               	btfsc	status,2,c
 22489  00299C  D012               	goto	u8120
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;doprnt.c: 1306: if(val < dpowers[c])
 22493                           
 22494                           ; BSR set to: 0
 22495                           
 22496                           ; BSR set to: 0
 22497  00299E  5180               	movf	__doprnt@c& (0+255),w,b
 22498  0029A0  0D02               	mullw	2
 22499  0029A2  0ED1               	movlw	low _dpowers
 22500  0029A4  24F3               	addwf	prodl,w,c
 22501  0029A6  6EF6               	movwf	tblptrl,c
 22502  0029A8  0E77               	movlw	high _dpowers
 22503  0029AA  20F4               	addwfc	prodh,w,c
 22504  0029AC  6EF7               	movwf	tblptrh,c
 22505  0029AE                     	if	0	;There are less than 3 active tblptr bytes
 22506  0029AE                     	endif
 22507  0029AE  0009               	tblrd		*+
 22508  0029B0  50F5               	movf	tablat,w,c
 22509  0029B2  5D78               	subwf	__doprnt@val& (0+255),w,b
 22510  0029B4  0009               	tblrd		*+
 22511  0029B6  50F5               	movf	tablat,w,c
 22512  0029B8  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 22513  0029BA  A0D8               	btfss	status,0,c
 22514  0029BC  D002               	goto	u8120
 22515                           
 22516                           ; BSR set to: 0
 22517                           
 22518                           ; BSR set to: 0
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;doprnt.c: 1307: break;
 22522  0029BE  2B80               	incf	__doprnt@c& (0+255),f,b
 22523  0029C0  D7EA               	goto	l6375
 22524  0029C2                     u8120:
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;doprnt.c: 1345: if(width && flag & 0x03)
 22528                           
 22529                           ; BSR set to: 0
 22530  0029C2  517E               	movf	__doprnt@width& (0+255),w,b
 22531  0029C4  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22532  0029C6  B4D8               	btfsc	status,2,c
 22533  0029C8  D009               	goto	l1577
 22534                           
 22535                           ; BSR set to: 0
 22536  0029CA  C077  F072         	movff	__doprnt@flag,??__doprnt
 22537  0029CE  0E03               	movlw	3
 22538  0029D0  1772               	andwf	??__doprnt& (0+255),f,b
 22539  0029D2  B4D8               	btfsc	status,2,c
 22540  0029D4  D003               	goto	l1577
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;doprnt.c: 1346: width--;
 22544  0029D6  077E               	decf	__doprnt@width& (0+255),f,b
 22545  0029D8  A0D8               	btfss	status,0,c
 22546  0029DA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22547  0029DC                     l1577:
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;doprnt.c: 1381: if(width > c)
 22551                           
 22552                           ; BSR set to: 0
 22553  0029DC  0E80               	movlw	128
 22554  0029DE  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22555  0029E0  0E7F               	movlw	127
 22556  0029E2  6F72               	movwf	??__doprnt& (0+255),b
 22557  0029E4  517E               	movf	__doprnt@width& (0+255),w,b
 22558  0029E6  5D80               	subwf	__doprnt@c& (0+255),w,b
 22559  0029E8  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22560  0029EA  0A80               	xorlw	128
 22561  0029EC  5972               	subwfb	??__doprnt& (0+255),w,b
 22562  0029EE  B0D8               	btfsc	status,0,c
 22563  0029F0  D007               	goto	l1578
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;doprnt.c: 1382: width -= c;
 22567  0029F2  5180               	movf	__doprnt@c& (0+255),w,b
 22568  0029F4  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22569  0029F6  0E00               	movlw	0
 22570  0029F8  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22571  0029FA  0EFF               	movlw	255
 22572  0029FC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22573  0029FE  D004               	goto	l1579
 22574  002A00                     l1578:
 22575                           
 22576                           ; BSR set to: 0
 22577                           ;doprnt.c: 1383: else
 22578                           ;doprnt.c: 1384: width = 0;
 22579                           
 22580                           ; BSR set to: 0
 22581  002A00  0E00               	movlw	0
 22582  002A02  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22583  002A04  0E00               	movlw	0
 22584  002A06  6F7E               	movwf	__doprnt@width& (0+255),b
 22585  002A08                     l1579:
 22586                           
 22587                           ; BSR set to: 0
 22588                           ;doprnt.c: 1422: {
 22589                           ;doprnt.c: 1424: if(width
 22590                           ;doprnt.c: 1428: )
 22591                           
 22592                           ; BSR set to: 0
 22593  002A08  517E               	movf	__doprnt@width& (0+255),w,b
 22594  002A0A  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22595  002A0C  B4D8               	btfsc	status,2,c
 22596  002A0E  D03A               	goto	u8190
 22597  002A10                     u8160:
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22601                           
 22602                           ; BSR set to: 0
 22603                           
 22604                           ;doprnt.c: 1429: do
 22605  002A10  EE20 F002          	lfsr	2,2
 22606  002A14  516C               	movf	__doprnt@pb& (0+255),w,b
 22607  002A16  26D9               	addwf	fsr2l,f,c
 22608  002A18  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22609  002A1A  22DA               	addwfc	fsr2h,f,c
 22610  002A1C  50DE               	movf	postinc2,w,c
 22611  002A1E  10DE               	iorwf	postinc2,w,c
 22612  002A20  B4D8               	btfsc	status,2,c
 22613  002A22  D013               	goto	l1582
 22614                           
 22615                           ; BSR set to: 0
 22616  002A24  EE20 F002          	lfsr	2,2
 22617  002A28  516C               	movf	__doprnt@pb& (0+255),w,b
 22618  002A2A  26D9               	addwf	fsr2l,f,c
 22619  002A2C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22620  002A2E  22DA               	addwfc	fsr2h,f,c
 22621  002A30  D801               	call	u8188
 22622  002A32  D020               	goto	l1583
 22623  002A34                     u8188:
 22624  002A34  0005               	push	
 22625  002A36  6EFA               	movwf	pclath,c
 22626  002A38  50DE               	movf	postinc2,w,c
 22627  002A3A  6EFD               	movwf	tosl,c
 22628  002A3C  50DE               	movf	postinc2,w,c
 22629  002A3E  6EFE               	movwf	tosh,c
 22630  002A40  50F8               	movf	tblptru,w,c
 22631  002A42  6EFF               	movwf	tosu,c
 22632  002A44  50FA               	movf	pclath,w,c
 22633  002A46  0E20               	movlw	32
 22634  002A48  0012               	return		;indir
 22635  002A4A                     l1582:
 22636  002A4A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22637  002A4E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22638  002A52  CFDE F072          	movff	postinc2,??__doprnt
 22639  002A56  CFDD F073          	movff	postdec2,??__doprnt+1
 22640  002A5A  C072  FFD9         	movff	??__doprnt,fsr2l
 22641  002A5E  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22642  002A62  0E20               	movlw	32
 22643  002A64  6EDF               	movwf	indf2,c
 22644  002A66  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22645  002A6A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22646  002A6E  2ADE               	incf	postinc2,f,c
 22647  002A70  0E00               	movlw	0
 22648  002A72  22DD               	addwfc	postdec2,f,c
 22649  002A74                     l1583:
 22650                           
 22651                           ;doprnt.c: 1431: while(--width);
 22652  002A74  0100               	movlb	0	; () banked
 22653  002A76  077E               	decf	__doprnt@width& (0+255),f,b
 22654  002A78  A0D8               	btfss	status,0,c
 22655  002A7A  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22656  002A7C  517E               	movf	__doprnt@width& (0+255),w,b
 22657  002A7E  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22658  002A80  A4D8               	btfss	status,2,c
 22659  002A82  D7C6               	goto	u8160
 22660  002A84                     u8190:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;doprnt.c: 1438: if(flag & 0x03)
 22664                           
 22665                           ; BSR set to: 0
 22666                           
 22667                           ; BSR set to: 0
 22668  002A84  C077  F072         	movff	__doprnt@flag,??__doprnt
 22669  002A88  0E03               	movlw	3
 22670  002A8A  1772               	andwf	??__doprnt& (0+255),f,b
 22671  002A8C  B4D8               	btfsc	status,2,c
 22672  002A8E  D032               	goto	l1587
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 22676  002A90  EE20 F002          	lfsr	2,2
 22677  002A94  516C               	movf	__doprnt@pb& (0+255),w,b
 22678  002A96  26D9               	addwf	fsr2l,f,c
 22679  002A98  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22680  002A9A  22DA               	addwfc	fsr2h,f,c
 22681  002A9C  50DE               	movf	postinc2,w,c
 22682  002A9E  10DE               	iorwf	postinc2,w,c
 22683  002AA0  B4D8               	btfsc	status,2,c
 22684  002AA2  D013               	goto	l1586
 22685                           
 22686                           ; BSR set to: 0
 22687  002AA4  EE20 F002          	lfsr	2,2
 22688  002AA8  516C               	movf	__doprnt@pb& (0+255),w,b
 22689  002AAA  26D9               	addwf	fsr2l,f,c
 22690  002AAC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22691  002AAE  22DA               	addwfc	fsr2h,f,c
 22692  002AB0  D801               	call	u8228
 22693  002AB2  D020               	goto	l1587
 22694  002AB4                     u8228:
 22695  002AB4  0005               	push	
 22696  002AB6  6EFA               	movwf	pclath,c
 22697  002AB8  50DE               	movf	postinc2,w,c
 22698  002ABA  6EFD               	movwf	tosl,c
 22699  002ABC  50DE               	movf	postinc2,w,c
 22700  002ABE  6EFE               	movwf	tosh,c
 22701  002AC0  50F8               	movf	tblptru,w,c
 22702  002AC2  6EFF               	movwf	tosu,c
 22703  002AC4  50FA               	movf	pclath,w,c
 22704  002AC6  0E2D               	movlw	45
 22705  002AC8  0012               	return		;indir
 22706  002ACA                     l1586:
 22707  002ACA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22708  002ACE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22709  002AD2  CFDE F072          	movff	postinc2,??__doprnt
 22710  002AD6  CFDD F073          	movff	postdec2,??__doprnt+1
 22711  002ADA  C072  FFD9         	movff	??__doprnt,fsr2l
 22712  002ADE  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22713  002AE2  0E2D               	movlw	45
 22714  002AE4  6EDF               	movwf	indf2,c
 22715  002AE6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22716  002AEA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22717  002AEE  2ADE               	incf	postinc2,f,c
 22718  002AF0  0E00               	movlw	0
 22719  002AF2  22DD               	addwfc	postdec2,f,c
 22720  002AF4                     l1587:
 22721                           
 22722                           ;doprnt.c: 1469: }
 22723                           ;doprnt.c: 1472: prec = c;
 22724  002AF4  C080  F076         	movff	__doprnt@c,__doprnt@prec
 22725                           
 22726                           ;doprnt.c: 1474: while(prec--) {
 22727  002AF8  D056               	goto	l1591
 22728  002AFA                     
 22729                           ;doprnt.c: 1478: {
 22730                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22731  002AFA  0100               	movlb	0	; () banked
 22732  002AFC  5176               	movf	__doprnt@prec& (0+255),w,b
 22733  002AFE  0D02               	mullw	2
 22734  002B00  0ED1               	movlw	low _dpowers
 22735  002B02  24F3               	addwf	prodl,w,c
 22736  002B04  6EF6               	movwf	tblptrl,c
 22737  002B06  0E77               	movlw	high _dpowers
 22738  002B08  20F4               	addwfc	prodh,w,c
 22739  002B0A  6EF7               	movwf	tblptrh,c
 22740  002B0C                     	if	0	;There are less than 3 active tblptr bytes
 22741  002B0C                     	endif
 22742  002B0C  0009               	tblrd		*+
 22743  002B0E  CFF5 F062          	movff	tablat,___lwdiv@divisor
 22744  002B12  000A               	tblrd		*-
 22745  002B14  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 22746  002B18  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 22747  002B1C  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 22748  002B20  EC99  F02C         	call	___lwdiv
 22749  002B24  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 22750  002B28  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 22751  002B2C  0E00               	movlw	0
 22752  002B2E  0100               	movlb	0	; () banked
 22753  002B30  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 22754  002B32  0E0A               	movlw	10
 22755  002B34  6F69               	movwf	___lwmod@divisor& (0+255),b
 22756  002B36  EC32  F02D         	call	___lwmod	;wreg free
 22757  002B3A  0100               	movlb	0	; () banked
 22758  002B3C  5167               	movf	?___lwmod& (0+255),w,b
 22759  002B3E  0F30               	addlw	48
 22760  002B40  6F80               	movwf	__doprnt@c& (0+255),b
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;doprnt.c: 1523: }
 22764                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 22765  002B42  EE20 F002          	lfsr	2,2
 22766  002B46  516C               	movf	__doprnt@pb& (0+255),w,b
 22767  002B48  26D9               	addwf	fsr2l,f,c
 22768  002B4A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22769  002B4C  22DA               	addwfc	fsr2h,f,c
 22770  002B4E  50DE               	movf	postinc2,w,c
 22771  002B50  10DE               	iorwf	postinc2,w,c
 22772  002B52  B4D8               	btfsc	status,2,c
 22773  002B54  D013               	goto	l1590
 22774                           
 22775                           ; BSR set to: 0
 22776  002B56  EE20 F002          	lfsr	2,2
 22777  002B5A  516C               	movf	__doprnt@pb& (0+255),w,b
 22778  002B5C  26D9               	addwf	fsr2l,f,c
 22779  002B5E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22780  002B60  22DA               	addwfc	fsr2h,f,c
 22781  002B62  D801               	call	u8248
 22782  002B64  D020               	goto	l1591
 22783  002B66                     u8248:
 22784  002B66  0005               	push	
 22785  002B68  6EFA               	movwf	pclath,c
 22786  002B6A  50DE               	movf	postinc2,w,c
 22787  002B6C  6EFD               	movwf	tosl,c
 22788  002B6E  50DE               	movf	postinc2,w,c
 22789  002B70  6EFE               	movwf	tosh,c
 22790  002B72  50F8               	movf	tblptru,w,c
 22791  002B74  6EFF               	movwf	tosu,c
 22792  002B76  50FA               	movf	pclath,w,c
 22793  002B78  5180               	movf	__doprnt@c& (0+255),w,b
 22794  002B7A  0012               	return		;indir
 22795  002B7C                     l1590:
 22796  002B7C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22797  002B80  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22798  002B84  CFDE F072          	movff	postinc2,??__doprnt
 22799  002B88  CFDD F073          	movff	postdec2,??__doprnt+1
 22800  002B8C  C072  FFD9         	movff	??__doprnt,fsr2l
 22801  002B90  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22802  002B94  C080  FFDF         	movff	__doprnt@c,indf2
 22803  002B98  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22804  002B9C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22805  002BA0  2ADE               	incf	postinc2,f,c
 22806  002BA2  0E00               	movlw	0
 22807  002BA4  22DD               	addwfc	postdec2,f,c
 22808  002BA6                     l1591:
 22809  002BA6  0100               	movlb	0	; () banked
 22810  002BA8  0776               	decf	__doprnt@prec& (0+255),f,b
 22811  002BAA  2976               	incf	__doprnt@prec& (0+255),w,b
 22812  002BAC  A4D8               	btfss	status,2,c
 22813  002BAE  D7A5               	goto	l1589
 22814  002BB0                     u8250:
 22815                           
 22816                           ; BSR set to: 0
 22817                           
 22818                           ; BSR set to: 0
 22819  002BB0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22820  002BB4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22821  002BB8  0100               	movlb	0	; () banked
 22822  002BBA  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22823  002BBC  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22824  002BBE                     	if	0	;tblptru may be non-zero
 22825  002BBE                     	endif
 22826  002BBE                     	if	0	;tblptru may be non-zero
 22827  002BBE                     	endif
 22828  002BBE  0008               	tblrd		*
 22829  002BC0  CFF5 F080          	movff	tablat,__doprnt@c
 22830  002BC4  5180               	movf	__doprnt@c& (0+255),w,b
 22831  002BC6  A4D8               	btfss	status,2,c
 22832  002BC8  D527               	goto	l1540
 22833  002BCA                     u8260:
 22834                           
 22835                           ;doprnt.c: 1540: return 0;
 22836                           
 22837                           ; BSR set to: 0
 22838                           
 22839                           ;doprnt.c: 1525: }
 22840                           ;doprnt.c: 1533: }
 22841                           ;doprnt.c: 1535: alldone:
 22842                           
 22843                           ; BSR set to: 0
 22844  002BCA  0E00               	movlw	0
 22845  002BCC  0100               	movlb	0	; () banked
 22846  002BCE  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 22847  002BD0  0E00               	movlw	0
 22848  002BD2  6F6C               	movwf	?__doprnt& (0+255),b
 22849  002BD4  0012               	return	
 22850  002BD6                     __end_of__doprnt:
 22851                           	opt stack 0
 22852                           tosu	equ	0xFFF
 22853                           tosh	equ	0xFFE
 22854                           tosl	equ	0xFFD
 22855                           pclath	equ	0xFFA
 22856                           tblptru	equ	0xFF8
 22857                           tblptrh	equ	0xFF7
 22858                           tblptrl	equ	0xFF6
 22859                           tablat	equ	0xFF5
 22860                           prodh	equ	0xFF4
 22861                           prodl	equ	0xFF3
 22862                           intcon	equ	0xFF2
 22863                           intcon2	equ	0xFF1
 22864                           intcon3	equ	0xFF0
 22865                           indf0	equ	0xFEF
 22866                           postinc0	equ	0xFEE
 22867                           fsr0h	equ	0xFEA
 22868                           fsr0l	equ	0xFE9
 22869                           wreg	equ	0xFE8
 22870                           indf1	equ	0xFE7
 22871                           postdec1	equ	0xFE5
 22872                           fsr1h	equ	0xFE2
 22873                           fsr1l	equ	0xFE1
 22874                           indf2	equ	0xFDF
 22875                           postinc2	equ	0xFDE
 22876                           postdec2	equ	0xFDD
 22877                           fsr2h	equ	0xFDA
 22878                           fsr2l	equ	0xFD9
 22879                           status	equ	0xFD8
 22880                           
 22881 ;; *************** function _putch *****************
 22882 ;; Defined at:
 22883 ;;		line 35 in file "src/USART.h"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  c               1    wreg     unsigned char 
 22886 ;; Auto vars:     Size  Location     Type
 22887 ;;  c               1    0[BANK0 ] unsigned char 
 22888 ;; Return value:  Size  Location     Type
 22889 ;;                  1    wreg      void 
 22890 ;; Registers used:
 22891 ;;		wreg
 22892 ;; Tracked objects:
 22893 ;;		On entry : 0/0
 22894 ;;		On exit  : 0/0
 22895 ;;		Unchanged: 0/0
 22896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22897 ;;      Params:         0       0       0       0       0       0       0       0       0
 22898 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22900 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22901 ;;Total ram usage:        1 bytes
 22902 ;; Hardware stack levels used:    1
 22903 ;; Hardware stack levels required when called:    6
 22904 ;; This function calls:
 22905 ;;		Nothing
 22906 ;; This function is called by:
 22907 ;;		_printf
 22908 ;;		__doprnt
 22909 ;; This function uses a non-reentrant model
 22910 ;;
 22911                           
 22912                           	psect	text49
 22913  005EC8                     __ptext49:
 22914                           	opt stack 0
 22915  005EC8                     _putch:
 22916                           	opt stack 22
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;incstack = 0
 22920                           ;putch@c stored from wreg
 22921  005EC8  0100               	movlb	0	; () banked
 22922  005ECA  6F60               	movwf	putch@c& (0+255),b
 22923  005ECC                     
 22924                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 22925  005ECC  A2AC               	btfss	4012,1,c	;volatile
 22926  005ECE  D7FE               	goto	l6167
 22927                           
 22928                           ;USART.h: 38: TXREG = c;
 22929  005ED0  C060  FFAD         	movff	putch@c,4013	;volatile
 22930  005ED4  0012               	return		;funcret
 22931  005ED6                     __end_of_putch:
 22932                           	opt stack 0
 22933                           tosu	equ	0xFFF
 22934                           tosh	equ	0xFFE
 22935                           tosl	equ	0xFFD
 22936                           pclath	equ	0xFFA
 22937                           tblptru	equ	0xFF8
 22938                           tblptrh	equ	0xFF7
 22939                           tblptrl	equ	0xFF6
 22940                           tablat	equ	0xFF5
 22941                           prodh	equ	0xFF4
 22942                           prodl	equ	0xFF3
 22943                           intcon	equ	0xFF2
 22944                           intcon2	equ	0xFF1
 22945                           intcon3	equ	0xFF0
 22946                           indf0	equ	0xFEF
 22947                           postinc0	equ	0xFEE
 22948                           fsr0h	equ	0xFEA
 22949                           fsr0l	equ	0xFE9
 22950                           wreg	equ	0xFE8
 22951                           indf1	equ	0xFE7
 22952                           postdec1	equ	0xFE5
 22953                           fsr1h	equ	0xFE2
 22954                           fsr1l	equ	0xFE1
 22955                           indf2	equ	0xFDF
 22956                           postinc2	equ	0xFDE
 22957                           postdec2	equ	0xFDD
 22958                           fsr2h	equ	0xFDA
 22959                           fsr2l	equ	0xFD9
 22960                           status	equ	0xFD8
 22961                           
 22962 ;; *************** function _isdigit *****************
 22963 ;; Defined at:
 22964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 22965 ;; Parameters:    Size  Location     Type
 22966 ;;  c               1    wreg     unsigned char 
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;  c               1    2[BANK0 ] unsigned char 
 22969 ;; Return value:  Size  Location     Type
 22970 ;;		None               void
 22971 ;; Registers used:
 22972 ;;		wreg, status,2, status,0
 22973 ;; Tracked objects:
 22974 ;;		On entry : 0/0
 22975 ;;		On exit  : 0/0
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22978 ;;      Params:         0       0       0       0       0       0       0       0       0
 22979 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22980 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22981 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22982 ;;Total ram usage:        3 bytes
 22983 ;; Hardware stack levels used:    1
 22984 ;; Hardware stack levels required when called:    6
 22985 ;; This function calls:
 22986 ;;		Nothing
 22987 ;; This function is called by:
 22988 ;;		__doprnt
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text50
 22993  005E12                     __ptext50:
 22994                           	opt stack 0
 22995  005E12                     _isdigit:
 22996                           	opt stack 22
 22997                           
 22998                           ;incstack = 0
 22999                           ;isdigit@c stored from wreg
 23000  005E12  0100               	movlb	0	; () banked
 23001  005E14  6F62               	movwf	isdigit@c& (0+255),b
 23002  005E16  0E00               	movlw	0
 23003  005E18  0100               	movlb	0	; () banked
 23004  005E1A  6F61               	movwf	_isdigit$1991& (0+255),b
 23005                           
 23006                           ; BSR set to: 0
 23007  005E1C  0E3A               	movlw	58
 23008  005E1E  6162               	cpfslt	isdigit@c& (0+255),b
 23009  005E20  D005               	goto	l1924
 23010                           
 23011                           ; BSR set to: 0
 23012  005E22  0E2F               	movlw	47
 23013  005E24  6562               	cpfsgt	isdigit@c& (0+255),b
 23014  005E26  D002               	goto	l1924
 23015                           
 23016                           ; BSR set to: 0
 23017  005E28  0E01               	movlw	1
 23018  005E2A  6F61               	movwf	_isdigit$1991& (0+255),b
 23019  005E2C                     l1924:
 23020                           
 23021                           ; BSR set to: 0
 23022                           
 23023                           ; BSR set to: 0
 23024  005E2C  C061  F060         	movff	_isdigit$1991,??_isdigit
 23025  005E30  3160               	rrcf	??_isdigit& (0+255),w,b
 23026  005E32  0012               	return	
 23027  005E34                     __end_of_isdigit:
 23028                           	opt stack 0
 23029                           tosu	equ	0xFFF
 23030                           tosh	equ	0xFFE
 23031                           tosl	equ	0xFFD
 23032                           pclath	equ	0xFFA
 23033                           tblptru	equ	0xFF8
 23034                           tblptrh	equ	0xFF7
 23035                           tblptrl	equ	0xFF6
 23036                           tablat	equ	0xFF5
 23037                           prodh	equ	0xFF4
 23038                           prodl	equ	0xFF3
 23039                           intcon	equ	0xFF2
 23040                           intcon2	equ	0xFF1
 23041                           intcon3	equ	0xFF0
 23042                           indf0	equ	0xFEF
 23043                           postinc0	equ	0xFEE
 23044                           fsr0h	equ	0xFEA
 23045                           fsr0l	equ	0xFE9
 23046                           wreg	equ	0xFE8
 23047                           indf1	equ	0xFE7
 23048                           postdec1	equ	0xFE5
 23049                           fsr1h	equ	0xFE2
 23050                           fsr1l	equ	0xFE1
 23051                           indf2	equ	0xFDF
 23052                           postinc2	equ	0xFDE
 23053                           postdec2	equ	0xFDD
 23054                           fsr2h	equ	0xFDA
 23055                           fsr2l	equ	0xFD9
 23056                           status	equ	0xFD8
 23057                           
 23058 ;; *************** function ___wmul *****************
 23059 ;; Defined at:
 23060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 23061 ;; Parameters:    Size  Location     Type
 23062 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23063 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;  product         2    4[BANK0 ] unsigned int 
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  2    0[BANK0 ] unsigned int 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0, prodl, prodh
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23075 ;;      Params:         0       4       0       0       0       0       0       0       0
 23076 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23078 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23079 ;;Total ram usage:        6 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:    6
 23082 ;; This function calls:
 23083 ;;		Nothing
 23084 ;; This function is called by:
 23085 ;;		_enviaDadosWifi
 23086 ;;		_main
 23087 ;;		__doprnt
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text51
 23092  005D52                     __ptext51:
 23093                           	opt stack 0
 23094  005D52                     ___wmul:
 23095                           	opt stack 22
 23096                           
 23097                           ; BSR set to: 0
 23098                           ;incstack = 0
 23099  005D52  0100               	movlb	0	; () banked
 23100  005D54  5160               	movf	___wmul@multiplier& (0+255),w,b
 23101  005D56  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23102  005D58  CFF3 F064          	movff	prodl,___wmul@product
 23103  005D5C  CFF4 F065          	movff	prodh,___wmul@product+1
 23104  005D60  5160               	movf	___wmul@multiplier& (0+255),w,b
 23105  005D62  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23106  005D64  50F3               	movf	prodl,w,c
 23107  005D66  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23108  005D68  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23109  005D6A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23110  005D6C  50F3               	movf	prodl,w,c
 23111  005D6E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23112                           
 23113                           ; BSR set to: 0
 23114  005D70  C064  F060         	movff	___wmul@product,?___wmul
 23115  005D74  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23116  005D78  0012               	return	
 23117  005D7A                     __end_of___wmul:
 23118                           	opt stack 0
 23119                           tosu	equ	0xFFF
 23120                           tosh	equ	0xFFE
 23121                           tosl	equ	0xFFD
 23122                           pclath	equ	0xFFA
 23123                           tblptru	equ	0xFF8
 23124                           tblptrh	equ	0xFF7
 23125                           tblptrl	equ	0xFF6
 23126                           tablat	equ	0xFF5
 23127                           prodh	equ	0xFF4
 23128                           prodl	equ	0xFF3
 23129                           intcon	equ	0xFF2
 23130                           intcon2	equ	0xFF1
 23131                           intcon3	equ	0xFF0
 23132                           indf0	equ	0xFEF
 23133                           postinc0	equ	0xFEE
 23134                           fsr0h	equ	0xFEA
 23135                           fsr0l	equ	0xFE9
 23136                           wreg	equ	0xFE8
 23137                           indf1	equ	0xFE7
 23138                           postdec1	equ	0xFE5
 23139                           fsr1h	equ	0xFE2
 23140                           fsr1l	equ	0xFE1
 23141                           indf2	equ	0xFDF
 23142                           postinc2	equ	0xFDE
 23143                           postdec2	equ	0xFDD
 23144                           fsr2h	equ	0xFDA
 23145                           fsr2l	equ	0xFD9
 23146                           status	equ	0xFD8
 23147                           
 23148 ;; *************** function ___lwmod *****************
 23149 ;; Defined at:
 23150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;  dividend        2    7[BANK0 ] unsigned int 
 23153 ;;  divisor         2    9[BANK0 ] unsigned int 
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;  counter         1   11[BANK0 ] unsigned char 
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  2    7[BANK0 ] unsigned int 
 23158 ;; Registers used:
 23159 ;;		wreg, status,2, status,0
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23165 ;;      Params:         0       4       0       0       0       0       0       0       0
 23166 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23168 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23169 ;;Total ram usage:        5 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:    6
 23172 ;; This function calls:
 23173 ;;		Nothing
 23174 ;; This function is called by:
 23175 ;;		__doprnt
 23176 ;; This function uses a non-reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text52
 23180  005A64                     __ptext52:
 23181                           	opt stack 0
 23182  005A64                     ___lwmod:
 23183                           	opt stack 22
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;incstack = 0
 23187  005A64  0100               	movlb	0	; () banked
 23188  005A66  5169               	movf	___lwmod@divisor& (0+255),w,b
 23189  005A68  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 23190  005A6A  B4D8               	btfsc	status,2,c
 23191  005A6C  D018               	goto	l2018
 23192                           
 23193                           ; BSR set to: 0
 23194  005A6E  0E01               	movlw	1
 23195  005A70  6F6B               	movwf	___lwmod@counter& (0+255),b
 23196  005A72  D004               	goto	l2013
 23197  005A74                     
 23198                           ; BSR set to: 0
 23199                           
 23200                           ; BSR set to: 0
 23201  005A74  90D8               	bcf	status,0,c
 23202  005A76  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 23203  005A78  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 23204  005A7A  2B6B               	incf	___lwmod@counter& (0+255),f,b
 23205  005A7C                     l2013:
 23206                           
 23207                           ; BSR set to: 0
 23208                           
 23209                           ; BSR set to: 0
 23210  005A7C  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 23211  005A7E  D7FA               	goto	l2014
 23212  005A80                     u7800:
 23213                           
 23214                           ; BSR set to: 0
 23215                           
 23216                           ; BSR set to: 0
 23217                           
 23218                           ; BSR set to: 0
 23219  005A80  5169               	movf	___lwmod@divisor& (0+255),w,b
 23220  005A82  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 23221  005A84  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23222  005A86  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 23223  005A88  A0D8               	btfss	status,0,c
 23224  005A8A  D004               	goto	l2017
 23225                           
 23226                           ; BSR set to: 0
 23227  005A8C  5169               	movf	___lwmod@divisor& (0+255),w,b
 23228  005A8E  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 23229  005A90  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23230  005A92  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 23231  005A94                     l2017:
 23232                           
 23233                           ; BSR set to: 0
 23234                           
 23235                           ; BSR set to: 0
 23236  005A94  90D8               	bcf	status,0,c
 23237  005A96  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 23238  005A98  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 23239                           
 23240                           ; BSR set to: 0
 23241  005A9A  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 23242  005A9C  D7F1               	goto	u7800
 23243  005A9E                     l2018:
 23244                           
 23245                           ; BSR set to: 0
 23246                           
 23247                           ; BSR set to: 0
 23248  005A9E  C067  F067         	movff	___lwmod@dividend,?___lwmod
 23249  005AA2  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 23250                           
 23251                           ; BSR set to: 0
 23252  005AA6  0012               	return		;funcret
 23253  005AA8                     __end_of___lwmod:
 23254                           	opt stack 0
 23255                           tosu	equ	0xFFF
 23256                           tosh	equ	0xFFE
 23257                           tosl	equ	0xFFD
 23258                           pclath	equ	0xFFA
 23259                           tblptru	equ	0xFF8
 23260                           tblptrh	equ	0xFF7
 23261                           tblptrl	equ	0xFF6
 23262                           tablat	equ	0xFF5
 23263                           prodh	equ	0xFF4
 23264                           prodl	equ	0xFF3
 23265                           intcon	equ	0xFF2
 23266                           intcon2	equ	0xFF1
 23267                           intcon3	equ	0xFF0
 23268                           indf0	equ	0xFEF
 23269                           postinc0	equ	0xFEE
 23270                           fsr0h	equ	0xFEA
 23271                           fsr0l	equ	0xFE9
 23272                           wreg	equ	0xFE8
 23273                           indf1	equ	0xFE7
 23274                           postdec1	equ	0xFE5
 23275                           fsr1h	equ	0xFE2
 23276                           fsr1l	equ	0xFE1
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           fsr2h	equ	0xFDA
 23281                           fsr2l	equ	0xFD9
 23282                           status	equ	0xFD8
 23283                           
 23284 ;; *************** function ___lwdiv *****************
 23285 ;; Defined at:
 23286 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 23287 ;; Parameters:    Size  Location     Type
 23288 ;;  dividend        2    0[BANK0 ] unsigned int 
 23289 ;;  divisor         2    2[BANK0 ] unsigned int 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;  quotient        2    4[BANK0 ] unsigned int 
 23292 ;;  counter         1    6[BANK0 ] unsigned char 
 23293 ;; Return value:  Size  Location     Type
 23294 ;;                  2    0[BANK0 ] unsigned int 
 23295 ;; Registers used:
 23296 ;;		wreg, status,2, status,0
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/0
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23302 ;;      Params:         0       4       0       0       0       0       0       0       0
 23303 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23305 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23306 ;;Total ram usage:        7 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:    6
 23309 ;; This function calls:
 23310 ;;		Nothing
 23311 ;; This function is called by:
 23312 ;;		__doprnt
 23313 ;; This function uses a non-reentrant model
 23314 ;;
 23315                           
 23316                           	psect	text53
 23317  005932                     __ptext53:
 23318                           	opt stack 0
 23319  005932                     ___lwdiv:
 23320                           	opt stack 22
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;incstack = 0
 23324  005932  0E00               	movlw	0
 23325  005934  0100               	movlb	0	; () banked
 23326  005936  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 23327  005938  0E00               	movlw	0
 23328  00593A  6F64               	movwf	___lwdiv@quotient& (0+255),b
 23329                           
 23330                           ; BSR set to: 0
 23331  00593C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23332  00593E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 23333  005940  B4D8               	btfsc	status,2,c
 23334  005942  D01C               	goto	l2008
 23335                           
 23336                           ; BSR set to: 0
 23337  005944  0E01               	movlw	1
 23338  005946  6F66               	movwf	___lwdiv@counter& (0+255),b
 23339  005948  D004               	goto	l2003
 23340  00594A                     
 23341                           ; BSR set to: 0
 23342                           
 23343                           ; BSR set to: 0
 23344  00594A  90D8               	bcf	status,0,c
 23345  00594C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 23346  00594E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 23347  005950  2B66               	incf	___lwdiv@counter& (0+255),f,b
 23348  005952                     l2003:
 23349                           
 23350                           ; BSR set to: 0
 23351                           
 23352                           ; BSR set to: 0
 23353  005952  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 23354  005954  D7FA               	goto	l2004
 23355  005956                     u7770:
 23356                           
 23357                           ; BSR set to: 0
 23358                           
 23359                           ; BSR set to: 0
 23360                           
 23361                           ; BSR set to: 0
 23362  005956  90D8               	bcf	status,0,c
 23363  005958  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 23364  00595A  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 23365                           
 23366                           ; BSR set to: 0
 23367  00595C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23368  00595E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 23369  005960  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23370  005962  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 23371  005964  A0D8               	btfss	status,0,c
 23372  005966  D005               	goto	l2007
 23373                           
 23374                           ; BSR set to: 0
 23375  005968  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23376  00596A  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 23377  00596C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23378  00596E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 23379                           
 23380                           ; BSR set to: 0
 23381  005970  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 23382  005972                     l2007:
 23383                           
 23384                           ; BSR set to: 0
 23385                           
 23386                           ; BSR set to: 0
 23387  005972  90D8               	bcf	status,0,c
 23388  005974  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 23389  005976  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 23390                           
 23391                           ; BSR set to: 0
 23392  005978  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 23393  00597A  D7ED               	goto	u7770
 23394  00597C                     l2008:
 23395                           
 23396                           ; BSR set to: 0
 23397                           
 23398                           ; BSR set to: 0
 23399  00597C  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 23400  005980  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23401                           
 23402                           ; BSR set to: 0
 23403  005984  0012               	return		;funcret
 23404  005986                     __end_of___lwdiv:
 23405                           	opt stack 0
 23406                           tosu	equ	0xFFF
 23407                           tosh	equ	0xFFE
 23408                           tosl	equ	0xFFD
 23409                           pclath	equ	0xFFA
 23410                           tblptru	equ	0xFF8
 23411                           tblptrh	equ	0xFF7
 23412                           tblptrl	equ	0xFF6
 23413                           tablat	equ	0xFF5
 23414                           prodh	equ	0xFF4
 23415                           prodl	equ	0xFF3
 23416                           intcon	equ	0xFF2
 23417                           intcon2	equ	0xFF1
 23418                           intcon3	equ	0xFF0
 23419                           indf0	equ	0xFEF
 23420                           postinc0	equ	0xFEE
 23421                           fsr0h	equ	0xFEA
 23422                           fsr0l	equ	0xFE9
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postdec1	equ	0xFE5
 23426                           fsr1h	equ	0xFE2
 23427                           fsr1l	equ	0xFE1
 23428                           indf2	equ	0xFDF
 23429                           postinc2	equ	0xFDE
 23430                           postdec2	equ	0xFDD
 23431                           fsr2h	equ	0xFDA
 23432                           fsr2l	equ	0xFD9
 23433                           status	equ	0xFD8
 23434                           
 23435 ;; *************** function _atualizaLCD *****************
 23436 ;; Defined at:
 23437 ;;		line 159 in file "src/lcd.h"
 23438 ;; Parameters:    Size  Location     Type
 23439 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 23440 ;;		 -> line1(21), 
 23441 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 23442 ;;		 -> line2(21), 
 23443 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 23444 ;;		 -> line3(21), 
 23445 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 23446 ;;		 -> line4(21), 
 23447 ;; Auto vars:     Size  Location     Type
 23448 ;;  i               1   16[BANK0 ] unsigned char 
 23449 ;; Return value:  Size  Location     Type
 23450 ;;                  1    wreg      void 
 23451 ;; Registers used:
 23452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23453 ;; Tracked objects:
 23454 ;;		On entry : 0/0
 23455 ;;		On exit  : 0/0
 23456 ;;		Unchanged: 0/0
 23457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23458 ;;      Params:         0       8       0       0       0       0       0       0       0
 23459 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23461 ;;      Totals:         0       9       0       0       0       0       0       0       0
 23462 ;;Total ram usage:        9 bytes
 23463 ;; Hardware stack levels used:    1
 23464 ;; Hardware stack levels required when called:    9
 23465 ;; This function calls:
 23466 ;;		_Lcd_Set_Cursor
 23467 ;;		_Lcd_Write_String
 23468 ;; This function is called by:
 23469 ;;		_alterarConfigWifi
 23470 ;;		_main
 23471 ;; This function uses a non-reentrant model
 23472 ;;
 23473                           
 23474                           	psect	text54
 23475  004E28                     __ptext54:
 23476                           	opt stack 0
 23477  004E28                     _atualizaLCD:
 23478                           	opt stack 21
 23479                           
 23480                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;incstack = 0
 23484  004E28  0E01               	movlw	1
 23485  004E2A  0100               	movlb	0	; () banked
 23486  004E2C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23487  004E2E  0E01               	movlw	1
 23488  004E30  EC77  F027         	call	_Lcd_Set_Cursor
 23489                           
 23490                           ;lcd.h: 163: Lcd_Write_String(line1);
 23491  004E34  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 23492  004E38  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 23493  004E3C  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23494                           
 23495                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 23496  004E40  0E01               	movlw	1
 23497  004E42  0100               	movlb	0	; () banked
 23498  004E44  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23499  004E46  0E02               	movlw	2
 23500  004E48  EC77  F027         	call	_Lcd_Set_Cursor
 23501                           
 23502                           ;lcd.h: 165: Lcd_Write_String(line2);
 23503  004E4C  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 23504  004E50  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 23505  004E54  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23506                           
 23507                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 23508  004E58  0E00               	movlw	0
 23509  004E5A  0100               	movlb	0	; () banked
 23510  004E5C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23511  004E5E  0E03               	movlw	3
 23512  004E60  EC77  F027         	call	_Lcd_Set_Cursor
 23513                           
 23514                           ;lcd.h: 167: Lcd_Write_String(line3);
 23515  004E64  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 23516  004E68  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 23517  004E6C  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23518                           
 23519                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 23520  004E70  0E00               	movlw	0
 23521  004E72  0100               	movlb	0	; () banked
 23522  004E74  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23523  004E76  0E04               	movlw	4
 23524  004E78  EC77  F027         	call	_Lcd_Set_Cursor
 23525                           
 23526                           ;lcd.h: 169: Lcd_Write_String(line4);
 23527  004E7C  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 23528  004E80  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 23529  004E84  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23530                           
 23531                           ;lcd.h: 171: char i = 0;
 23532  004E88  0E00               	movlw	0
 23533  004E8A  0100               	movlb	0	; () banked
 23534  004E8C  6F70               	movwf	atualizaLCD@i& (0+255),b
 23535                           
 23536                           ; BSR set to: 0
 23537                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 23538  004E8E  0E00               	movlw	0
 23539  004E90  6F70               	movwf	atualizaLCD@i& (0+255),b
 23540  004E92                     l6697:
 23541                           
 23542                           ; BSR set to: 0
 23543  004E92  0E13               	movlw	19
 23544  004E94  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 23545  004E96  D001               	goto	l260
 23546  004E98  0012               	return	
 23547  004E9A                     l260:
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;lcd.h: 173: line1[i] = ' ';
 23551                           
 23552                           ; BSR set to: 0
 23553  004E9A  5170               	movf	atualizaLCD@i& (0+255),w,b
 23554  004E9C  0D01               	mullw	1
 23555  004E9E  50F3               	movf	prodl,w,c
 23556  004EA0  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 23557  004EA2  6ED9               	movwf	fsr2l,c
 23558  004EA4  50F4               	movf	prodh,w,c
 23559  004EA6  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 23560  004EA8  6EDA               	movwf	fsr2h,c
 23561  004EAA  0E20               	movlw	32
 23562  004EAC  6EDF               	movwf	indf2,c
 23563                           
 23564                           ;lcd.h: 174: line2[i] = ' ';
 23565  004EAE  5170               	movf	atualizaLCD@i& (0+255),w,b
 23566  004EB0  0D01               	mullw	1
 23567  004EB2  50F3               	movf	prodl,w,c
 23568  004EB4  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 23569  004EB6  6ED9               	movwf	fsr2l,c
 23570  004EB8  50F4               	movf	prodh,w,c
 23571  004EBA  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 23572  004EBC  6EDA               	movwf	fsr2h,c
 23573  004EBE  0E20               	movlw	32
 23574  004EC0  6EDF               	movwf	indf2,c
 23575                           
 23576                           ;lcd.h: 175: line3[i] = ' ';
 23577  004EC2  5170               	movf	atualizaLCD@i& (0+255),w,b
 23578  004EC4  0D01               	mullw	1
 23579  004EC6  50F3               	movf	prodl,w,c
 23580  004EC8  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 23581  004ECA  6ED9               	movwf	fsr2l,c
 23582  004ECC  50F4               	movf	prodh,w,c
 23583  004ECE  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 23584  004ED0  6EDA               	movwf	fsr2h,c
 23585  004ED2  0E20               	movlw	32
 23586  004ED4  6EDF               	movwf	indf2,c
 23587                           
 23588                           ;lcd.h: 176: line4[i] = ' ';
 23589  004ED6  5170               	movf	atualizaLCD@i& (0+255),w,b
 23590  004ED8  0D01               	mullw	1
 23591  004EDA  50F3               	movf	prodl,w,c
 23592  004EDC  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 23593  004EDE  6ED9               	movwf	fsr2l,c
 23594  004EE0  50F4               	movf	prodh,w,c
 23595  004EE2  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 23596  004EE4  6EDA               	movwf	fsr2h,c
 23597  004EE6  0E20               	movlw	32
 23598  004EE8  6EDF               	movwf	indf2,c
 23599                           
 23600                           ; BSR set to: 0
 23601  004EEA  2B70               	incf	atualizaLCD@i& (0+255),f,b
 23602  004EEC  D7D2               	goto	l6697
 23603  004EEE                     __end_of_atualizaLCD:
 23604                           	opt stack 0
 23605                           tosu	equ	0xFFF
 23606                           tosh	equ	0xFFE
 23607                           tosl	equ	0xFFD
 23608                           pclath	equ	0xFFA
 23609                           tblptru	equ	0xFF8
 23610                           tblptrh	equ	0xFF7
 23611                           tblptrl	equ	0xFF6
 23612                           tablat	equ	0xFF5
 23613                           prodh	equ	0xFF4
 23614                           prodl	equ	0xFF3
 23615                           intcon	equ	0xFF2
 23616                           intcon2	equ	0xFF1
 23617                           intcon3	equ	0xFF0
 23618                           indf0	equ	0xFEF
 23619                           postinc0	equ	0xFEE
 23620                           fsr0h	equ	0xFEA
 23621                           fsr0l	equ	0xFE9
 23622                           wreg	equ	0xFE8
 23623                           indf1	equ	0xFE7
 23624                           postdec1	equ	0xFE5
 23625                           fsr1h	equ	0xFE2
 23626                           fsr1l	equ	0xFE1
 23627                           indf2	equ	0xFDF
 23628                           postinc2	equ	0xFDE
 23629                           postdec2	equ	0xFDD
 23630                           fsr2h	equ	0xFDA
 23631                           fsr2l	equ	0xFD9
 23632                           status	equ	0xFD8
 23633                           
 23634 ;; *************** function _Lcd_Write_String *****************
 23635 ;; Defined at:
 23636 ;;		line 137 in file "src/lcd.h"
 23637 ;; Parameters:    Size  Location     Type
 23638 ;;  a               2    4[BANK0 ] PTR unsigned char 
 23639 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 23640 ;; Auto vars:     Size  Location     Type
 23641 ;;  i               1    6[BANK0 ] unsigned char 
 23642 ;; Return value:  Size  Location     Type
 23643 ;;                  1    wreg      void 
 23644 ;; Registers used:
 23645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23646 ;; Tracked objects:
 23647 ;;		On entry : 0/0
 23648 ;;		On exit  : 0/0
 23649 ;;		Unchanged: 0/0
 23650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23651 ;;      Params:         0       2       0       0       0       0       0       0       0
 23652 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23654 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23655 ;;Total ram usage:        3 bytes
 23656 ;; Hardware stack levels used:    1
 23657 ;; Hardware stack levels required when called:    8
 23658 ;; This function calls:
 23659 ;;		_Lcd_Write_Char
 23660 ;; This function is called by:
 23661 ;;		_atualizaLCD
 23662 ;; This function uses a non-reentrant model
 23663 ;;
 23664                           
 23665                           	psect	text55
 23666  005CCC                     __ptext55:
 23667                           	opt stack 0
 23668  005CCC                     _Lcd_Write_String:
 23669                           	opt stack 21
 23670                           
 23671                           ;lcd.h: 138: unsigned char i = 0;
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;incstack = 0
 23675  005CCC  0E00               	movlw	0
 23676  005CCE  0100               	movlb	0	; () banked
 23677  005CD0  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23678                           
 23679                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 23680  005CD2  0E00               	movlw	0
 23681  005CD4  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23682  005CD6                     l6543:
 23683                           
 23684                           ; BSR set to: 0
 23685  005CD6  0E13               	movlw	19
 23686  005CD8  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 23687  005CDA  D001               	goto	l255
 23688  005CDC  0012               	return	
 23689  005CDE                     l255:
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 23693                           
 23694                           ; BSR set to: 0
 23695  005CDE  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 23696  005CE0  0D01               	mullw	1
 23697  005CE2  50F3               	movf	prodl,w,c
 23698  005CE4  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 23699  005CE6  6ED9               	movwf	fsr2l,c
 23700  005CE8  50F4               	movf	prodh,w,c
 23701  005CEA  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 23702  005CEC  6EDA               	movwf	fsr2h,c
 23703  005CEE  50DF               	movf	indf2,w,c
 23704  005CF0  EC95  F02D         	call	_Lcd_Write_Char
 23705  005CF4  0100               	movlb	0	; () banked
 23706  005CF6  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 23707  005CF8  D7EE               	goto	l6543
 23708  005CFA                     __end_of_Lcd_Write_String:
 23709                           	opt stack 0
 23710                           tosu	equ	0xFFF
 23711                           tosh	equ	0xFFE
 23712                           tosl	equ	0xFFD
 23713                           pclath	equ	0xFFA
 23714                           tblptru	equ	0xFF8
 23715                           tblptrh	equ	0xFF7
 23716                           tblptrl	equ	0xFF6
 23717                           tablat	equ	0xFF5
 23718                           prodh	equ	0xFF4
 23719                           prodl	equ	0xFF3
 23720                           intcon	equ	0xFF2
 23721                           intcon2	equ	0xFF1
 23722                           intcon3	equ	0xFF0
 23723                           indf0	equ	0xFEF
 23724                           postinc0	equ	0xFEE
 23725                           fsr0h	equ	0xFEA
 23726                           fsr0l	equ	0xFE9
 23727                           wreg	equ	0xFE8
 23728                           indf1	equ	0xFE7
 23729                           postdec1	equ	0xFE5
 23730                           fsr1h	equ	0xFE2
 23731                           fsr1l	equ	0xFE1
 23732                           indf2	equ	0xFDF
 23733                           postinc2	equ	0xFDE
 23734                           postdec2	equ	0xFDD
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function _Lcd_Write_Char *****************
 23740 ;; Defined at:
 23741 ;;		line 122 in file "src/lcd.h"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;  a               1    wreg     unsigned char 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;  a               1    3[BANK0 ] unsigned char 
 23746 ;;  y               1    2[BANK0 ] unsigned char 
 23747 ;;  tempp           1    1[BANK0 ] unsigned char 
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		wreg, status,2, status,0, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0
 23758 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23760 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23761 ;;Total ram usage:        3 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:    7
 23764 ;; This function calls:
 23765 ;;		_Lcd_Port
 23766 ;; This function is called by:
 23767 ;;		_Lcd_Write_String
 23768 ;;		_criaCaracteresCGRAM
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           	psect	text56
 23773  005B2A                     __ptext56:
 23774                           	opt stack 0
 23775  005B2A                     _Lcd_Write_Char:
 23776                           	opt stack 22
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;incstack = 0
 23780                           ;Lcd_Write_Char@a stored from wreg
 23781  005B2A  0100               	movlb	0	; () banked
 23782  005B2C  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 23783                           
 23784                           ;lcd.h: 123: char tempp, y;
 23785                           ;lcd.h: 124: tempp = a & 0x0F;
 23786  005B2E  0100               	movlb	0	; () banked
 23787  005B30  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23788  005B32  0B0F               	andlw	15
 23789  005B34  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 23790                           
 23791                           ;lcd.h: 125: y = a & 0xF0;
 23792  005B36  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23793  005B38  0BF0               	andlw	240
 23794  005B3A  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 23795                           
 23796                           ; BSR set to: 0
 23797                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 23798  005B3C  8483               	bsf	3971,2,c	;volatile
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;lcd.h: 127: Lcd_Port(y >> 4);
 23802  005B3E  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 23803  005B40  0B0F               	andlw	15
 23804  005B42  EC4E  F02E         	call	_Lcd_Port
 23805                           
 23806                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 23807  005B46  8683               	bsf	3971,3,c	;volatile
 23808                           
 23809                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23810  005B48  0E1A               	movlw	26
 23811  005B4A                     u15407:
 23812  005B4A  2EE8               	decfsz	wreg,f,c
 23813  005B4C  D7FE               	bra	u15407
 23814  005B4E  D000               	nop2	
 23815                           
 23816                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 23817  005B50  9683               	bcf	3971,3,c	;volatile
 23818                           
 23819                           ;lcd.h: 131: Lcd_Port(tempp);
 23820  005B52  0100               	movlb	0	; () banked
 23821  005B54  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 23822  005B56  EC4E  F02E         	call	_Lcd_Port
 23823                           
 23824                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 23825  005B5A  8683               	bsf	3971,3,c	;volatile
 23826                           
 23827                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23828  005B5C  0E1A               	movlw	26
 23829  005B5E                     u15417:
 23830  005B5E  2EE8               	decfsz	wreg,f,c
 23831  005B60  D7FE               	bra	u15417
 23832  005B62  D000               	nop2	
 23833                           
 23834                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 23835  005B64  9683               	bcf	3971,3,c	;volatile
 23836  005B66  0012               	return		;funcret
 23837  005B68                     __end_of_Lcd_Write_Char:
 23838                           	opt stack 0
 23839                           tosu	equ	0xFFF
 23840                           tosh	equ	0xFFE
 23841                           tosl	equ	0xFFD
 23842                           pclath	equ	0xFFA
 23843                           tblptru	equ	0xFF8
 23844                           tblptrh	equ	0xFF7
 23845                           tblptrl	equ	0xFF6
 23846                           tablat	equ	0xFF5
 23847                           prodh	equ	0xFF4
 23848                           prodl	equ	0xFF3
 23849                           intcon	equ	0xFF2
 23850                           intcon2	equ	0xFF1
 23851                           intcon3	equ	0xFF0
 23852                           indf0	equ	0xFEF
 23853                           postinc0	equ	0xFEE
 23854                           fsr0h	equ	0xFEA
 23855                           fsr0l	equ	0xFE9
 23856                           wreg	equ	0xFE8
 23857                           indf1	equ	0xFE7
 23858                           postdec1	equ	0xFE5
 23859                           fsr1h	equ	0xFE2
 23860                           fsr1l	equ	0xFE1
 23861                           indf2	equ	0xFDF
 23862                           postinc2	equ	0xFDE
 23863                           postdec2	equ	0xFDD
 23864                           fsr2h	equ	0xFDA
 23865                           fsr2l	equ	0xFD9
 23866                           status	equ	0xFD8
 23867                           
 23868 ;; *************** function _Lcd_Set_Cursor *****************
 23869 ;; Defined at:
 23870 ;;		line 87 in file "src/lcd.h"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  a               1    wreg     unsigned char 
 23873 ;;  b               1    3[BANK0 ] unsigned char 
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;  a               1    4[BANK0 ] unsigned char 
 23876 ;;  temp            1    7[BANK0 ] unsigned char 
 23877 ;;  y               1    6[BANK0 ] unsigned char 
 23878 ;;  z               1    5[BANK0 ] unsigned char 
 23879 ;; Return value:  Size  Location     Type
 23880 ;;                  1    wreg      void 
 23881 ;; Registers used:
 23882 ;;		wreg, status,2, status,0, cstack
 23883 ;; Tracked objects:
 23884 ;;		On entry : 0/0
 23885 ;;		On exit  : 0/0
 23886 ;;		Unchanged: 0/0
 23887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23888 ;;      Params:         0       1       0       0       0       0       0       0       0
 23889 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23891 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23892 ;;Total ram usage:        5 bytes
 23893 ;; Hardware stack levels used:    1
 23894 ;; Hardware stack levels required when called:    8
 23895 ;; This function calls:
 23896 ;;		_Lcd_Cmd
 23897 ;; This function is called by:
 23898 ;;		_atualizaLCD
 23899 ;; This function uses a non-reentrant model
 23900 ;;
 23901                           
 23902                           	psect	text57
 23903  004EEE                     __ptext57:
 23904                           	opt stack 0
 23905  004EEE                     _Lcd_Set_Cursor:
 23906                           	opt stack 21
 23907                           
 23908                           ;incstack = 0
 23909                           ;Lcd_Set_Cursor@a stored from wreg
 23910  004EEE  0100               	movlb	0	; () banked
 23911  004EF0  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 23912                           
 23913                           ;lcd.h: 88: char temp, z, y;
 23914                           ;lcd.h: 89: switch (a) {
 23915  004EF2  D048               	goto	l242
 23916  004EF4                     
 23917                           ;lcd.h: 91: temp = 0x80 + b - 1;
 23918  004EF4  0100               	movlb	0	; () banked
 23919  004EF6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23920  004EF8  0F7F               	addlw	127
 23921  004EFA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23922                           
 23923                           ;lcd.h: 92: z = temp >> 4;
 23924  004EFC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23925  004EFE  0B0F               	andlw	15
 23926  004F00  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23927                           
 23928                           ;lcd.h: 93: y = temp & 0x0F;
 23929  004F02  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23930  004F04  0B0F               	andlw	15
 23931  004F06  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;lcd.h: 94: Lcd_Cmd(z);
 23935  004F08  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23936  004F0A  ECE4  F02E         	call	_Lcd_Cmd
 23937                           
 23938                           ;lcd.h: 95: Lcd_Cmd(y);
 23939  004F0E  0100               	movlb	0	; () banked
 23940  004F10  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23941  004F12  ECE4  F02E         	call	_Lcd_Cmd
 23942                           
 23943                           ;lcd.h: 96: break;
 23944  004F16  0012               	return	
 23945  004F18                     
 23946                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 23947  004F18  0100               	movlb	0	; () banked
 23948  004F1A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23949  004F1C  0FBF               	addlw	191
 23950  004F1E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23951                           
 23952                           ;lcd.h: 99: z = temp >> 4;
 23953  004F20  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23954  004F22  0B0F               	andlw	15
 23955  004F24  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23956                           
 23957                           ;lcd.h: 100: y = temp & 0x0F;
 23958  004F26  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23959  004F28  0B0F               	andlw	15
 23960  004F2A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;lcd.h: 101: Lcd_Cmd(z);
 23964  004F2C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23965  004F2E  ECE4  F02E         	call	_Lcd_Cmd
 23966                           
 23967                           ;lcd.h: 102: Lcd_Cmd(y);
 23968  004F32  0100               	movlb	0	; () banked
 23969  004F34  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23970  004F36  ECE4  F02E         	call	_Lcd_Cmd
 23971                           
 23972                           ;lcd.h: 103: break;
 23973  004F3A  0012               	return	
 23974  004F3C                     
 23975                           ;lcd.h: 105: temp = 0x94 + b;
 23976  004F3C  0100               	movlb	0	; () banked
 23977  004F3E  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23978  004F40  0F94               	addlw	148
 23979  004F42  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23980                           
 23981                           ;lcd.h: 106: z = temp >> 4;
 23982  004F44  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23983  004F46  0B0F               	andlw	15
 23984  004F48  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23985                           
 23986                           ;lcd.h: 107: y = temp & 0x0F;
 23987  004F4A  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23988  004F4C  0B0F               	andlw	15
 23989  004F4E  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;lcd.h: 108: Lcd_Cmd(z);
 23993  004F50  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23994  004F52  ECE4  F02E         	call	_Lcd_Cmd
 23995                           
 23996                           ;lcd.h: 109: Lcd_Cmd(y);
 23997  004F56  0100               	movlb	0	; () banked
 23998  004F58  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23999  004F5A  ECE4  F02E         	call	_Lcd_Cmd
 24000                           
 24001                           ;lcd.h: 110: break;
 24002  004F5E  0012               	return	
 24003  004F60                     
 24004                           ;lcd.h: 112: temp = 0xD4 + b;
 24005  004F60  0100               	movlb	0	; () banked
 24006  004F62  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 24007  004F64  0FD4               	addlw	212
 24008  004F66  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 24009                           
 24010                           ;lcd.h: 113: z = temp >> 4;
 24011  004F68  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 24012  004F6A  0B0F               	andlw	15
 24013  004F6C  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 24014                           
 24015                           ;lcd.h: 114: y = temp & 0x0F;
 24016  004F6E  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 24017  004F70  0B0F               	andlw	15
 24018  004F72  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;lcd.h: 115: Lcd_Cmd(z);
 24022  004F74  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 24023  004F76  ECE4  F02E         	call	_Lcd_Cmd
 24024                           
 24025                           ;lcd.h: 116: Lcd_Cmd(y);
 24026  004F7A  0100               	movlb	0	; () banked
 24027  004F7C  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 24028  004F7E  ECE4  F02E         	call	_Lcd_Cmd
 24029                           
 24030                           ;lcd.h: 119: }
 24031                           
 24032                           ;lcd.h: 118: default:return;
 24033                           
 24034                           ;lcd.h: 117: break;
 24035  004F82  0012               	return	
 24036  004F84                     l242:
 24037  004F84  0100               	movlb	0	; () banked
 24038  004F86  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 24039                           
 24040                           ; Switch size 1, requested type "space"
 24041                           ; Number of cases is 4, Range of values is 1 to 4
 24042                           ; switch strategies available:
 24043                           ; Name         Instructions Cycles
 24044                           ; simple_byte           13     7 (average)
 24045                           ;	Chosen strategy is simple_byte
 24046  004F88  0A01               	xorlw	1	; case 1
 24047  004F8A  B4D8               	btfsc	status,2,c
 24048  004F8C  D7B3               	goto	l243
 24049  004F8E  0A03               	xorlw	3	; case 2
 24050  004F90  B4D8               	btfsc	status,2,c
 24051  004F92  D7C2               	goto	l245
 24052  004F94  0A01               	xorlw	1	; case 3
 24053  004F96  B4D8               	btfsc	status,2,c
 24054  004F98  D7D1               	goto	l246
 24055  004F9A  0A07               	xorlw	7	; case 4
 24056  004F9C  A4D8               	btfss	status,2,c
 24057  004F9E  0012               	return	
 24058  004FA0  D7DF               	goto	l247
 24059  004FA2                     __end_of_Lcd_Set_Cursor:
 24060                           	opt stack 0
 24061                           tosu	equ	0xFFF
 24062                           tosh	equ	0xFFE
 24063                           tosl	equ	0xFFD
 24064                           pclath	equ	0xFFA
 24065                           tblptru	equ	0xFF8
 24066                           tblptrh	equ	0xFF7
 24067                           tblptrl	equ	0xFF6
 24068                           tablat	equ	0xFF5
 24069                           prodh	equ	0xFF4
 24070                           prodl	equ	0xFF3
 24071                           intcon	equ	0xFF2
 24072                           intcon2	equ	0xFF1
 24073                           intcon3	equ	0xFF0
 24074                           indf0	equ	0xFEF
 24075                           postinc0	equ	0xFEE
 24076                           fsr0h	equ	0xFEA
 24077                           fsr0l	equ	0xFE9
 24078                           wreg	equ	0xFE8
 24079                           indf1	equ	0xFE7
 24080                           postdec1	equ	0xFE5
 24081                           fsr1h	equ	0xFE2
 24082                           fsr1l	equ	0xFE1
 24083                           indf2	equ	0xFDF
 24084                           postinc2	equ	0xFDE
 24085                           postdec2	equ	0xFDD
 24086                           fsr2h	equ	0xFDA
 24087                           fsr2l	equ	0xFD9
 24088                           status	equ	0xFD8
 24089                           
 24090 ;; *************** function _UART_Init *****************
 24091 ;; Defined at:
 24092 ;;		line 9 in file "src/USART.h"
 24093 ;; Parameters:    Size  Location     Type
 24094 ;;		None
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;		None
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  1    wreg      void 
 24099 ;; Registers used:
 24100 ;;		wreg, status,2
 24101 ;; Tracked objects:
 24102 ;;		On entry : 0/0
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24106 ;;      Params:         0       0       0       0       0       0       0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24109 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24110 ;;Total ram usage:        0 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:    6
 24113 ;; This function calls:
 24114 ;;		Nothing
 24115 ;; This function is called by:
 24116 ;;		_main
 24117 ;; This function uses a non-reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text58
 24121  005E6E                     __ptext58:
 24122                           	opt stack 0
 24123  005E6E                     _UART_Init:
 24124                           	opt stack 24
 24125                           
 24126                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 24127                           
 24128                           ;incstack = 0
 24129  005E6E  9C94               	bcf	3988,6,c	;volatile
 24130                           
 24131                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 24132  005E70  8E94               	bsf	3988,7,c	;volatile
 24133                           
 24134                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 24135  005E72  8AAC               	bsf	4012,5,c	;volatile
 24136                           
 24137                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 24138  005E74  84AC               	bsf	4012,2,c	;volatile
 24139                           
 24140                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 24141  005E76  98AC               	bcf	4012,4,c	;volatile
 24142                           
 24143                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 24144  005E78  8EAB               	bsf	4011,7,c	;volatile
 24145                           
 24146                           ;USART.h: 20: RCSTAbits.CREN = 1;
 24147  005E7A  88AB               	bsf	4011,4,c	;volatile
 24148                           
 24149                           ;USART.h: 25: SPBRG = 25;
 24150  005E7C  0E19               	movlw	25
 24151  005E7E  6EAF               	movwf	4015,c	;volatile
 24152                           
 24153                           ;USART.h: 28: INTCONbits.GIE = 1;
 24154  005E80  8EF2               	bsf	intcon,7,c	;volatile
 24155                           
 24156                           ;USART.h: 29: INTCONbits.PEIE = 1;
 24157  005E82  8CF2               	bsf	intcon,6,c	;volatile
 24158                           
 24159                           ;USART.h: 31: PIR1bits.RCIF = 0;
 24160  005E84  9A9E               	bcf	3998,5,c	;volatile
 24161                           
 24162                           ;USART.h: 32: PIE1bits.RCIE = 1;
 24163  005E86  8A9D               	bsf	3997,5,c	;volatile
 24164  005E88  0012               	return		;funcret
 24165  005E8A                     __end_of_UART_Init:
 24166                           	opt stack 0
 24167                           tosu	equ	0xFFF
 24168                           tosh	equ	0xFFE
 24169                           tosl	equ	0xFFD
 24170                           pclath	equ	0xFFA
 24171                           tblptru	equ	0xFF8
 24172                           tblptrh	equ	0xFF7
 24173                           tblptrl	equ	0xFF6
 24174                           tablat	equ	0xFF5
 24175                           prodh	equ	0xFF4
 24176                           prodl	equ	0xFF3
 24177                           intcon	equ	0xFF2
 24178                           intcon2	equ	0xFF1
 24179                           intcon3	equ	0xFF0
 24180                           indf0	equ	0xFEF
 24181                           postinc0	equ	0xFEE
 24182                           fsr0h	equ	0xFEA
 24183                           fsr0l	equ	0xFE9
 24184                           wreg	equ	0xFE8
 24185                           indf1	equ	0xFE7
 24186                           postdec1	equ	0xFE5
 24187                           fsr1h	equ	0xFE2
 24188                           fsr1l	equ	0xFE1
 24189                           indf2	equ	0xFDF
 24190                           postinc2	equ	0xFDE
 24191                           postdec2	equ	0xFDD
 24192                           fsr2h	equ	0xFDA
 24193                           fsr2l	equ	0xFD9
 24194                           status	equ	0xFD8
 24195                           
 24196 ;; *************** function _Lcd_Init *****************
 24197 ;; Defined at:
 24198 ;;		line 17 in file "src/lcd.h"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;		None
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;		None
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  1    wreg      void 
 24205 ;; Registers used:
 24206 ;;		wreg, status,2, cstack
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0
 24213 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24214 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24215 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24216 ;;Total ram usage:        1 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:    8
 24219 ;; This function calls:
 24220 ;;		_Lcd_Cmd
 24221 ;;		_Lcd_Port
 24222 ;; This function is called by:
 24223 ;;		_main
 24224 ;; This function uses a non-reentrant model
 24225 ;;
 24226                           
 24227                           	psect	text59
 24228  00562C                     __ptext59:
 24229                           	opt stack 0
 24230  00562C                     _Lcd_Init:
 24231                           	opt stack 22
 24232                           
 24233                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 24234                           
 24235                           ;incstack = 0
 24236  00562C  9E95               	bcf	3989,7,c	;volatile
 24237                           
 24238                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 24239  00562E  9C95               	bcf	3989,6,c	;volatile
 24240                           
 24241                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 24242  005630  9A95               	bcf	3989,5,c	;volatile
 24243                           
 24244                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 24245  005632  9895               	bcf	3989,4,c	;volatile
 24246                           
 24247                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 24248  005634  9695               	bcf	3989,3,c	;volatile
 24249                           
 24250                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 24251  005636  9495               	bcf	3989,2,c	;volatile
 24252                           
 24253                           ;lcd.h: 35: Lcd_Port(0x00);
 24254  005638  0E00               	movlw	0
 24255  00563A  EC4E  F02E         	call	_Lcd_Port
 24256                           
 24257                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 24258  00563E  0E34               	movlw	52
 24259  005640  0100               	movlb	0	; () banked
 24260  005642  6F63               	movwf	??_Lcd_Init& (0+255),b
 24261  005644  0EF1               	movlw	241
 24262  005646                     u15427:
 24263  005646  2EE8               	decfsz	wreg,f,c
 24264  005648  D7FE               	bra	u15427
 24265  00564A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24266  00564C  D7FC               	bra	u15427
 24267  00564E  D000               	nop2	
 24268                           
 24269                           ;lcd.h: 37: Lcd_Cmd(0x03);
 24270  005650  0E03               	movlw	3
 24271  005652  ECE4  F02E         	call	_Lcd_Cmd
 24272                           
 24273                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 24274  005656  0E0D               	movlw	13
 24275  005658  0100               	movlb	0	; () banked
 24276  00565A  6F63               	movwf	??_Lcd_Init& (0+255),b
 24277  00565C  0EFB               	movlw	251
 24278  00565E                     u15437:
 24279  00565E  2EE8               	decfsz	wreg,f,c
 24280  005660  D7FE               	bra	u15437
 24281  005662  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24282  005664  D7FC               	bra	u15437
 24283  005666  D000               	nop2	
 24284                           
 24285                           ;lcd.h: 39: Lcd_Cmd(0x03);
 24286  005668  0E03               	movlw	3
 24287  00566A  ECE4  F02E         	call	_Lcd_Cmd
 24288                           
 24289                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 24290  00566E  0E1D               	movlw	29
 24291  005670  0100               	movlb	0	; () banked
 24292  005672  6F63               	movwf	??_Lcd_Init& (0+255),b
 24293  005674  0E91               	movlw	145
 24294  005676                     u15447:
 24295  005676  2EE8               	decfsz	wreg,f,c
 24296  005678  D7FE               	bra	u15447
 24297  00567A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24298  00567C  D7FC               	bra	u15447
 24299                           
 24300                           ;lcd.h: 41: Lcd_Cmd(0x03);
 24301  00567E  0E03               	movlw	3
 24302  005680  ECE4  F02E         	call	_Lcd_Cmd
 24303                           
 24304                           ;lcd.h: 43: Lcd_Cmd(0x02);
 24305  005684  0E02               	movlw	2
 24306  005686  ECE4  F02E         	call	_Lcd_Cmd
 24307                           
 24308                           ;lcd.h: 44: Lcd_Cmd(0x02);
 24309  00568A  0E02               	movlw	2
 24310  00568C  ECE4  F02E         	call	_Lcd_Cmd
 24311                           
 24312                           ;lcd.h: 45: Lcd_Cmd(0x08);
 24313  005690  0E08               	movlw	8
 24314  005692  ECE4  F02E         	call	_Lcd_Cmd
 24315                           
 24316                           ;lcd.h: 46: Lcd_Cmd(0x00);
 24317  005696  0E00               	movlw	0
 24318  005698  ECE4  F02E         	call	_Lcd_Cmd
 24319                           
 24320                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 24321  00569C  0E0C               	movlw	12
 24322  00569E  ECE4  F02E         	call	_Lcd_Cmd
 24323                           
 24324                           ;lcd.h: 48: Lcd_Cmd(0x00);
 24325  0056A2  0E00               	movlw	0
 24326  0056A4  ECE4  F02E         	call	_Lcd_Cmd
 24327                           
 24328                           ;lcd.h: 49: Lcd_Cmd(0x06);
 24329  0056A8  0E06               	movlw	6
 24330  0056AA  ECE4  F02E         	call	_Lcd_Cmd
 24331  0056AE  0012               	return		;funcret
 24332  0056B0                     __end_of_Lcd_Init:
 24333                           	opt stack 0
 24334                           tosu	equ	0xFFF
 24335                           tosh	equ	0xFFE
 24336                           tosl	equ	0xFFD
 24337                           pclath	equ	0xFFA
 24338                           tblptru	equ	0xFF8
 24339                           tblptrh	equ	0xFF7
 24340                           tblptrl	equ	0xFF6
 24341                           tablat	equ	0xFF5
 24342                           prodh	equ	0xFF4
 24343                           prodl	equ	0xFF3
 24344                           intcon	equ	0xFF2
 24345                           intcon2	equ	0xFF1
 24346                           intcon3	equ	0xFF0
 24347                           indf0	equ	0xFEF
 24348                           postinc0	equ	0xFEE
 24349                           fsr0h	equ	0xFEA
 24350                           fsr0l	equ	0xFE9
 24351                           wreg	equ	0xFE8
 24352                           indf1	equ	0xFE7
 24353                           postdec1	equ	0xFE5
 24354                           fsr1h	equ	0xFE2
 24355                           fsr1l	equ	0xFE1
 24356                           indf2	equ	0xFDF
 24357                           postinc2	equ	0xFDE
 24358                           postdec2	equ	0xFDD
 24359                           fsr2h	equ	0xFDA
 24360                           fsr2l	equ	0xFD9
 24361                           status	equ	0xFD8
 24362                           
 24363 ;; *************** function _Lcd_Clear *****************
 24364 ;; Defined at:
 24365 ;;		line 82 in file "src/lcd.h"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;		None
 24368 ;; Auto vars:     Size  Location     Type
 24369 ;;		None
 24370 ;; Return value:  Size  Location     Type
 24371 ;;                  1    wreg      void 
 24372 ;; Registers used:
 24373 ;;		wreg, status,2, cstack
 24374 ;; Tracked objects:
 24375 ;;		On entry : 0/0
 24376 ;;		On exit  : 0/0
 24377 ;;		Unchanged: 0/0
 24378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24379 ;;      Params:         0       0       0       0       0       0       0       0       0
 24380 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24382 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24383 ;;Total ram usage:        0 bytes
 24384 ;; Hardware stack levels used:    1
 24385 ;; Hardware stack levels required when called:    8
 24386 ;; This function calls:
 24387 ;;		_Lcd_Cmd
 24388 ;; This function is called by:
 24389 ;;		_main
 24390 ;; This function uses a non-reentrant model
 24391 ;;
 24392                           
 24393                           	psect	text60
 24394  005ED6                     __ptext60:
 24395                           	opt stack 0
 24396  005ED6                     _Lcd_Clear:
 24397                           	opt stack 22
 24398                           
 24399                           ;lcd.h: 83: Lcd_Cmd(0);
 24400                           
 24401                           ;incstack = 0
 24402  005ED6  0E00               	movlw	0
 24403  005ED8  ECE4  F02E         	call	_Lcd_Cmd
 24404                           
 24405                           ;lcd.h: 84: Lcd_Cmd(1);
 24406  005EDC  0E01               	movlw	1
 24407  005EDE  ECE4  F02E         	call	_Lcd_Cmd
 24408  005EE2  0012               	return		;funcret
 24409  005EE4                     __end_of_Lcd_Clear:
 24410                           	opt stack 0
 24411                           tosu	equ	0xFFF
 24412                           tosh	equ	0xFFE
 24413                           tosl	equ	0xFFD
 24414                           pclath	equ	0xFFA
 24415                           tblptru	equ	0xFF8
 24416                           tblptrh	equ	0xFF7
 24417                           tblptrl	equ	0xFF6
 24418                           tablat	equ	0xFF5
 24419                           prodh	equ	0xFF4
 24420                           prodl	equ	0xFF3
 24421                           intcon	equ	0xFF2
 24422                           intcon2	equ	0xFF1
 24423                           intcon3	equ	0xFF0
 24424                           indf0	equ	0xFEF
 24425                           postinc0	equ	0xFEE
 24426                           fsr0h	equ	0xFEA
 24427                           fsr0l	equ	0xFE9
 24428                           wreg	equ	0xFE8
 24429                           indf1	equ	0xFE7
 24430                           postdec1	equ	0xFE5
 24431                           fsr1h	equ	0xFE2
 24432                           fsr1l	equ	0xFE1
 24433                           indf2	equ	0xFDF
 24434                           postinc2	equ	0xFDE
 24435                           postdec2	equ	0xFDD
 24436                           fsr2h	equ	0xFDA
 24437                           fsr2l	equ	0xFD9
 24438                           status	equ	0xFD8
 24439                           
 24440 ;; *************** function _Lcd_Cmd *****************
 24441 ;; Defined at:
 24442 ;;		line 74 in file "src/lcd.h"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;  a               1    wreg     unsigned char 
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;  a               1    2[BANK0 ] unsigned char 
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, status,2, cstack
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24456 ;;      Params:         0       0       0       0       0       0       0       0       0
 24457 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24458 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24459 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24460 ;;Total ram usage:        2 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:    7
 24463 ;; This function calls:
 24464 ;;		_Lcd_Port
 24465 ;; This function is called by:
 24466 ;;		_Lcd_Init
 24467 ;;		_Lcd_Clear
 24468 ;;		_Lcd_Set_Cursor
 24469 ;;		_criaCaracteresCGRAM
 24470 ;; This function uses a non-reentrant model
 24471 ;;
 24472                           
 24473                           	psect	text61
 24474  005DC8                     __ptext61:
 24475                           	opt stack 0
 24476  005DC8                     _Lcd_Cmd:
 24477                           	opt stack 22
 24478                           
 24479                           ;incstack = 0
 24480                           ;Lcd_Cmd@a stored from wreg
 24481  005DC8  0100               	movlb	0	; () banked
 24482  005DCA  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 24483                           
 24484                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 24485  005DCC  9483               	bcf	3971,2,c	;volatile
 24486                           
 24487                           ;lcd.h: 76: Lcd_Port(a);
 24488  005DCE  0100               	movlb	0	; () banked
 24489  005DD0  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 24490  005DD2  EC4E  F02E         	call	_Lcd_Port
 24491                           
 24492                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 24493  005DD6  8683               	bsf	3971,3,c	;volatile
 24494                           
 24495                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 24496  005DD8  0E0B               	movlw	11
 24497  005DDA  0100               	movlb	0	; () banked
 24498  005DDC  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 24499  005DDE  0E62               	movlw	98
 24500  005DE0                     u15457:
 24501  005DE0  2EE8               	decfsz	wreg,f,c
 24502  005DE2  D7FE               	bra	u15457
 24503  005DE4  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 24504  005DE6  D7FC               	bra	u15457
 24505  005DE8  F000               	nop	
 24506                           
 24507                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 24508  005DEA  9683               	bcf	3971,3,c	;volatile
 24509  005DEC  0012               	return		;funcret
 24510  005DEE                     __end_of_Lcd_Cmd:
 24511                           	opt stack 0
 24512                           tosu	equ	0xFFF
 24513                           tosh	equ	0xFFE
 24514                           tosl	equ	0xFFD
 24515                           pclath	equ	0xFFA
 24516                           tblptru	equ	0xFF8
 24517                           tblptrh	equ	0xFF7
 24518                           tblptrl	equ	0xFF6
 24519                           tablat	equ	0xFF5
 24520                           prodh	equ	0xFF4
 24521                           prodl	equ	0xFF3
 24522                           intcon	equ	0xFF2
 24523                           intcon2	equ	0xFF1
 24524                           intcon3	equ	0xFF0
 24525                           indf0	equ	0xFEF
 24526                           postinc0	equ	0xFEE
 24527                           fsr0h	equ	0xFEA
 24528                           fsr0l	equ	0xFE9
 24529                           wreg	equ	0xFE8
 24530                           indf1	equ	0xFE7
 24531                           postdec1	equ	0xFE5
 24532                           fsr1h	equ	0xFE2
 24533                           fsr1l	equ	0xFE1
 24534                           indf2	equ	0xFDF
 24535                           postinc2	equ	0xFDE
 24536                           postdec2	equ	0xFDD
 24537                           fsr2h	equ	0xFDA
 24538                           fsr2l	equ	0xFD9
 24539                           status	equ	0xFD8
 24540                           
 24541 ;; *************** function _Lcd_Port *****************
 24542 ;; Defined at:
 24543 ;;		line 52 in file "src/lcd.h"
 24544 ;; Parameters:    Size  Location     Type
 24545 ;;  a               1    wreg     unsigned char 
 24546 ;; Auto vars:     Size  Location     Type
 24547 ;;  a               1    0[BANK0 ] unsigned char 
 24548 ;; Return value:  Size  Location     Type
 24549 ;;                  1    wreg      void 
 24550 ;; Registers used:
 24551 ;;		wreg
 24552 ;; Tracked objects:
 24553 ;;		On entry : 0/0
 24554 ;;		On exit  : 0/0
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24557 ;;      Params:         0       0       0       0       0       0       0       0       0
 24558 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24560 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24561 ;;Total ram usage:        1 bytes
 24562 ;; Hardware stack levels used:    1
 24563 ;; Hardware stack levels required when called:    6
 24564 ;; This function calls:
 24565 ;;		Nothing
 24566 ;; This function is called by:
 24567 ;;		_Lcd_Init
 24568 ;;		_Lcd_Cmd
 24569 ;;		_Lcd_Write_Char
 24570 ;; This function uses a non-reentrant model
 24571 ;;
 24572                           
 24573                           	psect	text62
 24574  005C9C                     __ptext62:
 24575                           	opt stack 0
 24576  005C9C                     _Lcd_Port:
 24577                           	opt stack 22
 24578                           
 24579                           ;incstack = 0
 24580                           ;Lcd_Port@a stored from wreg
 24581  005C9C  0100               	movlb	0	; () banked
 24582  005C9E  6F60               	movwf	Lcd_Port@a& (0+255),b
 24583                           
 24584                           ;lcd.h: 53: if (a & 1)
 24585  005CA0  0100               	movlb	0	; () banked
 24586  005CA2  A160               	btfss	Lcd_Port@a& (0+255),0,b
 24587  005CA4  D002               	goto	l225
 24588                           
 24589                           ; BSR set to: 0
 24590                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 24591  005CA6  8883               	bsf	3971,4,c	;volatile
 24592  005CA8  D001               	goto	l226
 24593  005CAA                     l225:
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;lcd.h: 55: else
 24597                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 24598  005CAA  9883               	bcf	3971,4,c	;volatile
 24599  005CAC                     l226:
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;lcd.h: 58: if (a & 2)
 24603                           
 24604                           ; BSR set to: 0
 24605  005CAC  A360               	btfss	Lcd_Port@a& (0+255),1,b
 24606  005CAE  D002               	goto	l227
 24607                           
 24608                           ; BSR set to: 0
 24609                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 24610  005CB0  8A83               	bsf	3971,5,c	;volatile
 24611  005CB2  D001               	goto	l228
 24612  005CB4                     l227:
 24613                           
 24614                           ; BSR set to: 0
 24615                           ;lcd.h: 60: else
 24616                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 24617  005CB4  9A83               	bcf	3971,5,c	;volatile
 24618  005CB6                     l228:
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;lcd.h: 63: if (a & 4)
 24622                           
 24623                           ; BSR set to: 0
 24624  005CB6  A560               	btfss	Lcd_Port@a& (0+255),2,b
 24625  005CB8  D002               	goto	l229
 24626                           
 24627                           ; BSR set to: 0
 24628                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 24629  005CBA  8C83               	bsf	3971,6,c	;volatile
 24630  005CBC  D001               	goto	l230
 24631  005CBE                     l229:
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;lcd.h: 65: else
 24635                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 24636  005CBE  9C83               	bcf	3971,6,c	;volatile
 24637  005CC0                     l230:
 24638                           
 24639                           ; BSR set to: 0
 24640                           ;lcd.h: 68: if (a & 8)
 24641                           
 24642                           ; BSR set to: 0
 24643  005CC0  A760               	btfss	Lcd_Port@a& (0+255),3,b
 24644  005CC2  D002               	goto	l231
 24645                           
 24646                           ; BSR set to: 0
 24647                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 24648  005CC4  8E83               	bsf	3971,7,c	;volatile
 24649  005CC6  0012               	return	
 24650  005CC8                     l231:
 24651                           
 24652                           ; BSR set to: 0
 24653                           ;lcd.h: 70: else
 24654                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 24655  005CC8  9E83               	bcf	3971,7,c	;volatile
 24656  005CCA  0012               	return	
 24657  005CCC                     __end_of_Lcd_Port:
 24658                           	opt stack 0
 24659                           tosu	equ	0xFFF
 24660                           tosh	equ	0xFFE
 24661                           tosl	equ	0xFFD
 24662                           pclath	equ	0xFFA
 24663                           tblptru	equ	0xFF8
 24664                           tblptrh	equ	0xFF7
 24665                           tblptrl	equ	0xFF6
 24666                           tablat	equ	0xFF5
 24667                           prodh	equ	0xFF4
 24668                           prodl	equ	0xFF3
 24669                           intcon	equ	0xFF2
 24670                           intcon2	equ	0xFF1
 24671                           intcon3	equ	0xFF0
 24672                           indf0	equ	0xFEF
 24673                           postinc0	equ	0xFEE
 24674                           fsr0h	equ	0xFEA
 24675                           fsr0l	equ	0xFE9
 24676                           wreg	equ	0xFE8
 24677                           indf1	equ	0xFE7
 24678                           postdec1	equ	0xFE5
 24679                           fsr1h	equ	0xFE2
 24680                           fsr1l	equ	0xFE1
 24681                           indf2	equ	0xFDF
 24682                           postinc2	equ	0xFDE
 24683                           postdec2	equ	0xFDD
 24684                           fsr2h	equ	0xFDA
 24685                           fsr2l	equ	0xFD9
 24686                           status	equ	0xFD8
 24687                           
 24688 ;; *************** function _I2C_Master_Init *****************
 24689 ;; Defined at:
 24690 ;;		line 11 in file "src/I2C.c"
 24691 ;; Parameters:    Size  Location     Type
 24692 ;;  c               4   13[BANK0 ] const unsigned long 
 24693 ;; Auto vars:     Size  Location     Type
 24694 ;;		None
 24695 ;; Return value:  Size  Location     Type
 24696 ;;                  1    wreg      void 
 24697 ;; Registers used:
 24698 ;;		wreg, status,2, status,0, cstack
 24699 ;; Tracked objects:
 24700 ;;		On entry : 0/0
 24701 ;;		On exit  : 0/0
 24702 ;;		Unchanged: 0/0
 24703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24704 ;;      Params:         0       4       0       0       0       0       0       0       0
 24705 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24706 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24707 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24708 ;;Total ram usage:        8 bytes
 24709 ;; Hardware stack levels used:    1
 24710 ;; Hardware stack levels required when called:    7
 24711 ;; This function calls:
 24712 ;;		___lldiv
 24713 ;; This function is called by:
 24714 ;;		_main
 24715 ;; This function uses a non-reentrant model
 24716 ;;
 24717                           
 24718                           	psect	text63
 24719  0057A4                     __ptext63:
 24720                           	opt stack 0
 24721  0057A4                     _I2C_Master_Init:
 24722                           	opt stack 23
 24723                           
 24724                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;incstack = 0
 24728  0057A4  8093               	bsf	3987,0,c	;volatile
 24729                           
 24730                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 24731  0057A6  8293               	bsf	3987,1,c	;volatile
 24732                           
 24733                           ;I2C.c: 14: SSPCON1 = 0x28;
 24734  0057A8  0E28               	movlw	40
 24735  0057AA  6EC6               	movwf	4038,c	;volatile
 24736                           
 24737                           ;I2C.c: 15: SSPCON2 = 0x0;
 24738  0057AC  0E00               	movlw	0
 24739  0057AE  6EC5               	movwf	4037,c	;volatile
 24740                           
 24741                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 24742  0057B0  0E00               	movlw	0
 24743  0057B2  0100               	movlb	0	; () banked
 24744  0057B4  6F60               	movwf	___lldiv@dividend& (0+255),b
 24745  0057B6  0E12               	movlw	18
 24746  0057B8  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 24747  0057BA  0E7A               	movlw	122
 24748  0057BC  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 24749  0057BE  0E00               	movlw	0
 24750  0057C0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 24751  0057C2  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 24752  0057C6  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 24753  0057CA  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 24754  0057CE  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 24755  0057D2  0E02               	movlw	2
 24756  0057D4                     u14265:
 24757  0057D4  90D8               	bcf	status,0,c
 24758  0057D6  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 24759  0057D8  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 24760  0057DA  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 24761  0057DC  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 24762  0057DE  2EE8               	decfsz	wreg,f,c
 24763  0057E0  D7F9               	goto	u14265
 24764  0057E2  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 24765  0057E6  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 24766  0057EA  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 24767  0057EE  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 24768  0057F2  EC58  F02B         	call	___lldiv	;wreg free
 24769  0057F6  0100               	movlb	0	; () banked
 24770  0057F8  0560               	decf	?___lldiv& (0+255),w,b
 24771  0057FA  6EC8               	movwf	4040,c	;volatile
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;I2C.c: 17: SSPSTAT = 0;
 24775  0057FC  0E00               	movlw	0
 24776  0057FE  6EC7               	movwf	4039,c	;volatile
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 24780  005800  0E82               	movlw	130
 24781  005802  0100               	movlb	0	; () banked
 24782  005804  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 24783  005806  0EDD               	movlw	221
 24784  005808                     u15467:
 24785  005808  2EE8               	decfsz	wreg,f,c
 24786  00580A  D7FE               	bra	u15467
 24787  00580C  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 24788  00580E  D7FC               	bra	u15467
 24789  005810  D000               	nop2	
 24790  005812  0012               	return		;funcret
 24791  005814                     __end_of_I2C_Master_Init:
 24792                           	opt stack 0
 24793                           tosu	equ	0xFFF
 24794                           tosh	equ	0xFFE
 24795                           tosl	equ	0xFFD
 24796                           pclath	equ	0xFFA
 24797                           tblptru	equ	0xFF8
 24798                           tblptrh	equ	0xFF7
 24799                           tblptrl	equ	0xFF6
 24800                           tablat	equ	0xFF5
 24801                           prodh	equ	0xFF4
 24802                           prodl	equ	0xFF3
 24803                           intcon	equ	0xFF2
 24804                           intcon2	equ	0xFF1
 24805                           intcon3	equ	0xFF0
 24806                           indf0	equ	0xFEF
 24807                           postinc0	equ	0xFEE
 24808                           fsr0h	equ	0xFEA
 24809                           fsr0l	equ	0xFE9
 24810                           wreg	equ	0xFE8
 24811                           indf1	equ	0xFE7
 24812                           postdec1	equ	0xFE5
 24813                           fsr1h	equ	0xFE2
 24814                           fsr1l	equ	0xFE1
 24815                           indf2	equ	0xFDF
 24816                           postinc2	equ	0xFDE
 24817                           postdec2	equ	0xFDD
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function ___lldiv *****************
 24823 ;; Defined at:
 24824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;  dividend        4    0[BANK0 ] unsigned long 
 24827 ;;  divisor         4    4[BANK0 ] unsigned long 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;  quotient        4    8[BANK0 ] unsigned long 
 24830 ;;  counter         1   12[BANK0 ] unsigned char 
 24831 ;; Return value:  Size  Location     Type
 24832 ;;                  4    0[BANK0 ] unsigned long 
 24833 ;; Registers used:
 24834 ;;		wreg, status,2, status,0
 24835 ;; Tracked objects:
 24836 ;;		On entry : 0/0
 24837 ;;		On exit  : 0/0
 24838 ;;		Unchanged: 0/0
 24839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24840 ;;      Params:         0       8       0       0       0       0       0       0       0
 24841 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24843 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24844 ;;Total ram usage:       13 bytes
 24845 ;; Hardware stack levels used:    1
 24846 ;; Hardware stack levels required when called:    6
 24847 ;; This function calls:
 24848 ;;		Nothing
 24849 ;; This function is called by:
 24850 ;;		_I2C_Master_Init
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text64
 24855  0056B0                     __ptext64:
 24856                           	opt stack 0
 24857  0056B0                     ___lldiv:
 24858                           	opt stack 23
 24859                           
 24860                           ;incstack = 0
 24861  0056B0  0E00               	movlw	0
 24862  0056B2  0100               	movlb	0	; () banked
 24863  0056B4  6F68               	movwf	___lldiv@quotient& (0+255),b
 24864  0056B6  0E00               	movlw	0
 24865  0056B8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24866  0056BA  0E00               	movlw	0
 24867  0056BC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24868  0056BE  0E00               	movlw	0
 24869  0056C0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24870                           
 24871                           ; BSR set to: 0
 24872  0056C2  5164               	movf	___lldiv@divisor& (0+255),w,b
 24873  0056C4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24874  0056C6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24875  0056C8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24876  0056CA  B4D8               	btfsc	status,2,c
 24877  0056CC  D02A               	goto	l1955
 24878                           
 24879                           ; BSR set to: 0
 24880  0056CE  0E01               	movlw	1
 24881  0056D0  6F6C               	movwf	___lldiv@counter& (0+255),b
 24882  0056D2  D006               	goto	l1950
 24883  0056D4                     
 24884                           ; BSR set to: 0
 24885                           
 24886                           ; BSR set to: 0
 24887  0056D4  90D8               	bcf	status,0,c
 24888  0056D6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24889  0056D8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24890  0056DA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24891  0056DC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24892  0056DE  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24893  0056E0                     l1950:
 24894                           
 24895                           ; BSR set to: 0
 24896                           
 24897                           ; BSR set to: 0
 24898  0056E0  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24899  0056E2  D7F8               	goto	l1951
 24900  0056E4                     u12490:
 24901                           
 24902                           ; BSR set to: 0
 24903                           
 24904                           ; BSR set to: 0
 24905                           
 24906                           ; BSR set to: 0
 24907  0056E4  90D8               	bcf	status,0,c
 24908  0056E6  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24909  0056E8  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24910  0056EA  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24911  0056EC  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24912                           
 24913                           ; BSR set to: 0
 24914  0056EE  5164               	movf	___lldiv@divisor& (0+255),w,b
 24915  0056F0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24916  0056F2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24917  0056F4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24918  0056F6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24919  0056F8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24920  0056FA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24921  0056FC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24922  0056FE  A0D8               	btfss	status,0,c
 24923  005700  D009               	goto	l1954
 24924                           
 24925                           ; BSR set to: 0
 24926  005702  5164               	movf	___lldiv@divisor& (0+255),w,b
 24927  005704  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24928  005706  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24929  005708  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24930  00570A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24931  00570C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24932  00570E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24933  005710  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24934                           
 24935                           ; BSR set to: 0
 24936  005712  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24937  005714                     l1954:
 24938                           
 24939                           ; BSR set to: 0
 24940                           
 24941                           ; BSR set to: 0
 24942  005714  90D8               	bcf	status,0,c
 24943  005716  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24944  005718  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24945  00571A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24946  00571C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24947                           
 24948                           ; BSR set to: 0
 24949  00571E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24950  005720  D7E1               	goto	u12490
 24951  005722                     l1955:
 24952                           
 24953                           ; BSR set to: 0
 24954                           
 24955                           ; BSR set to: 0
 24956  005722  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24957  005726  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24958  00572A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24959  00572E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24960                           
 24961                           ; BSR set to: 0
 24962  005732  0012               	return		;funcret
 24963  005734                     __end_of___lldiv:
 24964                           	opt stack 0
 24965                           tosu	equ	0xFFF
 24966                           tosh	equ	0xFFE
 24967                           tosl	equ	0xFFD
 24968                           pclath	equ	0xFFA
 24969                           tblptru	equ	0xFF8
 24970                           tblptrh	equ	0xFF7
 24971                           tblptrl	equ	0xFF6
 24972                           tablat	equ	0xFF5
 24973                           prodh	equ	0xFF4
 24974                           prodl	equ	0xFF3
 24975                           intcon	equ	0xFF2
 24976                           intcon2	equ	0xFF1
 24977                           intcon3	equ	0xFF0
 24978                           indf0	equ	0xFEF
 24979                           postinc0	equ	0xFEE
 24980                           fsr0h	equ	0xFEA
 24981                           fsr0l	equ	0xFE9
 24982                           wreg	equ	0xFE8
 24983                           indf1	equ	0xFE7
 24984                           postdec1	equ	0xFE5
 24985                           fsr1h	equ	0xFE2
 24986                           fsr1l	equ	0xFE1
 24987                           indf2	equ	0xFDF
 24988                           postinc2	equ	0xFDE
 24989                           postdec2	equ	0xFDD
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function _TIMER0 *****************
 24995 ;; Defined at:
 24996 ;;		line 15 in file "src/main.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;  c               1   47[COMRAM] unsigned char 
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0
 25011 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25012 ;;      Temps:         18       0       0       0       0       0       0       0       0
 25013 ;;      Totals:        19       0       0       0       0       0       0       0       0
 25014 ;;Total ram usage:       19 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:    5
 25017 ;; This function calls:
 25018 ;;		_readButtons
 25019 ;;		_timer
 25020 ;; This function is called by:
 25021 ;;		Interrupt level 2
 25022 ;; This function uses a non-reentrant model
 25023 ;;
 25024                           
 25025                           	psect	intcode
 25026  000008                     __pintcode:
 25027                           	opt stack 0
 25028  000008                     _TIMER0:
 25029                           	opt stack 20
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;incstack = 0
 25033  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25034  00000A  EDC3  F025         	call	int_func,f	;refresh shadow registers
 25035                           tosu	equ	0xFFF
 25036                           tosh	equ	0xFFE
 25037                           tosl	equ	0xFFD
 25038                           pclath	equ	0xFFA
 25039                           tblptru	equ	0xFF8
 25040                           tblptrh	equ	0xFF7
 25041                           tblptrl	equ	0xFF6
 25042                           tablat	equ	0xFF5
 25043                           prodh	equ	0xFF4
 25044                           prodl	equ	0xFF3
 25045                           intcon	equ	0xFF2
 25046                           intcon2	equ	0xFF1
 25047                           intcon3	equ	0xFF0
 25048                           indf0	equ	0xFEF
 25049                           postinc0	equ	0xFEE
 25050                           fsr0h	equ	0xFEA
 25051                           fsr0l	equ	0xFE9
 25052                           wreg	equ	0xFE8
 25053                           indf1	equ	0xFE7
 25054                           postdec1	equ	0xFE5
 25055                           fsr1h	equ	0xFE2
 25056                           fsr1l	equ	0xFE1
 25057                           indf2	equ	0xFDF
 25058                           postinc2	equ	0xFDE
 25059                           postdec2	equ	0xFDD
 25060                           fsr2h	equ	0xFDA
 25061                           fsr2l	equ	0xFD9
 25062                           status	equ	0xFD8
 25063                           
 25064                           	psect	intcode_body
 25065  004B86                     __pintcode_body:
 25066                           	opt stack 20
 25067  004B86                     int_func:
 25068                           	opt stack 20
 25069  004B86  0006               	pop		; remove dummy address from shadow register refresh
 25070  004B88  CFFA F01E          	movff	pclath,??_TIMER0
 25071  004B8C  CFFB F01F          	movff	pclatu,??_TIMER0+1
 25072  004B90  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 25073  004B94  CFEA F021          	movff	fsr0h,??_TIMER0+3
 25074  004B98  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 25075  004B9C  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 25076  004BA0  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 25077  004BA4  CFDA F025          	movff	fsr2h,??_TIMER0+7
 25078  004BA8  CFF3 F026          	movff	prodl,??_TIMER0+8
 25079  004BAC  CFF4 F027          	movff	prodh,??_TIMER0+9
 25080  004BB0  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 25081  004BB4  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 25082  004BB8  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 25083  004BBC  CFF5 F02B          	movff	tablat,??_TIMER0+13
 25084  004BC0  C051  F02C         	movff	btemp,??_TIMER0+14
 25085  004BC4  C052  F02D         	movff	btemp+1,??_TIMER0+15
 25086  004BC8  C053  F02E         	movff	btemp+2,??_TIMER0+16
 25087  004BCC  C054  F02F         	movff	btemp+3,??_TIMER0+17
 25088                           
 25089                           ;main.c: 16: if (TMR0IF) {
 25090  004BD0  A4F2               	btfss	intcon,2,c	;volatile
 25091  004BD2  D007               	goto	i2l1261
 25092                           
 25093                           ;main.c: 17: TMR0IF = 0x00;
 25094  004BD4  94F2               	bcf	intcon,2,c	;volatile
 25095                           
 25096                           ;main.c: 18: TMR0H = 0x3C;
 25097  004BD6  0E3C               	movlw	60
 25098  004BD8  6ED7               	movwf	4055,c	;volatile
 25099                           
 25100                           ;main.c: 19: TMR0L = 0xB0;
 25101  004BDA  0EB0               	movlw	176
 25102  004BDC  6ED6               	movwf	4054,c	;volatile
 25103                           
 25104                           ;main.c: 20: timer();
 25105  004BDE  EC8B  F01F         	call	_timer	;wreg free
 25106  004BE2                     i2l1261:
 25107                           
 25108                           ;main.c: 21: }
 25109                           ;main.c: 22: if (RCIF) {
 25110  004BE2  AA9E               	btfss	3998,5,c	;volatile
 25111  004BE4  D01A               	goto	i2l1264
 25112                           
 25113                           ;main.c: 23: char c = RCREG;
 25114  004BE6  CFAE F030          	movff	4014,TIMER0@c	;volatile
 25115                           
 25116                           ;main.c: 24: if (c != '\n' && c != '\r') {
 25117  004BEA  0E0A               	movlw	10
 25118  004BEC  1830               	xorwf	TIMER0@c,w,c
 25119  004BEE  B4D8               	btfsc	status,2,c
 25120  004BF0  D00F               	goto	i2l1263
 25121  004BF2  0E0D               	movlw	13
 25122  004BF4  1830               	xorwf	TIMER0@c,w,c
 25123  004BF6  B4D8               	btfsc	status,2,c
 25124  004BF8  D00B               	goto	i2l1263
 25125                           
 25126                           ;main.c: 25: bufferSerial[cbf++] = c;
 25127  004BFA  5043               	movf	_cbf,w,c
 25128  004BFC  0D01               	mullw	1
 25129  004BFE  0E42               	movlw	low _bufferSerial
 25130  004C00  24F3               	addwf	prodl,w,c
 25131  004C02  6ED9               	movwf	fsr2l,c
 25132  004C04  0E02               	movlw	high _bufferSerial
 25133  004C06  20F4               	addwfc	prodh,w,c
 25134  004C08  6EDA               	movwf	fsr2h,c
 25135  004C0A  C030  FFDF         	movff	TIMER0@c,indf2
 25136  004C0E  2A43               	incf	_cbf,f,c
 25137  004C10                     i2l1263:
 25138                           
 25139                           ;main.c: 26: }
 25140                           ;main.c: 27: if (cbf >= 80) cbf = 0;
 25141  004C10  0E4F               	movlw	79
 25142  004C12  6443               	cpfsgt	_cbf,c
 25143  004C14  D002               	goto	i2l1264
 25144  004C16  0E00               	movlw	0
 25145  004C18  6E43               	movwf	_cbf,c
 25146  004C1A                     i2l1264:
 25147                           
 25148                           ;main.c: 28: }
 25149                           ;main.c: 29: if (INT2IF) {
 25150  004C1A  A2F0               	btfss	intcon3,1,c	;volatile
 25151  004C1C  D003               	goto	i2l1265
 25152                           
 25153                           ;main.c: 30: INT2IF = 0;
 25154  004C1E  92F0               	bcf	intcon3,1,c	;volatile
 25155                           
 25156                           ;main.c: 31: readButtons();
 25157  004C20  ECBD  F02E         	call	_readButtons	;wreg free
 25158  004C24                     i2l1265:
 25159  004C24  C02F  F054         	movff	??_TIMER0+17,btemp+3
 25160  004C28  C02E  F053         	movff	??_TIMER0+16,btemp+2
 25161  004C2C  C02D  F052         	movff	??_TIMER0+15,btemp+1
 25162  004C30  C02C  F051         	movff	??_TIMER0+14,btemp
 25163  004C34  C02B  FFF5         	movff	??_TIMER0+13,tablat
 25164  004C38  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 25165  004C3C  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 25166  004C40  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 25167  004C44  C027  FFF4         	movff	??_TIMER0+9,prodh
 25168  004C48  C026  FFF3         	movff	??_TIMER0+8,prodl
 25169  004C4C  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 25170  004C50  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 25171  004C54  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 25172  004C58  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 25173  004C5C  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 25174  004C60  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 25175  004C64  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 25176  004C68  C01E  FFFA         	movff	??_TIMER0,pclath
 25177  004C6C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25178  004C6E  0011               	retfie		f
 25179  004C70                     __end_of_TIMER0:
 25180                           	opt stack 0
 25181                           tosu	equ	0xFFF
 25182                           tosh	equ	0xFFE
 25183                           tosl	equ	0xFFD
 25184                           pclatu	equ	0xFFB
 25185                           pclath	equ	0xFFA
 25186                           tblptru	equ	0xFF8
 25187                           tblptrh	equ	0xFF7
 25188                           tblptrl	equ	0xFF6
 25189                           tablat	equ	0xFF5
 25190                           prodh	equ	0xFF4
 25191                           prodl	equ	0xFF3
 25192                           intcon	equ	0xFF2
 25193                           intcon2	equ	0xFF1
 25194                           intcon3	equ	0xFF0
 25195                           indf0	equ	0xFEF
 25196                           postinc0	equ	0xFEE
 25197                           fsr0h	equ	0xFEA
 25198                           fsr0l	equ	0xFE9
 25199                           wreg	equ	0xFE8
 25200                           indf1	equ	0xFE7
 25201                           postdec1	equ	0xFE5
 25202                           fsr1h	equ	0xFE2
 25203                           fsr1l	equ	0xFE1
 25204                           indf2	equ	0xFDF
 25205                           postinc2	equ	0xFDE
 25206                           postdec2	equ	0xFDD
 25207                           fsr2h	equ	0xFDA
 25208                           fsr2l	equ	0xFD9
 25209                           status	equ	0xFD8
 25210                           
 25211 ;; *************** function _timer *****************
 25212 ;; Defined at:
 25213 ;;		line 39 in file "src/Controle.h"
 25214 ;; Parameters:    Size  Location     Type
 25215 ;;		None
 25216 ;; Auto vars:     Size  Location     Type
 25217 ;;		None
 25218 ;; Return value:  Size  Location     Type
 25219 ;;                  1    wreg      void 
 25220 ;; Registers used:
 25221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25222 ;; Tracked objects:
 25223 ;;		On entry : 0/0
 25224 ;;		On exit  : 0/0
 25225 ;;		Unchanged: 0/0
 25226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25227 ;;      Params:         0       0       0       0       0       0       0       0       0
 25228 ;;      Locals:         6       0       0       0       0       0       0       0       0
 25229 ;;      Temps:          7       0       0       0       0       0       0       0       0
 25230 ;;      Totals:        13       0       0       0       0       0       0       0       0
 25231 ;;Total ram usage:       13 bytes
 25232 ;; Hardware stack levels used:    1
 25233 ;; Hardware stack levels required when called:    4
 25234 ;; This function calls:
 25235 ;;		i2_setRangeValor
 25236 ;; This function is called by:
 25237 ;;		_TIMER0
 25238 ;; This function uses a non-reentrant model
 25239 ;;
 25240                           
 25241                           	psect	text66
 25242  003F16                     __ptext66:
 25243                           	opt stack 0
 25244  003F16                     _timer:
 25245                           	opt stack 20
 25246                           
 25247                           ;Controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 25248                           
 25249                           ;incstack = 0
 25250  003F16  503A               	movf	_t_controle_flap+1,w,c
 25251  003F18  E109               	bnz	i2l8809
 25252  003F1A  0E02               	movlw	2
 25253  003F1C  5C39               	subwf	_t_controle_flap,w,c
 25254  003F1E  B0D8               	btfsc	status,0,c
 25255  003F20  D005               	goto	i2l1098
 25256  003F22  0E00               	movlw	0
 25257  003F24  6E3A               	movwf	_t_controle_flap+1,c
 25258  003F26  0E00               	movlw	0
 25259  003F28  6E39               	movwf	_t_controle_flap,c
 25260  003F2A  D007               	goto	i2l1100
 25261  003F2C                     i2l1098:
 25262  003F2C                     i2l8809:
 25263  003F2C  0639               	decf	_t_controle_flap,f,c
 25264  003F2E  A0D8               	btfss	status,0,c
 25265  003F30  063A               	decf	_t_controle_flap+1,f,c
 25266  003F32  C039  F039         	movff	_t_controle_flap,_t_controle_flap
 25267  003F36  C03A  F03A         	movff	_t_controle_flap+1,_t_controle_flap+1
 25268  003F3A                     i2l1100:
 25269                           
 25270                           ;Controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 25271  003F3A  0E02               	movlw	2
 25272  003F3C  603F               	cpfslt	_t_controle_buzzer,c
 25273  003F3E  D005               	goto	i2l1102
 25274  003F40  0E00               	movlw	0
 25275  003F42  6E19               	movwf	_timer$1417+1,c
 25276  003F44  0E00               	movlw	0
 25277  003F46  6E18               	movwf	_timer$1417,c
 25278  003F48  D004               	goto	i2l1104
 25279  003F4A                     i2l1102:
 25280  003F4A  063F               	decf	_t_controle_buzzer,f,c
 25281  003F4C  C03F  F018         	movff	_t_controle_buzzer,_timer$1417
 25282  003F50  6A19               	clrf	_timer$1417+1,c
 25283  003F52                     i2l1104:
 25284  003F52  C018  F03F         	movff	_timer$1417,_t_controle_buzzer
 25285                           
 25286                           ;Controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 25287  003F56  5034               	movf	_t_controle_modo_seguranca+1,w,c
 25288  003F58  E109               	bnz	i2l8823
 25289  003F5A  0E02               	movlw	2
 25290  003F5C  5C33               	subwf	_t_controle_modo_seguranca,w,c
 25291  003F5E  B0D8               	btfsc	status,0,c
 25292  003F60  D005               	goto	i2l1106
 25293  003F62  0E00               	movlw	0
 25294  003F64  6E34               	movwf	_t_controle_modo_seguranca+1,c
 25295  003F66  0E00               	movlw	0
 25296  003F68  6E33               	movwf	_t_controle_modo_seguranca,c
 25297  003F6A  D007               	goto	i2l1108
 25298  003F6C                     i2l1106:
 25299  003F6C                     i2l8823:
 25300  003F6C  0633               	decf	_t_controle_modo_seguranca,f,c
 25301  003F6E  A0D8               	btfss	status,0,c
 25302  003F70  0634               	decf	_t_controle_modo_seguranca+1,f,c
 25303  003F72  C033  F033         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 25304  003F76  C034  F034         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 25305  003F7A                     i2l1108:
 25306                           
 25307                           ;Controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 25308  003F7A  0E02               	movlw	2
 25309  003F7C  603C               	cpfslt	_t_leitura_adc,c
 25310  003F7E  D005               	goto	i2l1110
 25311  003F80  0E00               	movlw	0
 25312  003F82  6E1B               	movwf	_timer$1418+1,c
 25313  003F84  0E00               	movlw	0
 25314  003F86  6E1A               	movwf	_timer$1418,c
 25315  003F88  D004               	goto	i2l1112
 25316  003F8A                     i2l1110:
 25317  003F8A  063C               	decf	_t_leitura_adc,f,c
 25318  003F8C  C03C  F01A         	movff	_t_leitura_adc,_timer$1418
 25319  003F90  6A1B               	clrf	_timer$1418+1,c
 25320  003F92                     i2l1112:
 25321  003F92  C01A  F03C         	movff	_timer$1418,_t_leitura_adc
 25322                           
 25323                           ;Controle.h: 47: if (t_controle_blink > 1) {
 25324  003F96  0E01               	movlw	1
 25325  003F98  643E               	cpfsgt	_t_controle_blink,c
 25326  003F9A  D002               	goto	i2l1113
 25327                           
 25328                           ;Controle.h: 48: --t_controle_blink;
 25329  003F9C  063E               	decf	_t_controle_blink,f,c
 25330                           
 25331                           ;Controle.h: 49: } else {
 25332  003F9E  D007               	goto	i2l1114
 25333  003FA0                     i2l1113:
 25334                           
 25335                           ;Controle.h: 50: blinkk = ~blinkk;
 25336  003FA0  B44F               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 25337  003FA2  D002               	goto	i2u1334_40
 25338  003FA4  844F               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 25339  003FA6  D001               	goto	i2u1335_45
 25340  003FA8                     i2u1334_40:
 25341  003FA8  944F               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 25342  003FAA                     i2u1335_45:
 25343                           
 25344                           ;Controle.h: 51: t_controle_blink = 5;
 25345  003FAA  0E05               	movlw	5
 25346  003FAC  6E3E               	movwf	_t_controle_blink,c
 25347  003FAE                     i2l1114:
 25348                           
 25349                           ;Controle.h: 52: }
 25350                           ;Controle.h: 54: base_sec++;
 25351  003FAE  2A4A               	incf	_base_sec,f,c
 25352                           
 25353                           ;Controle.h: 55: if (base_sec > 9) {
 25354  003FB0  0E09               	movlw	9
 25355  003FB2  644A               	cpfsgt	_base_sec,c
 25356  003FB4  0012               	return	
 25357                           
 25358                           ;Controle.h: 56: base_sec = 0;
 25359  003FB6  0E00               	movlw	0
 25360  003FB8  6E4A               	movwf	_base_sec,c
 25361                           
 25362                           ;Controle.h: 57: sec++;
 25363  003FBA  2A48               	incf	_sec,f,c
 25364                           
 25365                           ;Controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 25366  003FBC  0E02               	movlw	2
 25367  003FBE  0101               	movlb	1	; () banked
 25368  003FC0  6197               	cpfslt	_t_wifi_restart& (0+255),b
 25369  003FC2  D005               	goto	i2l1117
 25370                           
 25371                           ; BSR set to: 1
 25372  003FC4  0E00               	movlw	0
 25373  003FC6  6E1D               	movwf	_timer$1419+1,c
 25374  003FC8  0E00               	movlw	0
 25375  003FCA  6E1C               	movwf	_timer$1419,c
 25376  003FCC  D004               	goto	i2l1119
 25377  003FCE                     i2l1117:
 25378                           
 25379                           ; BSR set to: 1
 25380                           
 25381                           ; BSR set to: 1
 25382  003FCE  0797               	decf	_t_wifi_restart& (0+255),f,b
 25383  003FD0  C197  F01C         	movff	_t_wifi_restart,_timer$1419
 25384  003FD4  6A1D               	clrf	_timer$1419+1,c
 25385  003FD6                     i2l1119:
 25386                           
 25387                           ; BSR set to: 1
 25388                           
 25389                           ; BSR set to: 1
 25390  003FD6  C01C  F197         	movff	_timer$1419,_t_wifi_restart
 25391                           
 25392                           ; BSR set to: 1
 25393                           ;Controle.h: 66: if (sec > 59) {
 25394  003FDA  0E3B               	movlw	59
 25395  003FDC  6448               	cpfsgt	_sec,c
 25396  003FDE  0012               	return	
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;Controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 25400  003FE0  5038               	movf	_t_controle_religar_buzzer+1,w,c
 25401  003FE2  E109               	bnz	i2l8861
 25402  003FE4  0E02               	movlw	2
 25403  003FE6  5C37               	subwf	_t_controle_religar_buzzer,w,c
 25404  003FE8  B0D8               	btfsc	status,0,c
 25405  003FEA  D005               	goto	i2l1122
 25406                           
 25407                           ; BSR set to: 1
 25408  003FEC  0E00               	movlw	0
 25409  003FEE  6E38               	movwf	_t_controle_religar_buzzer+1,c
 25410  003FF0  0E00               	movlw	0
 25411  003FF2  6E37               	movwf	_t_controle_religar_buzzer,c
 25412  003FF4  D007               	goto	i2l1124
 25413  003FF6                     i2l1122:
 25414  003FF6                     i2l8861:
 25415                           
 25416                           ; BSR set to: 1
 25417  003FF6  0637               	decf	_t_controle_religar_buzzer,f,c
 25418  003FF8  A0D8               	btfss	status,0,c
 25419  003FFA  0638               	decf	_t_controle_religar_buzzer+1,f,c
 25420  003FFC  C037  F037         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 25421  004000  C038  F038         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 25422  004004                     i2l1124:
 25423                           
 25424                           ; BSR set to: 1
 25425                           ;Controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 25426                           
 25427                           ; BSR set to: 1
 25428  004004  5036               	movf	_t_controle_religar_ventoinha+1,w,c
 25429  004006  E109               	bnz	i2l8867
 25430  004008  0E02               	movlw	2
 25431  00400A  5C35               	subwf	_t_controle_religar_ventoinha,w,c
 25432  00400C  B0D8               	btfsc	status,0,c
 25433  00400E  D005               	goto	i2l1126
 25434                           
 25435                           ; BSR set to: 1
 25436  004010  0E00               	movlw	0
 25437  004012  6E36               	movwf	_t_controle_religar_ventoinha+1,c
 25438  004014  0E00               	movlw	0
 25439  004016  6E35               	movwf	_t_controle_religar_ventoinha,c
 25440  004018  D007               	goto	i2l1128
 25441  00401A                     i2l1126:
 25442  00401A                     i2l8867:
 25443                           
 25444                           ; BSR set to: 1
 25445  00401A  0635               	decf	_t_controle_religar_ventoinha,f,c
 25446  00401C  A0D8               	btfss	status,0,c
 25447  00401E  0636               	decf	_t_controle_religar_ventoinha+1,f,c
 25448  004020  C035  F035         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 25449  004024  C036  F036         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 25450  004028                     i2l1128:
 25451                           
 25452                           ; BSR set to: 1
 25453                           ;Controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 25454                           
 25455                           ; BSR set to: 1
 25456  004028  0E64               	movlw	100
 25457  00402A  0100               	movlb	0	; () banked
 25458  00402C  19EA               	xorwf	_tempajt& (0+255),w,b
 25459  00402E  B4D8               	btfsc	status,2,c
 25460  004030  D057               	goto	i2l1131
 25461                           
 25462                           ; BSR set to: 0
 25463  004032  0E6E               	movlw	110
 25464  004034  19EA               	xorwf	_tempajt& (0+255),w,b
 25465  004036  B4D8               	btfsc	status,2,c
 25466  004038  D053               	goto	i2l1131
 25467                           
 25468                           ; BSR set to: 0
 25469  00403A  0E85               	movlw	133
 25470  00403C  19EA               	xorwf	_tempajt& (0+255),w,b
 25471  00403E  B4D8               	btfsc	status,2,c
 25472  004040  D04F               	goto	i2l1131
 25473                           
 25474                           ; BSR set to: 0
 25475  004042  05FE               	decf	_f_falta_energia& (0+255),w,b
 25476  004044  A4D8               	btfss	status,2,c
 25477  004046  D04C               	goto	i2l1131
 25478                           
 25479                           ; BSR set to: 0
 25480                           ;Controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 25481  004048  51EA               	movf	_tempajt& (0+255),w,b
 25482  00404A  6E11               	movwf	??_timer& (0+255),c
 25483  00404C  6A12               	clrf	(??_timer+1)& (0+255),c
 25484  00404E  51ED               	movf	_h_subir_temp_automatica& (0+255),w,b
 25485  004050  C0FD  F013         	movff	_temp,??_timer+2
 25486  004054  6A14               	clrf	(??_timer+3)& (0+255),c
 25487  004056  2613               	addwf	??_timer+2,f,c
 25488  004058  0E00               	movlw	0
 25489  00405A  2214               	addwfc	??_timer+3,f,c
 25490  00405C  5011               	movf	??_timer,w,c
 25491  00405E  5C13               	subwf	??_timer+2,w,c
 25492  004060  5014               	movf	??_timer+3,w,c
 25493  004062  0A80               	xorlw	128
 25494  004064  6E15               	movwf	(??_timer+4)& (0+255),c
 25495  004066  5012               	movf	??_timer+1,w,c
 25496  004068  0A80               	xorlw	128
 25497  00406A  5815               	subwfb	(??_timer+4)& (0+255),w,c
 25498  00406C  A0D8               	btfss	status,0,c
 25499  00406E  D038               	goto	i2l1131
 25500                           
 25501                           ; BSR set to: 0
 25502  004070  51ED               	movf	_h_subir_temp_automatica& (0+255),w,b
 25503  004072  6E11               	movwf	??_timer& (0+255),c
 25504  004074  6A12               	clrf	(??_timer+1)& (0+255),c
 25505  004076  1E11               	comf	??_timer,f,c
 25506  004078  1E12               	comf	??_timer+1,f,c
 25507  00407A  4A11               	infsnz	??_timer,f,c
 25508  00407C  2A12               	incf	??_timer+1,f,c
 25509  00407E  51FD               	movf	_temp& (0+255),w,b
 25510  004080  6E13               	movwf	(??_timer+2)& (0+255),c
 25511  004082  6A14               	clrf	(??_timer+3)& (0+255),c
 25512  004084  5011               	movf	??_timer,w,c
 25513  004086  2613               	addwf	??_timer+2,f,c
 25514  004088  5012               	movf	??_timer+1,w,c
 25515  00408A  2214               	addwfc	??_timer+3,f,c
 25516  00408C  51EA               	movf	_tempajt& (0+255),w,b
 25517  00408E  6E15               	movwf	(??_timer+4)& (0+255),c
 25518  004090  6A16               	clrf	(??_timer+5)& (0+255),c
 25519  004092  5013               	movf	??_timer+2,w,c
 25520  004094  5C15               	subwf	??_timer+4,w,c
 25521  004096  5016               	movf	??_timer+5,w,c
 25522  004098  0A80               	xorlw	128
 25523  00409A  6E17               	movwf	(??_timer+6)& (0+255),c
 25524  00409C  5014               	movf	??_timer+3,w,c
 25525  00409E  0A80               	xorlw	128
 25526  0040A0  5817               	subwfb	(??_timer+6)& (0+255),w,c
 25527  0040A2  A0D8               	btfss	status,0,c
 25528  0040A4  D01D               	goto	i2l1131
 25529                           
 25530                           ; BSR set to: 0
 25531  0040A6  0E96               	movlw	150
 25532  0040A8  61EA               	cpfslt	_tempajt& (0+255),b
 25533  0040AA  D01A               	goto	i2l1131
 25534                           
 25535                           ; BSR set to: 0
 25536  0040AC  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25537  0040AE  B4D8               	btfsc	status,2,c
 25538  0040B0  D017               	goto	i2l1131
 25539                           
 25540                           ; BSR set to: 0
 25541  0040B2  51F8               	movf	_trava_fase& (0+255),w,b
 25542  0040B4  A4D8               	btfss	status,2,c
 25543  0040B6  D014               	goto	i2l1131
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;Controle.h: 75: t_controle_temp_automatica++;
 25547  0040B8  2A3D               	incf	_t_controle_temp_automatica,f,c
 25548                           
 25549                           ; BSR set to: 0
 25550                           ;Controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 25551  0040BA  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25552  0040BC  5C3D               	subwf	_t_controle_temp_automatica,w,c
 25553  0040BE  A0D8               	btfss	status,0,c
 25554  0040C0  D00F               	goto	i2l1131
 25555                           
 25556                           ; BSR set to: 0
 25557                           ;Controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 25558  0040C2  0EEA               	movlw	low _tempajt
 25559  0040C4  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25560  0040C6  0E00               	movlw	high _tempajt
 25561  0040C8  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25562  0040CA  0E55               	movlw	85
 25563  0040CC  6E08               	movwf	i2setRangeValor@_min,c
 25564  0040CE  0E97               	movlw	151
 25565  0040D0  6E09               	movwf	i2setRangeValor@_max,c
 25566  0040D2  0E01               	movlw	1
 25567  0040D4  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25568  0040D6  0E2B               	movlw	43
 25569  0040D8  EC6C  F029         	call	i2_setRangeValor
 25570                           
 25571                           ;Controle.h: 78: t_controle_temp_automatica = 0;
 25572  0040DC  0E00               	movlw	0
 25573  0040DE  6E3D               	movwf	_t_controle_temp_automatica,c
 25574  0040E0                     i2l1131:
 25575                           
 25576                           ;Controle.h: 79: }
 25577                           ;Controle.h: 80: }
 25578                           ;Controle.h: 81: }
 25579                           ;Controle.h: 83: sec = 0;
 25580  0040E0  0E00               	movlw	0
 25581  0040E2  6E48               	movwf	_sec,c
 25582                           
 25583                           ;Controle.h: 84: min++;
 25584  0040E4  2A47               	incf	_min,f,c
 25585                           
 25586                           ;Controle.h: 85: if (min > 59) {
 25587  0040E6  0E3B               	movlw	59
 25588  0040E8  6447               	cpfsgt	_min,c
 25589  0040EA  0012               	return	
 25590                           
 25591                           ;Controle.h: 86: min = 0;
 25592  0040EC  0E00               	movlw	0
 25593  0040EE  6E47               	movwf	_min,c
 25594                           
 25595                           ;Controle.h: 87: hor++;
 25596  0040F0  2A46               	incf	_hor,f,c
 25597                           
 25598                           ;Controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 25599  0040F2  0100               	movlb	0	; () banked
 25600  0040F4  51F8               	movf	_trava_fase& (0+255),w,b
 25601  0040F6  A4D8               	btfss	status,2,c
 25602  0040F8  D062               	goto	i2l1142
 25603                           
 25604                           ; BSR set to: 0
 25605  0040FA  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25606  0040FC  B4D8               	btfsc	status,2,c
 25607  0040FE  D05F               	goto	i2l1142
 25608                           
 25609                           ; BSR set to: 0
 25610  004100  05FE               	decf	_f_falta_energia& (0+255),w,b
 25611  004102  A4D8               	btfss	status,2,c
 25612  004104  D05C               	goto	i2l1142
 25613                           
 25614                           ; BSR set to: 0
 25615                           ;Controle.h: 91: if (tempajt == 100 && fase == 1) {
 25616  004106  0E64               	movlw	100
 25617  004108  19EA               	xorwf	_tempajt& (0+255),w,b
 25618  00410A  A4D8               	btfss	status,2,c
 25619  00410C  D019               	goto	i2l1134
 25620                           
 25621                           ; BSR set to: 0
 25622  00410E  05EC               	decf	_fase& (0+255),w,b
 25623  004110  A4D8               	btfss	status,2,c
 25624  004112  D016               	goto	i2l1134
 25625                           
 25626                           ; BSR set to: 0
 25627                           ;Controle.h: 92: t_controle_fim_fases++;
 25628  004114  2A40               	incf	_t_controle_fim_fases,f,c
 25629                           
 25630                           ; BSR set to: 0
 25631                           ;Controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 25632  004116  504E               	movf	_t_fim_fase1,w,c
 25633  004118  5C40               	subwf	_t_controle_fim_fases,w,c
 25634  00411A  A0D8               	btfss	status,0,c
 25635  00411C  D050               	goto	i2l1142
 25636                           
 25637                           ; BSR set to: 0
 25638  00411E  504E               	movf	_t_fim_fase1,w,c
 25639  004120  B4D8               	btfsc	status,2,c
 25640  004122  D04D               	goto	i2l1142
 25641                           
 25642                           ; BSR set to: 0
 25643                           ;Controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 25644  004124  0EEA               	movlw	low _tempajt
 25645  004126  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25646  004128  0E00               	movlw	high _tempajt
 25647  00412A  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25648  00412C  0E55               	movlw	85
 25649  00412E  6E08               	movwf	i2setRangeValor@_min,c
 25650  004130  0E97               	movlw	151
 25651  004132  6E09               	movwf	i2setRangeValor@_max,c
 25652  004134  0E01               	movlw	1
 25653  004136  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25654  004138  0E2B               	movlw	43
 25655  00413A  EC6C  F029         	call	i2_setRangeValor
 25656  00413E  D03D               	goto	i2l1140
 25657  004140                     i2l1134:
 25658  004140  0E6E               	movlw	110
 25659  004142  0100               	movlb	0	; () banked
 25660  004144  19EA               	xorwf	_tempajt& (0+255),w,b
 25661  004146  A4D8               	btfss	status,2,c
 25662  004148  D01A               	goto	i2l1137
 25663                           
 25664                           ; BSR set to: 0
 25665  00414A  0E02               	movlw	2
 25666  00414C  19EC               	xorwf	_fase& (0+255),w,b
 25667  00414E  A4D8               	btfss	status,2,c
 25668  004150  D016               	goto	i2l1137
 25669                           
 25670                           ; BSR set to: 0
 25671                           ;Controle.h: 98: t_controle_fim_fases++;
 25672  004152  2A40               	incf	_t_controle_fim_fases,f,c
 25673                           
 25674                           ; BSR set to: 0
 25675                           ;Controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 25676  004154  504D               	movf	_t_fim_fase2,w,c
 25677  004156  5C40               	subwf	_t_controle_fim_fases,w,c
 25678  004158  A0D8               	btfss	status,0,c
 25679  00415A  D031               	goto	i2l1142
 25680                           
 25681                           ; BSR set to: 0
 25682  00415C  504D               	movf	_t_fim_fase2,w,c
 25683  00415E  B4D8               	btfsc	status,2,c
 25684  004160  D02E               	goto	i2l1142
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;Controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 25688  004162  0EEA               	movlw	low _tempajt
 25689  004164  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25690  004166  0E00               	movlw	high _tempajt
 25691  004168  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25692  00416A  0E55               	movlw	85
 25693  00416C  6E08               	movwf	i2setRangeValor@_min,c
 25694  00416E  0E97               	movlw	151
 25695  004170  6E09               	movwf	i2setRangeValor@_max,c
 25696  004172  0E01               	movlw	1
 25697  004174  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25698  004176  0E2B               	movlw	43
 25699  004178  EC6C  F029         	call	i2_setRangeValor
 25700  00417C  D01E               	goto	i2l1140
 25701  00417E                     i2l1137:
 25702  00417E  0E85               	movlw	133
 25703  004180  0100               	movlb	0	; () banked
 25704  004182  19EA               	xorwf	_tempajt& (0+255),w,b
 25705  004184  A4D8               	btfss	status,2,c
 25706  004186  D019               	goto	i2l1140
 25707                           
 25708                           ; BSR set to: 0
 25709  004188  0E03               	movlw	3
 25710  00418A  19EC               	xorwf	_fase& (0+255),w,b
 25711  00418C  A4D8               	btfss	status,2,c
 25712  00418E  D015               	goto	i2l1140
 25713                           
 25714                           ; BSR set to: 0
 25715                           ;Controle.h: 104: t_controle_fim_fases++;
 25716  004190  2A40               	incf	_t_controle_fim_fases,f,c
 25717                           
 25718                           ; BSR set to: 0
 25719                           ;Controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 25720  004192  504C               	movf	_t_fim_fase3,w,c
 25721  004194  5C40               	subwf	_t_controle_fim_fases,w,c
 25722  004196  A0D8               	btfss	status,0,c
 25723  004198  D012               	goto	i2l1142
 25724                           
 25725                           ; BSR set to: 0
 25726  00419A  504C               	movf	_t_fim_fase3,w,c
 25727  00419C  B4D8               	btfsc	status,2,c
 25728  00419E  D00F               	goto	i2l1142
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;Controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 25732  0041A0  0EEA               	movlw	low _tempajt
 25733  0041A2  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25734  0041A4  0E00               	movlw	high _tempajt
 25735  0041A6  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25736  0041A8  0E55               	movlw	85
 25737  0041AA  6E08               	movwf	i2setRangeValor@_min,c
 25738  0041AC  0E97               	movlw	151
 25739  0041AE  6E09               	movwf	i2setRangeValor@_max,c
 25740  0041B0  0E01               	movlw	1
 25741  0041B2  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25742  0041B4  0E2B               	movlw	43
 25743  0041B6  EC6C  F029         	call	i2_setRangeValor
 25744  0041BA                     i2l1140:
 25745                           
 25746                           ;Controle.h: 110: t_controle_fim_fases = 0;
 25747  0041BA  0E00               	movlw	0
 25748  0041BC  6E40               	movwf	_t_controle_fim_fases,c
 25749  0041BE                     i2l1142:
 25750                           
 25751                           ;Controle.h: 111: }
 25752                           ;Controle.h: 112: }
 25753                           ;Controle.h: 114: if (hor > 23) {
 25754  0041BE  0E17               	movlw	23
 25755  0041C0  6446               	cpfsgt	_hor,c
 25756  0041C2  0012               	return	
 25757                           
 25758                           ;Controle.h: 115: hor = 0;
 25759  0041C4  0E00               	movlw	0
 25760  0041C6  6E46               	movwf	_hor,c
 25761  0041C8  0012               	return	
 25762  0041CA                     __end_of_timer:
 25763                           	opt stack 0
 25764                           tosu	equ	0xFFF
 25765                           tosh	equ	0xFFE
 25766                           tosl	equ	0xFFD
 25767                           pclatu	equ	0xFFB
 25768                           pclath	equ	0xFFA
 25769                           tblptru	equ	0xFF8
 25770                           tblptrh	equ	0xFF7
 25771                           tblptrl	equ	0xFF6
 25772                           tablat	equ	0xFF5
 25773                           prodh	equ	0xFF4
 25774                           prodl	equ	0xFF3
 25775                           intcon	equ	0xFF2
 25776                           intcon2	equ	0xFF1
 25777                           intcon3	equ	0xFF0
 25778                           indf0	equ	0xFEF
 25779                           postinc0	equ	0xFEE
 25780                           fsr0h	equ	0xFEA
 25781                           fsr0l	equ	0xFE9
 25782                           wreg	equ	0xFE8
 25783                           indf1	equ	0xFE7
 25784                           postdec1	equ	0xFE5
 25785                           fsr1h	equ	0xFE2
 25786                           fsr1l	equ	0xFE1
 25787                           indf2	equ	0xFDF
 25788                           postinc2	equ	0xFDE
 25789                           postdec2	equ	0xFDD
 25790                           fsr2h	equ	0xFDA
 25791                           fsr2l	equ	0xFD9
 25792                           status	equ	0xFD8
 25793                           
 25794 ;; *************** function i2_setRangeValor *****************
 25795 ;; Defined at:
 25796 ;;		line 76 in file "src/FuncoesControlador.h"
 25797 ;; Parameters:    Size  Location     Type
 25798 ;;  _acao           1    wreg     unsigned char 
 25799 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 25800 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 25801 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1),
      + 
 25802 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 25803 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 25804 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 25805 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 25806 ;;		 -> clima(1), 
 25807 ;;  _min            1    7[COMRAM] unsigned char 
 25808 ;;  _max            1    8[COMRAM] unsigned char 
 25809 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 25810 ;; Auto vars:     Size  Location     Type
 25811 ;;  _acao           1   13[COMRAM] unsigned char 
 25812 ;;  setRangeValo    2   14[COMRAM] int 
 25813 ;; Return value:  Size  Location     Type
 25814 ;;                  1    wreg      void 
 25815 ;; Registers used:
 25816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25817 ;; Tracked objects:
 25818 ;;		On entry : 0/0
 25819 ;;		On exit  : 0/0
 25820 ;;		Unchanged: 0/0
 25821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25822 ;;      Params:         5       0       0       0       0       0       0       0       0
 25823 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25824 ;;      Temps:          3       0       0       0       0       0       0       0       0
 25825 ;;      Totals:        11       0       0       0       0       0       0       0       0
 25826 ;;Total ram usage:       11 bytes
 25827 ;; Hardware stack levels used:    1
 25828 ;; Hardware stack levels required when called:    3
 25829 ;; This function calls:
 25830 ;;		i2_writeEEPROM_ext
 25831 ;; This function is called by:
 25832 ;;		_timer
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836                           	psect	text67
 25837  0052D8                     __ptext67:
 25838                           	opt stack 0
 25839  0052D8                     i2_setRangeValor:
 25840                           	opt stack 20
 25841                           
 25842                           ;incstack = 0
 25843                           ;i2setRangeValor@_acao stored from wreg
 25844  0052D8  6E0E               	movwf	i2setRangeValor@_acao,c
 25845                           
 25846                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 25847  0052DA  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25848  0052DE  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25849  0052E2  50DF               	movf	indf2,w,c
 25850  0052E4  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25851  0052E6  500B               	movf	??i2_setRangeValor,w,c
 25852  0052E8  6E0F               	movwf	i2setRangeValor@_aux,c
 25853  0052EA  6A10               	clrf	i2setRangeValor@_aux+1,c
 25854                           
 25855                           ;FuncoesControlador.h: 78: switch (_acao) {
 25856  0052EC  D02C               	goto	i2l934
 25857  0052EE                     
 25858                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 25859  0052EE  5009               	movf	i2setRangeValor@_max,w,c
 25860  0052F0  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25861  0052F2  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25862  0052F4  500B               	movf	??i2_setRangeValor,w,c
 25863  0052F6  5C0F               	subwf	i2setRangeValor@_aux,w,c
 25864  0052F8  5010               	movf	i2setRangeValor@_aux+1,w,c
 25865  0052FA  0A80               	xorlw	128
 25866  0052FC  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25867  0052FE  500C               	movf	??i2_setRangeValor+1,w,c
 25868  005300  0A80               	xorlw	128
 25869  005302  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25870  005304  B0D8               	btfsc	status,0,c
 25871  005306  D003               	goto	i2l937
 25872  005308  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 25873  00530A  2A10               	incf	i2setRangeValor@_aux+1,f,c
 25874  00530C  D013               	goto	L32
 25875  00530E                     i2l937:
 25876  00530E  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 25877  005312  D017               	goto	L33
 25878  005314                     
 25879                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 25880  005314  5008               	movf	i2setRangeValor@_min,w,c
 25881  005316  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25882  005318  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25883  00531A  500F               	movf	i2setRangeValor@_aux,w,c
 25884  00531C  5C0B               	subwf	??i2_setRangeValor,w,c
 25885  00531E  500C               	movf	??i2_setRangeValor+1,w,c
 25886  005320  0A80               	xorlw	128
 25887  005322  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25888  005324  5010               	movf	i2setRangeValor@_aux+1,w,c
 25889  005326  0A80               	xorlw	128
 25890  005328  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25891  00532A  B0D8               	btfsc	status,0,c
 25892  00532C  D008               	goto	i2l943
 25893  00532E  060F               	decf	i2setRangeValor@_aux,f,c
 25894  005330  A0D8               	btfss	status,0,c
 25895  005332  0610               	decf	i2setRangeValor@_aux+1,f,c
 25896  005334                     L32:
 25897  005334  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 25898  005338  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 25899  00533C  D00B               	goto	i2l940
 25900  00533E                     i2l943:
 25901  00533E  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 25902  005342                     L33:
 25903  005342  6A10               	clrf	i2setRangeValor@_aux+1,c
 25904                           
 25905                           ;FuncoesControlador.h: 85: }
 25906                           
 25907                           ;FuncoesControlador.h: 84: break;
 25908  005344  D007               	goto	i2l940
 25909  005346                     i2l934:
 25910  005346  500E               	movf	i2setRangeValor@_acao,w,c
 25911                           
 25912                           ; Switch size 1, requested type "space"
 25913                           ; Number of cases is 2, Range of values is 43 to 45
 25914                           ; switch strategies available:
 25915                           ; Name         Instructions Cycles
 25916                           ; simple_byte            7     4 (average)
 25917                           ;	Chosen strategy is simple_byte
 25918  005348  0A2B               	xorlw	43	; case 43
 25919  00534A  B4D8               	btfsc	status,2,c
 25920  00534C  D7D0               	goto	i2l935
 25921  00534E  0A06               	xorlw	6	; case 45
 25922  005350  B4D8               	btfsc	status,2,c
 25923  005352  D7E0               	goto	i2l941
 25924  005354                     i2l940:
 25925                           
 25926                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 25927  005354  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25928  005356  B4D8               	btfsc	status,2,c
 25929  005358  D005               	goto	i2l946
 25930                           
 25931                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 25932  00535A  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 25933  00535E  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25934  005360  ECD0  F02D         	call	i2_writeEEPROM_ext
 25935  005364                     i2l946:
 25936                           
 25937                           ;FuncoesControlador.h: 88: }
 25938                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 25939  005364  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25940  005368  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25941  00536C  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 25942  005370  0012               	return		;funcret
 25943  005372                     __end_ofi2_setRangeValor:
 25944                           	opt stack 0
 25945                           tosu	equ	0xFFF
 25946                           tosh	equ	0xFFE
 25947                           tosl	equ	0xFFD
 25948                           pclatu	equ	0xFFB
 25949                           pclath	equ	0xFFA
 25950                           tblptru	equ	0xFF8
 25951                           tblptrh	equ	0xFF7
 25952                           tblptrl	equ	0xFF6
 25953                           tablat	equ	0xFF5
 25954                           prodh	equ	0xFF4
 25955                           prodl	equ	0xFF3
 25956                           intcon	equ	0xFF2
 25957                           intcon2	equ	0xFF1
 25958                           intcon3	equ	0xFF0
 25959                           indf0	equ	0xFEF
 25960                           postinc0	equ	0xFEE
 25961                           fsr0h	equ	0xFEA
 25962                           fsr0l	equ	0xFE9
 25963                           wreg	equ	0xFE8
 25964                           indf1	equ	0xFE7
 25965                           postdec1	equ	0xFE5
 25966                           fsr1h	equ	0xFE2
 25967                           fsr1l	equ	0xFE1
 25968                           indf2	equ	0xFDF
 25969                           postinc2	equ	0xFDE
 25970                           postdec2	equ	0xFDD
 25971                           fsr2h	equ	0xFDA
 25972                           fsr2l	equ	0xFD9
 25973                           status	equ	0xFD8
 25974                           
 25975 ;; *************** function i2_writeEEPROM_ext *****************
 25976 ;; Defined at:
 25977 ;;		line 14 in file "src/Eeprom_ext.h"
 25978 ;; Parameters:    Size  Location     Type
 25979 ;;  adress          1    wreg     unsigned char 
 25980 ;;  data            1    3[COMRAM] unsigned char 
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;  adress          1    4[COMRAM] unsigned char 
 25983 ;; Return value:  Size  Location     Type
 25984 ;;                  1    wreg      void 
 25985 ;; Registers used:
 25986 ;;		wreg, status,2, status,0, cstack
 25987 ;; Tracked objects:
 25988 ;;		On entry : 0/0
 25989 ;;		On exit  : 0/0
 25990 ;;		Unchanged: 0/0
 25991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25992 ;;      Params:         1       0       0       0       0       0       0       0       0
 25993 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25995 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25996 ;;Total ram usage:        2 bytes
 25997 ;; Hardware stack levels used:    1
 25998 ;; Hardware stack levels required when called:    2
 25999 ;; This function calls:
 26000 ;;		i2_I2C_Start
 26001 ;;		i2_I2C_Stop
 26002 ;;		i2_I2C_Write
 26003 ;;		i2_delay
 26004 ;; This function is called by:
 26005 ;;		i2_setRangeValor
 26006 ;; This function uses a non-reentrant model
 26007 ;;
 26008                           
 26009                           	psect	text68
 26010  005BA0                     __ptext68:
 26011                           	opt stack 0
 26012  005BA0                     i2_writeEEPROM_ext:
 26013                           	opt stack 20
 26014                           
 26015                           ;incstack = 0
 26016                           ;i2writeEEPROM_ext@adress stored from wreg
 26017  005BA0  6E05               	movwf	i2writeEEPROM_ext@adress,c
 26018                           
 26019                           ;Eeprom_ext.h: 16: I2C_Start();
 26020  005BA2  EC8C  F02F         	call	i2_I2C_Start	;wreg free
 26021                           
 26022                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 26023  005BA6  0E00               	movlw	0
 26024  005BA8  6E03               	movwf	i2I2C_Write@d+1,c
 26025  005BAA  0EA0               	movlw	160
 26026  005BAC  6E02               	movwf	i2I2C_Write@d,c
 26027  005BAE  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26028                           
 26029                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 26030  005BB2  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 26031  005BB6  6A03               	clrf	i2I2C_Write@d+1,c
 26032  005BB8  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26033                           
 26034                           ;Eeprom_ext.h: 20: I2C_Write(data);
 26035  005BBC  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 26036  005BC0  6A03               	clrf	i2I2C_Write@d+1,c
 26037  005BC2  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26038                           
 26039                           ;Eeprom_ext.h: 21: I2C_Stop();
 26040  005BC6  EC88  F02F         	call	i2_I2C_Stop	;wreg free
 26041                           
 26042                           ;Eeprom_ext.h: 22: delay(105);
 26043  005BCA  0E00               	movlw	0
 26044  005BCC  6E02               	movwf	i2delay@x+1,c
 26045  005BCE  0E69               	movlw	105
 26046  005BD0  6E01               	movwf	i2delay@x,c
 26047  005BD2  ECF7  F02E         	call	i2_delay	;wreg free
 26048  005BD6  0012               	return		;funcret
 26049  005BD8                     __end_ofi2_writeEEPROM_ext:
 26050                           	opt stack 0
 26051                           tosu	equ	0xFFF
 26052                           tosh	equ	0xFFE
 26053                           tosl	equ	0xFFD
 26054                           pclatu	equ	0xFFB
 26055                           pclath	equ	0xFFA
 26056                           tblptru	equ	0xFF8
 26057                           tblptrh	equ	0xFF7
 26058                           tblptrl	equ	0xFF6
 26059                           tablat	equ	0xFF5
 26060                           prodh	equ	0xFF4
 26061                           prodl	equ	0xFF3
 26062                           intcon	equ	0xFF2
 26063                           intcon2	equ	0xFF1
 26064                           intcon3	equ	0xFF0
 26065                           indf0	equ	0xFEF
 26066                           postinc0	equ	0xFEE
 26067                           fsr0h	equ	0xFEA
 26068                           fsr0l	equ	0xFE9
 26069                           wreg	equ	0xFE8
 26070                           indf1	equ	0xFE7
 26071                           postdec1	equ	0xFE5
 26072                           fsr1h	equ	0xFE2
 26073                           fsr1l	equ	0xFE1
 26074                           indf2	equ	0xFDF
 26075                           postinc2	equ	0xFDE
 26076                           postdec2	equ	0xFDD
 26077                           fsr2h	equ	0xFDA
 26078                           fsr2l	equ	0xFD9
 26079                           status	equ	0xFD8
 26080                           
 26081 ;; *************** function i2_delay *****************
 26082 ;; Defined at:
 26083 ;;		line 18 in file "src/function.c"
 26084 ;; Parameters:    Size  Location     Type
 26085 ;;  x               2    0[COMRAM] int 
 26086 ;; Auto vars:     Size  Location     Type
 26087 ;;		None
 26088 ;; Return value:  Size  Location     Type
 26089 ;;                  1    wreg      void 
 26090 ;; Registers used:
 26091 ;;		wreg, status,2, status,0
 26092 ;; Tracked objects:
 26093 ;;		On entry : 0/0
 26094 ;;		On exit  : 0/0
 26095 ;;		Unchanged: 0/0
 26096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26097 ;;      Params:         2       0       0       0       0       0       0       0       0
 26098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26099 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26100 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26101 ;;Total ram usage:        3 bytes
 26102 ;; Hardware stack levels used:    1
 26103 ;; This function calls:
 26104 ;;		Nothing
 26105 ;; This function is called by:
 26106 ;;		i2_writeEEPROM_ext
 26107 ;; This function uses a non-reentrant model
 26108 ;;
 26109                           
 26110                           	psect	text69
 26111  005DEE                     __ptext69:
 26112                           	opt stack 0
 26113  005DEE                     i2_delay:
 26114                           	opt stack 21
 26115                           
 26116                           ;function.c: 19: while (x--) {
 26117                           
 26118                           ;incstack = 0
 26119  005DEE  D008               	goto	i2l1477
 26120  005DF0                     i2l6477:
 26121                           
 26122                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 26123  005DF0  0E03               	movlw	3
 26124  005DF2  6E03               	movwf	??i2_delay& (0+255),c
 26125  005DF4  0E98               	movlw	152
 26126  005DF6                     i2u1547_47:
 26127  005DF6  2EE8               	decfsz	wreg,f,c
 26128  005DF8  D7FE               	bra	i2u1547_47
 26129  005DFA  2E03               	decfsz	??i2_delay& (0+255),f,c
 26130  005DFC  D7FC               	bra	i2u1547_47
 26131  005DFE  0004               	clrwdt		;# 
 26132  005E00                     i2l1477:
 26133  005E00  0601               	decf	i2delay@x,f,c
 26134  005E02  A0D8               	btfss	status,0,c
 26135  005E04  0602               	decf	i2delay@x+1,f,c
 26136  005E06  2801               	incf	i2delay@x,w,c
 26137  005E08  E1F3               	bnz	i2l6477
 26138  005E0A  2802               	incf	i2delay@x+1,w,c
 26139  005E0C  B4D8               	btfsc	status,2,c
 26140  005E0E  0012               	return	
 26141  005E10  D7EF               	goto	i2l1478
 26142  005E12                     __end_ofi2_delay:
 26143                           	opt stack 0
 26144                           tosu	equ	0xFFF
 26145                           tosh	equ	0xFFE
 26146                           tosl	equ	0xFFD
 26147                           pclatu	equ	0xFFB
 26148                           pclath	equ	0xFFA
 26149                           tblptru	equ	0xFF8
 26150                           tblptrh	equ	0xFF7
 26151                           tblptrl	equ	0xFF6
 26152                           tablat	equ	0xFF5
 26153                           prodh	equ	0xFF4
 26154                           prodl	equ	0xFF3
 26155                           intcon	equ	0xFF2
 26156                           intcon2	equ	0xFF1
 26157                           intcon3	equ	0xFF0
 26158                           indf0	equ	0xFEF
 26159                           postinc0	equ	0xFEE
 26160                           fsr0h	equ	0xFEA
 26161                           fsr0l	equ	0xFE9
 26162                           wreg	equ	0xFE8
 26163                           indf1	equ	0xFE7
 26164                           postdec1	equ	0xFE5
 26165                           fsr1h	equ	0xFE2
 26166                           fsr1l	equ	0xFE1
 26167                           indf2	equ	0xFDF
 26168                           postinc2	equ	0xFDE
 26169                           postdec2	equ	0xFDD
 26170                           fsr2h	equ	0xFDA
 26171                           fsr2l	equ	0xFD9
 26172                           status	equ	0xFD8
 26173                           
 26174 ;; *************** function _readButtons *****************
 26175 ;; Defined at:
 26176 ;;		line 19 in file "src/Teclado.h"
 26177 ;; Parameters:    Size  Location     Type
 26178 ;;		None
 26179 ;; Auto vars:     Size  Location     Type
 26180 ;;		None
 26181 ;; Return value:  Size  Location     Type
 26182 ;;                  1    wreg      void 
 26183 ;; Registers used:
 26184 ;;		wreg, status,2, status,0, cstack
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26190 ;;      Params:         0       0       0       0       0       0       0       0       0
 26191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26194 ;;Total ram usage:        0 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; Hardware stack levels required when called:    2
 26197 ;; This function calls:
 26198 ;;		i2_I2C_Read
 26199 ;;		i2_I2C_Start
 26200 ;;		i2_I2C_Stop
 26201 ;;		i2_I2C_Write
 26202 ;; This function is called by:
 26203 ;;		_TIMER0
 26204 ;; This function uses a non-reentrant model
 26205 ;;
 26206                           
 26207                           	psect	text70
 26208  005D7A                     __ptext70:
 26209                           	opt stack 0
 26210  005D7A                     _readButtons:
 26211                           	opt stack 22
 26212                           
 26213                           ;Teclado.h: 20: I2C_Start();
 26214                           
 26215                           ;incstack = 0
 26216  005D7A  EC8C  F02F         	call	i2_I2C_Start	;wreg free
 26217                           
 26218                           ;Teclado.h: 21: I2C_Write(0x4F);
 26219  005D7E  0E00               	movlw	0
 26220  005D80  6E03               	movwf	i2I2C_Write@d+1,c
 26221  005D82  0E4F               	movlw	79
 26222  005D84  6E02               	movwf	i2I2C_Write@d,c
 26223  005D86  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26224                           
 26225                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 26226  005D8A  0E00               	movlw	0
 26227  005D8C  6E03               	movwf	i2I2C_Read@a+1,c
 26228  005D8E  0E00               	movlw	0
 26229  005D90  6E02               	movwf	i2I2C_Read@a,c
 26230  005D92  EC7D  F02E         	call	i2_I2C_Read	;wreg free
 26231  005D96  5002               	movf	?i2_I2C_Read,w,c
 26232  005D98  0AFF               	xorlw	255
 26233  005D9A  6E44               	movwf	_bt_flag,c
 26234                           
 26235                           ;Teclado.h: 23: I2C_Stop();
 26236  005D9C  EC88  F02F         	call	i2_I2C_Stop	;wreg free
 26237  005DA0  0012               	return		;funcret
 26238  005DA2                     __end_of_readButtons:
 26239                           	opt stack 0
 26240                           tosu	equ	0xFFF
 26241                           tosh	equ	0xFFE
 26242                           tosl	equ	0xFFD
 26243                           pclatu	equ	0xFFB
 26244                           pclath	equ	0xFFA
 26245                           tblptru	equ	0xFF8
 26246                           tblptrh	equ	0xFF7
 26247                           tblptrl	equ	0xFF6
 26248                           tablat	equ	0xFF5
 26249                           prodh	equ	0xFF4
 26250                           prodl	equ	0xFF3
 26251                           intcon	equ	0xFF2
 26252                           intcon2	equ	0xFF1
 26253                           intcon3	equ	0xFF0
 26254                           indf0	equ	0xFEF
 26255                           postinc0	equ	0xFEE
 26256                           fsr0h	equ	0xFEA
 26257                           fsr0l	equ	0xFE9
 26258                           wreg	equ	0xFE8
 26259                           indf1	equ	0xFE7
 26260                           postdec1	equ	0xFE5
 26261                           fsr1h	equ	0xFE2
 26262                           fsr1l	equ	0xFE1
 26263                           indf2	equ	0xFDF
 26264                           postinc2	equ	0xFDE
 26265                           postdec2	equ	0xFDD
 26266                           fsr2h	equ	0xFDA
 26267                           fsr2l	equ	0xFD9
 26268                           status	equ	0xFD8
 26269                           
 26270 ;; *************** function i2_I2C_Write *****************
 26271 ;; Defined at:
 26272 ;;		line 41 in file "src/I2C.c"
 26273 ;; Parameters:    Size  Location     Type
 26274 ;;  d               2    1[COMRAM] unsigned int 
 26275 ;; Auto vars:     Size  Location     Type
 26276 ;;		None
 26277 ;; Return value:  Size  Location     Type
 26278 ;;                  1    wreg      void 
 26279 ;; Registers used:
 26280 ;;		wreg, status,2, status,0, cstack
 26281 ;; Tracked objects:
 26282 ;;		On entry : 0/0
 26283 ;;		On exit  : 0/0
 26284 ;;		Unchanged: 0/0
 26285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26286 ;;      Params:         2       0       0       0       0       0       0       0       0
 26287 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26289 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26290 ;;Total ram usage:        2 bytes
 26291 ;; Hardware stack levels used:    1
 26292 ;; Hardware stack levels required when called:    1
 26293 ;; This function calls:
 26294 ;;		i2_I2C_Wait
 26295 ;; This function is called by:
 26296 ;;		_readButtons
 26297 ;;		i2_writeEEPROM_ext
 26298 ;; This function uses a non-reentrant model
 26299 ;;
 26300                           
 26301                           	psect	text71
 26302  005EEE                     __ptext71:
 26303                           	opt stack 0
 26304  005EEE                     i2_I2C_Write:
 26305                           	opt stack 20
 26306                           
 26307                           ;I2C.c: 42: I2C_Wait();
 26308                           
 26309                           ;incstack = 0
 26310  005EEE  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26311                           
 26312                           ;I2C.c: 43: SSPBUF = d;
 26313  005EF2  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 26314  005EF6  0012               	return		;funcret
 26315  005EF8                     __end_ofi2_I2C_Write:
 26316                           	opt stack 0
 26317                           tosu	equ	0xFFF
 26318                           tosh	equ	0xFFE
 26319                           tosl	equ	0xFFD
 26320                           pclatu	equ	0xFFB
 26321                           pclath	equ	0xFFA
 26322                           tblptru	equ	0xFF8
 26323                           tblptrh	equ	0xFF7
 26324                           tblptrl	equ	0xFF6
 26325                           tablat	equ	0xFF5
 26326                           prodh	equ	0xFF4
 26327                           prodl	equ	0xFF3
 26328                           intcon	equ	0xFF2
 26329                           intcon2	equ	0xFF1
 26330                           intcon3	equ	0xFF0
 26331                           indf0	equ	0xFEF
 26332                           postinc0	equ	0xFEE
 26333                           fsr0h	equ	0xFEA
 26334                           fsr0l	equ	0xFE9
 26335                           wreg	equ	0xFE8
 26336                           indf1	equ	0xFE7
 26337                           postdec1	equ	0xFE5
 26338                           fsr1h	equ	0xFE2
 26339                           fsr1l	equ	0xFE1
 26340                           indf2	equ	0xFDF
 26341                           postinc2	equ	0xFDE
 26342                           postdec2	equ	0xFDD
 26343                           fsr2h	equ	0xFDA
 26344                           fsr2l	equ	0xFD9
 26345                           status	equ	0xFD8
 26346                           
 26347 ;; *************** function i2_I2C_Stop *****************
 26348 ;; Defined at:
 26349 ;;		line 35 in file "src/I2C.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;		None
 26352 ;; Auto vars:     Size  Location     Type
 26353 ;;		None
 26354 ;; Return value:  Size  Location     Type
 26355 ;;                  1    wreg      void 
 26356 ;; Registers used:
 26357 ;;		wreg, status,2, status,0, cstack
 26358 ;; Tracked objects:
 26359 ;;		On entry : 0/0
 26360 ;;		On exit  : 0/0
 26361 ;;		Unchanged: 0/0
 26362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26363 ;;      Params:         0       0       0       0       0       0       0       0       0
 26364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26366 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26367 ;;Total ram usage:        0 bytes
 26368 ;; Hardware stack levels used:    1
 26369 ;; Hardware stack levels required when called:    1
 26370 ;; This function calls:
 26371 ;;		i2_I2C_Wait
 26372 ;; This function is called by:
 26373 ;;		_readButtons
 26374 ;;		i2_writeEEPROM_ext
 26375 ;; This function uses a non-reentrant model
 26376 ;;
 26377                           
 26378                           	psect	text72
 26379  005F10                     __ptext72:
 26380                           	opt stack 0
 26381  005F10                     i2_I2C_Stop:
 26382                           	opt stack 20
 26383                           
 26384                           ;I2C.c: 36: I2C_Wait();
 26385                           
 26386                           ;incstack = 0
 26387  005F10  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26388                           
 26389                           ;I2C.c: 37: PEN = 1;
 26390  005F14  84C5               	bsf	4037,2,c	;volatile
 26391  005F16  0012               	return		;funcret
 26392  005F18                     __end_ofi2_I2C_Stop:
 26393                           	opt stack 0
 26394                           tosu	equ	0xFFF
 26395                           tosh	equ	0xFFE
 26396                           tosl	equ	0xFFD
 26397                           pclatu	equ	0xFFB
 26398                           pclath	equ	0xFFA
 26399                           tblptru	equ	0xFF8
 26400                           tblptrh	equ	0xFF7
 26401                           tblptrl	equ	0xFF6
 26402                           tablat	equ	0xFF5
 26403                           prodh	equ	0xFF4
 26404                           prodl	equ	0xFF3
 26405                           intcon	equ	0xFF2
 26406                           intcon2	equ	0xFF1
 26407                           intcon3	equ	0xFF0
 26408                           indf0	equ	0xFEF
 26409                           postinc0	equ	0xFEE
 26410                           fsr0h	equ	0xFEA
 26411                           fsr0l	equ	0xFE9
 26412                           wreg	equ	0xFE8
 26413                           indf1	equ	0xFE7
 26414                           postdec1	equ	0xFE5
 26415                           fsr1h	equ	0xFE2
 26416                           fsr1l	equ	0xFE1
 26417                           indf2	equ	0xFDF
 26418                           postinc2	equ	0xFDE
 26419                           postdec2	equ	0xFDD
 26420                           fsr2h	equ	0xFDA
 26421                           fsr2l	equ	0xFD9
 26422                           status	equ	0xFD8
 26423                           
 26424 ;; *************** function i2_I2C_Start *****************
 26425 ;; Defined at:
 26426 ;;		line 25 in file "src/I2C.c"
 26427 ;; Parameters:    Size  Location     Type
 26428 ;;		None
 26429 ;; Auto vars:     Size  Location     Type
 26430 ;;		None
 26431 ;; Return value:  Size  Location     Type
 26432 ;;                  1    wreg      void 
 26433 ;; Registers used:
 26434 ;;		wreg, status,2, status,0, cstack
 26435 ;; Tracked objects:
 26436 ;;		On entry : 0/0
 26437 ;;		On exit  : 0/0
 26438 ;;		Unchanged: 0/0
 26439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26440 ;;      Params:         0       0       0       0       0       0       0       0       0
 26441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26444 ;;Total ram usage:        0 bytes
 26445 ;; Hardware stack levels used:    1
 26446 ;; Hardware stack levels required when called:    1
 26447 ;; This function calls:
 26448 ;;		i2_I2C_Wait
 26449 ;; This function is called by:
 26450 ;;		_readButtons
 26451 ;;		i2_writeEEPROM_ext
 26452 ;; This function uses a non-reentrant model
 26453 ;;
 26454                           
 26455                           	psect	text73
 26456  005F18                     __ptext73:
 26457                           	opt stack 0
 26458  005F18                     i2_I2C_Start:
 26459                           	opt stack 20
 26460                           
 26461                           ;I2C.c: 26: I2C_Wait();
 26462                           
 26463                           ;incstack = 0
 26464  005F18  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26465                           
 26466                           ;I2C.c: 27: SEN = 1;
 26467  005F1C  80C5               	bsf	4037,0,c	;volatile
 26468  005F1E  0012               	return		;funcret
 26469  005F20                     __end_ofi2_I2C_Start:
 26470                           	opt stack 0
 26471                           tosu	equ	0xFFF
 26472                           tosh	equ	0xFFE
 26473                           tosl	equ	0xFFD
 26474                           pclatu	equ	0xFFB
 26475                           pclath	equ	0xFFA
 26476                           tblptru	equ	0xFF8
 26477                           tblptrh	equ	0xFF7
 26478                           tblptrl	equ	0xFF6
 26479                           tablat	equ	0xFF5
 26480                           prodh	equ	0xFF4
 26481                           prodl	equ	0xFF3
 26482                           intcon	equ	0xFF2
 26483                           intcon2	equ	0xFF1
 26484                           intcon3	equ	0xFF0
 26485                           indf0	equ	0xFEF
 26486                           postinc0	equ	0xFEE
 26487                           fsr0h	equ	0xFEA
 26488                           fsr0l	equ	0xFE9
 26489                           wreg	equ	0xFE8
 26490                           indf1	equ	0xFE7
 26491                           postdec1	equ	0xFE5
 26492                           fsr1h	equ	0xFE2
 26493                           fsr1l	equ	0xFE1
 26494                           indf2	equ	0xFDF
 26495                           postinc2	equ	0xFDE
 26496                           postdec2	equ	0xFDD
 26497                           fsr2h	equ	0xFDA
 26498                           fsr2l	equ	0xFD9
 26499                           status	equ	0xFD8
 26500                           
 26501 ;; *************** function i2_I2C_Read *****************
 26502 ;; Defined at:
 26503 ;;		line 46 in file "src/I2C.c"
 26504 ;; Parameters:    Size  Location     Type
 26505 ;;  a               2    1[COMRAM] unsigned short 
 26506 ;; Auto vars:     Size  Location     Type
 26507 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 26508 ;; Return value:  Size  Location     Type
 26509 ;;                  2    1[COMRAM] unsigned short 
 26510 ;; Registers used:
 26511 ;;		wreg, status,2, status,0, cstack
 26512 ;; Tracked objects:
 26513 ;;		On entry : 0/0
 26514 ;;		On exit  : 0/0
 26515 ;;		Unchanged: 0/0
 26516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26517 ;;      Params:         2       0       0       0       0       0       0       0       0
 26518 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26520 ;;      Totals:         4       0       0       0       0       0       0       0       0
 26521 ;;Total ram usage:        4 bytes
 26522 ;; Hardware stack levels used:    1
 26523 ;; Hardware stack levels required when called:    1
 26524 ;; This function calls:
 26525 ;;		i2_I2C_Wait
 26526 ;; This function is called by:
 26527 ;;		_readButtons
 26528 ;; This function uses a non-reentrant model
 26529 ;;
 26530                           
 26531                           	psect	text74
 26532  005CFA                     __ptext74:
 26533                           	opt stack 0
 26534  005CFA                     i2_I2C_Read:
 26535                           	opt stack 22
 26536                           
 26537                           ;I2C.c: 47: unsigned short temp;
 26538                           ;I2C.c: 48: I2C_Wait();
 26539                           
 26540                           ;incstack = 0
 26541  005CFA  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26542                           
 26543                           ;I2C.c: 49: RCEN = 1;
 26544  005CFE  86C5               	bsf	4037,3,c	;volatile
 26545                           
 26546                           ;I2C.c: 50: I2C_Wait();
 26547  005D00  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26548                           
 26549                           ;I2C.c: 51: temp = SSPBUF;
 26550  005D04  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 26551  005D08  6A05               	clrf	i2I2C_Read@temp+1,c
 26552                           
 26553                           ;I2C.c: 52: I2C_Wait();
 26554  005D0A  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26555                           
 26556                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 26557  005D0E  5002               	movf	i2I2C_Read@a,w,c
 26558  005D10  1003               	iorwf	i2I2C_Read@a+1,w,c
 26559  005D12  A4D8               	btfss	status,2,c
 26560  005D14  D002               	goto	i2u1254_40
 26561  005D16  8AC5               	bsf	4037,5,c	;volatile
 26562  005D18  D001               	goto	i2u1255_45
 26563  005D1A                     i2u1254_40:
 26564  005D1A  9AC5               	bcf	4037,5,c	;volatile
 26565  005D1C                     i2u1255_45:
 26566                           
 26567                           ;I2C.c: 54: ACKEN = 1;
 26568  005D1C  88C5               	bsf	4037,4,c	;volatile
 26569                           
 26570                           ;I2C.c: 55: return temp;
 26571  005D1E  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 26572  005D22  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 26573  005D26  0012               	return	
 26574  005D28                     __end_ofi2_I2C_Read:
 26575                           	opt stack 0
 26576                           tosu	equ	0xFFF
 26577                           tosh	equ	0xFFE
 26578                           tosl	equ	0xFFD
 26579                           pclatu	equ	0xFFB
 26580                           pclath	equ	0xFFA
 26581                           tblptru	equ	0xFF8
 26582                           tblptrh	equ	0xFF7
 26583                           tblptrl	equ	0xFF6
 26584                           tablat	equ	0xFF5
 26585                           prodh	equ	0xFF4
 26586                           prodl	equ	0xFF3
 26587                           intcon	equ	0xFF2
 26588                           intcon2	equ	0xFF1
 26589                           intcon3	equ	0xFF0
 26590                           indf0	equ	0xFEF
 26591                           postinc0	equ	0xFEE
 26592                           fsr0h	equ	0xFEA
 26593                           fsr0l	equ	0xFE9
 26594                           wreg	equ	0xFE8
 26595                           indf1	equ	0xFE7
 26596                           postdec1	equ	0xFE5
 26597                           fsr1h	equ	0xFE2
 26598                           fsr1l	equ	0xFE1
 26599                           indf2	equ	0xFDF
 26600                           postinc2	equ	0xFDE
 26601                           postdec2	equ	0xFDD
 26602                           fsr2h	equ	0xFDA
 26603                           fsr2l	equ	0xFD9
 26604                           status	equ	0xFD8
 26605                           
 26606 ;; *************** function i2_I2C_Wait *****************
 26607 ;; Defined at:
 26608 ;;		line 21 in file "src/I2C.c"
 26609 ;; Parameters:    Size  Location     Type
 26610 ;;		None
 26611 ;; Auto vars:     Size  Location     Type
 26612 ;;		None
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  1    wreg      void 
 26615 ;; Registers used:
 26616 ;;		wreg, status,2, status,0
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/0
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26622 ;;      Params:         0       0       0       0       0       0       0       0       0
 26623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26624 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26625 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26626 ;;Total ram usage:        1 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; This function calls:
 26629 ;;		Nothing
 26630 ;; This function is called by:
 26631 ;;		i2_I2C_Start
 26632 ;;		i2_I2C_Stop
 26633 ;;		i2_I2C_Write
 26634 ;;		i2_I2C_Read
 26635 ;; This function uses a non-reentrant model
 26636 ;;
 26637                           
 26638                           	psect	text75
 26639  005EB6                     __ptext75:
 26640                           	opt stack 0
 26641  005EB6                     i2_I2C_Wait:
 26642                           	opt stack 20
 26643                           
 26644                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 26645                           
 26646                           ;incstack = 0
 26647  005EB6  B4C7               	btfsc	4039,2,c	;volatile
 26648  005EB8  D7FE               	goto	i2_I2C_Wait
 26649  005EBA  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 26650  005EBE  0E1F               	movlw	31
 26651  005EC0  1601               	andwf	??i2_I2C_Wait,f,c
 26652  005EC2  B4D8               	btfsc	status,2,c
 26653  005EC4  0012               	return	
 26654  005EC6  D7F7               	goto	i2_I2C_Wait
 26655  005EC8                     __end_ofi2_I2C_Wait:
 26656                           	opt stack 0
 26657                           tosu	equ	0xFFF
 26658                           tosh	equ	0xFFE
 26659                           tosl	equ	0xFFD
 26660                           pclatu	equ	0xFFB
 26661                           pclath	equ	0xFFA
 26662                           tblptru	equ	0xFF8
 26663                           tblptrh	equ	0xFF7
 26664                           tblptrl	equ	0xFF6
 26665                           tablat	equ	0xFF5
 26666                           prodh	equ	0xFF4
 26667                           prodl	equ	0xFF3
 26668                           intcon	equ	0xFF2
 26669                           intcon2	equ	0xFF1
 26670                           intcon3	equ	0xFF0
 26671                           indf0	equ	0xFEF
 26672                           postinc0	equ	0xFEE
 26673                           fsr0h	equ	0xFEA
 26674                           fsr0l	equ	0xFE9
 26675                           wreg	equ	0xFE8
 26676                           indf1	equ	0xFE7
 26677                           postdec1	equ	0xFE5
 26678                           fsr1h	equ	0xFE2
 26679                           fsr1l	equ	0xFE1
 26680                           indf2	equ	0xFDF
 26681                           postinc2	equ	0xFDE
 26682                           postdec2	equ	0xFDD
 26683                           fsr2h	equ	0xFDA
 26684                           fsr2l	equ	0xFD9
 26685                           status	equ	0xFD8
 26686                           tosu	equ	0xFFF
 26687                           tosh	equ	0xFFE
 26688                           tosl	equ	0xFFD
 26689                           pclatu	equ	0xFFB
 26690                           pclath	equ	0xFFA
 26691                           tblptru	equ	0xFF8
 26692                           tblptrh	equ	0xFF7
 26693                           tblptrl	equ	0xFF6
 26694                           tablat	equ	0xFF5
 26695                           prodh	equ	0xFF4
 26696                           prodl	equ	0xFF3
 26697                           intcon	equ	0xFF2
 26698                           intcon2	equ	0xFF1
 26699                           intcon3	equ	0xFF0
 26700                           indf0	equ	0xFEF
 26701                           postinc0	equ	0xFEE
 26702                           fsr0h	equ	0xFEA
 26703                           fsr0l	equ	0xFE9
 26704                           wreg	equ	0xFE8
 26705                           indf1	equ	0xFE7
 26706                           postdec1	equ	0xFE5
 26707                           fsr1h	equ	0xFE2
 26708                           fsr1l	equ	0xFE1
 26709                           indf2	equ	0xFDF
 26710                           postinc2	equ	0xFDE
 26711                           postdec2	equ	0xFDD
 26712                           fsr2h	equ	0xFDA
 26713                           fsr2l	equ	0xFD9
 26714                           status	equ	0xFD8
 26715                           
 26716                           	psect	text76
 26717  000000                     __ptext76:
 26718                           	opt stack 0
 26719                           tosu	equ	0xFFF
 26720                           tosh	equ	0xFFE
 26721                           tosl	equ	0xFFD
 26722                           pclatu	equ	0xFFB
 26723                           pclath	equ	0xFFA
 26724                           tblptru	equ	0xFF8
 26725                           tblptrh	equ	0xFF7
 26726                           tblptrl	equ	0xFF6
 26727                           tablat	equ	0xFF5
 26728                           prodh	equ	0xFF4
 26729                           prodl	equ	0xFF3
 26730                           intcon	equ	0xFF2
 26731                           intcon2	equ	0xFF1
 26732                           intcon3	equ	0xFF0
 26733                           indf0	equ	0xFEF
 26734                           postinc0	equ	0xFEE
 26735                           fsr0h	equ	0xFEA
 26736                           fsr0l	equ	0xFE9
 26737                           wreg	equ	0xFE8
 26738                           indf1	equ	0xFE7
 26739                           postdec1	equ	0xFE5
 26740                           fsr1h	equ	0xFE2
 26741                           fsr1l	equ	0xFE1
 26742                           indf2	equ	0xFDF
 26743                           postinc2	equ	0xFDE
 26744                           postdec2	equ	0xFDD
 26745                           fsr2h	equ	0xFDA
 26746                           fsr2l	equ	0xFD9
 26747                           status	equ	0xFD8
 26748                           
 26749                           	psect	rparam
 26750  0000                     tosu	equ	0xFFF
 26751                           tosh	equ	0xFFE
 26752                           tosl	equ	0xFFD
 26753                           pclatu	equ	0xFFB
 26754                           pclath	equ	0xFFA
 26755                           tblptru	equ	0xFF8
 26756                           tblptrh	equ	0xFF7
 26757                           tblptrl	equ	0xFF6
 26758                           tablat	equ	0xFF5
 26759                           prodh	equ	0xFF4
 26760                           prodl	equ	0xFF3
 26761                           intcon	equ	0xFF2
 26762                           intcon2	equ	0xFF1
 26763                           intcon3	equ	0xFF0
 26764                           indf0	equ	0xFEF
 26765                           postinc0	equ	0xFEE
 26766                           fsr0h	equ	0xFEA
 26767                           fsr0l	equ	0xFE9
 26768                           wreg	equ	0xFE8
 26769                           indf1	equ	0xFE7
 26770                           postdec1	equ	0xFE5
 26771                           fsr1h	equ	0xFE2
 26772                           fsr1l	equ	0xFE1
 26773                           indf2	equ	0xFDF
 26774                           postinc2	equ	0xFDE
 26775                           postdec2	equ	0xFDD
 26776                           fsr2h	equ	0xFDA
 26777                           fsr2l	equ	0xFD9
 26778                           status	equ	0xFD8
 26779                           
 26780                           	psect	temp
 26781  000051                     btemp:
 26782                           	opt stack 0
 26783  000051                     	ds	1
 26784  0000                     int$flags	set	btemp
 26785  0000                     wtemp6	set	btemp+1
 26786                           tosu	equ	0xFFF
 26787                           tosh	equ	0xFFE
 26788                           tosl	equ	0xFFD
 26789                           pclatu	equ	0xFFB
 26790                           pclath	equ	0xFFA
 26791                           tblptru	equ	0xFF8
 26792                           tblptrh	equ	0xFF7
 26793                           tblptrl	equ	0xFF6
 26794                           tablat	equ	0xFF5
 26795                           prodh	equ	0xFF4
 26796                           prodl	equ	0xFF3
 26797                           intcon	equ	0xFF2
 26798                           intcon2	equ	0xFF1
 26799                           intcon3	equ	0xFF0
 26800                           indf0	equ	0xFEF
 26801                           postinc0	equ	0xFEE
 26802                           fsr0h	equ	0xFEA
 26803                           fsr0l	equ	0xFE9
 26804                           wreg	equ	0xFE8
 26805                           indf1	equ	0xFE7
 26806                           postdec1	equ	0xFE5
 26807                           fsr1h	equ	0xFE2
 26808                           fsr1l	equ	0xFE1
 26809                           indf2	equ	0xFDF
 26810                           postinc2	equ	0xFDE
 26811                           postdec2	equ	0xFDD
 26812                           fsr2h	equ	0xFDA
 26813                           fsr2l	equ	0xFD9
 26814                           status	equ	0xFD8


Data Sizes:
    Strings     2083
    Constant    66
    Data        30
    BSS         319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      80
    BANK0           160    137     160
    BANK1           256    150     245
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_57(CODE[3]), STR_43(CODE[14]), STR_42(CODE[3]), STR_41(CODE[3]), 
		 -> STR_34(CODE[14]), STR_25(CODE[14]), STR_24(CODE[21]), STR_23(CODE[17]), 
		 -> STR_22(CODE[20]), STR_11(CODE[3]), STR_10(CODE[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), filtroStr@aux(BANK1[60]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[168]), 
		 -> STR_55(CODE[19]), STR_53(CODE[40]), STR_50(CODE[15]), STR_49(CODE[21]), 
		 -> STR_46(CODE[14]), STR_44(CODE[14]), STR_33(CODE[16]), STR_32(CODE[704]), 
		 -> STR_31(CODE[45]), STR_29(CODE[21]), STR_20(CODE[22]), STR_18(CODE[22]), 
		 -> STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_112(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> STR_91(CODE[10]), STR_90(CODE[7]), STR_88(CODE[11]), STR_87(CODE[8]), 
		 -> STR_85(CODE[11]), STR_84(CODE[7]), STR_72(CODE[12]), STR_58(CODE[12]), 
		 -> enviaDadosWifi@AUX(BANK0[15]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), senha(BANK2[15]), 
		 -> STR_38(CODE[2]), ssid(BANK2[15]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), filtroStr@aux(BANK1[60]), 
		 -> filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), STR_9(CODE[3]), STR_8(CODE[5]), 
		 -> STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[168]), 
		 -> STR_57(CODE[3]), STR_55(CODE[19]), STR_53(CODE[40]), STR_50(CODE[15]), 
		 -> STR_49(CODE[21]), STR_46(CODE[14]), STR_44(CODE[14]), STR_43(CODE[14]), 
		 -> STR_42(CODE[3]), STR_41(CODE[3]), STR_34(CODE[14]), STR_33(CODE[16]), 
		 -> STR_32(CODE[704]), STR_31(CODE[45]), STR_29(CODE[21]), STR_25(CODE[14]), 
		 -> STR_24(CODE[21]), STR_23(CODE[17]), STR_22(CODE[20]), STR_20(CODE[22]), 
		 -> STR_18(CODE[22]), STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), 

    S1734__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1734__prbuf$ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    main$1659	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_91(CODE[10]), STR_90(CODE[7]), 

    main$1654	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_88(CODE[11]), STR_87(CODE[8]), 

    main$1649	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_85(CODE[11]), STR_84(CODE[7]), 

    filtroStr@strdest	PTR unsigned char  size(2) Largest target is 15
		 -> senha(BANK2[15]), ssid(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@fim	PTR unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@inicio	PTR unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[7]), STR_37(CODE[6]), 

    filtroStr@p	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    filtroStr@str	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    getMac@var	PTR unsigned char  size(2) Largest target is 24
		 -> wifi_MAC(BANK2[24]), 

    getMac@mac	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(BANK1[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(BANK0[1]), wifi_habilita_alteracao(BANK1[2]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(BANK0[1]), t_flap_ligado(BANK0[1]), h_buzzer(BANK0[1]), 
		 -> h_modo_seguranca(BANK0[1]), h_venotinha(BANK0[1]), h_flap(BANK1[1]), h_abafador(BANK0[1]), 
		 -> wifi_SENHA(BANK1[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(BANK0[1]), buzzer(BANK0[1]), 
		 -> fornalha(BANK0[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_enviaDadosWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _getMac->_strstr
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarConfigWifi->_printf
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _printf->__doprnt
    _limpaBuffer->_memset
    _filtroStr->_sprintf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _strcpy->_strtok
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    _alterarConfigWifi->_filtroStr

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  156477
                                            119 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
                  _alterarConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11829
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18905
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      20    20      0   26426
                                             99 BANK0     20    20      0
                             ___wmul
                              _delay
                             _getMac
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _getMac                                               9     5      4    1177
                                             19 BANK0      9     5      4
                             _strlen
                             _strstr (ARG)
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarConfigWifi                                    1     1      0   50616
                                             99 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                          _filtroStr
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2570
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    4864
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _limpaBuffer                                          0     0      0    1562
                              _delay
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1238
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _filtroStr                                          163   155      8   20466
                                             49 BANK0     13     5      8
                                              0 BANK1    150   150      0
                            _sprintf
                             _strcpy
                             _strlen
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    1926
                                             13 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               4     0      4    5505
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     622
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4     544
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     369
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               7     3      4     227
                                             17 BANK0      7     3      4
                             _strtok (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   10620
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3292
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1331
                                             29 COMRAM    19    19      0
                        _readButtons
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _filtroStr
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strcpy
         _strtok (ARG)
           _strcspn
             _strchr
           _strspn
             _strchr
       _strlen
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _getMac
       _strlen
       _strstr (ARG)
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     96      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AD      20        0.0%
DATA                 0      0     2AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Nov 09 18:16:14 2019

                 i2_setRangeValor 52D8                 setRangeValor@_aux 006E  
               setRangeValor@_max 0068           __size_of_readEEPROM_ext 0052  
               setRangeValor@_min 0067                __size_of_I2C_Start 0008  
             tabelaUmidade@_clima 0062                __size_of_I2C_Write 000A  
                              _GO 007E11                setRangeValor@_acao 006D  
              _tipo_modo_trabalho 00F6                       __CFG_BOR$ON 000000  
             ___wmul@multiplicand 0062                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                    ___ftadd@exp1 0086                      ___ftadd@exp2 0085  
                    ___ftadd@sign 0084                       __CFG_WDT$ON 000000  
                             l213 5E48                               l301 1674  
                             l230 5CC0                               l231 5CC8  
                             l311 16BA                               l303 1682  
                             l400 1912                               l225 5CAA  
                             l321 1702                               l313 16C8  
                             l305 1690                               l226 5CAC  
                             l242 4F84                               l402 1932  
                             l227 5CB4                               l243 4EF4  
                             l323 1722                               l315 16D6  
                             l307 169E                               l228 5CB6  
                             l260 4E9A                               l404 1956  
                             l229 5CBE                               l245 4F18  
                             l325 1746                               l317 16E4  
                             l309 16AC                               l246 4F3C  
                             l270 50AE                               l510 1C44  
                             l502 1C14                               l247 4F60  
                             l255 5CDE                               l280 5C32  
                             l281 5C1C                               l273 50BE  
                             l361 1834                               l506 1C2C  
                             l442 1A50                               l426 19E6  
                             l275 50EC                               l267 5098  
                             l292 5E6A                               l428 1A06  
                             l269 50A2                               l517 25F8  
                             l541 1D40                               l445 1A66  
                             l630 260E                               l518 1C92  
                             l631 1F32                               l527 1CE0  
                             l383 189C                               l359 1814  
                             l800 243C                               l632 1F48  
                             l296 1C86                               l472 1B24  
                             l625 1F1C                               l553 1D96  
                             l529 1D00                               l297 1C5C  
                             l810 248C                               l802 244C  
                             l642 1FA2                               l634 1F58  
                             l482 1B6C                               l474 1B3C  
                             l466 1AF0                               l298 1652  
                             l563 1DCC                               l547 1D74  
                             l299 1666                               l900 59EA  
                             l820 24DC                               l812 249C  
                             l804 245C                               l740 2222  
                             l644 1FC8                               l492 1BC0  
                             l901 59F4                               l902 59FE  
                             l830 252C                               l822 24EC  
                             l814 24AC                               l806 246C  
                             l750 228A                               l670 2096  
                             l662 2056                               l654 2006  
                             l646 1FD8                               l638 1F72  
                             l486 1B90                               l478 1B54  
                             l910 47D6                               l840 257C  
                             l832 253C                               l824 24FC  
                             l816 24BC                               l808 247C  
                             l760 22E6                               l752 22AE  
                             l680 20D4                               l664 2066  
                             l656 2016                               l496 1BE4  
                             l488 1BA8                               l920 4832  
                             l912 47DE                               l745 223E  
                             l913 4800                               l850 25E2  
                             l842 258C                               l834 254C  
                             l826 250C                               l818 24CC  
                             l770 234C                               l762 22F6  
                             l746 2254                               l666 2076  
                             l658 2026                               l498 1BFC  
                             l906 4878                               l930 485A  
                             l922 4824                               l579 1E20  
                             l915 47F4                               l907 47C0  
                             l940 5220                               l844 259C  
                             l836 255C                               l828 251C  
                             l780 239C                               l772 235C  
                             l764 2306                               l748 2264  
                             l676 20BA                               l668 2086  
                             l924 482C                               l908 47E4  
                             l941 51E0                               l925 484E  
                             l917 47FC                               l870 467E  
                             l934 5212                               l846 25AC  
                             l838 256C                               l790 23EC  
                             l782 23AC                               l774 236C  
                             l766 2316                               l758 22D6  
                             l686 20F8                               l918 488C  
                             l943 520A                               l935 51BA  
                             l927 4842                               l919 480C  
                             l872 4688                               l848 25D2  
                             l792 23FC                               l784 23BC  
                             l776 237C                               l768 2326  
                             l688 2108                               l881 4702  
                             l873 4692                               l937 51DA  
                             l929 484A                               l890 4768  
                             l874 469C                               l946 5230  
                             l794 240C                               l786 23CC  
                             l778 238C                               l883 471C  
                             l875 46A6                               l972 44C2  
                             l892 477E                               l868 46CC  
                             l796 241C                               l788 23DC  
                             l981 45EE                               l965 44C6  
                             l869 46B0                               l990 3646  
                             l966 438C                               l878 4736  
                             l798 242C                               l967 43D4  
                             l879 46E8                               l976 460A  
                             l992 3662                               l888 4752  
                             l977 45AC                               l897 5A08  
                             l969 442E                               l994 3688  
                             l986 3636                               l898 59DE  
                             l979 45E6                               l995 36A0  
                             l989 3A8C                               l997 36C6  
                             l998 36DE                      __CFG_CPB$OFF 000000  
                             _PEN 007E2A                      __CFG_CPD$OFF 000000  
                             _SEN 007E28                               _cbf 0043  
                             _hor 0046                               _min 0047  
                             _sec 0048                       ?i2_I2C_Read 0002  
                     ?i2_I2C_Wait 0001                       ?i2_I2C_Stop 0001  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      ?_atualizaLCD 0068  
                    __CFG_FOSC$HS 000000              __size_of_I2C_Restart 0008  
                    __CFG_LVP$OFF 000000                      ___ftdiv@cntr 0090  
                    ___ftdiv@sign 0095                              l1000 3704  
                            l1001 371C                              l1010 384A  
                            l1011 3862                              l1003 3742  
                            l1004 375A                              l1013 3888  
                            l1014 38F0                              l1006 3784  
                            l1030 3024                              l1031 2C04  
                            l1024 3A84                              l1040 2CF4  
                            l1017 3A32                              l1033 2C20  
                            l1050 2DEC                              l1042 2D14  
                            l2003 5952                              l1019 3A60  
                            l1051 2E48                              l1035 2C46  
                            l1027 2BE8                              l2004 594A  
                            l1060 301E                              l1052 2E1A  
                            l1044 2D70                              l1036 2C5E  
                            l1300 04DA                              l2013 5A7C  
                            l1053 2E46                              l1045 2D88  
                            l1301 04F2                              l2014 5A74  
                            l1150 54D0                              l1062 30F6  
                            l1038 2CB6                              l1310 05BC  
                            l1302 0502                              l2007 5972  
                            l1151 54E6                              l1063 308A  
                            l1055 2F50                              l1047 2DAE  
                            l1039 2CF0                              l1311 0632  
                            l1303 052A                              l2008 597C  
                            l1152 551E                              l1048 2DC6  
                            l1224 3506                              l1232 3252  
                            l1400 0F38                              l1312 0604  
                            l2017 5A94                              l1065 30A2  
                            l1057 2FA8                              l1241 3398  
                            l1401 0F66                              l1305 063E  
                            l2018 5A9E                              l1170 3CEA  
                            l1162 3BF6                              l1058 2FC0  
                            l1234 3260                              l1226 3134  
                            l1410 106E                              l1322 0700  
                            l1306 0554                              l2027 5C88  
                            l1147 54B2                              l1171 3C9C  
                            l1067 30EE                              l1219 52B2  
                            l1235 338C                              l1403 0F90  
                            l1315 0638                              l1307 0592  
                            l2212 48AC                              l2028 5C76  
                            l1180 3CF0                              l1156 3B4A  
                            l1252 3522                              l1244 347A  
                            l1236 32A8                              l1228 313C  
                            l1412 1098                              l1404 0FBE  
                            l1316 0A60                              l1340 09A4  
                            l1332 0778                              l1324 0710  
                            l2213 48BE                              l1149 54C4  
                            l1181 3D04                              l1173 3CAA  
                            l1157 3B32                              l1245 34A8  
                            l1229 3158                              l1421 11AC  
                            l1413 10CC                              l1341 09AA  
                            l1317 0650                              l1174 3CAE  
                            l1158 3B46                              l1254 35AE  
                            l1238 335E                              l1430 12B4  
                            l1422 11DA                              l1406 0FE8  
                            l1350 0AB8                              l1342 0A16  
                            l2215 4914                              l1191 3DC8  
                            l1183 3D16                              l1167 3C48  
                            l1247 34DE                              l1431 12E2  
                            l1415 10F6                              l1407 1016  
                            l1343 0E0A                              l1335 07B4  
                            l1319 067C                              l1271 024E  
                            l2240 5766                              l2216 4986  
                            l1176 3CE0                              l1424 1204  
                            l1416 112A                              l1360 0C46  
                            l1352 0AE2                              l1336 07E2  
                            l1328 0744                              l1280 030C  
                            l2217 498E                              l1193 3E0E  
                            l1185 3DA0                              l1169 3C68  
                            l1249 34EA                              l1441 14B2  
                            l1433 130C                              l1425 1232  
                            l1409 1040                              l1337 086C  
                            l1281 033C                              l1273 027A  
                            l2170 581E                              l1450 1492  
                            l1434 133A                              l1418 1154  
                            l1346 0D90                              l1370 0CEE  
                            l1362 0C70                              l1354 0B1C  
                            l1338 08F4                              l1195 3E58  
                            l1451 14A2                              l1427 125C  
                            l1419 1182                              l1347 0A80  
                            l1339 098C                              l1540 2618  
                            l1196 3E70                              l1188 3DA2  
                            l1460 1514                              l1444 1470  
                            l1436 1364                              l1428 128A  
                            l1348 0DD6                              l1380 0D8A  
                            l1356 0B4A                              l1284 0A1E  
                            l1276 02B6                              l1541 2688  
                            l1197 3EB2                              l1189 3DB6  
                            l1461 1542                              l1445 1418  
                            l1437 13DA                              l1381 0DE6  
                            l1357 0BB0                              l1349 0A84  
                            l1293 0412                              l1285 038A  
                            l1542 265C                              l2182 5884  
                            l1446 1482                              l1438 13EA  
                            l1390 0E2A                              l1382 0DF6  
                            l1374 0D2A                              l1366 0CB2  
                            l1286 03C2                              l1278 0304  
                            l2183 58AE                              l2175 58EC  
                            l2255 4E0C                              l2247 55BC  
                            l1199 3EFC                              l1455 15CC  
                            l1463 156C                              l1447 1420  
                            l1391 0E5E                              l1359 0C12  
                            l1287 03E4                              l1552 2958  
                            l2176 58E6                              l2256 4D5A  
                            l2248 55B4                              l1464 159A  
                            l1456 14BC                              l1376 0D46  
                            l1553 2716                              l1545 26B4  
                            l2169 5828                              l2185 58CA  
                            l2257 4E02                              l1457 14EA  
                            l1449 146A                              l1385 1404  
                            l1393 13CA                              l1297 0454  
                            l1289 03F6                              l1562 27B4  
                            l1554 2750                              l2186 58BA  
                            l2266 5538                              l1810 4FC2  
                            l1466 15C4                              l1394 0E88  
                            l1378 0D66                              l1547 2922  
                            l1571 28EC                              l1563 27EE  
                            l1555 2760                              l2267 5530  
                            l1467 15F4                              l1459 15E4  
                            l1395 0EB6                              l1572 2910  
                            l1564 2818                              l1556 275A  
                            l1812 5000                              l1468 1604  
                            l1573 2992                              l2197 5164  
                            l1477 5D3E                              l1813 4FEA  
                            l1469 1616                              l1389 136C  
                            l1397 0EE0                              l1590 2B7C  
                            l1582 2A4A                              l2198 5100  
                            l1478 5D2A                              l1398 0F0E  
                            l1591 2BA6                              l1583 2A74  
                            l1567 282C                              l1559 27AA  
                            l2199 513C                              l1815 5028  
                            l1911 4A3E                              l1568 288C  
                            l1816 501E                              l1840 421E  
                            l1920 4A7E                              l1912 4A2E  
                            l1577 29DC                              l1569 28DA  
                            l1809 4FCC                              l1586 2ACA  
                            l1578 2A00                              l1587 2AF4  
                            l1579 2A08                              l1924 5E2C  
                            l1844 4248                              l1589 2AFA  
                            l1917 4A62                              l1909 49C6  
                            l1950 56E0                              l1854 42A4  
                            l1918 4A56                              l1951 56D4  
                            l1863 42E2                              l1855 429A  
                            l1864 42D8                              l1849 42AE  
                            l1873 4C9A                              l1881 5436  
                            l7001 1A76                              l1954 5714  
                            l1866 4306                              l1882 5466  
                            l1890 4AE2                              l1955 5722  
                            l1867 4322                              l1875 4CC2  
                            l1891 4B14                              l1868 4352  
                            l1876 4D00                              l1892 4B24  
                            l1877 4D26                              l1894 4B3C  
                            l1895 4B4C                              l1888 4ABA  
                            l6331 27B4                              l6147 5492  
                            l7043 1AF0                              l6341 282C  
                            l6167 5ECC                              l7055 1B24  
                            l7161 1D00                              l7137 1CA2  
                            l6443 4D5A                              l7155 1CE0  
                            l6543 5CD6                              l6375 2996  
                            l8303 50A6                              l7079 1B90  
                            l6561 5C76                              l9105 3150  
                            l7097 1BE4                              l6555 5D2A  
                            l7435 2056                              l7621 22AE  
                            l7605 2254                              l7357 1F1C  
                            l7615 228A                              l7391 1FA2  
                            l7199 1D74                              l6577 58BA  
                            l9145 3390                              l9129 32A0  
                            l7369 1F48                              l6921 1932  
                            l6729 1666                              l6915 1912  
                            l9181 351A                              l7397 1FC8  
                            l6845 1834                              l8295 5090  
                            l6927 1956                              l6839 1814  
                            l6697 4E92                              l7817 25D2  
                            l7593 2222                              l6881 18AC  
                            l6785 1746                              l9353 0246  
                            l7659 234C                              l6963 19E6  
                            l6779 1722                              _ADON 007E10  
                            l9365 0272                              l8647 3A2A  
                            l9199 35A6                              l6969 1A06  
                            l8659 3A58                              STR_1 7EDE  
                            STR_2 7EBC                              STR_3 7ED3  
                            STR_4 7F14                              STR_5 7FE6  
                            STR_6 7FC7                              STR_7 7F97  
                            STR_8 7FE1                              STR_9 7FF2  
                            _RCIF 007CF5                              _RCEN 007E2B  
                            u8120 29C2                              u8060 2882  
                            u8028 27D8                              u8300 4DF0  
                            u9100 1824                              u8070 28C4  
                            u8160 2A10                              u8320 5558  
                            u8250 2BB0                              u8058 2850  
                            u9210 189A                              u8067 2878  
                            u8059 2884                              u8307 4DE6  
                            u8260 2BCA                              u8228 2AB4  
                            u8340 5586                              u9300 1902  
                            u8077 28BA                              u8190 2A84  
                            u8270 4D7A                              u8510 518E  
                            u8350 559E                              u8327 554E  
                            u7800 5A80                              u8248 2B66  
                            u8600 5848                              u8520 5194  
                            u8360 55DC                              u9320 1922  
                            u9080 1804                              u8610 5870  
                            u8290 4DB6                              u8347 557C  
                            u8188 2A34                              u7820 5754  
                            u8380 560A                              u9340 1942  
                            u8277 4D70                              u8517 5184  
                            u8390 5622                              u8550 48FC  
                            u8607 583E                              u8295 4DB0  
                            u8367 55D2                              u7840 5792  
                            u8640 4FB4                              u8800 169A  
                            u8617 5864                              u8297 4DA6  
                            u7770 5956                              u8570 4956  
                            u8730 5BFC                              u8810 16A8  
                            u7827 574A                              u8387 5600  
                            u9460 19D2                              u8900 1732  
                            u8820 16B6                              u8557 48F2  
                            u8590 4980                              u9470 19E2  
                            u8830 16C4                              u7847 5788  
                            u7880 590C                              u8680 5032  
                            u9800 1B7C                              u9720 1B14  
                            u9560 1A4C                              u9480 19F6  
                            u8840 16D2                              u8760 1662  
                            u8577 494C                              u8745 5BFE  
                            u9810 1B8C                              u9570 1A64  
                            u8850 16E0                              u8770 1670  
                            u7980 278C                              u7948 2646  
                            u8597 4974                              u7990 2792  
                            u9910 1C10                              u9830 1BA4  
                            u9750 1B38                              u8790 168C  
                            u7887 5902                              u9680 1AE0  
                            u8880 1712                              u9930 1C28  
                            u9850 1BBC                              u9770 1B50  
                            u7987 2782                              u9860 1BD0  
                            u9950 1C40                              u9870 1BE0  
                            u9790 1B68                              u9960 1C58  
                            u9890 1BF8                              _RSEN 007E29  
                 _f_wifi_processo 0196                              __led 0050  
               ?_Lcd_Write_String 0064                              __sec 0049  
                            _fase 00EC                              _main 0012  
                            _leds 0045                      ___ftpack@arg 0060  
                            _menu 00FB                      ___ftpack@exp 0063  
                            _temp 00FD                  __end_of_I2C_Read 5C0A  
                            _umid 00FC                              fsr0h 000FEA  
                            _ssid 02A1                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0051  
                __end_of_I2C_Wait 5EB6                  __end_of_I2C_Stop 5F08  
                    ?i2_I2C_Start 0001                              prodh 000FF4  
                            prodl 000FF3                      ?i2_I2C_Write 0002  
                 __end_ofi2_delay 5E12                              start 000E  
              ??_Lcd_Write_String 0066                     __CFG_IESO$OFF 000000  
                filtroStr@strdest 0097                   __end_of_Lcd_Cmd 5DEE  
                   __CFG_MCLRE$ON 000000                      ___ftmul@cntr 0079  
                    ___param_bank 000000                      ___ftmul@sign 007A  
                    ___fttol@exp1 00A4                      ___fttol@lval 00A0  
                ?_I2C_Master_Init 006D                     __CFG_PLLDIV$1 000000  
                    ?_readButtons 0001                    __CFG_CCP2MX$ON 000000  
                           ?_main 0001                             _ACKEN 007E2C  
                           _ACKDT 007E2D                   __end_of___ftadd 4378  
                           STR_10 7F25                             STR_11 7F25  
                           STR_12 7E50                             STR_20 7BD1  
                           STR_21 7FF5                             STR_13 7FF5  
                           STR_30 7C77                             STR_14 7E42  
                           STR_22 7CC9                             STR_15 7FF5  
                           STR_23 7D83                             STR_31 7B43  
                           STR_40 7FF8                             STR_24 7C27  
                           STR_16 7B98                             STR_32 77DB  
                           STR_17 7FF5                             STR_41 7F25  
                           STR_25 7E88                             STR_33 7DE9  
                           STR_42 7F25                             STR_26 7FCD  
                           STR_34 7E7A                             STR_50 7DF9  
                           STR_18 7BBB                             STR_19 7FF5  
                           STR_51 7FFA                             STR_35 7FD2  
                           STR_27 7FBA                             STR_43 7E6C  
                           STR_52 7FFC                             STR_60 7FEA  
                           STR_36 7FAC                             STR_28 7F6A  
                           STR_44 7E34                             STR_45 7FF5  
                           STR_61 7FD7                             STR_37 7FC1  
                           STR_29 7C12                             STR_53 7B70  
                           STR_54 7FF5                             STR_38 7FF8  
                           STR_70 7E96                             STR_62 7E5E  
                           STR_46 7E26                             STR_63 7FF5  
                           STR_47 7FF5                             STR_71 7F25  
                           STR_39 7F89                             STR_55 7CDD  
                           STR_72 7EA4                             STR_56 7C77  
                           STR_48 7FDC                             STR_64 7F90  
                           STR_80 7E08                             STR_57 7F25  
                           STR_81 7F4F                             STR_65 7EC8  
                           STR_73 7EB0                             STR_49 7BFD  
                           STR_66 7FEE                             STR_90 7FA5  
                           STR_82 7F1E                             STR_58 7EA4  
                           STR_74 7E17                             STR_67 7FEE  
                           STR_83 7F58                             STR_91 7F0A  
                           STR_75 7C3C                             STR_59 7A9B  
                           STR_84 7F9E                             STR_68 7F46  
                           STR_92 7C8D                             STR_76 7BE7  
                           STR_77 7F32                             STR_85 7EE9  
                           STR_69 7CB5                             STR_93 7C79  
                           STR_86 7F28                             STR_94 7CA1  
                           STR_78 7C51                             STR_87 7F72  
                           STR_95 7DA5                             STR_79 7D29  
                           STR_88 7EF4                             STR_96 7DB6  
                           STR_89 7EFF                             STR_97 7DC7  
                           STR_98 7DD8                             STR_99 7D3B  
                 __end_of___ftdiv 4D58                   __end_of___lldiv 5734  
                           u10020 1CD0                             u10040 1CF0  
                           u10140 1D64                             u11200 225E  
                           u12010 5296                             u11210 2274  
                           u12004 5286                             u11300 2300  
                           u11220 2284                   __end_of___ftmul 4B86  
                           u12005 5282                             u11310 2310  
                           u11230 229A                             u11150 2212  
                           u12120 423A                             u11400 23A6  
                           u11320 2320                             _T0CON 000FD5  
                           u12034 52A6                             u11410 23B6  
                           u11330 2336                             u10610 1F6C  
                           u12051 41DC                             u12035 52A2  
                           u12220 42EA                             u12028 529A  
                           u11500 2446                             u11420 23C6  
                           u11340 2346                             u11180 223C  
                           u10540 1F0C                             u12061 41F0  
                           u13030 3A22                             u13110 2C82  
                           u12150 4278                             u11510 2456  
                           u11430 23D6                             u11350 2356  
                           u11190 224E                             u10630 1F8E  
                           u12311 4AA2                             u13120 2CA8  
                           u13112 2C84                             u11600 24E6  
                           u11520 2466                             u11440 23E6  
                           u11360 2366                             u11280 22E0  
                           u10720 2010                             u12401 49AA  
                           u13050 3A54                             u13122 2CAA  
                           u12090 4210                             u11610 24F6  
                           u11530 2476                             u11450 23F6  
                           u11290 22F0                             u10650 1FB2  
                           u10570 1F30                             u12331 4ACA  
                           u13220 2F74                             u12420 49E4  
                           u11700 2586                             u11620 2506  
                           u11540 2486                             u10660 1FC2  
                           u10580 1F42                             u12261 4C82  
                 __end_of___fttol 4A90                             u13070 3A82  
                           u13230 2F9A                             u13222 2F76  
                           u13150 2D38                             u12190 42B6  
                           u11710 2596                             u11630 2516  
                           u11550 2496                             u11470 2416  
                           u11390 2396                             u10750 2040  
                           u10590 1F52                             u11800 440A  
                           u13232 2F9C                             u13160 2D5E  
                           u13152 2D3A                             u11720 25A6  
                           u11640 2526                             u11560 24A6  
                           u11480 2426                             u10760 2050  
                           u12281 4CAA                             u12425 49DC  
                           u13250 2FE4                             u13162 2D60  
                           u14210 34D0                             u11730 25BC  
                           u11650 2536                             u11570 24B6  
                           u11490 2436                             u10850 20CE  
                           u12620 50F8                             u13260 300A  
                           u13252 2FE6                             u12460 4A68  
                           u11740 25CC                             u11660 2546  
                           u11580 24C6                             u13262 300C  
                           u14230 3560                             u11750 25DC  
                           u11670 2556                             u11590 24D6  
                           u11807 4400                             u11840 446A  
                           u14160 341C                             u11760 25F2  
                           u11680 2566                             u10880 20F2  
                  _filtroStr$1335 018E                             u12490 56E4  
                           u12570 5060                             u11770 43C0  
                           u14250 35EC                             u14090 31DC  
                           u11690 2576                             u10890 2102  
                           u14340 026E                             u11950 5500  
                           u11870 44BC                             u11847 4460  
                           u14360 029A                             u14265 57D4  
                           u11777 43B6                             u11980 5276  
                           u11877 44B2                             u13750 3BAE  
                           u14630 0A78                             u15407 5B4A  
                           u11975 551A                             u13735 3B42  
                           u11976 551C                             u11968 5504  
                           u15417 5B5E                             u13737 3B44  
                           u15427 5646                             u13780 3BF2  
                           u14740 0C94                             u15437 565E  
                           u12990 3838                             u13950 3D80  
                           u11998 527A                             u15447 5676  
                           u13695 3AFC                             u13960 3D8C  
                           u14760 0CD0                             u15457 5DE0  
                           u13697 3AFE                             u15377 5266  
                           u15467 5808                             u15387 5078  
                           u14860 0E1A                             u14780 0D0C  
                           u15397 5D32                             u13966 3D8E  
                 __end_of___lwdiv 5986                   __end_of___lwmod 5AA8  
                           i2l940 5354                             i2l941 5314  
                           i2l934 5346                             i2l943 533E  
                           i2l935 52EE                             i2l937 530E  
                           i2l946 5364                             _RCREG 000FAE  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                      ?_limpaBuffer 0001  
                   __CFG_USBDIV$1 000000                   __end_of__doprnt 2BD6  
         __size_of_Lcd_Set_Cursor 00B4                             _TXREG 000FAD  
                 _writeEEPROM_ext 5AA8                     __CFG_PWRT$OFF 000000  
                 __end_of_btPress 5E6E                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
              __size_of_UART_Init 001C                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 __end_of_readADC 52D8                    __CFG_EBTRB$OFF 000000  
                           _delay 5D28                             _blink 5C0A  
                           __temp 0221                             _clima 00EB  
                           __umid 0200                   __end_of_dpowers 77DB  
                           _line1 01DA                             _line2 01C5  
                           _line3 01B0                             _line4 019B  
                 __end_of_isdigit 5E34                             _senha 0292  
                   ___ftpack@sign 0064          _contador_fase_automatica 0278  
                           _timer 3F16                             _putch 5EC8  
                           main@i 00E8                 __end_of_I2C_Start 5F10  
                  __pbitbssCOMRAM 0278                 __end_of_I2C_Write 5EEE  
                           pclath 000FFA             __end_of_setRangeValor 523E  
                           tablat 000FF5             setRangeValor@_var_ajt 0065  
                           status 000FD8           __end_ofi2_setRangeValor 5372  
                           wtemp6 0052                   __end_of_sprintf 5A64  
                  setUmidade@_umd 0079                   __end_of_strcspn 562C  
                 __end_of_strncmp 4E28                   __end_of_strncpy 58DC  
                  __CFG_ICPRT$OFF 000000                  atualizaLCD@line1 0068  
                atualizaLCD@line2 006A                  atualizaLCD@line3 006C  
                atualizaLCD@line4 006E             i2writeEEPROM_ext@data 0004  
                  __CFG_PBADEN$ON 000000                  __end_of_Lcd_Init 56B0  
                __end_of_Lcd_Port 5CCC               __size_ofi2_I2C_Read 002E  
      __size_of_alterarConfigWifi 04CC               __size_ofi2_I2C_Wait 0012  
                 __initialization 5372               __size_ofi2_I2C_Stop 0008  
                    __end_of_main 1644                  _ajuste_parametro 0198  
                          ??_main 00D7                     ___fttol@sign1 009F  
                    i2I2C_Write@d 0002               _enviaDadosWifi$2490 00D4  
              __size_of_Lcd_Clear 000E                     __activetblptr 000002  
                  _enviaDadosWifi 2BD6                         I2C_Read@a 0061  
              readEEPROM_ext@data 0066                            ?_delay 0060  
                          ?_blink 0060                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          STR_100 7D4D                            STR_101 7D5F  
                          STR_102 7F3C                            STR_110 7CF0  
                          STR_103 7F7A                            STR_111 7D71  
                          STR_112 7F82                            STR_104 7F61  
                          STR_105 7FB3                            STR_106 7D94  
                          _ADRESH 000FC4                            STR_107 7C65  
                          STR_108 7D03                            STR_109 7D16  
                          _ADRESL 000FC3                            ?_timer 0001  
                __end_of_acaoFlap 5524                            ?_putch 0001  
                __end_of___ftpack 5052                         ??i2_delay 0003  
                          _INT2IF 007F81                            i2l1100 3F3A  
                          i2l1110 3F8A                            i2l1102 3F4A  
                          i2l1112 3F92                            i2l1104 3F52  
                          i2l1113 3FA0                            i2l1122 3FF6  
                          i2l1114 3FAE                            i2l1106 3F6C  
                          i2l1131 40E0                            i2l1140 41BA  
                          i2l1124 4004                            i2l1108 3F7A  
                          i2l1117 3FCE                            i2l1142 41BE  
                          i2l1134 4140                            i2l1126 401A  
                          i2l1119 3FD6                            i2l1128 4028  
                          i2l1137 417E                            i2l1261 4BE2  
                          i2l1263 4C10                            i2l1264 4C1A  
                          i2l1265 4C24                            i2l1098 3F2C  
                          i2l1477 5E00                            i2l1478 5DF0  
                          _INTCON 000FF2                            i2l6477 5DF0  
                          i2l8823 3F6C                            i2l8809 3F2C  
                          i2l8861 3FF6                            i2l8867 401A  
                __end_of___lwtoft 5DC8                         ??_Lcd_Cmd 0061  
                          _TIMER0 0008                            _TMR0IF 007F92  
         __size_of_Lcd_Write_Char 003E                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                      filtroStr@fim 0093  
                    filtroStr@aux 0152                      filtroStr@str 0095  
                    atualizaLCD@i 0070                    __CFG_XINST$OFF 000000  
               __end_of_UART_Init 5E8A                      readADC@canal 0068  
                          ___ftge 5404                    _readEEPROM_ext 5986  
                          ___wmul 5D52                         ??___ftadd 0081  
                  __CFG_STVREN$ON 000000                  __end_of_controle 3F16  
                       ??___ftdiv 008D                            _h_flap 01F4  
                       ??___lldiv 0068                         ??___ftmul 0072  
                          _getMac 4378                         ??___fttol 009A  
                          _blinkk 027A                         ??___lwdiv 0064  
                       ??___lwmod 006B           __end_of_writeEEPROM_ext 5AEA  
                       ??__doprnt 0072                            _memset 5C6C  
                          delay@x 0060                            _buzzer 00FA  
                          clear_0 53CA                            clear_1 53D6  
                          clear_2 53E2                            clear_3 53F0  
                          _setLed 5E34                            blink@i 0064  
                       ??_btPress 0060      _t_controle_religar_ventoinha 0035  
                    __doprnt@flag 0077                            _printf 5B68  
                    __doprnt@prec 0076            __end_of_enviaDadosWifi 3108  
                          _strchr 5734                            _strcpy 5814  
                          _strlen 58DC                            _strtok 489A  
                          _strspn 5524                            _strstr 50FE  
           ___ftmul@f3_as_product 0076                         ??_readADC 0062  
                    __pdataCOMRAM 0050                         ??_isdigit 0060  
                       ?_I2C_Read 0061                         ?_I2C_Wait 0001  
                       ?_I2C_Stop 0001                      acaoFlap@acao 0067  
                    __mediumconst 7798                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0060                         ??_sprintf 008B  
            __size_of_atualizaLCD 00C6                   setUmidade@_clim 0078  
                       ??_strcspn 006A                         ??_strncmp 006C  
                       ??_strncpy 0066                   Lcd_Set_Cursor@a 0064  
                 Lcd_Set_Cursor@b 0063                   Lcd_Set_Cursor@y 0066  
                 Lcd_Set_Cursor@z 0065                        __acao_flap 0042  
                      __accesstop 0060           __end_of__initialization 53F6  
                      ___ftadd@f1 007B                        ___ftadd@f2 007E  
                ?i2_setRangeValor 0006                        ___ftge@ff1 0060  
                      ___ftge@ff2 0063      __size_of_criaCaracteresCGRAM 00AC  
               __end_of_Lcd_Clear 5EE4                  _h_modo_seguranca 00F1  
                   ___rparam_used 000001                        ___ftdiv@f1 0087  
                      ___ftdiv@f2 008A                        ___ftdiv@f3 0091  
          __end_of_readEEPROM_ext 59D8           _h_subir_temp_automatica 00ED  
                 _getSensors$1521 00AB                   _getSensors$1523 00A5  
                 _getSensors$1525 00A8                        ___ftmul@f1 006C  
                      ___ftmul@f2 006F                   _getSensors$2491 00B0  
            __size_ofi2_I2C_Start 0008                        ___fttol@f1 0096  
            __size_ofi2_I2C_Write 000A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 5F20                      __pidataBANK2 5E8A  
                   __end_of_delay 5D52                     __end_of_blink 5C3C  
                   __end_of_timer 41CA                     __end_of_putch 5ED6  
              __size_of_faseAtual 013E            __size_of_tabelaUmidade 0FD2  
                      ___lwtoft@c 0069                   ?_enviaDadosWifi 0001  
            __size_of_readButtons 0028                    _Lcd_Set_Cursor 4EEE  
                    ??i2_I2C_Read 0004                        ??_I2C_Read 0063  
                    ??i2_I2C_Wait 0001                        ??_I2C_Wait 0060  
                    ??i2_I2C_Stop 0002                        ??_I2C_Stop 0061  
            __size_of_limpaBuffer 0040                         ?_Lcd_Init 0001  
                         ??_delay 0062                         ?_Lcd_Port 0001  
                      _h_abafador 00EF                        __doprnt@ap 0070  
                         ??_blink 0064                        __doprnt@cp 007C  
                      __doprnt@pb 006C             writeEEPROM_ext@adress 0064  
                         ??_timer 0011                           ??_putch 0060  
              __size_of_filtroStr 016E           i2setRangeValor@_var_ajt 0006  
                      __pbssBANK0 00E9                        __pbssBANK1 0196  
                      __pbssBANK2 0200                           ?_TIMER0 0001  
             writeEEPROM_ext@data 0063                   ?_readEEPROM_ext 0001  
                         TIMER0@c 0030                __end_ofi2_I2C_Read 5D28  
                    I2C_Read@temp 0063                __end_ofi2_I2C_Wait 5EC8  
                         ?___ftge 0060                __end_ofi2_I2C_Stop 5F18  
                      _climaAtual 59D8                           ?___wmul 0060  
                         ?_getMac 0073                           ?_memset 0060  
                ?_writeEEPROM_ext 0063                           ?_setLed 0060  
       __size_of_Lcd_Write_String 002E                         ?_acaoFlap 0062  
                       ?___ftpack 0060            __end_of_Lcd_Set_Cursor 4FA2  
                      I2C_Write@d 0061                           ?_printf 0081  
                      _getSensors 3108                           ?_strchr 0060  
                         ?_strcpy 0071                           ?_strlen 0060  
                       ?___lwtoft 0069                           ?_strtok 006D  
                         ?_strspn 0066                           ?_strstr 006F  
                   ??_I2C_Restart 0061                   __CFG_WDTPS$1024 000000  
                      ??_Lcd_Init 0063                        ??_Lcd_Port 0060  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7                           i2_delay 5DEE  
                   filtroStr@_str 0100                         ?_controle 0001  
                   _tabelaUmidade 1644                   __CFG_VREGEN$OFF 000000  
               __end_of_faseAtual 4794                    _Lcd_Write_Char 5B2A  
          acaoFlap@tempo_aguardar 0064                           _Lcd_Cmd 5DC8  
                 __size_of_TIMER0 4C68                         _I2C_Start 5F08  
                       _I2C_Write 5EE4                           __Hparam 0000  
                         __Lparam 0000                alterarConfigWifi@i 00C3  
                 __size_of___ftge 0092                           ___ftadd 41CA  
                         ___ftdiv 4C70                           ___lldiv 56B0  
                 __size_of___wmul 0028                           ___ftmul 4A90  
                         ___fttol 4998                           ___lwdiv 5932  
                         ___lwmod 5A64              i2setRangeValor@_acao 000E  
                 __size_of_getMac 0170                 __end_of_filtroStr 4656  
                         __doprnt 2616                           __pcinit 5372  
                      ??_acaoFlap 0066                        ??___ftpack 0065  
                 __size_of_memset 0030                           _btPress 5E52  
                         __ramtop 0800                   ?_Lcd_Set_Cursor 0063  
                 __size_of_setLed 001E                           _bt_flag 0044  
                         __ptext0 0012                           __ptext1 5C3C  
                         __ptext2 4794                           __ptext3 1644  
                         __ptext4 51A0                           __ptext5 5986  
                         __ptext6 5EF8                           __ptext7 5BD8  
                         __ptext8 3108                           __ptext9 523E  
         _wifi_habilita_alteracao 01F1                    _t_wifi_restart 0197  
                 __size_of_printf 0038                        ??___lwtoft 006C  
                 __size_of_strchr 0070                           _readADC 523E  
                 __size_of_strcpy 0066                   __size_of_strlen 0056  
                 __size_of_strtok 00FE                   __size_of_strspn 0084  
                 __size_of_strstr 00A2                           _dpowers 77D1  
                         _isdigit 5E12         _t_controle_modo_seguranca 0033  
                         getMac@i 007B                           getMac@j 0079  
        __size_of_I2C_Master_Init 0070                           _tempajt 00EA  
                   _t_flap_ligado 00F5                           _umidajt 00E9  
                         _sprintf 5A20                     __doprnt@width 007E  
             __end_of_I2C_Restart 5F00                           _strcspn 55A8  
          __end_of_Lcd_Write_Char 5B68                           _strncmp 4D58  
                  __pintcode_body 4B86                           _strncpy 587A  
            end_of_initialization 53F6                    ?_tabelaUmidade 0060  
                      ??_controle 0068                           memset@c 0062  
                         memset@n 0064                           memset@p 0066  
                   __Lmediumconst 7798                           int_func 4B86  
                      _timer$1417 0018                        _timer$1418 001A  
                      _timer$1419 001C                        _setUmidade 4794  
                      blink@start 0062                        ?_I2C_Start 0001  
                       i2u1254_40 5D1A                         i2u1334_40 3FA8  
                       i2u1255_45 5D1C                         i2u1335_45 3FAA  
                      ?_I2C_Write 0061                         i2u1547_47 5DF6  
                    _bufferSerial 0242                   ___lldiv@divisor 0064  
                 ___lldiv@counter 006C                         _RCSTAbits 000FAB  
                         printf@f 0081          criaCaracteresCGRAM@F3896 7799  
                I2C_Master_Init@c 006D                           postdec1 000FE5  
                         postdec2 000FDD                       ?_climaAtual 0060  
                         postinc0 000FEE                           postinc2 000FDE  
                       Lcd_Port@a 0060           setRangeValor@end_eeprom 0069  
                      _wifi_SENHA 01EF                           strlen@s 0060  
                       _UART_Init 5E6E                  setUmidade@_clima 006C  
                         strspn@i 006B                         _PORTAbits 000F80  
          __size_of_setRangeValor 009E                         _PORTBbits 000F81  
                     ?_getSensors 0001                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _PORTEbits 000F84  
             _criaCaracteresCGRAM 5052                        _updateLeds 5C3C  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96           i2writeEEPROM_ext@adress 0005  
               __size_of_I2C_Read 0032                 tabelaUmidade@_umd 0067  
               tabelaUmidade@_tmp 0060                 __size_of_I2C_Wait 0014  
               __size_of_I2C_Stop 0008                        _trava_fase 00F8  
                _t_flap_intervalo 00F4                   ?_Lcd_Write_Char 0001  
               Lcd_Write_String@a 0064                 Lcd_Write_String@i 0066  
            _t_controle_fim_fases 0040                       ___ftdiv@exp 0094  
            ?_criaCaracteresCGRAM 0001                         _TXSTAbits 000FAC  
                 filtroStr@inicio 0091                    __end_of_TIMER0 4C70  
            criaCaracteresCGRAM@i 00A3              criaCaracteresCGRAM@j 00A2  
            criaCaracteresCGRAM@k 00A1         tabelaUmidade@_tipo_sensor 0064  
                     ___ftmul@exp 0075                         _Lcd_Clear 5ED6  
                ??_enviaDadosWifi 00C3                     _t_leitura_adc 003C  
                  __end_of___ftge 5496                    i2I2C_Read@temp 0004  
                  __end_of___wmul 5D7A                        filtroStr@i 0195  
                    _md_seguranca 0279                        filtroStr@p 0193  
                      filtroStr@x 0192                        filtroStr@y 0190  
                _Lcd_Write_String 5CCC                        ?_UART_Init 0001  
                   __pidataCOMRAM 5F25                    __end_of_getMac 44E8  
                  __end_of_memset 5C9C                    __end_of_setLed 5E52  
                  __end_of_printf 5BA0                       _I2C_Restart 5EF8  
                  __end_of_strchr 57A4                   _setUmidade$1300 0075  
                  __end_of_strcpy 587A                    __end_of_strlen 5932  
                 _setUmidade$1297 006F                   _setUmidade$1298 0071  
                 _setUmidade$1299 0073                    __end_of_strtok 4998  
                  __end_of_strspn 55A8                    __end_of_strstr 51A0  
                   ??_atualizaLCD 0070               start_initialization 5372  
      _t_controle_temp_automatica 003D                       i2I2C_Read@a 0002  
                 ??_tabelaUmidade 0065               __size_of_climaAtual 0048  
               __size_of_Lcd_Init 0084                 __size_of_Lcd_Port 0030  
                ??_readEEPROM_ext 0065                 ??_I2C_Master_Init 0071  
                        ??_TIMER0 001E                     _setRangeValor 51A0  
           ??_criaCaracteresCGRAM 0064                       ?_setUmidade 0068  
                   ??i2_I2C_Start 0002                       ??_I2C_Start 0061  
                   ??i2_I2C_Write 0004               __size_of_getSensors 0518  
                     ??_I2C_Write 0063         _t_controle_religar_buzzer 0037  
                      ?_Lcd_Clear 0001                          ??___ftge 0066  
                        ??___wmul 0064          __size_ofi2_setRangeValor 009A  
                        ??_getMac 0077                       __doprnt@len 007A  
                     __doprnt@val 0078                       __pdataBANK0 00FB  
                     __pdataBANK2 02B0                  __CFG_LPT1OSC$OFF 000000  
                   ??_readButtons 0006                   Lcd_Write_Char@a 0063  
                        ??_memset 0066                   Lcd_Write_Char@y 0062  
                        ??_setLed 0061                          ??_printf 00BD  
               faseAtual@_tempajt 0062                          ??_strchr 0064  
                        ??_strcpy 0075                          ??_strlen 0062  
                        ??_strtok 0071                          ??_strspn 006A  
                        ??_strstr 0073                     ??_limpaBuffer 0068  
               __size_of_acaoFlap 008E                 __size_of___ftpack 00B0  
                     __pbssCOMRAM 0031                       ?_updateLeds 0001  
               __size_of___lwtoft 0026                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                 _t_temp_automatica 00F3  
                    _isdigit$1991 0061                  _t_buzzer_religar 00FF  
                        ?i2_delay 0001                    ?_setRangeValor 0065  
             __end_of_atualizaLCD 4EEE            _senha_desbloqueio_func 01F3  
                        ?_Lcd_Cmd 0001                         __doprnt@c 0080  
                       __doprnt@f 006E                        setLed@acao 0060  
               __size_of_controle 042A          _criaCaracteresCGRAM$1229 009F  
                       _faseAtual 4656                         _main$1633 00DA  
                       _main$1642 00E0                         _main$1634 00DC  
                       _main$1637 00DE                         _main$1654 00E4  
                       _main$1649 00E2                         _main$1659 00E6  
                       _main$2492 00D8                  ___lwdiv@dividend 0060  
                ??_Lcd_Set_Cursor 0064                         __pintcode 0008  
                   __pmediumconst 7798                          ?___ftadd 007B  
                        ?___ftdiv 0087               __end_ofi2_I2C_Start 5F20  
                        ?___lldiv 0060                          ?___ftmul 006C  
                        ?___fttol 0096               __end_ofi2_I2C_Write 5EF8  
                        ?___lwdiv 0060                          ?___lwmod 0067  
                        ?__doprnt 006C               _tipo_sensor_umidade 00F7  
                     ??_UART_Init 0060              readEEPROM_ext@adress 0065  
                        ?_btPress 0001                          ?_readADC 0060  
                       _filtroStr 44E8                         _media_adc 003B  
             __size_of_setUmidade 0106                          ?_isdigit 0001  
                        _I2C_Read 5BD8                          _I2C_Wait 5EA2  
                        _I2C_Stop 5F00               __end_of_readButtons 5DA2  
           acaoFlap@tempo_ativado 0062          __size_of_writeEEPROM_ext 0042  
                ___lwdiv@quotient 0064                    __size_of_delay 002A  
                  __size_of_blink 0032               i2setRangeValor@_aux 000F  
             i2setRangeValor@_max 0009               i2setRangeValor@_min 0008  
                        ?_sprintf 0081                          ?_strcspn 0066  
                        ?_strncmp 0066                          ?_strncpy 0060  
             __end_of_limpaBuffer 5B2A                    __size_of_timer 02B4  
                  __size_of_putch 000E                    ___wmul@product 0064  
                       btPress@bt 0060                          _LATAbits 000F89  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                          _LATEbits 000F8D  
                     strncpy@from 0062                         _opcaomenu 0199  
                        _PIE1bits 000F9D                       strncpy@size 0064  
                       getMac@mac 0073                         getMac@men 007A  
                       getMac@var 0075                         blink@line 0060  
                 enviaDadosWifi@i 00D6                       _h_venotinha 00F0  
                      ?_faseAtual 0060                          Lcd_Cmd@a 0062  
                        _PIR1bits 000F9E               __size_of_updateLeds 0030  
                     ??_Lcd_Clear 0063                      ??_climaAtual 0062  
                    ??_getSensors 00A5                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0060                        ?_filtroStr 0091  
               ??i2_setRangeValor 000B                    filtroStr@count 0191  
                ??_Lcd_Write_Char 0061                          i2delay@x 0001  
                     _atualizaLCD 4E28                          _Lcd_Init 562C  
               i2_writeEEPROM_ext 5BA0                          _Lcd_Port 5C9C  
                 ??_setRangeValor 006A                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 5386  
                       copy_data1 53A6                ?i2_writeEEPROM_ext 0004  
              __end_of_climaAtual 5A20                      setUmidade@tp 006E  
        __end_of_Lcd_Write_String 5CFA                   _f_falta_energia 00FE  
                __size_ofi2_delay 0024                  __size_of_Lcd_Cmd 0026  
                     i2_I2C_Start 5F18                       i2_I2C_Write 5EEE  
              __end_of_getSensors 3620               ??i2_writeEEPROM_ext 0005  
                        __Hrparam 0000                          __Lrparam 0000  
                __size_of___ftadd 01AE                  __size_of___ftdiv 00E8  
                __size_of___lldiv 0084                  __size_of___ftmul 00F6  
                __size_of___fttol 00F8                  __size_of___lwdiv 0054  
                __size_of___lwmod 0044                       _readButtons 5D7A  
                        _acaoFlap 5496                          ___ftpack 4FA2  
                __size_of__doprnt 05C0                    readADC@digital 0066  
             Lcd_Write_Char@tempp 0061                  __size_of_btPress 001C  
                        ___lwtoft 5DA2                      ?_I2C_Restart 0001  
                        _base_sec 004A                       _limpaBuffer 5AEA  
                  getSensors@auxx 00AD                   _I2C_Master_Init 57A4  
                __size_of_readADC 009A         __end_ofi2_writeEEPROM_ext 5BD8  
                       setLed@led 0061                  __size_of_isdigit 0022  
                 ___lwdiv@divisor 0062                   ___lwdiv@counter 0066  
                        _h_buzzer 00EE                          __ptext10 5DA2  
                        __ptext11 4998                          __ptext20 5052  
                        __ptext12 4A90                          __ptext21 3AEC  
                        __ptext13 5404                          __ptext30 5F00  
                        __ptext22 5496                          __ptext14 4C70  
                        __ptext31 5F08                          __ptext23 5E34  
                        __ptext15 41CA                          __ptext40 55A8  
                        __ptext32 5EA2                          __ptext24 59D8  
                        __ptext16 4FA2                          __ptext41 50FE  
                        __ptext33 5B68                          __ptext25 5E52  
                        __ptext17 4656                          __ptext50 5E12  
                        __ptext42 4D58                          __ptext34 5AEA  
                        __ptext26 5C0A                          __ptext18 2BD6  
                        __ptext51 5D52                          __ptext43 58DC  
                        __ptext35 5C6C                          __ptext27 3620  
                        __ptext19 4378                          __ptext60 5ED6  
                        __ptext52 5A64                          __ptext44 5734  
                        __ptext36 5D28                          __ptext28 5AA8  
                        __ptext61 5DC8                          __ptext53 5932  
                        __ptext45 587A                          __ptext37 44E8  
                        __ptext29 5EE4                          __ptext70 5D7A  
                        __ptext62 5C9C                          __ptext54 4E28  
                        __ptext46 5814                          __ptext38 489A  
                        __ptext71 5EEE                          __ptext63 57A4  
                        __ptext55 5CCC                          __ptext47 5A20  
                        __ptext39 5524                          __ptext72 5F10  
                        __ptext64 56B0                          __ptext56 5B2A  
                        __ptext48 2616                          __ptext73 5F18  
                        __ptext57 4EEE                          __ptext49 5EC8  
                        __ptext74 5CFA                          __ptext66 3F16  
                        __ptext58 5E6E                          __ptext75 5EB6  
                        __ptext67 52D8                          __ptext59 562C  
                        __ptext76 0000                          __ptext68 5BA0  
                        __ptext69 5DEE                          _lcd_rfsh 004B  
       i2setRangeValor@end_eeprom 000A                  __size_of_sprintf 0044  
          _f_buzzer_falta_energia 0041                  __size_of_strcspn 0084  
                __size_of_strncmp 00D0                          _controle 3AEC  
                __size_of_strncpy 0062                        strcpy@from 0073  
               ??_writeEEPROM_ext 0064                          _fornalha 00F9  
                   __size_of_main 1632                      ??_setUmidade 006E  
                     _t_fim_fase1 004E                       _t_fim_fase2 004D  
                     _t_fim_fase3 004C                        strncmp@len 006A  
                     ??_faseAtual 0064                          blink@end 0063  
                  _wifi_conectado 019A                          _wifi_MAC 02B0  
                     faseAtual@tp 0065                          int$flags 0051  
           __CFG_CPUDIV$OSC1_PLL2 000000                       ??_filtroStr 0099  
  _t_religar_ventoinha_automatica 00F2                        _INTCONbits 000FF2  
                      i2_I2C_Read 5CFA                        i2_I2C_Wait 5EB6  
                      i2_I2C_Stop 5F10                      ??_updateLeds 0063  
              __end_of_setUmidade 489A                   faseAtual@_fasee 0064  
                        isdigit@c 0062                          memset@p1 0060  
     __end_of_criaCaracteresCGRAM 50FE                 enviaDadosWifi@AUX 00C5  
           __end_of_tabelaUmidade 2616                          intlevel2 0000  
                       sprintf@ap 008B                         sprintf@pb 008D  
__end_ofcriaCaracteresCGRAM@F3896 77D1                     getSensors@aux 00B4  
                       sprintf@wh 0081                   faseAtual@tmpajt 0066  
                       strchr@chr 0062                  ___lwmod@dividend 0067  
                       strchr@ptr 0060                  ___lldiv@dividend 0060  
                     climaAtual@c 0062                         strcspn@s1 0066  
                       strcspn@s2 0068                         strncmp@s1 0066  
                       strncmp@s2 0068                         strncpy@cp 0066  
                       strncpy@to 0060      criaCaracteresCGRAM@character 0067  
              __end_of_updateLeds 5C6C                          printf@ap 00BD  
                        printf@pb 00BF                 _alterarConfigWifi 3620  
               _t_controle_buzzer 003F           __end_of_I2C_Master_Init 5814  
              Lcd_Set_Cursor@temp 0067                ?_alterarConfigWifi 0001  
              setUmidade@_tempajt 006A                    faseAtual@_fase 0060  
                        sprintf@f 0083                  ___lldiv@quotient 0068  
                 ___lwmod@divisor 0069                          strcpy@cp 0076  
      __size_ofi2_writeEEPROM_ext 0038                          strlen@cp 0064  
                        strcpy@to 0071                   ___lwmod@counter 006B  
                        strcspn@i 006B           __size_of_enviaDadosWifi 0532  
             ??_alterarConfigWifi 00C3                          strtok@s1 006D  
                        strtok@s2 006F                          strspn@s1 0066  
                        strspn@s2 0068                          strtok@sp 0031  
                _t_controle_blink 003E                          strstr@s1 006F  
                        strstr@s2 0071                 setUmidade@_umdajt 0068  
               setUmidade@_tmpajt 0077                       getSensors@i 00B3  
                 _t_controle_flap 0039         __end_of_alterarConfigWifi 3AEC  
