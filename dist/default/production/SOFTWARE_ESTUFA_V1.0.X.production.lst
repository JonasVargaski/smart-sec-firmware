

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Oct 22 22:29:14 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           ; Version 1.44
   104                           ; Generated 14/09/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F4550 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  005F25                     __pidataCOMRAM:
   140                           	opt stack 0
   141                           
   142                           ;initializer for __led
   143  005F25  01                 	db	1
   144                           
   145                           	psect	idataBANK0
   146  005F20                     __pidataBANK0:
   147                           	opt stack 0
   148                           
   149                           ;initializer for _menu
   150  005F20  0F                 	db	15
   151                           
   152                           ;initializer for _umid
   153  005F21  64                 	db	100
   154                           
   155                           ;initializer for _temp
   156  005F22  63                 	db	99
   157                           
   158                           ;initializer for _f_falta_energia
   159  005F23  01                 	db	1
   160                           
   161                           ;initializer for _t_buzzer_religar
   162  005F24  01                 	db	1
   163                           
   164                           	psect	idataBANK2
   165  005E8A                     __pidataBANK2:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _wifi_MAC
   169  005E8A  003F               	dw	63
   170  005E8C  00                 	db	0
   171  005E8D  00                 	db	0
   172  005E8E  00                 	db	0
   173  005E8F  00                 	db	0
   174  005E90  00                 	db	0
   175  005E91  00                 	db	0
   176  005E92  00                 	db	0
   177  005E93  00                 	db	0
   178  005E94  00                 	db	0
   179  005E95  00                 	db	0
   180  005E96  00                 	db	0
   181  005E97  00                 	db	0
   182  005E98  00                 	db	0
   183  005E99  00                 	db	0
   184  005E9A  00                 	db	0
   185  005E9B  00                 	db	0
   186  005E9C  00                 	db	0
   187  005E9D  00                 	db	0
   188  005E9E  00                 	db	0
   189  005E9F  00                 	db	0
   190  005EA0  00                 	db	0
   191  005EA1  00                 	db	0
   192                           
   193                           	psect	mediumconst
   194  00776E                     __pmediumconst:
   195                           	opt stack 0
   196  00776E  00                 	db	0
   197  00776F                     criaCaracteresCGRAM@F3896:
   198                           	opt stack 0
   199  00776F  0E                 	db	14
   200  007770  11                 	db	17
   201  007771  11                 	db	17
   202  007772  1F                 	db	31
   203  007773  1B                 	db	27
   204  007774  1B                 	db	27
   205  007775  1F                 	db	31
   206  007776  1F                 	db	31
   207  007777  01                 	db	1
   208  007778  03                 	db	3
   209  007779  07                 	db	7
   210  00777A  1D                 	db	29
   211  00777B  1D                 	db	29
   212  00777C  07                 	db	7
   213  00777D  03                 	db	3
   214  00777E  01                 	db	1
   215  00777F  04                 	db	4
   216  007780  04                 	db	4
   217  007781  0E                 	db	14
   218  007782  0E                 	db	14
   219  007783  1F                 	db	31
   220  007784  1D                 	db	29
   221  007785  1B                 	db	27
   222  007786  0E                 	db	14
   223  007787  04                 	db	4
   224  007788  0A                 	db	10
   225  007789  0A                 	db	10
   226  00778A  0A                 	db	10
   227  00778B  0E                 	db	14
   228  00778C  1F                 	db	31
   229  00778D  1F                 	db	31
   230  00778E  0E                 	db	14
   231  00778F  00                 	db	0
   232  007790  0E                 	db	14
   233  007791  11                 	db	17
   234  007792  04                 	db	4
   235  007793  0A                 	db	10
   236  007794  00                 	db	0
   237  007795  04                 	db	4
   238  007796  00                 	db	0
   239  007797  00                 	db	0
   240  007798  00                 	db	0
   241  007799  00                 	db	0
   242  00779A  00                 	db	0
   243  00779B  00                 	db	0
   244  00779C  00                 	db	0
   245  00779D  00                 	db	0
   246  00779E  00                 	db	0
   247  00779F  00                 	db	0
   248  0077A0  00                 	db	0
   249  0077A1  00                 	db	0
   250  0077A2  00                 	db	0
   251  0077A3  00                 	db	0
   252  0077A4  00                 	db	0
   253  0077A5  00                 	db	0
   254  0077A6  00                 	db	0
   255  0077A7                     __end_ofcriaCaracteresCGRAM@F3896:
   256                           	opt stack 0
   257  0077A7                     _dpowers:
   258                           	opt stack 0
   259  0077A7  0001               	dw	1
   260  0077A9  000A               	dw	10
   261  0077AB  0064               	dw	100
   262  0077AD  03E8               	dw	1000
   263  0077AF  2710               	dw	10000
   264  0077B1                     __end_of_dpowers:
   265                           	opt stack 0
   266  0000                     _SSPBUF	set	4041
   267  0000                     _SSPSTAT	set	4039
   268  0000                     _SSPADD	set	4040
   269  0000                     _SSPCON2	set	4037
   270  0000                     _SSPCON1	set	4038
   271  0000                     _ADCON2	set	4032
   272  0000                     _ADCON1	set	4033
   273  0000                     _INTCON	set	4082
   274  0000                     _T0CON	set	4053
   275  0000                     _INTCON3bits	set	4080
   276  0000                     _INTCON2bits	set	4081
   277  0000                     _TRISBbits	set	3987
   278  0000                     _PORTEbits	set	3972
   279  0000                     _PORTCbits	set	3970
   280  0000                     _PORTAbits	set	3968
   281  0000                     _TRISEbits	set	3990
   282  0000                     _TRISAbits	set	3986
   283  0000                     _RCREG	set	4014
   284  0000                     _TMR0L	set	4054
   285  0000                     _TMR0H	set	4055
   286  0000                     _ADCON0bits	set	4034
   287  0000                     _ADCON0	set	4034
   288  0000                     _ADRESL	set	4035
   289  0000                     _ADRESH	set	4036
   290  0000                     _TXREG	set	4013
   291  0000                     _PIE1bits	set	3997
   292  0000                     _PIR1bits	set	3998
   293  0000                     _INTCONbits	set	4082
   294  0000                     _SPBRG	set	4015
   295  0000                     _RCSTAbits	set	4011
   296  0000                     _TXSTAbits	set	4012
   297  0000                     _TRISCbits	set	3988
   298  0000                     _LATDbits	set	3980
   299  0000                     _LATEbits	set	3981
   300  0000                     _LATBbits	set	3978
   301  0000                     _LATCbits	set	3979
   302  0000                     _LATAbits	set	3977
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _TRISDbits	set	3989
   306  0000                     _ACKEN	set	32300
   307  0000                     _ACKDT	set	32301
   308  0000                     _RCEN	set	32299
   309  0000                     _PEN	set	32298
   310  0000                     _RSEN	set	32297
   311  0000                     _SEN	set	32296
   312  0000                     _INT2IF	set	32641
   313  0000                     _RCIF	set	31989
   314  0000                     _TMR0IF	set	32658
   315  0000                     _GO	set	32273
   316  0000                     _ADON	set	32272
   317  0077B1                     STR_32:
   318  0077B1  3C                 	db	60	;'<'
   319  0077B2  68                 	db	104	;'h'
   320  0077B3  74                 	db	116	;'t'
   321  0077B4  6D                 	db	109	;'m'
   322  0077B5  6C                 	db	108	;'l'
   323  0077B6  3E                 	db	62	;'>'
   324  0077B7  3C                 	db	60	;'<'
   325  0077B8  68                 	db	104	;'h'
   326  0077B9  65                 	db	101	;'e'
   327  0077BA  61                 	db	97	;'a'
   328  0077BB  64                 	db	100	;'d'
   329  0077BC  3E                 	db	62	;'>'
   330  0077BD  3C                 	db	60	;'<'
   331  0077BE  74                 	db	116	;'t'
   332  0077BF  69                 	db	105	;'i'
   333  0077C0  74                 	db	116	;'t'
   334  0077C1  6C                 	db	108	;'l'
   335  0077C2  65                 	db	101	;'e'
   336  0077C3  3E                 	db	62	;'>'
   337  0077C4  57                 	db	87	;'W'
   338  0077C5  49                 	db	73	;'I'
   339  0077C6  46                 	db	70	;'F'
   340  0077C7  49                 	db	73	;'I'
   341  0077C8  3C                 	db	60	;'<'
   342  0077C9  2F                 	db	47
   343  0077CA  74                 	db	116	;'t'
   344  0077CB  69                 	db	105	;'i'
   345  0077CC  74                 	db	116	;'t'
   346  0077CD  6C                 	db	108	;'l'
   347  0077CE  65                 	db	101	;'e'
   348  0077CF  3E                 	db	62	;'>'
   349  0077D0  3C                 	db	60	;'<'
   350  0077D1  73                 	db	115	;'s'
   351  0077D2  74                 	db	116	;'t'
   352  0077D3  79                 	db	121	;'y'
   353  0077D4  6C                 	db	108	;'l'
   354  0077D5  65                 	db	101	;'e'
   355  0077D6  3E                 	db	62	;'>'
   356  0077D7  2A                 	db	42
   357  0077D8  7B                 	db	123
   358  0077D9  66                 	db	102	;'f'
   359  0077DA  6F                 	db	111	;'o'
   360  0077DB  6E                 	db	110	;'n'
   361  0077DC  74                 	db	116	;'t'
   362  0077DD  2D                 	db	45
   363  0077DE  73                 	db	115	;'s'
   364  0077DF  69                 	db	105	;'i'
   365  0077E0  7A                 	db	122	;'z'
   366  0077E1  65                 	db	101	;'e'
   367  0077E2  3A                 	db	58	;':'
   368  0077E3  20                 	db	32
   369  0077E4  33                 	db	51	;'3'
   370  0077E5  35                 	db	53	;'5'
   371  0077E6  70                 	db	112	;'p'
   372  0077E7  78                 	db	120	;'x'
   373  0077E8  3B                 	db	59	;';'
   374  0077E9  66                 	db	102	;'f'
   375  0077EA  6F                 	db	111	;'o'
   376  0077EB  6E                 	db	110	;'n'
   377  0077EC  74                 	db	116	;'t'
   378  0077ED  2D                 	db	45
   379  0077EE  66                 	db	102	;'f'
   380  0077EF  61                 	db	97	;'a'
   381  0077F0  6D                 	db	109	;'m'
   382  0077F1  69                 	db	105	;'i'
   383  0077F2  6C                 	db	108	;'l'
   384  0077F3  79                 	db	121	;'y'
   385  0077F4  3A                 	db	58	;':'
   386  0077F5  73                 	db	115	;'s'
   387  0077F6  61                 	db	97	;'a'
   388  0077F7  6E                 	db	110	;'n'
   389  0077F8  73                 	db	115	;'s'
   390  0077F9  2D                 	db	45
   391  0077FA  73                 	db	115	;'s'
   392  0077FB  65                 	db	101	;'e'
   393  0077FC  72                 	db	114	;'r'
   394  0077FD  69                 	db	105	;'i'
   395  0077FE  66                 	db	102	;'f'
   396  0077FF  3B                 	db	59	;';'
   397  007800  7D                 	db	125
   398  007801  66                 	db	102	;'f'
   399  007802  6F                 	db	111	;'o'
   400  007803  72                 	db	114	;'r'
   401  007804  6D                 	db	109	;'m'
   402  007805  7B                 	db	123
   403  007806  68                 	db	104	;'h'
   404  007807  65                 	db	101	;'e'
   405  007808  69                 	db	105	;'i'
   406  007809  67                 	db	103	;'g'
   407  00780A  68                 	db	104	;'h'
   408  00780B  74                 	db	116	;'t'
   409  00780C  3A                 	db	58	;':'
   410  00780D  34                 	db	52	;'4'
   411  00780E  35                 	db	53	;'5'
   412  00780F  30                 	db	48	;'0'
   413  007810  70                 	db	112	;'p'
   414  007811  78                 	db	120	;'x'
   415  007812  3B                 	db	59	;';'
   416  007813  64                 	db	100	;'d'
   417  007814  69                 	db	105	;'i'
   418  007815  73                 	db	115	;'s'
   419  007816  70                 	db	112	;'p'
   420  007817  6C                 	db	108	;'l'
   421  007818  61                 	db	97	;'a'
   422  007819  79                 	db	121	;'y'
   423  00781A  3A                 	db	58	;':'
   424  00781B  66                 	db	102	;'f'
   425  00781C  6C                 	db	108	;'l'
   426  00781D  65                 	db	101	;'e'
   427  00781E  78                 	db	120	;'x'
   428  00781F  3B                 	db	59	;';'
   429  007820  66                 	db	102	;'f'
   430  007821  6C                 	db	108	;'l'
   431  007822  65                 	db	101	;'e'
   432  007823  78                 	db	120	;'x'
   433  007824  2D                 	db	45
   434  007825  64                 	db	100	;'d'
   435  007826  69                 	db	105	;'i'
   436  007827  72                 	db	114	;'r'
   437  007828  65                 	db	101	;'e'
   438  007829  63                 	db	99	;'c'
   439  00782A  74                 	db	116	;'t'
   440  00782B  69                 	db	105	;'i'
   441  00782C  6F                 	db	111	;'o'
   442  00782D  6E                 	db	110	;'n'
   443  00782E  3A                 	db	58	;':'
   444  00782F  63                 	db	99	;'c'
   445  007830  6F                 	db	111	;'o'
   446  007831  6C                 	db	108	;'l'
   447  007832  75                 	db	117	;'u'
   448  007833  6D                 	db	109	;'m'
   449  007834  6E                 	db	110	;'n'
   450  007835  3B                 	db	59	;';'
   451  007836  6A                 	db	106	;'j'
   452  007837  75                 	db	117	;'u'
   453  007838  73                 	db	115	;'s'
   454  007839  74                 	db	116	;'t'
   455  00783A  69                 	db	105	;'i'
   456  00783B  66                 	db	102	;'f'
   457  00783C  79                 	db	121	;'y'
   458  00783D  2D                 	db	45
   459  00783E  63                 	db	99	;'c'
   460  00783F  6F                 	db	111	;'o'
   461  007840  6E                 	db	110	;'n'
   462  007841  74                 	db	116	;'t'
   463  007842  65                 	db	101	;'e'
   464  007843  6E                 	db	110	;'n'
   465  007844  74                 	db	116	;'t'
   466  007845  3A                 	db	58	;':'
   467  007846  73                 	db	115	;'s'
   468  007847  70                 	db	112	;'p'
   469  007848  61                 	db	97	;'a'
   470  007849  63                 	db	99	;'c'
   471  00784A  65                 	db	101	;'e'
   472  00784B  2D                 	db	45
   473  00784C  61                 	db	97	;'a'
   474  00784D  72                 	db	114	;'r'
   475  00784E  6F                 	db	111	;'o'
   476  00784F  75                 	db	117	;'u'
   477  007850  6E                 	db	110	;'n'
   478  007851  64                 	db	100	;'d'
   479  007852  3B                 	db	59	;';'
   480  007853  61                 	db	97	;'a'
   481  007854  6C                 	db	108	;'l'
   482  007855  69                 	db	105	;'i'
   483  007856  67                 	db	103	;'g'
   484  007857  6E                 	db	110	;'n'
   485  007858  2D                 	db	45
   486  007859  69                 	db	105	;'i'
   487  00785A  74                 	db	116	;'t'
   488  00785B  65                 	db	101	;'e'
   489  00785C  6D                 	db	109	;'m'
   490  00785D  73                 	db	115	;'s'
   491  00785E  3A                 	db	58	;':'
   492  00785F  63                 	db	99	;'c'
   493  007860  65                 	db	101	;'e'
   494  007861  6E                 	db	110	;'n'
   495  007862  74                 	db	116	;'t'
   496  007863  65                 	db	101	;'e'
   497  007864  72                 	db	114	;'r'
   498  007865  3B                 	db	59	;';'
   499  007866  6D                 	db	109	;'m'
   500  007867  61                 	db	97	;'a'
   501  007868  72                 	db	114	;'r'
   502  007869  67                 	db	103	;'g'
   503  00786A  69                 	db	105	;'i'
   504  00786B  6E                 	db	110	;'n'
   505  00786C  3A                 	db	58	;':'
   506  00786D  30                 	db	48	;'0'
   507  00786E  20                 	db	32
   508  00786F  61                 	db	97	;'a'
   509  007870  75                 	db	117	;'u'
   510  007871  74                 	db	116	;'t'
   511  007872  6F                 	db	111	;'o'
   512  007873  3B                 	db	59	;';'
   513  007874  7D                 	db	125
   514  007875  62                 	db	98	;'b'
   515  007876  75                 	db	117	;'u'
   516  007877  74                 	db	116	;'t'
   517  007878  74                 	db	116	;'t'
   518  007879  6F                 	db	111	;'o'
   519  00787A  6E                 	db	110	;'n'
   520  00787B  7B                 	db	123
   521  00787C  77                 	db	119	;'w'
   522  00787D  69                 	db	105	;'i'
   523  00787E  64                 	db	100	;'d'
   524  00787F  74                 	db	116	;'t'
   525  007880  68                 	db	104	;'h'
   526  007881  3A                 	db	58	;':'
   527  007882  32                 	db	50	;'2'
   528  007883  38                 	db	56	;'8'
   529  007884  30                 	db	48	;'0'
   530  007885  70                 	db	112	;'p'
   531  007886  78                 	db	120	;'x'
   532  007887  3B                 	db	59	;';'
   533  007888  68                 	db	104	;'h'
   534  007889  65                 	db	101	;'e'
   535  00788A  69                 	db	105	;'i'
   536  00788B  67                 	db	103	;'g'
   537  00788C  68                 	db	104	;'h'
   538  00788D  74                 	db	116	;'t'
   539  00788E  3A                 	db	58	;':'
   540  00788F  36                 	db	54	;'6'
   541  007890  30                 	db	48	;'0'
   542  007891  70                 	db	112	;'p'
   543  007892  78                 	db	120	;'x'
   544  007893  3B                 	db	59	;';'
   545  007894  63                 	db	99	;'c'
   546  007895  6F                 	db	111	;'o'
   547  007896  6C                 	db	108	;'l'
   548  007897  6F                 	db	111	;'o'
   549  007898  72                 	db	114	;'r'
   550  007899  3A                 	db	58	;':'
   551  00789A  57                 	db	87	;'W'
   552  00789B  68                 	db	104	;'h'
   553  00789C  69                 	db	105	;'i'
   554  00789D  74                 	db	116	;'t'
   555  00789E  65                 	db	101	;'e'
   556  00789F  3B                 	db	59	;';'
   557  0078A0  62                 	db	98	;'b'
   558  0078A1  61                 	db	97	;'a'
   559  0078A2  63                 	db	99	;'c'
   560  0078A3  6B                 	db	107	;'k'
   561  0078A4  67                 	db	103	;'g'
   562  0078A5  72                 	db	114	;'r'
   563  0078A6  6F                 	db	111	;'o'
   564  0078A7  75                 	db	117	;'u'
   565  0078A8  6E                 	db	110	;'n'
   566  0078A9  64                 	db	100	;'d'
   567  0078AA  2D                 	db	45
   568  0078AB  63                 	db	99	;'c'
   569  0078AC  6F                 	db	111	;'o'
   570  0078AD  6C                 	db	108	;'l'
   571  0078AE  6F                 	db	111	;'o'
   572  0078AF  72                 	db	114	;'r'
   573  0078B0  3A                 	db	58	;':'
   574  0078B1  23                 	db	35
   575  0078B2  34                 	db	52	;'4'
   576  0078B3  46                 	db	70	;'F'
   577  0078B4  43                 	db	67	;'C'
   578  0078B5  45                 	db	69	;'E'
   579  0078B6  30                 	db	48	;'0'
   580  0078B7  30                 	db	48	;'0'
   581  0078B8  3B                 	db	59	;';'
   582  0078B9  62                 	db	98	;'b'
   583  0078BA  6F                 	db	111	;'o'
   584  0078BB  72                 	db	114	;'r'
   585  0078BC  64                 	db	100	;'d'
   586  0078BD  65                 	db	101	;'e'
   587  0078BE  72                 	db	114	;'r'
   588  0078BF  3A                 	db	58	;':'
   589  0078C0  20                 	db	32
   590  0078C1  32                 	db	50	;'2'
   591  0078C2  70                 	db	112	;'p'
   592  0078C3  78                 	db	120	;'x'
   593  0078C4  20                 	db	32
   594  0078C5  72                 	db	114	;'r'
   595  0078C6  67                 	db	103	;'g'
   596  0078C7  62                 	db	98	;'b'
   597  0078C8  28                 	db	40
   598  0078C9  32                 	db	50	;'2'
   599  0078CA  31                 	db	49	;'1'
   600  0078CB  2C                 	db	44
   601  0078CC  20                 	db	32
   602  0078CD  31                 	db	49	;'1'
   603  0078CE  39                 	db	57	;'9'
   604  0078CF  36                 	db	54	;'6'
   605  0078D0  2C                 	db	44
   606  0078D1  20                 	db	32
   607  0078D2  32                 	db	50	;'2'
   608  0078D3  31                 	db	49	;'1'
   609  0078D4  29                 	db	41
   610  0078D5  20                 	db	32
   611  0078D6  73                 	db	115	;'s'
   612  0078D7  6F                 	db	111	;'o'
   613  0078D8  6C                 	db	108	;'l'
   614  0078D9  69                 	db	105	;'i'
   615  0078DA  64                 	db	100	;'d'
   616  0078DB  3B                 	db	59	;';'
   617  0078DC  62                 	db	98	;'b'
   618  0078DD  6F                 	db	111	;'o'
   619  0078DE  72                 	db	114	;'r'
   620  0078DF  64                 	db	100	;'d'
   621  0078E0  65                 	db	101	;'e'
   622  0078E1  72                 	db	114	;'r'
   623  0078E2  2D                 	db	45
   624  0078E3  72                 	db	114	;'r'
   625  0078E4  61                 	db	97	;'a'
   626  0078E5  64                 	db	100	;'d'
   627  0078E6  69                 	db	105	;'i'
   628  0078E7  75                 	db	117	;'u'
   629  0078E8  73                 	db	115	;'s'
   630  0078E9  3A                 	db	58	;':'
   631  0078EA  35                 	db	53	;'5'
   632  0078EB  70                 	db	112	;'p'
   633  0078EC  78                 	db	120	;'x'
   634  0078ED  3B                 	db	59	;';'
   635  0078EE  7D                 	db	125
   636  0078EF  69                 	db	105	;'i'
   637  0078F0  6E                 	db	110	;'n'
   638  0078F1  70                 	db	112	;'p'
   639  0078F2  75                 	db	117	;'u'
   640  0078F3  74                 	db	116	;'t'
   641  0078F4  7B                 	db	123
   642  0078F5  68                 	db	104	;'h'
   643  0078F6  65                 	db	101	;'e'
   644  0078F7  69                 	db	105	;'i'
   645  0078F8  67                 	db	103	;'g'
   646  0078F9  68                 	db	104	;'h'
   647  0078FA  74                 	db	116	;'t'
   648  0078FB  3A                 	db	58	;':'
   649  0078FC  36                 	db	54	;'6'
   650  0078FD  30                 	db	48	;'0'
   651  0078FE  70                 	db	112	;'p'
   652  0078FF  78                 	db	120	;'x'
   653  007900  3B                 	db	59	;';'
   654  007901  77                 	db	119	;'w'
   655  007902  69                 	db	105	;'i'
   656  007903  64                 	db	100	;'d'
   657  007904  74                 	db	116	;'t'
   658  007905  68                 	db	104	;'h'
   659  007906  3A                 	db	58	;':'
   660  007907  36                 	db	54	;'6'
   661  007908  30                 	db	48	;'0'
   662  007909  30                 	db	48	;'0'
   663  00790A  70                 	db	112	;'p'
   664  00790B  78                 	db	120	;'x'
   665  00790C  3B                 	db	59	;';'
   666  00790D  20                 	db	32
   667  00790E  62                 	db	98	;'b'
   668  00790F  6F                 	db	111	;'o'
   669  007910  72                 	db	114	;'r'
   670  007911  64                 	db	100	;'d'
   671  007912  65                 	db	101	;'e'
   672  007913  72                 	db	114	;'r'
   673  007914  2D                 	db	45
   674  007915  72                 	db	114	;'r'
   675  007916  61                 	db	97	;'a'
   676  007917  64                 	db	100	;'d'
   677  007918  69                 	db	105	;'i'
   678  007919  75                 	db	117	;'u'
   679  00791A  73                 	db	115	;'s'
   680  00791B  3A                 	db	58	;':'
   681  00791C  35                 	db	53	;'5'
   682  00791D  70                 	db	112	;'p'
   683  00791E  78                 	db	120	;'x'
   684  00791F  3B                 	db	59	;';'
   685  007920  62                 	db	98	;'b'
   686  007921  6F                 	db	111	;'o'
   687  007922  72                 	db	114	;'r'
   688  007923  64                 	db	100	;'d'
   689  007924  65                 	db	101	;'e'
   690  007925  72                 	db	114	;'r'
   691  007926  3A                 	db	58	;':'
   692  007927  20                 	db	32
   693  007928  33                 	db	51	;'3'
   694  007929  70                 	db	112	;'p'
   695  00792A  78                 	db	120	;'x'
   696  00792B  20                 	db	32
   697  00792C  72                 	db	114	;'r'
   698  00792D  67                 	db	103	;'g'
   699  00792E  62                 	db	98	;'b'
   700  00792F  28                 	db	40
   701  007930  31                 	db	49	;'1'
   702  007931  33                 	db	51	;'3'
   703  007932  32                 	db	50	;'2'
   704  007933  2C                 	db	44
   705  007934  20                 	db	32
   706  007935  31                 	db	49	;'1'
   707  007936  33                 	db	51	;'3'
   708  007937  36                 	db	54	;'6'
   709  007938  2C                 	db	44
   710  007939  20                 	db	32
   711  00793A  31                 	db	49	;'1'
   712  00793B  33                 	db	51	;'3'
   713  00793C  38                 	db	56	;'8'
   714  00793D  29                 	db	41
   715  00793E  20                 	db	32
   716  00793F  73                 	db	115	;'s'
   717  007940  6F                 	db	111	;'o'
   718  007941  6C                 	db	108	;'l'
   719  007942  69                 	db	105	;'i'
   720  007943  64                 	db	100	;'d'
   721  007944  3B                 	db	59	;';'
   722  007945  7D                 	db	125
   723  007946  62                 	db	98	;'b'
   724  007947  6F                 	db	111	;'o'
   725  007948  64                 	db	100	;'d'
   726  007949  79                 	db	121	;'y'
   727  00794A  7B                 	db	123
   728  00794B  62                 	db	98	;'b'
   729  00794C  61                 	db	97	;'a'
   730  00794D  63                 	db	99	;'c'
   731  00794E  6B                 	db	107	;'k'
   732  00794F  67                 	db	103	;'g'
   733  007950  72                 	db	114	;'r'
   734  007951  6F                 	db	111	;'o'
   735  007952  75                 	db	117	;'u'
   736  007953  6E                 	db	110	;'n'
   737  007954  64                 	db	100	;'d'
   738  007955  3A                 	db	58	;':'
   739  007956  23                 	db	35
   740  007957  46                 	db	70	;'F'
   741  007958  34                 	db	52	;'4'
   742  007959  46                 	db	70	;'F'
   743  00795A  37                 	db	55	;'7'
   744  00795B  46                 	db	70	;'F'
   745  00795C  35                 	db	53	;'5'
   746  00795D  3B                 	db	59	;';'
   747  00795E  7D                 	db	125
   748  00795F  3C                 	db	60	;'<'
   749  007960  2F                 	db	47
   750  007961  73                 	db	115	;'s'
   751  007962  74                 	db	116	;'t'
   752  007963  79                 	db	121	;'y'
   753  007964  6C                 	db	108	;'l'
   754  007965  65                 	db	101	;'e'
   755  007966  3E                 	db	62	;'>'
   756  007967  3C                 	db	60	;'<'
   757  007968  2F                 	db	47
   758  007969  68                 	db	104	;'h'
   759  00796A  65                 	db	101	;'e'
   760  00796B  61                 	db	97	;'a'
   761  00796C  64                 	db	100	;'d'
   762  00796D  3E                 	db	62	;'>'
   763  00796E  3C                 	db	60	;'<'
   764  00796F  62                 	db	98	;'b'
   765  007970  6F                 	db	111	;'o'
   766  007971  64                 	db	100	;'d'
   767  007972  79                 	db	121	;'y'
   768  007973  3E                 	db	62	;'>'
   769  007974  3C                 	db	60	;'<'
   770  007975  66                 	db	102	;'f'
   771  007976  6F                 	db	111	;'o'
   772  007977  72                 	db	114	;'r'
   773  007978  6D                 	db	109	;'m'
   774  007979  20                 	db	32
   775  00797A  61                 	db	97	;'a'
   776  00797B  63                 	db	99	;'c'
   777  00797C  74                 	db	116	;'t'
   778  00797D  69                 	db	105	;'i'
   779  00797E  6F                 	db	111	;'o'
   780  00797F  6E                 	db	110	;'n'
   781  007980  3D                 	db	61	;'='
   782  007981  22                 	db	34
   783  007982  2F                 	db	47
   784  007983  77                 	db	119	;'w'
   785  007984  69                 	db	105	;'i'
   786  007985  66                 	db	102	;'f'
   787  007986  69                 	db	105	;'i'
   788  007987  22                 	db	34
   789  007988  6D                 	db	109	;'m'
   790  007989  65                 	db	101	;'e'
   791  00798A  74                 	db	116	;'t'
   792  00798B  68                 	db	104	;'h'
   793  00798C  6F                 	db	111	;'o'
   794  00798D  64                 	db	100	;'d'
   795  00798E  3D                 	db	61	;'='
   796  00798F  22                 	db	34
   797  007990  70                 	db	112	;'p'
   798  007991  6F                 	db	111	;'o'
   799  007992  73                 	db	115	;'s'
   800  007993  74                 	db	116	;'t'
   801  007994  22                 	db	34
   802  007995  3E                 	db	62	;'>'
   803  007996  3C                 	db	60	;'<'
   804  007997  68                 	db	104	;'h'
   805  007998  31                 	db	49	;'1'
   806  007999  3E                 	db	62	;'>'
   807  00799A  43                 	db	67	;'C'
   808  00799B  6F                 	db	111	;'o'
   809  00799C  6E                 	db	110	;'n'
   810  00799D  66                 	db	102	;'f'
   811  00799E  69                 	db	105	;'i'
   812  00799F  67                 	db	103	;'g'
   813  0079A0  75                 	db	117	;'u'
   814  0079A1  72                 	db	114	;'r'
   815  0079A2  61                 	db	97	;'a'
   816  0079A3  E7                 	db	-25
   817  0079A4  E3                 	db	-29
   818  0079A5  6F                 	db	111	;'o'
   819  0079A6  20                 	db	32
   820  0079A7  57                 	db	87	;'W'
   821  0079A8  69                 	db	105	;'i'
   822  0079A9  66                 	db	102	;'f'
   823  0079AA  69                 	db	105	;'i'
   824  0079AB  3C                 	db	60	;'<'
   825  0079AC  2F                 	db	47
   826  0079AD  68                 	db	104	;'h'
   827  0079AE  31                 	db	49	;'1'
   828  0079AF  3E                 	db	62	;'>'
   829  0079B0  4E                 	db	78	;'N'
   830  0079B1  4F                 	db	79	;'O'
   831  0079B2  4D                 	db	77	;'M'
   832  0079B3  45                 	db	69	;'E'
   833  0079B4  20                 	db	32
   834  0079B5  44                 	db	68	;'D'
   835  0079B6  4F                 	db	79	;'O'
   836  0079B7  20                 	db	32
   837  0079B8  57                 	db	87	;'W'
   838  0079B9  49                 	db	73	;'I'
   839  0079BA  46                 	db	70	;'F'
   840  0079BB  49                 	db	73	;'I'
   841  0079BC  3A                 	db	58	;':'
   842  0079BD  3C                 	db	60	;'<'
   843  0079BE  69                 	db	105	;'i'
   844  0079BF  6E                 	db	110	;'n'
   845  0079C0  70                 	db	112	;'p'
   846  0079C1  75                 	db	117	;'u'
   847  0079C2  74                 	db	116	;'t'
   848  0079C3  20                 	db	32
   849  0079C4  74                 	db	116	;'t'
   850  0079C5  79                 	db	121	;'y'
   851  0079C6  70                 	db	112	;'p'
   852  0079C7  65                 	db	101	;'e'
   853  0079C8  3D                 	db	61	;'='
   854  0079C9  22                 	db	34
   855  0079CA  74                 	db	116	;'t'
   856  0079CB  65                 	db	101	;'e'
   857  0079CC  78                 	db	120	;'x'
   858  0079CD  74                 	db	116	;'t'
   859  0079CE  22                 	db	34
   860  0079CF  6E                 	db	110	;'n'
   861  0079D0  61                 	db	97	;'a'
   862  0079D1  6D                 	db	109	;'m'
   863  0079D2  65                 	db	101	;'e'
   864  0079D3  3D                 	db	61	;'='
   865  0079D4  22                 	db	34
   866  0079D5  73                 	db	115	;'s'
   867  0079D6  73                 	db	115	;'s'
   868  0079D7  69                 	db	105	;'i'
   869  0079D8  64                 	db	100	;'d'
   870  0079D9  22                 	db	34
   871  0079DA  20                 	db	32
   872  0079DB  72                 	db	114	;'r'
   873  0079DC  65                 	db	101	;'e'
   874  0079DD  71                 	db	113	;'q'
   875  0079DE  75                 	db	117	;'u'
   876  0079DF  69                 	db	105	;'i'
   877  0079E0  72                 	db	114	;'r'
   878  0079E1  65                 	db	101	;'e'
   879  0079E2  64                 	db	100	;'d'
   880  0079E3  3E                 	db	62	;'>'
   881  0079E4  53                 	db	83	;'S'
   882  0079E5  45                 	db	69	;'E'
   883  0079E6  4E                 	db	78	;'N'
   884  0079E7  48                 	db	72	;'H'
   885  0079E8  41                 	db	65	;'A'
   886  0079E9  20                 	db	32
   887  0079EA  44                 	db	68	;'D'
   888  0079EB  4F                 	db	79	;'O'
   889  0079EC  20                 	db	32
   890  0079ED  57                 	db	87	;'W'
   891  0079EE  49                 	db	73	;'I'
   892  0079EF  46                 	db	70	;'F'
   893  0079F0  49                 	db	73	;'I'
   894  0079F1  3A                 	db	58	;':'
   895  0079F2  3C                 	db	60	;'<'
   896  0079F3  69                 	db	105	;'i'
   897  0079F4  6E                 	db	110	;'n'
   898  0079F5  70                 	db	112	;'p'
   899  0079F6  75                 	db	117	;'u'
   900  0079F7  74                 	db	116	;'t'
   901  0079F8  20                 	db	32
   902  0079F9  74                 	db	116	;'t'
   903  0079FA  79                 	db	121	;'y'
   904  0079FB  70                 	db	112	;'p'
   905  0079FC  65                 	db	101	;'e'
   906  0079FD  3D                 	db	61	;'='
   907  0079FE  22                 	db	34
   908  0079FF  74                 	db	116	;'t'
   909  007A00  65                 	db	101	;'e'
   910  007A01  78                 	db	120	;'x'
   911  007A02  74                 	db	116	;'t'
   912  007A03  22                 	db	34
   913  007A04  6E                 	db	110	;'n'
   914  007A05  61                 	db	97	;'a'
   915  007A06  6D                 	db	109	;'m'
   916  007A07  65                 	db	101	;'e'
   917  007A08  3D                 	db	61	;'='
   918  007A09  22                 	db	34
   919  007A0A  73                 	db	115	;'s'
   920  007A0B  65                 	db	101	;'e'
   921  007A0C  6E                 	db	110	;'n'
   922  007A0D  68                 	db	104	;'h'
   923  007A0E  61                 	db	97	;'a'
   924  007A0F  22                 	db	34
   925  007A10  3E                 	db	62	;'>'
   926  007A11  3C                 	db	60	;'<'
   927  007A12  69                 	db	105	;'i'
   928  007A13  6E                 	db	110	;'n'
   929  007A14  70                 	db	112	;'p'
   930  007A15  75                 	db	117	;'u'
   931  007A16  74                 	db	116	;'t'
   932  007A17  20                 	db	32
   933  007A18  74                 	db	116	;'t'
   934  007A19  79                 	db	121	;'y'
   935  007A1A  70                 	db	112	;'p'
   936  007A1B  65                 	db	101	;'e'
   937  007A1C  3D                 	db	61	;'='
   938  007A1D  22                 	db	34
   939  007A1E  68                 	db	104	;'h'
   940  007A1F  69                 	db	105	;'i'
   941  007A20  64                 	db	100	;'d'
   942  007A21  64                 	db	100	;'d'
   943  007A22  65                 	db	101	;'e'
   944  007A23  6E                 	db	110	;'n'
   945  007A24  22                 	db	34
   946  007A25  20                 	db	32
   947  007A26  6E                 	db	110	;'n'
   948  007A27  61                 	db	97	;'a'
   949  007A28  6D                 	db	109	;'m'
   950  007A29  65                 	db	101	;'e'
   951  007A2A  3D                 	db	61	;'='
   952  007A2B  22                 	db	34
   953  007A2C  66                 	db	102	;'f'
   954  007A2D  69                 	db	105	;'i'
   955  007A2E  6D                 	db	109	;'m'
   956  007A2F  73                 	db	115	;'s'
   957  007A30  74                 	db	116	;'t'
   958  007A31  72                 	db	114	;'r'
   959  007A32  22                 	db	34
   960  007A33  3E                 	db	62	;'>'
   961  007A34  3C                 	db	60	;'<'
   962  007A35  62                 	db	98	;'b'
   963  007A36  75                 	db	117	;'u'
   964  007A37  74                 	db	116	;'t'
   965  007A38  74                 	db	116	;'t'
   966  007A39  6F                 	db	111	;'o'
   967  007A3A  6E                 	db	110	;'n'
   968  007A3B  20                 	db	32
   969  007A3C  74                 	db	116	;'t'
   970  007A3D  79                 	db	121	;'y'
   971  007A3E  70                 	db	112	;'p'
   972  007A3F  65                 	db	101	;'e'
   973  007A40  3D                 	db	61	;'='
   974  007A41  22                 	db	34
   975  007A42  73                 	db	115	;'s'
   976  007A43  75                 	db	117	;'u'
   977  007A44  62                 	db	98	;'b'
   978  007A45  6D                 	db	109	;'m'
   979  007A46  69                 	db	105	;'i'
   980  007A47  74                 	db	116	;'t'
   981  007A48  22                 	db	34
   982  007A49  3E                 	db	62	;'>'
   983  007A4A  4F                 	db	79	;'O'
   984  007A4B  4B                 	db	75	;'K'
   985  007A4C  3C                 	db	60	;'<'
   986  007A4D  2F                 	db	47
   987  007A4E  62                 	db	98	;'b'
   988  007A4F  75                 	db	117	;'u'
   989  007A50  74                 	db	116	;'t'
   990  007A51  74                 	db	116	;'t'
   991  007A52  6F                 	db	111	;'o'
   992  007A53  6E                 	db	110	;'n'
   993  007A54  3E                 	db	62	;'>'
   994  007A55  3C                 	db	60	;'<'
   995  007A56  2F                 	db	47
   996  007A57  66                 	db	102	;'f'
   997  007A58  6F                 	db	111	;'o'
   998  007A59  72                 	db	114	;'r'
   999  007A5A  6D                 	db	109	;'m'
  1000  007A5B  3E                 	db	62	;'>'
  1001  007A5C  3C                 	db	60	;'<'
  1002  007A5D  2F                 	db	47
  1003  007A5E  62                 	db	98	;'b'
  1004  007A5F  6F                 	db	111	;'o'
  1005  007A60  64                 	db	100	;'d'
  1006  007A61  79                 	db	121	;'y'
  1007  007A62  3E                 	db	62	;'>'
  1008  007A63  3C                 	db	60	;'<'
  1009  007A64  2F                 	db	47
  1010  007A65  68                 	db	104	;'h'
  1011  007A66  74                 	db	116	;'t'
  1012  007A67  6D                 	db	109	;'m'
  1013  007A68  6C                 	db	108	;'l'
  1014  007A69  3E                 	db	62	;'>'
  1015  007A6A  0D                 	db	13
  1016  007A6B  0A                 	db	10
  1017  007A6C  0D                 	db	13
  1018  007A6D  0A                 	db	10
  1019  007A6E  5C                 	db	92	;'\'
  1020  007A6F  30                 	db	48	;'0'
  1021  007A70  00                 	db	0
  1022  007A71                     STR_59:
  1023  007A71  47                 	db	71	;'G'
  1024  007A72  45                 	db	69	;'E'
  1025  007A73  54                 	db	84	;'T'
  1026  007A74  20                 	db	32
  1027  007A75  2F                 	db	47
  1028  007A76  64                 	db	100	;'d'
  1029  007A77  65                 	db	101	;'e'
  1030  007A78  76                 	db	118	;'v'
  1031  007A79  69                 	db	105	;'i'
  1032  007A7A  63                 	db	99	;'c'
  1033  007A7B  65                 	db	101	;'e'
  1034  007A7C  2F                 	db	47
  1035  007A7D  69                 	db	105	;'i'
  1036  007A7E  6E                 	db	110	;'n'
  1037  007A7F  74                 	db	116	;'t'
  1038  007A80  65                 	db	101	;'e'
  1039  007A81  67                 	db	103	;'g'
  1040  007A82  72                 	db	114	;'r'
  1041  007A83  61                 	db	97	;'a'
  1042  007A84  74                 	db	116	;'t'
  1043  007A85  69                 	db	105	;'i'
  1044  007A86  6F                 	db	111	;'o'
  1045  007A87  6E                 	db	110	;'n'
  1046  007A88  3F                 	db	63	;'?'
  1047  007A89  69                 	db	105	;'i'
  1048  007A8A  3D                 	db	61	;'='
  1049  007A8B  25                 	db	37
  1050  007A8C  64                 	db	100	;'d'
  1051  007A8D  7C                 	db	124
  1052  007A8E  25                 	db	37
  1053  007A8F  64                 	db	100	;'d'
  1054  007A90  7C                 	db	124
  1055  007A91  25                 	db	37
  1056  007A92  64                 	db	100	;'d'
  1057  007A93  7C                 	db	124
  1058  007A94  25                 	db	37
  1059  007A95  64                 	db	100	;'d'
  1060  007A96  7C                 	db	124
  1061  007A97  25                 	db	37
  1062  007A98  64                 	db	100	;'d'
  1063  007A99  7C                 	db	124
  1064  007A9A  25                 	db	37
  1065  007A9B  64                 	db	100	;'d'
  1066  007A9C  7C                 	db	124
  1067  007A9D  25                 	db	37
  1068  007A9E  64                 	db	100	;'d'
  1069  007A9F  7C                 	db	124
  1070  007AA0  25                 	db	37
  1071  007AA1  64                 	db	100	;'d'
  1072  007AA2  7C                 	db	124
  1073  007AA3  25                 	db	37
  1074  007AA4  64                 	db	100	;'d'
  1075  007AA5  7C                 	db	124
  1076  007AA6  25                 	db	37
  1077  007AA7  64                 	db	100	;'d'
  1078  007AA8  7C                 	db	124
  1079  007AA9  25                 	db	37
  1080  007AAA  64                 	db	100	;'d'
  1081  007AAB  7C                 	db	124
  1082  007AAC  25                 	db	37
  1083  007AAD  73                 	db	115	;'s'
  1084  007AAE  7C                 	db	124
  1085  007AAF  25                 	db	37
  1086  007AB0  64                 	db	100	;'d'
  1087  007AB1  7C                 	db	124
  1088  007AB2  25                 	db	37
  1089  007AB3  73                 	db	115	;'s'
  1090  007AB4  7C                 	db	124
  1091  007AB5  25                 	db	37
  1092  007AB6  64                 	db	100	;'d'
  1093  007AB7  26                 	db	38
  1094  007AB8  70                 	db	112	;'p'
  1095  007AB9  3D                 	db	61	;'='
  1096  007ABA  25                 	db	37
  1097  007ABB  64                 	db	100	;'d'
  1098  007ABC  7C                 	db	124
  1099  007ABD  25                 	db	37
  1100  007ABE  64                 	db	100	;'d'
  1101  007ABF  7C                 	db	124
  1102  007AC0  25                 	db	37
  1103  007AC1  64                 	db	100	;'d'
  1104  007AC2  7C                 	db	124
  1105  007AC3  25                 	db	37
  1106  007AC4  64                 	db	100	;'d'
  1107  007AC5  7C                 	db	124
  1108  007AC6  25                 	db	37
  1109  007AC7  64                 	db	100	;'d'
  1110  007AC8  7C                 	db	124
  1111  007AC9  25                 	db	37
  1112  007ACA  64                 	db	100	;'d'
  1113  007ACB  7C                 	db	124
  1114  007ACC  25                 	db	37
  1115  007ACD  64                 	db	100	;'d'
  1116  007ACE  7C                 	db	124
  1117  007ACF  25                 	db	37
  1118  007AD0  64                 	db	100	;'d'
  1119  007AD1  7C                 	db	124
  1120  007AD2  25                 	db	37
  1121  007AD3  64                 	db	100	;'d'
  1122  007AD4  7C                 	db	124
  1123  007AD5  25                 	db	37
  1124  007AD6  64                 	db	100	;'d'
  1125  007AD7  7C                 	db	124
  1126  007AD8  25                 	db	37
  1127  007AD9  64                 	db	100	;'d'
  1128  007ADA  7C                 	db	124
  1129  007ADB  25                 	db	37
  1130  007ADC  64                 	db	100	;'d'
  1131  007ADD  7C                 	db	124
  1132  007ADE  25                 	db	37
  1133  007ADF  64                 	db	100	;'d'
  1134  007AE0  7C                 	db	124
  1135  007AE1  25                 	db	37
  1136  007AE2  64                 	db	100	;'d'
  1137  007AE3  26                 	db	38
  1138  007AE4  6B                 	db	107	;'k'
  1139  007AE5  3D                 	db	61	;'='
  1140  007AE6  31                 	db	49	;'1'
  1141  007AE7  7A                 	db	122	;'z'
  1142  007AE8  34                 	db	52	;'4'
  1143  007AE9  64                 	db	100	;'d'
  1144  007AEA  66                 	db	102	;'f'
  1145  007AEB  36                 	db	54	;'6'
  1146  007AEC  38                 	db	56	;'8'
  1147  007AED  69                 	db	105	;'i'
  1148  007AEE  77                 	db	119	;'w'
  1149  007AEF  31                 	db	49	;'1'
  1150  007AF0  66                 	db	102	;'f'
  1151  007AF1  70                 	db	112	;'p'
  1152  007AF2  35                 	db	53	;'5'
  1153  007AF3  20                 	db	32
  1154  007AF4  48                 	db	72	;'H'
  1155  007AF5  54                 	db	84	;'T'
  1156  007AF6  54                 	db	84	;'T'
  1157  007AF7  50                 	db	80	;'P'
  1158  007AF8  2F                 	db	47
  1159  007AF9  31                 	db	49	;'1'
  1160  007AFA  2E                 	db	46
  1161  007AFB  31                 	db	49	;'1'
  1162  007AFC  0D                 	db	13
  1163  007AFD  0A                 	db	10
  1164  007AFE  48                 	db	72	;'H'
  1165  007AFF  6F                 	db	111	;'o'
  1166  007B00  73                 	db	115	;'s'
  1167  007B01  74                 	db	116	;'t'
  1168  007B02  3A                 	db	58	;':'
  1169  007B03  20                 	db	32
  1170  007B04  68                 	db	104	;'h'
  1171  007B05  74                 	db	116	;'t'
  1172  007B06  74                 	db	116	;'t'
  1173  007B07  70                 	db	112	;'p'
  1174  007B08  73                 	db	115	;'s'
  1175  007B09  3A                 	db	58	;':'
  1176  007B0A  2F                 	db	47
  1177  007B0B  2F                 	db	47
  1178  007B0C  73                 	db	115	;'s'
  1179  007B0D  6D                 	db	109	;'m'
  1180  007B0E  61                 	db	97	;'a'
  1181  007B0F  72                 	db	114	;'r'
  1182  007B10  74                 	db	116	;'t'
  1183  007B11  73                 	db	115	;'s'
  1184  007B12  65                 	db	101	;'e'
  1185  007B13  63                 	db	99	;'c'
  1186  007B14  2D                 	db	45
  1187  007B15  6E                 	db	110	;'n'
  1188  007B16  6F                 	db	111	;'o'
  1189  007B17  64                 	db	100	;'d'
  1190  007B18  65                 	db	101	;'e'
  1191  007B19  2E                 	db	46
  1192  007B1A  68                 	db	104	;'h'
  1193  007B1B  65                 	db	101	;'e'
  1194  007B1C  72                 	db	114	;'r'
  1195  007B1D  6F                 	db	111	;'o'
  1196  007B1E  6B                 	db	107	;'k'
  1197  007B1F  75                 	db	117	;'u'
  1198  007B20  61                 	db	97	;'a'
  1199  007B21  70                 	db	112	;'p'
  1200  007B22  70                 	db	112	;'p'
  1201  007B23  2E                 	db	46
  1202  007B24  63                 	db	99	;'c'
  1203  007B25  6F                 	db	111	;'o'
  1204  007B26  6D                 	db	109	;'m'
  1205  007B27  0D                 	db	13
  1206  007B28  0A                 	db	10
  1207  007B29  0D                 	db	13
  1208  007B2A  0A                 	db	10
  1209  007B2B  5C                 	db	92	;'\'
  1210  007B2C  30                 	db	48	;'0'
  1211  007B2D  00                 	db	0
  1212  007B2E                     STR_53:
  1213  007B2E  41                 	db	65	;'A'
  1214  007B2F  54                 	db	84	;'T'
  1215  007B30  2B                 	db	43
  1216  007B31  43                 	db	67	;'C'
  1217  007B32  49                 	db	73	;'I'
  1218  007B33  50                 	db	80	;'P'
  1219  007B34  53                 	db	83	;'S'
  1220  007B35  54                 	db	84	;'T'
  1221  007B36  41                 	db	65	;'A'
  1222  007B37  52                 	db	82	;'R'
  1223  007B38  54                 	db	84	;'T'
  1224  007B39  3D                 	db	61	;'='
  1225  007B3A  22                 	db	34
  1226  007B3B  54                 	db	84	;'T'
  1227  007B3C  43                 	db	67	;'C'
  1228  007B3D  50                 	db	80	;'P'
  1229  007B3E  22                 	db	34
  1230  007B3F  2C                 	db	44
  1231  007B40  22                 	db	34
  1232  007B41  68                 	db	104	;'h'
  1233  007B42  74                 	db	116	;'t'
  1234  007B43  74                 	db	116	;'t'
  1235  007B44  70                 	db	112	;'p'
  1236  007B45  73                 	db	115	;'s'
  1237  007B46  3A                 	db	58	;':'
  1238  007B47  2F                 	db	47
  1239  007B48  2F                 	db	47
  1240  007B49  73                 	db	115	;'s'
  1241  007B4A  6D                 	db	109	;'m'
  1242  007B4B  61                 	db	97	;'a'
  1243  007B4C  72                 	db	114	;'r'
  1244  007B4D  74                 	db	116	;'t'
  1245  007B4E  73                 	db	115	;'s'
  1246  007B4F  65                 	db	101	;'e'
  1247  007B50  63                 	db	99	;'c'
  1248  007B51  2D                 	db	45
  1249  007B52  6E                 	db	110	;'n'
  1250  007B53  6F                 	db	111	;'o'
  1251  007B54  64                 	db	100	;'d'
  1252  007B55  65                 	db	101	;'e'
  1253  007B56  2E                 	db	46
  1254  007B57  68                 	db	104	;'h'
  1255  007B58  65                 	db	101	;'e'
  1256  007B59  72                 	db	114	;'r'
  1257  007B5A  6F                 	db	111	;'o'
  1258  007B5B  6B                 	db	107	;'k'
  1259  007B5C  75                 	db	117	;'u'
  1260  007B5D  61                 	db	97	;'a'
  1261  007B5E  70                 	db	112	;'p'
  1262  007B5F  70                 	db	112	;'p'
  1263  007B60  2E                 	db	46
  1264  007B61  63                 	db	99	;'c'
  1265  007B62  6F                 	db	111	;'o'
  1266  007B63  6D                 	db	109	;'m'
  1267  007B64  2F                 	db	47
  1268  007B65  22                 	db	34
  1269  007B66  2C                 	db	44
  1270  007B67  38                 	db	56	;'8'
  1271  007B68  30                 	db	48	;'0'
  1272  007B69  0D                 	db	13
  1273  007B6A  0A                 	db	10
  1274  007B6B  00                 	db	0
  1275  007B6C                     STR_31:
  1276  007B6C  48                 	db	72	;'H'
  1277  007B6D  54                 	db	84	;'T'
  1278  007B6E  54                 	db	84	;'T'
  1279  007B6F  50                 	db	80	;'P'
  1280  007B70  20                 	db	32
  1281  007B71  31                 	db	49	;'1'
  1282  007B72  2E                 	db	46
  1283  007B73  31                 	db	49	;'1'
  1284  007B74  2F                 	db	47
  1285  007B75  32                 	db	50	;'2'
  1286  007B76  30                 	db	48	;'0'
  1287  007B77  30                 	db	48	;'0'
  1288  007B78  20                 	db	32
  1289  007B79  4F                 	db	79	;'O'
  1290  007B7A  4B                 	db	75	;'K'
  1291  007B7B  0D                 	db	13
  1292  007B7C  0A                 	db	10
  1293  007B7D  43                 	db	67	;'C'
  1294  007B7E  6F                 	db	111	;'o'
  1295  007B7F  6E                 	db	110	;'n'
  1296  007B80  74                 	db	116	;'t'
  1297  007B81  65                 	db	101	;'e'
  1298  007B82  6E                 	db	110	;'n'
  1299  007B83  74                 	db	116	;'t'
  1300  007B84  2D                 	db	45
  1301  007B85  74                 	db	116	;'t'
  1302  007B86  79                 	db	121	;'y'
  1303  007B87  70                 	db	112	;'p'
  1304  007B88  65                 	db	101	;'e'
  1305  007B89  3A                 	db	58	;':'
  1306  007B8A  20                 	db	32
  1307  007B8B  74                 	db	116	;'t'
  1308  007B8C  65                 	db	101	;'e'
  1309  007B8D  78                 	db	120	;'x'
  1310  007B8E  74                 	db	116	;'t'
  1311  007B8F  2F                 	db	47
  1312  007B90  68                 	db	104	;'h'
  1313  007B91  74                 	db	116	;'t'
  1314  007B92  6D                 	db	109	;'m'
  1315  007B93  6C                 	db	108	;'l'
  1316  007B94  0D                 	db	13
  1317  007B95  0A                 	db	10
  1318  007B96  0D                 	db	13
  1319  007B97  0A                 	db	10
  1320  007B98  00                 	db	0
  1321  007B99                     STR_16:
  1322  007B99  41                 	db	65	;'A'
  1323  007B9A  54                 	db	84	;'T'
  1324  007B9B  2B                 	db	43
  1325  007B9C  43                 	db	67	;'C'
  1326  007B9D  57                 	db	87	;'W'
  1327  007B9E  53                 	db	83	;'S'
  1328  007B9F  41                 	db	65	;'A'
  1329  007BA0  50                 	db	80	;'P'
  1330  007BA1  3D                 	db	61	;'='
  1331  007BA2  22                 	db	34
  1332  007BA3  43                 	db	67	;'C'
  1333  007BA4  4F                 	db	79	;'O'
  1334  007BA5  4E                 	db	78	;'N'
  1335  007BA6  54                 	db	84	;'T'
  1336  007BA7  52                 	db	82	;'R'
  1337  007BA8  4F                 	db	79	;'O'
  1338  007BA9  4C                 	db	76	;'L'
  1339  007BAA  41                 	db	65	;'A'
  1340  007BAB  44                 	db	68	;'D'
  1341  007BAC  4F                 	db	79	;'O'
  1342  007BAD  52                 	db	82	;'R'
  1343  007BAE  22                 	db	34
  1344  007BAF  2C                 	db	44
  1345  007BB0  22                 	db	34
  1346  007BB1  22                 	db	34
  1347  007BB2  2C                 	db	44
  1348  007BB3  31                 	db	49	;'1'
  1349  007BB4  31                 	db	49	;'1'
  1350  007BB5  2C                 	db	44
  1351  007BB6  30                 	db	48	;'0'
  1352  007BB7  2C                 	db	44
  1353  007BB8  34                 	db	52	;'4'
  1354  007BB9  0D                 	db	13
  1355  007BBA  0A                 	db	10
  1356  007BBB  00                 	db	0
  1357  007BBC                     STR_18:
  1358  007BBC  41                 	db	65	;'A'
  1359  007BBD  54                 	db	84	;'T'
  1360  007BBE  2B                 	db	43
  1361  007BBF  43                 	db	67	;'C'
  1362  007BC0  49                 	db	73	;'I'
  1363  007BC1  50                 	db	80	;'P'
  1364  007BC2  41                 	db	65	;'A'
  1365  007BC3  50                 	db	80	;'P'
  1366  007BC4  3D                 	db	61	;'='
  1367  007BC5  22                 	db	34
  1368  007BC6  31                 	db	49	;'1'
  1369  007BC7  30                 	db	48	;'0'
  1370  007BC8  2E                 	db	46
  1371  007BC9  31                 	db	49	;'1'
  1372  007BCA  2E                 	db	46
  1373  007BCB  31                 	db	49	;'1'
  1374  007BCC  2E                 	db	46
  1375  007BCD  31                 	db	49	;'1'
  1376  007BCE  22                 	db	34
  1377  007BCF  0D                 	db	13
  1378  007BD0  0A                 	db	10
  1379  007BD1  00                 	db	0
  1380  007BD2                     STR_20:
  1381  007BD2  41                 	db	65	;'A'
  1382  007BD3  54                 	db	84	;'T'
  1383  007BD4  2B                 	db	43
  1384  007BD5  43                 	db	67	;'C'
  1385  007BD6  49                 	db	73	;'I'
  1386  007BD7  50                 	db	80	;'P'
  1387  007BD8  53                 	db	83	;'S'
  1388  007BD9  45                 	db	69	;'E'
  1389  007BDA  52                 	db	82	;'R'
  1390  007BDB  56                 	db	86	;'V'
  1391  007BDC  45                 	db	69	;'E'
  1392  007BDD  52                 	db	82	;'R'
  1393  007BDE  3D                 	db	61	;'='
  1394  007BDF  31                 	db	49	;'1'
  1395  007BE0  2C                 	db	44
  1396  007BE1  38                 	db	56	;'8'
  1397  007BE2  30                 	db	48	;'0'
  1398  007BE3  38                 	db	56	;'8'
  1399  007BE4  30                 	db	48	;'0'
  1400  007BE5  0D                 	db	13
  1401  007BE6  0A                 	db	10
  1402  007BE7  00                 	db	0
  1403  007BE8                     STR_76:
  1404  007BE8  55                 	db	85	;'U'
  1405  007BE9  4D                 	db	77	;'M'
  1406  007BEA  49                 	db	73	;'I'
  1407  007BEB  44                 	db	68	;'D'
  1408  007BEC  20                 	db	32
  1409  007BED  20                 	db	32
  1410  007BEE  7C                 	db	124
  1411  007BEF  20                 	db	32
  1412  007BF0  20                 	db	32
  1413  007BF1  25                 	db	37
  1414  007BF2  33                 	db	51	;'3'
  1415  007BF3  64                 	db	100	;'d'
  1416  007BF4  20                 	db	32
  1417  007BF5  7C                 	db	124
  1418  007BF6  20                 	db	32
  1419  007BF7  25                 	db	37
  1420  007BF8  33                 	db	51	;'3'
  1421  007BF9  64                 	db	100	;'d'
  1422  007BFA  20                 	db	32
  1423  007BFB  25                 	db	37
  1424  007BFC  63                 	db	99	;'c'
  1425  007BFD  00                 	db	0
  1426  007BFE                     STR_49:
  1427  007BFE  41                 	db	65	;'A'
  1428  007BFF  54                 	db	84	;'T'
  1429  007C00  2B                 	db	43
  1430  007C01  43                 	db	67	;'C'
  1431  007C02  57                 	db	87	;'W'
  1432  007C03  4A                 	db	74	;'J'
  1433  007C04  41                 	db	65	;'A'
  1434  007C05  50                 	db	80	;'P'
  1435  007C06  3D                 	db	61	;'='
  1436  007C07  22                 	db	34
  1437  007C08  25                 	db	37
  1438  007C09  73                 	db	115	;'s'
  1439  007C0A  22                 	db	34
  1440  007C0B  2C                 	db	44
  1441  007C0C  22                 	db	34
  1442  007C0D  25                 	db	37
  1443  007C0E  73                 	db	115	;'s'
  1444  007C0F  22                 	db	34
  1445  007C10  0D                 	db	13
  1446  007C11  0A                 	db	10
  1447  007C12  00                 	db	0
  1448  007C13                     STR_29:
  1449  007C13  41                 	db	65	;'A'
  1450  007C14  54                 	db	84	;'T'
  1451  007C15  2B                 	db	43
  1452  007C16  43                 	db	67	;'C'
  1453  007C17  49                 	db	73	;'I'
  1454  007C18  50                 	db	80	;'P'
  1455  007C19  53                 	db	83	;'S'
  1456  007C1A  45                 	db	69	;'E'
  1457  007C1B  4E                 	db	78	;'N'
  1458  007C1C  44                 	db	68	;'D'
  1459  007C1D  45                 	db	69	;'E'
  1460  007C1E  58                 	db	88	;'X'
  1461  007C1F  3D                 	db	61	;'='
  1462  007C20  30                 	db	48	;'0'
  1463  007C21  2C                 	db	44
  1464  007C22  38                 	db	56	;'8'
  1465  007C23  30                 	db	48	;'0'
  1466  007C24  30                 	db	48	;'0'
  1467  007C25  0D                 	db	13
  1468  007C26  0A                 	db	10
  1469  007C27  00                 	db	0
  1470  007C28                     STR_24:
  1471  007C28  63                 	db	99	;'c'
  1472  007C29  6F                 	db	111	;'o'
  1473  007C2A  6E                 	db	110	;'n'
  1474  007C2B  66                 	db	102	;'f'
  1475  007C2C  69                 	db	105	;'i'
  1476  007C2D  67                 	db	103	;'g'
  1477  007C2E  75                 	db	117	;'u'
  1478  007C2F  72                 	db	114	;'r'
  1479  007C30  61                 	db	97	;'a'
  1480  007C31  72                 	db	114	;'r'
  1481  007C32  20                 	db	32
  1482  007C33  6F                 	db	111	;'o'
  1483  007C34  20                 	db	32
  1484  007C35  57                 	db	87	;'W'
  1485  007C36  49                 	db	73	;'I'
  1486  007C37  46                 	db	70	;'F'
  1487  007C38  49                 	db	73	;'I'
  1488  007C39  2E                 	db	46
  1489  007C3A  2E                 	db	46
  1490  007C3B  2E                 	db	46
  1491  007C3C  00                 	db	0
  1492  007C3D                     STR_75:
  1493  007C3D  54                 	db	84	;'T'
  1494  007C3E  45                 	db	69	;'E'
  1495  007C3F  4D                 	db	77	;'M'
  1496  007C40  50                 	db	80	;'P'
  1497  007C41  20                 	db	32
  1498  007C42  20                 	db	32
  1499  007C43  7C                 	db	124
  1500  007C44  20                 	db	32
  1501  007C45  20                 	db	32
  1502  007C46  25                 	db	37
  1503  007C47  33                 	db	51	;'3'
  1504  007C48  64                 	db	100	;'d'
  1505  007C49  20                 	db	32
  1506  007C4A  7C                 	db	124
  1507  007C4B  20                 	db	32
  1508  007C4C  25                 	db	37
  1509  007C4D  33                 	db	51	;'3'
  1510  007C4E  64                 	db	100	;'d'
  1511  007C4F  20                 	db	32
  1512  007C50  46                 	db	70	;'F'
  1513  007C51  00                 	db	0
  1514  007C52                     STR_78:
  1515  007C52  20                 	db	32
  1516  007C53  2A                 	db	42
  1517  007C54  46                 	db	70	;'F'
  1518  007C55  41                 	db	65	;'A'
  1519  007C56  4C                 	db	76	;'L'
  1520  007C57  54                 	db	84	;'T'
  1521  007C58  41                 	db	65	;'A'
  1522  007C59  20                 	db	32
  1523  007C5A  44                 	db	68	;'D'
  1524  007C5B  45                 	db	69	;'E'
  1525  007C5C  20                 	db	32
  1526  007C5D  45                 	db	69	;'E'
  1527  007C5E  4E                 	db	78	;'N'
  1528  007C5F  45                 	db	69	;'E'
  1529  007C60  52                 	db	82	;'R'
  1530  007C61  47                 	db	71	;'G'
  1531  007C62  49                 	db	73	;'I'
  1532  007C63  41                 	db	65	;'A'
  1533  007C64  2A                 	db	42
  1534  007C65  00                 	db	0
  1535  007C66                     STR_107:
  1536  007C66  43                 	db	67	;'C'
  1537  007C67  4F                 	db	79	;'O'
  1538  007C68  4E                 	db	78	;'N'
  1539  007C69  46                 	db	70	;'F'
  1540  007C6A  49                 	db	73	;'I'
  1541  007C6B  47                 	db	71	;'G'
  1542  007C6C  55                 	db	85	;'U'
  1543  007C6D  52                 	db	82	;'R'
  1544  007C6E  41                 	db	65	;'A'
  1545  007C6F  52                 	db	82	;'R'
  1546  007C70  20                 	db	32
  1547  007C71  20                 	db	32
  1548  007C72  20                 	db	32
  1549  007C73  20                 	db	32
  1550  007C74  20                 	db	32
  1551  007C75  20                 	db	32
  1552  007C76  20                 	db	32
  1553  007C77  3E                 	db	62	;'>'
  1554  007C78  3E                 	db	62	;'>'
  1555  007C79  00                 	db	0
  1556  007C7A                     STR_93:
  1557  007C7A  43                 	db	67	;'C'
  1558  007C7B  4F                 	db	79	;'O'
  1559  007C7C  4E                 	db	78	;'N'
  1560  007C7D  46                 	db	70	;'F'
  1561  007C7E  49                 	db	73	;'I'
  1562  007C7F  47                 	db	71	;'G'
  1563  007C80  20                 	db	32
  1564  007C81  57                 	db	87	;'W'
  1565  007C82  49                 	db	73	;'I'
  1566  007C83  46                 	db	70	;'F'
  1567  007C84  49                 	db	73	;'I'
  1568  007C85  20                 	db	32
  1569  007C86  20                 	db	32
  1570  007C87  20                 	db	32
  1571  007C88  20                 	db	32
  1572  007C89  20                 	db	32
  1573  007C8A  20                 	db	32
  1574  007C8B  3E                 	db	62	;'>'
  1575  007C8C  3E                 	db	62	;'>'
  1576  007C8D  00                 	db	0
  1577  007C8E                     STR_92:
  1578  007C8E  54                 	db	84	;'T'
  1579  007C8F  45                 	db	69	;'E'
  1580  007C90  4D                 	db	77	;'M'
  1581  007C91  50                 	db	80	;'P'
  1582  007C92  4F                 	db	79	;'O'
  1583  007C93  20                 	db	32
  1584  007C94  46                 	db	70	;'F'
  1585  007C95  49                 	db	73	;'I'
  1586  007C96  4D                 	db	77	;'M'
  1587  007C97  20                 	db	32
  1588  007C98  46                 	db	70	;'F'
  1589  007C99  41                 	db	65	;'A'
  1590  007C9A  53                 	db	83	;'S'
  1591  007C9B  45                 	db	69	;'E'
  1592  007C9C  20                 	db	32
  1593  007C9D  20                 	db	32
  1594  007C9E  20                 	db	32
  1595  007C9F  3E                 	db	62	;'>'
  1596  007CA0  3E                 	db	62	;'>'
  1597  007CA1  00                 	db	0
  1598  007CA2                     STR_94:
  1599  007CA2  43                 	db	67	;'C'
  1600  007CA3  4F                 	db	79	;'O'
  1601  007CA4  4E                 	db	78	;'N'
  1602  007CA5  46                 	db	70	;'F'
  1603  007CA6  49                 	db	73	;'I'
  1604  007CA7  47                 	db	71	;'G'
  1605  007CA8  20                 	db	32
  1606  007CA9  41                 	db	65	;'A'
  1607  007CAA  56                 	db	86	;'V'
  1608  007CAB  41                 	db	65	;'A'
  1609  007CAC  4E                 	db	78	;'N'
  1610  007CAD  43                 	db	67	;'C'
  1611  007CAE  41                 	db	65	;'A'
  1612  007CAF  44                 	db	68	;'D'
  1613  007CB0  41                 	db	65	;'A'
  1614  007CB1  53                 	db	83	;'S'
  1615  007CB2  20                 	db	32
  1616  007CB3  3E                 	db	62	;'>'
  1617  007CB4  3E                 	db	62	;'>'
  1618  007CB5  00                 	db	0
  1619  007CB6                     STR_69:
  1620  007CB6  20                 	db	32
  1621  007CB7  54                 	db	84	;'T'
  1622  007CB8  45                 	db	69	;'E'
  1623  007CB9  43                 	db	67	;'C'
  1624  007CBA  48                 	db	72	;'H'
  1625  007CBB  4E                 	db	78	;'N'
  1626  007CBC  4F                 	db	79	;'O'
  1627  007CBD  57                 	db	87	;'W'
  1628  007CBE  20                 	db	32
  1629  007CBF  54                 	db	84	;'T'
  1630  007CC0  65                 	db	101	;'e'
  1631  007CC1  63                 	db	99	;'c'
  1632  007CC2  6E                 	db	110	;'n'
  1633  007CC3  6F                 	db	111	;'o'
  1634  007CC4  6C                 	db	108	;'l'
  1635  007CC5  6F                 	db	111	;'o'
  1636  007CC6  67                 	db	103	;'g'
  1637  007CC7  69                 	db	105	;'i'
  1638  007CC8  61                 	db	97	;'a'
  1639  007CC9  00                 	db	0
  1640  007CCA                     STR_22:
  1641  007CCA  43                 	db	67	;'C'
  1642  007CCB  6F                 	db	111	;'o'
  1643  007CCC  6E                 	db	110	;'n'
  1644  007CCD  65                 	db	101	;'e'
  1645  007CCE  63                 	db	99	;'c'
  1646  007CCF  74                 	db	116	;'t'
  1647  007CD0  65                 	db	101	;'e'
  1648  007CD1  2D                 	db	45
  1649  007CD2  73                 	db	115	;'s'
  1650  007CD3  65                 	db	101	;'e'
  1651  007CD4  20                 	db	32
  1652  007CD5  61                 	db	97	;'a'
  1653  007CD6  20                 	db	32
  1654  007CD7  72                 	db	114	;'r'
  1655  007CD8  65                 	db	101	;'e'
  1656  007CD9  64                 	db	100	;'d'
  1657  007CDA  65                 	db	101	;'e'
  1658  007CDB  20                 	db	32
  1659  007CDC  65                 	db	101	;'e'
  1660  007CDD  00                 	db	0
  1661  007CDE                     STR_55:
  1662  007CDE  41                 	db	65	;'A'
  1663  007CDF  54                 	db	84	;'T'
  1664  007CE0  2B                 	db	43
  1665  007CE1  43                 	db	67	;'C'
  1666  007CE2  49                 	db	73	;'I'
  1667  007CE3  50                 	db	80	;'P'
  1668  007CE4  53                 	db	83	;'S'
  1669  007CE5  45                 	db	69	;'E'
  1670  007CE6  4E                 	db	78	;'N'
  1671  007CE7  44                 	db	68	;'D'
  1672  007CE8  45                 	db	69	;'E'
  1673  007CE9  58                 	db	88	;'X'
  1674  007CEA  3D                 	db	61	;'='
  1675  007CEB  32                 	db	50	;'2'
  1676  007CEC  36                 	db	54	;'6'
  1677  007CED  30                 	db	48	;'0'
  1678  007CEE  0D                 	db	13
  1679  007CEF  0A                 	db	10
  1680  007CF0  00                 	db	0
  1681  007CF1                     STR_110:
  1682  007CF1  53                 	db	83	;'S'
  1683  007CF2  65                 	db	101	;'e'
  1684  007CF3  63                 	db	99	;'c'
  1685  007CF4  2E                 	db	46
  1686  007CF5  20                 	db	32
  1687  007CF6  46                 	db	70	;'F'
  1688  007CF7  6F                 	db	111	;'o'
  1689  007CF8  6C                 	db	108	;'l'
  1690  007CF9  68                 	db	104	;'h'
  1691  007CFA  61                 	db	97	;'a'
  1692  007CFB  20                 	db	32
  1693  007CFC  3A                 	db	58	;':'
  1694  007CFD  20                 	db	32
  1695  007CFE  25                 	db	37
  1696  007CFF  64                 	db	100	;'d'
  1697  007D00  20                 	db	32
  1698  007D01  68                 	db	104	;'h'
  1699  007D02  72                 	db	114	;'r'
  1700  007D03  00                 	db	0
  1701  007D04                     STR_108:
  1702  007D04  41                 	db	65	;'A'
  1703  007D05  6D                 	db	109	;'m'
  1704  007D06  61                 	db	97	;'a'
  1705  007D07  72                 	db	114	;'r'
  1706  007D08  65                 	db	101	;'e'
  1707  007D09  6C                 	db	108	;'l'
  1708  007D0A  61                 	db	97	;'a'
  1709  007D0B  63                 	db	99	;'c'
  1710  007D0C  61                 	db	97	;'a'
  1711  007D0D  6F                 	db	111	;'o'
  1712  007D0E  20                 	db	32
  1713  007D0F  3A                 	db	58	;':'
  1714  007D10  20                 	db	32
  1715  007D11  25                 	db	37
  1716  007D12  64                 	db	100	;'d'
  1717  007D13  20                 	db	32
  1718  007D14  68                 	db	104	;'h'
  1719  007D15  72                 	db	114	;'r'
  1720  007D16  00                 	db	0
  1721  007D17                     STR_109:
  1722  007D17  4D                 	db	77	;'M'
  1723  007D18  75                 	db	117	;'u'
  1724  007D19  72                 	db	114	;'r'
  1725  007D1A  63                 	db	99	;'c'
  1726  007D1B  68                 	db	104	;'h'
  1727  007D1C  61                 	db	97	;'a'
  1728  007D1D  6D                 	db	109	;'m'
  1729  007D1E  65                 	db	101	;'e'
  1730  007D1F  6E                 	db	110	;'n'
  1731  007D20  74                 	db	116	;'t'
  1732  007D21  6F                 	db	111	;'o'
  1733  007D22  3A                 	db	58	;':'
  1734  007D23  20                 	db	32
  1735  007D24  25                 	db	37
  1736  007D25  64                 	db	100	;'d'
  1737  007D26  20                 	db	32
  1738  007D27  68                 	db	104	;'h'
  1739  007D28  72                 	db	114	;'r'
  1740  007D29  00                 	db	0
  1741  007D2A                     STR_79:
  1742  007D2A  54                 	db	84	;'T'
  1743  007D2B  45                 	db	69	;'E'
  1744  007D2C  4D                 	db	77	;'M'
  1745  007D2D  50                 	db	80	;'P'
  1746  007D2E  45                 	db	69	;'E'
  1747  007D2F  52                 	db	82	;'R'
  1748  007D30  41                 	db	65	;'A'
  1749  007D31  54                 	db	84	;'T'
  1750  007D32  55                 	db	85	;'U'
  1751  007D33  52                 	db	82	;'R'
  1752  007D34  41                 	db	65	;'A'
  1753  007D35  3A                 	db	58	;':'
  1754  007D36  20                 	db	32
  1755  007D37  25                 	db	37
  1756  007D38  64                 	db	100	;'d'
  1757  007D39  20                 	db	32
  1758  007D3A  46                 	db	70	;'F'
  1759  007D3B  00                 	db	0
  1760  007D3C                     STR_99:
  1761  007D3C  50                 	db	80	;'P'
  1762  007D3D  39                 	db	57	;'9'
  1763  007D3E  20                 	db	32
  1764  007D3F  3A                 	db	58	;':'
  1765  007D40  25                 	db	37
  1766  007D41  34                 	db	52	;'4'
  1767  007D42  64                 	db	100	;'d'
  1768  007D43  20                 	db	32
  1769  007D44  7C                 	db	124
  1770  007D45  20                 	db	32
  1771  007D46  50                 	db	80	;'P'
  1772  007D47  31                 	db	49	;'1'
  1773  007D48  33                 	db	51	;'3'
  1774  007D49  3A                 	db	58	;':'
  1775  007D4A  25                 	db	37
  1776  007D4B  34                 	db	52	;'4'
  1777  007D4C  64                 	db	100	;'d'
  1778  007D4D  00                 	db	0
  1779  007D4E                     STR_100:
  1780  007D4E  50                 	db	80	;'P'
  1781  007D4F  31                 	db	49	;'1'
  1782  007D50  30                 	db	48	;'0'
  1783  007D51  3A                 	db	58	;':'
  1784  007D52  25                 	db	37
  1785  007D53  34                 	db	52	;'4'
  1786  007D54  64                 	db	100	;'d'
  1787  007D55  20                 	db	32
  1788  007D56  7C                 	db	124
  1789  007D57  20                 	db	32
  1790  007D58  50                 	db	80	;'P'
  1791  007D59  31                 	db	49	;'1'
  1792  007D5A  34                 	db	52	;'4'
  1793  007D5B  3A                 	db	58	;':'
  1794  007D5C  25                 	db	37
  1795  007D5D  34                 	db	52	;'4'
  1796  007D5E  64                 	db	100	;'d'
  1797  007D5F  00                 	db	0
  1798  007D60                     STR_101:
  1799  007D60  50                 	db	80	;'P'
  1800  007D61  31                 	db	49	;'1'
  1801  007D62  31                 	db	49	;'1'
  1802  007D63  3A                 	db	58	;':'
  1803  007D64  25                 	db	37
  1804  007D65  34                 	db	52	;'4'
  1805  007D66  64                 	db	100	;'d'
  1806  007D67  20                 	db	32
  1807  007D68  7C                 	db	124
  1808  007D69  20                 	db	32
  1809  007D6A  50                 	db	80	;'P'
  1810  007D6B  31                 	db	49	;'1'
  1811  007D6C  35                 	db	53	;'5'
  1812  007D6D  3A                 	db	58	;':'
  1813  007D6E  25                 	db	37
  1814  007D6F  34                 	db	52	;'4'
  1815  007D70  64                 	db	100	;'d'
  1816  007D71  00                 	db	0
  1817  007D72                     STR_111:
  1818  007D72  2A                 	db	42
  1819  007D73  30                 	db	48	;'0'
  1820  007D74  20                 	db	32
  1821  007D75  6E                 	db	110	;'n'
  1822  007D76  61                 	db	97	;'a'
  1823  007D77  6F                 	db	111	;'o'
  1824  007D78  20                 	db	32
  1825  007D79  70                 	db	112	;'p'
  1826  007D7A  61                 	db	97	;'a'
  1827  007D7B  73                 	db	115	;'s'
  1828  007D7C  73                 	db	115	;'s'
  1829  007D7D  61                 	db	97	;'a'
  1830  007D7E  20                 	db	32
  1831  007D7F  66                 	db	102	;'f'
  1832  007D80  61                 	db	97	;'a'
  1833  007D81  73                 	db	115	;'s'
  1834  007D82  65                 	db	101	;'e'
  1835  007D83  00                 	db	0
  1836  007D84                     STR_23:
  1837  007D84  61                 	db	97	;'a'
  1838  007D85  63                 	db	99	;'c'
  1839  007D86  65                 	db	101	;'e'
  1840  007D87  73                 	db	115	;'s'
  1841  007D88  73                 	db	115	;'s'
  1842  007D89  65                 	db	101	;'e'
  1843  007D8A  20                 	db	32
  1844  007D8B  6F                 	db	111	;'o'
  1845  007D8C  20                 	db	32
  1846  007D8D  49                 	db	73	;'I'
  1847  007D8E  50                 	db	80	;'P'
  1848  007D8F  20                 	db	32
  1849  007D90  70                 	db	112	;'p'
  1850  007D91  61                 	db	97	;'a'
  1851  007D92  72                 	db	114	;'r'
  1852  007D93  61                 	db	97	;'a'
  1853  007D94  00                 	db	0
  1854  007D95                     STR_106:
  1855  007D95  53                 	db	83	;'S'
  1856  007D96  45                 	db	69	;'E'
  1857  007D97  4E                 	db	78	;'N'
  1858  007D98  48                 	db	72	;'H'
  1859  007D99  41                 	db	65	;'A'
  1860  007D9A  20                 	db	32
  1861  007D9B  52                 	db	82	;'R'
  1862  007D9C  45                 	db	69	;'E'
  1863  007D9D  4D                 	db	77	;'M'
  1864  007D9E  4F                 	db	79	;'O'
  1865  007D9F  54                 	db	84	;'T'
  1866  007DA0  41                 	db	65	;'A'
  1867  007DA1  3A                 	db	58	;':'
  1868  007DA2  20                 	db	32
  1869  007DA3  25                 	db	37
  1870  007DA4  64                 	db	100	;'d'
  1871  007DA5  00                 	db	0
  1872  007DA6                     STR_95:
  1873  007DA6  50                 	db	80	;'P'
  1874  007DA7  31                 	db	49	;'1'
  1875  007DA8  3A                 	db	58	;':'
  1876  007DA9  25                 	db	37
  1877  007DAA  34                 	db	52	;'4'
  1878  007DAB  64                 	db	100	;'d'
  1879  007DAC  20                 	db	32
  1880  007DAD  7C                 	db	124
  1881  007DAE  20                 	db	32
  1882  007DAF  20                 	db	32
  1883  007DB0  50                 	db	80	;'P'
  1884  007DB1  35                 	db	53	;'5'
  1885  007DB2  3A                 	db	58	;':'
  1886  007DB3  25                 	db	37
  1887  007DB4  34                 	db	52	;'4'
  1888  007DB5  64                 	db	100	;'d'
  1889  007DB6  00                 	db	0
  1890  007DB7                     STR_96:
  1891  007DB7  50                 	db	80	;'P'
  1892  007DB8  32                 	db	50	;'2'
  1893  007DB9  3A                 	db	58	;':'
  1894  007DBA  25                 	db	37
  1895  007DBB  34                 	db	52	;'4'
  1896  007DBC  64                 	db	100	;'d'
  1897  007DBD  20                 	db	32
  1898  007DBE  7C                 	db	124
  1899  007DBF  20                 	db	32
  1900  007DC0  20                 	db	32
  1901  007DC1  50                 	db	80	;'P'
  1902  007DC2  36                 	db	54	;'6'
  1903  007DC3  3A                 	db	58	;':'
  1904  007DC4  25                 	db	37
  1905  007DC5  34                 	db	52	;'4'
  1906  007DC6  64                 	db	100	;'d'
  1907  007DC7  00                 	db	0
  1908  007DC8                     STR_97:
  1909  007DC8  50                 	db	80	;'P'
  1910  007DC9  33                 	db	51	;'3'
  1911  007DCA  3A                 	db	58	;':'
  1912  007DCB  25                 	db	37
  1913  007DCC  34                 	db	52	;'4'
  1914  007DCD  64                 	db	100	;'d'
  1915  007DCE  20                 	db	32
  1916  007DCF  7C                 	db	124
  1917  007DD0  20                 	db	32
  1918  007DD1  20                 	db	32
  1919  007DD2  50                 	db	80	;'P'
  1920  007DD3  37                 	db	55	;'7'
  1921  007DD4  3A                 	db	58	;':'
  1922  007DD5  25                 	db	37
  1923  007DD6  34                 	db	52	;'4'
  1924  007DD7  64                 	db	100	;'d'
  1925  007DD8  00                 	db	0
  1926  007DD9                     STR_98:
  1927  007DD9  50                 	db	80	;'P'
  1928  007DDA  34                 	db	52	;'4'
  1929  007DDB  3A                 	db	58	;':'
  1930  007DDC  25                 	db	37
  1931  007DDD  34                 	db	52	;'4'
  1932  007DDE  64                 	db	100	;'d'
  1933  007DDF  20                 	db	32
  1934  007DE0  7C                 	db	124
  1935  007DE1  20                 	db	32
  1936  007DE2  20                 	db	32
  1937  007DE3  50                 	db	80	;'P'
  1938  007DE4  38                 	db	56	;'8'
  1939  007DE5  3A                 	db	58	;':'
  1940  007DE6  25                 	db	37
  1941  007DE7  34                 	db	52	;'4'
  1942  007DE8  64                 	db	100	;'d'
  1943  007DE9  00                 	db	0
  1944  007DEA                     STR_33:
  1945  007DEA  41                 	db	65	;'A'
  1946  007DEB  54                 	db	84	;'T'
  1947  007DEC  2B                 	db	43
  1948  007DED  43                 	db	67	;'C'
  1949  007DEE  49                 	db	73	;'I'
  1950  007DEF  50                 	db	80	;'P'
  1951  007DF0  43                 	db	67	;'C'
  1952  007DF1  4C                 	db	76	;'L'
  1953  007DF2  4F                 	db	79	;'O'
  1954  007DF3  53                 	db	83	;'S'
  1955  007DF4  45                 	db	69	;'E'
  1956  007DF5  3D                 	db	61	;'='
  1957  007DF6  30                 	db	48	;'0'
  1958  007DF7  0D                 	db	13
  1959  007DF8  0A                 	db	10
  1960  007DF9  00                 	db	0
  1961  007DFA                     STR_50:
  1962  007DFA  41                 	db	65	;'A'
  1963  007DFB  54                 	db	84	;'T'
  1964  007DFC  2B                 	db	43
  1965  007DFD  43                 	db	67	;'C'
  1966  007DFE  49                 	db	73	;'I'
  1967  007DFF  50                 	db	80	;'P'
  1968  007E00  53                 	db	83	;'S'
  1969  007E01  54                 	db	84	;'T'
  1970  007E02  41                 	db	65	;'A'
  1971  007E03  54                 	db	84	;'T'
  1972  007E04  55                 	db	85	;'U'
  1973  007E05  53                 	db	83	;'S'
  1974  007E06  0D                 	db	13
  1975  007E07  0A                 	db	10
  1976  007E08  00                 	db	0
  1977  007E09                     STR_80:
  1978  007E09  55                 	db	85	;'U'
  1979  007E0A  4D                 	db	77	;'M'
  1980  007E0B  49                 	db	73	;'I'
  1981  007E0C  44                 	db	68	;'D'
  1982  007E0D  41                 	db	65	;'A'
  1983  007E0E  44                 	db	68	;'D'
  1984  007E0F  45                 	db	69	;'E'
  1985  007E10  3A                 	db	58	;':'
  1986  007E11  20                 	db	32
  1987  007E12  25                 	db	37
  1988  007E13  64                 	db	100	;'d'
  1989  007E14  20                 	db	32
  1990  007E15  25                 	db	37
  1991  007E16  63                 	db	99	;'c'
  1992  007E17  00                 	db	0
  1993  007E18                     STR_74:
  1994  007E18  7C                 	db	124
  1995  007E19  53                 	db	83	;'S'
  1996  007E1A  65                 	db	101	;'e'
  1997  007E1B  6E                 	db	110	;'n'
  1998  007E1C  73                 	db	115	;'s'
  1999  007E1D  6F                 	db	111	;'o'
  2000  007E1E  72                 	db	114	;'r'
  2001  007E1F  7C                 	db	124
  2002  007E20  41                 	db	65	;'A'
  2003  007E21  6A                 	db	106	;'j'
  2004  007E22  75                 	db	117	;'u'
  2005  007E23  73                 	db	115	;'s'
  2006  007E24  74                 	db	116	;'t'
  2007  007E25  65                 	db	101	;'e'
  2008  007E26  00                 	db	0
  2009  007E27                     STR_46:
  2010  007E27  41                 	db	65	;'A'
  2011  007E28  54                 	db	84	;'T'
  2012  007E29  2B                 	db	43
  2013  007E2A  43                 	db	67	;'C'
  2014  007E2B  49                 	db	73	;'I'
  2015  007E2C  50                 	db	80	;'P'
  2016  007E2D  4D                 	db	77	;'M'
  2017  007E2E  55                 	db	85	;'U'
  2018  007E2F  58                 	db	88	;'X'
  2019  007E30  3D                 	db	61	;'='
  2020  007E31  30                 	db	48	;'0'
  2021  007E32  0D                 	db	13
  2022  007E33  0A                 	db	10
  2023  007E34  00                 	db	0
  2024  007E35                     STR_44:
  2025  007E35  41                 	db	65	;'A'
  2026  007E36  54                 	db	84	;'T'
  2027  007E37  2B                 	db	43
  2028  007E38  43                 	db	67	;'C'
  2029  007E39  57                 	db	87	;'W'
  2030  007E3A  4D                 	db	77	;'M'
  2031  007E3B  4F                 	db	79	;'O'
  2032  007E3C  44                 	db	68	;'D'
  2033  007E3D  45                 	db	69	;'E'
  2034  007E3E  3D                 	db	61	;'='
  2035  007E3F  31                 	db	49	;'1'
  2036  007E40  0D                 	db	13
  2037  007E41  0A                 	db	10
  2038  007E42  00                 	db	0
  2039  007E43                     STR_14:
  2040  007E43  41                 	db	65	;'A'
  2041  007E44  54                 	db	84	;'T'
  2042  007E45  2B                 	db	43
  2043  007E46  43                 	db	67	;'C'
  2044  007E47  49                 	db	73	;'I'
  2045  007E48  50                 	db	80	;'P'
  2046  007E49  4D                 	db	77	;'M'
  2047  007E4A  55                 	db	85	;'U'
  2048  007E4B  58                 	db	88	;'X'
  2049  007E4C  3D                 	db	61	;'='
  2050  007E4D  31                 	db	49	;'1'
  2051  007E4E  0D                 	db	13
  2052  007E4F  0A                 	db	10
  2053  007E50  00                 	db	0
  2054  007E51                     STR_12:
  2055  007E51  41                 	db	65	;'A'
  2056  007E52  54                 	db	84	;'T'
  2057  007E53  2B                 	db	43
  2058  007E54  43                 	db	67	;'C'
  2059  007E55  57                 	db	87	;'W'
  2060  007E56  4D                 	db	77	;'M'
  2061  007E57  4F                 	db	79	;'O'
  2062  007E58  44                 	db	68	;'D'
  2063  007E59  45                 	db	69	;'E'
  2064  007E5A  3D                 	db	61	;'='
  2065  007E5B  32                 	db	50	;'2'
  2066  007E5C  0D                 	db	13
  2067  007E5D  0A                 	db	10
  2068  007E5E  00                 	db	0
  2069  007E5F                     STR_62:
  2070  007E5F  41                 	db	65	;'A'
  2071  007E60  54                 	db	84	;'T'
  2072  007E61  2B                 	db	43
  2073  007E62  43                 	db	67	;'C'
  2074  007E63  49                 	db	73	;'I'
  2075  007E64  50                 	db	80	;'P'
  2076  007E65  43                 	db	67	;'C'
  2077  007E66  4C                 	db	76	;'L'
  2078  007E67  4F                 	db	79	;'O'
  2079  007E68  53                 	db	83	;'S'
  2080  007E69  45                 	db	69	;'E'
  2081  007E6A  0D                 	db	13
  2082  007E6B  0A                 	db	10
  2083  007E6C  00                 	db	0
  2084  007E6D                     STR_43:
  2085  007E6D  4F                 	db	79	;'O'
  2086  007E6E  4B                 	db	75	;'K'
  2087  007E6F  2E                 	db	46
  2088  007E70  2E                 	db	46
  2089  007E71  2E                 	db	46
  2090  007E72  20                 	db	32
  2091  007E73  20                 	db	32
  2092  007E74  20                 	db	32
  2093  007E75  20                 	db	32
  2094  007E76  20                 	db	32
  2095  007E77  20                 	db	32
  2096  007E78  20                 	db	32
  2097  007E79  20                 	db	32
  2098  007E7A  00                 	db	0
  2099  007E7B                     STR_34:
  2100  007E7B  41                 	db	65	;'A'
  2101  007E7C  67                 	db	103	;'g'
  2102  007E7D  75                 	db	117	;'u'
  2103  007E7E  61                 	db	97	;'a'
  2104  007E7F  72                 	db	114	;'r'
  2105  007E80  64                 	db	100	;'d'
  2106  007E81  61                 	db	97	;'a'
  2107  007E82  6E                 	db	110	;'n'
  2108  007E83  64                 	db	100	;'d'
  2109  007E84  6F                 	db	111	;'o'
  2110  007E85  2E                 	db	46
  2111  007E86  2E                 	db	46
  2112  007E87  2E                 	db	46
  2113  007E88  00                 	db	0
  2114  007E89                     STR_25:
  2115  007E89  31                 	db	49	;'1'
  2116  007E8A  30                 	db	48	;'0'
  2117  007E8B  2E                 	db	46
  2118  007E8C  31                 	db	49	;'1'
  2119  007E8D  2E                 	db	46
  2120  007E8E  31                 	db	49	;'1'
  2121  007E8F  2E                 	db	46
  2122  007E90  31                 	db	49	;'1'
  2123  007E91  3A                 	db	58	;':'
  2124  007E92  38                 	db	56	;'8'
  2125  007E93  30                 	db	48	;'0'
  2126  007E94  38                 	db	56	;'8'
  2127  007E95  30                 	db	48	;'0'
  2128  007E96  00                 	db	0
  2129  007E97                     STR_70:
  2130  007E97  56                 	db	86	;'V'
  2131  007E98  65                 	db	101	;'e'
  2132  007E99  72                 	db	114	;'r'
  2133  007E9A  73                 	db	115	;'s'
  2134  007E9B  61                 	db	97	;'a'
  2135  007E9C  6F                 	db	111	;'o'
  2136  007E9D  20                 	db	32
  2137  007E9E  53                 	db	83	;'S'
  2138  007E9F  6F                 	db	111	;'o'
  2139  007EA0  66                 	db	102	;'f'
  2140  007EA1  74                 	db	116	;'t'
  2141  007EA2  2E                 	db	46
  2142  007EA3  3A                 	db	58	;':'
  2143  007EA4  00                 	db	0
  2144  007EA5                     STR_58:
  2145  007EA5  4F                 	db	79	;'O'
  2146  007EA6  63                 	db	99	;'c'
  2147  007EA7  74                 	db	116	;'t'
  2148  007EA8  20                 	db	32
  2149  007EA9  32                 	db	50	;'2'
  2150  007EAA  32                 	db	50	;'2'
  2151  007EAB  20                 	db	32
  2152  007EAC  32                 	db	50	;'2'
  2153  007EAD  30                 	db	48	;'0'
  2154  007EAE  31                 	db	49	;'1'
  2155  007EAF  39                 	db	57	;'9'
  2156  007EB0  00                 	db	0
  2157  007EB1                     STR_73:
  2158  007EB1  45                 	db	69	;'E'
  2159  007EB2  52                 	db	82	;'R'
  2160  007EB3  52                 	db	82	;'R'
  2161  007EB4  4F                 	db	79	;'O'
  2162  007EB5  20                 	db	32
  2163  007EB6  45                 	db	69	;'E'
  2164  007EB7  45                 	db	69	;'E'
  2165  007EB8  50                 	db	80	;'P'
  2166  007EB9  52                 	db	82	;'R'
  2167  007EBA  4F                 	db	79	;'O'
  2168  007EBB  4D                 	db	77	;'M'
  2169  007EBC  00                 	db	0
  2170  007EBD                     STR_2:
  2171  007EBD  4D                 	db	77	;'M'
  2172  007EBE  75                 	db	117	;'u'
  2173  007EBF  72                 	db	114	;'r'
  2174  007EC0  63                 	db	99	;'c'
  2175  007EC1  68                 	db	104	;'h'
  2176  007EC2  61                 	db	97	;'a'
  2177  007EC3  6D                 	db	109	;'m'
  2178  007EC4  65                 	db	101	;'e'
  2179  007EC5  6E                 	db	110	;'n'
  2180  007EC6  74                 	db	116	;'t'
  2181  007EC7  6F                 	db	111	;'o'
  2182  007EC8  00                 	db	0
  2183  007EC9                     STR_65:
  2184  007EC9  41                 	db	65	;'A'
  2185  007ECA  54                 	db	84	;'T'
  2186  007ECB  2B                 	db	43
  2187  007ECC  43                 	db	67	;'C'
  2188  007ECD  49                 	db	73	;'I'
  2189  007ECE  46                 	db	70	;'F'
  2190  007ECF  53                 	db	83	;'S'
  2191  007ED0  52                 	db	82	;'R'
  2192  007ED1  0D                 	db	13
  2193  007ED2  0A                 	db	10
  2194  007ED3  00                 	db	0
  2195  007ED4                     STR_3:
  2196  007ED4  53                 	db	83	;'S'
  2197  007ED5  65                 	db	101	;'e'
  2198  007ED6  63                 	db	99	;'c'
  2199  007ED7  2E                 	db	46
  2200  007ED8  20                 	db	32
  2201  007ED9  46                 	db	70	;'F'
  2202  007EDA  6F                 	db	111	;'o'
  2203  007EDB  6C                 	db	108	;'l'
  2204  007EDC  68                 	db	104	;'h'
  2205  007EDD  61                 	db	97	;'a'
  2206  007EDE  00                 	db	0
  2207  007EDF                     STR_1:
  2208  007EDF  41                 	db	65	;'A'
  2209  007EE0  6D                 	db	109	;'m'
  2210  007EE1  61                 	db	97	;'a'
  2211  007EE2  72                 	db	114	;'r'
  2212  007EE3  65                 	db	101	;'e'
  2213  007EE4  6C                 	db	108	;'l'
  2214  007EE5  61                 	db	97	;'a'
  2215  007EE6  63                 	db	99	;'c'
  2216  007EE7  61                 	db	97	;'a'
  2217  007EE8  6F                 	db	111	;'o'
  2218  007EE9  00                 	db	0
  2219  007EEA                     STR_85:
  2220  007EEA  41                 	db	65	;'A'
  2221  007EEB  75                 	db	117	;'u'
  2222  007EEC  74                 	db	116	;'t'
  2223  007EED  6F                 	db	111	;'o'
  2224  007EEE  6D                 	db	109	;'m'
  2225  007EEF  61                 	db	97	;'a'
  2226  007EF0  74                 	db	116	;'t'
  2227  007EF1  69                 	db	105	;'i'
  2228  007EF2  63                 	db	99	;'c'
  2229  007EF3  6F                 	db	111	;'o'
  2230  007EF4  00                 	db	0
  2231  007EF5                     STR_88:
  2232  007EF5  44                 	db	68	;'D'
  2233  007EF6  65                 	db	101	;'e'
  2234  007EF7  73                 	db	115	;'s'
  2235  007EF8  74                 	db	116	;'t'
  2236  007EF9  72                 	db	114	;'r'
  2237  007EFA  61                 	db	97	;'a'
  2238  007EFB  76                 	db	118	;'v'
  2239  007EFC  61                 	db	97	;'a'
  2240  007EFD  64                 	db	100	;'d'
  2241  007EFE  6F                 	db	111	;'o'
  2242  007EFF  00                 	db	0
  2243  007F00                     STR_89:
  2244  007F00  41                 	db	65	;'A'
  2245  007F01  4C                 	db	76	;'L'
  2246  007F02  41                 	db	65	;'A'
  2247  007F03  52                 	db	82	;'R'
  2248  007F04  4D                 	db	77	;'M'
  2249  007F05  45                 	db	69	;'E'
  2250  007F06  3A                 	db	58	;':'
  2251  007F07  20                 	db	32
  2252  007F08  25                 	db	37
  2253  007F09  73                 	db	115	;'s'
  2254  007F0A  00                 	db	0
  2255  007F0B                     STR_91:
  2256  007F0B  44                 	db	68	;'D'
  2257  007F0C  65                 	db	101	;'e'
  2258  007F0D  73                 	db	115	;'s'
  2259  007F0E  6C                 	db	108	;'l'
  2260  007F0F  69                 	db	105	;'i'
  2261  007F10  67                 	db	103	;'g'
  2262  007F11  61                 	db	97	;'a'
  2263  007F12  64                 	db	100	;'d'
  2264  007F13  6F                 	db	111	;'o'
  2265  007F14  00                 	db	0
  2266  007F15                     STR_4:
  2267  007F15  53                 	db	83	;'S'
  2268  007F16  65                 	db	101	;'e'
  2269  007F17  63                 	db	99	;'c'
  2270  007F18  2E                 	db	46
  2271  007F19  20                 	db	32
  2272  007F1A  54                 	db	84	;'T'
  2273  007F1B  61                 	db	97	;'a'
  2274  007F1C  6C                 	db	108	;'l'
  2275  007F1D  6F                 	db	111	;'o'
  2276  007F1E  00                 	db	0
  2277  007F1F                     STR_82:
  2278  007F1F  43                 	db	67	;'C'
  2279  007F20  4C                 	db	76	;'L'
  2280  007F21  49                 	db	73	;'I'
  2281  007F22  4D                 	db	77	;'M'
  2282  007F23  41                 	db	65	;'A'
  2283  007F24  3A                 	db	58	;':'
  2284  007F25  20                 	db	32
  2285  007F26  25                 	db	37
  2286  007F27  73                 	db	115	;'s'
  2287  007F28  00                 	db	0
  2288  007F29                     STR_86:
  2289  007F29  54                 	db	84	;'T'
  2290  007F2A  52                 	db	82	;'R'
  2291  007F2B  41                 	db	65	;'A'
  2292  007F2C  56                 	db	86	;'V'
  2293  007F2D  41                 	db	65	;'A'
  2294  007F2E  3A                 	db	58	;':'
  2295  007F2F  20                 	db	32
  2296  007F30  25                 	db	37
  2297  007F31  73                 	db	115	;'s'
  2298  007F32  00                 	db	0
  2299  007F33                     STR_77:
  2300  007F33  46                 	db	70	;'F'
  2301  007F34  61                 	db	97	;'a'
  2302  007F35  73                 	db	115	;'s'
  2303  007F36  65                 	db	101	;'e'
  2304  007F37  20                 	db	32
  2305  007F38  7E                 	db	126
  2306  007F39  20                 	db	32
  2307  007F3A  25                 	db	37
  2308  007F3B  73                 	db	115	;'s'
  2309  007F3C  00                 	db	0
  2310  007F3D                     STR_102:
  2311  007F3D  50                 	db	80	;'P'
  2312  007F3E  31                 	db	49	;'1'
  2313  007F3F  32                 	db	50	;'2'
  2314  007F40  3A                 	db	58	;':'
  2315  007F41  25                 	db	37
  2316  007F42  34                 	db	52	;'4'
  2317  007F43  64                 	db	100	;'d'
  2318  007F44  20                 	db	32
  2319  007F45  7C                 	db	124
  2320  007F46  00                 	db	0
  2321  007F47                     STR_68:
  2322  007F47  41                 	db	65	;'A'
  2323  007F48  54                 	db	84	;'T'
  2324  007F49  2B                 	db	43
  2325  007F4A  52                 	db	82	;'R'
  2326  007F4B  53                 	db	83	;'S'
  2327  007F4C  54                 	db	84	;'T'
  2328  007F4D  0D                 	db	13
  2329  007F4E  0A                 	db	10
  2330  007F4F  00                 	db	0
  2331  007F50                     STR_81:
  2332  007F50  46                 	db	70	;'F'
  2333  007F51  41                 	db	65	;'A'
  2334  007F52  53                 	db	83	;'S'
  2335  007F53  45                 	db	69	;'E'
  2336  007F54  3A                 	db	58	;':'
  2337  007F55  20                 	db	32
  2338  007F56  25                 	db	37
  2339  007F57  73                 	db	115	;'s'
  2340  007F58  00                 	db	0
  2341  007F59                     STR_83:
  2342  007F59  4D                 	db	77	;'M'
  2343  007F5A  4F                 	db	79	;'O'
  2344  007F5B  44                 	db	68	;'D'
  2345  007F5C  4F                 	db	79	;'O'
  2346  007F5D  3A                 	db	58	;':'
  2347  007F5E  20                 	db	32
  2348  007F5F  25                 	db	37
  2349  007F60  73                 	db	115	;'s'
  2350  007F61  00                 	db	0
  2351  007F62                     STR_104:
  2352  007F62  53                 	db	83	;'S'
  2353  007F63  45                 	db	69	;'E'
  2354  007F64  4E                 	db	78	;'N'
  2355  007F65  48                 	db	72	;'H'
  2356  007F66  41                 	db	65	;'A'
  2357  007F67  3A                 	db	58	;':'
  2358  007F68  25                 	db	37
  2359  007F69  73                 	db	115	;'s'
  2360  007F6A  00                 	db	0
  2361  007F6B                     STR_28:
  2362  007F6B  43                 	db	67	;'C'
  2363  007F6C  4F                 	db	79	;'O'
  2364  007F6D  4E                 	db	78	;'N'
  2365  007F6E  4E                 	db	78	;'N'
  2366  007F6F  45                 	db	69	;'E'
  2367  007F70  43                 	db	67	;'C'
  2368  007F71  54                 	db	84	;'T'
  2369  007F72  00                 	db	0
  2370  007F73                     STR_87:
  2371  007F73  54                 	db	84	;'T'
  2372  007F74  72                 	db	114	;'r'
  2373  007F75  61                 	db	97	;'a'
  2374  007F76  76                 	db	118	;'v'
  2375  007F77  61                 	db	97	;'a'
  2376  007F78  64                 	db	100	;'d'
  2377  007F79  6F                 	db	111	;'o'
  2378  007F7A  00                 	db	0
  2379  007F7B                     STR_103:
  2380  007F7B  52                 	db	82	;'R'
  2381  007F7C  45                 	db	69	;'E'
  2382  007F7D  44                 	db	68	;'D'
  2383  007F7E  45                 	db	69	;'E'
  2384  007F7F  3A                 	db	58	;':'
  2385  007F80  25                 	db	37
  2386  007F81  73                 	db	115	;'s'
  2387  007F82  00                 	db	0
  2388  007F83                     STR_112:
  2389  007F83  28                 	db	40
  2390  007F84  6E                 	db	110	;'n'
  2391  007F85  75                 	db	117	;'u'
  2392  007F86  6C                 	db	108	;'l'
  2393  007F87  6C                 	db	108	;'l'
  2394  007F88  29                 	db	41
  2395  007F89  00                 	db	0
  2396  007F8A                     STR_39:
  2397  007F8A  73                 	db	115	;'s'
  2398  007F8B  65                 	db	101	;'e'
  2399  007F8C  6E                 	db	110	;'n'
  2400  007F8D  68                 	db	104	;'h'
  2401  007F8E  61                 	db	97	;'a'
  2402  007F8F  3D                 	db	61	;'='
  2403  007F90  00                 	db	0
  2404  007F91                     STR_64:
  2405  007F91  43                 	db	67	;'C'
  2406  007F92  4C                 	db	76	;'L'
  2407  007F93  4F                 	db	79	;'O'
  2408  007F94  53                 	db	83	;'S'
  2409  007F95  45                 	db	69	;'E'
  2410  007F96  44                 	db	68	;'D'
  2411  007F97  00                 	db	0
  2412  007F98                     STR_7:
  2413  007F98  4E                 	db	78	;'N'
  2414  007F99  6F                 	db	111	;'o'
  2415  007F9A  72                 	db	114	;'r'
  2416  007F9B  6D                 	db	109	;'m'
  2417  007F9C  61                 	db	97	;'a'
  2418  007F9D  6C                 	db	108	;'l'
  2419  007F9E  00                 	db	0
  2420  007F9F                     STR_84:
  2421  007F9F  4D                 	db	77	;'M'
  2422  007FA0  61                 	db	97	;'a'
  2423  007FA1  6E                 	db	110	;'n'
  2424  007FA2  75                 	db	117	;'u'
  2425  007FA3  61                 	db	97	;'a'
  2426  007FA4  6C                 	db	108	;'l'
  2427  007FA5  00                 	db	0
  2428  007FA6                     STR_90:
  2429  007FA6  4C                 	db	76	;'L'
  2430  007FA7  69                 	db	105	;'i'
  2431  007FA8  67                 	db	103	;'g'
  2432  007FA9  61                 	db	97	;'a'
  2433  007FAA  64                 	db	100	;'d'
  2434  007FAB  6F                 	db	111	;'o'
  2435  007FAC  00                 	db	0
  2436  007FAD                     STR_36:
  2437  007FAD  66                 	db	102	;'f'
  2438  007FAE  69                 	db	105	;'i'
  2439  007FAF  6D                 	db	109	;'m'
  2440  007FB0  73                 	db	115	;'s'
  2441  007FB1  74                 	db	116	;'t'
  2442  007FB2  72                 	db	114	;'r'
  2443  007FB3  00                 	db	0
  2444  007FB4                     STR_105:
  2445  007FB4  4E                 	db	78	;'N'
  2446  007FB5  53                 	db	83	;'S'
  2447  007FB6  3A                 	db	58	;':'
  2448  007FB7  20                 	db	32
  2449  007FB8  25                 	db	37
  2450  007FB9  73                 	db	115	;'s'
  2451  007FBA  00                 	db	0
  2452  007FBB                     STR_27:
  2453  007FBB  41                 	db	65	;'A'
  2454  007FBC  63                 	db	99	;'c'
  2455  007FBD  63                 	db	99	;'c'
  2456  007FBE  65                 	db	101	;'e'
  2457  007FBF  70                 	db	112	;'p'
  2458  007FC0  74                 	db	116	;'t'
  2459  007FC1  00                 	db	0
  2460  007FC2                     STR_37:
  2461  007FC2  73                 	db	115	;'s'
  2462  007FC3  73                 	db	115	;'s'
  2463  007FC4  69                 	db	105	;'i'
  2464  007FC5  64                 	db	100	;'d'
  2465  007FC6  3D                 	db	61	;'='
  2466  007FC7  00                 	db	0
  2467  007FC8                     STR_6:
  2468  007FC8  55                 	db	85	;'U'
  2469  007FC9  6D                 	db	109	;'m'
  2470  007FCA  69                 	db	105	;'i'
  2471  007FCB  64                 	db	100	;'d'
  2472  007FCC  6F                 	db	111	;'o'
  2473  007FCD  00                 	db	0
  2474  007FCE                     STR_26:
  2475  007FCE  2B                 	db	43
  2476  007FCF  49                 	db	73	;'I'
  2477  007FD0  50                 	db	80	;'P'
  2478  007FD1  44                 	db	68	;'D'
  2479  007FD2  00                 	db	0
  2480  007FD3                     STR_35:
  2481  007FD3  73                 	db	115	;'s'
  2482  007FD4  73                 	db	115	;'s'
  2483  007FD5  69                 	db	105	;'i'
  2484  007FD6  64                 	db	100	;'d'
  2485  007FD7  00                 	db	0
  2486  007FD8                     STR_61:
  2487  007FD8  73                 	db	115	;'s'
  2488  007FD9  61                 	db	97	;'a'
  2489  007FDA  76                 	db	118	;'v'
  2490  007FDB  65                 	db	101	;'e'
  2491  007FDC  00                 	db	0
  2492  007FDD                     STR_48:
  2493  007FDD  6C                 	db	108	;'l'
  2494  007FDE  69                 	db	105	;'i'
  2495  007FDF  6E                 	db	110	;'n'
  2496  007FE0  6B                 	db	107	;'k'
  2497  007FE1  00                 	db	0
  2498  007FE2                     STR_8:
  2499  007FE2  53                 	db	83	;'S'
  2500  007FE3  65                 	db	101	;'e'
  2501  007FE4  63                 	db	99	;'c'
  2502  007FE5  6F                 	db	111	;'o'
  2503  007FE6  00                 	db	0
  2504  007FE7                     STR_5:
  2505  007FE7  2D                 	db	45
  2506  007FE8  20                 	db	32
  2507  007FE9  2D                 	db	45
  2508  007FEA  00                 	db	0
  2509  007FEB                     STR_60:
  2510  007FEB  32                 	db	50	;'2'
  2511  007FEC  30                 	db	48	;'0'
  2512  007FED  30                 	db	48	;'0'
  2513  007FEE  00                 	db	0
  2514  007FEF                     STR_66:
  2515  007FEF  4D                 	db	77	;'M'
  2516  007FF0  41                 	db	65	;'A'
  2517  007FF1  43                 	db	67	;'C'
  2518  007FF2  00                 	db	0
  2519  007FF3                     STR_9:
  2520  007FF3  2D                 	db	45
  2521  007FF4  2D                 	db	45
  2522  007FF5  00                 	db	0
  2523  007FF6                     STR_13:
  2524  007FF6  4F                 	db	79	;'O'
  2525  007FF7  4B                 	db	75	;'K'
  2526  007FF8  00                 	db	0
  2527  007FF9                     STR_38:
  2528  007FF9  26                 	db	38
  2529  007FFA  00                 	db	0
  2530  007FFB                     STR_51:
  2531  007FFB  32                 	db	50	;'2'
  2532  007FFC  00                 	db	0
  2533  007FFD                     STR_52:
  2534  007FFD  34                 	db	52	;'4'
  2535  007FFE  00                 	db	0
  2536  0000                     
  2537                           ; #config settings
  2538  007FFF  00                 	db	0	; dummy byte at the end
  2539  0000                     
  2540                           	psect	cinit
  2541  005372                     __pcinit:
  2542                           	opt stack 0
  2543  005372                     start_initialization:
  2544                           	opt stack 0
  2545  005372                     __initialization:
  2546                           	opt stack 0
  2547                           
  2548                           ; Initialize objects allocated to BANK2 (24 bytes)
  2549                           ; load TBLPTR registers with __pidataBANK2
  2550  005372  0E8A               	movlw	low __pidataBANK2
  2551  005374  6EF6               	movwf	tblptrl,c
  2552  005376  0E5E               	movlw	high __pidataBANK2
  2553  005378  6EF7               	movwf	tblptrh,c
  2554  00537A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2555  00537C  6EF8               	movwf	tblptru,c
  2556  00537E  EE02  F0B0         	lfsr	0,__pdataBANK2
  2557  005382  EE10 F018          	lfsr	1,24
  2558  005386                     copy_data0:
  2559  005386  0009               	tblrd		*+
  2560  005388  CFF5 FFEE          	movff	tablat,postinc0
  2561  00538C  50E5               	movf	postdec1,w,c
  2562  00538E  50E1               	movf	fsr1l,w,c
  2563  005390  E1FA               	bnz	copy_data0
  2564                           
  2565                           ; Initialize objects allocated to BANK0 (5 bytes)
  2566                           ; load TBLPTR registers with __pidataBANK0
  2567  005392  0E20               	movlw	low __pidataBANK0
  2568  005394  6EF6               	movwf	tblptrl,c
  2569  005396  0E5F               	movlw	high __pidataBANK0
  2570  005398  6EF7               	movwf	tblptrh,c
  2571  00539A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2572  00539C  6EF8               	movwf	tblptru,c
  2573  00539E  EE00  F0FB         	lfsr	0,__pdataBANK0
  2574  0053A2  EE10 F005          	lfsr	1,5
  2575  0053A6                     copy_data1:
  2576  0053A6  0009               	tblrd		*+
  2577  0053A8  CFF5 FFEE          	movff	tablat,postinc0
  2578  0053AC  50E5               	movf	postdec1,w,c
  2579  0053AE  50E1               	movf	fsr1l,w,c
  2580  0053B0  E1FA               	bnz	copy_data1
  2581                           
  2582                           ; Initialize objects allocated to COMRAM (1 bytes)
  2583                           ; load TBLPTR registers with __pidataCOMRAM
  2584  0053B2  0E25               	movlw	low __pidataCOMRAM
  2585  0053B4  6EF6               	movwf	tblptrl,c
  2586  0053B6  0E5F               	movlw	high __pidataCOMRAM
  2587  0053B8  6EF7               	movwf	tblptrh,c
  2588  0053BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2589  0053BC  6EF8               	movwf	tblptru,c
  2590  0053BE  0009               	tblrd		*+	;fetch initializer
  2591  0053C0  CFF5 F050          	movff	tablat,__pdataCOMRAM
  2592                           
  2593                           ; Clear objects allocated to BANK2 (176 bytes)
  2594  0053C4  EE02  F000         	lfsr	0,__pbssBANK2
  2595  0053C8  0EB0               	movlw	176
  2596  0053CA                     clear_0:
  2597  0053CA  6AEE               	clrf	postinc0,c
  2598  0053CC  06E8               	decf	wreg,f,c
  2599  0053CE  E1FD               	bnz	clear_0
  2600                           
  2601                           ; Clear objects allocated to BANK1 (95 bytes)
  2602  0053D0  EE01  F096         	lfsr	0,__pbssBANK1
  2603  0053D4  0E5F               	movlw	95
  2604  0053D6                     clear_1:
  2605  0053D6  6AEE               	clrf	postinc0,c
  2606  0053D8  06E8               	decf	wreg,f,c
  2607  0053DA  E1FD               	bnz	clear_1
  2608                           
  2609                           ; Clear objects allocated to BANK0 (18 bytes)
  2610  0053DC  EE00  F0E9         	lfsr	0,__pbssBANK0
  2611  0053E0  0E12               	movlw	18
  2612  0053E2                     clear_2:
  2613  0053E2  6AEE               	clrf	postinc0,c
  2614  0053E4  06E8               	decf	wreg,f,c
  2615  0053E6  E1FD               	bnz	clear_2
  2616                           
  2617                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2618  0053E8  6A4F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2619                           
  2620                           ; Clear objects allocated to COMRAM (30 bytes)
  2621  0053EA  EE00  F031         	lfsr	0,__pbssCOMRAM
  2622  0053EE  0E1E               	movlw	30
  2623  0053F0                     clear_3:
  2624  0053F0  6AEE               	clrf	postinc0,c
  2625  0053F2  06E8               	decf	wreg,f,c
  2626  0053F4  E1FD               	bnz	clear_3
  2627  0053F6                     end_of_initialization:
  2628                           	opt stack 0
  2629  0053F6                     __end_of__initialization:
  2630                           	opt stack 0
  2631  0053F6  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2632  0053F8  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2633  0053FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2634  0053FC  6EF8               	movwf	tblptru,c
  2635  0053FE  0100               	movlb	0
  2636  005400  EF09  F000         	goto	_main	;jump to C main() function
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           postdec1	equ	0xFE5
  2644                           fsr1l	equ	0xFE1
  2645                           
  2646                           	psect	bitbssCOMRAM
  2647  000278                     __pbitbssCOMRAM:
  2648                           	opt stack 0
  2649  000278                     _contador_fase_automatica:
  2650                           	opt stack 0
  2651  000278                     	ds	1
  2652  000279                     _md_seguranca:
  2653                           	opt stack 0
  2654  000279                     	ds	1
  2655  00027A                     _blinkk:
  2656                           	opt stack 0
  2657  00027A                     	ds	1
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postdec1	equ	0xFE5
  2665                           fsr1l	equ	0xFE1
  2666                           
  2667                           	psect	bssCOMRAM
  2668  000031                     __pbssCOMRAM:
  2669                           	opt stack 0
  2670  000031                     strtok@sp:
  2671                           	opt stack 0
  2672  000031                     	ds	2
  2673  000033                     _t_controle_modo_seguranca:
  2674                           	opt stack 0
  2675  000033                     	ds	2
  2676  000035                     _t_controle_religar_ventoinha:
  2677                           	opt stack 0
  2678  000035                     	ds	2
  2679  000037                     _t_controle_religar_buzzer:
  2680                           	opt stack 0
  2681  000037                     	ds	2
  2682  000039                     _t_controle_flap:
  2683                           	opt stack 0
  2684  000039                     	ds	2
  2685  00003B                     _media_adc:
  2686                           	opt stack 0
  2687  00003B                     	ds	1
  2688  00003C                     _t_leitura_adc:
  2689                           	opt stack 0
  2690  00003C                     	ds	1
  2691  00003D                     _t_controle_temp_automatica:
  2692                           	opt stack 0
  2693  00003D                     	ds	1
  2694  00003E                     _t_controle_blink:
  2695                           	opt stack 0
  2696  00003E                     	ds	1
  2697  00003F                     _t_controle_buzzer:
  2698                           	opt stack 0
  2699  00003F                     	ds	1
  2700  000040                     _t_controle_fim_fases:
  2701                           	opt stack 0
  2702  000040                     	ds	1
  2703  000041                     _f_buzzer_falta_energia:
  2704                           	opt stack 0
  2705  000041                     	ds	1
  2706  000042                     __acao_flap:
  2707                           	opt stack 0
  2708  000042                     	ds	1
  2709  000043                     _cbf:
  2710                           	opt stack 0
  2711  000043                     	ds	1
  2712  000044                     _bt_flag:
  2713                           	opt stack 0
  2714  000044                     	ds	1
  2715  000045                     _leds:
  2716                           	opt stack 0
  2717  000045                     	ds	1
  2718  000046                     _hor:
  2719                           	opt stack 0
  2720  000046                     	ds	1
  2721  000047                     _min:
  2722                           	opt stack 0
  2723  000047                     	ds	1
  2724  000048                     _sec:
  2725                           	opt stack 0
  2726  000048                     	ds	1
  2727  000049                     __sec:
  2728                           	opt stack 0
  2729  000049                     	ds	1
  2730  00004A                     _base_sec:
  2731                           	opt stack 0
  2732  00004A                     	ds	1
  2733  00004B                     _lcd_rfsh:
  2734                           	opt stack 0
  2735  00004B                     	ds	1
  2736  00004C                     _t_fim_fase3:
  2737                           	opt stack 0
  2738  00004C                     	ds	1
  2739  00004D                     _t_fim_fase2:
  2740                           	opt stack 0
  2741  00004D                     	ds	1
  2742  00004E                     _t_fim_fase1:
  2743                           	opt stack 0
  2744  00004E                     	ds	1
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           postdec1	equ	0xFE5
  2752                           fsr1l	equ	0xFE1
  2753                           
  2754                           	psect	dataCOMRAM
  2755  000050                     __pdataCOMRAM:
  2756                           	opt stack 0
  2757  000050                     __led:
  2758                           	opt stack 0
  2759  000050                     	ds	1
  2760                           tblptru	equ	0xFF8
  2761                           tblptrh	equ	0xFF7
  2762                           tblptrl	equ	0xFF6
  2763                           tablat	equ	0xFF5
  2764                           postinc0	equ	0xFEE
  2765                           wreg	equ	0xFE8
  2766                           postdec1	equ	0xFE5
  2767                           fsr1l	equ	0xFE1
  2768                           
  2769                           	psect	bssBANK0
  2770  0000E9                     __pbssBANK0:
  2771                           	opt stack 0
  2772  0000E9                     _umidajt:
  2773                           	opt stack 0
  2774  0000E9                     	ds	1
  2775  0000EA                     _tempajt:
  2776                           	opt stack 0
  2777  0000EA                     	ds	1
  2778  0000EB                     _clima:
  2779                           	opt stack 0
  2780  0000EB                     	ds	1
  2781  0000EC                     _fase:
  2782                           	opt stack 0
  2783  0000EC                     	ds	1
  2784  0000ED                     _h_subir_temp_automatica:
  2785                           	opt stack 0
  2786  0000ED                     	ds	1
  2787  0000EE                     _h_buzzer:
  2788                           	opt stack 0
  2789  0000EE                     	ds	1
  2790  0000EF                     _h_abafador:
  2791                           	opt stack 0
  2792  0000EF                     	ds	1
  2793  0000F0                     _h_venotinha:
  2794                           	opt stack 0
  2795  0000F0                     	ds	1
  2796  0000F1                     _h_modo_seguranca:
  2797                           	opt stack 0
  2798  0000F1                     	ds	1
  2799  0000F2                     _t_religar_ventoinha_automatica:
  2800                           	opt stack 0
  2801  0000F2                     	ds	1
  2802  0000F3                     _t_temp_automatica:
  2803                           	opt stack 0
  2804  0000F3                     	ds	1
  2805  0000F4                     _t_flap_intervalo:
  2806                           	opt stack 0
  2807  0000F4                     	ds	1
  2808  0000F5                     _t_flap_ligado:
  2809                           	opt stack 0
  2810  0000F5                     	ds	1
  2811  0000F6                     _tipo_modo_trabalho:
  2812                           	opt stack 0
  2813  0000F6                     	ds	1
  2814  0000F7                     _tipo_sensor_umidade:
  2815                           	opt stack 0
  2816  0000F7                     	ds	1
  2817  0000F8                     _trava_fase:
  2818                           	opt stack 0
  2819  0000F8                     	ds	1
  2820  0000F9                     _fornalha:
  2821                           	opt stack 0
  2822  0000F9                     	ds	1
  2823  0000FA                     _buzzer:
  2824                           	opt stack 0
  2825  0000FA                     	ds	1
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           postdec1	equ	0xFE5
  2833                           fsr1l	equ	0xFE1
  2834                           
  2835                           	psect	dataBANK0
  2836  0000FB                     __pdataBANK0:
  2837                           	opt stack 0
  2838  0000FB                     _menu:
  2839                           	opt stack 0
  2840  0000FB                     	ds	1
  2841  0000FC                     _umid:
  2842                           	opt stack 0
  2843  0000FC                     	ds	1
  2844  0000FD                     _temp:
  2845                           	opt stack 0
  2846  0000FD                     	ds	1
  2847  0000FE                     _f_falta_energia:
  2848                           	opt stack 0
  2849  0000FE                     	ds	1
  2850  0000FF                     _t_buzzer_religar:
  2851                           	opt stack 0
  2852  0000FF                     	ds	1
  2853                           tblptru	equ	0xFF8
  2854                           tblptrh	equ	0xFF7
  2855                           tblptrl	equ	0xFF6
  2856                           tablat	equ	0xFF5
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postdec1	equ	0xFE5
  2860                           fsr1l	equ	0xFE1
  2861                           
  2862                           	psect	bssBANK1
  2863  000196                     __pbssBANK1:
  2864                           	opt stack 0
  2865  000196                     _f_wifi_processo:
  2866                           	opt stack 0
  2867  000196                     	ds	1
  2868  000197                     _t_wifi_restart:
  2869                           	opt stack 0
  2870  000197                     	ds	1
  2871  000198                     _ajuste_parametro:
  2872                           	opt stack 0
  2873  000198                     	ds	1
  2874  000199                     _opcaomenu:
  2875                           	opt stack 0
  2876  000199                     	ds	1
  2877  00019A                     _wifi_conectado:
  2878                           	opt stack 0
  2879  00019A                     	ds	1
  2880  00019B                     _line4:
  2881                           	opt stack 0
  2882  00019B                     	ds	21
  2883  0001B0                     _line3:
  2884                           	opt stack 0
  2885  0001B0                     	ds	21
  2886  0001C5                     _line2:
  2887                           	opt stack 0
  2888  0001C5                     	ds	21
  2889  0001DA                     _line1:
  2890                           	opt stack 0
  2891  0001DA                     	ds	21
  2892  0001EF                     _wifi_SENHA:
  2893                           	opt stack 0
  2894  0001EF                     	ds	2
  2895  0001F1                     _wifi_habilita_alteracao:
  2896                           	opt stack 0
  2897  0001F1                     	ds	2
  2898  0001F3                     _senha_desbloqueio_func:
  2899                           	opt stack 0
  2900  0001F3                     	ds	1
  2901  0001F4                     _h_flap:
  2902                           	opt stack 0
  2903  0001F4                     	ds	1
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           postdec1	equ	0xFE5
  2911                           fsr1l	equ	0xFE1
  2912                           
  2913                           	psect	bssBANK2
  2914  000200                     __pbssBANK2:
  2915                           	opt stack 0
  2916  000200                     __umid:
  2917                           	opt stack 0
  2918  000200                     	ds	33
  2919  000221                     __temp:
  2920                           	opt stack 0
  2921  000221                     	ds	33
  2922  000242                     _bufferSerial:
  2923                           	opt stack 0
  2924  000242                     	ds	80
  2925  000292                     _senha:
  2926                           	opt stack 0
  2927  000292                     	ds	15
  2928  0002A1                     _ssid:
  2929                           	opt stack 0
  2930  0002A1                     	ds	15
  2931                           tblptru	equ	0xFF8
  2932                           tblptrh	equ	0xFF7
  2933                           tblptrl	equ	0xFF6
  2934                           tablat	equ	0xFF5
  2935                           postinc0	equ	0xFEE
  2936                           wreg	equ	0xFE8
  2937                           postdec1	equ	0xFE5
  2938                           fsr1l	equ	0xFE1
  2939                           
  2940                           	psect	dataBANK2
  2941  0002B0                     __pdataBANK2:
  2942                           	opt stack 0
  2943  0002B0                     _wifi_MAC:
  2944                           	opt stack 0
  2945  0002B0                     	ds	24
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           postdec1	equ	0xFE5
  2953                           fsr1l	equ	0xFE1
  2954                           
  2955                           	psect	cstackBANK1
  2956  000100                     __pcstackBANK1:
  2957                           	opt stack 0
  2958  000100                     filtroStr@_str:
  2959                           	opt stack 0
  2960                           
  2961                           ; 82 bytes @ 0x0
  2962  000100                     	ds	82
  2963  000152                     filtroStr@aux:
  2964                           	opt stack 0
  2965                           
  2966                           ; 60 bytes @ 0x52
  2967  000152                     	ds	60
  2968  00018E                     _filtroStr$1335:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x8E
  2972  00018E                     	ds	2
  2973  000190                     filtroStr@y:
  2974                           	opt stack 0
  2975                           
  2976                           ; 1 bytes @ 0x90
  2977  000190                     	ds	1
  2978  000191                     filtroStr@count:
  2979                           	opt stack 0
  2980                           
  2981                           ; 1 bytes @ 0x91
  2982  000191                     	ds	1
  2983  000192                     filtroStr@x:
  2984                           	opt stack 0
  2985                           
  2986                           ; 1 bytes @ 0x92
  2987  000192                     	ds	1
  2988  000193                     filtroStr@p:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x93
  2992  000193                     	ds	2
  2993  000195                     filtroStr@i:
  2994                           	opt stack 0
  2995                           
  2996                           ; 1 bytes @ 0x95
  2997  000195                     	ds	1
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           postdec1	equ	0xFE5
  3005                           fsr1l	equ	0xFE1
  3006                           
  3007                           	psect	cstackBANK0
  3008  000060                     __pcstackBANK0:
  3009                           	opt stack 0
  3010  000060                     ??_isdigit:
  3011  000060                     ??_I2C_Wait:
  3012  000060                     ?_strlen:
  3013                           	opt stack 0
  3014  000060                     ?_faseAtual:
  3015                           	opt stack 0
  3016  000060                     ?_climaAtual:
  3017                           	opt stack 0
  3018  000060                     ?_strchr:
  3019                           	opt stack 0
  3020  000060                     ?_tabelaUmidade:
  3021                           	opt stack 0
  3022  000060                     ?_readADC:
  3023                           	opt stack 0
  3024  000060                     ?___wmul:
  3025                           	opt stack 0
  3026  000060                     ?___lwdiv:
  3027                           	opt stack 0
  3028  000060                     ?___ftpack:
  3029                           	opt stack 0
  3030  000060                     ?___lldiv:
  3031                           	opt stack 0
  3032  000060                     setLed@acao:
  3033                           	opt stack 0
  3034  000060                     Lcd_Port@a:
  3035                           	opt stack 0
  3036  000060                     btPress@bt:
  3037                           	opt stack 0
  3038  000060                     putch@c:
  3039                           	opt stack 0
  3040  000060                     blink@line:
  3041                           	opt stack 0
  3042  000060                     tabelaUmidade@_tmp:
  3043                           	opt stack 0
  3044  000060                     faseAtual@_fase:
  3045                           	opt stack 0
  3046  000060                     delay@x:
  3047                           	opt stack 0
  3048  000060                     ___wmul@multiplier:
  3049                           	opt stack 0
  3050  000060                     ___lwdiv@dividend:
  3051                           	opt stack 0
  3052  000060                     memset@p1:
  3053                           	opt stack 0
  3054  000060                     strlen@s:
  3055                           	opt stack 0
  3056  000060                     strncpy@to:
  3057                           	opt stack 0
  3058  000060                     strchr@ptr:
  3059                           	opt stack 0
  3060  000060                     ___ftpack@arg:
  3061                           	opt stack 0
  3062  000060                     ___ftge@ff1:
  3063                           	opt stack 0
  3064  000060                     ___lldiv@dividend:
  3065                           	opt stack 0
  3066                           
  3067                           ; 4 bytes @ 0x0
  3068  000060                     	ds	1
  3069  000061                     ??_Lcd_Cmd:
  3070  000061                     ?_I2C_Read:
  3071                           	opt stack 0
  3072  000061                     setLed@led:
  3073                           	opt stack 0
  3074  000061                     Lcd_Write_Char@tempp:
  3075                           	opt stack 0
  3076  000061                     _isdigit$1991:
  3077                           	opt stack 0
  3078  000061                     I2C_Write@d:
  3079                           	opt stack 0
  3080  000061                     I2C_Read@a:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x1
  3084  000061                     	ds	1
  3085  000062                     ??_delay:
  3086  000062                     ??_strlen:
  3087  000062                     ??_readADC:
  3088  000062                     Lcd_Cmd@a:
  3089                           	opt stack 0
  3090  000062                     Lcd_Write_Char@y:
  3091                           	opt stack 0
  3092  000062                     blink@start:
  3093                           	opt stack 0
  3094  000062                     climaAtual@c:
  3095                           	opt stack 0
  3096  000062                     isdigit@c:
  3097                           	opt stack 0
  3098  000062                     tabelaUmidade@_clima:
  3099                           	opt stack 0
  3100  000062                     faseAtual@_tempajt:
  3101                           	opt stack 0
  3102  000062                     acaoFlap@tempo_ativado:
  3103                           	opt stack 0
  3104  000062                     ___wmul@multiplicand:
  3105                           	opt stack 0
  3106  000062                     ___lwdiv@divisor:
  3107                           	opt stack 0
  3108  000062                     memset@c:
  3109                           	opt stack 0
  3110  000062                     strncpy@from:
  3111                           	opt stack 0
  3112  000062                     strchr@chr:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x2
  3116  000062                     	ds	1
  3117  000063                     ??_Lcd_Init:
  3118  000063                     Lcd_Set_Cursor@b:
  3119                           	opt stack 0
  3120  000063                     Lcd_Write_Char@a:
  3121                           	opt stack 0
  3122  000063                     blink@end:
  3123                           	opt stack 0
  3124  000063                     writeEEPROM_ext@data:
  3125                           	opt stack 0
  3126  000063                     ___ftpack@exp:
  3127                           	opt stack 0
  3128  000063                     I2C_Read@temp:
  3129                           	opt stack 0
  3130  000063                     ___ftge@ff2:
  3131                           	opt stack 0
  3132                           
  3133                           ; 3 bytes @ 0x3
  3134  000063                     	ds	1
  3135  000064                     ??_strchr:
  3136  000064                     ??_criaCaracteresCGRAM:
  3137  000064                     Lcd_Set_Cursor@a:
  3138                           	opt stack 0
  3139  000064                     blink@i:
  3140                           	opt stack 0
  3141  000064                     tabelaUmidade@_tipo_sensor:
  3142                           	opt stack 0
  3143  000064                     writeEEPROM_ext@adress:
  3144                           	opt stack 0
  3145  000064                     faseAtual@_fasee:
  3146                           	opt stack 0
  3147  000064                     ___ftpack@sign:
  3148                           	opt stack 0
  3149  000064                     Lcd_Write_String@a:
  3150                           	opt stack 0
  3151  000064                     acaoFlap@tempo_aguardar:
  3152                           	opt stack 0
  3153  000064                     ___wmul@product:
  3154                           	opt stack 0
  3155  000064                     ___lwdiv@quotient:
  3156                           	opt stack 0
  3157  000064                     memset@n:
  3158                           	opt stack 0
  3159  000064                     strlen@cp:
  3160                           	opt stack 0
  3161  000064                     strncpy@size:
  3162                           	opt stack 0
  3163  000064                     ___lldiv@divisor:
  3164                           	opt stack 0
  3165                           
  3166                           ; 4 bytes @ 0x4
  3167  000064                     	ds	1
  3168  000065                     ??___ftpack:
  3169  000065                     ??_tabelaUmidade:
  3170  000065                     Lcd_Set_Cursor@z:
  3171                           	opt stack 0
  3172  000065                     readEEPROM_ext@adress:
  3173                           	opt stack 0
  3174  000065                     faseAtual@tp:
  3175                           	opt stack 0
  3176  000065                     setRangeValor@_var_ajt:
  3177                           	opt stack 0
  3178                           
  3179                           ; 2 bytes @ 0x5
  3180  000065                     	ds	1
  3181  000066                     ??_acaoFlap:
  3182  000066                     ??___ftge:
  3183  000066                     ?_strncmp:
  3184                           	opt stack 0
  3185  000066                     ?_strspn:
  3186                           	opt stack 0
  3187  000066                     ?_strcspn:
  3188                           	opt stack 0
  3189  000066                     Lcd_Set_Cursor@y:
  3190                           	opt stack 0
  3191  000066                     Lcd_Write_String@i:
  3192                           	opt stack 0
  3193  000066                     readEEPROM_ext@data:
  3194                           	opt stack 0
  3195  000066                     faseAtual@tmpajt:
  3196                           	opt stack 0
  3197  000066                     ___lwdiv@counter:
  3198                           	opt stack 0
  3199  000066                     readADC@digital:
  3200                           	opt stack 0
  3201  000066                     memset@p:
  3202                           	opt stack 0
  3203  000066                     strncpy@cp:
  3204                           	opt stack 0
  3205  000066                     strcspn@s1:
  3206                           	opt stack 0
  3207  000066                     strncmp@s1:
  3208                           	opt stack 0
  3209  000066                     strspn@s1:
  3210                           	opt stack 0
  3211                           
  3212                           ; 2 bytes @ 0x6
  3213  000066                     	ds	1
  3214  000067                     ?___lwmod:
  3215                           	opt stack 0
  3216  000067                     Lcd_Set_Cursor@temp:
  3217                           	opt stack 0
  3218  000067                     tabelaUmidade@_umd:
  3219                           	opt stack 0
  3220  000067                     setRangeValor@_min:
  3221                           	opt stack 0
  3222  000067                     acaoFlap@acao:
  3223                           	opt stack 0
  3224  000067                     ___lwmod@dividend:
  3225                           	opt stack 0
  3226  000067                     criaCaracteresCGRAM@character:
  3227                           	opt stack 0
  3228                           
  3229                           ; 56 bytes @ 0x7
  3230  000067                     	ds	1
  3231  000068                     ??_controle:
  3232  000068                     setRangeValor@_max:
  3233                           	opt stack 0
  3234  000068                     readADC@canal:
  3235                           	opt stack 0
  3236  000068                     atualizaLCD@line1:
  3237                           	opt stack 0
  3238  000068                     setUmidade@_umdajt:
  3239                           	opt stack 0
  3240  000068                     strcspn@s2:
  3241                           	opt stack 0
  3242  000068                     strncmp@s2:
  3243                           	opt stack 0
  3244  000068                     strspn@s2:
  3245                           	opt stack 0
  3246  000068                     ___lldiv@quotient:
  3247                           	opt stack 0
  3248                           
  3249                           ; 4 bytes @ 0x8
  3250  000068                     	ds	1
  3251  000069                     ?___lwtoft:
  3252                           	opt stack 0
  3253  000069                     setRangeValor@end_eeprom:
  3254                           	opt stack 0
  3255  000069                     ___lwmod@divisor:
  3256                           	opt stack 0
  3257  000069                     ___lwtoft@c:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x9
  3261  000069                     	ds	1
  3262  00006A                     ??_strspn:
  3263  00006A                     ??_strcspn:
  3264  00006A                     ??_setRangeValor:
  3265  00006A                     atualizaLCD@line2:
  3266                           	opt stack 0
  3267  00006A                     setUmidade@_tempajt:
  3268                           	opt stack 0
  3269  00006A                     strncmp@len:
  3270                           	opt stack 0
  3271                           
  3272                           ; 2 bytes @ 0xA
  3273  00006A                     	ds	1
  3274  00006B                     ___lwmod@counter:
  3275                           	opt stack 0
  3276  00006B                     strcspn@i:
  3277                           	opt stack 0
  3278  00006B                     strspn@i:
  3279                           	opt stack 0
  3280                           
  3281                           ; 2 bytes @ 0xB
  3282  00006B                     	ds	1
  3283  00006C                     ??_strncmp:
  3284  00006C                     ?__doprnt:
  3285                           	opt stack 0
  3286  00006C                     ?___ftmul:
  3287                           	opt stack 0
  3288  00006C                     ___lldiv@counter:
  3289                           	opt stack 0
  3290  00006C                     atualizaLCD@line3:
  3291                           	opt stack 0
  3292  00006C                     setUmidade@_clima:
  3293                           	opt stack 0
  3294  00006C                     __doprnt@pb:
  3295                           	opt stack 0
  3296  00006C                     ___ftmul@f1:
  3297                           	opt stack 0
  3298                           
  3299                           ; 3 bytes @ 0xC
  3300  00006C                     	ds	1
  3301  00006D                     ?_strtok:
  3302                           	opt stack 0
  3303  00006D                     setRangeValor@_acao:
  3304                           	opt stack 0
  3305  00006D                     strtok@s1:
  3306                           	opt stack 0
  3307  00006D                     I2C_Master_Init@c:
  3308                           	opt stack 0
  3309                           
  3310                           ; 4 bytes @ 0xD
  3311  00006D                     	ds	1
  3312  00006E                     setUmidade@tp:
  3313                           	opt stack 0
  3314  00006E                     atualizaLCD@line4:
  3315                           	opt stack 0
  3316  00006E                     setRangeValor@_aux:
  3317                           	opt stack 0
  3318  00006E                     __doprnt@f:
  3319                           	opt stack 0
  3320                           
  3321                           ; 2 bytes @ 0xE
  3322  00006E                     	ds	1
  3323  00006F                     ?_strstr:
  3324                           	opt stack 0
  3325  00006F                     _setUmidade$1297:
  3326                           	opt stack 0
  3327  00006F                     strstr@s1:
  3328                           	opt stack 0
  3329  00006F                     strtok@s2:
  3330                           	opt stack 0
  3331  00006F                     ___ftmul@f2:
  3332                           	opt stack 0
  3333                           
  3334                           ; 3 bytes @ 0xF
  3335  00006F                     	ds	1
  3336  000070                     atualizaLCD@i:
  3337                           	opt stack 0
  3338  000070                     __doprnt@ap:
  3339                           	opt stack 0
  3340                           
  3341                           ; 2 bytes @ 0x10
  3342  000070                     	ds	1
  3343  000071                     ??_I2C_Master_Init:
  3344  000071                     _setUmidade$1298:
  3345                           	opt stack 0
  3346  000071                     strcpy@to:
  3347                           	opt stack 0
  3348  000071                     strstr@s2:
  3349                           	opt stack 0
  3350                           
  3351                           ; 2 bytes @ 0x11
  3352  000071                     	ds	1
  3353  000072                     ??___ftmul:
  3354  000072                     ??__doprnt:
  3355                           
  3356                           ; 1 bytes @ 0x12
  3357  000072                     	ds	1
  3358  000073                     _setUmidade$1299:
  3359                           	opt stack 0
  3360  000073                     getMac@mac:
  3361                           	opt stack 0
  3362  000073                     strcpy@from:
  3363                           	opt stack 0
  3364                           
  3365                           ; 2 bytes @ 0x13
  3366  000073                     	ds	2
  3367  000075                     ??_strcpy:
  3368  000075                     ___ftmul@exp:
  3369                           	opt stack 0
  3370  000075                     _setUmidade$1300:
  3371                           	opt stack 0
  3372  000075                     getMac@var:
  3373                           	opt stack 0
  3374                           
  3375                           ; 2 bytes @ 0x15
  3376  000075                     	ds	1
  3377  000076                     __doprnt@prec:
  3378                           	opt stack 0
  3379  000076                     strcpy@cp:
  3380                           	opt stack 0
  3381  000076                     ___ftmul@f3_as_product:
  3382                           	opt stack 0
  3383                           
  3384                           ; 3 bytes @ 0x16
  3385  000076                     	ds	1
  3386  000077                     ??_getMac:
  3387  000077                     setUmidade@_tmpajt:
  3388                           	opt stack 0
  3389  000077                     __doprnt@flag:
  3390                           	opt stack 0
  3391                           
  3392                           ; 1 bytes @ 0x17
  3393  000077                     	ds	1
  3394  000078                     setUmidade@_clim:
  3395                           	opt stack 0
  3396  000078                     __doprnt@val:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x18
  3400  000078                     	ds	1
  3401  000079                     setUmidade@_umd:
  3402                           	opt stack 0
  3403  000079                     getMac@j:
  3404                           	opt stack 0
  3405  000079                     ___ftmul@cntr:
  3406                           	opt stack 0
  3407                           
  3408                           ; 1 bytes @ 0x19
  3409  000079                     	ds	1
  3410  00007A                     getMac@men:
  3411                           	opt stack 0
  3412  00007A                     ___ftmul@sign:
  3413                           	opt stack 0
  3414  00007A                     __doprnt@len:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x1A
  3418  00007A                     	ds	1
  3419  00007B                     ?___ftadd:
  3420                           	opt stack 0
  3421  00007B                     getMac@i:
  3422                           	opt stack 0
  3423  00007B                     ___ftadd@f1:
  3424                           	opt stack 0
  3425                           
  3426                           ; 3 bytes @ 0x1B
  3427  00007B                     	ds	1
  3428  00007C                     __doprnt@cp:
  3429                           	opt stack 0
  3430                           
  3431                           ; 2 bytes @ 0x1C
  3432  00007C                     	ds	2
  3433  00007E                     __doprnt@width:
  3434                           	opt stack 0
  3435  00007E                     ___ftadd@f2:
  3436                           	opt stack 0
  3437                           
  3438                           ; 3 bytes @ 0x1E
  3439  00007E                     	ds	2
  3440  000080                     __doprnt@c:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0x20
  3444  000080                     	ds	1
  3445  000081                     ??___ftadd:
  3446  000081                     ?_sprintf:
  3447                           	opt stack 0
  3448  000081                     ?_printf:
  3449                           	opt stack 0
  3450  000081                     printf@f:
  3451                           	opt stack 0
  3452  000081                     sprintf@wh:
  3453                           	opt stack 0
  3454                           
  3455                           ; 2 bytes @ 0x21
  3456  000081                     	ds	2
  3457  000083                     sprintf@f:
  3458                           	opt stack 0
  3459                           
  3460                           ; 2 bytes @ 0x23
  3461  000083                     	ds	1
  3462  000084                     ___ftadd@sign:
  3463                           	opt stack 0
  3464                           
  3465                           ; 1 bytes @ 0x24
  3466  000084                     	ds	1
  3467  000085                     ___ftadd@exp2:
  3468                           	opt stack 0
  3469                           
  3470                           ; 1 bytes @ 0x25
  3471  000085                     	ds	1
  3472  000086                     ___ftadd@exp1:
  3473                           	opt stack 0
  3474                           
  3475                           ; 1 bytes @ 0x26
  3476  000086                     	ds	1
  3477  000087                     ?___ftdiv:
  3478                           	opt stack 0
  3479  000087                     ___ftdiv@f1:
  3480                           	opt stack 0
  3481                           
  3482                           ; 3 bytes @ 0x27
  3483  000087                     	ds	3
  3484  00008A                     ___ftdiv@f2:
  3485                           	opt stack 0
  3486                           
  3487                           ; 3 bytes @ 0x2A
  3488  00008A                     	ds	1
  3489  00008B                     sprintf@ap:
  3490                           	opt stack 0
  3491                           
  3492                           ; 2 bytes @ 0x2B
  3493  00008B                     	ds	2
  3494  00008D                     ??___ftdiv:
  3495  00008D                     sprintf@pb:
  3496                           	opt stack 0
  3497                           
  3498                           ; 4 bytes @ 0x2D
  3499  00008D                     	ds	3
  3500  000090                     ___ftdiv@cntr:
  3501                           	opt stack 0
  3502                           
  3503                           ; 1 bytes @ 0x30
  3504  000090                     	ds	1
  3505  000091                     filtroStr@inicio:
  3506                           	opt stack 0
  3507  000091                     ___ftdiv@f3:
  3508                           	opt stack 0
  3509                           
  3510                           ; 3 bytes @ 0x31
  3511  000091                     	ds	2
  3512  000093                     filtroStr@fim:
  3513                           	opt stack 0
  3514                           
  3515                           ; 2 bytes @ 0x33
  3516  000093                     	ds	1
  3517  000094                     ___ftdiv@exp:
  3518                           	opt stack 0
  3519                           
  3520                           ; 1 bytes @ 0x34
  3521  000094                     	ds	1
  3522  000095                     ___ftdiv@sign:
  3523                           	opt stack 0
  3524  000095                     filtroStr@str:
  3525                           	opt stack 0
  3526                           
  3527                           ; 2 bytes @ 0x35
  3528  000095                     	ds	1
  3529  000096                     ?___fttol:
  3530                           	opt stack 0
  3531  000096                     ___fttol@f1:
  3532                           	opt stack 0
  3533                           
  3534                           ; 3 bytes @ 0x36
  3535  000096                     	ds	1
  3536  000097                     filtroStr@strdest:
  3537                           	opt stack 0
  3538                           
  3539                           ; 2 bytes @ 0x37
  3540  000097                     	ds	2
  3541  000099                     ??_filtroStr:
  3542                           
  3543                           ; 1 bytes @ 0x39
  3544  000099                     	ds	1
  3545  00009A                     ??___fttol:
  3546                           
  3547                           ; 1 bytes @ 0x3A
  3548  00009A                     	ds	5
  3549  00009F                     ___fttol@sign1:
  3550                           	opt stack 0
  3551  00009F                     _criaCaracteresCGRAM$1229:
  3552                           	opt stack 0
  3553                           
  3554                           ; 2 bytes @ 0x3F
  3555  00009F                     	ds	1
  3556  0000A0                     ___fttol@lval:
  3557                           	opt stack 0
  3558                           
  3559                           ; 4 bytes @ 0x40
  3560  0000A0                     	ds	1
  3561  0000A1                     criaCaracteresCGRAM@k:
  3562                           	opt stack 0
  3563                           
  3564                           ; 1 bytes @ 0x41
  3565  0000A1                     	ds	1
  3566  0000A2                     criaCaracteresCGRAM@j:
  3567                           	opt stack 0
  3568                           
  3569                           ; 1 bytes @ 0x42
  3570  0000A2                     	ds	1
  3571  0000A3                     criaCaracteresCGRAM@i:
  3572                           	opt stack 0
  3573                           
  3574                           ; 1 bytes @ 0x43
  3575  0000A3                     	ds	1
  3576  0000A4                     ___fttol@exp1:
  3577                           	opt stack 0
  3578                           
  3579                           ; 1 bytes @ 0x44
  3580  0000A4                     	ds	1
  3581  0000A5                     _getSensors$1523:
  3582                           	opt stack 0
  3583                           
  3584                           ; 3 bytes @ 0x45
  3585  0000A5                     	ds	3
  3586  0000A8                     _getSensors$1525:
  3587                           	opt stack 0
  3588                           
  3589                           ; 3 bytes @ 0x48
  3590  0000A8                     	ds	3
  3591  0000AB                     _getSensors$1521:
  3592                           	opt stack 0
  3593                           
  3594                           ; 2 bytes @ 0x4B
  3595  0000AB                     	ds	2
  3596  0000AD                     getSensors@auxx:
  3597                           	opt stack 0
  3598                           
  3599                           ; 3 bytes @ 0x4D
  3600  0000AD                     	ds	3
  3601  0000B0                     _getSensors$2491:
  3602                           	opt stack 0
  3603                           
  3604                           ; 3 bytes @ 0x50
  3605  0000B0                     	ds	3
  3606  0000B3                     getSensors@i:
  3607                           	opt stack 0
  3608                           
  3609                           ; 1 bytes @ 0x53
  3610  0000B3                     	ds	1
  3611  0000B4                     getSensors@aux:
  3612                           	opt stack 0
  3613                           
  3614                           ; 3 bytes @ 0x54
  3615  0000B4                     	ds	9
  3616  0000BD                     printf@ap:
  3617                           	opt stack 0
  3618                           
  3619                           ; 2 bytes @ 0x5D
  3620  0000BD                     	ds	2
  3621  0000BF                     printf@pb:
  3622                           	opt stack 0
  3623                           
  3624                           ; 4 bytes @ 0x5F
  3625  0000BF                     	ds	4
  3626  0000C3                     ??_enviaDadosWifi:
  3627  0000C3                     alterarConfigWifi@i:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x63
  3631  0000C3                     	ds	2
  3632  0000C5                     enviaDadosWifi@AUX:
  3633                           	opt stack 0
  3634                           
  3635                           ; 15 bytes @ 0x65
  3636  0000C5                     	ds	15
  3637  0000D4                     _enviaDadosWifi$2490:
  3638                           	opt stack 0
  3639                           
  3640                           ; 2 bytes @ 0x74
  3641  0000D4                     	ds	2
  3642  0000D6                     enviaDadosWifi@i:
  3643                           	opt stack 0
  3644                           
  3645                           ; 1 bytes @ 0x76
  3646  0000D6                     	ds	1
  3647  0000D7                     ??_main:
  3648                           
  3649                           ; 1 bytes @ 0x77
  3650  0000D7                     	ds	1
  3651  0000D8                     _main$2492:
  3652                           	opt stack 0
  3653                           
  3654                           ; 2 bytes @ 0x78
  3655  0000D8                     	ds	2
  3656  0000DA                     _main$1633:
  3657                           	opt stack 0
  3658                           
  3659                           ; 2 bytes @ 0x7A
  3660  0000DA                     	ds	2
  3661  0000DC                     _main$1634:
  3662                           	opt stack 0
  3663                           
  3664                           ; 2 bytes @ 0x7C
  3665  0000DC                     	ds	2
  3666  0000DE                     _main$1637:
  3667                           	opt stack 0
  3668                           
  3669                           ; 2 bytes @ 0x7E
  3670  0000DE                     	ds	2
  3671  0000E0                     _main$1642:
  3672                           	opt stack 0
  3673                           
  3674                           ; 2 bytes @ 0x80
  3675  0000E0                     	ds	2
  3676  0000E2                     _main$1649:
  3677                           	opt stack 0
  3678                           
  3679                           ; 2 bytes @ 0x82
  3680  0000E2                     	ds	2
  3681  0000E4                     _main$1654:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x84
  3685  0000E4                     	ds	2
  3686  0000E6                     _main$1659:
  3687                           	opt stack 0
  3688                           
  3689                           ; 2 bytes @ 0x86
  3690  0000E6                     	ds	2
  3691  0000E8                     main@i:
  3692                           	opt stack 0
  3693                           
  3694                           ; 1 bytes @ 0x88
  3695  0000E8                     	ds	1
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           postinc0	equ	0xFEE
  3701                           wreg	equ	0xFE8
  3702                           postdec1	equ	0xFE5
  3703                           fsr1l	equ	0xFE1
  3704                           
  3705                           	psect	cstackCOMRAM
  3706  000001                     __pcstackCOMRAM:
  3707                           	opt stack 0
  3708  000001                     ??i2_I2C_Wait:
  3709  000001                     i2delay@x:
  3710                           	opt stack 0
  3711                           
  3712                           ; 2 bytes @ 0x0
  3713  000001                     	ds	1
  3714  000002                     ?i2_I2C_Read:
  3715                           	opt stack 0
  3716  000002                     i2I2C_Write@d:
  3717                           	opt stack 0
  3718  000002                     i2I2C_Read@a:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x1
  3722  000002                     	ds	1
  3723  000003                     ??i2_delay:
  3724                           
  3725                           ; 1 bytes @ 0x2
  3726  000003                     	ds	1
  3727  000004                     i2writeEEPROM_ext@data:
  3728                           	opt stack 0
  3729  000004                     i2I2C_Read@temp:
  3730                           	opt stack 0
  3731                           
  3732                           ; 2 bytes @ 0x3
  3733  000004                     	ds	1
  3734  000005                     i2writeEEPROM_ext@adress:
  3735                           	opt stack 0
  3736                           
  3737                           ; 1 bytes @ 0x4
  3738  000005                     	ds	1
  3739  000006                     i2setRangeValor@_var_ajt:
  3740                           	opt stack 0
  3741                           
  3742                           ; 2 bytes @ 0x5
  3743  000006                     	ds	2
  3744  000008                     i2setRangeValor@_min:
  3745                           	opt stack 0
  3746                           
  3747                           ; 1 bytes @ 0x7
  3748  000008                     	ds	1
  3749  000009                     i2setRangeValor@_max:
  3750                           	opt stack 0
  3751                           
  3752                           ; 1 bytes @ 0x8
  3753  000009                     	ds	1
  3754  00000A                     i2setRangeValor@end_eeprom:
  3755                           	opt stack 0
  3756                           
  3757                           ; 1 bytes @ 0x9
  3758  00000A                     	ds	1
  3759  00000B                     ??i2_setRangeValor:
  3760                           
  3761                           ; 1 bytes @ 0xA
  3762  00000B                     	ds	3
  3763  00000E                     i2setRangeValor@_acao:
  3764                           	opt stack 0
  3765                           
  3766                           ; 1 bytes @ 0xD
  3767  00000E                     	ds	1
  3768  00000F                     i2setRangeValor@_aux:
  3769                           	opt stack 0
  3770                           
  3771                           ; 2 bytes @ 0xE
  3772  00000F                     	ds	2
  3773  000011                     ??_timer:
  3774                           
  3775                           ; 1 bytes @ 0x10
  3776  000011                     	ds	7
  3777  000018                     _timer$1417:
  3778                           	opt stack 0
  3779                           
  3780                           ; 2 bytes @ 0x17
  3781  000018                     	ds	2
  3782  00001A                     _timer$1418:
  3783                           	opt stack 0
  3784                           
  3785                           ; 2 bytes @ 0x19
  3786  00001A                     	ds	2
  3787  00001C                     _timer$1419:
  3788                           	opt stack 0
  3789                           
  3790                           ; 2 bytes @ 0x1B
  3791  00001C                     	ds	2
  3792  00001E                     ??_TIMER0:
  3793                           
  3794                           ; 1 bytes @ 0x1D
  3795  00001E                     	ds	18
  3796  000030                     TIMER0@c:
  3797                           	opt stack 0
  3798                           
  3799                           ; 1 bytes @ 0x2F
  3800  000030                     	ds	1
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           postinc0	equ	0xFEE
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           fsr1l	equ	0xFE1
  3809                           
  3810 ;;
  3811 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3812 ;;
  3813 ;; *************** function _main *****************
  3814 ;; Defined at:
  3815 ;;		line 35 in file "src/main.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  i               1  136[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3831 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3832 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3833 ;;Total ram usage:       18 bytes
  3834 ;; Hardware stack levels required when called:   11
  3835 ;; This function calls:
  3836 ;;		_I2C_Master_Init
  3837 ;;		_Lcd_Clear
  3838 ;;		_Lcd_Init
  3839 ;;		_UART_Init
  3840 ;;		___wmul
  3841 ;;		_alterarConfigWifi
  3842 ;;		_atualizaLCD
  3843 ;;		_blink
  3844 ;;		_btPress
  3845 ;;		_climaAtual
  3846 ;;		_controle
  3847 ;;		_criaCaracteresCGRAM
  3848 ;;		_delay
  3849 ;;		_enviaDadosWifi
  3850 ;;		_faseAtual
  3851 ;;		_getSensors
  3852 ;;		_printf
  3853 ;;		_readEEPROM_ext
  3854 ;;		_setRangeValor
  3855 ;;		_setUmidade
  3856 ;;		_sprintf
  3857 ;;		_updateLeds
  3858 ;;		_writeEEPROM_ext
  3859 ;; This function is called by:
  3860 ;;		Startup code after reset
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text0
  3865  000012                     __ptext0:
  3866                           	opt stack 0
  3867  000012                     _main:
  3868                           	opt stack 20
  3869                           
  3870                           ;main.c: 38: TRISAbits.RA5 = 0;
  3871                           
  3872                           ;incstack = 0
  3873  000012  9A92               	bcf	3986,5,c	;volatile
  3874                           
  3875                           ;main.c: 39: TRISCbits.RC2 = 0;
  3876  000014  9494               	bcf	3988,2,c	;volatile
  3877                           
  3878                           ;main.c: 40: TRISEbits.RE0 = 0;
  3879  000016  9096               	bcf	3990,0,c	;volatile
  3880                           
  3881                           ;main.c: 41: TRISDbits.RD0 = 0;
  3882  000018  9095               	bcf	3989,0,c	;volatile
  3883                           
  3884                           ;main.c: 42: TRISCbits.RC1 = 0;
  3885  00001A  9294               	bcf	3988,1,c	;volatile
  3886                           
  3887                           ;main.c: 43: TRISDbits.RD1 = 0;
  3888  00001C  9295               	bcf	3989,1,c	;volatile
  3889                           
  3890                           ;main.c: 44: TRISCbits.RC0 = 1;
  3891  00001E  8094               	bsf	3988,0,c	;volatile
  3892                           
  3893                           ;main.c: 46: PORTAbits.RA5 = 0;
  3894  000020  9A80               	bcf	3968,5,c	;volatile
  3895                           
  3896                           ;main.c: 47: PORTCbits.RC2 = 0;
  3897  000022  9482               	bcf	3970,2,c	;volatile
  3898                           
  3899                           ;main.c: 48: PORTEbits.RE0 = 0;
  3900  000024  9084               	bcf	3972,0,c	;volatile
  3901                           
  3902                           ;main.c: 49: PORTDbits.RD0 = 0;
  3903  000026  9083               	bcf	3971,0,c	;volatile
  3904                           
  3905                           ;main.c: 50: PORTCbits.RC1 = 0;
  3906  000028  9282               	bcf	3970,1,c	;volatile
  3907                           
  3908                           ;main.c: 51: PORTDbits.RD1 = 0;
  3909  00002A  9283               	bcf	3971,1,c	;volatile
  3910                           
  3911                           ;main.c: 55: TRISAbits.RA4 = 0;
  3912  00002C  9892               	bcf	3986,4,c	;volatile
  3913                           
  3914                           ;main.c: 56: LATAbits.LATA4 = 0;
  3915  00002E  9889               	bcf	3977,4,c	;volatile
  3916                           
  3917                           ;main.c: 60: TRISBbits.RB5 = 0;
  3918  000030  9A93               	bcf	3987,5,c	;volatile
  3919                           
  3920                           ;main.c: 61: LATBbits.LATB5 = 0;
  3921  000032  9A8A               	bcf	3978,5,c	;volatile
  3922                           
  3923                           ;main.c: 65: TRISBbits.RB2 = 1;
  3924  000034  8493               	bsf	3987,2,c	;volatile
  3925                           
  3926                           ;main.c: 66: INTCON2bits.INTEDG2 = 0;
  3927  000036  98F1               	bcf	intcon2,4,c	;volatile
  3928                           
  3929                           ;main.c: 67: INTCON2bits.RBIP = 0;
  3930  000038  90F1               	bcf	intcon2,0,c	;volatile
  3931                           
  3932                           ;main.c: 68: INTCON3bits.INT2IE = 1;
  3933  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3934                           
  3935                           ;main.c: 71: TRISAbits.RA0 = 1;
  3936  00003C  8092               	bsf	3986,0,c	;volatile
  3937                           
  3938                           ;main.c: 72: PORTAbits.AN0 = 0;
  3939  00003E  9080               	bcf	3968,0,c	;volatile
  3940                           
  3941                           ;main.c: 73: TRISAbits.RA1 = 1;
  3942  000040  8292               	bsf	3986,1,c	;volatile
  3943                           
  3944                           ;main.c: 74: PORTAbits.AN1 = 0;
  3945  000042  9280               	bcf	3968,1,c	;volatile
  3946                           
  3947                           ;main.c: 75: TRISAbits.RA2 = 1;
  3948  000044  8492               	bsf	3986,2,c	;volatile
  3949                           
  3950                           ;main.c: 76: PORTAbits.AN2 = 0;
  3951  000046  9480               	bcf	3968,2,c	;volatile
  3952                           
  3953                           ;main.c: 81: T0CON = 0x81;
  3954  000048  0E81               	movlw	129
  3955  00004A  6ED5               	movwf	4053,c	;volatile
  3956                           
  3957                           ;main.c: 82: INTCON = 0xE4;
  3958  00004C  0EE4               	movlw	228
  3959  00004E  6EF2               	movwf	intcon,c	;volatile
  3960                           
  3961                           ;main.c: 85: ADCON0 = 0x01;
  3962  000050  0E01               	movlw	1
  3963  000052  6EC2               	movwf	4034,c	;volatile
  3964                           
  3965                           ;main.c: 86: ADCON1 = 0x0C;
  3966  000054  0E0C               	movlw	12
  3967  000056  6EC1               	movwf	4033,c	;volatile
  3968                           
  3969                           ;main.c: 87: ADCON2 = 0xB5;
  3970  000058  0EB5               	movlw	181
  3971  00005A  6EC0               	movwf	4032,c	;volatile
  3972                           
  3973                           ;main.c: 90: UART_Init();
  3974  00005C  EC37  F02F         	call	_UART_Init	;wreg free
  3975                           
  3976                           ;main.c: 91: printf("AT+RST\r\n");
  3977  000060  0E47               	movlw	low STR_68
  3978  000062  0100               	movlb	0	; () banked
  3979  000064  6F81               	movwf	printf@f& (0+255),b
  3980  000066  0E7F               	movlw	high STR_68
  3981  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3982  00006A  ECB4  F02D         	call	_printf	;wreg free
  3983                           
  3984                           ;main.c: 92: delay(200);
  3985  00006E  0E00               	movlw	0
  3986  000070  0100               	movlb	0	; () banked
  3987  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3988  000074  0EC8               	movlw	200
  3989  000076  6F60               	movwf	delay@x& (0+255),b
  3990  000078  EC94  F02E         	call	_delay	;wreg free
  3991                           
  3992                           ;main.c: 94: Lcd_Init();
  3993  00007C  EC16  F02B         	call	_Lcd_Init	;wreg free
  3994                           
  3995                           ;main.c: 95: Lcd_Clear();
  3996  000080  EC6B  F02F         	call	_Lcd_Clear	;wreg free
  3997                           
  3998                           ;main.c: 96: criaCaracteresCGRAM();
  3999  000084  EC29  F028         	call	_criaCaracteresCGRAM	;wreg free
  4000                           
  4001                           ;main.c: 97: I2C_Master_Init(1000000);
  4002  000088  0E40               	movlw	64
  4003  00008A  0100               	movlb	0	; () banked
  4004  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  4005  00008E  0E42               	movlw	66
  4006  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  4007  000092  0E0F               	movlw	15
  4008  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  4009  000096  0E00               	movlw	0
  4010  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  4011  00009A  ECD2  F02B         	call	_I2C_Master_Init	;wreg free
  4012                           
  4013                           ;main.c: 98: delay(150);
  4014  00009E  0E00               	movlw	0
  4015  0000A0  0100               	movlb	0	; () banked
  4016  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  4017  0000A4  0E96               	movlw	150
  4018  0000A6  6F60               	movwf	delay@x& (0+255),b
  4019  0000A8  EC94  F02E         	call	_delay	;wreg free
  4020                           
  4021                           ;main.c: 101: sprintf(line1, " TECHNOW Tecnologia");
  4022  0000AC  0EDA               	movlw	low _line1
  4023  0000AE  0100               	movlb	0	; () banked
  4024  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  4025  0000B2  0E01               	movlw	high _line1
  4026  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4027  0000B6  0EB6               	movlw	low STR_69
  4028  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  4029  0000BA  0E7C               	movlw	high STR_69
  4030  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4031  0000BE  EC10  F02D         	call	_sprintf	;wreg free
  4032                           
  4033                           ;main.c: 102: sprintf(line3, "Versao Soft.:");
  4034  0000C2  0EB0               	movlw	low _line3
  4035  0000C4  0100               	movlb	0	; () banked
  4036  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  4037  0000C8  0E01               	movlw	high _line3
  4038  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4039  0000CC  0E97               	movlw	low STR_70
  4040  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  4041  0000D0  0E7E               	movlw	high STR_70
  4042  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4043  0000D4  EC10  F02D         	call	_sprintf	;wreg free
  4044                           
  4045                           ;main.c: 103: sprintf(&line4[9], "%s", "Oct 22 2019");
  4046  0000D8  0EA4               	movlw	low (_line4+9)
  4047  0000DA  0100               	movlb	0	; () banked
  4048  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  4049  0000DE  0E01               	movlw	high (_line4+9)
  4050  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4051  0000E2  0E26               	movlw	low (STR_82+7)
  4052  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  4053  0000E6  0E7F               	movlw	high (STR_82+7)
  4054  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4055  0000EA  0EA5               	movlw	low STR_58
  4056  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  4057  0000EE  0E7E               	movlw	high STR_58
  4058  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  4059  0000F2  EC10  F02D         	call	_sprintf	;wreg free
  4060                           
  4061                           ;main.c: 104: atualizaLCD(line1, line2, line3, line4);
  4062  0000F6  0EDA               	movlw	low _line1
  4063  0000F8  0100               	movlb	0	; () banked
  4064  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4065  0000FC  0E01               	movlw	high _line1
  4066  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4067  000100  0EC5               	movlw	low _line2
  4068  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4069  000104  0E01               	movlw	high _line2
  4070  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4071  000108  0EB0               	movlw	low _line3
  4072  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4073  00010C  0E01               	movlw	high _line3
  4074  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4075  000110  0E9B               	movlw	low _line4
  4076  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4077  000114  0E01               	movlw	high _line4
  4078  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4079  000118  EC14  F027         	call	_atualizaLCD	;wreg free
  4080                           
  4081                           ;main.c: 105: delay(300);
  4082  00011C  0E01               	movlw	1
  4083  00011E  0100               	movlb	0	; () banked
  4084  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  4085  000122  0E2C               	movlw	44
  4086  000124  6F60               	movwf	delay@x& (0+255),b
  4087  000126  EC94  F02E         	call	_delay	;wreg free
  4088                           
  4089                           ;main.c: 106: LATBbits.LATB5 = 1;
  4090  00012A  8A8A               	bsf	3978,5,c	;volatile
  4091                           
  4092                           ;main.c: 107: delay(2450);
  4093  00012C  0E09               	movlw	9
  4094  00012E  0100               	movlb	0	; () banked
  4095  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  4096  000132  0E92               	movlw	146
  4097  000134  6F60               	movwf	delay@x& (0+255),b
  4098  000136  EC94  F02E         	call	_delay	;wreg free
  4099                           
  4100                           ;main.c: 109: tempajt = readEEPROM_ext(1);
  4101  00013A  0E01               	movlw	1
  4102  00013C  ECC3  F02C         	call	_readEEPROM_ext
  4103  000140  0100               	movlb	0	; () banked
  4104  000142  6FEA               	movwf	_tempajt& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 110: umidajt = readEEPROM_ext(2);
  4108  000144  0E02               	movlw	2
  4109  000146  ECC3  F02C         	call	_readEEPROM_ext
  4110  00014A  0100               	movlb	0	; () banked
  4111  00014C  6FE9               	movwf	_umidajt& (0+255),b
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 111: trava_fase = readEEPROM_ext(3);
  4115  00014E  0E03               	movlw	3
  4116  000150  ECC3  F02C         	call	_readEEPROM_ext
  4117  000154  0100               	movlb	0	; () banked
  4118  000156  6FF8               	movwf	_trava_fase& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;main.c: 112: fase = readEEPROM_ext(4);
  4122  000158  0E04               	movlw	4
  4123  00015A  ECC3  F02C         	call	_readEEPROM_ext
  4124  00015E  0100               	movlb	0	; () banked
  4125  000160  6FEC               	movwf	_fase& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;main.c: 113: clima = readEEPROM_ext(5);
  4129  000162  0E05               	movlw	5
  4130  000164  ECC3  F02C         	call	_readEEPROM_ext
  4131  000168  0100               	movlb	0	; () banked
  4132  00016A  6FEB               	movwf	_clima& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 114: tipo_modo_trabalho = readEEPROM_ext(6);
  4136  00016C  0E06               	movlw	6
  4137  00016E  ECC3  F02C         	call	_readEEPROM_ext
  4138  000172  0100               	movlb	0	; () banked
  4139  000174  6FF6               	movwf	_tipo_modo_trabalho& (0+255),b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;main.c: 115: tipo_sensor_umidade = readEEPROM_ext(7);
  4143  000176  0E07               	movlw	7
  4144  000178  ECC3  F02C         	call	_readEEPROM_ext
  4145  00017C  0100               	movlb	0	; () banked
  4146  00017E  6FF7               	movwf	_tipo_sensor_umidade& (0+255),b
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 116: t_fim_fase1 = readEEPROM_ext(8);
  4150  000180  0E08               	movlw	8
  4151  000182  ECC3  F02C         	call	_readEEPROM_ext
  4152  000186  6E4E               	movwf	_t_fim_fase1,c
  4153                           
  4154                           ;main.c: 117: t_fim_fase2 = readEEPROM_ext(9);
  4155  000188  0E09               	movlw	9
  4156  00018A  ECC3  F02C         	call	_readEEPROM_ext
  4157  00018E  6E4D               	movwf	_t_fim_fase2,c
  4158                           
  4159                           ;main.c: 118: t_fim_fase3 = readEEPROM_ext(10);
  4160  000190  0E0A               	movlw	10
  4161  000192  ECC3  F02C         	call	_readEEPROM_ext
  4162  000196  6E4C               	movwf	_t_fim_fase3,c
  4163                           
  4164                           ;main.c: 119: h_venotinha = readEEPROM_ext(11);
  4165  000198  0E0B               	movlw	11
  4166  00019A  ECC3  F02C         	call	_readEEPROM_ext
  4167  00019E  0100               	movlb	0	; () banked
  4168  0001A0  6FF0               	movwf	_h_venotinha& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 120: h_abafador = readEEPROM_ext(12);
  4172  0001A2  0E0C               	movlw	12
  4173  0001A4  ECC3  F02C         	call	_readEEPROM_ext
  4174  0001A8  0100               	movlb	0	; () banked
  4175  0001AA  6FEF               	movwf	_h_abafador& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;main.c: 121: h_flap = readEEPROM_ext(13);
  4179  0001AC  0E0D               	movlw	13
  4180  0001AE  ECC3  F02C         	call	_readEEPROM_ext
  4181  0001B2  0101               	movlb	1	; () banked
  4182  0001B4  6FF4               	movwf	_h_flap& (0+255),b
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;main.c: 122: buzzer = readEEPROM_ext(14);
  4186  0001B6  0E0E               	movlw	14
  4187  0001B8  ECC3  F02C         	call	_readEEPROM_ext
  4188  0001BC  0100               	movlb	0	; () banked
  4189  0001BE  6FFA               	movwf	_buzzer& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;main.c: 123: fornalha = readEEPROM_ext(15);
  4193  0001C0  0E0F               	movlw	15
  4194  0001C2  ECC3  F02C         	call	_readEEPROM_ext
  4195  0001C6  0100               	movlb	0	; () banked
  4196  0001C8  6FF9               	movwf	_fornalha& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;main.c: 124: h_modo_seguranca = readEEPROM_ext(16);
  4200  0001CA  0E10               	movlw	16
  4201  0001CC  ECC3  F02C         	call	_readEEPROM_ext
  4202  0001D0  0100               	movlb	0	; () banked
  4203  0001D2  6FF1               	movwf	_h_modo_seguranca& (0+255),b
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;main.c: 125: h_buzzer = readEEPROM_ext(17);
  4207  0001D4  0E11               	movlw	17
  4208  0001D6  ECC3  F02C         	call	_readEEPROM_ext
  4209  0001DA  0100               	movlb	0	; () banked
  4210  0001DC  6FEE               	movwf	_h_buzzer& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;main.c: 126: t_flap_ligado = readEEPROM_ext(18);
  4214  0001DE  0E12               	movlw	18
  4215  0001E0  ECC3  F02C         	call	_readEEPROM_ext
  4216  0001E4  0100               	movlb	0	; () banked
  4217  0001E6  6FF5               	movwf	_t_flap_ligado& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 127: t_flap_intervalo = readEEPROM_ext(20);
  4221  0001E8  0E14               	movlw	20
  4222  0001EA  ECC3  F02C         	call	_readEEPROM_ext
  4223  0001EE  0100               	movlb	0	; () banked
  4224  0001F0  6FF4               	movwf	_t_flap_intervalo& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;main.c: 128: t_buzzer_religar = readEEPROM_ext(21);
  4228  0001F2  0E15               	movlw	21
  4229  0001F4  ECC3  F02C         	call	_readEEPROM_ext
  4230  0001F8  0100               	movlb	0	; () banked
  4231  0001FA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;main.c: 129: t_temp_automatica = readEEPROM_ext(22);
  4235  0001FC  0E16               	movlw	22
  4236  0001FE  ECC3  F02C         	call	_readEEPROM_ext
  4237  000202  0100               	movlb	0	; () banked
  4238  000204  6FF3               	movwf	_t_temp_automatica& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;main.c: 130: wifi_habilita_alteracao = readEEPROM_ext(23);
  4242  000206  0E17               	movlw	23
  4243  000208  ECC3  F02C         	call	_readEEPROM_ext
  4244  00020C  0100               	movlb	0	; () banked
  4245  00020E  6FD7               	movwf	??_main& (0+255),b
  4246  000210  51D7               	movf	??_main& (0+255),w,b
  4247  000212  0101               	movlb	1	; () banked
  4248  000214  6FF1               	movwf	_wifi_habilita_alteracao& (0+255),b
  4249  000216  6BF2               	clrf	(_wifi_habilita_alteracao+1)& (0+255),b
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;main.c: 131: wifi_SENHA = readEEPROM_ext(25);
  4253  000218  0E19               	movlw	25
  4254  00021A  ECC3  F02C         	call	_readEEPROM_ext
  4255  00021E  0100               	movlb	0	; () banked
  4256  000220  6FD7               	movwf	??_main& (0+255),b
  4257  000222  51D7               	movf	??_main& (0+255),w,b
  4258  000224  0101               	movlb	1	; () banked
  4259  000226  6FEF               	movwf	_wifi_SENHA& (0+255),b
  4260  000228  6BF0               	clrf	(_wifi_SENHA+1)& (0+255),b
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;main.c: 132: h_subir_temp_automatica = readEEPROM_ext(27);
  4264  00022A  0E1B               	movlw	27
  4265  00022C  ECC3  F02C         	call	_readEEPROM_ext
  4266  000230  0100               	movlb	0	; () banked
  4267  000232  6FED               	movwf	_h_subir_temp_automatica& (0+255),b
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;main.c: 133: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4271  000234  0E1C               	movlw	28
  4272  000236  ECC3  F02C         	call	_readEEPROM_ext
  4273  00023A  0100               	movlb	0	; () banked
  4274  00023C  6FF2               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 135: char i = 0;
  4278  00023E  0E00               	movlw	0
  4279  000240  6FE8               	movwf	main@i& (0+255),b
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;main.c: 136: for (i = 0; i < 15; i++) {
  4283  000242  0E00               	movlw	0
  4284  000244  6FE8               	movwf	main@i& (0+255),b
  4285  000246                     l9353:
  4286                           
  4287                           ; BSR set to: 0
  4288  000246  0E0E               	movlw	14
  4289  000248  65E8               	cpfsgt	main@i& (0+255),b
  4290  00024A  D001               	goto	l1271
  4291  00024C  D010               	goto	u14340
  4292  00024E                     l1271:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;main.c: 137: ssid[i] = (char) readEEPROM_ext(40 + i);
  4296                           
  4297                           ; BSR set to: 0
  4298  00024E  51E8               	movf	main@i& (0+255),w,b
  4299  000250  0D01               	mullw	1
  4300  000252  0EA1               	movlw	low _ssid
  4301  000254  24F3               	addwf	prodl,w,c
  4302  000256  6ED9               	movwf	fsr2l,c
  4303  000258  0E02               	movlw	high _ssid
  4304  00025A  20F4               	addwfc	prodh,w,c
  4305  00025C  6EDA               	movwf	fsr2h,c
  4306  00025E  51E8               	movf	main@i& (0+255),w,b
  4307  000260  0F28               	addlw	40
  4308  000262  ECC3  F02C         	call	_readEEPROM_ext
  4309  000266  6EDF               	movwf	indf2,c
  4310  000268  0100               	movlb	0	; () banked
  4311  00026A  2BE8               	incf	main@i& (0+255),f,b
  4312  00026C  D7EC               	goto	l9353
  4313  00026E                     u14340:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;main.c: 138: }
  4317                           ;main.c: 139: for (i = 0; i < 15; i++) {
  4318                           
  4319                           ; BSR set to: 0
  4320  00026E  0E00               	movlw	0
  4321  000270  6FE8               	movwf	main@i& (0+255),b
  4322  000272                     l9365:
  4323                           
  4324                           ; BSR set to: 0
  4325  000272  0E0E               	movlw	14
  4326  000274  65E8               	cpfsgt	main@i& (0+255),b
  4327  000276  D001               	goto	l1273
  4328  000278  D010               	goto	u14360
  4329  00027A                     l1273:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;main.c: 140: senha[i] = (char) readEEPROM_ext(60 + i);
  4333                           
  4334                           ; BSR set to: 0
  4335  00027A  51E8               	movf	main@i& (0+255),w,b
  4336  00027C  0D01               	mullw	1
  4337  00027E  0E92               	movlw	low _senha
  4338  000280  24F3               	addwf	prodl,w,c
  4339  000282  6ED9               	movwf	fsr2l,c
  4340  000284  0E02               	movlw	high _senha
  4341  000286  20F4               	addwfc	prodh,w,c
  4342  000288  6EDA               	movwf	fsr2h,c
  4343  00028A  51E8               	movf	main@i& (0+255),w,b
  4344  00028C  0F3C               	addlw	60
  4345  00028E  ECC3  F02C         	call	_readEEPROM_ext
  4346  000292  6EDF               	movwf	indf2,c
  4347  000294  0100               	movlb	0	; () banked
  4348  000296  2BE8               	incf	main@i& (0+255),f,b
  4349  000298  D7EC               	goto	l9365
  4350  00029A                     u14360:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 141: }
  4354                           ;main.c: 143: i = readEEPROM_ext(30);
  4355                           
  4356                           ; BSR set to: 0
  4357  00029A  0E1E               	movlw	30
  4358  00029C  ECC3  F02C         	call	_readEEPROM_ext
  4359  0002A0  0100               	movlb	0	; () banked
  4360  0002A2  6FE8               	movwf	main@i& (0+255),b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 144: if (i != 187) {
  4364  0002A4  0EBB               	movlw	187
  4365  0002A6  19E8               	xorwf	main@i& (0+255),w,b
  4366  0002A8  B4D8               	btfsc	status,2,c
  4367  0002AA  D02C               	goto	l1278
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;main.c: 145: writeEEPROM_ext(30, 187);
  4371  0002AC  0EBB               	movlw	187
  4372  0002AE  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4373  0002B0  0E1E               	movlw	30
  4374  0002B2  EC54  F02D         	call	_writeEEPROM_ext
  4375  0002B6                     l1276:
  4376  0002B6  0004               	clrwdt		;# 
  4377                           
  4378                           ;main.c: 148: sprintf(line4, "ERRO EEPROM");
  4379  0002B8  0E9B               	movlw	low _line4
  4380  0002BA  0100               	movlb	0	; () banked
  4381  0002BC  6F81               	movwf	sprintf@wh& (0+255),b
  4382  0002BE  0E01               	movlw	high _line4
  4383  0002C0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4384  0002C2  0EB1               	movlw	low STR_73
  4385  0002C4  6F83               	movwf	sprintf@f& (0+255),b
  4386  0002C6  0E7E               	movlw	high STR_73
  4387  0002C8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4388  0002CA  EC10  F02D         	call	_sprintf	;wreg free
  4389                           
  4390                           ;main.c: 149: atualizaLCD(line1, line2, line3, line4);
  4391  0002CE  0EDA               	movlw	low _line1
  4392  0002D0  0100               	movlb	0	; () banked
  4393  0002D2  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4394  0002D4  0E01               	movlw	high _line1
  4395  0002D6  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4396  0002D8  0EC5               	movlw	low _line2
  4397  0002DA  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4398  0002DC  0E01               	movlw	high _line2
  4399  0002DE  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4400  0002E0  0EB0               	movlw	low _line3
  4401  0002E2  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4402  0002E4  0E01               	movlw	high _line3
  4403  0002E6  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4404  0002E8  0E9B               	movlw	low _line4
  4405  0002EA  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4406  0002EC  0E01               	movlw	high _line4
  4407  0002EE  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4408  0002F0  EC14  F027         	call	_atualizaLCD	;wreg free
  4409                           
  4410                           ;main.c: 150: delay(3000);
  4411  0002F4  0E0B               	movlw	11
  4412  0002F6  0100               	movlb	0	; () banked
  4413  0002F8  6F61               	movwf	(delay@x+1)& (0+255),b
  4414  0002FA  0EB8               	movlw	184
  4415  0002FC  6F60               	movwf	delay@x& (0+255),b
  4416  0002FE  EC94  F02E         	call	_delay	;wreg free
  4417  000302  D7D9               	goto	l1276
  4418  000304                     l1278:
  4419                           
  4420                           ;main.c: 160: if (RCSTAbits.OERR) {
  4421                           
  4422                           ;main.c: 151: }
  4423                           ;main.c: 152: }
  4424                           ;main.c: 154: while (1) {
  4425  000304  A2AB               	btfss	4011,1,c	;volatile
  4426  000306  D002               	goto	l1280
  4427                           
  4428                           ;main.c: 161: RCSTAbits.CREN = 0;
  4429  000308  98AB               	bcf	4011,4,c	;volatile
  4430                           
  4431                           ;main.c: 162: RCSTAbits.CREN = 1;
  4432  00030A  88AB               	bsf	4011,4,c	;volatile
  4433  00030C                     l1280:
  4434  00030C  0004               	clrwdt		;# 
  4435                           
  4436                           ;main.c: 165: getSensors();
  4437  00030E  EC84  F018         	call	_getSensors	;wreg free
  4438                           
  4439                           ;main.c: 166: controle();
  4440  000312  EC76  F01D         	call	_controle	;wreg free
  4441                           
  4442                           ;main.c: 169: if (tipo_modo_trabalho == 1) {
  4443  000316  0100               	movlb	0	; () banked
  4444  000318  05F6               	decf	_tipo_modo_trabalho& (0+255),w,b
  4445  00031A  A4D8               	btfss	status,2,c
  4446  00031C  D00F               	goto	l1281
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;main.c: 170: setUmidade('A', &umidajt, &tempajt, &clima);
  4450  00031E  0EE9               	movlw	low _umidajt
  4451  000320  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4452  000322  0E00               	movlw	high _umidajt
  4453  000324  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4454  000326  0EEA               	movlw	low _tempajt
  4455  000328  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4456  00032A  0E00               	movlw	high _tempajt
  4457  00032C  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4458  00032E  0EEB               	movlw	low _clima
  4459  000330  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4460  000332  0E00               	movlw	high _clima
  4461  000334  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4462  000336  0E41               	movlw	65
  4463  000338  ECCA  F023         	call	_setUmidade
  4464  00033C                     l1281:
  4465                           
  4466                           ;main.c: 171: }
  4467                           ;main.c: 173: faseAtual('F', &fase, &tempajt);
  4468  00033C  0EEC               	movlw	low _fase
  4469  00033E  0100               	movlb	0	; () banked
  4470  000340  6F60               	movwf	faseAtual@_fase& (0+255),b
  4471  000342  0E00               	movlw	high _fase
  4472  000344  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4473  000346  0EEA               	movlw	low _tempajt
  4474  000348  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4475  00034A  0E00               	movlw	high _tempajt
  4476  00034C  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4477  00034E  0E46               	movlw	70
  4478  000350  EC2B  F023         	call	_faseAtual
  4479                           
  4480                           ;main.c: 175: if (menu != 10) {
  4481  000354  0E0A               	movlw	10
  4482  000356  0100               	movlb	0	; () banked
  4483  000358  19FB               	xorwf	_menu& (0+255),w,b
  4484  00035A  A4D8               	btfss	status,2,c
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;main.c: 176: enviaDadosWifi();
  4488  00035C  ECEB  F015         	call	_enviaDadosWifi	;wreg free
  4489                           
  4490                           ;main.c: 177: }
  4491                           ;main.c: 181: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4492  000360  0E04               	movlw	4
  4493  000362  EC29  F02F         	call	_btPress
  4494  000366  0900               	iorlw	0
  4495  000368  B4D8               	btfsc	status,2,c
  4496  00036A  D359               	goto	l1284
  4497  00036C  0EF9               	movlw	low _fornalha
  4498  00036E  0100               	movlb	0	; () banked
  4499  000370  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4500  000372  0E00               	movlw	high _fornalha
  4501  000374  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4502  000376  0E00               	movlw	0
  4503  000378  6F67               	movwf	setRangeValor@_min& (0+255),b
  4504  00037A  0E01               	movlw	1
  4505  00037C  6F68               	movwf	setRangeValor@_max& (0+255),b
  4506  00037E  0E0F               	movlw	15
  4507  000380  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4508  000382  0E2B               	movlw	43
  4509  000384  ECD0  F028         	call	_setRangeValor
  4510                           
  4511                           ;main.c: 183: switch (menu) {
  4512  000388  D34A               	goto	l1284
  4513  00038A                     
  4514                           ;main.c: 185: sprintf(&line1[6], "|Sensor|Ajuste");
  4515  00038A  0EE0               	movlw	low (_line1+6)
  4516  00038C  0100               	movlb	0	; () banked
  4517  00038E  6F81               	movwf	sprintf@wh& (0+255),b
  4518  000390  0E01               	movlw	high (_line1+6)
  4519  000392  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4520  000394  0E18               	movlw	low STR_74
  4521  000396  6F83               	movwf	sprintf@f& (0+255),b
  4522  000398  0E7E               	movlw	high STR_74
  4523  00039A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4524  00039C  EC10  F02D         	call	_sprintf	;wreg free
  4525                           
  4526                           ;main.c: 186: line1[0] = 0x02;
  4527  0003A0  0E02               	movlw	2
  4528  0003A2  0101               	movlb	1	; () banked
  4529  0003A4  6FDA               	movwf	_line1& (0+255),b
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;main.c: 187: if (!buzzer) blink(line1, 1, 2);
  4533  0003A6  0100               	movlb	0	; () banked
  4534  0003A8  51FA               	movf	_buzzer& (0+255),w,b
  4535  0003AA  A4D8               	btfss	status,2,c
  4536  0003AC  D00A               	goto	l1286
  4537                           
  4538                           ; BSR set to: 0
  4539  0003AE  0EDA               	movlw	low _line1
  4540  0003B0  6F60               	movwf	blink@line& (0+255),b
  4541  0003B2  0E01               	movlw	high _line1
  4542  0003B4  6F61               	movwf	(blink@line+1)& (0+255),b
  4543  0003B6  0E01               	movlw	1
  4544  0003B8  6F62               	movwf	blink@start& (0+255),b
  4545  0003BA  0E02               	movlw	2
  4546  0003BC  6F63               	movwf	blink@end& (0+255),b
  4547  0003BE  EC05  F02E         	call	_blink	;wreg free
  4548  0003C2                     l1286:
  4549                           
  4550                           ;main.c: 188: line1[2] = 'F';
  4551  0003C2  0E46               	movlw	70
  4552  0003C4  0101               	movlb	1	; () banked
  4553  0003C6  6FDC               	movwf	(_line1+2)& (0+255),b
  4554                           
  4555                           ; BSR set to: 1
  4556                           ;main.c: 189: if (!fornalha) blink(line1, 2, 3);
  4557  0003C8  0100               	movlb	0	; () banked
  4558  0003CA  51F9               	movf	_fornalha& (0+255),w,b
  4559  0003CC  A4D8               	btfss	status,2,c
  4560  0003CE  D00A               	goto	l1287
  4561                           
  4562                           ; BSR set to: 0
  4563  0003D0  0EDA               	movlw	low _line1
  4564  0003D2  6F60               	movwf	blink@line& (0+255),b
  4565  0003D4  0E01               	movlw	high _line1
  4566  0003D6  6F61               	movwf	(blink@line+1)& (0+255),b
  4567  0003D8  0E02               	movlw	2
  4568  0003DA  6F62               	movwf	blink@start& (0+255),b
  4569  0003DC  0E03               	movlw	3
  4570  0003DE  6F63               	movwf	blink@end& (0+255),b
  4571  0003E0  EC05  F02E         	call	_blink	;wreg free
  4572  0003E4                     l1287:
  4573                           
  4574                           ;main.c: 190: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4575  0003E4  0101               	movlb	1	; () banked
  4576  0003E6  519A               	movf	_wifi_conectado& (0+255),w,b
  4577  0003E8  A4D8               	btfss	status,2,c
  4578  0003EA  D005               	goto	l1289
  4579                           
  4580                           ; BSR set to: 1
  4581  0003EC  0E00               	movlw	0
  4582  0003EE  0100               	movlb	0	; () banked
  4583  0003F0  6FDB               	movwf	(_main$1633+1)& (0+255),b
  4584  0003F2  0E20               	movlw	32
  4585  0003F4  D004               	goto	L1
  4586  0003F6                     l1289:
  4587                           
  4588                           ; BSR set to: 0
  4589  0003F6  0E00               	movlw	0
  4590  0003F8  0100               	movlb	0	; () banked
  4591  0003FA  6FDB               	movwf	(_main$1633+1)& (0+255),b
  4592  0003FC  0E05               	movlw	5
  4593  0003FE                     L1:
  4594  0003FE  6FDA               	movwf	_main$1633& (0+255),b
  4595                           
  4596                           ; BSR set to: 0
  4597                           
  4598                           ; BSR set to: 0
  4599  000400  C0DA  F1DE         	movff	_main$1633,_line1+4
  4600                           
  4601                           ;main.c: 191: line1[5] = (trava_fase) ? 0x01 : ' ';
  4602  000404  51F8               	movf	_trava_fase& (0+255),w,b
  4603  000406  A4D8               	btfss	status,2,c
  4604  000408  D004               	goto	l1293
  4605                           
  4606                           ; BSR set to: 0
  4607  00040A  0E00               	movlw	0
  4608  00040C  6FDD               	movwf	(_main$1634+1)& (0+255),b
  4609  00040E  0E20               	movlw	32
  4610  000410  D003               	goto	L2
  4611  000412                     l1293:
  4612                           
  4613                           ; BSR set to: 0
  4614                           
  4615                           ; BSR set to: 0
  4616  000412  0E00               	movlw	0
  4617  000414  6FDD               	movwf	(_main$1634+1)& (0+255),b
  4618  000416  0E01               	movlw	1
  4619  000418                     L2:
  4620  000418  6FDC               	movwf	_main$1634& (0+255),b
  4621                           
  4622                           ; BSR set to: 0
  4623                           
  4624                           ; BSR set to: 0
  4625  00041A  C0DC  F1DF         	movff	_main$1634,_line1+5
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 192: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4629  00041E  0EC5               	movlw	low _line2
  4630  000420  6F81               	movwf	sprintf@wh& (0+255),b
  4631  000422  0E01               	movlw	high _line2
  4632  000424  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4633  000426  0E3D               	movlw	low STR_75
  4634  000428  6F83               	movwf	sprintf@f& (0+255),b
  4635  00042A  0E7C               	movlw	high STR_75
  4636  00042C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4637  00042E  C0FD  F085         	movff	_temp,?_sprintf+4
  4638  000432  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4639  000434  C0EA  F087         	movff	_tempajt,?_sprintf+6
  4640  000438  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4641  00043A  EC10  F02D         	call	_sprintf	;wreg free
  4642                           
  4643                           ;main.c: 193: line2[5] = 0x04;
  4644  00043E  0E04               	movlw	4
  4645  000440  0101               	movlb	1	; () banked
  4646  000442  6FCA               	movwf	(_line2+5)& (0+255),b
  4647                           
  4648                           ; BSR set to: 1
  4649                           ;main.c: 194: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4650  000444  0100               	movlb	0	; () banked
  4651  000446  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4652  000448  A4D8               	btfss	status,2,c
  4653  00044A  D004               	goto	l1297
  4654                           
  4655                           ; BSR set to: 0
  4656  00044C  0E00               	movlw	0
  4657  00044E  6FDF               	movwf	(_main$1637+1)& (0+255),b
  4658  000450  0E46               	movlw	70
  4659  000452  D003               	goto	L3
  4660  000454                     l1297:
  4661                           
  4662                           ; BSR set to: 0
  4663                           
  4664                           ; BSR set to: 0
  4665  000454  0E00               	movlw	0
  4666  000456  6FDF               	movwf	(_main$1637+1)& (0+255),b
  4667  000458  0E25               	movlw	37
  4668  00045A                     L3:
  4669  00045A  6FDE               	movwf	_main$1637& (0+255),b
  4670                           
  4671                           ; BSR set to: 0
  4672                           
  4673                           ; BSR set to: 0
  4674  00045C  0EB0               	movlw	low _line3
  4675  00045E  6F81               	movwf	sprintf@wh& (0+255),b
  4676  000460  0E01               	movlw	high _line3
  4677  000462  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4678  000464  0EE8               	movlw	low STR_76
  4679  000466  6F83               	movwf	sprintf@f& (0+255),b
  4680  000468  0E7B               	movlw	high STR_76
  4681  00046A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4682  00046C  C0FC  F085         	movff	_umid,?_sprintf+4
  4683  000470  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4684  000472  C0E9  F087         	movff	_umidajt,?_sprintf+6
  4685  000476  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4686  000478  C0DE  F089         	movff	_main$1637,?_sprintf+8
  4687  00047C  C0DF  F08A         	movff	_main$1637+1,?_sprintf+9
  4688  000480  EC10  F02D         	call	_sprintf	;wreg free
  4689                           
  4690                           ;main.c: 195: line3[5] = 0x03;
  4691  000484  0E03               	movlw	3
  4692  000486  0101               	movlb	1	; () banked
  4693  000488  6FB5               	movwf	(_line3+5)& (0+255),b
  4694                           
  4695                           ;main.c: 196: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4696  00048A  0E9B               	movlw	low _line4
  4697  00048C  0100               	movlb	0	; () banked
  4698  00048E  6F81               	movwf	sprintf@wh& (0+255),b
  4699  000490  0E01               	movlw	high _line4
  4700  000492  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4701  000494  0E33               	movlw	low STR_77
  4702  000496  6F83               	movwf	sprintf@f& (0+255),b
  4703  000498  0E7F               	movlw	high STR_77
  4704  00049A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4705  00049C  0EEC               	movlw	low _fase
  4706  00049E  6F60               	movwf	faseAtual@_fase& (0+255),b
  4707  0004A0  0E00               	movlw	high _fase
  4708  0004A2  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4709  0004A4  0EEA               	movlw	low _tempajt
  4710  0004A6  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4711  0004A8  0E00               	movlw	high _tempajt
  4712  0004AA  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4713  0004AC  0E3F               	movlw	63
  4714  0004AE  EC2B  F023         	call	_faseAtual
  4715  0004B2  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4716  0004B6  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4717  0004BA  EC10  F02D         	call	_sprintf	;wreg free
  4718                           
  4719                           ;main.c: 197: if (!f_falta_energia) {
  4720  0004BE  0100               	movlb	0	; () banked
  4721  0004C0  51FE               	movf	_f_falta_energia& (0+255),w,b
  4722  0004C2  A4D8               	btfss	status,2,c
  4723  0004C4  D00A               	goto	l1300
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;main.c: 198: sprintf(line4, " *FALTA DE ENERGIA*");
  4727  0004C6  0E9B               	movlw	low _line4
  4728  0004C8  6F81               	movwf	sprintf@wh& (0+255),b
  4729  0004CA  0E01               	movlw	high _line4
  4730  0004CC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4731  0004CE  0E52               	movlw	low STR_78
  4732  0004D0  6F83               	movwf	sprintf@f& (0+255),b
  4733  0004D2  0E7C               	movlw	high STR_78
  4734  0004D4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4735  0004D6  EC10  F02D         	call	_sprintf	;wreg free
  4736  0004DA                     l1300:
  4737                           
  4738                           ;main.c: 199: };
  4739                           ;main.c: 201: if (btPress(8)) {
  4740  0004DA  0E08               	movlw	8
  4741  0004DC  EC29  F02F         	call	_btPress
  4742  0004E0  0900               	iorlw	0
  4743  0004E2  B4D8               	btfsc	status,2,c
  4744  0004E4  D006               	goto	l1301
  4745                           
  4746                           ;main.c: 202: menu = 1;
  4747  0004E6  0E01               	movlw	1
  4748  0004E8  0100               	movlb	0	; () banked
  4749  0004EA  6FFB               	movwf	_menu& (0+255),b
  4750                           
  4751                           ;main.c: 203: opcaomenu = 1;
  4752  0004EC  0E01               	movlw	1
  4753  0004EE  0101               	movlb	1	; () banked
  4754  0004F0  6F99               	movwf	_opcaomenu& (0+255),b
  4755  0004F2                     l1301:
  4756                           
  4757                           ;main.c: 204: }
  4758                           ;main.c: 205: if (btPress(2)) {
  4759                           
  4760                           ; BSR set to: 1
  4761  0004F2  0E02               	movlw	2
  4762  0004F4  EC29  F02F         	call	_btPress
  4763  0004F8  0900               	iorlw	0
  4764  0004FA  B4D8               	btfsc	status,2,c
  4765  0004FC  D002               	goto	l1302
  4766                           
  4767                           ;main.c: 206: ajuste_parametro++;
  4768  0004FE  0101               	movlb	1	; () banked
  4769  000500  2B98               	incf	_ajuste_parametro& (0+255),f,b
  4770  000502                     l1302:
  4771                           
  4772                           ;main.c: 207: }
  4773                           ;main.c: 208: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4774                           
  4775                           ; BSR set to: 1
  4776  000502  0E01               	movlw	1
  4777  000504  EC29  F02F         	call	_btPress
  4778  000508  0900               	iorlw	0
  4779  00050A  B4D8               	btfsc	status,2,c
  4780  00050C  D00E               	goto	l1303
  4781  00050E  0EFA               	movlw	low _buzzer
  4782  000510  0100               	movlb	0	; () banked
  4783  000512  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4784  000514  0E00               	movlw	high _buzzer
  4785  000516  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4786  000518  0E01               	movlw	1
  4787  00051A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4788  00051C  0E01               	movlw	1
  4789  00051E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4790  000520  0E0E               	movlw	14
  4791  000522  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4792  000524  0E2B               	movlw	43
  4793  000526  ECD0  F028         	call	_setRangeValor
  4794  00052A                     l1303:
  4795                           
  4796                           ;main.c: 209: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4797  00052A  0E10               	movlw	16
  4798  00052C  EC29  F02F         	call	_btPress
  4799  000530  0900               	iorlw	0
  4800  000532  B4D8               	btfsc	status,2,c
  4801  000534  D084               	goto	l1305
  4802  000536  0EFA               	movlw	low _buzzer
  4803  000538  0100               	movlb	0	; () banked
  4804  00053A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4805  00053C  0E00               	movlw	high _buzzer
  4806  00053E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4807  000540  0E00               	movlw	0
  4808  000542  6F67               	movwf	setRangeValor@_min& (0+255),b
  4809  000544  0E00               	movlw	0
  4810  000546  6F68               	movwf	setRangeValor@_max& (0+255),b
  4811  000548  0E0E               	movlw	14
  4812  00054A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4813  00054C  0E2B               	movlw	43
  4814  00054E  ECD0  F028         	call	_setRangeValor
  4815                           
  4816                           ;main.c: 212: switch (ajuste_parametro) {
  4817  000552  D075               	goto	l1305
  4818  000554                     
  4819                           ;main.c: 214: blink(line2, 15, 20);
  4820  000554  0EC5               	movlw	low _line2
  4821  000556  0100               	movlb	0	; () banked
  4822  000558  6F60               	movwf	blink@line& (0+255),b
  4823  00055A  0E01               	movlw	high _line2
  4824  00055C  6F61               	movwf	(blink@line+1)& (0+255),b
  4825  00055E  0E0F               	movlw	15
  4826  000560  6F62               	movwf	blink@start& (0+255),b
  4827  000562  0E14               	movlw	20
  4828  000564  6F63               	movwf	blink@end& (0+255),b
  4829  000566  EC05  F02E         	call	_blink	;wreg free
  4830                           
  4831                           ;main.c: 215: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4832  00056A  0E40               	movlw	64
  4833  00056C  EC29  F02F         	call	_btPress
  4834  000570  0900               	iorlw	0
  4835  000572  B4D8               	btfsc	status,2,c
  4836  000574  D00E               	goto	l1307
  4837  000576  0EEA               	movlw	low _tempajt
  4838  000578  0100               	movlb	0	; () banked
  4839  00057A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4840  00057C  0E00               	movlw	high _tempajt
  4841  00057E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4842  000580  0E55               	movlw	85
  4843  000582  6F67               	movwf	setRangeValor@_min& (0+255),b
  4844  000584  0EA0               	movlw	160
  4845  000586  6F68               	movwf	setRangeValor@_max& (0+255),b
  4846  000588  0E01               	movlw	1
  4847  00058A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4848  00058C  0E2B               	movlw	43
  4849  00058E  ECD0  F028         	call	_setRangeValor
  4850  000592                     l1307:
  4851                           
  4852                           ;main.c: 216: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4853  000592  0E20               	movlw	32
  4854  000594  EC29  F02F         	call	_btPress
  4855  000598  0900               	iorlw	0
  4856  00059A  B4D8               	btfsc	status,2,c
  4857  00059C  D261               	goto	l1316
  4858  00059E  0EEA               	movlw	low _tempajt
  4859  0005A0  0100               	movlb	0	; () banked
  4860  0005A2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4861  0005A4  0E00               	movlw	high _tempajt
  4862  0005A6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4863  0005A8  0E55               	movlw	85
  4864  0005AA  6F67               	movwf	setRangeValor@_min& (0+255),b
  4865  0005AC  0EA0               	movlw	160
  4866  0005AE  6F68               	movwf	setRangeValor@_max& (0+255),b
  4867  0005B0  0E01               	movlw	1
  4868  0005B2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4869  0005B4  0E2D               	movlw	45
  4870  0005B6  ECD0  F028         	call	_setRangeValor
  4871                           
  4872                           ;main.c: 217: break;
  4873  0005BA  D252               	goto	l1316
  4874  0005BC                     
  4875                           ;main.c: 219: if (tipo_modo_trabalho == 0) {
  4876  0005BC  0100               	movlb	0	; () banked
  4877  0005BE  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  4878  0005C0  A4D8               	btfss	status,2,c
  4879  0005C2  D037               	goto	l1311
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;main.c: 220: blink(line3, 15, 20);
  4883  0005C4  0EB0               	movlw	low _line3
  4884  0005C6  6F60               	movwf	blink@line& (0+255),b
  4885  0005C8  0E01               	movlw	high _line3
  4886  0005CA  6F61               	movwf	(blink@line+1)& (0+255),b
  4887  0005CC  0E0F               	movlw	15
  4888  0005CE  6F62               	movwf	blink@start& (0+255),b
  4889  0005D0  0E14               	movlw	20
  4890  0005D2  6F63               	movwf	blink@end& (0+255),b
  4891  0005D4  EC05  F02E         	call	_blink	;wreg free
  4892                           
  4893                           ;main.c: 221: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4894  0005D8  0E40               	movlw	64
  4895  0005DA  EC29  F02F         	call	_btPress
  4896  0005DE  0900               	iorlw	0
  4897  0005E0  B4D8               	btfsc	status,2,c
  4898  0005E2  D010               	goto	l1312
  4899  0005E4  0EE9               	movlw	low _umidajt
  4900  0005E6  0100               	movlb	0	; () banked
  4901  0005E8  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4902  0005EA  0E00               	movlw	high _umidajt
  4903  0005EC  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4904  0005EE  0EEA               	movlw	low _tempajt
  4905  0005F0  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4906  0005F2  0E00               	movlw	high _tempajt
  4907  0005F4  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4908  0005F6  0EEB               	movlw	low _clima
  4909  0005F8  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4910  0005FA  0E00               	movlw	high _clima
  4911  0005FC  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4912  0005FE  0E2B               	movlw	43
  4913  000600  ECCA  F023         	call	_setUmidade
  4914  000604                     l1312:
  4915                           
  4916                           ;main.c: 222: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4917  000604  0E20               	movlw	32
  4918  000606  EC29  F02F         	call	_btPress
  4919  00060A  0900               	iorlw	0
  4920  00060C  B4D8               	btfsc	status,2,c
  4921  00060E  D228               	goto	l1316
  4922  000610  0EE9               	movlw	low _umidajt
  4923  000612  0100               	movlb	0	; () banked
  4924  000614  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4925  000616  0E00               	movlw	high _umidajt
  4926  000618  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4927  00061A  0EEA               	movlw	low _tempajt
  4928  00061C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4929  00061E  0E00               	movlw	high _tempajt
  4930  000620  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4931  000622  0EEB               	movlw	low _clima
  4932  000624  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4933  000626  0E00               	movlw	high _clima
  4934  000628  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4935  00062A  0E2D               	movlw	45
  4936  00062C  ECCA  F023         	call	_setUmidade
  4937                           
  4938                           ;main.c: 223: } else {
  4939  000630  D217               	goto	l1316
  4940  000632                     l1311:
  4941                           
  4942                           ;main.c: 224: ajuste_parametro = 0;
  4943  000632  0E00               	movlw	0
  4944  000634  0101               	movlb	1	; () banked
  4945  000636  D001               	goto	L4
  4946  000638                     
  4947                           ; BSR set to: 1
  4948                           ;main.c: 228: ajuste_parametro = 0;
  4949                           
  4950                           ; BSR set to: 1
  4951  000638  0E00               	movlw	0
  4952  00063A                     L4:
  4953  00063A  6F98               	movwf	_ajuste_parametro& (0+255),b
  4954                           
  4955                           ;main.c: 229: }
  4956  00063C  D211               	goto	l1316
  4957  00063E                     l1305:
  4958                           
  4959                           ; BSR set to: 1
  4960  00063E  0101               	movlb	1	; () banked
  4961  000640  5198               	movf	_ajuste_parametro& (0+255),w,b
  4962                           
  4963                           ; Switch size 1, requested type "space"
  4964                           ; Number of cases is 2, Range of values is 1 to 2
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte            7     4 (average)
  4968                           ;	Chosen strategy is simple_byte
  4969  000642  0A01               	xorlw	1	; case 1
  4970  000644  B4D8               	btfsc	status,2,c
  4971  000646  D786               	goto	l1306
  4972  000648  0A03               	xorlw	3	; case 2
  4973  00064A  B4D8               	btfsc	status,2,c
  4974  00064C  D7B7               	goto	l1310
  4975  00064E  D7F4               	goto	l1315
  4976  000650                     
  4977                           ;main.c: 232: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4978                           
  4979                           ; BSR set to: 1
  4980  000650  0EDB               	movlw	low (_line1+1)
  4981  000652  0100               	movlb	0	; () banked
  4982  000654  6F81               	movwf	sprintf@wh& (0+255),b
  4983  000656  0E01               	movlw	high (_line1+1)
  4984  000658  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4985  00065A  0E2A               	movlw	low STR_79
  4986  00065C  6F83               	movwf	sprintf@f& (0+255),b
  4987  00065E  0E7D               	movlw	high STR_79
  4988  000660  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4989  000662  C0EA  F085         	movff	_tempajt,?_sprintf+4
  4990  000666  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4991  000668  EC10  F02D         	call	_sprintf	;wreg free
  4992                           
  4993                           ;main.c: 233: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4994  00066C  0100               	movlb	0	; () banked
  4995  00066E  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4996  000670  A4D8               	btfss	status,2,c
  4997  000672  D004               	goto	l1319
  4998                           
  4999                           ; BSR set to: 0
  5000  000674  0E00               	movlw	0
  5001  000676  6FE1               	movwf	(_main$1642+1)& (0+255),b
  5002  000678  0E46               	movlw	70
  5003  00067A  D003               	goto	L5
  5004  00067C                     l1319:
  5005                           
  5006                           ; BSR set to: 0
  5007                           
  5008                           ; BSR set to: 0
  5009  00067C  0E00               	movlw	0
  5010  00067E  6FE1               	movwf	(_main$1642+1)& (0+255),b
  5011  000680  0E25               	movlw	37
  5012  000682                     L5:
  5013  000682  6FE0               	movwf	_main$1642& (0+255),b
  5014                           
  5015                           ; BSR set to: 0
  5016                           
  5017                           ; BSR set to: 0
  5018  000684  0EC6               	movlw	low (_line2+1)
  5019  000686  6F81               	movwf	sprintf@wh& (0+255),b
  5020  000688  0E01               	movlw	high (_line2+1)
  5021  00068A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5022  00068C  0E09               	movlw	low STR_80
  5023  00068E  6F83               	movwf	sprintf@f& (0+255),b
  5024  000690  0E7E               	movlw	high STR_80
  5025  000692  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5026  000694  C0E9  F085         	movff	_umidajt,?_sprintf+4
  5027  000698  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5028  00069A  C0E0  F087         	movff	_main$1642,?_sprintf+6
  5029  00069E  C0E1  F088         	movff	_main$1642+1,?_sprintf+7
  5030  0006A2  EC10  F02D         	call	_sprintf	;wreg free
  5031                           
  5032                           ;main.c: 234: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  5033  0006A6  0EB1               	movlw	low (_line3+1)
  5034  0006A8  0100               	movlb	0	; () banked
  5035  0006AA  6F81               	movwf	sprintf@wh& (0+255),b
  5036  0006AC  0E01               	movlw	high (_line3+1)
  5037  0006AE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5038  0006B0  0E50               	movlw	low STR_81
  5039  0006B2  6F83               	movwf	sprintf@f& (0+255),b
  5040  0006B4  0E7F               	movlw	high STR_81
  5041  0006B6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5042  0006B8  0EEC               	movlw	low _fase
  5043  0006BA  6F60               	movwf	faseAtual@_fase& (0+255),b
  5044  0006BC  0E00               	movlw	high _fase
  5045  0006BE  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5046  0006C0  0EEA               	movlw	low _tempajt
  5047  0006C2  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5048  0006C4  0E00               	movlw	high _tempajt
  5049  0006C6  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5050  0006C8  0E3F               	movlw	63
  5051  0006CA  EC2B  F023         	call	_faseAtual
  5052  0006CE  C060  F085         	movff	?_faseAtual,?_sprintf+4
  5053  0006D2  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  5054  0006D6  EC10  F02D         	call	_sprintf	;wreg free
  5055                           
  5056                           ;main.c: 235: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  5057  0006DA  0E9C               	movlw	low (_line4+1)
  5058  0006DC  0100               	movlb	0	; () banked
  5059  0006DE  6F81               	movwf	sprintf@wh& (0+255),b
  5060  0006E0  0E01               	movlw	high (_line4+1)
  5061  0006E2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5062  0006E4  0E1F               	movlw	low STR_82
  5063  0006E6  6F83               	movwf	sprintf@f& (0+255),b
  5064  0006E8  0E7F               	movlw	high STR_82
  5065  0006EA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5066  0006EC  51EB               	movf	_clima& (0+255),w,b
  5067  0006EE  ECEC  F02C         	call	_climaAtual
  5068  0006F2  C060  F085         	movff	?_climaAtual,?_sprintf+4
  5069  0006F6  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  5070  0006FA  EC10  F02D         	call	_sprintf	;wreg free
  5071                           
  5072                           ;main.c: 236: break;
  5073  0006FE  D1B0               	goto	l1316
  5074  000700                     
  5075                           ;main.c: 238: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  5076  000700  0100               	movlb	0	; () banked
  5077  000702  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5078  000704  B4D8               	btfsc	status,2,c
  5079  000706  D004               	goto	l1324
  5080                           
  5081                           ; BSR set to: 0
  5082  000708  0EEA               	movlw	low STR_85
  5083  00070A  6FE2               	movwf	_main$1649& (0+255),b
  5084  00070C  0E7E               	movlw	high STR_85
  5085  00070E  D003               	goto	L6
  5086  000710                     l1324:
  5087                           
  5088                           ; BSR set to: 0
  5089                           
  5090                           ; BSR set to: 0
  5091  000710  0E9F               	movlw	low STR_84
  5092  000712  6FE2               	movwf	_main$1649& (0+255),b
  5093  000714  0E7F               	movlw	high STR_84
  5094  000716                     L6:
  5095  000716  6FE3               	movwf	(_main$1649+1)& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098                           
  5099                           ; BSR set to: 0
  5100  000718  0EDB               	movlw	low (_line1+1)
  5101  00071A  6F81               	movwf	sprintf@wh& (0+255),b
  5102  00071C  0E01               	movlw	high (_line1+1)
  5103  00071E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5104  000720  0E59               	movlw	low STR_83
  5105  000722  6F83               	movwf	sprintf@f& (0+255),b
  5106  000724  0E7F               	movlw	high STR_83
  5107  000726  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5108  000728  C0E2  F085         	movff	_main$1649,?_sprintf+4
  5109  00072C  C0E3  F086         	movff	_main$1649+1,?_sprintf+5
  5110  000730  EC10  F02D         	call	_sprintf	;wreg free
  5111                           
  5112                           ;main.c: 239: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  5113  000734  0100               	movlb	0	; () banked
  5114  000736  51F8               	movf	_trava_fase& (0+255),w,b
  5115  000738  A4D8               	btfss	status,2,c
  5116  00073A  D004               	goto	l1328
  5117                           
  5118                           ; BSR set to: 0
  5119  00073C  0EF5               	movlw	low STR_88
  5120  00073E  6FE4               	movwf	_main$1654& (0+255),b
  5121  000740  0E7E               	movlw	high STR_88
  5122  000742  D003               	goto	L7
  5123  000744                     l1328:
  5124                           
  5125                           ; BSR set to: 0
  5126                           
  5127                           ; BSR set to: 0
  5128  000744  0E73               	movlw	low STR_87
  5129  000746  6FE4               	movwf	_main$1654& (0+255),b
  5130  000748  0E7F               	movlw	high STR_87
  5131  00074A                     L7:
  5132  00074A  6FE5               	movwf	(_main$1654+1)& (0+255),b
  5133                           
  5134                           ; BSR set to: 0
  5135                           
  5136                           ; BSR set to: 0
  5137  00074C  0EC6               	movlw	low (_line2+1)
  5138  00074E  6F81               	movwf	sprintf@wh& (0+255),b
  5139  000750  0E01               	movlw	high (_line2+1)
  5140  000752  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5141  000754  0E29               	movlw	low STR_86
  5142  000756  6F83               	movwf	sprintf@f& (0+255),b
  5143  000758  0E7F               	movlw	high STR_86
  5144  00075A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5145  00075C  C0E4  F085         	movff	_main$1654,?_sprintf+4
  5146  000760  C0E5  F086         	movff	_main$1654+1,?_sprintf+5
  5147  000764  EC10  F02D         	call	_sprintf	;wreg free
  5148                           
  5149                           ;main.c: 240: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  5150  000768  0100               	movlb	0	; () banked
  5151  00076A  51FA               	movf	_buzzer& (0+255),w,b
  5152  00076C  A4D8               	btfss	status,2,c
  5153  00076E  D004               	goto	l1332
  5154                           
  5155                           ; BSR set to: 0
  5156  000770  0E0B               	movlw	low STR_91
  5157  000772  6FE6               	movwf	_main$1659& (0+255),b
  5158  000774  0E7F               	movlw	high STR_91
  5159  000776  D003               	goto	L8
  5160  000778                     l1332:
  5161                           
  5162                           ; BSR set to: 0
  5163                           
  5164                           ; BSR set to: 0
  5165  000778  0EA6               	movlw	low STR_90
  5166  00077A  6FE6               	movwf	_main$1659& (0+255),b
  5167  00077C  0E7F               	movlw	high STR_90
  5168  00077E                     L8:
  5169  00077E  6FE7               	movwf	(_main$1659+1)& (0+255),b
  5170                           
  5171                           ; BSR set to: 0
  5172                           
  5173                           ; BSR set to: 0
  5174  000780  0EB1               	movlw	low (_line3+1)
  5175  000782  6F81               	movwf	sprintf@wh& (0+255),b
  5176  000784  0E01               	movlw	high (_line3+1)
  5177  000786  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5178  000788  0E00               	movlw	low STR_89
  5179  00078A  6F83               	movwf	sprintf@f& (0+255),b
  5180  00078C  0E7F               	movlw	high STR_89
  5181  00078E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5182  000790  C0E6  F085         	movff	_main$1659,?_sprintf+4
  5183  000794  C0E7  F086         	movff	_main$1659+1,?_sprintf+5
  5184  000798  EC10  F02D         	call	_sprintf	;wreg free
  5185                           
  5186                           ;main.c: 241: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  5187  00079C  0E9C               	movlw	low (_line4+1)
  5188  00079E  0100               	movlb	0	; () banked
  5189  0007A0  6F81               	movwf	sprintf@wh& (0+255),b
  5190  0007A2  0E01               	movlw	high (_line4+1)
  5191  0007A4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5192  0007A6  0E8E               	movlw	low STR_92
  5193  0007A8  6F83               	movwf	sprintf@f& (0+255),b
  5194  0007AA  0E7C               	movlw	high STR_92
  5195  0007AC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5196  0007AE  EC10  F02D         	call	_sprintf	;wreg free
  5197                           
  5198                           ;main.c: 242: break;
  5199  0007B2  D156               	goto	l1316
  5200  0007B4                     
  5201                           ;main.c: 244: sprintf(&line1[1], "CONFIG WIFI      >>");
  5202  0007B4  0EDB               	movlw	low (_line1+1)
  5203  0007B6  0100               	movlb	0	; () banked
  5204  0007B8  6F81               	movwf	sprintf@wh& (0+255),b
  5205  0007BA  0E01               	movlw	high (_line1+1)
  5206  0007BC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5207  0007BE  0E7A               	movlw	low STR_93
  5208  0007C0  6F83               	movwf	sprintf@f& (0+255),b
  5209  0007C2  0E7C               	movlw	high STR_93
  5210  0007C4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5211  0007C6  EC10  F02D         	call	_sprintf	;wreg free
  5212                           
  5213                           ;main.c: 245: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5214  0007CA  0EC6               	movlw	low (_line2+1)
  5215  0007CC  0100               	movlb	0	; () banked
  5216  0007CE  6F81               	movwf	sprintf@wh& (0+255),b
  5217  0007D0  0E01               	movlw	high (_line2+1)
  5218  0007D2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5219  0007D4  0EA2               	movlw	low STR_94
  5220  0007D6  6F83               	movwf	sprintf@f& (0+255),b
  5221  0007D8  0E7C               	movlw	high STR_94
  5222  0007DA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5223  0007DC  EC10  F02D         	call	_sprintf	;wreg free
  5224                           
  5225                           ;main.c: 246: break;
  5226  0007E0  D13F               	goto	l1316
  5227  0007E2                     
  5228                           ;main.c: 248: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5229  0007E2  0EDB               	movlw	low (_line1+1)
  5230  0007E4  0100               	movlb	0	; () banked
  5231  0007E6  6F81               	movwf	sprintf@wh& (0+255),b
  5232  0007E8  0E01               	movlw	high (_line1+1)
  5233  0007EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5234  0007EC  0EA6               	movlw	low STR_95
  5235  0007EE  6F83               	movwf	sprintf@f& (0+255),b
  5236  0007F0  0E7D               	movlw	high STR_95
  5237  0007F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5238  0007F4  C1F3  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5239  0007F8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5240  0007FA  C0F0  F087         	movff	_h_venotinha,?_sprintf+6
  5241  0007FE  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5242  000800  EC10  F02D         	call	_sprintf	;wreg free
  5243                           
  5244                           ;main.c: 249: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5245  000804  0EC6               	movlw	low (_line2+1)
  5246  000806  0100               	movlb	0	; () banked
  5247  000808  6F81               	movwf	sprintf@wh& (0+255),b
  5248  00080A  0E01               	movlw	high (_line2+1)
  5249  00080C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5250  00080E  0EB7               	movlw	low STR_96
  5251  000810  6F83               	movwf	sprintf@f& (0+255),b
  5252  000812  0E7D               	movlw	high STR_96
  5253  000814  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5254  000816  C0F7  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5255  00081A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5256  00081C  C0F1  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5257  000820  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5258  000822  EC10  F02D         	call	_sprintf	;wreg free
  5259                           
  5260                           ;main.c: 250: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5261  000826  0EB1               	movlw	low (_line3+1)
  5262  000828  0100               	movlb	0	; () banked
  5263  00082A  6F81               	movwf	sprintf@wh& (0+255),b
  5264  00082C  0E01               	movlw	high (_line3+1)
  5265  00082E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5266  000830  0EC8               	movlw	low STR_97
  5267  000832  6F83               	movwf	sprintf@f& (0+255),b
  5268  000834  0E7D               	movlw	high STR_97
  5269  000836  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5270  000838  C0EF  F085         	movff	_h_abafador,?_sprintf+4
  5271  00083C  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5272  00083E  C0EE  F087         	movff	_h_buzzer,?_sprintf+6
  5273  000842  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5274  000844  EC10  F02D         	call	_sprintf	;wreg free
  5275                           
  5276                           ;main.c: 251: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5277  000848  0E9C               	movlw	low (_line4+1)
  5278  00084A  0100               	movlb	0	; () banked
  5279  00084C  6F81               	movwf	sprintf@wh& (0+255),b
  5280  00084E  0E01               	movlw	high (_line4+1)
  5281  000850  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5282  000852  0ED9               	movlw	low STR_98
  5283  000854  6F83               	movwf	sprintf@f& (0+255),b
  5284  000856  0E7D               	movlw	high STR_98
  5285  000858  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5286  00085A  C1F4  F085         	movff	_h_flap,?_sprintf+4
  5287  00085E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5288  000860  C0F5  F087         	movff	_t_flap_ligado,?_sprintf+6
  5289  000864  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5290  000866  EC10  F02D         	call	_sprintf	;wreg free
  5291                           
  5292                           ;main.c: 252: break;
  5293  00086A  D0FA               	goto	l1316
  5294  00086C                     
  5295                           ;main.c: 254: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5296  00086C  0EDB               	movlw	low (_line1+1)
  5297  00086E  0100               	movlb	0	; () banked
  5298  000870  6F81               	movwf	sprintf@wh& (0+255),b
  5299  000872  0E01               	movlw	high (_line1+1)
  5300  000874  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5301  000876  0E3C               	movlw	low STR_99
  5302  000878  6F83               	movwf	sprintf@f& (0+255),b
  5303  00087A  0E7D               	movlw	high STR_99
  5304  00087C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5305  00087E  C0F4  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5306  000882  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5307  000884  C1EF  F087         	movff	_wifi_SENHA,?_sprintf+6
  5308  000888  C1F0  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5309  00088C  EC10  F02D         	call	_sprintf	;wreg free
  5310                           
  5311                           ;main.c: 255: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5312  000890  0EC6               	movlw	low (_line2+1)
  5313  000892  0100               	movlb	0	; () banked
  5314  000894  6F81               	movwf	sprintf@wh& (0+255),b
  5315  000896  0E01               	movlw	high (_line2+1)
  5316  000898  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5317  00089A  0E4E               	movlw	low STR_100
  5318  00089C  6F83               	movwf	sprintf@f& (0+255),b
  5319  00089E  0E7D               	movlw	high STR_100
  5320  0008A0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5321  0008A2  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5322  0008A6  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5323  0008A8  C0ED  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5324  0008AC  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5325  0008AE  EC10  F02D         	call	_sprintf	;wreg free
  5326                           
  5327                           ;main.c: 256: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5328  0008B2  0EB1               	movlw	low (_line3+1)
  5329  0008B4  0100               	movlb	0	; () banked
  5330  0008B6  6F81               	movwf	sprintf@wh& (0+255),b
  5331  0008B8  0E01               	movlw	high (_line3+1)
  5332  0008BA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5333  0008BC  0E60               	movlw	low STR_101
  5334  0008BE  6F83               	movwf	sprintf@f& (0+255),b
  5335  0008C0  0E7D               	movlw	high STR_101
  5336  0008C2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5337  0008C4  C0F3  F085         	movff	_t_temp_automatica,?_sprintf+4
  5338  0008C8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5339  0008CA  C0F2  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5340  0008CE  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5341  0008D0  EC10  F02D         	call	_sprintf	;wreg free
  5342                           
  5343                           ;main.c: 257: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5344  0008D4  0E9C               	movlw	low (_line4+1)
  5345  0008D6  0100               	movlb	0	; () banked
  5346  0008D8  6F81               	movwf	sprintf@wh& (0+255),b
  5347  0008DA  0E01               	movlw	high (_line4+1)
  5348  0008DC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5349  0008DE  0E3D               	movlw	low STR_102
  5350  0008E0  6F83               	movwf	sprintf@f& (0+255),b
  5351  0008E2  0E7F               	movlw	high STR_102
  5352  0008E4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5353  0008E6  C1F1  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5354  0008EA  C1F2  F086         	movff	_wifi_habilita_alteracao+1,?_sprintf+5
  5355  0008EE  EC10  F02D         	call	_sprintf	;wreg free
  5356                           
  5357                           ;main.c: 258: break;
  5358  0008F2  D0B6               	goto	l1316
  5359  0008F4                     
  5360                           ;main.c: 260: sprintf(line1, "REDE:%s", ssid);
  5361  0008F4  0EDA               	movlw	low _line1
  5362  0008F6  0100               	movlb	0	; () banked
  5363  0008F8  6F81               	movwf	sprintf@wh& (0+255),b
  5364  0008FA  0E01               	movlw	high _line1
  5365  0008FC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5366  0008FE  0E7B               	movlw	low STR_103
  5367  000900  6F83               	movwf	sprintf@f& (0+255),b
  5368  000902  0E7F               	movlw	high STR_103
  5369  000904  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5370  000906  0EA1               	movlw	low _ssid
  5371  000908  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5372  00090A  0E02               	movlw	high _ssid
  5373  00090C  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5374  00090E  EC10  F02D         	call	_sprintf	;wreg free
  5375                           
  5376                           ;main.c: 261: sprintf(line2, "SENHA:%s", senha);
  5377  000912  0EC5               	movlw	low _line2
  5378  000914  0100               	movlb	0	; () banked
  5379  000916  6F81               	movwf	sprintf@wh& (0+255),b
  5380  000918  0E01               	movlw	high _line2
  5381  00091A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5382  00091C  0E62               	movlw	low STR_104
  5383  00091E  6F83               	movwf	sprintf@f& (0+255),b
  5384  000920  0E7F               	movlw	high STR_104
  5385  000922  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5386  000924  0E92               	movlw	low _senha
  5387  000926  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5388  000928  0E02               	movlw	high _senha
  5389  00092A  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5390  00092C  EC10  F02D         	call	_sprintf	;wreg free
  5391                           
  5392                           ;main.c: 263: sprintf(line3, "NS: %s", wifi_MAC);
  5393  000930  0EB0               	movlw	low _line3
  5394  000932  0100               	movlb	0	; () banked
  5395  000934  6F81               	movwf	sprintf@wh& (0+255),b
  5396  000936  0E01               	movlw	high _line3
  5397  000938  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5398  00093A  0EB4               	movlw	low STR_105
  5399  00093C  6F83               	movwf	sprintf@f& (0+255),b
  5400  00093E  0E7F               	movlw	high STR_105
  5401  000940  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5402  000942  0EB0               	movlw	low _wifi_MAC
  5403  000944  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5404  000946  0E02               	movlw	high _wifi_MAC
  5405  000948  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5406  00094A  EC10  F02D         	call	_sprintf	;wreg free
  5407                           
  5408                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5409  00094E  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5410  000952  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5411  000956  0E00               	movlw	0
  5412  000958  0100               	movlb	0	; () banked
  5413  00095A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5414  00095C  0E27               	movlw	39
  5415  00095E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5416  000960  ECA9  F02E         	call	___wmul	;wreg free
  5417  000964  C060  F0D8         	movff	?___wmul,_main$2492
  5418  000968  C061  F0D9         	movff	?___wmul+1,_main$2492+1
  5419                           
  5420                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5421  00096C  0E9B               	movlw	low _line4
  5422  00096E  0100               	movlb	0	; () banked
  5423  000970  6F81               	movwf	sprintf@wh& (0+255),b
  5424  000972  0E01               	movlw	high _line4
  5425  000974  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5426  000976  0E95               	movlw	low STR_106
  5427  000978  6F83               	movwf	sprintf@f& (0+255),b
  5428  00097A  0E7D               	movlw	high STR_106
  5429  00097C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5430  00097E  C0D8  F085         	movff	_main$2492,?_sprintf+4
  5431  000982  C0D9  F086         	movff	_main$2492+1,?_sprintf+5
  5432  000986  EC10  F02D         	call	_sprintf	;wreg free
  5433                           
  5434                           ;main.c: 265: break;
  5435  00098A  D06A               	goto	l1316
  5436  00098C                     
  5437                           ;main.c: 267: sprintf(&line1[1], "CONFIGURAR       >>");
  5438  00098C  0EDB               	movlw	low (_line1+1)
  5439  00098E  0100               	movlb	0	; () banked
  5440  000990  6F81               	movwf	sprintf@wh& (0+255),b
  5441  000992  0E01               	movlw	high (_line1+1)
  5442  000994  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5443  000996  0E66               	movlw	low STR_107
  5444  000998  6F83               	movwf	sprintf@f& (0+255),b
  5445  00099A  0E7C               	movlw	high STR_107
  5446  00099C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5447  00099E  EC10  F02D         	call	_sprintf	;wreg free
  5448                           
  5449                           ;main.c: 268: break;
  5450  0009A2  D05E               	goto	l1316
  5451  0009A4                     
  5452                           ;main.c: 270: alterarConfigWifi();
  5453  0009A4  EC10  F01B         	call	_alterarConfigWifi	;wreg free
  5454                           
  5455                           ;main.c: 271: break;
  5456  0009A8  D05B               	goto	l1316
  5457  0009AA                     
  5458                           ;main.c: 273: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5459  0009AA  0EDB               	movlw	low (_line1+1)
  5460  0009AC  0100               	movlb	0	; () banked
  5461  0009AE  6F81               	movwf	sprintf@wh& (0+255),b
  5462  0009B0  0E01               	movlw	high (_line1+1)
  5463  0009B2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5464  0009B4  0E04               	movlw	low STR_108
  5465  0009B6  6F83               	movwf	sprintf@f& (0+255),b
  5466  0009B8  0E7D               	movlw	high STR_108
  5467  0009BA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5468  0009BC  C04E  F085         	movff	_t_fim_fase1,?_sprintf+4
  5469  0009C0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5470  0009C2  EC10  F02D         	call	_sprintf	;wreg free
  5471                           
  5472                           ;main.c: 274: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5473  0009C6  0EC6               	movlw	low (_line2+1)
  5474  0009C8  0100               	movlb	0	; () banked
  5475  0009CA  6F81               	movwf	sprintf@wh& (0+255),b
  5476  0009CC  0E01               	movlw	high (_line2+1)
  5477  0009CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5478  0009D0  0E17               	movlw	low STR_109
  5479  0009D2  6F83               	movwf	sprintf@f& (0+255),b
  5480  0009D4  0E7D               	movlw	high STR_109
  5481  0009D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5482  0009D8  C04D  F085         	movff	_t_fim_fase2,?_sprintf+4
  5483  0009DC  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5484  0009DE  EC10  F02D         	call	_sprintf	;wreg free
  5485                           
  5486                           ;main.c: 275: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5487  0009E2  0EB1               	movlw	low (_line3+1)
  5488  0009E4  0100               	movlb	0	; () banked
  5489  0009E6  6F81               	movwf	sprintf@wh& (0+255),b
  5490  0009E8  0E01               	movlw	high (_line3+1)
  5491  0009EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5492  0009EC  0EF1               	movlw	low STR_110
  5493  0009EE  6F83               	movwf	sprintf@f& (0+255),b
  5494  0009F0  0E7C               	movlw	high STR_110
  5495  0009F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5496  0009F4  C04C  F085         	movff	_t_fim_fase3,?_sprintf+4
  5497  0009F8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5498  0009FA  EC10  F02D         	call	_sprintf	;wreg free
  5499                           
  5500                           ;main.c: 276: sprintf(line4, "*0 nao passa fase");
  5501  0009FE  0E9B               	movlw	low _line4
  5502  000A00  0100               	movlb	0	; () banked
  5503  000A02  6F81               	movwf	sprintf@wh& (0+255),b
  5504  000A04  0E01               	movlw	high _line4
  5505  000A06  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5506  000A08  0E72               	movlw	low STR_111
  5507  000A0A  6F83               	movwf	sprintf@f& (0+255),b
  5508  000A0C  0E7D               	movlw	high STR_111
  5509  000A0E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5510  000A10  EC10  F02D         	call	_sprintf	;wreg free
  5511                           
  5512                           ;main.c: 277: break;
  5513  000A14  D025               	goto	l1316
  5514  000A16  0E00               	movlw	0
  5515  000A18  0100               	movlb	0	; () banked
  5516  000A1A  6FFB               	movwf	_menu& (0+255),b
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;main.c: 280: }
  5520                           
  5521                           ;main.c: 279: break;
  5522  000A1C  D021               	goto	l1316
  5523  000A1E                     l1284:
  5524                           
  5525                           ; BSR set to: 0
  5526  000A1E  0100               	movlb	0	; () banked
  5527  000A20  51FB               	movf	_menu& (0+255),w,b
  5528                           
  5529                           ; Switch size 1, requested type "space"
  5530                           ; Number of cases is 10, Range of values is 0 to 11
  5531                           ; switch strategies available:
  5532                           ; Name         Instructions Cycles
  5533                           ; simple_byte           31    16 (average)
  5534                           ;	Chosen strategy is simple_byte
  5535  000A22  0A00               	xorlw	0	; case 0
  5536  000A24  B4D8               	btfsc	status,2,c
  5537  000A26  D4B1               	goto	l1285
  5538  000A28  0A01               	xorlw	1	; case 1
  5539  000A2A  B4D8               	btfsc	status,2,c
  5540  000A2C  D611               	goto	l1317
  5541  000A2E  0A03               	xorlw	3	; case 2
  5542  000A30  B4D8               	btfsc	status,2,c
  5543  000A32  D666               	goto	l1322
  5544  000A34  0A01               	xorlw	1	; case 3
  5545  000A36  B4D8               	btfsc	status,2,c
  5546  000A38  D6BD               	goto	l1335
  5547  000A3A  0A06               	xorlw	6	; case 5
  5548  000A3C  B4D8               	btfsc	status,2,c
  5549  000A3E  D6D1               	goto	l1336
  5550  000A40  0A03               	xorlw	3	; case 6
  5551  000A42  B4D8               	btfsc	status,2,c
  5552  000A44  D713               	goto	l1337
  5553  000A46  0A0E               	xorlw	14	; case 8
  5554  000A48  B4D8               	btfsc	status,2,c
  5555  000A4A  D754               	goto	l1338
  5556  000A4C  0A01               	xorlw	1	; case 9
  5557  000A4E  B4D8               	btfsc	status,2,c
  5558  000A50  D79D               	goto	l1339
  5559  000A52  0A03               	xorlw	3	; case 10
  5560  000A54  B4D8               	btfsc	status,2,c
  5561  000A56  D7A6               	goto	l1340
  5562  000A58  0A01               	xorlw	1	; case 11
  5563  000A5A  B4D8               	btfsc	status,2,c
  5564  000A5C  D7A6               	goto	l1341
  5565  000A5E  D7DB               	goto	l1342
  5566  000A60                     l1316:
  5567                           
  5568                           ;main.c: 284: if (menu == 1 | menu == 2 | menu == 3) {
  5569                           
  5570                           ; BSR set to: 0
  5571  000A60  0100               	movlb	0	; () banked
  5572  000A62  05FB               	decf	_menu& (0+255),w,b
  5573  000A64  B4D8               	btfsc	status,2,c
  5574  000A66  D008               	goto	u14630
  5575                           
  5576                           ; BSR set to: 0
  5577  000A68  0E02               	movlw	2
  5578  000A6A  19FB               	xorwf	_menu& (0+255),w,b
  5579  000A6C  B4D8               	btfsc	status,2,c
  5580  000A6E  D004               	goto	u14630
  5581                           
  5582                           ; BSR set to: 0
  5583  000A70  0E03               	movlw	3
  5584  000A72  19FB               	xorwf	_menu& (0+255),w,b
  5585  000A74  A4D8               	btfss	status,2,c
  5586  000A76  D1C9               	goto	l1343
  5587  000A78                     u14630:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;main.c: 285: ajuste_parametro = 0;
  5591                           
  5592                           ; BSR set to: 0
  5593  000A78  0E00               	movlw	0
  5594  000A7A  0101               	movlb	1	; () banked
  5595  000A7C  6F98               	movwf	_ajuste_parametro& (0+255),b
  5596                           
  5597                           ;main.c: 287: switch (opcaomenu) {
  5598  000A7E  D188               	goto	l1346
  5599  000A80                     
  5600                           ; BSR set to: 1
  5601                           ;main.c: 289: opcaomenu = 10;
  5602                           
  5603                           ; BSR set to: 1
  5604  000A80  0E0A               	movlw	10
  5605  000A82  D184               	goto	L11
  5606  000A84                     
  5607                           ; BSR set to: 1
  5608                           ;main.c: 292: menu = 1;
  5609                           
  5610                           ; BSR set to: 1
  5611  000A84  0E01               	movlw	1
  5612  000A86  0100               	movlb	0	; () banked
  5613  000A88  6FFB               	movwf	_menu& (0+255),b
  5614                           
  5615                           ;main.c: 293: line1[0] = '>';
  5616  000A8A  0E3E               	movlw	62
  5617  000A8C  0101               	movlb	1	; () banked
  5618  000A8E  6FDA               	movwf	_line1& (0+255),b
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;main.c: 294: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  5622  000A90  0E40               	movlw	64
  5623  000A92  EC29  F02F         	call	_btPress
  5624  000A96  0900               	iorlw	0
  5625  000A98  B4D8               	btfsc	status,2,c
  5626  000A9A  D00E               	goto	l1350
  5627  000A9C  0EEA               	movlw	low _tempajt
  5628  000A9E  0100               	movlb	0	; () banked
  5629  000AA0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5630  000AA2  0E00               	movlw	high _tempajt
  5631  000AA4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5632  000AA6  0E55               	movlw	85
  5633  000AA8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5634  000AAA  0EA0               	movlw	160
  5635  000AAC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5636  000AAE  0E01               	movlw	1
  5637  000AB0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5638  000AB2  0E2B               	movlw	43
  5639  000AB4  ECD0  F028         	call	_setRangeValor
  5640  000AB8                     l1350:
  5641                           
  5642                           ;main.c: 295: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  5643  000AB8  0E20               	movlw	32
  5644  000ABA  EC29  F02F         	call	_btPress
  5645  000ABE  0900               	iorlw	0
  5646  000AC0  B4D8               	btfsc	status,2,c
  5647  000AC2  D189               	goto	l1348
  5648  000AC4  0EEA               	movlw	low _tempajt
  5649  000AC6  0100               	movlb	0	; () banked
  5650  000AC8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5651  000ACA  0E00               	movlw	high _tempajt
  5652  000ACC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5653  000ACE  0E55               	movlw	85
  5654  000AD0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5655  000AD2  0EA0               	movlw	160
  5656  000AD4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5657  000AD6  0E01               	movlw	1
  5658  000AD8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5659  000ADA  0E2D               	movlw	45
  5660  000ADC  ECD0  F028         	call	_setRangeValor
  5661                           
  5662                           ;main.c: 296: break;
  5663  000AE0  D17A               	goto	l1348
  5664  000AE2                     
  5665                           ;main.c: 298: line2[0] = '>';
  5666  000AE2  0E3E               	movlw	62
  5667  000AE4  0101               	movlb	1	; () banked
  5668  000AE6  6FC5               	movwf	_line2& (0+255),b
  5669                           
  5670                           ;main.c: 299: if (tipo_modo_trabalho == 0) {
  5671  000AE8  0100               	movlb	0	; () banked
  5672  000AEA  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5673  000AEC  A4D8               	btfss	status,2,c
  5674  000AEE  D173               	goto	l1348
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;main.c: 300: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5678  000AF0  0E40               	movlw	64
  5679  000AF2  EC29  F02F         	call	_btPress
  5680  000AF6  0900               	iorlw	0
  5681  000AF8  B4D8               	btfsc	status,2,c
  5682  000AFA  D010               	goto	l1354
  5683  000AFC  0EE9               	movlw	low _umidajt
  5684  000AFE  0100               	movlb	0	; () banked
  5685  000B00  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5686  000B02  0E00               	movlw	high _umidajt
  5687  000B04  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5688  000B06  0EEA               	movlw	low _tempajt
  5689  000B08  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5690  000B0A  0E00               	movlw	high _tempajt
  5691  000B0C  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5692  000B0E  0EEB               	movlw	low _clima
  5693  000B10  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5694  000B12  0E00               	movlw	high _clima
  5695  000B14  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5696  000B16  0E2B               	movlw	43
  5697  000B18  ECCA  F023         	call	_setUmidade
  5698  000B1C                     l1354:
  5699                           
  5700                           ;main.c: 301: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5701  000B1C  0E20               	movlw	32
  5702  000B1E  EC29  F02F         	call	_btPress
  5703  000B22  0900               	iorlw	0
  5704  000B24  B4D8               	btfsc	status,2,c
  5705  000B26  D157               	goto	l1348
  5706  000B28  0EE9               	movlw	low _umidajt
  5707  000B2A  0100               	movlb	0	; () banked
  5708  000B2C  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5709  000B2E  0E00               	movlw	high _umidajt
  5710  000B30  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5711  000B32  0EEA               	movlw	low _tempajt
  5712  000B34  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5713  000B36  0E00               	movlw	high _tempajt
  5714  000B38  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5715  000B3A  0EEB               	movlw	low _clima
  5716  000B3C  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5717  000B3E  0E00               	movlw	high _clima
  5718  000B40  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5719  000B42  0E2D               	movlw	45
  5720  000B44  ECCA  F023         	call	_setUmidade
  5721                           
  5722                           ;main.c: 302: }
  5723                           ;main.c: 303: break;
  5724  000B48  D146               	goto	l1348
  5725  000B4A                     
  5726                           ;main.c: 305: line3[0] = '>';
  5727  000B4A  0E3E               	movlw	62
  5728  000B4C  0101               	movlb	1	; () banked
  5729  000B4E  6FB0               	movwf	_line3& (0+255),b
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;main.c: 306: if (btPress(64)) {
  5733  000B50  0E40               	movlw	64
  5734  000B52  EC29  F02F         	call	_btPress
  5735  000B56  0900               	iorlw	0
  5736  000B58  B4D8               	btfsc	status,2,c
  5737  000B5A  D02A               	goto	l1357
  5738                           
  5739                           ;main.c: 307: setRangeValor('+', &fase, 1, 4, 4);
  5740  000B5C  0EEC               	movlw	low _fase
  5741  000B5E  0100               	movlb	0	; () banked
  5742  000B60  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5743  000B62  0E00               	movlw	high _fase
  5744  000B64  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5745  000B66  0E01               	movlw	1
  5746  000B68  6F67               	movwf	setRangeValor@_min& (0+255),b
  5747  000B6A  0E04               	movlw	4
  5748  000B6C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5749  000B6E  0E04               	movlw	4
  5750  000B70  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5751  000B72  0E2B               	movlw	43
  5752  000B74  ECD0  F028         	call	_setRangeValor
  5753                           
  5754                           ;main.c: 308: faseAtual('A', &fase, &tempajt);
  5755  000B78  0EEC               	movlw	low _fase
  5756  000B7A  0100               	movlb	0	; () banked
  5757  000B7C  6F60               	movwf	faseAtual@_fase& (0+255),b
  5758  000B7E  0E00               	movlw	high _fase
  5759  000B80  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5760  000B82  0EEA               	movlw	low _tempajt
  5761  000B84  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5762  000B86  0E00               	movlw	high _tempajt
  5763  000B88  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5764  000B8A  0E41               	movlw	65
  5765  000B8C  EC2B  F023         	call	_faseAtual
  5766                           
  5767                           ;main.c: 309: setUmidade('A', &umidajt, &tempajt, &clima);
  5768  000B90  0EE9               	movlw	low _umidajt
  5769  000B92  0100               	movlb	0	; () banked
  5770  000B94  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5771  000B96  0E00               	movlw	high _umidajt
  5772  000B98  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5773  000B9A  0EEA               	movlw	low _tempajt
  5774  000B9C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5775  000B9E  0E00               	movlw	high _tempajt
  5776  000BA0  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5777  000BA2  0EEB               	movlw	low _clima
  5778  000BA4  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5779  000BA6  0E00               	movlw	high _clima
  5780  000BA8  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5781  000BAA  0E41               	movlw	65
  5782  000BAC  ECCA  F023         	call	_setUmidade
  5783  000BB0                     l1357:
  5784                           
  5785                           ;main.c: 310: }
  5786                           ;main.c: 311: if (btPress(32)) {
  5787  000BB0  0E20               	movlw	32
  5788  000BB2  EC29  F02F         	call	_btPress
  5789  000BB6  0900               	iorlw	0
  5790  000BB8  B4D8               	btfsc	status,2,c
  5791  000BBA  D10D               	goto	l1348
  5792                           
  5793                           ;main.c: 312: setRangeValor('-', &fase, 1, 4, 4);
  5794  000BBC  0EEC               	movlw	low _fase
  5795  000BBE  0100               	movlb	0	; () banked
  5796  000BC0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5797  000BC2  0E00               	movlw	high _fase
  5798  000BC4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5799  000BC6  0E01               	movlw	1
  5800  000BC8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5801  000BCA  0E04               	movlw	4
  5802  000BCC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5803  000BCE  0E04               	movlw	4
  5804  000BD0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5805  000BD2  0E2D               	movlw	45
  5806  000BD4  ECD0  F028         	call	_setRangeValor
  5807                           
  5808                           ;main.c: 313: faseAtual('A', &fase, &tempajt);
  5809  000BD8  0EEC               	movlw	low _fase
  5810  000BDA  0100               	movlb	0	; () banked
  5811  000BDC  6F60               	movwf	faseAtual@_fase& (0+255),b
  5812  000BDE  0E00               	movlw	high _fase
  5813  000BE0  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5814  000BE2  0EEA               	movlw	low _tempajt
  5815  000BE4  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5816  000BE6  0E00               	movlw	high _tempajt
  5817  000BE8  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5818  000BEA  0E41               	movlw	65
  5819  000BEC  EC2B  F023         	call	_faseAtual
  5820                           
  5821                           ;main.c: 314: setUmidade('A', &umidajt, &tempajt, &clima);
  5822  000BF0  0EE9               	movlw	low _umidajt
  5823  000BF2  0100               	movlb	0	; () banked
  5824  000BF4  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5825  000BF6  0E00               	movlw	high _umidajt
  5826  000BF8  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5827  000BFA  0EEA               	movlw	low _tempajt
  5828  000BFC  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5829  000BFE  0E00               	movlw	high _tempajt
  5830  000C00  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5831  000C02  0EEB               	movlw	low _clima
  5832  000C04  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5833  000C06  0E00               	movlw	high _clima
  5834  000C08  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5835  000C0A  0E41               	movlw	65
  5836  000C0C  ECCA  F023         	call	_setUmidade
  5837                           
  5838                           ;main.c: 315: }
  5839                           ;main.c: 316: break;
  5840  000C10  D0E2               	goto	l1348
  5841  000C12                     
  5842                           ;main.c: 318: menu = 1;
  5843  000C12  0E01               	movlw	1
  5844  000C14  0100               	movlb	0	; () banked
  5845  000C16  6FFB               	movwf	_menu& (0+255),b
  5846                           
  5847                           ;main.c: 319: line4[0] = '>';
  5848  000C18  0E3E               	movlw	62
  5849  000C1A  0101               	movlb	1	; () banked
  5850  000C1C  6F9B               	movwf	_line4& (0+255),b
  5851                           
  5852                           ; BSR set to: 1
  5853                           ;main.c: 320: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5854  000C1E  0E40               	movlw	64
  5855  000C20  EC29  F02F         	call	_btPress
  5856  000C24  0900               	iorlw	0
  5857  000C26  B4D8               	btfsc	status,2,c
  5858  000C28  D00E               	goto	l1360
  5859  000C2A  0EEB               	movlw	low _clima
  5860  000C2C  0100               	movlb	0	; () banked
  5861  000C2E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5862  000C30  0E00               	movlw	high _clima
  5863  000C32  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5864  000C34  0E01               	movlw	1
  5865  000C36  6F67               	movwf	setRangeValor@_min& (0+255),b
  5866  000C38  0E03               	movlw	3
  5867  000C3A  6F68               	movwf	setRangeValor@_max& (0+255),b
  5868  000C3C  0E05               	movlw	5
  5869  000C3E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5870  000C40  0E2B               	movlw	43
  5871  000C42  ECD0  F028         	call	_setRangeValor
  5872  000C46                     l1360:
  5873                           
  5874                           ;main.c: 321: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5875  000C46  0E20               	movlw	32
  5876  000C48  EC29  F02F         	call	_btPress
  5877  000C4C  0900               	iorlw	0
  5878  000C4E  B4D8               	btfsc	status,2,c
  5879  000C50  D0C2               	goto	l1348
  5880  000C52  0EEB               	movlw	low _clima
  5881  000C54  0100               	movlb	0	; () banked
  5882  000C56  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5883  000C58  0E00               	movlw	high _clima
  5884  000C5A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5885  000C5C  0E01               	movlw	1
  5886  000C5E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5887  000C60  0E03               	movlw	3
  5888  000C62  6F68               	movwf	setRangeValor@_max& (0+255),b
  5889  000C64  0E05               	movlw	5
  5890  000C66  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5891  000C68  0E2D               	movlw	45
  5892  000C6A  ECD0  F028         	call	_setRangeValor
  5893                           
  5894                           ;main.c: 322: break;
  5895  000C6E  D0B3               	goto	l1348
  5896  000C70                     
  5897                           ;main.c: 324: menu = 2;
  5898  000C70  0E02               	movlw	2
  5899  000C72  0100               	movlb	0	; () banked
  5900  000C74  6FFB               	movwf	_menu& (0+255),b
  5901                           
  5902                           ;main.c: 325: line1[0] = '>';
  5903  000C76  0E3E               	movlw	62
  5904  000C78  0101               	movlb	1	; () banked
  5905  000C7A  6FDA               	movwf	_line1& (0+255),b
  5906                           
  5907                           ; BSR set to: 1
  5908                           ;main.c: 326: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5909  000C7C  0E40               	movlw	64
  5910  000C7E  EC29  F02F         	call	_btPress
  5911  000C82  0900               	iorlw	0
  5912  000C84  A4D8               	btfss	status,2,c
  5913  000C86  D006               	goto	u14740
  5914  000C88  0E20               	movlw	32
  5915  000C8A  EC29  F02F         	call	_btPress
  5916  000C8E  0900               	iorlw	0
  5917  000C90  B4D8               	btfsc	status,2,c
  5918  000C92  D0A1               	goto	l1348
  5919  000C94                     u14740:
  5920  000C94  0EF6               	movlw	low _tipo_modo_trabalho
  5921  000C96  0100               	movlb	0	; () banked
  5922  000C98  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5923  000C9A  0E00               	movlw	high _tipo_modo_trabalho
  5924  000C9C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5925  000C9E  0E00               	movlw	0
  5926  000CA0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5927  000CA2  0E01               	movlw	1
  5928  000CA4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5929  000CA6  0E06               	movlw	6
  5930  000CA8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5931  000CAA  0E2B               	movlw	43
  5932  000CAC  ECD0  F028         	call	_setRangeValor
  5933                           
  5934                           ;main.c: 327: break;
  5935  000CB0  D092               	goto	l1348
  5936  000CB2                     
  5937                           ;main.c: 329: line2[0] = '>';
  5938  000CB2  0E3E               	movlw	62
  5939  000CB4  0101               	movlb	1	; () banked
  5940  000CB6  6FC5               	movwf	_line2& (0+255),b
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;main.c: 330: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5944  000CB8  0E40               	movlw	64
  5945  000CBA  EC29  F02F         	call	_btPress
  5946  000CBE  0900               	iorlw	0
  5947  000CC0  A4D8               	btfss	status,2,c
  5948  000CC2  D006               	goto	u14760
  5949  000CC4  0E20               	movlw	32
  5950  000CC6  EC29  F02F         	call	_btPress
  5951  000CCA  0900               	iorlw	0
  5952  000CCC  B4D8               	btfsc	status,2,c
  5953  000CCE  D083               	goto	l1348
  5954  000CD0                     u14760:
  5955  000CD0  0EF8               	movlw	low _trava_fase
  5956  000CD2  0100               	movlb	0	; () banked
  5957  000CD4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5958  000CD6  0E00               	movlw	high _trava_fase
  5959  000CD8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5960  000CDA  0E00               	movlw	0
  5961  000CDC  6F67               	movwf	setRangeValor@_min& (0+255),b
  5962  000CDE  0E01               	movlw	1
  5963  000CE0  6F68               	movwf	setRangeValor@_max& (0+255),b
  5964  000CE2  0E03               	movlw	3
  5965  000CE4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5966  000CE6  0E2B               	movlw	43
  5967  000CE8  ECD0  F028         	call	_setRangeValor
  5968                           
  5969                           ;main.c: 331: break;
  5970  000CEC  D074               	goto	l1348
  5971  000CEE                     
  5972                           ;main.c: 333: line3[0] = '>';
  5973  000CEE  0E3E               	movlw	62
  5974  000CF0  0101               	movlb	1	; () banked
  5975  000CF2  6FB0               	movwf	_line3& (0+255),b
  5976                           
  5977                           ; BSR set to: 1
  5978                           ;main.c: 334: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5979  000CF4  0E40               	movlw	64
  5980  000CF6  EC29  F02F         	call	_btPress
  5981  000CFA  0900               	iorlw	0
  5982  000CFC  A4D8               	btfss	status,2,c
  5983  000CFE  D006               	goto	u14780
  5984  000D00  0E20               	movlw	32
  5985  000D02  EC29  F02F         	call	_btPress
  5986  000D06  0900               	iorlw	0
  5987  000D08  B4D8               	btfsc	status,2,c
  5988  000D0A  D065               	goto	l1348
  5989  000D0C                     u14780:
  5990  000D0C  0EFA               	movlw	low _buzzer
  5991  000D0E  0100               	movlb	0	; () banked
  5992  000D10  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5993  000D12  0E00               	movlw	high _buzzer
  5994  000D14  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5995  000D16  0E00               	movlw	0
  5996  000D18  6F67               	movwf	setRangeValor@_min& (0+255),b
  5997  000D1A  0E01               	movlw	1
  5998  000D1C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5999  000D1E  0E0E               	movlw	14
  6000  000D20  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6001  000D22  0E2B               	movlw	43
  6002  000D24  ECD0  F028         	call	_setRangeValor
  6003                           
  6004                           ;main.c: 335: break;
  6005  000D28  D056               	goto	l1348
  6006  000D2A                     
  6007                           ;main.c: 337: menu = 2;
  6008  000D2A  0E02               	movlw	2
  6009  000D2C  0100               	movlb	0	; () banked
  6010  000D2E  6FFB               	movwf	_menu& (0+255),b
  6011                           
  6012                           ;main.c: 338: line4[0] = '>';
  6013  000D30  0E3E               	movlw	62
  6014  000D32  0101               	movlb	1	; () banked
  6015  000D34  6F9B               	movwf	_line4& (0+255),b
  6016                           
  6017                           ; BSR set to: 1
  6018                           ;main.c: 339: if (btPress(2)) menu = 11;
  6019  000D36  0E02               	movlw	2
  6020  000D38  EC29  F02F         	call	_btPress
  6021  000D3C  0900               	iorlw	0
  6022  000D3E  B4D8               	btfsc	status,2,c
  6023  000D40  D04A               	goto	l1348
  6024  000D42  0E0B               	movlw	11
  6025  000D44  D00D               	goto	L10
  6026  000D46                     
  6027                           ;main.c: 342: menu = 3;
  6028                           
  6029                           ; BSR set to: 0
  6030  000D46  0E03               	movlw	3
  6031  000D48  0100               	movlb	0	; () banked
  6032  000D4A  6FFB               	movwf	_menu& (0+255),b
  6033                           
  6034                           ;main.c: 343: line1[0] = '>';
  6035  000D4C  0E3E               	movlw	62
  6036  000D4E  0101               	movlb	1	; () banked
  6037  000D50  6FDA               	movwf	_line1& (0+255),b
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;main.c: 344: if (btPress(2)) menu = 8;
  6041  000D52  0E02               	movlw	2
  6042  000D54  EC29  F02F         	call	_btPress
  6043  000D58  0900               	iorlw	0
  6044  000D5A  B4D8               	btfsc	status,2,c
  6045  000D5C  D03C               	goto	l1348
  6046  000D5E  0E08               	movlw	8
  6047  000D60                     L10:
  6048  000D60  0100               	movlb	0	; () banked
  6049  000D62  6FFB               	movwf	_menu& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;main.c: 345: break;
  6053  000D64  D038               	goto	l1348
  6054  000D66                     
  6055                           ;main.c: 347: menu = 3;
  6056                           
  6057                           ; BSR set to: 0
  6058  000D66  0E03               	movlw	3
  6059  000D68  0100               	movlb	0	; () banked
  6060  000D6A  6FFB               	movwf	_menu& (0+255),b
  6061                           
  6062                           ;main.c: 348: line2[0] = '>';
  6063  000D6C  0E3E               	movlw	62
  6064  000D6E  0101               	movlb	1	; () banked
  6065  000D70  6FC5               	movwf	_line2& (0+255),b
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;main.c: 349: if (btPress(2)) {
  6069  000D72  0E02               	movlw	2
  6070  000D74  EC29  F02F         	call	_btPress
  6071  000D78  0900               	iorlw	0
  6072  000D7A  B4D8               	btfsc	status,2,c
  6073  000D7C  D02C               	goto	l1348
  6074                           
  6075                           ;main.c: 350: menu = 5;
  6076  000D7E  0E05               	movlw	5
  6077  000D80  0100               	movlb	0	; () banked
  6078  000D82  6FFB               	movwf	_menu& (0+255),b
  6079                           
  6080                           ;main.c: 351: opcaomenu = 1;
  6081  000D84  0E01               	movlw	1
  6082  000D86  0101               	movlb	1	; () banked
  6083  000D88  D001               	goto	L11
  6084  000D8A                     
  6085                           ; BSR set to: 1
  6086                           ;main.c: 355: opcaomenu = 1;
  6087                           
  6088                           ; BSR set to: 1
  6089  000D8A  0E01               	movlw	1
  6090  000D8C                     L11:
  6091  000D8C  6F99               	movwf	_opcaomenu& (0+255),b
  6092                           
  6093                           ; BSR set to: 1
  6094                           ;main.c: 357: }
  6095                           
  6096                           ;main.c: 356: break;
  6097  000D8E  D023               	goto	l1348
  6098  000D90                     l1346:
  6099                           
  6100                           ; BSR set to: 1
  6101                           
  6102                           ; BSR set to: 1
  6103  000D90  5199               	movf	_opcaomenu& (0+255),w,b
  6104                           
  6105                           ; Switch size 1, requested type "space"
  6106                           ; Number of cases is 11, Range of values is 0 to 10
  6107                           ; switch strategies available:
  6108                           ; Name         Instructions Cycles
  6109                           ; simple_byte           34    18 (average)
  6110                           ;	Chosen strategy is simple_byte
  6111  000D92  0A00               	xorlw	0	; case 0
  6112  000D94  B4D8               	btfsc	status,2,c
  6113  000D96  D674               	goto	l1347
  6114  000D98  0A01               	xorlw	1	; case 1
  6115  000D9A  B4D8               	btfsc	status,2,c
  6116  000D9C  D673               	goto	l1349
  6117  000D9E  0A03               	xorlw	3	; case 2
  6118  000DA0  B4D8               	btfsc	status,2,c
  6119  000DA2  D69F               	goto	l1352
  6120  000DA4  0A01               	xorlw	1	; case 3
  6121  000DA6  B4D8               	btfsc	status,2,c
  6122  000DA8  D6D0               	goto	l1356
  6123  000DAA  0A07               	xorlw	7	; case 4
  6124  000DAC  B4D8               	btfsc	status,2,c
  6125  000DAE  D731               	goto	l1359
  6126  000DB0  0A01               	xorlw	1	; case 5
  6127  000DB2  B4D8               	btfsc	status,2,c
  6128  000DB4  D75D               	goto	l1362
  6129  000DB6  0A03               	xorlw	3	; case 6
  6130  000DB8  B4D8               	btfsc	status,2,c
  6131  000DBA  D77B               	goto	l1366
  6132  000DBC  0A01               	xorlw	1	; case 7
  6133  000DBE  B4D8               	btfsc	status,2,c
  6134  000DC0  D796               	goto	l1370
  6135  000DC2  0A0F               	xorlw	15	; case 8
  6136  000DC4  B4D8               	btfsc	status,2,c
  6137  000DC6  D7B1               	goto	l1374
  6138  000DC8  0A01               	xorlw	1	; case 9
  6139  000DCA  B4D8               	btfsc	status,2,c
  6140  000DCC  D7BC               	goto	l1376
  6141  000DCE  0A03               	xorlw	3	; case 10
  6142  000DD0  B4D8               	btfsc	status,2,c
  6143  000DD2  D7C9               	goto	l1378
  6144  000DD4  D7DA               	goto	l1380
  6145  000DD6                     l1348:
  6146                           
  6147                           ;main.c: 359: if (btPress(16)) opcaomenu++;
  6148                           
  6149                           ; BSR set to: 1
  6150  000DD6  0E10               	movlw	16
  6151  000DD8  EC29  F02F         	call	_btPress
  6152  000DDC  0900               	iorlw	0
  6153  000DDE  B4D8               	btfsc	status,2,c
  6154  000DE0  D002               	goto	l1381
  6155  000DE2  0101               	movlb	1	; () banked
  6156  000DE4  2B99               	incf	_opcaomenu& (0+255),f,b
  6157  000DE6                     l1381:
  6158                           
  6159                           ;main.c: 360: if (btPress(1)) opcaomenu--;
  6160                           
  6161                           ; BSR set to: 1
  6162  000DE6  0E01               	movlw	1
  6163  000DE8  EC29  F02F         	call	_btPress
  6164  000DEC  0900               	iorlw	0
  6165  000DEE  B4D8               	btfsc	status,2,c
  6166  000DF0  D002               	goto	l1382
  6167  000DF2  0101               	movlb	1	; () banked
  6168  000DF4  0799               	decf	_opcaomenu& (0+255),f,b
  6169  000DF6                     l1382:
  6170                           
  6171                           ;main.c: 361: if (btPress(8)) menu = 0;
  6172                           
  6173                           ; BSR set to: 1
  6174  000DF6  0E08               	movlw	8
  6175  000DF8  EC29  F02F         	call	_btPress
  6176  000DFC  0900               	iorlw	0
  6177  000DFE  B4D8               	btfsc	status,2,c
  6178  000E00  EF0B  F00B         	goto	l1469
  6179  000E04  0E00               	movlw	0
  6180  000E06  EF09  F00B         	goto	L13
  6181  000E0A                     l1343:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;main.c: 366: if (menu == 5 | menu == 6) {
  6185                           
  6186                           ; BSR set to: 0
  6187  000E0A  0E05               	movlw	5
  6188  000E0C  19FB               	xorwf	_menu& (0+255),w,b
  6189  000E0E  B4D8               	btfsc	status,2,c
  6190  000E10  D004               	goto	u14860
  6191                           
  6192                           ; BSR set to: 0
  6193  000E12  0E06               	movlw	6
  6194  000E14  19FB               	xorwf	_menu& (0+255),w,b
  6195  000E16  A4D8               	btfss	status,2,c
  6196  000E18  D2F5               	goto	l1385
  6197  000E1A                     u14860:
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;main.c: 367: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  6201                           
  6202                           ; BSR set to: 0
  6203  000E1A  0E30               	movlw	48
  6204  000E1C  0101               	movlb	1	; () banked
  6205  000E1E  19F3               	xorwf	_senha_desbloqueio_func& (0+255),w,b
  6206  000E20  B4D8               	btfsc	status,2,c
  6207  000E22  D2A4               	goto	l1389
  6208                           
  6209                           ; BSR set to: 1
  6210  000E24  0E01               	movlw	1
  6211  000E26  6F99               	movwf	_opcaomenu& (0+255),b
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;main.c: 368: switch (opcaomenu) {
  6215  000E28  D2A1               	goto	l1389
  6216  000E2A                     
  6217                           ; BSR set to: 1
  6218                           ;main.c: 370: menu = 5;
  6219                           
  6220                           ; BSR set to: 1
  6221  000E2A  0E05               	movlw	5
  6222  000E2C  0100               	movlb	0	; () banked
  6223  000E2E  6FFB               	movwf	_menu& (0+255),b
  6224                           
  6225                           ;main.c: 371: line1[0] = '>';
  6226  000E30  0E3E               	movlw	62
  6227  000E32  0101               	movlb	1	; () banked
  6228  000E34  6FDA               	movwf	_line1& (0+255),b
  6229                           
  6230                           ; BSR set to: 1
  6231                           ;main.c: 372: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6232  000E36  0E40               	movlw	64
  6233  000E38  EC29  F02F         	call	_btPress
  6234  000E3C  0900               	iorlw	0
  6235  000E3E  B4D8               	btfsc	status,2,c
  6236  000E40  D00E               	goto	l1391
  6237  000E42  0EF3               	movlw	low _senha_desbloqueio_func
  6238  000E44  0100               	movlb	0	; () banked
  6239  000E46  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6240  000E48  0E01               	movlw	high _senha_desbloqueio_func
  6241  000E4A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6242  000E4C  0E00               	movlw	0
  6243  000E4E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6244  000E50  0E32               	movlw	50
  6245  000E52  6F68               	movwf	setRangeValor@_max& (0+255),b
  6246  000E54  0E00               	movlw	0
  6247  000E56  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6248  000E58  0E2B               	movlw	43
  6249  000E5A  ECD0  F028         	call	_setRangeValor
  6250  000E5E                     l1391:
  6251                           
  6252                           ;main.c: 373: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6253  000E5E  0E20               	movlw	32
  6254  000E60  EC29  F02F         	call	_btPress
  6255  000E64  0900               	iorlw	0
  6256  000E66  B4D8               	btfsc	status,2,c
  6257  000E68  D2B0               	goto	l1393
  6258  000E6A  0EF3               	movlw	low _senha_desbloqueio_func
  6259  000E6C  0100               	movlb	0	; () banked
  6260  000E6E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6261  000E70  0E01               	movlw	high _senha_desbloqueio_func
  6262  000E72  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6263  000E74  0E00               	movlw	0
  6264  000E76  6F67               	movwf	setRangeValor@_min& (0+255),b
  6265  000E78  0E32               	movlw	50
  6266  000E7A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6267  000E7C  0E00               	movlw	0
  6268  000E7E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6269  000E80  0E2D               	movlw	45
  6270  000E82  ECD0  F028         	call	_setRangeValor
  6271                           
  6272                           ;main.c: 374: break;
  6273  000E86  D2A1               	goto	l1393
  6274  000E88                     
  6275                           ;main.c: 376: line2[0] = '>';
  6276  000E88  0E3E               	movlw	62
  6277  000E8A  0101               	movlb	1	; () banked
  6278  000E8C  6FC5               	movwf	_line2& (0+255),b
  6279                           
  6280                           ; BSR set to: 1
  6281                           ;main.c: 377: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6282  000E8E  0E40               	movlw	64
  6283  000E90  EC29  F02F         	call	_btPress
  6284  000E94  0900               	iorlw	0
  6285  000E96  B4D8               	btfsc	status,2,c
  6286  000E98  D00E               	goto	l1395
  6287  000E9A  0EF7               	movlw	low _tipo_sensor_umidade
  6288  000E9C  0100               	movlb	0	; () banked
  6289  000E9E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6290  000EA0  0E00               	movlw	high _tipo_sensor_umidade
  6291  000EA2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6292  000EA4  0E00               	movlw	0
  6293  000EA6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6294  000EA8  0E01               	movlw	1
  6295  000EAA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6296  000EAC  0E07               	movlw	7
  6297  000EAE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6298  000EB0  0E2B               	movlw	43
  6299  000EB2  ECD0  F028         	call	_setRangeValor
  6300  000EB6                     l1395:
  6301                           
  6302                           ;main.c: 378: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6303  000EB6  0E20               	movlw	32
  6304  000EB8  EC29  F02F         	call	_btPress
  6305  000EBC  0900               	iorlw	0
  6306  000EBE  B4D8               	btfsc	status,2,c
  6307  000EC0  D284               	goto	l1393
  6308  000EC2  0EF7               	movlw	low _tipo_sensor_umidade
  6309  000EC4  0100               	movlb	0	; () banked
  6310  000EC6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6311  000EC8  0E00               	movlw	high _tipo_sensor_umidade
  6312  000ECA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6313  000ECC  0E00               	movlw	0
  6314  000ECE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6315  000ED0  0E01               	movlw	1
  6316  000ED2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6317  000ED4  0E07               	movlw	7
  6318  000ED6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6319  000ED8  0E2D               	movlw	45
  6320  000EDA  ECD0  F028         	call	_setRangeValor
  6321                           
  6322                           ;main.c: 379: break;
  6323  000EDE  D275               	goto	l1393
  6324  000EE0                     
  6325                           ;main.c: 381: line3[0] = '>';
  6326  000EE0  0E3E               	movlw	62
  6327  000EE2  0101               	movlb	1	; () banked
  6328  000EE4  6FB0               	movwf	_line3& (0+255),b
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;main.c: 382: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6332  000EE6  0E40               	movlw	64
  6333  000EE8  EC29  F02F         	call	_btPress
  6334  000EEC  0900               	iorlw	0
  6335  000EEE  B4D8               	btfsc	status,2,c
  6336  000EF0  D00E               	goto	l1398
  6337  000EF2  0EEF               	movlw	low _h_abafador
  6338  000EF4  0100               	movlb	0	; () banked
  6339  000EF6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6340  000EF8  0E00               	movlw	high _h_abafador
  6341  000EFA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6342  000EFC  0E01               	movlw	1
  6343  000EFE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6344  000F00  0E0A               	movlw	10
  6345  000F02  6F68               	movwf	setRangeValor@_max& (0+255),b
  6346  000F04  0E0C               	movlw	12
  6347  000F06  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6348  000F08  0E2B               	movlw	43
  6349  000F0A  ECD0  F028         	call	_setRangeValor
  6350  000F0E                     l1398:
  6351                           
  6352                           ;main.c: 383: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6353  000F0E  0E20               	movlw	32
  6354  000F10  EC29  F02F         	call	_btPress
  6355  000F14  0900               	iorlw	0
  6356  000F16  B4D8               	btfsc	status,2,c
  6357  000F18  D258               	goto	l1393
  6358  000F1A  0EEF               	movlw	low _h_abafador
  6359  000F1C  0100               	movlb	0	; () banked
  6360  000F1E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6361  000F20  0E00               	movlw	high _h_abafador
  6362  000F22  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6363  000F24  0E01               	movlw	1
  6364  000F26  6F67               	movwf	setRangeValor@_min& (0+255),b
  6365  000F28  0E0A               	movlw	10
  6366  000F2A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6367  000F2C  0E0C               	movlw	12
  6368  000F2E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6369  000F30  0E2D               	movlw	45
  6370  000F32  ECD0  F028         	call	_setRangeValor
  6371                           
  6372                           ;main.c: 384: break;
  6373  000F36  D249               	goto	l1393
  6374  000F38                     
  6375                           ;main.c: 386: line4[0] = '>';
  6376  000F38  0E3E               	movlw	62
  6377  000F3A  0101               	movlb	1	; () banked
  6378  000F3C  6F9B               	movwf	_line4& (0+255),b
  6379                           
  6380                           ; BSR set to: 1
  6381                           ;main.c: 387: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6382  000F3E  0E40               	movlw	64
  6383  000F40  EC29  F02F         	call	_btPress
  6384  000F44  0900               	iorlw	0
  6385  000F46  B4D8               	btfsc	status,2,c
  6386  000F48  D00E               	goto	l1401
  6387  000F4A  0EF4               	movlw	low _h_flap
  6388  000F4C  0100               	movlb	0	; () banked
  6389  000F4E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6390  000F50  0E01               	movlw	high _h_flap
  6391  000F52  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6392  000F54  0E01               	movlw	1
  6393  000F56  6F67               	movwf	setRangeValor@_min& (0+255),b
  6394  000F58  0E0A               	movlw	10
  6395  000F5A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6396  000F5C  0E0D               	movlw	13
  6397  000F5E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6398  000F60  0E2B               	movlw	43
  6399  000F62  ECD0  F028         	call	_setRangeValor
  6400  000F66                     l1401:
  6401                           
  6402                           ;main.c: 388: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6403  000F66  0E20               	movlw	32
  6404  000F68  EC29  F02F         	call	_btPress
  6405  000F6C  0900               	iorlw	0
  6406  000F6E  B4D8               	btfsc	status,2,c
  6407  000F70  D22C               	goto	l1393
  6408  000F72  0EF4               	movlw	low _h_flap
  6409  000F74  0100               	movlb	0	; () banked
  6410  000F76  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6411  000F78  0E01               	movlw	high _h_flap
  6412  000F7A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6413  000F7C  0E01               	movlw	1
  6414  000F7E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6415  000F80  0E0A               	movlw	10
  6416  000F82  6F68               	movwf	setRangeValor@_max& (0+255),b
  6417  000F84  0E0D               	movlw	13
  6418  000F86  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6419  000F88  0E2D               	movlw	45
  6420  000F8A  ECD0  F028         	call	_setRangeValor
  6421                           
  6422                           ;main.c: 389: break;
  6423  000F8E  D21D               	goto	l1393
  6424  000F90                     
  6425                           ;main.c: 391: line1[11] = '>';
  6426  000F90  0E3E               	movlw	62
  6427  000F92  0101               	movlb	1	; () banked
  6428  000F94  6FE5               	movwf	(_line1+11)& (0+255),b
  6429                           
  6430                           ; BSR set to: 1
  6431                           ;main.c: 392: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6432  000F96  0E40               	movlw	64
  6433  000F98  EC29  F02F         	call	_btPress
  6434  000F9C  0900               	iorlw	0
  6435  000F9E  B4D8               	btfsc	status,2,c
  6436  000FA0  D00E               	goto	l1404
  6437  000FA2  0EF0               	movlw	low _h_venotinha
  6438  000FA4  0100               	movlb	0	; () banked
  6439  000FA6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6440  000FA8  0E00               	movlw	high _h_venotinha
  6441  000FAA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6442  000FAC  0E01               	movlw	1
  6443  000FAE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6444  000FB0  0E0A               	movlw	10
  6445  000FB2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6446  000FB4  0E0B               	movlw	11
  6447  000FB6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6448  000FB8  0E2B               	movlw	43
  6449  000FBA  ECD0  F028         	call	_setRangeValor
  6450  000FBE                     l1404:
  6451                           
  6452                           ;main.c: 393: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6453  000FBE  0E20               	movlw	32
  6454  000FC0  EC29  F02F         	call	_btPress
  6455  000FC4  0900               	iorlw	0
  6456  000FC6  B4D8               	btfsc	status,2,c
  6457  000FC8  D200               	goto	l1393
  6458  000FCA  0EF0               	movlw	low _h_venotinha
  6459  000FCC  0100               	movlb	0	; () banked
  6460  000FCE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6461  000FD0  0E00               	movlw	high _h_venotinha
  6462  000FD2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6463  000FD4  0E01               	movlw	1
  6464  000FD6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6465  000FD8  0E0A               	movlw	10
  6466  000FDA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6467  000FDC  0E0B               	movlw	11
  6468  000FDE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6469  000FE0  0E2D               	movlw	45
  6470  000FE2  ECD0  F028         	call	_setRangeValor
  6471                           
  6472                           ;main.c: 394: break;
  6473  000FE6  D1F1               	goto	l1393
  6474  000FE8                     
  6475                           ;main.c: 396: line2[11] = '>';
  6476  000FE8  0E3E               	movlw	62
  6477  000FEA  0101               	movlb	1	; () banked
  6478  000FEC  6FD0               	movwf	(_line2+11)& (0+255),b
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;main.c: 397: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6482  000FEE  0E40               	movlw	64
  6483  000FF0  EC29  F02F         	call	_btPress
  6484  000FF4  0900               	iorlw	0
  6485  000FF6  B4D8               	btfsc	status,2,c
  6486  000FF8  D00E               	goto	l1407
  6487  000FFA  0EF1               	movlw	low _h_modo_seguranca
  6488  000FFC  0100               	movlb	0	; () banked
  6489  000FFE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6490  001000  0E00               	movlw	high _h_modo_seguranca
  6491  001002  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6492  001004  0E00               	movlw	0
  6493  001006  6F67               	movwf	setRangeValor@_min& (0+255),b
  6494  001008  0E0F               	movlw	15
  6495  00100A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6496  00100C  0E10               	movlw	16
  6497  00100E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6498  001010  0E2B               	movlw	43
  6499  001012  ECD0  F028         	call	_setRangeValor
  6500  001016                     l1407:
  6501                           
  6502                           ;main.c: 398: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6503  001016  0E20               	movlw	32
  6504  001018  EC29  F02F         	call	_btPress
  6505  00101C  0900               	iorlw	0
  6506  00101E  B4D8               	btfsc	status,2,c
  6507  001020  D1D4               	goto	l1393
  6508  001022  0EF1               	movlw	low _h_modo_seguranca
  6509  001024  0100               	movlb	0	; () banked
  6510  001026  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6511  001028  0E00               	movlw	high _h_modo_seguranca
  6512  00102A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6513  00102C  0E00               	movlw	0
  6514  00102E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6515  001030  0E0F               	movlw	15
  6516  001032  6F68               	movwf	setRangeValor@_max& (0+255),b
  6517  001034  0E10               	movlw	16
  6518  001036  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6519  001038  0E2D               	movlw	45
  6520  00103A  ECD0  F028         	call	_setRangeValor
  6521                           
  6522                           ;main.c: 399: break;
  6523  00103E  D1C5               	goto	l1393
  6524  001040                     
  6525                           ;main.c: 401: line3[11] = '>';
  6526  001040  0E3E               	movlw	62
  6527  001042  0101               	movlb	1	; () banked
  6528  001044  6FBB               	movwf	(_line3+11)& (0+255),b
  6529                           
  6530                           ; BSR set to: 1
  6531                           ;main.c: 402: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6532  001046  0E40               	movlw	64
  6533  001048  EC29  F02F         	call	_btPress
  6534  00104C  0900               	iorlw	0
  6535  00104E  B4D8               	btfsc	status,2,c
  6536  001050  D00E               	goto	l1410
  6537  001052  0EEE               	movlw	low _h_buzzer
  6538  001054  0100               	movlb	0	; () banked
  6539  001056  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6540  001058  0E00               	movlw	high _h_buzzer
  6541  00105A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6542  00105C  0E01               	movlw	1
  6543  00105E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6544  001060  0E0F               	movlw	15
  6545  001062  6F68               	movwf	setRangeValor@_max& (0+255),b
  6546  001064  0E11               	movlw	17
  6547  001066  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6548  001068  0E2B               	movlw	43
  6549  00106A  ECD0  F028         	call	_setRangeValor
  6550  00106E                     l1410:
  6551                           
  6552                           ;main.c: 403: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6553  00106E  0E20               	movlw	32
  6554  001070  EC29  F02F         	call	_btPress
  6555  001074  0900               	iorlw	0
  6556  001076  B4D8               	btfsc	status,2,c
  6557  001078  D1A8               	goto	l1393
  6558  00107A  0EEE               	movlw	low _h_buzzer
  6559  00107C  0100               	movlb	0	; () banked
  6560  00107E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6561  001080  0E00               	movlw	high _h_buzzer
  6562  001082  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6563  001084  0E01               	movlw	1
  6564  001086  6F67               	movwf	setRangeValor@_min& (0+255),b
  6565  001088  0E0F               	movlw	15
  6566  00108A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6567  00108C  0E11               	movlw	17
  6568  00108E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6569  001090  0E2D               	movlw	45
  6570  001092  ECD0  F028         	call	_setRangeValor
  6571                           
  6572                           ;main.c: 404: break;
  6573  001096  D199               	goto	l1393
  6574  001098                     
  6575                           ;main.c: 406: menu = 5;
  6576  001098  0E05               	movlw	5
  6577  00109A  0100               	movlb	0	; () banked
  6578  00109C  6FFB               	movwf	_menu& (0+255),b
  6579                           
  6580                           ;main.c: 407: line4[11] = '>';
  6581  00109E  0E3E               	movlw	62
  6582  0010A0  0101               	movlb	1	; () banked
  6583  0010A2  6FA6               	movwf	(_line4+11)& (0+255),b
  6584                           
  6585                           ; BSR set to: 1
  6586                           ;main.c: 408: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6587  0010A4  0E40               	movlw	64
  6588  0010A6  EC29  F02F         	call	_btPress
  6589  0010AA  0900               	iorlw	0
  6590  0010AC  B4D8               	btfsc	status,2,c
  6591  0010AE  D00E               	goto	l1413
  6592  0010B0  0EF5               	movlw	low _t_flap_ligado
  6593  0010B2  0100               	movlb	0	; () banked
  6594  0010B4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6595  0010B6  0E00               	movlw	high _t_flap_ligado
  6596  0010B8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6597  0010BA  0E01               	movlw	1
  6598  0010BC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6599  0010BE  0EFA               	movlw	250
  6600  0010C0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6601  0010C2  0E12               	movlw	18
  6602  0010C4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6603  0010C6  0E2B               	movlw	43
  6604  0010C8  ECD0  F028         	call	_setRangeValor
  6605  0010CC                     l1413:
  6606                           
  6607                           ;main.c: 409: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6608  0010CC  0E20               	movlw	32
  6609  0010CE  EC29  F02F         	call	_btPress
  6610  0010D2  0900               	iorlw	0
  6611  0010D4  B4D8               	btfsc	status,2,c
  6612  0010D6  D179               	goto	l1393
  6613  0010D8  0EF5               	movlw	low _t_flap_ligado
  6614  0010DA  0100               	movlb	0	; () banked
  6615  0010DC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6616  0010DE  0E00               	movlw	high _t_flap_ligado
  6617  0010E0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6618  0010E2  0E01               	movlw	1
  6619  0010E4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6620  0010E6  0EFA               	movlw	250
  6621  0010E8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6622  0010EA  0E12               	movlw	18
  6623  0010EC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6624  0010EE  0E2D               	movlw	45
  6625  0010F0  ECD0  F028         	call	_setRangeValor
  6626                           
  6627                           ;main.c: 410: break;
  6628  0010F4  D16A               	goto	l1393
  6629  0010F6                     
  6630                           ;main.c: 412: menu = 6;
  6631  0010F6  0E06               	movlw	6
  6632  0010F8  0100               	movlb	0	; () banked
  6633  0010FA  6FFB               	movwf	_menu& (0+255),b
  6634                           
  6635                           ;main.c: 413: line1[0] = '>';
  6636  0010FC  0E3E               	movlw	62
  6637  0010FE  0101               	movlb	1	; () banked
  6638  001100  6FDA               	movwf	_line1& (0+255),b
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;main.c: 414: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6642  001102  0E40               	movlw	64
  6643  001104  EC29  F02F         	call	_btPress
  6644  001108  0900               	iorlw	0
  6645  00110A  B4D8               	btfsc	status,2,c
  6646  00110C  D00E               	goto	l1416
  6647  00110E  0EF4               	movlw	low _t_flap_intervalo
  6648  001110  0100               	movlb	0	; () banked
  6649  001112  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6650  001114  0E00               	movlw	high _t_flap_intervalo
  6651  001116  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6652  001118  0E00               	movlw	0
  6653  00111A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6654  00111C  0EFA               	movlw	250
  6655  00111E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6656  001120  0E14               	movlw	20
  6657  001122  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6658  001124  0E2B               	movlw	43
  6659  001126  ECD0  F028         	call	_setRangeValor
  6660  00112A                     l1416:
  6661                           
  6662                           ;main.c: 415: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6663  00112A  0E20               	movlw	32
  6664  00112C  EC29  F02F         	call	_btPress
  6665  001130  0900               	iorlw	0
  6666  001132  B4D8               	btfsc	status,2,c
  6667  001134  D14A               	goto	l1393
  6668  001136  0EF4               	movlw	low _t_flap_intervalo
  6669  001138  0100               	movlb	0	; () banked
  6670  00113A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6671  00113C  0E00               	movlw	high _t_flap_intervalo
  6672  00113E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6673  001140  0E00               	movlw	0
  6674  001142  6F67               	movwf	setRangeValor@_min& (0+255),b
  6675  001144  0EFA               	movlw	250
  6676  001146  6F68               	movwf	setRangeValor@_max& (0+255),b
  6677  001148  0E14               	movlw	20
  6678  00114A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6679  00114C  0E2D               	movlw	45
  6680  00114E  ECD0  F028         	call	_setRangeValor
  6681                           
  6682                           ;main.c: 416: break;
  6683  001152  D13B               	goto	l1393
  6684  001154                     
  6685                           ;main.c: 418: line2[0] = '>';
  6686  001154  0E3E               	movlw	62
  6687  001156  0101               	movlb	1	; () banked
  6688  001158  6FC5               	movwf	_line2& (0+255),b
  6689                           
  6690                           ; BSR set to: 1
  6691                           ;main.c: 419: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6692  00115A  0E40               	movlw	64
  6693  00115C  EC29  F02F         	call	_btPress
  6694  001160  0900               	iorlw	0
  6695  001162  B4D8               	btfsc	status,2,c
  6696  001164  D00E               	goto	l1419
  6697  001166  0EFF               	movlw	low _t_buzzer_religar
  6698  001168  0100               	movlb	0	; () banked
  6699  00116A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6700  00116C  0E00               	movlw	high _t_buzzer_religar
  6701  00116E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6702  001170  0E00               	movlw	0
  6703  001172  6F67               	movwf	setRangeValor@_min& (0+255),b
  6704  001174  0E1E               	movlw	30
  6705  001176  6F68               	movwf	setRangeValor@_max& (0+255),b
  6706  001178  0E15               	movlw	21
  6707  00117A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6708  00117C  0E2B               	movlw	43
  6709  00117E  ECD0  F028         	call	_setRangeValor
  6710  001182                     l1419:
  6711                           
  6712                           ;main.c: 420: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6713  001182  0E20               	movlw	32
  6714  001184  EC29  F02F         	call	_btPress
  6715  001188  0900               	iorlw	0
  6716  00118A  B4D8               	btfsc	status,2,c
  6717  00118C  D11E               	goto	l1393
  6718  00118E  0EFF               	movlw	low _t_buzzer_religar
  6719  001190  0100               	movlb	0	; () banked
  6720  001192  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6721  001194  0E00               	movlw	high _t_buzzer_religar
  6722  001196  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6723  001198  0E00               	movlw	0
  6724  00119A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6725  00119C  0E1E               	movlw	30
  6726  00119E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6727  0011A0  0E15               	movlw	21
  6728  0011A2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6729  0011A4  0E2D               	movlw	45
  6730  0011A6  ECD0  F028         	call	_setRangeValor
  6731                           
  6732                           ;main.c: 421: break;
  6733  0011AA  D10F               	goto	l1393
  6734  0011AC                     
  6735                           ;main.c: 423: line3[0] = '>';
  6736  0011AC  0E3E               	movlw	62
  6737  0011AE  0101               	movlb	1	; () banked
  6738  0011B0  6FB0               	movwf	_line3& (0+255),b
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;main.c: 424: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6742  0011B2  0E40               	movlw	64
  6743  0011B4  EC29  F02F         	call	_btPress
  6744  0011B8  0900               	iorlw	0
  6745  0011BA  B4D8               	btfsc	status,2,c
  6746  0011BC  D00E               	goto	l1422
  6747  0011BE  0EF3               	movlw	low _t_temp_automatica
  6748  0011C0  0100               	movlb	0	; () banked
  6749  0011C2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6750  0011C4  0E00               	movlw	high _t_temp_automatica
  6751  0011C6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6752  0011C8  0E00               	movlw	0
  6753  0011CA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6754  0011CC  0EFA               	movlw	250
  6755  0011CE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6756  0011D0  0E16               	movlw	22
  6757  0011D2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6758  0011D4  0E2B               	movlw	43
  6759  0011D6  ECD0  F028         	call	_setRangeValor
  6760  0011DA                     l1422:
  6761                           
  6762                           ;main.c: 425: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6763  0011DA  0E20               	movlw	32
  6764  0011DC  EC29  F02F         	call	_btPress
  6765  0011E0  0900               	iorlw	0
  6766  0011E2  B4D8               	btfsc	status,2,c
  6767  0011E4  D0F2               	goto	l1393
  6768  0011E6  0EF3               	movlw	low _t_temp_automatica
  6769  0011E8  0100               	movlb	0	; () banked
  6770  0011EA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6771  0011EC  0E00               	movlw	high _t_temp_automatica
  6772  0011EE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6773  0011F0  0E00               	movlw	0
  6774  0011F2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6775  0011F4  0EFA               	movlw	250
  6776  0011F6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6777  0011F8  0E16               	movlw	22
  6778  0011FA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6779  0011FC  0E2D               	movlw	45
  6780  0011FE  ECD0  F028         	call	_setRangeValor
  6781                           
  6782                           ;main.c: 426: break;
  6783  001202  D0E3               	goto	l1393
  6784  001204                     
  6785                           ;main.c: 428: line4[0] = '>';
  6786  001204  0E3E               	movlw	62
  6787  001206  0101               	movlb	1	; () banked
  6788  001208  6F9B               	movwf	_line4& (0+255),b
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;main.c: 429: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6792  00120A  0E40               	movlw	64
  6793  00120C  EC29  F02F         	call	_btPress
  6794  001210  0900               	iorlw	0
  6795  001212  B4D8               	btfsc	status,2,c
  6796  001214  D00E               	goto	l1425
  6797  001216  0EF1               	movlw	low _wifi_habilita_alteracao
  6798  001218  0100               	movlb	0	; () banked
  6799  00121A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6800  00121C  0E01               	movlw	high _wifi_habilita_alteracao
  6801  00121E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6802  001220  0E00               	movlw	0
  6803  001222  6F67               	movwf	setRangeValor@_min& (0+255),b
  6804  001224  0E01               	movlw	1
  6805  001226  6F68               	movwf	setRangeValor@_max& (0+255),b
  6806  001228  0E17               	movlw	23
  6807  00122A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6808  00122C  0E2B               	movlw	43
  6809  00122E  ECD0  F028         	call	_setRangeValor
  6810  001232                     l1425:
  6811                           
  6812                           ;main.c: 430: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6813  001232  0E20               	movlw	32
  6814  001234  EC29  F02F         	call	_btPress
  6815  001238  0900               	iorlw	0
  6816  00123A  B4D8               	btfsc	status,2,c
  6817  00123C  D0C6               	goto	l1393
  6818  00123E  0EF1               	movlw	low _wifi_habilita_alteracao
  6819  001240  0100               	movlb	0	; () banked
  6820  001242  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6821  001244  0E01               	movlw	high _wifi_habilita_alteracao
  6822  001246  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6823  001248  0E00               	movlw	0
  6824  00124A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6825  00124C  0E01               	movlw	1
  6826  00124E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6827  001250  0E17               	movlw	23
  6828  001252  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6829  001254  0E2D               	movlw	45
  6830  001256  ECD0  F028         	call	_setRangeValor
  6831                           
  6832                           ;main.c: 431: break;
  6833  00125A  D0B7               	goto	l1393
  6834  00125C                     
  6835                           ;main.c: 433: line1[11] = '>';
  6836  00125C  0E3E               	movlw	62
  6837  00125E  0101               	movlb	1	; () banked
  6838  001260  6FE5               	movwf	(_line1+11)& (0+255),b
  6839                           
  6840                           ; BSR set to: 1
  6841                           ;main.c: 434: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6842  001262  0E40               	movlw	64
  6843  001264  EC29  F02F         	call	_btPress
  6844  001268  0900               	iorlw	0
  6845  00126A  B4D8               	btfsc	status,2,c
  6846  00126C  D00E               	goto	l1428
  6847  00126E  0EEF               	movlw	low _wifi_SENHA
  6848  001270  0100               	movlb	0	; () banked
  6849  001272  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6850  001274  0E01               	movlw	high _wifi_SENHA
  6851  001276  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6852  001278  0E01               	movlw	1
  6853  00127A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6854  00127C  0EFA               	movlw	250
  6855  00127E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6856  001280  0E19               	movlw	25
  6857  001282  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6858  001284  0E2B               	movlw	43
  6859  001286  ECD0  F028         	call	_setRangeValor
  6860  00128A                     l1428:
  6861                           
  6862                           ;main.c: 435: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6863  00128A  0E20               	movlw	32
  6864  00128C  EC29  F02F         	call	_btPress
  6865  001290  0900               	iorlw	0
  6866  001292  B4D8               	btfsc	status,2,c
  6867  001294  D09A               	goto	l1393
  6868  001296  0EEF               	movlw	low _wifi_SENHA
  6869  001298  0100               	movlb	0	; () banked
  6870  00129A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6871  00129C  0E01               	movlw	high _wifi_SENHA
  6872  00129E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6873  0012A0  0E01               	movlw	1
  6874  0012A2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6875  0012A4  0EFA               	movlw	250
  6876  0012A6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6877  0012A8  0E19               	movlw	25
  6878  0012AA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6879  0012AC  0E2D               	movlw	45
  6880  0012AE  ECD0  F028         	call	_setRangeValor
  6881                           
  6882                           ;main.c: 436: break;
  6883  0012B2  D08B               	goto	l1393
  6884  0012B4                     
  6885                           ;main.c: 438: line2[11] = '>';
  6886  0012B4  0E3E               	movlw	62
  6887  0012B6  0101               	movlb	1	; () banked
  6888  0012B8  6FD0               	movwf	(_line2+11)& (0+255),b
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;main.c: 439: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6892  0012BA  0E40               	movlw	64
  6893  0012BC  EC29  F02F         	call	_btPress
  6894  0012C0  0900               	iorlw	0
  6895  0012C2  B4D8               	btfsc	status,2,c
  6896  0012C4  D00E               	goto	l1431
  6897  0012C6  0EED               	movlw	low _h_subir_temp_automatica
  6898  0012C8  0100               	movlb	0	; () banked
  6899  0012CA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6900  0012CC  0E00               	movlw	high _h_subir_temp_automatica
  6901  0012CE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6902  0012D0  0E00               	movlw	0
  6903  0012D2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6904  0012D4  0E0F               	movlw	15
  6905  0012D6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6906  0012D8  0E1B               	movlw	27
  6907  0012DA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6908  0012DC  0E2B               	movlw	43
  6909  0012DE  ECD0  F028         	call	_setRangeValor
  6910  0012E2                     l1431:
  6911                           
  6912                           ;main.c: 440: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6913  0012E2  0E20               	movlw	32
  6914  0012E4  EC29  F02F         	call	_btPress
  6915  0012E8  0900               	iorlw	0
  6916  0012EA  B4D8               	btfsc	status,2,c
  6917  0012EC  D06E               	goto	l1393
  6918  0012EE  0EED               	movlw	low _h_subir_temp_automatica
  6919  0012F0  0100               	movlb	0	; () banked
  6920  0012F2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6921  0012F4  0E00               	movlw	high _h_subir_temp_automatica
  6922  0012F6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6923  0012F8  0E00               	movlw	0
  6924  0012FA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6925  0012FC  0E0F               	movlw	15
  6926  0012FE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6927  001300  0E1B               	movlw	27
  6928  001302  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6929  001304  0E2D               	movlw	45
  6930  001306  ECD0  F028         	call	_setRangeValor
  6931                           
  6932                           ;main.c: 441: break;
  6933  00130A  D05F               	goto	l1393
  6934  00130C                     
  6935                           ;main.c: 443: line3[11] = '>';
  6936  00130C  0E3E               	movlw	62
  6937  00130E  0101               	movlb	1	; () banked
  6938  001310  6FBB               	movwf	(_line3+11)& (0+255),b
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;main.c: 444: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6942  001312  0E40               	movlw	64
  6943  001314  EC29  F02F         	call	_btPress
  6944  001318  0900               	iorlw	0
  6945  00131A  B4D8               	btfsc	status,2,c
  6946  00131C  D00E               	goto	l1434
  6947  00131E  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6948  001320  0100               	movlb	0	; () banked
  6949  001322  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6950  001324  0E00               	movlw	high _t_religar_ventoinha_automatica
  6951  001326  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6952  001328  0E00               	movlw	0
  6953  00132A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6954  00132C  0E3C               	movlw	60
  6955  00132E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6956  001330  0E1C               	movlw	28
  6957  001332  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6958  001334  0E2B               	movlw	43
  6959  001336  ECD0  F028         	call	_setRangeValor
  6960  00133A                     l1434:
  6961                           
  6962                           ;main.c: 445: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6963  00133A  0E20               	movlw	32
  6964  00133C  EC29  F02F         	call	_btPress
  6965  001340  0900               	iorlw	0
  6966  001342  B4D8               	btfsc	status,2,c
  6967  001344  D042               	goto	l1393
  6968  001346  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6969  001348  0100               	movlb	0	; () banked
  6970  00134A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6971  00134C  0E00               	movlw	high _t_religar_ventoinha_automatica
  6972  00134E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6973  001350  0E00               	movlw	0
  6974  001352  6F67               	movwf	setRangeValor@_min& (0+255),b
  6975  001354  0E3C               	movlw	60
  6976  001356  6F68               	movwf	setRangeValor@_max& (0+255),b
  6977  001358  0E1C               	movlw	28
  6978  00135A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6979  00135C  0E2D               	movlw	45
  6980  00135E  ECD0  F028         	call	_setRangeValor
  6981                           
  6982                           ;main.c: 446: break;
  6983  001362  D033               	goto	l1393
  6984  001364  0E01               	movlw	1
  6985  001366  0101               	movlb	1	; () banked
  6986  001368  6F99               	movwf	_opcaomenu& (0+255),b
  6987                           
  6988                           ;main.c: 448: }
  6989  00136A  D02F               	goto	l1393
  6990  00136C                     l1389:
  6991                           
  6992                           ; BSR set to: 1
  6993                           
  6994                           ; BSR set to: 1
  6995  00136C  5199               	movf	_opcaomenu& (0+255),w,b
  6996                           
  6997                           ; Switch size 1, requested type "space"
  6998                           ; Number of cases is 15, Range of values is 1 to 15
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte           46    24 (average)
  7002                           ;	Chosen strategy is simple_byte
  7003  00136E  0A01               	xorlw	1	; case 1
  7004  001370  B4D8               	btfsc	status,2,c
  7005  001372  D55B               	goto	l1390
  7006  001374  0A03               	xorlw	3	; case 2
  7007  001376  B4D8               	btfsc	status,2,c
  7008  001378  D587               	goto	l1394
  7009  00137A  0A01               	xorlw	1	; case 3
  7010  00137C  B4D8               	btfsc	status,2,c
  7011  00137E  D5B0               	goto	l1397
  7012  001380  0A07               	xorlw	7	; case 4
  7013  001382  B4D8               	btfsc	status,2,c
  7014  001384  D5D9               	goto	l1400
  7015  001386  0A01               	xorlw	1	; case 5
  7016  001388  B4D8               	btfsc	status,2,c
  7017  00138A  D602               	goto	l1403
  7018  00138C  0A03               	xorlw	3	; case 6
  7019  00138E  B4D8               	btfsc	status,2,c
  7020  001390  D62B               	goto	l1406
  7021  001392  0A01               	xorlw	1	; case 7
  7022  001394  B4D8               	btfsc	status,2,c
  7023  001396  D654               	goto	l1409
  7024  001398  0A0F               	xorlw	15	; case 8
  7025  00139A  B4D8               	btfsc	status,2,c
  7026  00139C  D67D               	goto	l1412
  7027  00139E  0A01               	xorlw	1	; case 9
  7028  0013A0  B4D8               	btfsc	status,2,c
  7029  0013A2  D6A9               	goto	l1415
  7030  0013A4  0A03               	xorlw	3	; case 10
  7031  0013A6  B4D8               	btfsc	status,2,c
  7032  0013A8  D6D5               	goto	l1418
  7033  0013AA  0A01               	xorlw	1	; case 11
  7034  0013AC  B4D8               	btfsc	status,2,c
  7035  0013AE  D6FE               	goto	l1421
  7036  0013B0  0A07               	xorlw	7	; case 12
  7037  0013B2  B4D8               	btfsc	status,2,c
  7038  0013B4  D727               	goto	l1424
  7039  0013B6  0A01               	xorlw	1	; case 13
  7040  0013B8  B4D8               	btfsc	status,2,c
  7041  0013BA  D750               	goto	l1427
  7042  0013BC  0A03               	xorlw	3	; case 14
  7043  0013BE  B4D8               	btfsc	status,2,c
  7044  0013C0  D779               	goto	l1430
  7045  0013C2  0A01               	xorlw	1	; case 15
  7046  0013C4  B4D8               	btfsc	status,2,c
  7047  0013C6  D7A2               	goto	l1433
  7048  0013C8  D7CD               	goto	l1436
  7049  0013CA                     l1393:
  7050                           
  7051                           ;main.c: 449: if (btPress(16)) opcaomenu++;
  7052                           
  7053                           ; BSR set to: 1
  7054  0013CA  0E10               	movlw	16
  7055  0013CC  EC29  F02F         	call	_btPress
  7056  0013D0  0900               	iorlw	0
  7057  0013D2  B4D8               	btfsc	status,2,c
  7058  0013D4  D002               	goto	l1437
  7059  0013D6  0101               	movlb	1	; () banked
  7060  0013D8  2B99               	incf	_opcaomenu& (0+255),f,b
  7061  0013DA                     l1437:
  7062                           
  7063                           ;main.c: 450: if (btPress(1)) opcaomenu--;
  7064                           
  7065                           ; BSR set to: 1
  7066  0013DA  0E01               	movlw	1
  7067  0013DC  EC29  F02F         	call	_btPress
  7068  0013E0  0900               	iorlw	0
  7069  0013E2  B4D8               	btfsc	status,2,c
  7070  0013E4  D002               	goto	l1438
  7071  0013E6  0101               	movlb	1	; () banked
  7072  0013E8  0799               	decf	_opcaomenu& (0+255),f,b
  7073  0013EA                     l1438:
  7074                           
  7075                           ;main.c: 451: if (btPress(8)) {
  7076                           
  7077                           ; BSR set to: 1
  7078  0013EA  0E08               	movlw	8
  7079  0013EC  EC29  F02F         	call	_btPress
  7080  0013F0  0900               	iorlw	0
  7081  0013F2  B4D8               	btfsc	status,2,c
  7082  0013F4  D110               	goto	l1469
  7083                           
  7084                           ;main.c: 452: menu = 0;
  7085  0013F6  0E00               	movlw	0
  7086  0013F8  0100               	movlb	0	; () banked
  7087  0013FA  6FFB               	movwf	_menu& (0+255),b
  7088                           
  7089                           ;main.c: 453: senha_desbloqueio_func = 0;
  7090  0013FC  0E00               	movlw	0
  7091  0013FE  0101               	movlb	1	; () banked
  7092  001400  6FF3               	movwf	_senha_desbloqueio_func& (0+255),b
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;main.c: 454: }
  7096                           ;main.c: 455: } else
  7097  001402  D109               	goto	l1469
  7098  001404                     l1385:
  7099                           
  7100                           ;main.c: 459: if (menu == 8 || menu == 9) {
  7101                           
  7102                           ; BSR set to: 1
  7103  001404  0E08               	movlw	8
  7104  001406  0100               	movlb	0	; () banked
  7105  001408  19FB               	xorwf	_menu& (0+255),w,b
  7106  00140A  B4D8               	btfsc	status,2,c
  7107  00140C  D031               	goto	l1444
  7108                           
  7109                           ; BSR set to: 0
  7110  00140E  0E09               	movlw	9
  7111  001410  19FB               	xorwf	_menu& (0+255),w,b
  7112  001412  B4D8               	btfsc	status,2,c
  7113  001414  D02D               	goto	l1444
  7114  001416  D04D               	goto	l1441
  7115  001418                     
  7116                           ;main.c: 462: menu = 8;
  7117                           
  7118                           ; BSR set to: 0
  7119  001418  0E08               	movlw	8
  7120  00141A  0100               	movlb	0	; () banked
  7121  00141C  6FFB               	movwf	_menu& (0+255),b
  7122                           
  7123                           ;main.c: 463: break;
  7124  00141E  D031               	goto	l1446
  7125  001420                     
  7126                           ;main.c: 465: menu = 9;
  7127                           
  7128                           ; BSR set to: 0
  7129  001420  0E09               	movlw	9
  7130  001422  0100               	movlb	0	; () banked
  7131  001424  6FFB               	movwf	_menu& (0+255),b
  7132                           
  7133                           ;main.c: 466: line1[0] = '>';
  7134  001426  0E3E               	movlw	62
  7135  001428  0101               	movlb	1	; () banked
  7136  00142A  6FDA               	movwf	_line1& (0+255),b
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;main.c: 467: if (btPress(2)) {
  7140  00142C  0E02               	movlw	2
  7141  00142E  EC29  F02F         	call	_btPress
  7142  001432  0900               	iorlw	0
  7143  001434  B4D8               	btfsc	status,2,c
  7144  001436  D025               	goto	l1446
  7145                           
  7146                           ;main.c: 468: LATAbits.LATA4 = 1;
  7147  001438  8889               	bsf	3977,4,c	;volatile
  7148                           
  7149                           ;main.c: 469: delay(100);
  7150  00143A  0E00               	movlw	0
  7151  00143C  0100               	movlb	0	; () banked
  7152  00143E  6F61               	movwf	(delay@x+1)& (0+255),b
  7153  001440  0E64               	movlw	100
  7154  001442  6F60               	movwf	delay@x& (0+255),b
  7155  001444  EC94  F02E         	call	_delay	;wreg free
  7156                           
  7157                           ;main.c: 470: LATAbits.LATA4 = 0;
  7158  001448  9889               	bcf	3977,4,c	;volatile
  7159                           
  7160                           ;main.c: 471: delay(800);
  7161  00144A  0E03               	movlw	3
  7162  00144C  0100               	movlb	0	; () banked
  7163  00144E  6F61               	movwf	(delay@x+1)& (0+255),b
  7164  001450  0E20               	movlw	32
  7165  001452  6F60               	movwf	delay@x& (0+255),b
  7166  001454  EC94  F02E         	call	_delay	;wreg free
  7167                           
  7168                           ;main.c: 472: menu = 10;
  7169  001458  0E0A               	movlw	10
  7170  00145A  0100               	movlb	0	; () banked
  7171  00145C  6FFB               	movwf	_menu& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;main.c: 473: f_wifi_processo = 0;
  7175  00145E  0E00               	movlw	0
  7176  001460  0101               	movlb	1	; () banked
  7177  001462  6F96               	movwf	_f_wifi_processo& (0+255),b
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;main.c: 474: t_wifi_restart = 15;
  7181  001464  0E0F               	movlw	15
  7182  001466  6F97               	movwf	_t_wifi_restart& (0+255),b
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;main.c: 475: }
  7186                           ;main.c: 476: break;
  7187  001468  D00C               	goto	l1446
  7188  00146A                     
  7189                           ; BSR set to: 1
  7190                           ;main.c: 478: opcaomenu = 1;
  7191                           
  7192                           ; BSR set to: 1
  7193  00146A  0E01               	movlw	1
  7194  00146C  6F99               	movwf	_opcaomenu& (0+255),b
  7195                           
  7196                           ; BSR set to: 1
  7197                           ;main.c: 481: }
  7198                           
  7199                           ;main.c: 480: break;
  7200  00146E  D009               	goto	l1446
  7201  001470                     l1444:
  7202                           
  7203                           ; BSR set to: 1
  7204  001470  0101               	movlb	1	; () banked
  7205  001472  5199               	movf	_opcaomenu& (0+255),w,b
  7206                           
  7207                           ; Switch size 1, requested type "space"
  7208                           ; Number of cases is 2, Range of values is 1 to 2
  7209                           ; switch strategies available:
  7210                           ; Name         Instructions Cycles
  7211                           ; simple_byte            7     4 (average)
  7212                           ;	Chosen strategy is simple_byte
  7213  001474  0A01               	xorlw	1	; case 1
  7214  001476  B4D8               	btfsc	status,2,c
  7215  001478  D7CF               	goto	l1445
  7216  00147A  0A03               	xorlw	3	; case 2
  7217  00147C  B4D8               	btfsc	status,2,c
  7218  00147E  D7D0               	goto	l1447
  7219  001480  D7F4               	goto	l1449
  7220  001482                     l1446:
  7221                           
  7222                           ;main.c: 482: if (btPress(16)) opcaomenu++;
  7223                           
  7224                           ; BSR set to: 1
  7225  001482  0E10               	movlw	16
  7226  001484  EC29  F02F         	call	_btPress
  7227  001488  0900               	iorlw	0
  7228  00148A  B4D8               	btfsc	status,2,c
  7229  00148C  D002               	goto	l1450
  7230  00148E  0101               	movlb	1	; () banked
  7231  001490  2B99               	incf	_opcaomenu& (0+255),f,b
  7232  001492                     l1450:
  7233                           
  7234                           ;main.c: 483: if (btPress(1)) opcaomenu--;
  7235                           
  7236                           ; BSR set to: 1
  7237  001492  0E01               	movlw	1
  7238  001494  EC29  F02F         	call	_btPress
  7239  001498  0900               	iorlw	0
  7240  00149A  B4D8               	btfsc	status,2,c
  7241  00149C  D002               	goto	l1451
  7242  00149E  0101               	movlb	1	; () banked
  7243  0014A0  0799               	decf	_opcaomenu& (0+255),f,b
  7244  0014A2                     l1451:
  7245                           
  7246                           ;main.c: 484: if (btPress(8)) {
  7247                           
  7248                           ; BSR set to: 1
  7249  0014A2  0E08               	movlw	8
  7250  0014A4  EC29  F02F         	call	_btPress
  7251  0014A8  0900               	iorlw	0
  7252  0014AA  B4D8               	btfsc	status,2,c
  7253  0014AC  D0B4               	goto	l1469
  7254                           
  7255                           ;main.c: 485: menu = 3;
  7256  0014AE  0E03               	movlw	3
  7257  0014B0  D0B0               	goto	L13
  7258  0014B2                     l1441:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;main.c: 491: if (menu == 11) {
  7262                           
  7263                           ; BSR set to: 0
  7264  0014B2  0E0B               	movlw	11
  7265  0014B4  19FB               	xorwf	_menu& (0+255),w,b
  7266  0014B6  B4D8               	btfsc	status,2,c
  7267  0014B8  D089               	goto	l1455
  7268  0014BA  D0AD               	goto	l1469
  7269  0014BC                     
  7270                           ;main.c: 494: line1[0] = '>';
  7271                           
  7272                           ; BSR set to: 0
  7273  0014BC  0E3E               	movlw	62
  7274  0014BE  0101               	movlb	1	; () banked
  7275  0014C0  6FDA               	movwf	_line1& (0+255),b
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;main.c: 495: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7279  0014C2  0E40               	movlw	64
  7280  0014C4  EC29  F02F         	call	_btPress
  7281  0014C8  0900               	iorlw	0
  7282  0014CA  B4D8               	btfsc	status,2,c
  7283  0014CC  D00E               	goto	l1457
  7284  0014CE  0E4E               	movlw	low _t_fim_fase1
  7285  0014D0  0100               	movlb	0	; () banked
  7286  0014D2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7287  0014D4  0E00               	movlw	high _t_fim_fase1
  7288  0014D6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7289  0014D8  0E00               	movlw	0
  7290  0014DA  6F67               	movwf	setRangeValor@_min& (0+255),b
  7291  0014DC  0E1E               	movlw	30
  7292  0014DE  6F68               	movwf	setRangeValor@_max& (0+255),b
  7293  0014E0  0E08               	movlw	8
  7294  0014E2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7295  0014E4  0E2B               	movlw	43
  7296  0014E6  ECD0  F028         	call	_setRangeValor
  7297  0014EA                     l1457:
  7298                           
  7299                           ;main.c: 496: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7300  0014EA  0E20               	movlw	32
  7301  0014EC  EC29  F02F         	call	_btPress
  7302  0014F0  0900               	iorlw	0
  7303  0014F2  B4D8               	btfsc	status,2,c
  7304  0014F4  D077               	goto	l1459
  7305  0014F6  0E4E               	movlw	low _t_fim_fase1
  7306  0014F8  0100               	movlb	0	; () banked
  7307  0014FA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7308  0014FC  0E00               	movlw	high _t_fim_fase1
  7309  0014FE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7310  001500  0E00               	movlw	0
  7311  001502  6F67               	movwf	setRangeValor@_min& (0+255),b
  7312  001504  0E1E               	movlw	30
  7313  001506  6F68               	movwf	setRangeValor@_max& (0+255),b
  7314  001508  0E08               	movlw	8
  7315  00150A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7316  00150C  0E2D               	movlw	45
  7317  00150E  ECD0  F028         	call	_setRangeValor
  7318                           
  7319                           ;main.c: 497: break;
  7320  001512  D068               	goto	l1459
  7321  001514                     
  7322                           ;main.c: 499: line2[0] = '>';
  7323  001514  0E3E               	movlw	62
  7324  001516  0101               	movlb	1	; () banked
  7325  001518  6FC5               	movwf	_line2& (0+255),b
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;main.c: 500: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7329  00151A  0E40               	movlw	64
  7330  00151C  EC29  F02F         	call	_btPress
  7331  001520  0900               	iorlw	0
  7332  001522  B4D8               	btfsc	status,2,c
  7333  001524  D00E               	goto	l1461
  7334  001526  0E4D               	movlw	low _t_fim_fase2
  7335  001528  0100               	movlb	0	; () banked
  7336  00152A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7337  00152C  0E00               	movlw	high _t_fim_fase2
  7338  00152E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7339  001530  0E00               	movlw	0
  7340  001532  6F67               	movwf	setRangeValor@_min& (0+255),b
  7341  001534  0E1E               	movlw	30
  7342  001536  6F68               	movwf	setRangeValor@_max& (0+255),b
  7343  001538  0E09               	movlw	9
  7344  00153A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7345  00153C  0E2B               	movlw	43
  7346  00153E  ECD0  F028         	call	_setRangeValor
  7347  001542                     l1461:
  7348                           
  7349                           ;main.c: 501: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7350  001542  0E20               	movlw	32
  7351  001544  EC29  F02F         	call	_btPress
  7352  001548  0900               	iorlw	0
  7353  00154A  B4D8               	btfsc	status,2,c
  7354  00154C  D04B               	goto	l1459
  7355  00154E  0E4D               	movlw	low _t_fim_fase2
  7356  001550  0100               	movlb	0	; () banked
  7357  001552  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7358  001554  0E00               	movlw	high _t_fim_fase2
  7359  001556  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7360  001558  0E00               	movlw	0
  7361  00155A  6F67               	movwf	setRangeValor@_min& (0+255),b
  7362  00155C  0E1E               	movlw	30
  7363  00155E  6F68               	movwf	setRangeValor@_max& (0+255),b
  7364  001560  0E09               	movlw	9
  7365  001562  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7366  001564  0E2D               	movlw	45
  7367  001566  ECD0  F028         	call	_setRangeValor
  7368                           
  7369                           ;main.c: 502: break;
  7370  00156A  D03C               	goto	l1459
  7371  00156C                     
  7372                           ;main.c: 504: line3[0] = '>';
  7373  00156C  0E3E               	movlw	62
  7374  00156E  0101               	movlb	1	; () banked
  7375  001570  6FB0               	movwf	_line3& (0+255),b
  7376                           
  7377                           ; BSR set to: 1
  7378                           ;main.c: 505: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7379  001572  0E40               	movlw	64
  7380  001574  EC29  F02F         	call	_btPress
  7381  001578  0900               	iorlw	0
  7382  00157A  B4D8               	btfsc	status,2,c
  7383  00157C  D00E               	goto	l1464
  7384  00157E  0E4C               	movlw	low _t_fim_fase3
  7385  001580  0100               	movlb	0	; () banked
  7386  001582  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7387  001584  0E00               	movlw	high _t_fim_fase3
  7388  001586  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7389  001588  0E00               	movlw	0
  7390  00158A  6F67               	movwf	setRangeValor@_min& (0+255),b
  7391  00158C  0E1E               	movlw	30
  7392  00158E  6F68               	movwf	setRangeValor@_max& (0+255),b
  7393  001590  0E0A               	movlw	10
  7394  001592  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7395  001594  0E2B               	movlw	43
  7396  001596  ECD0  F028         	call	_setRangeValor
  7397  00159A                     l1464:
  7398                           
  7399                           ;main.c: 506: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7400  00159A  0E20               	movlw	32
  7401  00159C  EC29  F02F         	call	_btPress
  7402  0015A0  0900               	iorlw	0
  7403  0015A2  B4D8               	btfsc	status,2,c
  7404  0015A4  D01F               	goto	l1459
  7405  0015A6  0E4C               	movlw	low _t_fim_fase3
  7406  0015A8  0100               	movlb	0	; () banked
  7407  0015AA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7408  0015AC  0E00               	movlw	high _t_fim_fase3
  7409  0015AE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7410  0015B0  0E00               	movlw	0
  7411  0015B2  6F67               	movwf	setRangeValor@_min& (0+255),b
  7412  0015B4  0E1E               	movlw	30
  7413  0015B6  6F68               	movwf	setRangeValor@_max& (0+255),b
  7414  0015B8  0E0A               	movlw	10
  7415  0015BA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7416  0015BC  0E2D               	movlw	45
  7417  0015BE  ECD0  F028         	call	_setRangeValor
  7418                           
  7419                           ;main.c: 507: break;
  7420  0015C2  D010               	goto	l1459
  7421  0015C4  0E01               	movlw	1
  7422  0015C6  0101               	movlb	1	; () banked
  7423  0015C8  6F99               	movwf	_opcaomenu& (0+255),b
  7424                           
  7425                           ;main.c: 509: }
  7426  0015CA  D00C               	goto	l1459
  7427  0015CC                     l1455:
  7428                           
  7429                           ; BSR set to: 1
  7430  0015CC  0101               	movlb	1	; () banked
  7431  0015CE  5199               	movf	_opcaomenu& (0+255),w,b
  7432                           
  7433                           ; Switch size 1, requested type "space"
  7434                           ; Number of cases is 3, Range of values is 1 to 3
  7435                           ; switch strategies available:
  7436                           ; Name         Instructions Cycles
  7437                           ; simple_byte           10     6 (average)
  7438                           ;	Chosen strategy is simple_byte
  7439  0015D0  0A01               	xorlw	1	; case 1
  7440  0015D2  B4D8               	btfsc	status,2,c
  7441  0015D4  D773               	goto	l1456
  7442  0015D6  0A03               	xorlw	3	; case 2
  7443  0015D8  B4D8               	btfsc	status,2,c
  7444  0015DA  D79C               	goto	l1460
  7445  0015DC  0A01               	xorlw	1	; case 3
  7446  0015DE  B4D8               	btfsc	status,2,c
  7447  0015E0  D7C5               	goto	l1463
  7448  0015E2  D7F0               	goto	l1466
  7449  0015E4                     l1459:
  7450                           
  7451                           ;main.c: 510: if (btPress(16)) opcaomenu++;
  7452                           
  7453                           ; BSR set to: 1
  7454  0015E4  0E10               	movlw	16
  7455  0015E6  EC29  F02F         	call	_btPress
  7456  0015EA  0900               	iorlw	0
  7457  0015EC  B4D8               	btfsc	status,2,c
  7458  0015EE  D002               	goto	l1467
  7459  0015F0  0101               	movlb	1	; () banked
  7460  0015F2  2B99               	incf	_opcaomenu& (0+255),f,b
  7461  0015F4                     l1467:
  7462                           
  7463                           ;main.c: 511: if (btPress(1)) opcaomenu--;
  7464                           
  7465                           ; BSR set to: 1
  7466  0015F4  0E01               	movlw	1
  7467  0015F6  EC29  F02F         	call	_btPress
  7468  0015FA  0900               	iorlw	0
  7469  0015FC  B4D8               	btfsc	status,2,c
  7470  0015FE  D002               	goto	l1468
  7471  001600  0101               	movlb	1	; () banked
  7472  001602  0799               	decf	_opcaomenu& (0+255),f,b
  7473  001604                     l1468:
  7474                           
  7475                           ;main.c: 512: if (btPress(8)) {
  7476                           
  7477                           ; BSR set to: 1
  7478  001604  0E08               	movlw	8
  7479  001606  EC29  F02F         	call	_btPress
  7480  00160A  0900               	iorlw	0
  7481  00160C  B4D8               	btfsc	status,2,c
  7482  00160E  D003               	goto	l1469
  7483                           
  7484                           ;main.c: 513: menu = 2;
  7485  001610  0E02               	movlw	2
  7486  001612                     L13:
  7487  001612  0100               	movlb	0	; () banked
  7488  001614  6FFB               	movwf	_menu& (0+255),b
  7489  001616                     l1469:
  7490                           
  7491                           ;main.c: 514: }
  7492                           ;main.c: 515: }
  7493                           ;main.c: 516: updateLeds();
  7494                           
  7495                           ; BSR set to: 0
  7496                           
  7497                           ; BSR set to: 0
  7498                           
  7499                           ; BSR set to: 0
  7500                           
  7501                           ; BSR set to: 0
  7502                           
  7503                           ; BSR set to: 0
  7504  001616  EC1E  F02E         	call	_updateLeds	;wreg free
  7505                           
  7506                           ;main.c: 517: atualizaLCD(line1, line2, line3, line4);
  7507  00161A  0EDA               	movlw	low _line1
  7508  00161C  0100               	movlb	0	; () banked
  7509  00161E  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7510  001620  0E01               	movlw	high _line1
  7511  001622  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7512  001624  0EC5               	movlw	low _line2
  7513  001626  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7514  001628  0E01               	movlw	high _line2
  7515  00162A  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7516  00162C  0EB0               	movlw	low _line3
  7517  00162E  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7518  001630  0E01               	movlw	high _line3
  7519  001632  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7520  001634  0E9B               	movlw	low _line4
  7521  001636  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7522  001638  0E01               	movlw	high _line4
  7523  00163A  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7524  00163C  EC14  F027         	call	_atualizaLCD	;wreg free
  7525  001640  EF82  F001         	goto	l1278
  7526  001644                     __end_of_main:
  7527                           	opt stack 0
  7528                           tblptru	equ	0xFF8
  7529                           tblptrh	equ	0xFF7
  7530                           tblptrl	equ	0xFF6
  7531                           tablat	equ	0xFF5
  7532                           prodh	equ	0xFF4
  7533                           prodl	equ	0xFF3
  7534                           intcon	equ	0xFF2
  7535                           intcon2	equ	0xFF1
  7536                           intcon3	equ	0xFF0
  7537                           postinc0	equ	0xFEE
  7538                           wreg	equ	0xFE8
  7539                           postdec1	equ	0xFE5
  7540                           fsr1l	equ	0xFE1
  7541                           indf2	equ	0xFDF
  7542                           fsr2h	equ	0xFDA
  7543                           fsr2l	equ	0xFD9
  7544                           status	equ	0xFD8
  7545                           
  7546 ;; *************** function _updateLeds *****************
  7547 ;; Defined at:
  7548 ;;		line 27 in file "src/Led_display.h"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    8
  7569 ;; This function calls:
  7570 ;;		_I2C_Start
  7571 ;;		_I2C_Stop
  7572 ;;		_I2C_Write
  7573 ;; This function is called by:
  7574 ;;		_main
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text1
  7579  005C3C                     __ptext1:
  7580                           	opt stack 0
  7581  005C3C                     _updateLeds:
  7582                           	opt stack 22
  7583                           
  7584                           ;Led_display.h: 29: if (_led != leds) {
  7585                           
  7586                           ;incstack = 0
  7587  005C3C  5045               	movf	_leds,w,c
  7588  005C3E  1850               	xorwf	__led,w,c
  7589  005C40  B4D8               	btfsc	status,2,c
  7590  005C42  0012               	return	
  7591                           
  7592                           ;Led_display.h: 30: I2C_Start();
  7593  005C44  EC84  F02F         	call	_I2C_Start	;wreg free
  7594                           
  7595                           ;Led_display.h: 31: I2C_Write(0x46);
  7596  005C48  0E00               	movlw	0
  7597  005C4A  0100               	movlb	0	; () banked
  7598  005C4C  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7599  005C4E  0E46               	movlw	70
  7600  005C50  6F61               	movwf	I2C_Write@d& (0+255),b
  7601  005C52  EC72  F02F         	call	_I2C_Write	;wreg free
  7602                           
  7603                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7604  005C56  C045  F061         	movff	_leds,I2C_Write@d
  7605  005C5A  0100               	movlb	0	; () banked
  7606  005C5C  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7607  005C5E  EC72  F02F         	call	_I2C_Write	;wreg free
  7608                           
  7609                           ;Led_display.h: 33: I2C_Stop();
  7610  005C62  EC80  F02F         	call	_I2C_Stop	;wreg free
  7611                           
  7612                           ;Led_display.h: 34: _led = leds;
  7613  005C66  C045  F050         	movff	_leds,__led
  7614  005C6A  0012               	return	
  7615  005C6C                     __end_of_updateLeds:
  7616                           	opt stack 0
  7617                           tblptru	equ	0xFF8
  7618                           tblptrh	equ	0xFF7
  7619                           tblptrl	equ	0xFF6
  7620                           tablat	equ	0xFF5
  7621                           prodh	equ	0xFF4
  7622                           prodl	equ	0xFF3
  7623                           intcon	equ	0xFF2
  7624                           intcon2	equ	0xFF1
  7625                           intcon3	equ	0xFF0
  7626                           postinc0	equ	0xFEE
  7627                           wreg	equ	0xFE8
  7628                           postdec1	equ	0xFE5
  7629                           fsr1l	equ	0xFE1
  7630                           indf2	equ	0xFDF
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635 ;; *************** function _setUmidade *****************
  7636 ;; Defined at:
  7637 ;;		line 44 in file "src/FuncoesControlador.h"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  tp              1    wreg     unsigned char 
  7640 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7641 ;;		 -> umidajt(1), 
  7642 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7643 ;;		 -> tempajt(1), 
  7644 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7645 ;;		 -> clima(1), 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  tp              1   14[BANK0 ] unsigned char 
  7648 ;;  _umd            1   25[BANK0 ] unsigned char 
  7649 ;;  _clim           1   24[BANK0 ] unsigned char 
  7650 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7660 ;;      Params:         0       6       0       0       0       0       0       0       0
  7661 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7663 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7664 ;;Total ram usage:       18 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    9
  7667 ;; This function calls:
  7668 ;;		_tabelaUmidade
  7669 ;;		_writeEEPROM_ext
  7670 ;; This function is called by:
  7671 ;;		_main
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text2
  7676  004794                     __ptext2:
  7677                           	opt stack 0
  7678  004794                     _setUmidade:
  7679                           	opt stack 21
  7680                           
  7681                           ;incstack = 0
  7682                           ;setUmidade@tp stored from wreg
  7683  004794  0100               	movlb	0	; () banked
  7684  004796  6F6E               	movwf	setUmidade@tp& (0+255),b
  7685                           
  7686                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7687  004798  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7688  00479C  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7689  0047A0  50DF               	movf	indf2,w,c
  7690  0047A2  0100               	movlb	0	; () banked
  7691  0047A4  6F79               	movwf	setUmidade@_umd& (0+255),b
  7692                           
  7693                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7694  0047A6  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7695  0047AA  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7696  0047AE  50DF               	movf	indf2,w,c
  7697  0047B0  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7698                           
  7699                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7700  0047B2  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7701  0047B6  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7702  0047BA  50DF               	movf	indf2,w,c
  7703  0047BC  6F78               	movwf	setUmidade@_clim& (0+255),b
  7704                           
  7705                           ;FuncoesControlador.h: 49: switch (tp) {
  7706  0047BE  D05C               	goto	l906
  7707  0047C0                     
  7708                           ; BSR set to: 0
  7709                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7710                           
  7711                           ; BSR set to: 0
  7712  0047C0  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7713  0047C2  A4D8               	btfss	status,2,c
  7714  0047C4  D00F               	goto	l908
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7718  0047C6  0E64               	movlw	100
  7719  0047C8  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7720  0047CA  D005               	goto	l910
  7721                           
  7722                           ; BSR set to: 0
  7723  0047CC  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7724  0047CE  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7725  0047D2  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7726  0047D4  D004               	goto	l912
  7727  0047D6                     l910:
  7728                           
  7729                           ; BSR set to: 0
  7730                           
  7731                           ; BSR set to: 0
  7732  0047D6  0E00               	movlw	0
  7733  0047D8  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7734  0047DA  0E0A               	movlw	10
  7735  0047DC  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7736  0047DE                     l912:
  7737                           
  7738                           ; BSR set to: 0
  7739                           
  7740                           ; BSR set to: 0
  7741  0047DE  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7742                           
  7743                           ;FuncoesControlador.h: 53: } else {
  7744  0047E2  D00E               	goto	l913
  7745  0047E4                     l908:
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 90 : ++_umd;
  7749                           
  7750                           ; BSR set to: 0
  7751  0047E4  0E78               	movlw	120
  7752  0047E6  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7753  0047E8  D005               	goto	l915
  7754                           
  7755                           ; BSR set to: 0
  7756  0047EA  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7757  0047EC  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7758  0047F0  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7759  0047F2  D004               	goto	l917
  7760  0047F4                     l915:
  7761                           
  7762                           ; BSR set to: 0
  7763                           
  7764                           ; BSR set to: 0
  7765  0047F4  0E00               	movlw	0
  7766  0047F6  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7767  0047F8  0E5A               	movlw	90
  7768  0047FA  6F71               	movwf	_setUmidade$1298& (0+255),b
  7769  0047FC                     l917:
  7770                           
  7771                           ; BSR set to: 0
  7772                           
  7773                           ; BSR set to: 0
  7774  0047FC  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7775  004800                     l913:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;FuncoesControlador.h: 55: }
  7779                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7780                           
  7781                           ; BSR set to: 0
  7782  004800  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7783  004804  0E02               	movlw	2
  7784  004806  EC54  F02D         	call	_writeEEPROM_ext
  7785                           
  7786                           ;FuncoesControlador.h: 58: break;
  7787  00480A  D040               	goto	l918
  7788  00480C                     
  7789                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7790  00480C  0100               	movlb	0	; () banked
  7791  00480E  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7792  004810  A4D8               	btfss	status,2,c
  7793  004812  D00F               	goto	l920
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7797  004814  0E0A               	movlw	10
  7798  004816  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7799  004818  D005               	goto	l922
  7800                           
  7801                           ; BSR set to: 0
  7802  00481A  0779               	decf	setUmidade@_umd& (0+255),f,b
  7803  00481C  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7804  004820  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7805  004822  D004               	goto	l924
  7806  004824                     l922:
  7807                           
  7808                           ; BSR set to: 0
  7809                           
  7810                           ; BSR set to: 0
  7811  004824  0E00               	movlw	0
  7812  004826  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7813  004828  0E64               	movlw	100
  7814  00482A  6F73               	movwf	_setUmidade$1299& (0+255),b
  7815  00482C                     l924:
  7816                           
  7817                           ; BSR set to: 0
  7818                           
  7819                           ; BSR set to: 0
  7820  00482C  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7821                           
  7822                           ;FuncoesControlador.h: 62: } else {
  7823  004830  D00E               	goto	l925
  7824  004832                     l920:
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;FuncoesControlador.h: 63: _umd = (_umd <= 90) ? 120 : --_umd;
  7828                           
  7829                           ; BSR set to: 0
  7830  004832  0E5A               	movlw	90
  7831  004834  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7832  004836  D005               	goto	l927
  7833                           
  7834                           ; BSR set to: 0
  7835  004838  0779               	decf	setUmidade@_umd& (0+255),f,b
  7836  00483A  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7837  00483E  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7838  004840  D004               	goto	l929
  7839  004842                     l927:
  7840                           
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  004842  0E00               	movlw	0
  7845  004844  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7846  004846  0E78               	movlw	120
  7847  004848  6F75               	movwf	_setUmidade$1300& (0+255),b
  7848  00484A                     l929:
  7849                           
  7850                           ; BSR set to: 0
  7851                           
  7852                           ; BSR set to: 0
  7853  00484A  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7854  00484E                     l925:
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;FuncoesControlador.h: 64: }
  7858                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7859                           
  7860                           ; BSR set to: 0
  7861  00484E  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7862  004852  0E02               	movlw	2
  7863  004854  EC54  F02D         	call	_writeEEPROM_ext
  7864                           
  7865                           ;FuncoesControlador.h: 67: break;
  7866  004858  D019               	goto	l918
  7867  00485A                     
  7868                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7869  00485A  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7870  00485E  0100               	movlb	0	; () banked
  7871  004860  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7872  004862  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7873  004866  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7874  004868  C0F7  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7875  00486C  EC22  F00B         	call	_tabelaUmidade	;wreg free
  7876  004870  0100               	movlb	0	; () banked
  7877  004872  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7878  004874  6F79               	movwf	setUmidade@_umd& (0+255),b
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;FuncoesControlador.h: 71: }
  7882                           
  7883                           ;FuncoesControlador.h: 70: break;
  7884  004876  D00A               	goto	l918
  7885  004878                     l906:
  7886                           
  7887                           ; BSR set to: 0
  7888                           
  7889                           ; BSR set to: 0
  7890  004878  516E               	movf	setUmidade@tp& (0+255),w,b
  7891                           
  7892                           ; Switch size 1, requested type "space"
  7893                           ; Number of cases is 3, Range of values is 43 to 65
  7894                           ; switch strategies available:
  7895                           ; Name         Instructions Cycles
  7896                           ; simple_byte           10     6 (average)
  7897                           ;	Chosen strategy is simple_byte
  7898  00487A  0A2B               	xorlw	43	; case 43
  7899  00487C  B4D8               	btfsc	status,2,c
  7900  00487E  D7A0               	goto	l907
  7901  004880  0A06               	xorlw	6	; case 45
  7902  004882  B4D8               	btfsc	status,2,c
  7903  004884  D7C3               	goto	l919
  7904  004886  0A6C               	xorlw	108	; case 65
  7905  004888  B4D8               	btfsc	status,2,c
  7906  00488A  D7E7               	goto	l930
  7907  00488C                     l918:
  7908                           
  7909                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7910                           
  7911                           ; BSR set to: 0
  7912  00488C  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7913  004890  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7914  004894  C079  FFDF         	movff	setUmidade@_umd,indf2
  7915  004898  0012               	return		;funcret
  7916  00489A                     __end_of_setUmidade:
  7917                           	opt stack 0
  7918                           tblptru	equ	0xFF8
  7919                           tblptrh	equ	0xFF7
  7920                           tblptrl	equ	0xFF6
  7921                           tablat	equ	0xFF5
  7922                           prodh	equ	0xFF4
  7923                           prodl	equ	0xFF3
  7924                           intcon	equ	0xFF2
  7925                           intcon2	equ	0xFF1
  7926                           intcon3	equ	0xFF0
  7927                           postinc0	equ	0xFEE
  7928                           wreg	equ	0xFE8
  7929                           postdec1	equ	0xFE5
  7930                           fsr1l	equ	0xFE1
  7931                           indf2	equ	0xFDF
  7932                           fsr2h	equ	0xFDA
  7933                           fsr2l	equ	0xFD9
  7934                           status	equ	0xFD8
  7935                           
  7936 ;; *************** function _tabelaUmidade *****************
  7937 ;; Defined at:
  7938 ;;		line 4 in file "src/TabelasUmidade.h"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  _tmp            2    0[BANK0 ] int 
  7941 ;;  _clima          2    2[BANK0 ] int 
  7942 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  _umd            1    7[BANK0 ] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  2    0[BANK0 ] unsigned int 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7954 ;;      Params:         0       5       0       0       0       0       0       0       0
  7955 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7956 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7957 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7958 ;;Total ram usage:        8 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    6
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_setUmidade
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text3
  7969  001644                     __ptext3:
  7970                           	opt stack 0
  7971  001644                     _tabelaUmidade:
  7972                           	opt stack 23
  7973                           
  7974                           ;TabelasUmidade.h: 5: char _umd = 0;
  7975                           
  7976                           ;incstack = 0
  7977  001644  0E00               	movlw	0
  7978  001646  0100               	movlb	0	; () banked
  7979  001648  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7980                           
  7981                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7982  00164A  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7983  00164C  B4D8               	btfsc	status,2,c
  7984  00164E  D306               	goto	l297
  7985  001650  D31A               	goto	l296
  7986  001652                     
  7987                           ; BSR set to: 0
  7988                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7989                           
  7990                           ; BSR set to: 0
  7991  001652  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7992  001654  D006               	goto	u8760
  7993  001656  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7994  001658  E106               	bnz	l6729
  7995  00165A  0E5B               	movlw	91
  7996  00165C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7997  00165E  B0D8               	btfsc	status,0,c
  7998  001660  D002               	goto	l299
  7999  001662                     u8760:
  8000                           
  8001                           ; BSR set to: 0
  8002  001662  0E55               	movlw	85
  8003  001664  D04B               	goto	L24
  8004  001666                     l299:
  8005  001666                     l6729:
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;TabelasUmidade.h: 10: else
  8009                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  8010  001666  0E5B               	movlw	91
  8011  001668  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8012  00166A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8013  00166C  A4D8               	btfss	status,2,c
  8014  00166E  D002               	goto	l301
  8015  001670                     u8770:
  8016                           
  8017                           ; BSR set to: 0
  8018  001670  0E56               	movlw	86
  8019  001672  D044               	goto	L24
  8020  001674                     l301:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;TabelasUmidade.h: 12: else
  8024                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  8025                           
  8026                           ; BSR set to: 0
  8027  001674  0E5C               	movlw	92
  8028  001676  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8029  001678  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8030  00167A  A4D8               	btfss	status,2,c
  8031  00167C  D002               	goto	l303
  8032                           
  8033                           ; BSR set to: 0
  8034  00167E  0E57               	movlw	87
  8035  001680  D03D               	goto	L24
  8036  001682                     l303:
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;TabelasUmidade.h: 14: else
  8040                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  8041                           
  8042                           ; BSR set to: 0
  8043  001682  0E5D               	movlw	93
  8044  001684  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8045  001686  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8046  001688  A4D8               	btfss	status,2,c
  8047  00168A  D002               	goto	l305
  8048  00168C                     u8790:
  8049                           
  8050                           ; BSR set to: 0
  8051  00168C  0E58               	movlw	88
  8052  00168E  D036               	goto	L24
  8053  001690                     l305:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;TabelasUmidade.h: 16: else
  8057                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  8058                           
  8059                           ; BSR set to: 0
  8060  001690  0E5E               	movlw	94
  8061  001692  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8062  001694  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8063  001696  A4D8               	btfss	status,2,c
  8064  001698  D002               	goto	l307
  8065  00169A                     u8800:
  8066                           
  8067                           ; BSR set to: 0
  8068  00169A  0E59               	movlw	89
  8069  00169C  D02F               	goto	L24
  8070  00169E                     l307:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;TabelasUmidade.h: 18: else
  8074                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  8075                           
  8076                           ; BSR set to: 0
  8077  00169E  0E5F               	movlw	95
  8078  0016A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8079  0016A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8080  0016A4  A4D8               	btfss	status,2,c
  8081  0016A6  D002               	goto	l309
  8082  0016A8                     u8810:
  8083                           
  8084                           ; BSR set to: 0
  8085  0016A8  0E5A               	movlw	90
  8086  0016AA  D028               	goto	L24
  8087  0016AC                     l309:
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;TabelasUmidade.h: 20: else
  8091                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  8092                           
  8093                           ; BSR set to: 0
  8094  0016AC  0E60               	movlw	96
  8095  0016AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8096  0016B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8097  0016B2  A4D8               	btfss	status,2,c
  8098  0016B4  D002               	goto	l311
  8099  0016B6                     u8820:
  8100                           
  8101                           ; BSR set to: 0
  8102  0016B6  0E5B               	movlw	91
  8103  0016B8  D021               	goto	L24
  8104  0016BA                     l311:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;TabelasUmidade.h: 22: else
  8108                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  8109                           
  8110                           ; BSR set to: 0
  8111  0016BA  0E61               	movlw	97
  8112  0016BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8113  0016BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8114  0016C0  A4D8               	btfss	status,2,c
  8115  0016C2  D002               	goto	l313
  8116  0016C4                     u8830:
  8117                           
  8118                           ; BSR set to: 0
  8119  0016C4  0E5C               	movlw	92
  8120  0016C6  D01A               	goto	L24
  8121  0016C8                     l313:
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;TabelasUmidade.h: 24: else
  8125                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  8126                           
  8127                           ; BSR set to: 0
  8128  0016C8  0E62               	movlw	98
  8129  0016CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8130  0016CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8131  0016CE  A4D8               	btfss	status,2,c
  8132  0016D0  D002               	goto	l315
  8133  0016D2                     u8840:
  8134                           
  8135                           ; BSR set to: 0
  8136  0016D2  0E5D               	movlw	93
  8137  0016D4  D013               	goto	L24
  8138  0016D6                     l315:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;TabelasUmidade.h: 26: else
  8142                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  8143                           
  8144                           ; BSR set to: 0
  8145  0016D6  0E63               	movlw	99
  8146  0016D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8147  0016DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8148  0016DC  A4D8               	btfss	status,2,c
  8149  0016DE  D002               	goto	l317
  8150  0016E0                     u8850:
  8151                           
  8152                           ; BSR set to: 0
  8153  0016E0  0E5E               	movlw	94
  8154  0016E2  D00C               	goto	L24
  8155  0016E4                     l317:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;TabelasUmidade.h: 28: else
  8159                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  8160                           
  8161                           ; BSR set to: 0
  8162  0016E4  0E64               	movlw	100
  8163  0016E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8164  0016E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8165  0016EA  B4D8               	btfsc	status,2,c
  8166  0016EC  EFB6  F00F         	goto	u10610
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;TabelasUmidade.h: 30: else
  8170                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  8171                           
  8172                           ; BSR set to: 0
  8173                           
  8174                           ; BSR set to: 0
  8175  0016F0  0E65               	movlw	101
  8176  0016F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8177  0016F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8178  0016F6  A4D8               	btfss	status,2,c
  8179  0016F8  D004               	goto	l321
  8180  0016FA  D7F2               	goto	u8850
  8181  0016FC                     L24:
  8182  0016FC  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  8183  0016FE  EF07  F013         	goto	l630
  8184  001702                     l321:
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;TabelasUmidade.h: 32: else
  8188                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  8189                           
  8190                           ; BSR set to: 0
  8191  001702  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8192  001704  D00E               	goto	l323
  8193  001706  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8194  001708  E104               	bnz	u8880
  8195  00170A  0E66               	movlw	102
  8196  00170C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8197  00170E  A0D8               	btfss	status,0,c
  8198  001710  D008               	goto	l323
  8199  001712                     u8880:
  8200                           
  8201                           ; BSR set to: 0
  8202  001712  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8203  001714  D7E5               	goto	u8850
  8204  001716  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8205  001718  E104               	bnz	l6779
  8206  00171A  0E6C               	movlw	108
  8207  00171C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8208  00171E  A0D8               	btfss	status,0,c
  8209  001720  D7DF               	goto	u8850
  8210  001722                     l323:
  8211  001722                     l6779:
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;TabelasUmidade.h: 34: else
  8215                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  8216  001722  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8217  001724  D010               	goto	l325
  8218  001726  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8219  001728  E104               	bnz	u8900
  8220  00172A  0E6C               	movlw	108
  8221  00172C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8222  00172E  A0D8               	btfss	status,0,c
  8223  001730  D00A               	goto	l325
  8224  001732                     u8900:
  8225                           
  8226                           ; BSR set to: 0
  8227  001732  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8228  001734  EFB6  F00F         	goto	u10610
  8229  001738  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8230  00173A  E105               	bnz	l6785
  8231  00173C  0E77               	movlw	119
  8232  00173E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8233  001740  A0D8               	btfss	status,0,c
  8234  001742  EFB6  F00F         	goto	u10610
  8235  001746                     l325:
  8236  001746                     l6785:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;TabelasUmidade.h: 36: else
  8240                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  8241  001746  0E77               	movlw	119
  8242  001748  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8243  00174A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8244  00174C  B4D8               	btfsc	status,2,c
  8245  00174E  EFA9  F00F         	goto	u10590
  8246                           
  8247                           ; BSR set to: 0
  8248  001752  0E78               	movlw	120
  8249  001754  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8250  001756  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8251  001758  B4D8               	btfsc	status,2,c
  8252                           
  8253                           ; BSR set to: 0
  8254  00175A  D3FB               	goto	u10590
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;TabelasUmidade.h: 38: else
  8258                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  8259                           
  8260                           ; BSR set to: 0
  8261                           
  8262                           ; BSR set to: 0
  8263  00175C  0E79               	movlw	121
  8264  00175E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8265  001760  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8266  001762  B4D8               	btfsc	status,2,c
  8267  001764  D3EE               	goto	u10580
  8268                           
  8269                           ; BSR set to: 0
  8270  001766  0E7A               	movlw	122
  8271  001768  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8272  00176A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8273  00176C  B4D8               	btfsc	status,2,c
  8274                           
  8275                           ; BSR set to: 0
  8276  00176E  D3E9               	goto	u10580
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;TabelasUmidade.h: 40: else
  8280                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8281                           
  8282                           ; BSR set to: 0
  8283                           
  8284                           ; BSR set to: 0
  8285  001770  0E7B               	movlw	123
  8286  001772  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8287  001774  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8288  001776  B4D8               	btfsc	status,2,c
  8289  001778  EF42  F011         	goto	u11220
  8290                           
  8291                           ; BSR set to: 0
  8292  00177C  0E7C               	movlw	124
  8293  00177E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8294  001780  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8295  001782  B4D8               	btfsc	status,2,c
  8296                           
  8297                           ; BSR set to: 0
  8298  001784  EF42  F011         	goto	u11220
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;TabelasUmidade.h: 42: else
  8302                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8303                           
  8304                           ; BSR set to: 0
  8305                           
  8306                           ; BSR set to: 0
  8307  001788  0E7D               	movlw	125
  8308  00178A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8309  00178C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8310  00178E  B4D8               	btfsc	status,2,c
  8311  001790  EF2F  F011         	goto	u11200
  8312                           
  8313                           ; BSR set to: 0
  8314  001794  0E7E               	movlw	126
  8315  001796  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8316  001798  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8317  00179A  B4D8               	btfsc	status,2,c
  8318                           
  8319                           ; BSR set to: 0
  8320  00179C  EF2F  F011         	goto	u11200
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;TabelasUmidade.h: 44: else
  8324                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8325                           
  8326                           ; BSR set to: 0
  8327                           
  8328                           ; BSR set to: 0
  8329  0017A0  0E7F               	movlw	127
  8330  0017A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8331  0017A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8332  0017A6  B4D8               	btfsc	status,2,c
  8333  0017A8  EF27  F011         	goto	u11190
  8334                           
  8335                           ; BSR set to: 0
  8336  0017AC  0E80               	movlw	128
  8337  0017AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8338  0017B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8339  0017B2  B4D8               	btfsc	status,2,c
  8340                           
  8341                           ; BSR set to: 0
  8342  0017B4  EF27  F011         	goto	u11190
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;TabelasUmidade.h: 46: else
  8346                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8347                           
  8348                           ; BSR set to: 0
  8349                           
  8350                           ; BSR set to: 0
  8351  0017B8  0E81               	movlw	129
  8352  0017BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8353  0017BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8354  0017BE  B4D8               	btfsc	status,2,c
  8355  0017C0  D1BB               	goto	u9750
  8356                           
  8357                           ; BSR set to: 0
  8358  0017C2  0E82               	movlw	130
  8359  0017C4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8360  0017C6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8361  0017C8  B4D8               	btfsc	status,2,c
  8362                           
  8363                           ; BSR set to: 0
  8364  0017CA  D1B6               	goto	u9750
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;TabelasUmidade.h: 48: else
  8368                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8369                           
  8370                           ; BSR set to: 0
  8371                           
  8372                           ; BSR set to: 0
  8373  0017CC  0E83               	movlw	131
  8374  0017CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8375  0017D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8376  0017D2  B4D8               	btfsc	status,2,c
  8377  0017D4  D1BD               	goto	u9770
  8378                           
  8379                           ; BSR set to: 0
  8380  0017D6  0E84               	movlw	132
  8381  0017D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8382  0017DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8383  0017DC  B4D8               	btfsc	status,2,c
  8384                           
  8385                           ; BSR set to: 0
  8386  0017DE  D1B8               	goto	u9770
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;TabelasUmidade.h: 50: else
  8390                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8391                           
  8392                           ; BSR set to: 0
  8393                           
  8394                           ; BSR set to: 0
  8395  0017E0  0E85               	movlw	133
  8396  0017E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8397  0017E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8398  0017E6  B4D8               	btfsc	status,2,c
  8399  0017E8  D1BF               	goto	u9790
  8400                           
  8401                           ; BSR set to: 0
  8402  0017EA  0E86               	movlw	134
  8403  0017EC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8404  0017EE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8405  0017F0  B4D8               	btfsc	status,2,c
  8406                           
  8407                           ; BSR set to: 0
  8408  0017F2  D1BA               	goto	u9790
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;TabelasUmidade.h: 52: else
  8412                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8413                           
  8414                           ; BSR set to: 0
  8415                           
  8416                           ; BSR set to: 0
  8417  0017F4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8418  0017F6  D00E               	goto	l359
  8419  0017F8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8420  0017FA  E104               	bnz	u9080
  8421  0017FC  0E87               	movlw	135
  8422  0017FE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8423  001800  A0D8               	btfss	status,0,c
  8424  001802  D008               	goto	l359
  8425  001804                     u9080:
  8426                           
  8427                           ; BSR set to: 0
  8428  001804  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8429  001806  D0ED               	goto	u9470
  8430  001808  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8431  00180A  E104               	bnz	l6839
  8432  00180C  0E93               	movlw	147
  8433  00180E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8434  001810  A0D8               	btfss	status,0,c
  8435  001812  D0E7               	goto	u9470
  8436  001814                     l359:
  8437  001814                     l6839:
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;TabelasUmidade.h: 54: else
  8441                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8442  001814  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8443  001816  D00E               	goto	l361
  8444  001818  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8445  00181A  E104               	bnz	u9100
  8446  00181C  0E93               	movlw	147
  8447  00181E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8448  001820  A0D8               	btfss	status,0,c
  8449  001822  D008               	goto	l361
  8450  001824                     u9100:
  8451                           
  8452                           ; BSR set to: 0
  8453  001824  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8454  001826  D1B2               	goto	u9810
  8455  001828  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8456  00182A  E104               	bnz	l6845
  8457  00182C  0E97               	movlw	151
  8458  00182E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8459  001830  A0D8               	btfss	status,0,c
  8460  001832  D1AC               	goto	u9810
  8461  001834                     l361:
  8462  001834                     l6845:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;TabelasUmidade.h: 56: else
  8466                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8467  001834  0E97               	movlw	151
  8468  001836  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8469  001838  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8470  00183A  B4D8               	btfsc	status,2,c
  8471  00183C  D1B3               	goto	u9830
  8472                           
  8473                           ; BSR set to: 0
  8474  00183E  0E98               	movlw	152
  8475  001840  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8476  001842  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8477  001844  B4D8               	btfsc	status,2,c
  8478                           
  8479                           ; BSR set to: 0
  8480  001846  D1AE               	goto	u9830
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;TabelasUmidade.h: 58: else
  8484                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8485                           
  8486                           ; BSR set to: 0
  8487                           
  8488                           ; BSR set to: 0
  8489  001848  0E99               	movlw	153
  8490  00184A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8491  00184C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8492  00184E  B4D8               	btfsc	status,2,c
  8493  001850  D1B5               	goto	u9850
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;TabelasUmidade.h: 60: else
  8497                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8498                           
  8499                           ; BSR set to: 0
  8500                           
  8501                           ; BSR set to: 0
  8502  001852  0E9A               	movlw	154
  8503  001854  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8504  001856  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8505  001858  B4D8               	btfsc	status,2,c
  8506  00185A  D1C2               	goto	u9870
  8507                           
  8508                           ; BSR set to: 0
  8509  00185C  0E9B               	movlw	155
  8510  00185E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8511  001860  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8512  001862  B4D8               	btfsc	status,2,c
  8513                           
  8514                           ; BSR set to: 0
  8515  001864  D1BD               	goto	u9870
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;TabelasUmidade.h: 62: else
  8519                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8520                           
  8521                           ; BSR set to: 0
  8522                           
  8523                           ; BSR set to: 0
  8524  001866  0E9C               	movlw	156
  8525  001868  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8526  00186A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8527  00186C  B4D8               	btfsc	status,2,c
  8528  00186E  D1C4               	goto	u9890
  8529                           
  8530                           ; BSR set to: 0
  8531  001870  0E9D               	movlw	157
  8532  001872  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8533  001874  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8534  001876  B4D8               	btfsc	status,2,c
  8535                           
  8536                           ; BSR set to: 0
  8537  001878  D1BF               	goto	u9890
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;TabelasUmidade.h: 64: else
  8541                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8542                           
  8543                           ; BSR set to: 0
  8544                           
  8545                           ; BSR set to: 0
  8546  00187A  0E9E               	movlw	158
  8547  00187C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8548  00187E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8549  001880  B4D8               	btfsc	status,2,c
  8550  001882  D0E4               	goto	u9560
  8551                           
  8552                           ; BSR set to: 0
  8553  001884  0E9F               	movlw	159
  8554  001886  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8555  001888  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8556  00188A  B4D8               	btfsc	status,2,c
  8557                           
  8558                           ; BSR set to: 0
  8559  00188C  D0DF               	goto	u9560
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;TabelasUmidade.h: 66: else
  8563                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ; BSR set to: 0
  8568  00188E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8569  001890  EF07  F013         	goto	l630
  8570  001894  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8571  001896  E101               	bnz	u9210
  8572  001898  D0E0               	goto	L25
  8573  00189A                     u9210:
  8574  00189A  D1C6               	goto	u9930
  8575  00189C                     
  8576                           ; BSR set to: 0
  8577                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8578                           
  8579                           ; BSR set to: 0
  8580  00189C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8581  00189E  D6F6               	goto	u8790
  8582  0018A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8583  0018A2  E104               	bnz	l6881
  8584  0018A4  0E5B               	movlw	91
  8585  0018A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8586  0018A8  A0D8               	btfss	status,0,c
  8587  0018AA  D6F0               	goto	u8790
  8588  0018AC                     l6881:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;TabelasUmidade.h: 72: else
  8592                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8593  0018AC  0E5B               	movlw	91
  8594  0018AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8595  0018B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8596  0018B2  B4D8               	btfsc	status,2,c
  8597  0018B4  D6F2               	goto	u8800
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;TabelasUmidade.h: 74: else
  8601                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8602                           
  8603                           ; BSR set to: 0
  8604                           
  8605                           ; BSR set to: 0
  8606  0018B6  0E5C               	movlw	92
  8607  0018B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8608  0018BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8609  0018BC  B4D8               	btfsc	status,2,c
  8610  0018BE  D6F4               	goto	u8810
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;TabelasUmidade.h: 76: else
  8614                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8615                           
  8616                           ; BSR set to: 0
  8617                           
  8618                           ; BSR set to: 0
  8619  0018C0  0E5D               	movlw	93
  8620  0018C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8621  0018C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8622  0018C6  B4D8               	btfsc	status,2,c
  8623  0018C8  D6F6               	goto	u8820
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;TabelasUmidade.h: 78: else
  8627                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8628                           
  8629                           ; BSR set to: 0
  8630                           
  8631                           ; BSR set to: 0
  8632  0018CA  0E5E               	movlw	94
  8633  0018CC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8634  0018CE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8635  0018D0  B4D8               	btfsc	status,2,c
  8636  0018D2  D6F8               	goto	u8830
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;TabelasUmidade.h: 80: else
  8640                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8641                           
  8642                           ; BSR set to: 0
  8643                           
  8644                           ; BSR set to: 0
  8645  0018D4  0E5F               	movlw	95
  8646  0018D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8647  0018D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8648  0018DA  B4D8               	btfsc	status,2,c
  8649  0018DC  D6FA               	goto	u8840
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;TabelasUmidade.h: 82: else
  8653                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8654                           
  8655                           ; BSR set to: 0
  8656                           
  8657                           ; BSR set to: 0
  8658  0018DE  0E60               	movlw	96
  8659  0018E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8660  0018E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8661  0018E4  B4D8               	btfsc	status,2,c
  8662  0018E6  D6FC               	goto	u8850
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;TabelasUmidade.h: 84: else
  8666                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8667                           
  8668                           ; BSR set to: 0
  8669                           
  8670                           ; BSR set to: 0
  8671  0018E8  0E61               	movlw	97
  8672  0018EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8673  0018EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8674  0018EE  B4D8               	btfsc	status,2,c
  8675  0018F0  D33D               	goto	u10610
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;TabelasUmidade.h: 86: else
  8679                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8680                           
  8681                           ; BSR set to: 0
  8682                           
  8683                           ; BSR set to: 0
  8684  0018F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8685  0018F4  D00E               	goto	l400
  8686  0018F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8687  0018F8  E104               	bnz	u9300
  8688  0018FA  0E62               	movlw	98
  8689  0018FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8690  0018FE  A0D8               	btfss	status,0,c
  8691  001900  D008               	goto	l400
  8692  001902                     u9300:
  8693                           
  8694                           ; BSR set to: 0
  8695  001902  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8696  001904  D326               	goto	u10590
  8697  001906  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8698  001908  E104               	bnz	l6915
  8699  00190A  0E65               	movlw	101
  8700  00190C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8701  00190E  A0D8               	btfss	status,0,c
  8702  001910  D320               	goto	u10590
  8703  001912                     l400:
  8704  001912                     l6915:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;TabelasUmidade.h: 88: else
  8708                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8709  001912  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8710  001914  D00E               	goto	l402
  8711  001916  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8712  001918  E104               	bnz	u9320
  8713  00191A  0E65               	movlw	101
  8714  00191C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8715  00191E  A0D8               	btfss	status,0,c
  8716  001920  D008               	goto	l402
  8717  001922                     u9320:
  8718                           
  8719                           ; BSR set to: 0
  8720  001922  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8721  001924  D30E               	goto	u10580
  8722  001926  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8723  001928  E104               	bnz	l6921
  8724  00192A  0E78               	movlw	120
  8725  00192C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8726  00192E  A0D8               	btfss	status,0,c
  8727  001930  D308               	goto	u10580
  8728  001932                     l402:
  8729  001932                     l6921:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;TabelasUmidade.h: 90: else
  8733                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8734  001932  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8735  001934  D010               	goto	l404
  8736  001936  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8737  001938  E104               	bnz	u9340
  8738  00193A  0E78               	movlw	120
  8739  00193C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8740  00193E  A0D8               	btfss	status,0,c
  8741  001940  D00A               	goto	l404
  8742  001942                     u9340:
  8743                           
  8744                           ; BSR set to: 0
  8745  001942  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8746  001944  EF42  F011         	goto	u11220
  8747  001948  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8748  00194A  E105               	bnz	l6927
  8749  00194C  0E7B               	movlw	123
  8750  00194E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8751  001950  A0D8               	btfss	status,0,c
  8752  001952  EF42  F011         	goto	u11220
  8753  001956                     l404:
  8754  001956                     l6927:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;TabelasUmidade.h: 92: else
  8758                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8759  001956  0E7B               	movlw	123
  8760  001958  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8761  00195A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8762  00195C  B4D8               	btfsc	status,2,c
  8763  00195E  EF2F  F011         	goto	u11200
  8764                           
  8765                           ; BSR set to: 0
  8766  001962  0E7C               	movlw	124
  8767  001964  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8768  001966  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8769  001968  B4D8               	btfsc	status,2,c
  8770                           
  8771                           ; BSR set to: 0
  8772  00196A  EF2F  F011         	goto	u11200
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;TabelasUmidade.h: 94: else
  8776                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8777                           
  8778                           ; BSR set to: 0
  8779                           
  8780                           ; BSR set to: 0
  8781  00196E  0E7D               	movlw	125
  8782  001970  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8783  001972  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8784  001974  B4D8               	btfsc	status,2,c
  8785  001976  EF27  F011         	goto	u11190
  8786                           
  8787                           ; BSR set to: 0
  8788  00197A  0E7E               	movlw	126
  8789  00197C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8790  00197E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8791  001980  B4D8               	btfsc	status,2,c
  8792                           
  8793                           ; BSR set to: 0
  8794  001982  EF27  F011         	goto	u11190
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;TabelasUmidade.h: 96: else
  8798                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8799                           
  8800                           ; BSR set to: 0
  8801                           
  8802                           ; BSR set to: 0
  8803  001986  0E7F               	movlw	127
  8804  001988  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8805  00198A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8806  00198C  B4D8               	btfsc	status,2,c
  8807  00198E  D0D4               	goto	u9750
  8808                           
  8809                           ; BSR set to: 0
  8810  001990  0E80               	movlw	128
  8811  001992  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8812  001994  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8813  001996  B4D8               	btfsc	status,2,c
  8814                           
  8815                           ; BSR set to: 0
  8816  001998  D0CF               	goto	u9750
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;TabelasUmidade.h: 98: else
  8820                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8821                           
  8822                           ; BSR set to: 0
  8823                           
  8824                           ; BSR set to: 0
  8825  00199A  0E81               	movlw	129
  8826  00199C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8827  00199E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8828  0019A0  B4D8               	btfsc	status,2,c
  8829  0019A2  D0D6               	goto	u9770
  8830                           
  8831                           ; BSR set to: 0
  8832  0019A4  0E82               	movlw	130
  8833  0019A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8834  0019A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8835  0019AA  B4D8               	btfsc	status,2,c
  8836                           
  8837                           ; BSR set to: 0
  8838  0019AC  D0D1               	goto	u9770
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;TabelasUmidade.h: 100: else
  8842                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8843                           
  8844                           ; BSR set to: 0
  8845                           
  8846                           ; BSR set to: 0
  8847  0019AE  0E83               	movlw	131
  8848  0019B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8849  0019B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8850  0019B4  B4D8               	btfsc	status,2,c
  8851  0019B6  D0D8               	goto	u9790
  8852                           
  8853                           ; BSR set to: 0
  8854  0019B8  0E84               	movlw	132
  8855  0019BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8856  0019BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8857  0019BE  B4D8               	btfsc	status,2,c
  8858                           
  8859                           ; BSR set to: 0
  8860  0019C0  D0D3               	goto	u9790
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;TabelasUmidade.h: 102: else
  8864                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8865                           
  8866                           ; BSR set to: 0
  8867                           
  8868                           ; BSR set to: 0
  8869  0019C2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8870  0019C4  D010               	goto	l426
  8871  0019C6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8872  0019C8  E104               	bnz	u9460
  8873  0019CA  0E85               	movlw	133
  8874  0019CC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8875  0019CE  A0D8               	btfss	status,0,c
  8876  0019D0  D00A               	goto	l426
  8877  0019D2                     u9460:
  8878                           
  8879                           ; BSR set to: 0
  8880  0019D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8881  0019D4  D006               	goto	u9470
  8882  0019D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8883  0019D8  E106               	bnz	l6963
  8884  0019DA  0E95               	movlw	149
  8885  0019DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8886  0019DE  B0D8               	btfsc	status,0,c
  8887  0019E0  D002               	goto	l426
  8888  0019E2                     u9470:
  8889                           
  8890                           ; BSR set to: 0
  8891  0019E2  0E68               	movlw	104
  8892  0019E4  D68B               	goto	L24
  8893  0019E6                     l426:
  8894  0019E6                     l6963:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;TabelasUmidade.h: 104: else
  8898                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8899  0019E6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8900  0019E8  D00E               	goto	l428
  8901  0019EA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8902  0019EC  E104               	bnz	u9480
  8903  0019EE  0E95               	movlw	149
  8904  0019F0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8905  0019F2  A0D8               	btfss	status,0,c
  8906  0019F4  D008               	goto	l428
  8907  0019F6                     u9480:
  8908                           
  8909                           ; BSR set to: 0
  8910  0019F6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8911  0019F8  D0C9               	goto	u9810
  8912  0019FA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8913  0019FC  E104               	bnz	l6969
  8914  0019FE  0E99               	movlw	153
  8915  001A00  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8916  001A02  A0D8               	btfss	status,0,c
  8917  001A04  D0C3               	goto	u9810
  8918  001A06                     l428:
  8919  001A06                     l6969:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;TabelasUmidade.h: 106: else
  8923                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8924  001A06  0E99               	movlw	153
  8925  001A08  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8926  001A0A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8927  001A0C  B4D8               	btfsc	status,2,c
  8928  001A0E  D0CA               	goto	u9830
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;TabelasUmidade.h: 108: else
  8932                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8933                           
  8934                           ; BSR set to: 0
  8935                           
  8936                           ; BSR set to: 0
  8937  001A10  0E9A               	movlw	154
  8938  001A12  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8939  001A14  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8940  001A16  B4D8               	btfsc	status,2,c
  8941  001A18  D0D1               	goto	u9850
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;TabelasUmidade.h: 110: else
  8945                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8946                           
  8947                           ; BSR set to: 0
  8948                           
  8949                           ; BSR set to: 0
  8950  001A1A  0E9B               	movlw	155
  8951  001A1C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8952  001A1E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8953  001A20  B4D8               	btfsc	status,2,c
  8954  001A22  D0DE               	goto	u9870
  8955                           
  8956                           ; BSR set to: 0
  8957  001A24  0E9C               	movlw	156
  8958  001A26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8959  001A28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8960  001A2A  B4D8               	btfsc	status,2,c
  8961                           
  8962                           ; BSR set to: 0
  8963  001A2C  D0D9               	goto	u9870
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;TabelasUmidade.h: 112: else
  8967                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8968                           
  8969                           ; BSR set to: 0
  8970                           
  8971                           ; BSR set to: 0
  8972  001A2E  0E9D               	movlw	157
  8973  001A30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8974  001A32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8975  001A34  B4D8               	btfsc	status,2,c
  8976  001A36  D0E0               	goto	u9890
  8977                           
  8978                           ; BSR set to: 0
  8979  001A38  0E9E               	movlw	158
  8980  001A3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8981  001A3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8982  001A3E  B4D8               	btfsc	status,2,c
  8983                           
  8984                           ; BSR set to: 0
  8985  001A40  D0DB               	goto	u9890
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;TabelasUmidade.h: 114: else
  8989                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8990                           
  8991                           ; BSR set to: 0
  8992                           
  8993                           ; BSR set to: 0
  8994  001A42  0E9F               	movlw	159
  8995  001A44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8996  001A46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8997  001A48  A4D8               	btfss	status,2,c
  8998  001A4A  D002               	goto	l442
  8999  001A4C                     u9560:
  9000                           
  9001                           ; BSR set to: 0
  9002  001A4C  0E6E               	movlw	110
  9003  001A4E  D656               	goto	L24
  9004  001A50                     l442:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;TabelasUmidade.h: 116: else
  9008                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  9009                           
  9010                           ; BSR set to: 0
  9011  001A50  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9012  001A52  EF07  F013         	goto	l630
  9013  001A56  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9014  001A58  E105               	bnz	u9570
  9015  001A5A                     L25:
  9016  001A5A  0EA0               	movlw	160
  9017  001A5C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9018  001A5E  A0D8               	btfss	status,0,c
  9019  001A60  EF07  F013         	goto	l630
  9020  001A64                     u9570:
  9021  001A64  D0E1               	goto	u9930
  9022  001A66                     
  9023                           ; BSR set to: 0
  9024                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  9025                           
  9026                           ; BSR set to: 0
  9027  001A66  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9028  001A68  D61F               	goto	u8810
  9029  001A6A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9030  001A6C  E104               	bnz	l7001
  9031  001A6E  0E5B               	movlw	91
  9032  001A70  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9033  001A72  A0D8               	btfss	status,0,c
  9034  001A74  D619               	goto	u8810
  9035  001A76                     l7001:
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;TabelasUmidade.h: 122: else
  9039                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  9040  001A76  0E5B               	movlw	91
  9041  001A78  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9042  001A7A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9043  001A7C  B4D8               	btfsc	status,2,c
  9044  001A7E  D61B               	goto	u8820
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;TabelasUmidade.h: 124: else
  9048                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  9049                           
  9050                           ; BSR set to: 0
  9051                           
  9052                           ; BSR set to: 0
  9053  001A80  0E5C               	movlw	92
  9054  001A82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9055  001A84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9056  001A86  B4D8               	btfsc	status,2,c
  9057  001A88  D61D               	goto	u8830
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;TabelasUmidade.h: 126: else
  9061                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  9062                           
  9063                           ; BSR set to: 0
  9064                           
  9065                           ; BSR set to: 0
  9066  001A8A  0E5D               	movlw	93
  9067  001A8C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9068  001A8E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9069  001A90  B4D8               	btfsc	status,2,c
  9070  001A92  D61F               	goto	u8840
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;TabelasUmidade.h: 128: else
  9074                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  9075                           
  9076                           ; BSR set to: 0
  9077                           
  9078                           ; BSR set to: 0
  9079  001A94  0E5E               	movlw	94
  9080  001A96  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9081  001A98  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9082  001A9A  B4D8               	btfsc	status,2,c
  9083  001A9C  D621               	goto	u8850
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;TabelasUmidade.h: 130: else
  9087                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  9088                           
  9089                           ; BSR set to: 0
  9090                           
  9091                           ; BSR set to: 0
  9092  001A9E  0E5F               	movlw	95
  9093  001AA0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9094  001AA2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9095  001AA4  B4D8               	btfsc	status,2,c
  9096  001AA6  D262               	goto	u10610
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;TabelasUmidade.h: 132: else
  9100                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  9101                           
  9102                           ; BSR set to: 0
  9103                           
  9104                           ; BSR set to: 0
  9105  001AA8  0E60               	movlw	96
  9106  001AAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9107  001AAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9108  001AAE  B4D8               	btfsc	status,2,c
  9109  001AB0  D25D               	goto	u10610
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;TabelasUmidade.h: 134: else
  9113                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  9114                           
  9115                           ; BSR set to: 0
  9116                           
  9117                           ; BSR set to: 0
  9118  001AB2  0E61               	movlw	97
  9119  001AB4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9120  001AB6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9121  001AB8  B4D8               	btfsc	status,2,c
  9122  001ABA  D24B               	goto	u10590
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;TabelasUmidade.h: 136: else
  9126                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  9127                           
  9128                           ; BSR set to: 0
  9129                           
  9130                           ; BSR set to: 0
  9131  001ABC  0E62               	movlw	98
  9132  001ABE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9133  001AC0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9134  001AC2  B4D8               	btfsc	status,2,c
  9135  001AC4  D246               	goto	u10590
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;TabelasUmidade.h: 138: else
  9139                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  9140                           
  9141                           ; BSR set to: 0
  9142                           
  9143                           ; BSR set to: 0
  9144  001AC6  0E63               	movlw	99
  9145  001AC8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9146  001ACA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9147  001ACC  B4D8               	btfsc	status,2,c
  9148  001ACE  D239               	goto	u10580
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;TabelasUmidade.h: 140: else
  9152                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  9153                           
  9154                           ; BSR set to: 0
  9155                           
  9156                           ; BSR set to: 0
  9157  001AD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9158  001AD2  D00E               	goto	l466
  9159  001AD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9160  001AD6  E104               	bnz	u9680
  9161  001AD8  0E64               	movlw	100
  9162  001ADA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9163  001ADC  A0D8               	btfss	status,0,c
  9164  001ADE  D008               	goto	l466
  9165  001AE0                     u9680:
  9166                           
  9167                           ; BSR set to: 0
  9168  001AE0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9169  001AE2  D3D0               	goto	u11220
  9170  001AE4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9171  001AE6  E104               	bnz	l7043
  9172  001AE8  0E68               	movlw	104
  9173  001AEA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9174  001AEC  A0D8               	btfss	status,0,c
  9175  001AEE  D3CA               	goto	u11220
  9176  001AF0                     l466:
  9177  001AF0                     l7043:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;TabelasUmidade.h: 142: else
  9181                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  9182  001AF0  0E68               	movlw	104
  9183  001AF2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9184  001AF4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9185  001AF6  B4D8               	btfsc	status,2,c
  9186  001AF8  D3B2               	goto	u11200
  9187                           
  9188                           ; BSR set to: 0
  9189  001AFA  0E69               	movlw	105
  9190  001AFC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9191  001AFE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9192  001B00  B4D8               	btfsc	status,2,c
  9193                           
  9194                           ; BSR set to: 0
  9195  001B02  D3AD               	goto	u11200
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;TabelasUmidade.h: 144: else
  9199                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ; BSR set to: 0
  9204  001B04  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9205  001B06  D00E               	goto	l472
  9206  001B08  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9207  001B0A  E104               	bnz	u9720
  9208  001B0C  0E6A               	movlw	106
  9209  001B0E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9210  001B10  A0D8               	btfss	status,0,c
  9211  001B12  D008               	goto	l472
  9212  001B14                     u9720:
  9213                           
  9214                           ; BSR set to: 0
  9215  001B14  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9216  001B16  D39B               	goto	u11190
  9217  001B18  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9218  001B1A  E104               	bnz	l7055
  9219  001B1C  0E7B               	movlw	123
  9220  001B1E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9221  001B20  A0D8               	btfss	status,0,c
  9222  001B22  D395               	goto	u11190
  9223  001B24                     l472:
  9224  001B24                     l7055:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;TabelasUmidade.h: 146: else
  9228                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  9229  001B24  0E7B               	movlw	123
  9230  001B26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9231  001B28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9232  001B2A  B4D8               	btfsc	status,2,c
  9233  001B2C  D005               	goto	u9750
  9234                           
  9235                           ; BSR set to: 0
  9236  001B2E  0E7C               	movlw	124
  9237  001B30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9238  001B32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9239  001B34  A4D8               	btfss	status,2,c
  9240  001B36  D002               	goto	l474
  9241  001B38                     u9750:
  9242                           
  9243                           ; BSR set to: 0
  9244                           
  9245                           ; BSR set to: 0
  9246  001B38  0E65               	movlw	101
  9247  001B3A  D5E0               	goto	L24
  9248  001B3C                     l474:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;TabelasUmidade.h: 148: else
  9252                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  9253                           
  9254                           ; BSR set to: 0
  9255  001B3C  0E7D               	movlw	125
  9256  001B3E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9257  001B40  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9258  001B42  B4D8               	btfsc	status,2,c
  9259  001B44  D005               	goto	u9770
  9260                           
  9261                           ; BSR set to: 0
  9262  001B46  0E7E               	movlw	126
  9263  001B48  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9264  001B4A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9265  001B4C  A4D8               	btfss	status,2,c
  9266  001B4E  D002               	goto	l478
  9267  001B50                     u9770:
  9268                           
  9269                           ; BSR set to: 0
  9270                           
  9271                           ; BSR set to: 0
  9272  001B50  0E66               	movlw	102
  9273  001B52  D5D4               	goto	L24
  9274  001B54                     l478:
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;TabelasUmidade.h: 150: else
  9278                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9279                           
  9280                           ; BSR set to: 0
  9281  001B54  0E7F               	movlw	127
  9282  001B56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9283  001B58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9284  001B5A  B4D8               	btfsc	status,2,c
  9285  001B5C  D005               	goto	u9790
  9286                           
  9287                           ; BSR set to: 0
  9288  001B5E  0E80               	movlw	128
  9289  001B60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9290  001B62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9291  001B64  A4D8               	btfss	status,2,c
  9292  001B66  D002               	goto	l482
  9293  001B68                     u9790:
  9294                           
  9295                           ; BSR set to: 0
  9296                           
  9297                           ; BSR set to: 0
  9298  001B68  0E67               	movlw	103
  9299  001B6A  D5C8               	goto	L24
  9300  001B6C                     l482:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;TabelasUmidade.h: 152: else
  9304                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9305                           
  9306                           ; BSR set to: 0
  9307  001B6C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9308  001B6E  D010               	goto	l486
  9309  001B70  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9310  001B72  E104               	bnz	u9800
  9311  001B74  0E81               	movlw	129
  9312  001B76  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9313  001B78  A0D8               	btfss	status,0,c
  9314  001B7A  D00A               	goto	l486
  9315  001B7C                     u9800:
  9316                           
  9317                           ; BSR set to: 0
  9318  001B7C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9319  001B7E  D006               	goto	u9810
  9320  001B80  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9321  001B82  E106               	bnz	l7079
  9322  001B84  0E8B               	movlw	139
  9323  001B86  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9324  001B88  B0D8               	btfsc	status,0,c
  9325  001B8A  D002               	goto	l486
  9326  001B8C                     u9810:
  9327                           
  9328                           ; BSR set to: 0
  9329  001B8C  0E69               	movlw	105
  9330  001B8E  D5B6               	goto	L24
  9331  001B90                     l486:
  9332  001B90                     l7079:
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;TabelasUmidade.h: 154: else
  9336                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9337  001B90  0E8B               	movlw	139
  9338  001B92  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9339  001B94  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9340  001B96  B4D8               	btfsc	status,2,c
  9341  001B98  D005               	goto	u9830
  9342                           
  9343                           ; BSR set to: 0
  9344  001B9A  0E8C               	movlw	140
  9345  001B9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9346  001B9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9347  001BA0  A4D8               	btfss	status,2,c
  9348  001BA2  D002               	goto	l488
  9349  001BA4                     u9830:
  9350                           
  9351                           ; BSR set to: 0
  9352                           
  9353                           ; BSR set to: 0
  9354  001BA4  0E6A               	movlw	106
  9355  001BA6  D5AA               	goto	L24
  9356  001BA8                     l488:
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;TabelasUmidade.h: 156: else
  9360                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9361                           
  9362                           ; BSR set to: 0
  9363  001BA8  0E8D               	movlw	141
  9364  001BAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9365  001BAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9366  001BAE  B4D8               	btfsc	status,2,c
  9367  001BB0  D005               	goto	u9850
  9368                           
  9369                           ; BSR set to: 0
  9370  001BB2  0E92               	movlw	146
  9371  001BB4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9372  001BB6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9373  001BB8  A4D8               	btfss	status,2,c
  9374  001BBA  D002               	goto	l492
  9375  001BBC                     u9850:
  9376                           
  9377                           ; BSR set to: 0
  9378                           
  9379                           ; BSR set to: 0
  9380  001BBC  0E6B               	movlw	107
  9381  001BBE  D59E               	goto	L24
  9382  001BC0                     l492:
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;TabelasUmidade.h: 158: else
  9386                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9387                           
  9388                           ; BSR set to: 0
  9389  001BC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9390  001BC2  D010               	goto	l496
  9391  001BC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9392  001BC6  E104               	bnz	u9860
  9393  001BC8  0E93               	movlw	147
  9394  001BCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9395  001BCC  A0D8               	btfss	status,0,c
  9396  001BCE  D00A               	goto	l496
  9397  001BD0                     u9860:
  9398                           
  9399                           ; BSR set to: 0
  9400  001BD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9401  001BD2  D006               	goto	u9870
  9402  001BD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9403  001BD6  E106               	bnz	l7097
  9404  001BD8  0E98               	movlw	152
  9405  001BDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9406  001BDC  B0D8               	btfsc	status,0,c
  9407  001BDE  D002               	goto	l496
  9408  001BE0                     u9870:
  9409                           
  9410                           ; BSR set to: 0
  9411  001BE0  0E6C               	movlw	108
  9412  001BE2  D58C               	goto	L24
  9413  001BE4                     l496:
  9414  001BE4                     l7097:
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;TabelasUmidade.h: 160: else
  9418                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9419  001BE4  0E99               	movlw	153
  9420  001BE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9421  001BE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9422  001BEA  B4D8               	btfsc	status,2,c
  9423  001BEC  D005               	goto	u9890
  9424                           
  9425                           ; BSR set to: 0
  9426  001BEE  0E98               	movlw	152
  9427  001BF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9428  001BF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9429  001BF4  A4D8               	btfss	status,2,c
  9430  001BF6  D002               	goto	l498
  9431  001BF8                     u9890:
  9432                           
  9433                           ; BSR set to: 0
  9434                           
  9435                           ; BSR set to: 0
  9436  001BF8  0E6D               	movlw	109
  9437  001BFA  D580               	goto	L24
  9438  001BFC                     l498:
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;TabelasUmidade.h: 162: else
  9442                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9443                           
  9444                           ; BSR set to: 0
  9445  001BFC  0E9B               	movlw	155
  9446  001BFE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9447  001C00  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9448  001C02  B4D8               	btfsc	status,2,c
  9449  001C04  D005               	goto	u9910
  9450                           
  9451                           ; BSR set to: 0
  9452  001C06  0E9A               	movlw	154
  9453  001C08  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9454  001C0A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9455  001C0C  A4D8               	btfss	status,2,c
  9456  001C0E  D002               	goto	l502
  9457  001C10                     u9910:
  9458                           
  9459                           ; BSR set to: 0
  9460                           
  9461                           ; BSR set to: 0
  9462  001C10  0E6F               	movlw	111
  9463  001C12  D574               	goto	L24
  9464  001C14                     l502:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;TabelasUmidade.h: 164: else
  9468                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9469                           
  9470                           ; BSR set to: 0
  9471  001C14  0E9D               	movlw	157
  9472  001C16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9473  001C18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9474  001C1A  B4D8               	btfsc	status,2,c
  9475  001C1C  D005               	goto	u9930
  9476                           
  9477                           ; BSR set to: 0
  9478  001C1E  0E9C               	movlw	156
  9479  001C20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9480  001C22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9481  001C24  A4D8               	btfss	status,2,c
  9482  001C26  D002               	goto	l506
  9483  001C28                     u9930:
  9484                           
  9485                           ; BSR set to: 0
  9486                           
  9487                           ; BSR set to: 0
  9488  001C28  0E70               	movlw	112
  9489  001C2A  D568               	goto	L24
  9490  001C2C                     l506:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;TabelasUmidade.h: 166: else
  9494                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9495                           
  9496                           ; BSR set to: 0
  9497  001C2C  0E9F               	movlw	159
  9498  001C2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9499  001C30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9500  001C32  B4D8               	btfsc	status,2,c
  9501  001C34  D005               	goto	u9950
  9502                           
  9503                           ; BSR set to: 0
  9504  001C36  0E9E               	movlw	158
  9505  001C38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9506  001C3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9507  001C3C  A4D8               	btfss	status,2,c
  9508  001C3E  D002               	goto	l510
  9509  001C40                     u9950:
  9510                           
  9511                           ; BSR set to: 0
  9512                           
  9513                           ; BSR set to: 0
  9514  001C40  0E71               	movlw	113
  9515  001C42  D55C               	goto	L24
  9516  001C44                     l510:
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;TabelasUmidade.h: 168: else
  9520                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9521                           
  9522                           ; BSR set to: 0
  9523  001C44  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9524  001C46  EF07  F013         	goto	l630
  9525  001C4A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9526  001C4C  E105               	bnz	u9960
  9527  001C4E  0EA0               	movlw	160
  9528  001C50  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9529  001C52  A0D8               	btfss	status,0,c
  9530  001C54  EF07  F013         	goto	l630
  9531  001C58                     u9960:
  9532                           
  9533                           ; BSR set to: 0
  9534  001C58  0E73               	movlw	115
  9535  001C5A  D550               	goto	L24
  9536  001C5C                     l297:
  9537                           
  9538                           ; BSR set to: 0
  9539                           
  9540                           ; BSR set to: 0
  9541  001C5C  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9542  001C60  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9543                           
  9544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9545                           ; Switch size 1, requested type "space"
  9546                           ; Number of cases is 1, Range of values is 0 to 0
  9547                           ; switch strategies available:
  9548                           ; Name         Instructions Cycles
  9549                           ; simple_byte            4     3 (average)
  9550                           ;	Chosen strategy is simple_byte
  9551  001C64  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9552  001C66  0A00               	xorlw	0	; case 0
  9553  001C68  A4D8               	btfss	status,2,c
  9554  001C6A  EF07  F013         	goto	l630
  9555                           
  9556                           ; BSR set to: 0
  9557                           ; Switch size 1, requested type "space"
  9558                           ; Number of cases is 3, Range of values is 1 to 3
  9559                           ; switch strategies available:
  9560                           ; Name         Instructions Cycles
  9561                           ; simple_byte           10     6 (average)
  9562                           ;	Chosen strategy is simple_byte
  9563  001C6E  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9564  001C70  0A01               	xorlw	1	; case 1
  9565  001C72  B4D8               	btfsc	status,2,c
  9566  001C74  D4EE               	goto	l298
  9567  001C76  0A03               	xorlw	3	; case 2
  9568  001C78  B4D8               	btfsc	status,2,c
  9569  001C7A  D610               	goto	l383
  9570  001C7C  0A01               	xorlw	1	; case 3
  9571  001C7E  B4D8               	btfsc	status,2,c
  9572  001C80  D6F2               	goto	l445
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9576  001C82  EF07  F013         	goto	l630
  9577  001C86                     l296:
  9578                           
  9579                           ; BSR set to: 0
  9580                           
  9581                           ; BSR set to: 0
  9582  001C86  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9583  001C88  B4D8               	btfsc	status,2,c
  9584  001C8A  EFFC  F012         	goto	l517
  9585  001C8E  EF07  F013         	goto	l630
  9586  001C92                     
  9587                           ; BSR set to: 0
  9588                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9589                           
  9590                           ; BSR set to: 0
  9591  001C92  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9592  001C94  D517               	goto	u8830
  9593  001C96  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9594  001C98  E104               	bnz	l7137
  9595  001C9A  0E5B               	movlw	91
  9596  001C9C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9597  001C9E  A0D8               	btfss	status,0,c
  9598  001CA0  D511               	goto	u8830
  9599  001CA2                     l7137:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;TabelasUmidade.h: 176: else
  9603                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9604  001CA2  0E5B               	movlw	91
  9605  001CA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9606  001CA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9607  001CA8  B4D8               	btfsc	status,2,c
  9608  001CAA  D50C               	goto	u8830
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;TabelasUmidade.h: 178: else
  9612                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9613                           
  9614                           ; BSR set to: 0
  9615                           
  9616                           ; BSR set to: 0
  9617  001CAC  0E5C               	movlw	92
  9618  001CAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9619  001CB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9620  001CB2  B4D8               	btfsc	status,2,c
  9621  001CB4  D4F9               	goto	u8810
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;TabelasUmidade.h: 180: else
  9625                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9626                           
  9627                           ; BSR set to: 0
  9628                           
  9629                           ; BSR set to: 0
  9630  001CB6  0E5D               	movlw	93
  9631  001CB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9632  001CBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9633  001CBC  B4D8               	btfsc	status,2,c
  9634  001CBE  D4ED               	goto	u8800
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;TabelasUmidade.h: 182: else
  9638                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9639                           
  9640                           ; BSR set to: 0
  9641                           
  9642                           ; BSR set to: 0
  9643  001CC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9644  001CC2  D00E               	goto	l527
  9645  001CC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9646  001CC6  E104               	bnz	u10020
  9647  001CC8  0E5E               	movlw	94
  9648  001CCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9649  001CCC  A0D8               	btfss	status,0,c
  9650  001CCE  D008               	goto	l527
  9651  001CD0                     u10020:
  9652                           
  9653                           ; BSR set to: 0
  9654  001CD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9655  001CD2  D4DC               	goto	u8790
  9656  001CD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9657  001CD6  E104               	bnz	l7155
  9658  001CD8  0E65               	movlw	101
  9659  001CDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9660  001CDC  A0D8               	btfss	status,0,c
  9661  001CDE  D4D6               	goto	u8790
  9662  001CE0                     l527:
  9663  001CE0                     l7155:
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;TabelasUmidade.h: 184: else
  9667                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9668  001CE0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9669  001CE2  D00E               	goto	l529
  9670  001CE4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9671  001CE6  E104               	bnz	u10040
  9672  001CE8  0E65               	movlw	101
  9673  001CEA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9674  001CEC  A0D8               	btfss	status,0,c
  9675  001CEE  D008               	goto	l529
  9676  001CF0                     u10040:
  9677                           
  9678                           ; BSR set to: 0
  9679  001CF0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9680  001CF2  D2FE               	goto	u11290
  9681  001CF4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9682  001CF6  E104               	bnz	l7161
  9683  001CF8  0E67               	movlw	103
  9684  001CFA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9685  001CFC  A0D8               	btfss	status,0,c
  9686  001CFE  D2F8               	goto	u11290
  9687  001D00                     l529:
  9688  001D00                     l7161:
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;TabelasUmidade.h: 186: else
  9692                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9693  001D00  0E67               	movlw	103
  9694  001D02  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9695  001D04  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9696  001D06  B4D8               	btfsc	status,2,c
  9697  001D08  D303               	goto	u11310
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;TabelasUmidade.h: 188: else
  9701                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9702                           
  9703                           ; BSR set to: 0
  9704                           
  9705                           ; BSR set to: 0
  9706  001D0A  0E68               	movlw	104
  9707  001D0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9708  001D0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9709  001D10  B4D8               	btfsc	status,2,c
  9710  001D12  D306               	goto	u11320
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;TabelasUmidade.h: 190: else
  9714                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9715                           
  9716                           ; BSR set to: 0
  9717                           
  9718                           ; BSR set to: 0
  9719  001D14  0E69               	movlw	105
  9720  001D16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9721  001D18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9722  001D1A  B4D8               	btfsc	status,2,c
  9723  001D1C  D179               	goto	u10720
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;TabelasUmidade.h: 192: else
  9727                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9728                           
  9729                           ; BSR set to: 0
  9730                           
  9731                           ; BSR set to: 0
  9732  001D1E  0E6A               	movlw	106
  9733  001D20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9734  001D22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9735  001D24  B4D8               	btfsc	status,2,c
  9736  001D26  D30F               	goto	u11340
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;TabelasUmidade.h: 194: else
  9740                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9741                           
  9742                           ; BSR set to: 0
  9743                           
  9744                           ; BSR set to: 0
  9745  001D28  0E6B               	movlw	107
  9746  001D2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9747  001D2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9748  001D2E  B4D8               	btfsc	status,2,c
  9749  001D30  D312               	goto	u11350
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;TabelasUmidade.h: 196: else
  9753                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9754                           
  9755                           ; BSR set to: 0
  9756                           
  9757                           ; BSR set to: 0
  9758  001D32  0E6C               	movlw	108
  9759  001D34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9760  001D36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9761  001D38  A4D8               	btfss	status,2,c
  9762  001D3A  D002               	goto	l541
  9763                           
  9764                           ; BSR set to: 0
  9765  001D3C  0E43               	movlw	67
  9766  001D3E  D4DE               	goto	L24
  9767  001D40                     l541:
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;TabelasUmidade.h: 198: else
  9771                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9772                           
  9773                           ; BSR set to: 0
  9774  001D40  0E6D               	movlw	109
  9775  001D42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9776  001D44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9777  001D46  B4D8               	btfsc	status,2,c
  9778  001D48  D30E               	goto	u11360
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;TabelasUmidade.h: 200: else
  9782                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9783                           
  9784                           ; BSR set to: 0
  9785                           
  9786                           ; BSR set to: 0
  9787  001D4A  0E6E               	movlw	110
  9788  001D4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9789  001D4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9790  001D50  B4D8               	btfsc	status,2,c
  9791  001D52  D17E               	goto	u10760
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;TabelasUmidade.h: 202: else
  9795                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9796                           
  9797                           ; BSR set to: 0
  9798                           
  9799                           ; BSR set to: 0
  9800  001D54  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9801  001D56  D00E               	goto	l547
  9802  001D58  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9803  001D5A  E104               	bnz	u10140
  9804  001D5C  0E6F               	movlw	111
  9805  001D5E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9806  001D60  A0D8               	btfss	status,0,c
  9807  001D62  D008               	goto	l547
  9808  001D64                     u10140:
  9809                           
  9810                           ; BSR set to: 0
  9811  001D64  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9812  001D66  D317               	goto	u11390
  9813  001D68  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9814  001D6A  E104               	bnz	l7199
  9815  001D6C  0E73               	movlw	115
  9816  001D6E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9817  001D70  A0D8               	btfss	status,0,c
  9818  001D72  D311               	goto	u11390
  9819  001D74                     l547:
  9820  001D74                     l7199:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;TabelasUmidade.h: 204: else
  9824                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9825  001D74  0E73               	movlw	115
  9826  001D76  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9827  001D78  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9828  001D7A  B4D8               	btfsc	status,2,c
  9829  001D7C  D314               	goto	u11400
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;TabelasUmidade.h: 206: else
  9833                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9834                           
  9835                           ; BSR set to: 0
  9836                           
  9837                           ; BSR set to: 0
  9838  001D7E  0E74               	movlw	116
  9839  001D80  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9840  001D82  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9841  001D84  B4D8               	btfsc	status,2,c
  9842  001D86  D317               	goto	u11410
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;TabelasUmidade.h: 208: else
  9846                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9847                           
  9848                           ; BSR set to: 0
  9849                           
  9850                           ; BSR set to: 0
  9851  001D88  0E75               	movlw	117
  9852  001D8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9853  001D8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9854  001D8E  A4D8               	btfss	status,2,c
  9855  001D90  D002               	goto	l553
  9856                           
  9857                           ; BSR set to: 0
  9858  001D92  0E36               	movlw	54
  9859  001D94  D4B3               	goto	L24
  9860  001D96                     l553:
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;TabelasUmidade.h: 210: else
  9864                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9865                           
  9866                           ; BSR set to: 0
  9867  001D96  0E76               	movlw	118
  9868  001D98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9869  001D9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9870  001D9C  B4D8               	btfsc	status,2,c
  9871  001D9E  D323               	goto	u11440
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;TabelasUmidade.h: 212: else
  9875                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9876                           
  9877                           ; BSR set to: 0
  9878                           
  9879                           ; BSR set to: 0
  9880  001DA0  0E77               	movlw	119
  9881  001DA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9882  001DA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9883  001DA6  B4D8               	btfsc	status,2,c
  9884  001DA8  D326               	goto	u11450
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;TabelasUmidade.h: 214: else
  9888                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9889                           
  9890                           ; BSR set to: 0
  9891                           
  9892                           ; BSR set to: 0
  9893  001DAA  0E78               	movlw	120
  9894  001DAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9895  001DAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9896  001DB0  B4D8               	btfsc	status,2,c
  9897  001DB2  D18D               	goto	u10850
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;TabelasUmidade.h: 216: else
  9901                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9902                           
  9903                           ; BSR set to: 0
  9904                           
  9905                           ; BSR set to: 0
  9906  001DB4  0E79               	movlw	121
  9907  001DB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9908  001DB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9909  001DBA  B4D8               	btfsc	status,2,c
  9910  001DBC  D32C               	goto	u11470
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;TabelasUmidade.h: 218: else
  9914                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9915                           
  9916                           ; BSR set to: 0
  9917                           
  9918                           ; BSR set to: 0
  9919  001DBE  0E7A               	movlw	122
  9920  001DC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9921  001DC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9922  001DC4  A4D8               	btfss	status,2,c
  9923  001DC6  D002               	goto	l563
  9924                           
  9925                           ; BSR set to: 0
  9926  001DC8  0E2E               	movlw	46
  9927  001DCA  D498               	goto	L24
  9928  001DCC                     l563:
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;TabelasUmidade.h: 220: else
  9932                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9933                           
  9934                           ; BSR set to: 0
  9935  001DCC  0E7B               	movlw	123
  9936  001DCE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9937  001DD0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9938  001DD2  B4D8               	btfsc	status,2,c
  9939  001DD4  D328               	goto	u11480
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;TabelasUmidade.h: 222: else
  9943                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9944                           
  9945                           ; BSR set to: 0
  9946                           
  9947                           ; BSR set to: 0
  9948  001DD6  0E7C               	movlw	124
  9949  001DD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9950  001DDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9951  001DDC  B4D8               	btfsc	status,2,c
  9952  001DDE  D189               	goto	u10880
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;TabelasUmidade.h: 224: else
  9956                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9957                           
  9958                           ; BSR set to: 0
  9959                           
  9960                           ; BSR set to: 0
  9961  001DE0  0E7D               	movlw	125
  9962  001DE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9963  001DE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9964  001DE6  B4D8               	btfsc	status,2,c
  9965  001DE8  D326               	goto	u11490
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;TabelasUmidade.h: 226: else
  9969                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9970                           
  9971                           ; BSR set to: 0
  9972                           
  9973                           ; BSR set to: 0
  9974  001DEA  0E7E               	movlw	126
  9975  001DEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9976  001DEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9977  001DF0  B4D8               	btfsc	status,2,c
  9978  001DF2  D187               	goto	u10890
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;TabelasUmidade.h: 228: else
  9982                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9983                           
  9984                           ; BSR set to: 0
  9985                           
  9986                           ; BSR set to: 0
  9987  001DF4  0E7F               	movlw	127
  9988  001DF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9989  001DF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9990  001DFA  B4D8               	btfsc	status,2,c
  9991  001DFC  D32C               	goto	u11510
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;TabelasUmidade.h: 230: else
  9995                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9996                           
  9997                           ; BSR set to: 0
  9998                           
  9999                           ; BSR set to: 0
 10000  001DFE  0E80               	movlw	128
 10001  001E00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10002  001E02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10003  001E04  B4D8               	btfsc	status,2,c
 10004  001E06  D327               	goto	u11510
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;TabelasUmidade.h: 232: else
 10008                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
 10009                           
 10010                           ; BSR set to: 0
 10011                           
 10012                           ; BSR set to: 0
 10013  001E08  0E81               	movlw	129
 10014  001E0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10015  001E0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10016  001E0E  B4D8               	btfsc	status,2,c
 10017  001E10  D32A               	goto	u11520
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;TabelasUmidade.h: 234: else
 10021                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
 10022                           
 10023                           ; BSR set to: 0
 10024                           
 10025                           ; BSR set to: 0
 10026  001E12  0E82               	movlw	130
 10027  001E14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10028  001E16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10029  001E18  A4D8               	btfss	status,2,c
 10030  001E1A  D002               	goto	l579
 10031                           
 10032                           ; BSR set to: 0
 10033  001E1C  0E26               	movlw	38
 10034  001E1E  D46E               	goto	L24
 10035  001E20                     l579:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;TabelasUmidade.h: 236: else
 10039                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
 10040                           
 10041                           ; BSR set to: 0
 10042  001E20  0E83               	movlw	131
 10043  001E22  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10044  001E24  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10045  001E26  B4D8               	btfsc	status,2,c
 10046  001E28  D326               	goto	u11530
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;TabelasUmidade.h: 238: else
 10050                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
 10051                           
 10052                           ; BSR set to: 0
 10053                           
 10054                           ; BSR set to: 0
 10055  001E2A  0E84               	movlw	132
 10056  001E2C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10057  001E2E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10058  001E30  B4D8               	btfsc	status,2,c
 10059  001E32  D329               	goto	u11540
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;TabelasUmidade.h: 240: else
 10063                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
 10064                           
 10065                           ; BSR set to: 0
 10066                           
 10067                           ; BSR set to: 0
 10068  001E34  0E85               	movlw	133
 10069  001E36  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10070  001E38  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10071  001E3A  B4D8               	btfsc	status,2,c
 10072  001E3C  D324               	goto	u11540
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;TabelasUmidade.h: 242: else
 10076                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
 10077                           
 10078                           ; BSR set to: 0
 10079                           
 10080                           ; BSR set to: 0
 10081  001E3E  0E86               	movlw	134
 10082  001E40  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10083  001E42  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10084  001E44  B4D8               	btfsc	status,2,c
 10085  001E46  D31F               	goto	u11540
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;TabelasUmidade.h: 244: else
 10089                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
 10090                           
 10091                           ; BSR set to: 0
 10092                           
 10093                           ; BSR set to: 0
 10094  001E48  0E87               	movlw	135
 10095  001E4A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10096  001E4C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10097  001E4E  B4D8               	btfsc	status,2,c
 10098  001E50  D322               	goto	u11550
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;TabelasUmidade.h: 246: else
 10102                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
 10103                           
 10104                           ; BSR set to: 0
 10105                           
 10106                           ; BSR set to: 0
 10107  001E52  0E88               	movlw	136
 10108  001E54  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10109  001E56  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10110  001E58  B4D8               	btfsc	status,2,c
 10111  001E5A  D325               	goto	u11560
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;TabelasUmidade.h: 248: else
 10115                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
 10116                           
 10117                           ; BSR set to: 0
 10118                           
 10119                           ; BSR set to: 0
 10120  001E5C  0E89               	movlw	137
 10121  001E5E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10122  001E60  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10123  001E62  B4D8               	btfsc	status,2,c
 10124  001E64  D328               	goto	u11570
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;TabelasUmidade.h: 250: else
 10128                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
 10129                           
 10130                           ; BSR set to: 0
 10131                           
 10132                           ; BSR set to: 0
 10133  001E66  0E8A               	movlw	138
 10134  001E68  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10135  001E6A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10136  001E6C  B4D8               	btfsc	status,2,c
 10137  001E6E  D32B               	goto	u11580
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;TabelasUmidade.h: 252: else
 10141                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
 10142                           
 10143                           ; BSR set to: 0
 10144                           
 10145                           ; BSR set to: 0
 10146  001E70  0E8B               	movlw	139
 10147  001E72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10148  001E74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10149  001E76  B4D8               	btfsc	status,2,c
 10150  001E78  D32E               	goto	u11590
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;TabelasUmidade.h: 254: else
 10154                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
 10155                           
 10156                           ; BSR set to: 0
 10157                           
 10158                           ; BSR set to: 0
 10159  001E7A  0E8C               	movlw	140
 10160  001E7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10161  001E7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10162  001E80  B4D8               	btfsc	status,2,c
 10163  001E82  D331               	goto	u11600
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;TabelasUmidade.h: 256: else
 10167                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
 10168                           
 10169                           ; BSR set to: 0
 10170                           
 10171                           ; BSR set to: 0
 10172  001E84  0E8D               	movlw	141
 10173  001E86  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10174  001E88  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10175  001E8A  B4D8               	btfsc	status,2,c
 10176  001E8C  D334               	goto	u11610
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;TabelasUmidade.h: 258: else
 10180                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
 10181                           
 10182                           ; BSR set to: 0
 10183                           
 10184                           ; BSR set to: 0
 10185  001E8E  0E8E               	movlw	142
 10186  001E90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10187  001E92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10188  001E94  B4D8               	btfsc	status,2,c
 10189  001E96  D337               	goto	u11620
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;TabelasUmidade.h: 260: else
 10193                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
 10194                           
 10195                           ; BSR set to: 0
 10196                           
 10197                           ; BSR set to: 0
 10198  001E98  0E8F               	movlw	143
 10199  001E9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10200  001E9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10201  001E9E  B4D8               	btfsc	status,2,c
 10202  001EA0  D33A               	goto	u11630
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;TabelasUmidade.h: 262: else
 10206                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
 10207                           
 10208                           ; BSR set to: 0
 10209                           
 10210                           ; BSR set to: 0
 10211  001EA2  0E90               	movlw	144
 10212  001EA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10213  001EA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10214  001EA8  B4D8               	btfsc	status,2,c
 10215  001EAA  D33D               	goto	u11640
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;TabelasUmidade.h: 264: else
 10219                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
 10220                           
 10221                           ; BSR set to: 0
 10222                           
 10223                           ; BSR set to: 0
 10224  001EAC  0E91               	movlw	145
 10225  001EAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10226  001EB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10227  001EB2  B4D8               	btfsc	status,2,c
 10228  001EB4  D340               	goto	u11650
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;TabelasUmidade.h: 266: else
 10232                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
 10233                           
 10234                           ; BSR set to: 0
 10235                           
 10236                           ; BSR set to: 0
 10237  001EB6  0E92               	movlw	146
 10238  001EB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10239  001EBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10240  001EBC  B4D8               	btfsc	status,2,c
 10241  001EBE  D343               	goto	u11660
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;TabelasUmidade.h: 268: else
 10245                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
 10246                           
 10247                           ; BSR set to: 0
 10248                           
 10249                           ; BSR set to: 0
 10250  001EC0  0E93               	movlw	147
 10251  001EC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10252  001EC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10253  001EC6  B4D8               	btfsc	status,2,c
 10254  001EC8  D346               	goto	u11670
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;TabelasUmidade.h: 270: else
 10258                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
 10259                           
 10260                           ; BSR set to: 0
 10261                           
 10262                           ; BSR set to: 0
 10263  001ECA  0E94               	movlw	148
 10264  001ECC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10265  001ECE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10266  001ED0  B4D8               	btfsc	status,2,c
 10267  001ED2  D349               	goto	u11680
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;TabelasUmidade.h: 272: else
 10271                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
 10272                           
 10273                           ; BSR set to: 0
 10274                           
 10275                           ; BSR set to: 0
 10276  001ED4  0E95               	movlw	149
 10277  001ED6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10278  001ED8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10279  001EDA  B4D8               	btfsc	status,2,c
 10280  001EDC  D34C               	goto	u11690
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;TabelasUmidade.h: 274: else
 10284                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10285                           
 10286                           ; BSR set to: 0
 10287                           
 10288                           ; BSR set to: 0
 10289  001EDE  0E96               	movlw	150
 10290  001EE0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10291  001EE2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10292  001EE4  B4D8               	btfsc	status,2,c
 10293  001EE6  D34F               	goto	u11700
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;TabelasUmidade.h: 276: else
 10297                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10298                           
 10299                           ; BSR set to: 0
 10300                           
 10301                           ; BSR set to: 0
 10302  001EE8  0E97               	movlw	151
 10303  001EEA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10304  001EEC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10305  001EEE  B4D8               	btfsc	status,2,c
 10306  001EF0  D352               	goto	u11710
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;TabelasUmidade.h: 278: else
 10310                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10311                           
 10312                           ; BSR set to: 0
 10313                           
 10314                           ; BSR set to: 0
 10315  001EF2  0E98               	movlw	152
 10316  001EF4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10317  001EF6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10318  001EF8  B4D8               	btfsc	status,2,c
 10319  001EFA  D355               	goto	u11720
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;TabelasUmidade.h: 280: else
 10323                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10324                           
 10325                           ; BSR set to: 0
 10326                           
 10327                           ; BSR set to: 0
 10328  001EFC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10329  001EFE  D00E               	goto	l625
 10330  001F00  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10331  001F02  E104               	bnz	u10540
 10332  001F04  0E99               	movlw	153
 10333  001F06  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10334  001F08  A0D8               	btfss	status,0,c
 10335  001F0A  D008               	goto	l625
 10336  001F0C                     u10540:
 10337                           
 10338                           ; BSR set to: 0
 10339  001F0C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10340  001F0E  D35E               	goto	u11740
 10341  001F10  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10342  001F12  E104               	bnz	l7357
 10343  001F14  0E9D               	movlw	157
 10344  001F16  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10345  001F18  A0D8               	btfss	status,0,c
 10346  001F1A  D358               	goto	u11740
 10347  001F1C                     l625:
 10348  001F1C                     l7357:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;TabelasUmidade.h: 282: else
 10352                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10353  001F1C  0E9D               	movlw	157
 10354  001F1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10355  001F20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10356  001F22  B4D8               	btfsc	status,2,c
 10357  001F24  D35B               	goto	u11750
 10358                           
 10359                           ; BSR set to: 0
 10360                           ;TabelasUmidade.h: 284: else
 10361                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10362                           
 10363                           ; BSR set to: 0
 10364                           
 10365                           ; BSR set to: 0
 10366  001F26  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10367  001F28  D372               	goto	l630
 10368  001F2A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10369  001F2C  E101               	bnz	u10570
 10370  001F2E  D182               	goto	L26
 10371  001F30                     u10570:
 10372  001F30  D360               	goto	u11760
 10373  001F32                     
 10374                           ; BSR set to: 0
 10375                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10376                           
 10377                           ; BSR set to: 0
 10378  001F32  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10379  001F34  D006               	goto	u10580
 10380  001F36  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10381  001F38  E107               	bnz	l7369
 10382  001F3A  0E5B               	movlw	91
 10383  001F3C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10384  001F3E  B0D8               	btfsc	status,0,c
 10385  001F40  D003               	goto	l632
 10386  001F42                     u10580:
 10387                           
 10388                           ; BSR set to: 0
 10389  001F42  0E61               	movlw	97
 10390  001F44  EF7E  F00B         	goto	L24
 10391  001F48                     l632:
 10392  001F48                     l7369:
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;TabelasUmidade.h: 289: else
 10396                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10397  001F48  0E5B               	movlw	91
 10398  001F4A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10399  001F4C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10400  001F4E  A4D8               	btfss	status,2,c
 10401  001F50  D003               	goto	l634
 10402  001F52                     u10590:
 10403                           
 10404                           ; BSR set to: 0
 10405  001F52  0E60               	movlw	96
 10406  001F54  EF7E  F00B         	goto	L24
 10407  001F58                     l634:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;TabelasUmidade.h: 291: else
 10411                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10412                           
 10413                           ; BSR set to: 0
 10414  001F58  0E5C               	movlw	92
 10415  001F5A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10416  001F5C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10417  001F5E  B4D8               	btfsc	status,2,c
 10418  001F60  D005               	goto	u10610
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;TabelasUmidade.h: 293: else
 10422                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10423                           
 10424                           ; BSR set to: 0
 10425                           
 10426                           ; BSR set to: 0
 10427  001F62  0E5C               	movlw	92
 10428  001F64  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10429  001F66  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10430  001F68  A4D8               	btfss	status,2,c
 10431  001F6A  D003               	goto	l638
 10432  001F6C                     u10610:
 10433                           
 10434                           ; BSR set to: 0
 10435  001F6C  0E5F               	movlw	95
 10436  001F6E  EF7E  F00B         	goto	L24
 10437  001F72                     l638:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;TabelasUmidade.h: 295: else
 10441                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10442                           
 10443                           ; BSR set to: 0
 10444  001F72  0E5D               	movlw	93
 10445  001F74  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10446  001F76  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10447  001F78  B4D8               	btfsc	status,2,c
 10448  001F7A  EF70  F00B         	goto	u8850
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;TabelasUmidade.h: 297: else
 10452                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10453                           
 10454                           ; BSR set to: 0
 10455                           
 10456                           ; BSR set to: 0
 10457  001F7E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10458  001F80  D010               	goto	l642
 10459  001F82  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10460  001F84  E104               	bnz	u10630
 10461  001F86  0E5E               	movlw	94
 10462  001F88  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10463  001F8A  A0D8               	btfss	status,0,c
 10464  001F8C  D00A               	goto	l642
 10465  001F8E                     u10630:
 10466                           
 10467                           ; BSR set to: 0
 10468  001F8E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10469  001F90  EF69  F00B         	goto	u8840
 10470  001F94  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10471  001F96  E105               	bnz	l7391
 10472  001F98  0E65               	movlw	101
 10473  001F9A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10474  001F9C  A0D8               	btfss	status,0,c
 10475  001F9E  EF69  F00B         	goto	u8840
 10476  001FA2                     l642:
 10477  001FA2                     l7391:
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;TabelasUmidade.h: 299: else
 10481                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10482  001FA2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10483  001FA4  D011               	goto	l644
 10484  001FA6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10485  001FA8  E104               	bnz	u10650
 10486  001FAA  0E65               	movlw	101
 10487  001FAC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10488  001FAE  A0D8               	btfss	status,0,c
 10489  001FB0  D00B               	goto	l644
 10490  001FB2                     u10650:
 10491                           
 10492                           ; BSR set to: 0
 10493  001FB2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10494  001FB4  D006               	goto	u10660
 10495  001FB6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10496  001FB8  E107               	bnz	l7397
 10497  001FBA  0E67               	movlw	103
 10498  001FBC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10499  001FBE  B0D8               	btfsc	status,0,c
 10500  001FC0  D003               	goto	l644
 10501  001FC2                     u10660:
 10502                           
 10503                           ; BSR set to: 0
 10504  001FC2  0E53               	movlw	83
 10505  001FC4  EF7E  F00B         	goto	L24
 10506  001FC8                     l644:
 10507  001FC8                     l7397:
 10508                           
 10509                           ; BSR set to: 0
 10510                           ;TabelasUmidade.h: 301: else
 10511                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10512  001FC8  0E67               	movlw	103
 10513  001FCA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10514  001FCC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10515  001FCE  A4D8               	btfss	status,2,c
 10516  001FD0  D003               	goto	l646
 10517                           
 10518                           ; BSR set to: 0
 10519  001FD2  0E51               	movlw	81
 10520  001FD4  EF7E  F00B         	goto	L24
 10521  001FD8                     l646:
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;TabelasUmidade.h: 303: else
 10525                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10526                           
 10527                           ; BSR set to: 0
 10528  001FD8  0E68               	movlw	104
 10529  001FDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10530  001FDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10531  001FDE  B4D8               	btfsc	status,2,c
 10532  001FE0  D17F               	goto	u11280
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;TabelasUmidade.h: 305: else
 10536                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10537                           
 10538                           ; BSR set to: 0
 10539                           
 10540                           ; BSR set to: 0
 10541  001FE2  0E69               	movlw	105
 10542  001FE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10543  001FE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10544  001FE8  B4D8               	btfsc	status,2,c
 10545  001FEA  D18A               	goto	u11300
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;TabelasUmidade.h: 307: else
 10549                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10550                           
 10551                           ; BSR set to: 0
 10552                           
 10553                           ; BSR set to: 0
 10554  001FEC  0E6A               	movlw	106
 10555  001FEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10556  001FF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10557  001FF2  B4D8               	btfsc	status,2,c
 10558  001FF4  D195               	goto	u11320
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;TabelasUmidade.h: 309: else
 10562                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10563                           
 10564                           ; BSR set to: 0
 10565                           
 10566                           ; BSR set to: 0
 10567  001FF6  0E6B               	movlw	107
 10568  001FF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10569  001FFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10570  001FFC  A4D8               	btfss	status,2,c
 10571  001FFE  D003               	goto	l654
 10572                           
 10573                           ; BSR set to: 0
 10574  002000  0E49               	movlw	73
 10575  002002  EF7E  F00B         	goto	L24
 10576  002006                     l654:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;TabelasUmidade.h: 311: else
 10580                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10581                           
 10582                           ; BSR set to: 0
 10583  002006  0E6C               	movlw	108
 10584  002008  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10585  00200A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10586  00200C  A4D8               	btfss	status,2,c
 10587  00200E  D003               	goto	l656
 10588  002010                     u10720:
 10589                           
 10590                           ; BSR set to: 0
 10591  002010  0E48               	movlw	72
 10592  002012  EF7E  F00B         	goto	L24
 10593  002016                     l656:
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;TabelasUmidade.h: 313: else
 10597                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10598                           
 10599                           ; BSR set to: 0
 10600  002016  0E6D               	movlw	109
 10601  002018  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10602  00201A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10603  00201C  A4D8               	btfss	status,2,c
 10604  00201E  D003               	goto	l658
 10605                           
 10606                           ; BSR set to: 0
 10607  002020  0E47               	movlw	71
 10608  002022  EF7E  F00B         	goto	L24
 10609  002026                     l658:
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;TabelasUmidade.h: 315: else
 10613                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10614                           
 10615                           ; BSR set to: 0
 10616  002026  0E6E               	movlw	110
 10617  002028  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10618  00202A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10619  00202C  B4D8               	btfsc	status,2,c
 10620  00202E  D18B               	goto	u11340
 10621                           
 10622                           ; BSR set to: 0
 10623                           ;TabelasUmidade.h: 317: else
 10624                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10625                           
 10626                           ; BSR set to: 0
 10627                           
 10628                           ; BSR set to: 0
 10629  002030  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10630  002032  D011               	goto	l662
 10631  002034  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10632  002036  E104               	bnz	u10750
 10633  002038  0E6F               	movlw	111
 10634  00203A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10635  00203C  A0D8               	btfss	status,0,c
 10636  00203E  D00B               	goto	l662
 10637  002040                     u10750:
 10638                           
 10639                           ; BSR set to: 0
 10640  002040  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10641  002042  D006               	goto	u10760
 10642  002044  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10643  002046  E107               	bnz	l7435
 10644  002048  0E73               	movlw	115
 10645  00204A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10646  00204C  B0D8               	btfsc	status,0,c
 10647  00204E  D003               	goto	l662
 10648  002050                     u10760:
 10649                           
 10650                           ; BSR set to: 0
 10651  002050  0E41               	movlw	65
 10652  002052  EF7E  F00B         	goto	L24
 10653  002056                     l662:
 10654  002056                     l7435:
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;TabelasUmidade.h: 319: else
 10658                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10659  002056  0E73               	movlw	115
 10660  002058  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10661  00205A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10662  00205C  A4D8               	btfss	status,2,c
 10663  00205E  D003               	goto	l664
 10664                           
 10665                           ; BSR set to: 0
 10666  002060  0E3F               	movlw	63
 10667  002062  EF7E  F00B         	goto	L24
 10668  002066                     l664:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;TabelasUmidade.h: 321: else
 10672                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10673                           
 10674                           ; BSR set to: 0
 10675  002066  0E74               	movlw	116
 10676  002068  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10677  00206A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10678  00206C  A4D8               	btfss	status,2,c
 10679  00206E  D003               	goto	l666
 10680                           
 10681                           ; BSR set to: 0
 10682  002070  0E3D               	movlw	61
 10683  002072  EF7E  F00B         	goto	L24
 10684  002076                     l666:
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;TabelasUmidade.h: 323: else
 10688                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10689                           
 10690                           ; BSR set to: 0
 10691  002076  0E75               	movlw	117
 10692  002078  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10693  00207A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10694  00207C  A4D8               	btfss	status,2,c
 10695  00207E  D003               	goto	l668
 10696                           
 10697                           ; BSR set to: 0
 10698  002080  0E3B               	movlw	59
 10699  002082  EF7E  F00B         	goto	L24
 10700  002086                     l668:
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;TabelasUmidade.h: 325: else
 10704                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10705                           
 10706                           ; BSR set to: 0
 10707  002086  0E76               	movlw	118
 10708  002088  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10709  00208A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10710  00208C  A4D8               	btfss	status,2,c
 10711  00208E  D003               	goto	l670
 10712                           
 10713                           ; BSR set to: 0
 10714  002090  0E39               	movlw	57
 10715  002092  EF7E  F00B         	goto	L24
 10716  002096                     l670:
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;TabelasUmidade.h: 327: else
 10720                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10721                           
 10722                           ; BSR set to: 0
 10723  002096  0E77               	movlw	119
 10724  002098  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10725  00209A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10726  00209C  B4D8               	btfsc	status,2,c
 10727  00209E  D193               	goto	u11420
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;TabelasUmidade.h: 329: else
 10731                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10732                           
 10733                           ; BSR set to: 0
 10734                           
 10735                           ; BSR set to: 0
 10736  0020A0  0E78               	movlw	120
 10737  0020A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10738  0020A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10739  0020A6  B4D8               	btfsc	status,2,c
 10740  0020A8  D196               	goto	u11430
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;TabelasUmidade.h: 331: else
 10744                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10745                           
 10746                           ; BSR set to: 0
 10747                           
 10748                           ; BSR set to: 0
 10749  0020AA  0E79               	movlw	121
 10750  0020AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10751  0020AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10752  0020B0  A4D8               	btfss	status,2,c
 10753  0020B2  D003               	goto	l676
 10754                           
 10755                           ; BSR set to: 0
 10756  0020B4  0E33               	movlw	51
 10757  0020B6  EF7E  F00B         	goto	L24
 10758  0020BA                     l676:
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;TabelasUmidade.h: 333: else
 10762                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10763                           
 10764                           ; BSR set to: 0
 10765  0020BA  0E7A               	movlw	122
 10766  0020BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10767  0020BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10768  0020C0  B4D8               	btfsc	status,2,c
 10769  0020C2  D199               	goto	u11450
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;TabelasUmidade.h: 335: else
 10773                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10774                           
 10775                           ; BSR set to: 0
 10776                           
 10777                           ; BSR set to: 0
 10778  0020C4  0E7B               	movlw	123
 10779  0020C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10780  0020C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10781  0020CA  A4D8               	btfss	status,2,c
 10782  0020CC  D003               	goto	l680
 10783  0020CE                     u10850:
 10784                           
 10785                           ; BSR set to: 0
 10786  0020CE  0E30               	movlw	48
 10787  0020D0  EF7E  F00B         	goto	L24
 10788  0020D4                     l680:
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;TabelasUmidade.h: 337: else
 10792                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10793                           
 10794                           ; BSR set to: 0
 10795  0020D4  0E7C               	movlw	124
 10796  0020D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10797  0020D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10798  0020DA  B4D8               	btfsc	status,2,c
 10799  0020DC  D19C               	goto	u11470
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;TabelasUmidade.h: 339: else
 10803                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10804                           
 10805                           ; BSR set to: 0
 10806                           
 10807                           ; BSR set to: 0
 10808  0020DE  0E7D               	movlw	125
 10809  0020E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10810  0020E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10811  0020E4  B4D8               	btfsc	status,2,c
 10812  0020E6  D19F               	goto	u11480
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;TabelasUmidade.h: 341: else
 10816                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10817                           
 10818                           ; BSR set to: 0
 10819                           
 10820                           ; BSR set to: 0
 10821  0020E8  0E7E               	movlw	126
 10822  0020EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10823  0020EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10824  0020EE  A4D8               	btfss	status,2,c
 10825  0020F0  D003               	goto	l686
 10826  0020F2                     u10880:
 10827                           
 10828                           ; BSR set to: 0
 10829  0020F2  0E2C               	movlw	44
 10830  0020F4  EF7E  F00B         	goto	L24
 10831  0020F8                     l686:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;TabelasUmidade.h: 343: else
 10835                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10836                           
 10837                           ; BSR set to: 0
 10838  0020F8  0E7F               	movlw	127
 10839  0020FA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10840  0020FC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10841  0020FE  A4D8               	btfss	status,2,c
 10842  002100  D003               	goto	l688
 10843  002102                     u10890:
 10844                           
 10845                           ; BSR set to: 0
 10846  002102  0E2A               	movlw	42
 10847  002104  EF7E  F00B         	goto	L24
 10848  002108                     l688:
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;TabelasUmidade.h: 345: else
 10852                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10853                           
 10854                           ; BSR set to: 0
 10855  002108  0E80               	movlw	128
 10856  00210A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10857  00210C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10858  00210E  B4D8               	btfsc	status,2,c
 10859  002110  D19A               	goto	u11500
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;TabelasUmidade.h: 347: else
 10863                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10864                           
 10865                           ; BSR set to: 0
 10866                           
 10867                           ; BSR set to: 0
 10868  002112  0E81               	movlw	129
 10869  002114  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10870  002116  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10871  002118  B4D8               	btfsc	status,2,c
 10872  00211A  D195               	goto	u11500
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;TabelasUmidade.h: 349: else
 10876                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10877                           
 10878                           ; BSR set to: 0
 10879                           
 10880                           ; BSR set to: 0
 10881  00211C  0E82               	movlw	130
 10882  00211E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10883  002120  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10884  002122  B4D8               	btfsc	status,2,c
 10885  002124  D198               	goto	u11510
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;TabelasUmidade.h: 351: else
 10889                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10890                           
 10891                           ; BSR set to: 0
 10892                           
 10893                           ; BSR set to: 0
 10894  002126  0E83               	movlw	131
 10895  002128  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10896  00212A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10897  00212C  B4D8               	btfsc	status,2,c
 10898  00212E  D193               	goto	u11510
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;TabelasUmidade.h: 353: else
 10902                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10903                           
 10904                           ; BSR set to: 0
 10905                           
 10906                           ; BSR set to: 0
 10907  002130  0E84               	movlw	132
 10908  002132  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10909  002134  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10910  002136  B4D8               	btfsc	status,2,c
 10911  002138  D196               	goto	u11520
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;TabelasUmidade.h: 355: else
 10915                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10916                           
 10917                           ; BSR set to: 0
 10918                           
 10919                           ; BSR set to: 0
 10920  00213A  0E85               	movlw	133
 10921  00213C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10922  00213E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10923  002140  B4D8               	btfsc	status,2,c
 10924  002142  D191               	goto	u11520
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;TabelasUmidade.h: 357: else
 10928                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10929                           
 10930                           ; BSR set to: 0
 10931                           
 10932                           ; BSR set to: 0
 10933  002144  0E86               	movlw	134
 10934  002146  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10935  002148  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10936  00214A  B4D8               	btfsc	status,2,c
 10937  00214C  D19C               	goto	u11540
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;TabelasUmidade.h: 359: else
 10941                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10942                           
 10943                           ; BSR set to: 0
 10944                           
 10945                           ; BSR set to: 0
 10946  00214E  0E87               	movlw	135
 10947  002150  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10948  002152  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10949  002154  B4D8               	btfsc	status,2,c
 10950  002156  D19F               	goto	u11550
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;TabelasUmidade.h: 361: else
 10954                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10955                           
 10956                           ; BSR set to: 0
 10957                           
 10958                           ; BSR set to: 0
 10959  002158  0E88               	movlw	136
 10960  00215A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10961  00215C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10962  00215E  B4D8               	btfsc	status,2,c
 10963  002160  D1A2               	goto	u11560
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;TabelasUmidade.h: 363: else
 10967                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10968                           
 10969                           ; BSR set to: 0
 10970                           
 10971                           ; BSR set to: 0
 10972  002162  0E89               	movlw	137
 10973  002164  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10974  002166  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10975  002168  B4D8               	btfsc	status,2,c
 10976  00216A  D1A5               	goto	u11570
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;TabelasUmidade.h: 365: else
 10980                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10981                           
 10982                           ; BSR set to: 0
 10983                           
 10984                           ; BSR set to: 0
 10985  00216C  0E8A               	movlw	138
 10986  00216E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10987  002170  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10988  002172  B4D8               	btfsc	status,2,c
 10989  002174  D1A8               	goto	u11580
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;TabelasUmidade.h: 367: else
 10993                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10994                           
 10995                           ; BSR set to: 0
 10996                           
 10997                           ; BSR set to: 0
 10998  002176  0E8B               	movlw	139
 10999  002178  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11000  00217A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11001  00217C  B4D8               	btfsc	status,2,c
 11002  00217E  D1AB               	goto	u11590
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;TabelasUmidade.h: 369: else
 11006                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 11007                           
 11008                           ; BSR set to: 0
 11009                           
 11010                           ; BSR set to: 0
 11011  002180  0E8C               	movlw	140
 11012  002182  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11013  002184  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11014  002186  B4D8               	btfsc	status,2,c
 11015  002188  D1AE               	goto	u11600
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;TabelasUmidade.h: 371: else
 11019                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 11020                           
 11021                           ; BSR set to: 0
 11022                           
 11023                           ; BSR set to: 0
 11024  00218A  0E8D               	movlw	141
 11025  00218C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11026  00218E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11027  002190  B4D8               	btfsc	status,2,c
 11028  002192  D1B1               	goto	u11610
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;TabelasUmidade.h: 373: else
 11032                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 11033                           
 11034                           ; BSR set to: 0
 11035                           
 11036                           ; BSR set to: 0
 11037  002194  0E8E               	movlw	142
 11038  002196  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11039  002198  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11040  00219A  B4D8               	btfsc	status,2,c
 11041  00219C  D1B4               	goto	u11620
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;TabelasUmidade.h: 375: else
 11045                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 11046                           
 11047                           ; BSR set to: 0
 11048                           
 11049                           ; BSR set to: 0
 11050  00219E  0E8F               	movlw	143
 11051  0021A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11052  0021A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11053  0021A4  B4D8               	btfsc	status,2,c
 11054  0021A6  D1B7               	goto	u11630
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;TabelasUmidade.h: 377: else
 11058                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 11059                           
 11060                           ; BSR set to: 0
 11061                           
 11062                           ; BSR set to: 0
 11063  0021A8  0E90               	movlw	144
 11064  0021AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11065  0021AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11066  0021AE  B4D8               	btfsc	status,2,c
 11067  0021B0  D1BA               	goto	u11640
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;TabelasUmidade.h: 379: else
 11071                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 11072                           
 11073                           ; BSR set to: 0
 11074                           
 11075                           ; BSR set to: 0
 11076  0021B2  0E91               	movlw	145
 11077  0021B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11078  0021B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11079  0021B8  B4D8               	btfsc	status,2,c
 11080  0021BA  D1BD               	goto	u11650
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;TabelasUmidade.h: 381: else
 11084                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 11085                           
 11086                           ; BSR set to: 0
 11087                           
 11088                           ; BSR set to: 0
 11089  0021BC  0E92               	movlw	146
 11090  0021BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11091  0021C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11092  0021C2  B4D8               	btfsc	status,2,c
 11093  0021C4  D1C0               	goto	u11660
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;TabelasUmidade.h: 383: else
 11097                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 11098                           
 11099                           ; BSR set to: 0
 11100                           
 11101                           ; BSR set to: 0
 11102  0021C6  0E93               	movlw	147
 11103  0021C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11104  0021CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11105  0021CC  B4D8               	btfsc	status,2,c
 11106  0021CE  D1C3               	goto	u11670
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;TabelasUmidade.h: 385: else
 11110                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 11111                           
 11112                           ; BSR set to: 0
 11113                           
 11114                           ; BSR set to: 0
 11115  0021D0  0E94               	movlw	148
 11116  0021D2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11117  0021D4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11118  0021D6  B4D8               	btfsc	status,2,c
 11119  0021D8  D1C6               	goto	u11680
 11120                           
 11121                           ; BSR set to: 0
 11122                           ;TabelasUmidade.h: 387: else
 11123                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 11124                           
 11125                           ; BSR set to: 0
 11126                           
 11127                           ; BSR set to: 0
 11128  0021DA  0E95               	movlw	149
 11129  0021DC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11130  0021DE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11131  0021E0  B4D8               	btfsc	status,2,c
 11132  0021E2  D1C9               	goto	u11690
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;TabelasUmidade.h: 389: else
 11136                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 11137                           
 11138                           ; BSR set to: 0
 11139                           
 11140                           ; BSR set to: 0
 11141  0021E4  0E96               	movlw	150
 11142  0021E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11143  0021E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11144  0021EA  B4D8               	btfsc	status,2,c
 11145  0021EC  D1CC               	goto	u11700
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;TabelasUmidade.h: 391: else
 11149                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 11150                           
 11151                           ; BSR set to: 0
 11152                           
 11153                           ; BSR set to: 0
 11154  0021EE  0E97               	movlw	151
 11155  0021F0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11156  0021F2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11157  0021F4  B4D8               	btfsc	status,2,c
 11158  0021F6  D1CF               	goto	u11710
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;TabelasUmidade.h: 393: else
 11162                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 11163                           
 11164                           ; BSR set to: 0
 11165                           
 11166                           ; BSR set to: 0
 11167  0021F8  0E98               	movlw	152
 11168  0021FA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11169  0021FC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11170  0021FE  B4D8               	btfsc	status,2,c
 11171  002200  D1D2               	goto	u11720
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;TabelasUmidade.h: 395: else
 11175                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11176                           
 11177                           ; BSR set to: 0
 11178                           
 11179                           ; BSR set to: 0
 11180  002202  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11181  002204  D00E               	goto	l740
 11182  002206  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11183  002208  E104               	bnz	u11150
 11184  00220A  0E99               	movlw	153
 11185  00220C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11186  00220E  A0D8               	btfss	status,0,c
 11187  002210  D008               	goto	l740
 11188  002212                     u11150:
 11189                           
 11190                           ; BSR set to: 0
 11191  002212  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11192  002214  D1DB               	goto	u11740
 11193  002216  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11194  002218  E104               	bnz	l7593
 11195  00221A  0E9D               	movlw	157
 11196  00221C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11197  00221E  A0D8               	btfss	status,0,c
 11198  002220  D1D5               	goto	u11740
 11199  002222                     l740:
 11200  002222                     l7593:
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;TabelasUmidade.h: 397: else
 11204                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 11205  002222  0E9D               	movlw	157
 11206  002224  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11207  002226  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11208  002228  B4D8               	btfsc	status,2,c
 11209  00222A  D1D8               	goto	u11750
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;TabelasUmidade.h: 399: else
 11213                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 11214                           
 11215                           ; BSR set to: 0
 11216                           
 11217                           ; BSR set to: 0
 11218  00222C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11219  00222E  D1EF               	goto	l630
 11220  002230  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11221  002232  E104               	bnz	u11180
 11222  002234                     L26:
 11223  002234  0E9E               	movlw	158
 11224  002236  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11225  002238  A0D8               	btfss	status,0,c
 11226  00223A  D1E9               	goto	l630
 11227  00223C                     u11180:
 11228  00223C  D1DA               	goto	u11760
 11229  00223E                     
 11230                           ; BSR set to: 0
 11231                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 11232                           
 11233                           ; BSR set to: 0
 11234  00223E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11235  002240  D006               	goto	u11190
 11236  002242  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11237  002244  E107               	bnz	l7605
 11238  002246  0E5D               	movlw	93
 11239  002248  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11240  00224A  B0D8               	btfsc	status,0,c
 11241  00224C  D003               	goto	l746
 11242  00224E                     u11190:
 11243                           
 11244                           ; BSR set to: 0
 11245  00224E  0E64               	movlw	100
 11246  002250  EF7E  F00B         	goto	L24
 11247  002254                     l746:
 11248  002254                     l7605:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;TabelasUmidade.h: 404: else
 11252                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 11253  002254  0E5D               	movlw	93
 11254  002256  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11255  002258  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11256  00225A  A4D8               	btfss	status,2,c
 11257  00225C  D003               	goto	l748
 11258  00225E                     u11200:
 11259                           
 11260                           ; BSR set to: 0
 11261  00225E  0E63               	movlw	99
 11262  002260  EF7E  F00B         	goto	L24
 11263  002264                     l748:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;TabelasUmidade.h: 406: else
 11267                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 11268                           
 11269                           ; BSR set to: 0
 11270  002264  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11271  002266  D011               	goto	l750
 11272  002268  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11273  00226A  E104               	bnz	u11210
 11274  00226C  0E5E               	movlw	94
 11275  00226E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11276  002270  A0D8               	btfss	status,0,c
 11277  002272  D00B               	goto	l750
 11278  002274                     u11210:
 11279                           
 11280                           ; BSR set to: 0
 11281  002274  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11282  002276  D006               	goto	u11220
 11283  002278  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11284  00227A  E107               	bnz	l7615
 11285  00227C  0E65               	movlw	101
 11286  00227E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11287  002280  B0D8               	btfsc	status,0,c
 11288  002282  D003               	goto	l750
 11289  002284                     u11220:
 11290                           
 11291                           ; BSR set to: 0
 11292  002284  0E62               	movlw	98
 11293  002286  EF7E  F00B         	goto	L24
 11294  00228A                     l750:
 11295  00228A                     l7615:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;TabelasUmidade.h: 408: else
 11299                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11300  00228A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11301  00228C  D010               	goto	l752
 11302  00228E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11303  002290  E104               	bnz	u11230
 11304  002292  0E65               	movlw	101
 11305  002294  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11306  002296  A0D8               	btfss	status,0,c
 11307  002298  D00A               	goto	l752
 11308  00229A                     u11230:
 11309                           
 11310                           ; BSR set to: 0
 11311  00229A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11312  00229C  EF46  F00B         	goto	u8790
 11313  0022A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11314  0022A2  E105               	bnz	l7621
 11315  0022A4  0E67               	movlw	103
 11316  0022A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11317  0022A8  A0D8               	btfss	status,0,c
 11318  0022AA  EF46  F00B         	goto	u8790
 11319  0022AE                     l752:
 11320  0022AE                     l7621:
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;TabelasUmidade.h: 410: else
 11324                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11325  0022AE  0E67               	movlw	103
 11326  0022B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11327  0022B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11328  0022B4  B4D8               	btfsc	status,2,c
 11329  0022B6  EF38  F00B         	goto	u8770
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;TabelasUmidade.h: 412: else
 11333                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11334                           
 11335                           ; BSR set to: 0
 11336                           
 11337                           ; BSR set to: 0
 11338  0022BA  0E68               	movlw	104
 11339  0022BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11340  0022BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11341  0022C0  B4D8               	btfsc	status,2,c
 11342  0022C2  EF31  F00B         	goto	u8760
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;TabelasUmidade.h: 414: else
 11346                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11347                           
 11348                           ; BSR set to: 0
 11349                           
 11350                           ; BSR set to: 0
 11351  0022C6  0E69               	movlw	105
 11352  0022C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11353  0022CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11354  0022CC  A4D8               	btfss	status,2,c
 11355  0022CE  D003               	goto	l758
 11356                           
 11357                           ; BSR set to: 0
 11358  0022D0  0E52               	movlw	82
 11359  0022D2  EF7E  F00B         	goto	L24
 11360  0022D6                     l758:
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;TabelasUmidade.h: 416: else
 11364                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11365                           
 11366                           ; BSR set to: 0
 11367  0022D6  0E6A               	movlw	106
 11368  0022D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11369  0022DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11370  0022DC  A4D8               	btfss	status,2,c
 11371  0022DE  D003               	goto	l760
 11372  0022E0                     u11280:
 11373                           
 11374                           ; BSR set to: 0
 11375  0022E0  0E50               	movlw	80
 11376  0022E2  EF7E  F00B         	goto	L24
 11377  0022E6                     l760:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;TabelasUmidade.h: 418: else
 11381                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11382                           
 11383                           ; BSR set to: 0
 11384  0022E6  0E6B               	movlw	107
 11385  0022E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11386  0022EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11387  0022EC  A4D8               	btfss	status,2,c
 11388  0022EE  D003               	goto	l762
 11389  0022F0                     u11290:
 11390                           
 11391                           ; BSR set to: 0
 11392  0022F0  0E4E               	movlw	78
 11393  0022F2  EF7E  F00B         	goto	L24
 11394  0022F6                     l762:
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;TabelasUmidade.h: 420: else
 11398                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11399                           
 11400                           ; BSR set to: 0
 11401  0022F6  0E6C               	movlw	108
 11402  0022F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11403  0022FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11404  0022FC  A4D8               	btfss	status,2,c
 11405  0022FE  D003               	goto	l764
 11406  002300                     u11300:
 11407                           
 11408                           ; BSR set to: 0
 11409  002300  0E4D               	movlw	77
 11410  002302  EF7E  F00B         	goto	L24
 11411  002306                     l764:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;TabelasUmidade.h: 422: else
 11415                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11416                           
 11417                           ; BSR set to: 0
 11418  002306  0E6D               	movlw	109
 11419  002308  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11420  00230A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11421  00230C  A4D8               	btfss	status,2,c
 11422  00230E  D003               	goto	l766
 11423  002310                     u11310:
 11424                           
 11425                           ; BSR set to: 0
 11426  002310  0E4C               	movlw	76
 11427  002312  EF7E  F00B         	goto	L24
 11428  002316                     l766:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;TabelasUmidade.h: 424: else
 11432                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11433                           
 11434                           ; BSR set to: 0
 11435  002316  0E6E               	movlw	110
 11436  002318  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11437  00231A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11438  00231C  A4D8               	btfss	status,2,c
 11439  00231E  D003               	goto	l768
 11440  002320                     u11320:
 11441                           
 11442                           ; BSR set to: 0
 11443  002320  0E4B               	movlw	75
 11444  002322  EF7E  F00B         	goto	L24
 11445  002326                     l768:
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;TabelasUmidade.h: 426: else
 11449                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11450                           
 11451                           ; BSR set to: 0
 11452  002326  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11453  002328  D011               	goto	l770
 11454  00232A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11455  00232C  E104               	bnz	u11330
 11456  00232E  0E6F               	movlw	111
 11457  002330  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11458  002332  A0D8               	btfss	status,0,c
 11459  002334  D00B               	goto	l770
 11460  002336                     u11330:
 11461                           
 11462                           ; BSR set to: 0
 11463  002336  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11464  002338  D006               	goto	u11340
 11465  00233A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11466  00233C  E107               	bnz	l7659
 11467  00233E  0E73               	movlw	115
 11468  002340  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11469  002342  B0D8               	btfsc	status,0,c
 11470  002344  D003               	goto	l770
 11471  002346                     u11340:
 11472                           
 11473                           ; BSR set to: 0
 11474  002346  0E46               	movlw	70
 11475  002348  EF7E  F00B         	goto	L24
 11476  00234C                     l770:
 11477  00234C                     l7659:
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;TabelasUmidade.h: 428: else
 11481                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11482  00234C  0E73               	movlw	115
 11483  00234E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11484  002350  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11485  002352  A4D8               	btfss	status,2,c
 11486  002354  D003               	goto	l772
 11487  002356                     u11350:
 11488                           
 11489                           ; BSR set to: 0
 11490  002356  0E44               	movlw	68
 11491  002358  EF7E  F00B         	goto	L24
 11492  00235C                     l772:
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;TabelasUmidade.h: 430: else
 11496                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11497                           
 11498                           ; BSR set to: 0
 11499  00235C  0E74               	movlw	116
 11500  00235E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11501  002360  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11502  002362  A4D8               	btfss	status,2,c
 11503  002364  D003               	goto	l774
 11504  002366                     u11360:
 11505                           
 11506                           ; BSR set to: 0
 11507  002366  0E42               	movlw	66
 11508  002368  EF7E  F00B         	goto	L24
 11509  00236C                     l774:
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;TabelasUmidade.h: 432: else
 11513                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11514                           
 11515                           ; BSR set to: 0
 11516  00236C  0E75               	movlw	117
 11517  00236E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11518  002370  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11519  002372  A4D8               	btfss	status,2,c
 11520  002374  D003               	goto	l776
 11521                           
 11522                           ; BSR set to: 0
 11523  002376  0E40               	movlw	64
 11524  002378  EF7E  F00B         	goto	L24
 11525  00237C                     l776:
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;TabelasUmidade.h: 434: else
 11529                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11530                           
 11531                           ; BSR set to: 0
 11532  00237C  0E76               	movlw	118
 11533  00237E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11534  002380  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11535  002382  A4D8               	btfss	status,2,c
 11536  002384  D003               	goto	l778
 11537                           
 11538                           ; BSR set to: 0
 11539  002386  0E3E               	movlw	62
 11540  002388  EF7E  F00B         	goto	L24
 11541  00238C                     l778:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;TabelasUmidade.h: 436: else
 11545                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11546                           
 11547                           ; BSR set to: 0
 11548  00238C  0E77               	movlw	119
 11549  00238E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11550  002390  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11551  002392  A4D8               	btfss	status,2,c
 11552  002394  D003               	goto	l780
 11553  002396                     u11390:
 11554                           
 11555                           ; BSR set to: 0
 11556  002396  0E3C               	movlw	60
 11557  002398  EF7E  F00B         	goto	L24
 11558  00239C                     l780:
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;TabelasUmidade.h: 438: else
 11562                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11563                           
 11564                           ; BSR set to: 0
 11565  00239C  0E78               	movlw	120
 11566  00239E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11567  0023A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11568  0023A2  A4D8               	btfss	status,2,c
 11569  0023A4  D003               	goto	l782
 11570  0023A6                     u11400:
 11571                           
 11572                           ; BSR set to: 0
 11573  0023A6  0E3A               	movlw	58
 11574  0023A8  EF7E  F00B         	goto	L24
 11575  0023AC                     l782:
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;TabelasUmidade.h: 440: else
 11579                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11580                           
 11581                           ; BSR set to: 0
 11582  0023AC  0E79               	movlw	121
 11583  0023AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11584  0023B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11585  0023B2  A4D8               	btfss	status,2,c
 11586  0023B4  D003               	goto	l784
 11587  0023B6                     u11410:
 11588                           
 11589                           ; BSR set to: 0
 11590  0023B6  0E38               	movlw	56
 11591  0023B8  EF7E  F00B         	goto	L24
 11592  0023BC                     l784:
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;TabelasUmidade.h: 442: else
 11596                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11597                           
 11598                           ; BSR set to: 0
 11599  0023BC  0E7A               	movlw	122
 11600  0023BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11601  0023C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11602  0023C2  A4D8               	btfss	status,2,c
 11603  0023C4  D003               	goto	l786
 11604  0023C6                     u11420:
 11605                           
 11606                           ; BSR set to: 0
 11607  0023C6  0E37               	movlw	55
 11608  0023C8  EF7E  F00B         	goto	L24
 11609  0023CC                     l786:
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;TabelasUmidade.h: 444: else
 11613                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11614                           
 11615                           ; BSR set to: 0
 11616  0023CC  0E7B               	movlw	123
 11617  0023CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11618  0023D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11619  0023D2  A4D8               	btfss	status,2,c
 11620  0023D4  D003               	goto	l788
 11621  0023D6                     u11430:
 11622                           
 11623                           ; BSR set to: 0
 11624  0023D6  0E35               	movlw	53
 11625  0023D8  EF7E  F00B         	goto	L24
 11626  0023DC                     l788:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;TabelasUmidade.h: 446: else
 11630                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11631                           
 11632                           ; BSR set to: 0
 11633  0023DC  0E7C               	movlw	124
 11634  0023DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11635  0023E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11636  0023E2  A4D8               	btfss	status,2,c
 11637  0023E4  D003               	goto	l790
 11638  0023E6                     u11440:
 11639                           
 11640                           ; BSR set to: 0
 11641  0023E6  0E34               	movlw	52
 11642  0023E8  EF7E  F00B         	goto	L24
 11643  0023EC                     l790:
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;TabelasUmidade.h: 448: else
 11647                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11648                           
 11649                           ; BSR set to: 0
 11650  0023EC  0E7D               	movlw	125
 11651  0023EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11652  0023F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11653  0023F2  A4D8               	btfss	status,2,c
 11654  0023F4  D003               	goto	l792
 11655  0023F6                     u11450:
 11656                           
 11657                           ; BSR set to: 0
 11658  0023F6  0E32               	movlw	50
 11659  0023F8  EF7E  F00B         	goto	L24
 11660  0023FC                     l792:
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;TabelasUmidade.h: 450: else
 11664                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11665                           
 11666                           ; BSR set to: 0
 11667  0023FC  0E7E               	movlw	126
 11668  0023FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11669  002400  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11670  002402  A4D8               	btfss	status,2,c
 11671  002404  D003               	goto	l794
 11672                           
 11673                           ; BSR set to: 0
 11674  002406  0E31               	movlw	49
 11675  002408  EF7E  F00B         	goto	L24
 11676  00240C                     l794:
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;TabelasUmidade.h: 452: else
 11680                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11681                           
 11682                           ; BSR set to: 0
 11683  00240C  0E7F               	movlw	127
 11684  00240E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11685  002410  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11686  002412  A4D8               	btfss	status,2,c
 11687  002414  D003               	goto	l796
 11688  002416                     u11470:
 11689                           
 11690                           ; BSR set to: 0
 11691  002416  0E2F               	movlw	47
 11692  002418  EF7E  F00B         	goto	L24
 11693  00241C                     l796:
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;TabelasUmidade.h: 454: else
 11697                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11698                           
 11699                           ; BSR set to: 0
 11700  00241C  0E80               	movlw	128
 11701  00241E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11702  002420  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11703  002422  A4D8               	btfss	status,2,c
 11704  002424  D003               	goto	l798
 11705  002426                     u11480:
 11706                           
 11707                           ; BSR set to: 0
 11708  002426  0E2D               	movlw	45
 11709  002428  EF7E  F00B         	goto	L24
 11710  00242C                     l798:
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;TabelasUmidade.h: 456: else
 11714                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11715                           
 11716                           ; BSR set to: 0
 11717  00242C  0E81               	movlw	129
 11718  00242E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11719  002430  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11720  002432  A4D8               	btfss	status,2,c
 11721  002434  D003               	goto	l800
 11722  002436                     u11490:
 11723                           
 11724                           ; BSR set to: 0
 11725  002436  0E2B               	movlw	43
 11726  002438  EF7E  F00B         	goto	L24
 11727  00243C                     l800:
 11728                           
 11729                           ; BSR set to: 0
 11730                           ;TabelasUmidade.h: 458: else
 11731                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11732                           
 11733                           ; BSR set to: 0
 11734  00243C  0E82               	movlw	130
 11735  00243E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11736  002440  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11737  002442  A4D8               	btfss	status,2,c
 11738  002444  D003               	goto	l802
 11739  002446                     u11500:
 11740                           
 11741                           ; BSR set to: 0
 11742  002446  0E29               	movlw	41
 11743  002448  EF7E  F00B         	goto	L24
 11744  00244C                     l802:
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;TabelasUmidade.h: 460: else
 11748                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11749                           
 11750                           ; BSR set to: 0
 11751  00244C  0E83               	movlw	131
 11752  00244E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11753  002450  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11754  002452  A4D8               	btfss	status,2,c
 11755  002454  D003               	goto	l804
 11756  002456                     u11510:
 11757                           
 11758                           ; BSR set to: 0
 11759  002456  0E28               	movlw	40
 11760  002458  EF7E  F00B         	goto	L24
 11761  00245C                     l804:
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;TabelasUmidade.h: 462: else
 11765                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11766                           
 11767                           ; BSR set to: 0
 11768  00245C  0E84               	movlw	132
 11769  00245E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11770  002460  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11771  002462  A4D8               	btfss	status,2,c
 11772  002464  D003               	goto	l806
 11773  002466                     u11520:
 11774                           
 11775                           ; BSR set to: 0
 11776  002466  0E27               	movlw	39
 11777  002468  EF7E  F00B         	goto	L24
 11778  00246C                     l806:
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;TabelasUmidade.h: 464: else
 11782                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11783                           
 11784                           ; BSR set to: 0
 11785  00246C  0E85               	movlw	133
 11786  00246E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11787  002470  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11788  002472  A4D8               	btfss	status,2,c
 11789  002474  D003               	goto	l808
 11790  002476                     u11530:
 11791                           
 11792                           ; BSR set to: 0
 11793  002476  0E25               	movlw	37
 11794  002478  EF7E  F00B         	goto	L24
 11795  00247C                     l808:
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;TabelasUmidade.h: 466: else
 11799                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11800                           
 11801                           ; BSR set to: 0
 11802  00247C  0E86               	movlw	134
 11803  00247E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11804  002480  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11805  002482  A4D8               	btfss	status,2,c
 11806  002484  D003               	goto	l810
 11807  002486                     u11540:
 11808                           
 11809                           ; BSR set to: 0
 11810  002486  0E24               	movlw	36
 11811  002488  EF7E  F00B         	goto	L24
 11812  00248C                     l810:
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;TabelasUmidade.h: 468: else
 11816                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11817                           
 11818                           ; BSR set to: 0
 11819  00248C  0E87               	movlw	135
 11820  00248E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11821  002490  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11822  002492  A4D8               	btfss	status,2,c
 11823  002494  D003               	goto	l812
 11824  002496                     u11550:
 11825                           
 11826                           ; BSR set to: 0
 11827  002496  0E23               	movlw	35
 11828  002498  EF7E  F00B         	goto	L24
 11829  00249C                     l812:
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;TabelasUmidade.h: 470: else
 11833                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11834                           
 11835                           ; BSR set to: 0
 11836  00249C  0E88               	movlw	136
 11837  00249E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11838  0024A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11839  0024A2  A4D8               	btfss	status,2,c
 11840  0024A4  D003               	goto	l814
 11841  0024A6                     u11560:
 11842                           
 11843                           ; BSR set to: 0
 11844  0024A6  0E22               	movlw	34
 11845  0024A8  EF7E  F00B         	goto	L24
 11846  0024AC                     l814:
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;TabelasUmidade.h: 472: else
 11850                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11851                           
 11852                           ; BSR set to: 0
 11853  0024AC  0E89               	movlw	137
 11854  0024AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11855  0024B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11856  0024B2  A4D8               	btfss	status,2,c
 11857  0024B4  D003               	goto	l816
 11858  0024B6                     u11570:
 11859                           
 11860                           ; BSR set to: 0
 11861  0024B6  0E21               	movlw	33
 11862  0024B8  EF7E  F00B         	goto	L24
 11863  0024BC                     l816:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;TabelasUmidade.h: 474: else
 11867                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11868                           
 11869                           ; BSR set to: 0
 11870  0024BC  0E8A               	movlw	138
 11871  0024BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11872  0024C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11873  0024C2  A4D8               	btfss	status,2,c
 11874  0024C4  D003               	goto	l818
 11875  0024C6                     u11580:
 11876                           
 11877                           ; BSR set to: 0
 11878  0024C6  0E20               	movlw	32
 11879  0024C8  EF7E  F00B         	goto	L24
 11880  0024CC                     l818:
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;TabelasUmidade.h: 476: else
 11884                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11885                           
 11886                           ; BSR set to: 0
 11887  0024CC  0E8B               	movlw	139
 11888  0024CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11889  0024D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11890  0024D2  A4D8               	btfss	status,2,c
 11891  0024D4  D003               	goto	l820
 11892  0024D6                     u11590:
 11893                           
 11894                           ; BSR set to: 0
 11895  0024D6  0E1F               	movlw	31
 11896  0024D8  EF7E  F00B         	goto	L24
 11897  0024DC                     l820:
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;TabelasUmidade.h: 478: else
 11901                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11902                           
 11903                           ; BSR set to: 0
 11904  0024DC  0E8C               	movlw	140
 11905  0024DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11906  0024E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11907  0024E2  A4D8               	btfss	status,2,c
 11908  0024E4  D003               	goto	l822
 11909  0024E6                     u11600:
 11910                           
 11911                           ; BSR set to: 0
 11912  0024E6  0E1E               	movlw	30
 11913  0024E8  EF7E  F00B         	goto	L24
 11914  0024EC                     l822:
 11915                           
 11916                           ; BSR set to: 0
 11917                           ;TabelasUmidade.h: 480: else
 11918                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11919                           
 11920                           ; BSR set to: 0
 11921  0024EC  0E8D               	movlw	141
 11922  0024EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11923  0024F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11924  0024F2  A4D8               	btfss	status,2,c
 11925  0024F4  D003               	goto	l824
 11926  0024F6                     u11610:
 11927                           
 11928                           ; BSR set to: 0
 11929  0024F6  0E1D               	movlw	29
 11930  0024F8  EF7E  F00B         	goto	L24
 11931  0024FC                     l824:
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;TabelasUmidade.h: 482: else
 11935                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11936                           
 11937                           ; BSR set to: 0
 11938  0024FC  0E8E               	movlw	142
 11939  0024FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11940  002500  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11941  002502  A4D8               	btfss	status,2,c
 11942  002504  D003               	goto	l826
 11943  002506                     u11620:
 11944                           
 11945                           ; BSR set to: 0
 11946  002506  0E1C               	movlw	28
 11947  002508  EF7E  F00B         	goto	L24
 11948  00250C                     l826:
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;TabelasUmidade.h: 484: else
 11952                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11953                           
 11954                           ; BSR set to: 0
 11955  00250C  0E8F               	movlw	143
 11956  00250E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11957  002510  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11958  002512  A4D8               	btfss	status,2,c
 11959  002514  D003               	goto	l828
 11960  002516                     u11630:
 11961                           
 11962                           ; BSR set to: 0
 11963  002516  0E1B               	movlw	27
 11964  002518  EF7E  F00B         	goto	L24
 11965  00251C                     l828:
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;TabelasUmidade.h: 486: else
 11969                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11970                           
 11971                           ; BSR set to: 0
 11972  00251C  0E90               	movlw	144
 11973  00251E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11974  002520  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11975  002522  A4D8               	btfss	status,2,c
 11976  002524  D003               	goto	l830
 11977  002526                     u11640:
 11978                           
 11979                           ; BSR set to: 0
 11980  002526  0E1A               	movlw	26
 11981  002528  EF7E  F00B         	goto	L24
 11982  00252C                     l830:
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;TabelasUmidade.h: 488: else
 11986                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11987                           
 11988                           ; BSR set to: 0
 11989  00252C  0E91               	movlw	145
 11990  00252E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11991  002530  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11992  002532  A4D8               	btfss	status,2,c
 11993  002534  D003               	goto	l832
 11994  002536                     u11650:
 11995                           
 11996                           ; BSR set to: 0
 11997  002536  0E19               	movlw	25
 11998  002538  EF7E  F00B         	goto	L24
 11999  00253C                     l832:
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;TabelasUmidade.h: 490: else
 12003                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 12004                           
 12005                           ; BSR set to: 0
 12006  00253C  0E92               	movlw	146
 12007  00253E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12008  002540  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12009  002542  A4D8               	btfss	status,2,c
 12010  002544  D003               	goto	l834
 12011  002546                     u11660:
 12012                           
 12013                           ; BSR set to: 0
 12014  002546  0E18               	movlw	24
 12015  002548  EF7E  F00B         	goto	L24
 12016  00254C                     l834:
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;TabelasUmidade.h: 492: else
 12020                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 12021                           
 12022                           ; BSR set to: 0
 12023  00254C  0E93               	movlw	147
 12024  00254E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12025  002550  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12026  002552  A4D8               	btfss	status,2,c
 12027  002554  D003               	goto	l836
 12028  002556                     u11670:
 12029                           
 12030                           ; BSR set to: 0
 12031  002556  0E17               	movlw	23
 12032  002558  EF7E  F00B         	goto	L24
 12033  00255C                     l836:
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;TabelasUmidade.h: 494: else
 12037                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 12038                           
 12039                           ; BSR set to: 0
 12040  00255C  0E94               	movlw	148
 12041  00255E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12042  002560  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12043  002562  A4D8               	btfss	status,2,c
 12044  002564  D003               	goto	l838
 12045  002566                     u11680:
 12046                           
 12047                           ; BSR set to: 0
 12048  002566  0E16               	movlw	22
 12049  002568  EF7E  F00B         	goto	L24
 12050  00256C                     l838:
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;TabelasUmidade.h: 496: else
 12054                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 12055                           
 12056                           ; BSR set to: 0
 12057  00256C  0E95               	movlw	149
 12058  00256E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12059  002570  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12060  002572  A4D8               	btfss	status,2,c
 12061  002574  D003               	goto	l840
 12062  002576                     u11690:
 12063                           
 12064                           ; BSR set to: 0
 12065  002576  0E15               	movlw	21
 12066  002578  EF7E  F00B         	goto	L24
 12067  00257C                     l840:
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;TabelasUmidade.h: 498: else
 12071                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 12072                           
 12073                           ; BSR set to: 0
 12074  00257C  0E96               	movlw	150
 12075  00257E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12076  002580  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12077  002582  A4D8               	btfss	status,2,c
 12078  002584  D003               	goto	l842
 12079  002586                     u11700:
 12080                           
 12081                           ; BSR set to: 0
 12082  002586  0E14               	movlw	20
 12083  002588  EF7E  F00B         	goto	L24
 12084  00258C                     l842:
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;TabelasUmidade.h: 500: else
 12088                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 12089                           
 12090                           ; BSR set to: 0
 12091  00258C  0E97               	movlw	151
 12092  00258E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12093  002590  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12094  002592  A4D8               	btfss	status,2,c
 12095  002594  D003               	goto	l844
 12096  002596                     u11710:
 12097                           
 12098                           ; BSR set to: 0
 12099  002596  0E13               	movlw	19
 12100  002598  EF7E  F00B         	goto	L24
 12101  00259C                     l844:
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;TabelasUmidade.h: 502: else
 12105                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 12106                           
 12107                           ; BSR set to: 0
 12108  00259C  0E98               	movlw	152
 12109  00259E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12110  0025A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12111  0025A2  A4D8               	btfss	status,2,c
 12112  0025A4  D003               	goto	l846
 12113  0025A6                     u11720:
 12114                           
 12115                           ; BSR set to: 0
 12116  0025A6  0E12               	movlw	18
 12117  0025A8  EF7E  F00B         	goto	L24
 12118  0025AC                     l846:
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;TabelasUmidade.h: 504: else
 12122                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 12123                           
 12124                           ; BSR set to: 0
 12125  0025AC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12126  0025AE  D011               	goto	l848
 12127  0025B0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12128  0025B2  E104               	bnz	u11730
 12129  0025B4  0E99               	movlw	153
 12130  0025B6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12131  0025B8  A0D8               	btfss	status,0,c
 12132  0025BA  D00B               	goto	l848
 12133  0025BC                     u11730:
 12134                           
 12135                           ; BSR set to: 0
 12136  0025BC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12137  0025BE  D006               	goto	u11740
 12138  0025C0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12139  0025C2  E107               	bnz	l7817
 12140  0025C4  0E9D               	movlw	157
 12141  0025C6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12142  0025C8  B0D8               	btfsc	status,0,c
 12143  0025CA  D003               	goto	l848
 12144  0025CC                     u11740:
 12145                           
 12146                           ; BSR set to: 0
 12147  0025CC  0E11               	movlw	17
 12148  0025CE  EF7E  F00B         	goto	L24
 12149  0025D2                     l848:
 12150  0025D2                     l7817:
 12151                           
 12152                           ; BSR set to: 0
 12153                           ;TabelasUmidade.h: 506: else
 12154                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 12155  0025D2  0E9D               	movlw	157
 12156  0025D4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12157  0025D6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12158  0025D8  A4D8               	btfss	status,2,c
 12159  0025DA  D003               	goto	l850
 12160  0025DC                     u11750:
 12161                           
 12162                           ; BSR set to: 0
 12163  0025DC  0E10               	movlw	16
 12164  0025DE  EF7E  F00B         	goto	L24
 12165  0025E2                     l850:
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;TabelasUmidade.h: 508: else
 12169                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 12170                           
 12171                           ; BSR set to: 0
 12172  0025E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12173  0025E4  D014               	goto	l630
 12174  0025E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12175  0025E8  E104               	bnz	u11760
 12176  0025EA  0E9E               	movlw	158
 12177  0025EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12178  0025EE  A0D8               	btfss	status,0,c
 12179  0025F0  D00E               	goto	l630
 12180  0025F2                     u11760:
 12181                           
 12182                           ; BSR set to: 0
 12183  0025F2  0E0F               	movlw	15
 12184  0025F4  EF7E  F00B         	goto	L24
 12185  0025F8                     l517:
 12186                           
 12187                           ; BSR set to: 0
 12188                           
 12189                           ; BSR set to: 0
 12190  0025F8  51EB               	movf	_clima& (0+255),w,b
 12191                           
 12192                           ; Switch size 1, requested type "space"
 12193                           ; Number of cases is 3, Range of values is 1 to 3
 12194                           ; switch strategies available:
 12195                           ; Name         Instructions Cycles
 12196                           ; simple_byte           10     6 (average)
 12197                           ;	Chosen strategy is simple_byte
 12198  0025FA  0A01               	xorlw	1	; case 1
 12199  0025FC  B4D8               	btfsc	status,2,c
 12200  0025FE  EF49  F00E         	goto	l518
 12201  002602  0A03               	xorlw	3	; case 2
 12202  002604  B4D8               	btfsc	status,2,c
 12203  002606  D495               	goto	l631
 12204  002608  0A01               	xorlw	1	; case 3
 12205  00260A  B4D8               	btfsc	status,2,c
 12206  00260C  D618               	goto	l745
 12207  00260E                     l630:
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;TabelasUmidade.h: 512: }
 12211                           ;TabelasUmidade.h: 513: return _umd;
 12212                           
 12213                           ; BSR set to: 0
 12214                           
 12215                           ; BSR set to: 0
 12216  00260E  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 12217  002612  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 12218                           
 12219                           ; BSR set to: 0
 12220  002614  0012               	return		;funcret
 12221  002616                     __end_of_tabelaUmidade:
 12222                           	opt stack 0
 12223                           tblptru	equ	0xFF8
 12224                           tblptrh	equ	0xFF7
 12225                           tblptrl	equ	0xFF6
 12226                           tablat	equ	0xFF5
 12227                           prodh	equ	0xFF4
 12228                           prodl	equ	0xFF3
 12229                           intcon	equ	0xFF2
 12230                           intcon2	equ	0xFF1
 12231                           intcon3	equ	0xFF0
 12232                           postinc0	equ	0xFEE
 12233                           wreg	equ	0xFE8
 12234                           postdec1	equ	0xFE5
 12235                           fsr1l	equ	0xFE1
 12236                           indf2	equ	0xFDF
 12237                           fsr2h	equ	0xFDA
 12238                           fsr2l	equ	0xFD9
 12239                           status	equ	0xFD8
 12240                           
 12241 ;; *************** function _setRangeValor *****************
 12242 ;; Defined at:
 12243 ;;		line 76 in file "src/FuncoesControlador.h"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  _acao           1    wreg     unsigned char 
 12246 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 12247 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 12248 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1),
      + 
 12249 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 12250 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 12251 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 12252 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 12253 ;;		 -> clima(1), 
 12254 ;;  _min            1    7[BANK0 ] unsigned char 
 12255 ;;  _max            1    8[BANK0 ] unsigned char 
 12256 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  _acao           1   13[BANK0 ] unsigned char 
 12259 ;;  _aux            2   14[BANK0 ] int 
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12269 ;;      Params:         0       5       0       0       0       0       0       0       0
 12270 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12271 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12272 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12273 ;;Total ram usage:       11 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:    9
 12276 ;; This function calls:
 12277 ;;		_writeEEPROM_ext
 12278 ;; This function is called by:
 12279 ;;		_main
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283                           	psect	text4
 12284  0051A0                     __ptext4:
 12285                           	opt stack 0
 12286  0051A0                     _setRangeValor:
 12287                           	opt stack 21
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;incstack = 0
 12291                           ;setRangeValor@_acao stored from wreg
 12292  0051A0  0100               	movlb	0	; () banked
 12293  0051A2  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12294                           
 12295                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12296  0051A4  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12297  0051A8  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12298  0051AC  50DF               	movf	indf2,w,c
 12299  0051AE  0100               	movlb	0	; () banked
 12300  0051B0  6F6A               	movwf	??_setRangeValor& (0+255),b
 12301  0051B2  516A               	movf	??_setRangeValor& (0+255),w,b
 12302  0051B4  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12303  0051B6  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12304                           
 12305                           ;FuncoesControlador.h: 78: switch (_acao) {
 12306  0051B8  D02C               	goto	l934
 12307  0051BA                     
 12308                           ; BSR set to: 0
 12309                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12310                           
 12311                           ; BSR set to: 0
 12312  0051BA  5168               	movf	setRangeValor@_max& (0+255),w,b
 12313  0051BC  6F6A               	movwf	??_setRangeValor& (0+255),b
 12314  0051BE  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12315  0051C0  516A               	movf	??_setRangeValor& (0+255),w,b
 12316  0051C2  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12317  0051C4  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12318  0051C6  0A80               	xorlw	128
 12319  0051C8  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12320  0051CA  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12321  0051CC  0A80               	xorlw	128
 12322  0051CE  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12323  0051D0  B0D8               	btfsc	status,0,c
 12324  0051D2  D003               	goto	l937
 12325                           
 12326                           ; BSR set to: 0
 12327  0051D4  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12328  0051D6  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12329  0051D8  D013               	goto	L27
 12330  0051DA                     l937:
 12331                           
 12332                           ; BSR set to: 0
 12333  0051DA  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12334  0051DE  D017               	goto	L28
 12335  0051E0                     
 12336                           ; BSR set to: 0
 12337                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12338                           
 12339                           ; BSR set to: 0
 12340  0051E0  5167               	movf	setRangeValor@_min& (0+255),w,b
 12341  0051E2  6F6A               	movwf	??_setRangeValor& (0+255),b
 12342  0051E4  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12343  0051E6  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12344  0051E8  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12345  0051EA  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12346  0051EC  0A80               	xorlw	128
 12347  0051EE  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12348  0051F0  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12349  0051F2  0A80               	xorlw	128
 12350  0051F4  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12351  0051F6  B0D8               	btfsc	status,0,c
 12352  0051F8  D008               	goto	l943
 12353                           
 12354                           ; BSR set to: 0
 12355  0051FA  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12356  0051FC  A0D8               	btfss	status,0,c
 12357  0051FE  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12358  005200                     L27:
 12359  005200  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12360  005204  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12361  005208  D00B               	goto	l940
 12362  00520A                     l943:
 12363                           
 12364                           ; BSR set to: 0
 12365  00520A  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12366  00520E                     L28:
 12367  00520E  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;FuncoesControlador.h: 85: }
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;FuncoesControlador.h: 84: break;
 12374  005210  D007               	goto	l940
 12375  005212                     l934:
 12376                           
 12377                           ; BSR set to: 0
 12378                           
 12379                           ; BSR set to: 0
 12380  005212  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12381                           
 12382                           ; Switch size 1, requested type "space"
 12383                           ; Number of cases is 2, Range of values is 43 to 45
 12384                           ; switch strategies available:
 12385                           ; Name         Instructions Cycles
 12386                           ; simple_byte            7     4 (average)
 12387                           ;	Chosen strategy is simple_byte
 12388  005214  0A2B               	xorlw	43	; case 43
 12389  005216  B4D8               	btfsc	status,2,c
 12390  005218  D7D0               	goto	l935
 12391  00521A  0A06               	xorlw	6	; case 45
 12392  00521C  B4D8               	btfsc	status,2,c
 12393  00521E  D7E0               	goto	l941
 12394  005220                     l940:
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12398                           
 12399                           ; BSR set to: 0
 12400  005220  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12401  005222  B4D8               	btfsc	status,2,c
 12402  005224  D005               	goto	l946
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12406  005226  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12407  00522A  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12408  00522C  EC54  F02D         	call	_writeEEPROM_ext
 12409  005230                     l946:
 12410                           
 12411                           ;FuncoesControlador.h: 88: }
 12412                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12413  005230  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12414  005234  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12415  005238  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12416  00523C  0012               	return		;funcret
 12417  00523E                     __end_of_setRangeValor:
 12418                           	opt stack 0
 12419                           tblptru	equ	0xFF8
 12420                           tblptrh	equ	0xFF7
 12421                           tblptrl	equ	0xFF6
 12422                           tablat	equ	0xFF5
 12423                           prodh	equ	0xFF4
 12424                           prodl	equ	0xFF3
 12425                           intcon	equ	0xFF2
 12426                           intcon2	equ	0xFF1
 12427                           intcon3	equ	0xFF0
 12428                           postinc0	equ	0xFEE
 12429                           wreg	equ	0xFE8
 12430                           postdec1	equ	0xFE5
 12431                           fsr1l	equ	0xFE1
 12432                           indf2	equ	0xFDF
 12433                           fsr2h	equ	0xFDA
 12434                           fsr2l	equ	0xFD9
 12435                           status	equ	0xFD8
 12436                           
 12437 ;; *************** function _readEEPROM_ext *****************
 12438 ;; Defined at:
 12439 ;;		line 26 in file "src/Eeprom_ext.h"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;  adress          1    wreg     unsigned char 
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  adress          1    5[BANK0 ] unsigned char 
 12444 ;;  data            1    6[BANK0 ] unsigned char 
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  1    wreg      unsigned char 
 12447 ;; Registers used:
 12448 ;;		wreg, status,2, status,0, cstack
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12454 ;;      Params:         0       0       0       0       0       0       0       0       0
 12455 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12457 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12458 ;;Total ram usage:        2 bytes
 12459 ;; Hardware stack levels used:    1
 12460 ;; Hardware stack levels required when called:    8
 12461 ;; This function calls:
 12462 ;;		_I2C_Read
 12463 ;;		_I2C_Restart
 12464 ;;		_I2C_Start
 12465 ;;		_I2C_Stop
 12466 ;;		_I2C_Write
 12467 ;; This function is called by:
 12468 ;;		_main
 12469 ;;		_readEEPROM16_ext
 12470 ;; This function uses a non-reentrant model
 12471 ;;
 12472                           
 12473                           	psect	text5
 12474  005986                     __ptext5:
 12475                           	opt stack 0
 12476  005986                     _readEEPROM_ext:
 12477                           	opt stack 22
 12478                           
 12479                           ;incstack = 0
 12480                           ;readEEPROM_ext@adress stored from wreg
 12481  005986  0100               	movlb	0	; () banked
 12482  005988  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12483                           
 12484                           ;Eeprom_ext.h: 27: I2C_Start();
 12485  00598A  EC84  F02F         	call	_I2C_Start	;wreg free
 12486                           
 12487                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12488  00598E  0E00               	movlw	0
 12489  005990  0100               	movlb	0	; () banked
 12490  005992  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12491  005994  0EA0               	movlw	160
 12492  005996  6F61               	movwf	I2C_Write@d& (0+255),b
 12493  005998  EC72  F02F         	call	_I2C_Write	;wreg free
 12494                           
 12495                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12496  00599C  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12497  0059A0  0100               	movlb	0	; () banked
 12498  0059A2  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12499  0059A4  EC72  F02F         	call	_I2C_Write	;wreg free
 12500                           
 12501                           ;Eeprom_ext.h: 31: I2C_Restart();
 12502  0059A8  EC7C  F02F         	call	_I2C_Restart	;wreg free
 12503                           
 12504                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12505  0059AC  0E00               	movlw	0
 12506  0059AE  0100               	movlb	0	; () banked
 12507  0059B0  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12508  0059B2  0EA1               	movlw	161
 12509  0059B4  6F61               	movwf	I2C_Write@d& (0+255),b
 12510  0059B6  EC72  F02F         	call	_I2C_Write	;wreg free
 12511                           
 12512                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12513  0059BA  0E00               	movlw	0
 12514  0059BC  0100               	movlb	0	; () banked
 12515  0059BE  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12516  0059C0  0E00               	movlw	0
 12517  0059C2  6F61               	movwf	I2C_Read@a& (0+255),b
 12518  0059C4  ECEC  F02D         	call	_I2C_Read	;wreg free
 12519  0059C8  0100               	movlb	0	; () banked
 12520  0059CA  5161               	movf	?_I2C_Read& (0+255),w,b
 12521  0059CC  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12522                           
 12523                           ;Eeprom_ext.h: 34: I2C_Stop();
 12524  0059CE  EC80  F02F         	call	_I2C_Stop	;wreg free
 12525                           
 12526                           ;Eeprom_ext.h: 35: return data;
 12527  0059D2  0100               	movlb	0	; () banked
 12528  0059D4  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12529  0059D6  0012               	return	
 12530  0059D8                     __end_of_readEEPROM_ext:
 12531                           	opt stack 0
 12532                           tblptru	equ	0xFF8
 12533                           tblptrh	equ	0xFF7
 12534                           tblptrl	equ	0xFF6
 12535                           tablat	equ	0xFF5
 12536                           prodh	equ	0xFF4
 12537                           prodl	equ	0xFF3
 12538                           intcon	equ	0xFF2
 12539                           intcon2	equ	0xFF1
 12540                           intcon3	equ	0xFF0
 12541                           postinc0	equ	0xFEE
 12542                           wreg	equ	0xFE8
 12543                           postdec1	equ	0xFE5
 12544                           fsr1l	equ	0xFE1
 12545                           indf2	equ	0xFDF
 12546                           fsr2h	equ	0xFDA
 12547                           fsr2l	equ	0xFD9
 12548                           status	equ	0xFD8
 12549                           
 12550 ;; *************** function _I2C_Restart *****************
 12551 ;; Defined at:
 12552 ;;		line 30 in file "src/I2C.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;		None
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;		None
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0
 12567 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12569 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12570 ;;Total ram usage:        0 bytes
 12571 ;; Hardware stack levels used:    1
 12572 ;; Hardware stack levels required when called:    7
 12573 ;; This function calls:
 12574 ;;		_I2C_Wait
 12575 ;; This function is called by:
 12576 ;;		_readEEPROM_ext
 12577 ;; This function uses a non-reentrant model
 12578 ;;
 12579                           
 12580                           	psect	text6
 12581  005EF8                     __ptext6:
 12582                           	opt stack 0
 12583  005EF8                     _I2C_Restart:
 12584                           	opt stack 22
 12585                           
 12586                           ;I2C.c: 31: I2C_Wait();
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;incstack = 0
 12590  005EF8  EC51  F02F         	call	_I2C_Wait	;wreg free
 12591                           
 12592                           ;I2C.c: 32: RSEN = 1;
 12593  005EFC  82C5               	bsf	4037,1,c	;volatile
 12594  005EFE  0012               	return		;funcret
 12595  005F00                     __end_of_I2C_Restart:
 12596                           	opt stack 0
 12597                           tblptru	equ	0xFF8
 12598                           tblptrh	equ	0xFF7
 12599                           tblptrl	equ	0xFF6
 12600                           tablat	equ	0xFF5
 12601                           prodh	equ	0xFF4
 12602                           prodl	equ	0xFF3
 12603                           intcon	equ	0xFF2
 12604                           intcon2	equ	0xFF1
 12605                           intcon3	equ	0xFF0
 12606                           postinc0	equ	0xFEE
 12607                           wreg	equ	0xFE8
 12608                           postdec1	equ	0xFE5
 12609                           fsr1l	equ	0xFE1
 12610                           indf2	equ	0xFDF
 12611                           fsr2h	equ	0xFDA
 12612                           fsr2l	equ	0xFD9
 12613                           status	equ	0xFD8
 12614                           
 12615 ;; *************** function _I2C_Read *****************
 12616 ;; Defined at:
 12617 ;;		line 46 in file "src/I2C.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  a               2    1[BANK0 ] unsigned short 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;  temp            2    3[BANK0 ] unsigned short 
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  2    1[BANK0 ] unsigned short 
 12624 ;; Registers used:
 12625 ;;		wreg, status,2, status,0, cstack
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12631 ;;      Params:         0       2       0       0       0       0       0       0       0
 12632 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12633 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12634 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12635 ;;Total ram usage:        4 bytes
 12636 ;; Hardware stack levels used:    1
 12637 ;; Hardware stack levels required when called:    7
 12638 ;; This function calls:
 12639 ;;		_I2C_Wait
 12640 ;; This function is called by:
 12641 ;;		_readEEPROM_ext
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text7
 12646  005BD8                     __ptext7:
 12647                           	opt stack 0
 12648  005BD8                     _I2C_Read:
 12649                           	opt stack 22
 12650                           
 12651                           ;I2C.c: 47: unsigned short temp;
 12652                           ;I2C.c: 48: I2C_Wait();
 12653                           
 12654                           ;incstack = 0
 12655  005BD8  EC51  F02F         	call	_I2C_Wait	;wreg free
 12656                           
 12657                           ;I2C.c: 49: RCEN = 1;
 12658  005BDC  86C5               	bsf	4037,3,c	;volatile
 12659                           
 12660                           ;I2C.c: 50: I2C_Wait();
 12661  005BDE  EC51  F02F         	call	_I2C_Wait	;wreg free
 12662                           
 12663                           ;I2C.c: 51: temp = SSPBUF;
 12664  005BE2  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12665  005BE6  0100               	movlb	0	; () banked
 12666  005BE8  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12667                           
 12668                           ;I2C.c: 52: I2C_Wait();
 12669  005BEA  EC51  F02F         	call	_I2C_Wait	;wreg free
 12670                           
 12671                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12672  005BEE  0100               	movlb	0	; () banked
 12673  005BF0  5161               	movf	I2C_Read@a& (0+255),w,b
 12674  005BF2  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12675  005BF4  A4D8               	btfss	status,2,c
 12676  005BF6  D002               	goto	u8730
 12677  005BF8  8AC5               	bsf	4037,5,c	;volatile
 12678  005BFA  D001               	goto	u8745
 12679  005BFC                     u8730:
 12680  005BFC  9AC5               	bcf	4037,5,c	;volatile
 12681  005BFE                     u8745:
 12682                           
 12683                           ;I2C.c: 54: ACKEN = 1;
 12684  005BFE  88C5               	bsf	4037,4,c	;volatile
 12685                           
 12686                           ;I2C.c: 55: return temp;
 12687  005C00  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12688  005C04  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12689  005C08  0012               	return	
 12690  005C0A                     __end_of_I2C_Read:
 12691                           	opt stack 0
 12692                           tblptru	equ	0xFF8
 12693                           tblptrh	equ	0xFF7
 12694                           tblptrl	equ	0xFF6
 12695                           tablat	equ	0xFF5
 12696                           prodh	equ	0xFF4
 12697                           prodl	equ	0xFF3
 12698                           intcon	equ	0xFF2
 12699                           intcon2	equ	0xFF1
 12700                           intcon3	equ	0xFF0
 12701                           postinc0	equ	0xFEE
 12702                           wreg	equ	0xFE8
 12703                           postdec1	equ	0xFE5
 12704                           fsr1l	equ	0xFE1
 12705                           indf2	equ	0xFDF
 12706                           fsr2h	equ	0xFDA
 12707                           fsr2l	equ	0xFD9
 12708                           status	equ	0xFD8
 12709                           
 12710 ;; *************** function _getSensors *****************
 12711 ;; Defined at:
 12712 ;;		line 22 in file "src/ADC.h"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;		None
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;  auxx            3   77[BANK0 ] float 
 12717 ;;  aux             3   84[BANK0 ] float 
 12718 ;;  i               1   83[BANK0 ] unsigned char 
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  2  1223[None  ] int 
 12721 ;; Registers used:
 12722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12728 ;;      Params:         0       0       0       0       0       0       0       0       0
 12729 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12731 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12732 ;;Total ram usage:       18 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    8
 12735 ;; This function calls:
 12736 ;;		___ftadd
 12737 ;;		___ftdiv
 12738 ;;		___ftge
 12739 ;;		___ftmul
 12740 ;;		___fttol
 12741 ;;		___lwtoft
 12742 ;;		_readADC
 12743 ;; This function is called by:
 12744 ;;		_main
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           	psect	text8
 12749  003108                     __ptext8:
 12750                           	opt stack 0
 12751  003108                     _getSensors:
 12752                           	opt stack 22
 12753                           
 12754                           ;ADC.h: 23: unsigned char i = 0;
 12755                           
 12756                           ;incstack = 0
 12757  003108  0E00               	movlw	0
 12758  00310A  0100               	movlb	0	; () banked
 12759  00310C  6FB3               	movwf	getSensors@i& (0+255),b
 12760                           
 12761                           ;ADC.h: 24: float aux = 0;
 12762  00310E  0E00               	movlw	0
 12763  003110  6FB4               	movwf	getSensors@aux& (0+255),b
 12764  003112  0E00               	movlw	0
 12765  003114  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12766  003116  0E00               	movlw	0
 12767  003118  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12768                           
 12769                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12770  00311A  503C               	movf	_t_leitura_adc,w,c
 12771  00311C  A4D8               	btfss	status,2,c
 12772  00311E  D1F3               	goto	l1224
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;ADC.h: 27: t_leitura_adc = 10;
 12776  003120  0E0A               	movlw	10
 12777  003122  6E3C               	movwf	_t_leitura_adc,c
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12781  003124  0E0A               	movlw	10
 12782  003126  603B               	cpfslt	_media_adc,c
 12783  003128  D005               	goto	l1226
 12784                           
 12785                           ; BSR set to: 0
 12786  00312A  2A3B               	incf	_media_adc,f,c
 12787  00312C  C03B  F0AB         	movff	_media_adc,_getSensors$1521
 12788  003130  6BAC               	clrf	(_getSensors$1521+1)& (0+255),b
 12789  003132  D004               	goto	l1228
 12790  003134                     l1226:
 12791                           
 12792                           ; BSR set to: 0
 12793                           
 12794                           ; BSR set to: 0
 12795  003134  0E00               	movlw	0
 12796  003136  6FAC               	movwf	(_getSensors$1521+1)& (0+255),b
 12797  003138  0E00               	movlw	0
 12798  00313A  6FAB               	movwf	_getSensors$1521& (0+255),b
 12799  00313C                     l1228:
 12800                           
 12801                           ; BSR set to: 0
 12802                           
 12803                           ; BSR set to: 0
 12804  00313C  C0AB  F03B         	movff	_getSensors$1521,_media_adc
 12805                           
 12806                           ;ADC.h: 31: aux = 0;
 12807  003140  0E00               	movlw	0
 12808  003142  6FB4               	movwf	getSensors@aux& (0+255),b
 12809  003144  0E00               	movlw	0
 12810  003146  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12811  003148  0E00               	movlw	0
 12812  00314A  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12813                           
 12814                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12815  00314C  0E00               	movlw	0
 12816  00314E  6FB3               	movwf	getSensors@i& (0+255),b
 12817  003150                     l9105:
 12818                           
 12819                           ; BSR set to: 0
 12820  003150  0E0B               	movlw	11
 12821  003152  65B3               	cpfsgt	getSensors@i& (0+255),b
 12822  003154  D001               	goto	l1229
 12823  003156  D042               	goto	u14090
 12824  003158                     l1229:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12828                           
 12829                           ; BSR set to: 0
 12830  003158  0E00               	movlw	0
 12831  00315A  6F7E               	movwf	___ftadd@f2& (0+255),b
 12832  00315C  0E00               	movlw	0
 12833  00315E  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12834  003160  0E42               	movlw	66
 12835  003162  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12836  003164  0E00               	movlw	0
 12837  003166  6F6F               	movwf	___ftmul@f2& (0+255),b
 12838  003168  0E61               	movlw	97
 12839  00316A  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12840  00316C  0E3F               	movlw	63
 12841  00316E  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12842  003170  0E00               	movlw	0
 12843  003172  EC1F  F029         	call	_readADC
 12844  003176  C060  F069         	movff	?_readADC,___lwtoft@c
 12845  00317A  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12846  00317E  ECD1  F02E         	call	___lwtoft	;wreg free
 12847  003182  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12848  003186  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12849  00318A  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12850  00318E  EC48  F025         	call	___ftmul	;wreg free
 12851  003192  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12852  003196  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12853  00319A  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12854  00319E  ECE5  F020         	call	___ftadd	;wreg free
 12855  0031A2  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 12856  0031A6  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 12857  0031AA  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 12858                           
 12859                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12860  0031AE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12861  0031B2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12862  0031B6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12863  0031BA  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 12864  0031BE  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 12865  0031C2  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 12866  0031C6  ECE5  F020         	call	___ftadd	;wreg free
 12867  0031CA  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12868  0031CE  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12869  0031D2  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12870  0031D6  0100               	movlb	0	; () banked
 12871  0031D8  2BB3               	incf	getSensors@i& (0+255),f,b
 12872  0031DA  D7BA               	goto	l9105
 12873  0031DC                     u14090:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;ADC.h: 34: }
 12877                           ;ADC.h: 35: aux = (aux / 12);
 12878                           
 12879                           ; BSR set to: 0
 12880  0031DC  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12881  0031E0  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12882  0031E4  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12883  0031E8  0E00               	movlw	0
 12884  0031EA  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12885  0031EC  0E40               	movlw	64
 12886  0031EE  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12887  0031F0  0E41               	movlw	65
 12888  0031F2  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12889  0031F4  EC38  F026         	call	___ftdiv	;wreg free
 12890  0031F8  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12891  0031FC  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12892  003200  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12893                           
 12894                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12895  003204  0E00               	movlw	0
 12896  003206  0100               	movlb	0	; () banked
 12897  003208  6F60               	movwf	___ftge@ff1& (0+255),b
 12898  00320A  0E14               	movlw	20
 12899  00320C  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12900  00320E  0E42               	movlw	66
 12901  003210  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12902  003212  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12903  003216  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12904  00321A  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12905  00321E  EC02  F02A         	call	___ftge	;wreg free
 12906  003222  0100               	movlb	0	; () banked
 12907  003224  B0D8               	btfsc	status,0,c
 12908  003226  D015               	goto	l1232
 12909                           
 12910                           ; BSR set to: 0
 12911  003228  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12912  00322C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12913  003230  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12914  003234  0E00               	movlw	0
 12915  003236  6F7E               	movwf	___ftadd@f2& (0+255),b
 12916  003238  0E80               	movlw	128
 12917  00323A  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12918  00323C  0E3F               	movlw	63
 12919  00323E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12920  003240  ECE5  F020         	call	___ftadd	;wreg free
 12921  003244  C07B  F0A5         	movff	?___ftadd,_getSensors$1523
 12922  003248  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1523+1
 12923  00324C  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1523+2
 12924  003250  D007               	goto	l1234
 12925  003252                     l1232:
 12926  003252  0E00               	movlw	0
 12927  003254  0100               	movlb	0	; () banked
 12928  003256  6FA5               	movwf	_getSensors$1523& (0+255),b
 12929  003258  0E00               	movlw	0
 12930  00325A  6FA6               	movwf	(_getSensors$1523+1)& (0+255),b
 12931  00325C  0E00               	movlw	0
 12932  00325E  6FA7               	movwf	(_getSensors$1523+2)& (0+255),b
 12933  003260                     l1234:
 12934                           
 12935                           ; BSR set to: 0
 12936  003260  503B               	movf	_media_adc,w,c
 12937  003262  0D03               	mullw	3
 12938  003264  0E21               	movlw	low __temp
 12939  003266  24F3               	addwf	prodl,w,c
 12940  003268  6ED9               	movwf	fsr2l,c
 12941  00326A  0E02               	movlw	high __temp
 12942  00326C  20F4               	addwfc	prodh,w,c
 12943  00326E  6EDA               	movwf	fsr2h,c
 12944  003270  C0A5  FFDE         	movff	_getSensors$1523,postinc2
 12945  003274  C0A6  FFDE         	movff	_getSensors$1523+1,postinc2
 12946  003278  C0A7  FFDE         	movff	_getSensors$1523+2,postinc2
 12947                           
 12948                           ;ADC.h: 40: aux = 0;
 12949  00327C  0E00               	movlw	0
 12950  00327E  0100               	movlb	0	; () banked
 12951  003280  6FB4               	movwf	getSensors@aux& (0+255),b
 12952  003282  0E00               	movlw	0
 12953  003284  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12954  003286  0E00               	movlw	0
 12955  003288  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12959  00328A  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 12960  00328C  A4D8               	btfss	status,2,c
 12961  00328E  D07E               	goto	l1235
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;ADC.h: 42: float auxx = 0;
 12965  003290  0E00               	movlw	0
 12966  003292  6FAD               	movwf	getSensors@auxx& (0+255),b
 12967  003294  0E00               	movlw	0
 12968  003296  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12969  003298  0E00               	movlw	0
 12970  00329A  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12971                           
 12972                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12973  00329C  0E00               	movlw	0
 12974  00329E  6FB3               	movwf	getSensors@i& (0+255),b
 12975  0032A0                     l9129:
 12976                           
 12977                           ; BSR set to: 0
 12978  0032A0  0E0B               	movlw	11
 12979  0032A2  65B3               	cpfsgt	getSensors@i& (0+255),b
 12980  0032A4  D001               	goto	l1236
 12981  0032A6  D0BA               	goto	u14160
 12982  0032A8                     l1236:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12986                           
 12987                           ; BSR set to: 0
 12988  0032A8  0E75               	movlw	117
 12989  0032AA  6F7E               	movwf	___ftadd@f2& (0+255),b
 12990  0032AC  0E53               	movlw	83
 12991  0032AE  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12992  0032B0  0EBF               	movlw	191
 12993  0032B2  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12994  0032B4  0E00               	movlw	0
 12995  0032B6  6F6F               	movwf	___ftmul@f2& (0+255),b
 12996  0032B8  0EA0               	movlw	160
 12997  0032BA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12998  0032BC  0E3B               	movlw	59
 12999  0032BE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 13000  0032C0  0E01               	movlw	1
 13001  0032C2  EC1F  F029         	call	_readADC
 13002  0032C6  C060  F069         	movff	?_readADC,___lwtoft@c
 13003  0032CA  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 13004  0032CE  ECD1  F02E         	call	___lwtoft	;wreg free
 13005  0032D2  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 13006  0032D6  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 13007  0032DA  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 13008  0032DE  EC48  F025         	call	___ftmul	;wreg free
 13009  0032E2  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 13010  0032E6  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 13011  0032EA  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 13012  0032EE  ECE5  F020         	call	___ftadd	;wreg free
 13013  0032F2  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 13014  0032F6  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 13015  0032FA  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 13016  0032FE  0E06               	movlw	6
 13017  003300  0100               	movlb	0	; () banked
 13018  003302  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13019  003304  0E01               	movlw	1
 13020  003306  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13021  003308  0E3D               	movlw	61
 13022  00330A  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13023  00330C  EC38  F026         	call	___ftdiv	;wreg free
 13024  003310  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 13025  003314  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 13026  003318  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 13027                           
 13028                           ;ADC.h: 45: if (auxx < 10) {
 13029  00331C  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 13030  003320  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 13031  003324  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 13032  003328  0E00               	movlw	0
 13033  00332A  0100               	movlb	0	; () banked
 13034  00332C  6F63               	movwf	___ftge@ff2& (0+255),b
 13035  00332E  0E20               	movlw	32
 13036  003330  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13037  003332  0E41               	movlw	65
 13038  003334  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13039  003336  EC02  F02A         	call	___ftge	;wreg free
 13040  00333A  0100               	movlb	0	; () banked
 13041  00333C  B0D8               	btfsc	status,0,c
 13042  00333E  D00F               	goto	l1238
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;ADC.h: 46: aux += 0;
 13046  003340  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13047  003344  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13048  003348  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13049  00334C  0E00               	movlw	0
 13050  00334E  6F7E               	movwf	___ftadd@f2& (0+255),b
 13051  003350  0E00               	movlw	0
 13052  003352  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13053  003354  0E00               	movlw	0
 13054  003356  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13055  003358  ECE5  F020         	call	___ftadd	;wreg free
 13056  00335C  D00E               	goto	L29
 13057  00335E                     l1238:
 13058                           
 13059                           ;ADC.h: 48: aux += auxx;
 13060  00335E  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13061  003362  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13062  003366  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13063  00336A  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 13064  00336E  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 13065  003372  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 13066  003376  ECE5  F020         	call	___ftadd	;wreg free
 13067  00337A                     L29:
 13068  00337A  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13069  00337E  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13070  003382  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13071  003386  0100               	movlb	0	; () banked
 13072  003388  2BB3               	incf	getSensors@i& (0+255),f,b
 13073  00338A  D78A               	goto	l9129
 13074  00338C                     l1235:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 13078                           
 13079                           ; BSR set to: 0
 13080  00338C  0E00               	movlw	0
 13081  00338E  6FB3               	movwf	getSensors@i& (0+255),b
 13082  003390                     l9145:
 13083                           
 13084                           ; BSR set to: 0
 13085  003390  0E0B               	movlw	11
 13086  003392  65B3               	cpfsgt	getSensors@i& (0+255),b
 13087  003394  D001               	goto	l1241
 13088  003396  D042               	goto	u14160
 13089  003398                     l1241:
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13093                           
 13094                           ; BSR set to: 0
 13095  003398  0E00               	movlw	0
 13096  00339A  6F7E               	movwf	___ftadd@f2& (0+255),b
 13097  00339C  0E00               	movlw	0
 13098  00339E  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13099  0033A0  0E42               	movlw	66
 13100  0033A2  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13101  0033A4  0E00               	movlw	0
 13102  0033A6  6F6F               	movwf	___ftmul@f2& (0+255),b
 13103  0033A8  0E61               	movlw	97
 13104  0033AA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 13105  0033AC  0E3F               	movlw	63
 13106  0033AE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 13107  0033B0  0E02               	movlw	2
 13108  0033B2  EC1F  F029         	call	_readADC
 13109  0033B6  C060  F069         	movff	?_readADC,___lwtoft@c
 13110  0033BA  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 13111  0033BE  ECD1  F02E         	call	___lwtoft	;wreg free
 13112  0033C2  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 13113  0033C6  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 13114  0033CA  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 13115  0033CE  EC48  F025         	call	___ftmul	;wreg free
 13116  0033D2  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 13117  0033D6  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 13118  0033DA  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 13119  0033DE  ECE5  F020         	call	___ftadd	;wreg free
 13120  0033E2  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 13121  0033E6  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 13122  0033EA  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 13123                           
 13124                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13125  0033EE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13126  0033F2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13127  0033F6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13128  0033FA  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 13129  0033FE  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 13130  003402  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 13131  003406  ECE5  F020         	call	___ftadd	;wreg free
 13132  00340A  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13133  00340E  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13134  003412  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13135  003416  0100               	movlb	0	; () banked
 13136  003418  2BB3               	incf	getSensors@i& (0+255),f,b
 13137  00341A  D7BA               	goto	l9145
 13138  00341C                     u14160:
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;ADC.h: 54: }
 13142                           ;ADC.h: 55: }
 13143                           ;ADC.h: 57: aux = (aux / 12);
 13144                           
 13145                           ; BSR set to: 0
 13146                           
 13147                           ; BSR set to: 0
 13148  00341C  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13149  003420  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13150  003424  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13151  003428  0E00               	movlw	0
 13152  00342A  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13153  00342C  0E40               	movlw	64
 13154  00342E  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13155  003430  0E41               	movlw	65
 13156  003432  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13157  003434  EC38  F026         	call	___ftdiv	;wreg free
 13158  003438  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 13159  00343C  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 13160  003440  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 13161                           
 13162                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 13163  003444  0100               	movlb	0	; () banked
 13164  003446  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 13165  003448  A4D8               	btfss	status,2,c
 13166  00344A  D02E               	goto	l1245
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;ADC.h: 59: if (aux > 100) aux = 100;
 13170  00344C  0E00               	movlw	0
 13171  00344E  6F60               	movwf	___ftge@ff1& (0+255),b
 13172  003450  0EC8               	movlw	200
 13173  003452  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13174  003454  0E42               	movlw	66
 13175  003456  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13176  003458  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 13177  00345C  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 13178  003460  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 13179  003464  EC02  F02A         	call	___ftge	;wreg free
 13180  003468  0100               	movlb	0	; () banked
 13181  00346A  B0D8               	btfsc	status,0,c
 13182  00346C  D006               	goto	l1244
 13183                           
 13184                           ; BSR set to: 0
 13185  00346E  0E00               	movlw	0
 13186  003470  6FB4               	movwf	getSensors@aux& (0+255),b
 13187  003472  0EC8               	movlw	200
 13188  003474  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13189  003476  0E42               	movlw	66
 13190  003478  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13191  00347A                     l1244:
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;ADC.h: 60: if (aux < 10) aux = 0;
 13195                           
 13196                           ; BSR set to: 0
 13197  00347A  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13198  00347E  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13199  003482  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13200  003486  0E00               	movlw	0
 13201  003488  6F63               	movwf	___ftge@ff2& (0+255),b
 13202  00348A  0E20               	movlw	32
 13203  00348C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13204  00348E  0E41               	movlw	65
 13205  003490  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13206  003492  EC02  F02A         	call	___ftge	;wreg free
 13207  003496  0100               	movlb	0	; () banked
 13208  003498  B0D8               	btfsc	status,0,c
 13209  00349A  D006               	goto	l1245
 13210                           
 13211                           ; BSR set to: 0
 13212  00349C  0E00               	movlw	0
 13213  00349E  6FB4               	movwf	getSensors@aux& (0+255),b
 13214  0034A0  0E00               	movlw	0
 13215  0034A2  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13216  0034A4  0E00               	movlw	0
 13217  0034A6  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13218  0034A8                     l1245:
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;ADC.h: 61: }
 13222                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 13223                           
 13224                           ; BSR set to: 0
 13225                           
 13226                           ; BSR set to: 0
 13227  0034A8  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13228  0034AC  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13229  0034B0  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13230  0034B4  0E00               	movlw	0
 13231  0034B6  6F63               	movwf	___ftge@ff2& (0+255),b
 13232  0034B8  0E20               	movlw	32
 13233  0034BA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13234  0034BC  0E42               	movlw	66
 13235  0034BE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13236  0034C0  EC02  F02A         	call	___ftge	;wreg free
 13237  0034C4  0100               	movlb	0	; () banked
 13238  0034C6  B0D8               	btfsc	status,0,c
 13239  0034C8  D003               	goto	u14210
 13240                           
 13241                           ; BSR set to: 0
 13242  0034CA  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
 13243  0034CC  B4D8               	btfsc	status,2,c
 13244  0034CE  D007               	goto	l1247
 13245  0034D0                     u14210:
 13246                           
 13247                           ; BSR set to: 0
 13248  0034D0  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1525
 13249  0034D4  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1525+1
 13250  0034D8  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1525+2
 13251  0034DC  D006               	goto	l1249
 13252  0034DE                     l1247:
 13253                           
 13254                           ; BSR set to: 0
 13255                           
 13256                           ; BSR set to: 0
 13257  0034DE  0E00               	movlw	0
 13258  0034E0  6FA8               	movwf	_getSensors$1525& (0+255),b
 13259  0034E2  0E00               	movlw	0
 13260  0034E4  6FA9               	movwf	(_getSensors$1525+1)& (0+255),b
 13261  0034E6  0E00               	movlw	0
 13262  0034E8  6FAA               	movwf	(_getSensors$1525+2)& (0+255),b
 13263  0034EA                     l1249:
 13264                           
 13265                           ; BSR set to: 0
 13266                           
 13267                           ; BSR set to: 0
 13268  0034EA  503B               	movf	_media_adc,w,c
 13269  0034EC  0D03               	mullw	3
 13270  0034EE  0E00               	movlw	low __umid
 13271  0034F0  24F3               	addwf	prodl,w,c
 13272  0034F2  6ED9               	movwf	fsr2l,c
 13273  0034F4  0E02               	movlw	high __umid
 13274  0034F6  20F4               	addwfc	prodh,w,c
 13275  0034F8  6EDA               	movwf	fsr2h,c
 13276  0034FA  C0A8  FFDE         	movff	_getSensors$1525,postinc2
 13277  0034FE  C0A9  FFDE         	movff	_getSensors$1525+1,postinc2
 13278  003502  C0AA  FFDE         	movff	_getSensors$1525+2,postinc2
 13279  003506                     l1224:
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;ADC.h: 63: }
 13283                           ;ADC.h: 67: i = 0;
 13284                           
 13285                           ; BSR set to: 0
 13286  003506  0E00               	movlw	0
 13287  003508  6FB3               	movwf	getSensors@i& (0+255),b
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;ADC.h: 68: aux = 0;
 13291  00350A  0E00               	movlw	0
 13292  00350C  6FB4               	movwf	getSensors@aux& (0+255),b
 13293  00350E  0E00               	movlw	0
 13294  003510  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13295  003512  0E00               	movlw	0
 13296  003514  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13300  003516  0E00               	movlw	0
 13301  003518  6FB3               	movwf	getSensors@i& (0+255),b
 13302  00351A                     l9181:
 13303                           
 13304                           ; BSR set to: 0
 13305  00351A  0E09               	movlw	9
 13306  00351C  65B3               	cpfsgt	getSensors@i& (0+255),b
 13307  00351E  D001               	goto	l1252
 13308  003520  D01F               	goto	u14230
 13309  003522                     l1252:
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;ADC.h: 70: aux += _temp[i];
 13313                           
 13314                           ; BSR set to: 0
 13315  003522  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13316  003526  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13317  00352A  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13318  00352E  51B3               	movf	getSensors@i& (0+255),w,b
 13319  003530  0D03               	mullw	3
 13320  003532  0E21               	movlw	low __temp
 13321  003534  24F3               	addwf	prodl,w,c
 13322  003536  6ED9               	movwf	fsr2l,c
 13323  003538  0E02               	movlw	high __temp
 13324  00353A  20F4               	addwfc	prodh,w,c
 13325  00353C  6EDA               	movwf	fsr2h,c
 13326  00353E  CFDE F07E          	movff	postinc2,___ftadd@f2
 13327  003542  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13328  003546  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13329  00354A  ECE5  F020         	call	___ftadd	;wreg free
 13330  00354E  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13331  003552  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13332  003556  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13333  00355A  0100               	movlb	0	; () banked
 13334  00355C  2BB3               	incf	getSensors@i& (0+255),f,b
 13335  00355E  D7DD               	goto	l9181
 13336  003560                     u14230:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;ADC.h: 71: }
 13340                           ;ADC.h: 72: temp = (aux / 10);
 13341                           
 13342                           ; BSR set to: 0
 13343  003560  0E00               	movlw	0
 13344  003562  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13345  003564  0E20               	movlw	32
 13346  003566  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13347  003568  0E41               	movlw	65
 13348  00356A  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13349  00356C  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13350  003570  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13351  003574  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13352  003578  EC38  F026         	call	___ftdiv	;wreg free
 13353  00357C  C087  F096         	movff	?___ftdiv,___fttol@f1
 13354  003580  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13355  003584  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13356  003588  ECCC  F024         	call	___fttol	;wreg free
 13357  00358C  0100               	movlb	0	; () banked
 13358  00358E  5196               	movf	?___fttol& (0+255),w,b
 13359  003590  6FFD               	movwf	_temp& (0+255),b
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;ADC.h: 76: i = 0;
 13363  003592  0E00               	movlw	0
 13364  003594  6FB3               	movwf	getSensors@i& (0+255),b
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;ADC.h: 77: aux = 0;
 13368  003596  0E00               	movlw	0
 13369  003598  6FB4               	movwf	getSensors@aux& (0+255),b
 13370  00359A  0E00               	movlw	0
 13371  00359C  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13372  00359E  0E00               	movlw	0
 13373  0035A0  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13377  0035A2  0E00               	movlw	0
 13378  0035A4  6FB3               	movwf	getSensors@i& (0+255),b
 13379  0035A6                     l9199:
 13380                           
 13381                           ; BSR set to: 0
 13382  0035A6  0E09               	movlw	9
 13383  0035A8  65B3               	cpfsgt	getSensors@i& (0+255),b
 13384  0035AA  D001               	goto	l1254
 13385  0035AC  D01F               	goto	u14250
 13386  0035AE                     l1254:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;ADC.h: 79: aux += _umid[i];
 13390                           
 13391                           ; BSR set to: 0
 13392  0035AE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13393  0035B2  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13394  0035B6  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13395  0035BA  51B3               	movf	getSensors@i& (0+255),w,b
 13396  0035BC  0D03               	mullw	3
 13397  0035BE  0E00               	movlw	low __umid
 13398  0035C0  24F3               	addwf	prodl,w,c
 13399  0035C2  6ED9               	movwf	fsr2l,c
 13400  0035C4  0E02               	movlw	high __umid
 13401  0035C6  20F4               	addwfc	prodh,w,c
 13402  0035C8  6EDA               	movwf	fsr2h,c
 13403  0035CA  CFDE F07E          	movff	postinc2,___ftadd@f2
 13404  0035CE  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13405  0035D2  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13406  0035D6  ECE5  F020         	call	___ftadd	;wreg free
 13407  0035DA  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13408  0035DE  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13409  0035E2  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13410  0035E6  0100               	movlb	0	; () banked
 13411  0035E8  2BB3               	incf	getSensors@i& (0+255),f,b
 13412  0035EA  D7DD               	goto	l9199
 13413  0035EC                     u14250:
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;ADC.h: 80: }
 13417                           ;ADC.h: 81: umid = (aux / 10);
 13418                           
 13419                           ; BSR set to: 0
 13420  0035EC  0E00               	movlw	0
 13421  0035EE  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13422  0035F0  0E20               	movlw	32
 13423  0035F2  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13424  0035F4  0E41               	movlw	65
 13425  0035F6  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13426  0035F8  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13427  0035FC  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13428  003600  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13429  003604  EC38  F026         	call	___ftdiv	;wreg free
 13430  003608  C087  F096         	movff	?___ftdiv,___fttol@f1
 13431  00360C  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13432  003610  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13433  003614  ECCC  F024         	call	___fttol	;wreg free
 13434  003618  0100               	movlb	0	; () banked
 13435  00361A  5196               	movf	?___fttol& (0+255),w,b
 13436  00361C  6FFC               	movwf	_umid& (0+255),b
 13437                           
 13438                           ; BSR set to: 0
 13439  00361E  0012               	return		;funcret
 13440  003620                     __end_of_getSensors:
 13441                           	opt stack 0
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           intcon	equ	0xFF2
 13449                           intcon2	equ	0xFF1
 13450                           intcon3	equ	0xFF0
 13451                           postinc0	equ	0xFEE
 13452                           wreg	equ	0xFE8
 13453                           postdec1	equ	0xFE5
 13454                           fsr1l	equ	0xFE1
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           postdec2	equ	0xFDD
 13458                           fsr2h	equ	0xFDA
 13459                           fsr2l	equ	0xFD9
 13460                           status	equ	0xFD8
 13461                           
 13462 ;; *************** function _readADC *****************
 13463 ;; Defined at:
 13464 ;;		line 10 in file "src/ADC.h"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  canal           1    wreg     unsigned char 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  canal           1    8[BANK0 ] unsigned char 
 13469 ;;  digital         2    6[BANK0 ] int 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  2    0[BANK0 ] unsigned int 
 13472 ;; Registers used:
 13473 ;;		wreg, status,2, status,0
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13479 ;;      Params:         0       2       0       0       0       0       0       0       0
 13480 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13481 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13482 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13483 ;;Total ram usage:        9 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    6
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		_getSensors
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text9
 13494  00523E                     __ptext9:
 13495                           	opt stack 0
 13496  00523E                     _readADC:
 13497                           	opt stack 23
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;incstack = 0
 13501                           ;readADC@canal stored from wreg
 13502  00523E  0100               	movlb	0	; () banked
 13503  005240  6F68               	movwf	readADC@canal& (0+255),b
 13504                           
 13505                           ;ADC.h: 11: ADRESH = 0;
 13506  005242  0E00               	movlw	0
 13507  005244  6EC4               	movwf	4036,c	;volatile
 13508                           
 13509                           ;ADC.h: 12: ADRESL = 0;
 13510  005246  0E00               	movlw	0
 13511  005248  6EC3               	movwf	4035,c	;volatile
 13512                           
 13513                           ;ADC.h: 13: int digital;
 13514                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13515  00524A  C068  F062         	movff	readADC@canal,??_readADC
 13516  00524E  0100               	movlb	0	; () banked
 13517  005250  90D8               	bcf	status,0,c
 13518  005252  3762               	rlcf	??_readADC& (0+255),f,b
 13519  005254  90D8               	bcf	status,0,c
 13520  005256  3762               	rlcf	??_readADC& (0+255),f,b
 13521  005258  0E3C               	movlw	60
 13522  00525A  1762               	andwf	??_readADC& (0+255),f,b
 13523  00525C  50C2               	movf	4034,w,c	;volatile
 13524  00525E  0BC3               	andlw	195
 13525  005260  1162               	iorwf	??_readADC& (0+255),w,b
 13526  005262  6EC2               	movwf	4034,c	;volatile
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13530  005264  0E14               	movlw	20
 13531  005266                     u15377:
 13532  005266  2EE8               	decfsz	wreg,f,c
 13533  005268  D7FE               	bra	u15377
 13534                           
 13535                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13536  00526A  A2C2               	btfss	4034,1,c	;volatile
 13537  00526C  D004               	goto	u11980
 13538  00526E  0100               	movlb	0	; () banked
 13539  005270  6B62               	clrf	??_readADC& (0+255),b
 13540  005272  2B62               	incf	??_readADC& (0+255),f,b
 13541  005274  D002               	goto	u11998
 13542  005276                     u11980:
 13543  005276  0100               	movlb	0	; () banked
 13544  005278  6B62               	clrf	??_readADC& (0+255),b
 13545  00527A                     u11998:
 13546  00527A  0E01               	movlw	1
 13547  00527C  6F63               	movwf	(??_readADC+1)& (0+255),b
 13548  00527E  2B62               	incf	??_readADC& (0+255),f,b
 13549  005280  D002               	goto	u12004
 13550  005282                     u12005:
 13551  005282  90D8               	bcf	status,0,c
 13552  005284  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13553  005286                     u12004:
 13554  005286  2F62               	decfsz	??_readADC& (0+255),f,b
 13555  005288  D7FC               	goto	u12005
 13556  00528A  A0C2               	btfss	4034,0,c	;volatile
 13557  00528C  D004               	goto	u12010
 13558  00528E  0100               	movlb	0	; () banked
 13559  005290  6B64               	clrf	(??_readADC+2)& (0+255),b
 13560  005292  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13561  005294  D002               	goto	u12028
 13562  005296                     u12010:
 13563  005296  0100               	movlb	0	; () banked
 13564  005298  6B64               	clrf	(??_readADC+2)& (0+255),b
 13565  00529A                     u12028:
 13566  00529A  0E01               	movlw	1
 13567  00529C  6F65               	movwf	(??_readADC+3)& (0+255),b
 13568  00529E  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13569  0052A0  D002               	goto	u12034
 13570  0052A2                     u12035:
 13571  0052A2  90D8               	bcf	status,0,c
 13572  0052A4  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13573  0052A6                     u12034:
 13574  0052A6  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13575  0052A8  D7FC               	goto	u12035
 13576  0052AA  0100               	movlb	0	; () banked
 13577  0052AC  5165               	movf	(??_readADC+3)& (0+255),w,b
 13578  0052AE  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13579  0052B0  12C2               	iorwf	4034,f,c	;volatile
 13580  0052B2                     
 13581                           ; BSR set to: 0
 13582  0052B2  B2C2               	btfsc	4034,1,c	;volatile
 13583  0052B4  D7FE               	goto	l1219
 13584                           
 13585                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13586  0052B6  50C3               	movf	4035,w,c	;volatile
 13587  0052B8  CFC4 F062          	movff	4036,??_readADC	;volatile
 13588  0052BC  0100               	movlb	0	; () banked
 13589  0052BE  6B63               	clrf	(??_readADC+1)& (0+255),b
 13590  0052C0  C062  F063         	movff	??_readADC,??_readADC+1
 13591  0052C4  6B62               	clrf	??_readADC& (0+255),b
 13592  0052C6  1162               	iorwf	??_readADC& (0+255),w,b
 13593  0052C8  6F66               	movwf	readADC@digital& (0+255),b
 13594  0052CA  5163               	movf	(??_readADC+1)& (0+255),w,b
 13595  0052CC  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;ADC.h: 19: return (digital);
 13599  0052CE  C066  F060         	movff	readADC@digital,?_readADC
 13600  0052D2  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13601  0052D6  0012               	return	
 13602  0052D8                     __end_of_readADC:
 13603                           	opt stack 0
 13604                           tblptru	equ	0xFF8
 13605                           tblptrh	equ	0xFF7
 13606                           tblptrl	equ	0xFF6
 13607                           tablat	equ	0xFF5
 13608                           prodh	equ	0xFF4
 13609                           prodl	equ	0xFF3
 13610                           intcon	equ	0xFF2
 13611                           intcon2	equ	0xFF1
 13612                           intcon3	equ	0xFF0
 13613                           postinc0	equ	0xFEE
 13614                           wreg	equ	0xFE8
 13615                           postdec1	equ	0xFE5
 13616                           fsr1l	equ	0xFE1
 13617                           indf2	equ	0xFDF
 13618                           postinc2	equ	0xFDE
 13619                           postdec2	equ	0xFDD
 13620                           fsr2h	equ	0xFDA
 13621                           fsr2l	equ	0xFD9
 13622                           status	equ	0xFD8
 13623                           
 13624 ;; *************** function ___lwtoft *****************
 13625 ;; Defined at:
 13626 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  c               2    9[BANK0 ] unsigned int 
 13629 ;; Auto vars:     Size  Location     Type
 13630 ;;		None
 13631 ;; Return value:  Size  Location     Type
 13632 ;;                  3    9[BANK0 ] float 
 13633 ;; Registers used:
 13634 ;;		wreg, status,2, status,0, cstack
 13635 ;; Tracked objects:
 13636 ;;		On entry : 0/0
 13637 ;;		On exit  : 0/0
 13638 ;;		Unchanged: 0/0
 13639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13640 ;;      Params:         0       3       0       0       0       0       0       0       0
 13641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13643 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13644 ;;Total ram usage:        3 bytes
 13645 ;; Hardware stack levels used:    1
 13646 ;; Hardware stack levels required when called:    7
 13647 ;; This function calls:
 13648 ;;		___ftpack
 13649 ;; This function is called by:
 13650 ;;		_getSensors
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text10
 13655  005DA2                     __ptext10:
 13656                           	opt stack 0
 13657  005DA2                     ___lwtoft:
 13658                           	opt stack 22
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;incstack = 0
 13662  005DA2  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13663  005DA6  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13664  005DAA  0100               	movlb	0	; () banked
 13665  005DAC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13666  005DAE  0E8E               	movlw	142
 13667  005DB0  6F63               	movwf	___ftpack@exp& (0+255),b
 13668  005DB2  0E00               	movlw	0
 13669  005DB4  6F64               	movwf	___ftpack@sign& (0+255),b
 13670  005DB6  ECD1  F027         	call	___ftpack	;wreg free
 13671  005DBA  C060  F069         	movff	?___ftpack,?___lwtoft
 13672  005DBE  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13673  005DC2  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13674  005DC6  0012               	return	
 13675  005DC8                     __end_of___lwtoft:
 13676                           	opt stack 0
 13677                           tblptru	equ	0xFF8
 13678                           tblptrh	equ	0xFF7
 13679                           tblptrl	equ	0xFF6
 13680                           tablat	equ	0xFF5
 13681                           prodh	equ	0xFF4
 13682                           prodl	equ	0xFF3
 13683                           intcon	equ	0xFF2
 13684                           intcon2	equ	0xFF1
 13685                           intcon3	equ	0xFF0
 13686                           postinc0	equ	0xFEE
 13687                           wreg	equ	0xFE8
 13688                           postdec1	equ	0xFE5
 13689                           fsr1l	equ	0xFE1
 13690                           indf2	equ	0xFDF
 13691                           postinc2	equ	0xFDE
 13692                           postdec2	equ	0xFDD
 13693                           fsr2h	equ	0xFDA
 13694                           fsr2l	equ	0xFD9
 13695                           status	equ	0xFD8
 13696                           
 13697 ;; *************** function ___fttol *****************
 13698 ;; Defined at:
 13699 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;  f1              3   54[BANK0 ] float 
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;  lval            4   64[BANK0 ] unsigned long 
 13704 ;;  exp1            1   68[BANK0 ] unsigned char 
 13705 ;;  sign1           1   63[BANK0 ] unsigned char 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  4   54[BANK0 ] long 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13715 ;;      Params:         0       4       0       0       0       0       0       0       0
 13716 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13717 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13718 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13719 ;;Total ram usage:       15 bytes
 13720 ;; Hardware stack levels used:    1
 13721 ;; Hardware stack levels required when called:    6
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_getSensors
 13726 ;; This function uses a non-reentrant model
 13727 ;;
 13728                           
 13729                           	psect	text11
 13730  004998                     __ptext11:
 13731                           	opt stack 0
 13732  004998                     ___fttol:
 13733                           	opt stack 23
 13734                           
 13735                           ;incstack = 0
 13736  004998  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13737  00499C  0100               	movlb	0	; () banked
 13738  00499E  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13739  0049A0  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13740  0049A2  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13741  0049A4  379A               	rlcf	??___fttol& (0+255),f,b
 13742  0049A6  E301               	bnc	u12401
 13743  0049A8  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13744  0049AA                     u12401:
 13745  0049AA  519A               	movf	??___fttol& (0+255),w,b
 13746  0049AC  6FA4               	movwf	___fttol@exp1& (0+255),b
 13747  0049AE  51A4               	movf	___fttol@exp1& (0+255),w,b
 13748  0049B0  A4D8               	btfss	status,2,c
 13749  0049B2  D009               	goto	l1909
 13750                           
 13751                           ; BSR set to: 0
 13752  0049B4  0E00               	movlw	0
 13753  0049B6  6F96               	movwf	?___fttol& (0+255),b
 13754  0049B8  0E00               	movlw	0
 13755  0049BA  6F97               	movwf	(?___fttol+1)& (0+255),b
 13756  0049BC  0E00               	movlw	0
 13757  0049BE  6F98               	movwf	(?___fttol+2)& (0+255),b
 13758  0049C0  0E00               	movlw	0
 13759  0049C2  6F99               	movwf	(?___fttol+3)& (0+255),b
 13760                           
 13761                           ; BSR set to: 0
 13762  0049C4  0012               	return	
 13763  0049C6                     l1909:
 13764                           
 13765                           ; BSR set to: 0
 13766                           
 13767                           ; BSR set to: 0
 13768  0049C6  0E17               	movlw	23
 13769  0049C8  6F9A               	movwf	??___fttol& (0+255),b
 13770  0049CA  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13771  0049CE  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13772  0049D2  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13773  0049D6  299A               	incf	??___fttol& (0+255),w,b
 13774  0049D8  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13775  0049DA  D004               	goto	u12420
 13776  0049DC                     u12425:
 13777  0049DC  90D8               	bcf	status,0,c
 13778  0049DE  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13779  0049E0  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13780  0049E2  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13781  0049E4                     u12420:
 13782  0049E4  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13783  0049E6  D7FA               	goto	u12425
 13784  0049E8  0100               	movlb	0	; () banked
 13785  0049EA  519B               	movf	(??___fttol+1)& (0+255),w,b
 13786  0049EC  6F9F               	movwf	___fttol@sign1& (0+255),b
 13787                           
 13788                           ; BSR set to: 0
 13789  0049EE  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13790                           
 13791                           ; BSR set to: 0
 13792  0049F0  0EFF               	movlw	255
 13793  0049F2  1796               	andwf	___fttol@f1& (0+255),f,b
 13794  0049F4  0EFF               	movlw	255
 13795  0049F6  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13796  0049F8  0E00               	movlw	0
 13797  0049FA  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13798                           
 13799                           ; BSR set to: 0
 13800  0049FC  5196               	movf	___fttol@f1& (0+255),w,b
 13801  0049FE  6FA0               	movwf	___fttol@lval& (0+255),b
 13802  004A00  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13803  004A02  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13804  004A04  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13805  004A06  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13806  004A08  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13807                           
 13808                           ; BSR set to: 0
 13809  004A0A  0E8E               	movlw	142
 13810  004A0C  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13811                           
 13812                           ; BSR set to: 0
 13813  004A0E  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13814  004A10  D016               	goto	l1911
 13815                           
 13816                           ; BSR set to: 0
 13817  004A12  51A4               	movf	___fttol@exp1& (0+255),w,b
 13818  004A14  0A80               	xorlw	128
 13819  004A16  0F8F               	addlw	143
 13820  004A18  B0D8               	btfsc	status,0,c
 13821  004A1A  D009               	goto	l1912
 13822                           
 13823                           ; BSR set to: 0
 13824  004A1C  0E00               	movlw	0
 13825  004A1E  6F96               	movwf	?___fttol& (0+255),b
 13826  004A20  0E00               	movlw	0
 13827  004A22  6F97               	movwf	(?___fttol+1)& (0+255),b
 13828  004A24  0E00               	movlw	0
 13829  004A26  6F98               	movwf	(?___fttol+2)& (0+255),b
 13830  004A28  0E00               	movlw	0
 13831  004A2A  6F99               	movwf	(?___fttol+3)& (0+255),b
 13832                           
 13833                           ; BSR set to: 0
 13834  004A2C  0012               	return	
 13835  004A2E                     l1912:
 13836                           
 13837                           ; BSR set to: 0
 13838                           
 13839                           ; BSR set to: 0
 13840                           
 13841                           ; BSR set to: 0
 13842  004A2E  90D8               	bcf	status,0,c
 13843  004A30  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13844  004A32  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13845  004A34  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13846  004A36  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13847                           
 13848                           ; BSR set to: 0
 13849  004A38  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13850  004A3A  D7F9               	goto	l1912
 13851                           
 13852                           ; BSR set to: 0
 13853  004A3C  D015               	goto	u12460
 13854  004A3E                     l1911:
 13855                           
 13856                           ; BSR set to: 0
 13857                           
 13858                           ; BSR set to: 0
 13859  004A3E  0E17               	movlw	23
 13860  004A40  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13861  004A42  D00F               	goto	l1917
 13862                           
 13863                           ; BSR set to: 0
 13864  004A44  0E00               	movlw	0
 13865  004A46  6F96               	movwf	?___fttol& (0+255),b
 13866  004A48  0E00               	movlw	0
 13867  004A4A  6F97               	movwf	(?___fttol+1)& (0+255),b
 13868  004A4C  0E00               	movlw	0
 13869  004A4E  6F98               	movwf	(?___fttol+2)& (0+255),b
 13870  004A50  0E00               	movlw	0
 13871  004A52  6F99               	movwf	(?___fttol+3)& (0+255),b
 13872                           
 13873                           ; BSR set to: 0
 13874  004A54  0012               	return	
 13875  004A56                     
 13876                           ; BSR set to: 0
 13877                           
 13878                           ; BSR set to: 0
 13879  004A56  90D8               	bcf	status,0,c
 13880  004A58  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13881  004A5A  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13882  004A5C  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13883  004A5E  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13884  004A60  07A4               	decf	___fttol@exp1& (0+255),f,b
 13885  004A62                     l1917:
 13886                           
 13887                           ; BSR set to: 0
 13888                           
 13889                           ; BSR set to: 0
 13890  004A62  51A4               	movf	___fttol@exp1& (0+255),w,b
 13891  004A64  A4D8               	btfss	status,2,c
 13892  004A66  D7F7               	goto	l1918
 13893  004A68                     u12460:
 13894                           
 13895                           ; BSR set to: 0
 13896                           
 13897                           ; BSR set to: 0
 13898                           
 13899                           ; BSR set to: 0
 13900  004A68  519F               	movf	___fttol@sign1& (0+255),w,b
 13901  004A6A  B4D8               	btfsc	status,2,c
 13902  004A6C  D008               	goto	l1920
 13903                           
 13904                           ; BSR set to: 0
 13905  004A6E  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13906  004A70  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13907  004A72  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13908  004A74  6DA0               	negf	___fttol@lval& (0+255),b
 13909  004A76  0E00               	movlw	0
 13910  004A78  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13911  004A7A  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13912  004A7C  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13913  004A7E                     l1920:
 13914                           
 13915                           ; BSR set to: 0
 13916                           
 13917                           ; BSR set to: 0
 13918  004A7E  C0A0  F096         	movff	___fttol@lval,?___fttol
 13919  004A82  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13920  004A86  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13921  004A8A  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13922  004A8E  0012               	return	
 13923  004A90                     __end_of___fttol:
 13924                           	opt stack 0
 13925                           tblptru	equ	0xFF8
 13926                           tblptrh	equ	0xFF7
 13927                           tblptrl	equ	0xFF6
 13928                           tablat	equ	0xFF5
 13929                           prodh	equ	0xFF4
 13930                           prodl	equ	0xFF3
 13931                           intcon	equ	0xFF2
 13932                           intcon2	equ	0xFF1
 13933                           intcon3	equ	0xFF0
 13934                           postinc0	equ	0xFEE
 13935                           wreg	equ	0xFE8
 13936                           postdec1	equ	0xFE5
 13937                           fsr1l	equ	0xFE1
 13938                           indf2	equ	0xFDF
 13939                           postinc2	equ	0xFDE
 13940                           postdec2	equ	0xFDD
 13941                           fsr2h	equ	0xFDA
 13942                           fsr2l	equ	0xFD9
 13943                           status	equ	0xFD8
 13944                           
 13945 ;; *************** function ___ftmul *****************
 13946 ;; Defined at:
 13947 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  f1              3   12[BANK0 ] float 
 13950 ;;  f2              3   15[BANK0 ] float 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13953 ;;  sign            1   26[BANK0 ] unsigned char 
 13954 ;;  cntr            1   25[BANK0 ] unsigned char 
 13955 ;;  exp             1   21[BANK0 ] unsigned char 
 13956 ;; Return value:  Size  Location     Type
 13957 ;;                  3   12[BANK0 ] float 
 13958 ;; Registers used:
 13959 ;;		wreg, status,2, status,0, cstack
 13960 ;; Tracked objects:
 13961 ;;		On entry : 0/0
 13962 ;;		On exit  : 0/0
 13963 ;;		Unchanged: 0/0
 13964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13965 ;;      Params:         0       6       0       0       0       0       0       0       0
 13966 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13967 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13968 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13969 ;;Total ram usage:       15 bytes
 13970 ;; Hardware stack levels used:    1
 13971 ;; Hardware stack levels required when called:    7
 13972 ;; This function calls:
 13973 ;;		___ftpack
 13974 ;; This function is called by:
 13975 ;;		_getSensors
 13976 ;; This function uses a non-reentrant model
 13977 ;;
 13978                           
 13979                           	psect	text12
 13980  004A90                     __ptext12:
 13981                           	opt stack 0
 13982  004A90                     ___ftmul:
 13983                           	opt stack 22
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;incstack = 0
 13987  004A90  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13988  004A94  0100               	movlb	0	; () banked
 13989  004A96  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13990  004A98  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13991  004A9A  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13992  004A9C  3772               	rlcf	??___ftmul& (0+255),f,b
 13993  004A9E  E301               	bnc	u12311
 13994  004AA0  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13995  004AA2                     u12311:
 13996  004AA2  5172               	movf	??___ftmul& (0+255),w,b
 13997  004AA4  6F75               	movwf	___ftmul@exp& (0+255),b
 13998  004AA6  5175               	movf	___ftmul@exp& (0+255),w,b
 13999  004AA8  A4D8               	btfss	status,2,c
 14000  004AAA  D007               	goto	l1888
 14001                           
 14002                           ; BSR set to: 0
 14003  004AAC  0E00               	movlw	0
 14004  004AAE  6F6C               	movwf	?___ftmul& (0+255),b
 14005  004AB0  0E00               	movlw	0
 14006  004AB2  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 14007  004AB4  0E00               	movlw	0
 14008  004AB6  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 14009                           
 14010                           ; BSR set to: 0
 14011  004AB8  0012               	return	
 14012  004ABA                     l1888:
 14013                           
 14014                           ; BSR set to: 0
 14015                           
 14016                           ; BSR set to: 0
 14017  004ABA  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 14018  004ABE  6B73               	clrf	(??___ftmul+1)& (0+255),b
 14019  004AC0  6B74               	clrf	(??___ftmul+2)& (0+255),b
 14020  004AC2  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 14021  004AC4  3772               	rlcf	??___ftmul& (0+255),f,b
 14022  004AC6  E301               	bnc	u12331
 14023  004AC8  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 14024  004ACA                     u12331:
 14025  004ACA  5172               	movf	??___ftmul& (0+255),w,b
 14026  004ACC  6F7A               	movwf	___ftmul@sign& (0+255),b
 14027  004ACE  517A               	movf	___ftmul@sign& (0+255),w,b
 14028  004AD0  A4D8               	btfss	status,2,c
 14029  004AD2  D007               	goto	l1890
 14030                           
 14031                           ; BSR set to: 0
 14032  004AD4  0E00               	movlw	0
 14033  004AD6  6F6C               	movwf	?___ftmul& (0+255),b
 14034  004AD8  0E00               	movlw	0
 14035  004ADA  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 14036  004ADC  0E00               	movlw	0
 14037  004ADE  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 14038                           
 14039                           ; BSR set to: 0
 14040  004AE0  0012               	return	
 14041  004AE2                     l1890:
 14042                           
 14043                           ; BSR set to: 0
 14044                           
 14045                           ; BSR set to: 0
 14046  004AE2  517A               	movf	___ftmul@sign& (0+255),w,b
 14047  004AE4  0F7B               	addlw	123
 14048  004AE6  2775               	addwf	___ftmul@exp& (0+255),f,b
 14049                           
 14050                           ; BSR set to: 0
 14051  004AE8  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 14052  004AEC  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14053  004AEE  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 14054  004AF0  0E80               	movlw	128
 14055  004AF2  177A               	andwf	___ftmul@sign& (0+255),f,b
 14056                           
 14057                           ; BSR set to: 0
 14058  004AF4  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14059                           
 14060                           ; BSR set to: 0
 14061  004AF6  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14062                           
 14063                           ; BSR set to: 0
 14064  004AF8  0EFF               	movlw	255
 14065  004AFA  176F               	andwf	___ftmul@f2& (0+255),f,b
 14066  004AFC  0EFF               	movlw	255
 14067  004AFE  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14068  004B00  0E00               	movlw	0
 14069  004B02  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072  004B04  0E00               	movlw	0
 14073  004B06  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 14074  004B08  0E00               	movlw	0
 14075  004B0A  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14076  004B0C  0E00               	movlw	0
 14077  004B0E  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14078                           
 14079                           ; BSR set to: 0
 14080  004B10  0E07               	movlw	7
 14081  004B12  6F79               	movwf	___ftmul@cntr& (0+255),b
 14082  004B14                     
 14083                           ; BSR set to: 0
 14084                           
 14085                           ; BSR set to: 0
 14086  004B14  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14087  004B16  D006               	goto	l1892
 14088                           
 14089                           ; BSR set to: 0
 14090  004B18  516F               	movf	___ftmul@f2& (0+255),w,b
 14091  004B1A  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14092  004B1C  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14093  004B1E  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14094  004B20  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14095  004B22  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14096  004B24                     l1892:
 14097                           
 14098                           ; BSR set to: 0
 14099                           
 14100                           ; BSR set to: 0
 14101  004B24  90D8               	bcf	status,0,c
 14102  004B26  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14103  004B28  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14104  004B2A  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14105  004B2C  90D8               	bcf	status,0,c
 14106  004B2E  376F               	rlcf	___ftmul@f2& (0+255),f,b
 14107  004B30  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14108  004B32  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14109                           
 14110                           ; BSR set to: 0
 14111  004B34  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14112  004B36  D7EE               	goto	l1891
 14113                           
 14114                           ; BSR set to: 0
 14115                           
 14116                           ; BSR set to: 0
 14117  004B38  0E09               	movlw	9
 14118  004B3A  6F79               	movwf	___ftmul@cntr& (0+255),b
 14119  004B3C                     
 14120                           ; BSR set to: 0
 14121                           
 14122                           ; BSR set to: 0
 14123  004B3C  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14124  004B3E  D006               	goto	l1895
 14125                           
 14126                           ; BSR set to: 0
 14127  004B40  516F               	movf	___ftmul@f2& (0+255),w,b
 14128  004B42  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14129  004B44  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14130  004B46  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14131  004B48  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14132  004B4A  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14133  004B4C                     l1895:
 14134                           
 14135                           ; BSR set to: 0
 14136                           
 14137                           ; BSR set to: 0
 14138  004B4C  90D8               	bcf	status,0,c
 14139  004B4E  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14140  004B50  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14141  004B52  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14142  004B54  90D8               	bcf	status,0,c
 14143  004B56  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14144  004B58  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14145  004B5A  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14146                           
 14147                           ; BSR set to: 0
 14148  004B5C  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14149  004B5E  D7EE               	goto	l1894
 14150                           
 14151                           ; BSR set to: 0
 14152                           
 14153                           ; BSR set to: 0
 14154  004B60  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 14155  004B64  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14156  004B68  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14157  004B6C  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 14158  004B70  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 14159  004B74  ECD1  F027         	call	___ftpack	;wreg free
 14160  004B78  C060  F06C         	movff	?___ftpack,?___ftmul
 14161  004B7C  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 14162  004B80  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 14163  004B84  0012               	return	
 14164  004B86                     __end_of___ftmul:
 14165                           	opt stack 0
 14166                           tblptru	equ	0xFF8
 14167                           tblptrh	equ	0xFF7
 14168                           tblptrl	equ	0xFF6
 14169                           tablat	equ	0xFF5
 14170                           prodh	equ	0xFF4
 14171                           prodl	equ	0xFF3
 14172                           intcon	equ	0xFF2
 14173                           intcon2	equ	0xFF1
 14174                           intcon3	equ	0xFF0
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           fsr1l	equ	0xFE1
 14179                           indf2	equ	0xFDF
 14180                           postinc2	equ	0xFDE
 14181                           postdec2	equ	0xFDD
 14182                           fsr2h	equ	0xFDA
 14183                           fsr2l	equ	0xFD9
 14184                           status	equ	0xFD8
 14185                           
 14186 ;; *************** function ___ftge *****************
 14187 ;; Defined at:
 14188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  ff1             3    0[BANK0 ] float 
 14191 ;;  ff2             3    3[BANK0 ] float 
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;		None
 14194 ;; Return value:  Size  Location     Type
 14195 ;;		None               void
 14196 ;; Registers used:
 14197 ;;		wreg, status,2, status,0
 14198 ;; Tracked objects:
 14199 ;;		On entry : 0/0
 14200 ;;		On exit  : 0/0
 14201 ;;		Unchanged: 0/0
 14202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14203 ;;      Params:         0       6       0       0       0       0       0       0       0
 14204 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14205 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14206 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14207 ;;Total ram usage:        9 bytes
 14208 ;; Hardware stack levels used:    1
 14209 ;; Hardware stack levels required when called:    6
 14210 ;; This function calls:
 14211 ;;		Nothing
 14212 ;; This function is called by:
 14213 ;;		_getSensors
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text13
 14218  005404                     __ptext13:
 14219                           	opt stack 0
 14220  005404                     ___ftge:
 14221                           	opt stack 23
 14222                           
 14223                           ;incstack = 0
 14224  005404  0100               	movlb	0	; () banked
 14225  005406  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14226  005408  D016               	goto	l1881
 14227                           
 14228                           ; BSR set to: 0
 14229  00540A  C060  F066         	movff	___ftge@ff1,??___ftge
 14230  00540E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 14231  005412  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 14232  005416  1F66               	comf	??___ftge& (0+255),f,b
 14233  005418  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14234  00541A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14235  00541C  2B66               	incf	??___ftge& (0+255),f,b
 14236  00541E  0E00               	movlw	0
 14237  005420  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14238  005422  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14239  005424  0E00               	movlw	0
 14240  005426  2566               	addwf	??___ftge& (0+255),w,b
 14241  005428  6F60               	movwf	___ftge@ff1& (0+255),b
 14242  00542A  0E00               	movlw	0
 14243  00542C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14244  00542E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14245  005430  0E80               	movlw	128
 14246  005432  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14247  005434  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14248  005436                     l1881:
 14249                           
 14250                           ; BSR set to: 0
 14251                           
 14252                           ; BSR set to: 0
 14253  005436  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14254  005438  D016               	goto	l1882
 14255                           
 14256                           ; BSR set to: 0
 14257  00543A  C063  F066         	movff	___ftge@ff2,??___ftge
 14258  00543E  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14259  005442  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14260  005446  1F66               	comf	??___ftge& (0+255),f,b
 14261  005448  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14262  00544A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14263  00544C  2B66               	incf	??___ftge& (0+255),f,b
 14264  00544E  0E00               	movlw	0
 14265  005450  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14266  005452  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14267  005454  0E00               	movlw	0
 14268  005456  2566               	addwf	??___ftge& (0+255),w,b
 14269  005458  6F63               	movwf	___ftge@ff2& (0+255),b
 14270  00545A  0E00               	movlw	0
 14271  00545C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14272  00545E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14273  005460  0E80               	movlw	128
 14274  005462  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14275  005464  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14276  005466                     l1882:
 14277                           
 14278                           ; BSR set to: 0
 14279                           
 14280                           ; BSR set to: 0
 14281  005466  0E00               	movlw	0
 14282  005468  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14283  00546A  0E00               	movlw	0
 14284  00546C  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14285  00546E  0E80               	movlw	128
 14286  005470  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14287                           
 14288                           ; BSR set to: 0
 14289  005472  0E00               	movlw	0
 14290  005474  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14291  005476  0E00               	movlw	0
 14292  005478  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14293  00547A  0E80               	movlw	128
 14294  00547C  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14295  00547E  5163               	movf	___ftge@ff2& (0+255),w,b
 14296  005480  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14297  005482  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14298  005484  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14299  005486  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14300  005488  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14301  00548A  B0D8               	btfsc	status,0,c
 14302  00548C  D002               	goto	l6147
 14303                           
 14304                           ; BSR set to: 0
 14305  00548E  90D8               	bcf	status,0,c
 14306  005490  0012               	return	
 14307  005492                     l6147:
 14308                           
 14309                           ; BSR set to: 0
 14310                           
 14311                           ; BSR set to: 0
 14312  005492  80D8               	bsf	status,0,c
 14313                           
 14314                           ; BSR set to: 0
 14315  005494  0012               	return	
 14316  005496                     __end_of___ftge:
 14317                           	opt stack 0
 14318                           tblptru	equ	0xFF8
 14319                           tblptrh	equ	0xFF7
 14320                           tblptrl	equ	0xFF6
 14321                           tablat	equ	0xFF5
 14322                           prodh	equ	0xFF4
 14323                           prodl	equ	0xFF3
 14324                           intcon	equ	0xFF2
 14325                           intcon2	equ	0xFF1
 14326                           intcon3	equ	0xFF0
 14327                           postinc0	equ	0xFEE
 14328                           wreg	equ	0xFE8
 14329                           postdec1	equ	0xFE5
 14330                           fsr1l	equ	0xFE1
 14331                           indf2	equ	0xFDF
 14332                           postinc2	equ	0xFDE
 14333                           postdec2	equ	0xFDD
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function ___ftdiv *****************
 14339 ;; Defined at:
 14340 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  f1              3   39[BANK0 ] float 
 14343 ;;  f2              3   42[BANK0 ] float 
 14344 ;; Auto vars:     Size  Location     Type
 14345 ;;  f3              3   49[BANK0 ] float 
 14346 ;;  sign            1   53[BANK0 ] unsigned char 
 14347 ;;  exp             1   52[BANK0 ] unsigned char 
 14348 ;;  cntr            1   48[BANK0 ] unsigned char 
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  3   39[BANK0 ] float 
 14351 ;; Registers used:
 14352 ;;		wreg, status,2, status,0, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14358 ;;      Params:         0       6       0       0       0       0       0       0       0
 14359 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14360 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14361 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14362 ;;Total ram usage:       15 bytes
 14363 ;; Hardware stack levels used:    1
 14364 ;; Hardware stack levels required when called:    7
 14365 ;; This function calls:
 14366 ;;		___ftpack
 14367 ;; This function is called by:
 14368 ;;		_getSensors
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text14
 14373  004C70                     __ptext14:
 14374                           	opt stack 0
 14375  004C70                     ___ftdiv:
 14376                           	opt stack 22
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;incstack = 0
 14380  004C70  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14381  004C74  0100               	movlb	0	; () banked
 14382  004C76  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14383  004C78  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14384  004C7A  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14385  004C7C  378D               	rlcf	??___ftdiv& (0+255),f,b
 14386  004C7E  E301               	bnc	u12261
 14387  004C80  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14388  004C82                     u12261:
 14389  004C82  518D               	movf	??___ftdiv& (0+255),w,b
 14390  004C84  6F94               	movwf	___ftdiv@exp& (0+255),b
 14391  004C86  5194               	movf	___ftdiv@exp& (0+255),w,b
 14392  004C88  A4D8               	btfss	status,2,c
 14393  004C8A  D007               	goto	l1873
 14394                           
 14395                           ; BSR set to: 0
 14396  004C8C  0E00               	movlw	0
 14397  004C8E  6F87               	movwf	?___ftdiv& (0+255),b
 14398  004C90  0E00               	movlw	0
 14399  004C92  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14400  004C94  0E00               	movlw	0
 14401  004C96  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14402                           
 14403                           ; BSR set to: 0
 14404  004C98  0012               	return	
 14405  004C9A                     l1873:
 14406                           
 14407                           ; BSR set to: 0
 14408                           
 14409                           ; BSR set to: 0
 14410  004C9A  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14411  004C9E  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14412  004CA0  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14413  004CA2  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14414  004CA4  378D               	rlcf	??___ftdiv& (0+255),f,b
 14415  004CA6  E301               	bnc	u12281
 14416  004CA8  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14417  004CAA                     u12281:
 14418  004CAA  518D               	movf	??___ftdiv& (0+255),w,b
 14419  004CAC  6F95               	movwf	___ftdiv@sign& (0+255),b
 14420  004CAE  5195               	movf	___ftdiv@sign& (0+255),w,b
 14421  004CB0  A4D8               	btfss	status,2,c
 14422  004CB2  D007               	goto	l1875
 14423                           
 14424                           ; BSR set to: 0
 14425  004CB4  0E00               	movlw	0
 14426  004CB6  6F87               	movwf	?___ftdiv& (0+255),b
 14427  004CB8  0E00               	movlw	0
 14428  004CBA  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14429  004CBC  0E00               	movlw	0
 14430  004CBE  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14431                           
 14432                           ; BSR set to: 0
 14433  004CC0  0012               	return	
 14434  004CC2                     l1875:
 14435                           
 14436                           ; BSR set to: 0
 14437                           
 14438                           ; BSR set to: 0
 14439  004CC2  0E00               	movlw	0
 14440  004CC4  6F91               	movwf	___ftdiv@f3& (0+255),b
 14441  004CC6  0E00               	movlw	0
 14442  004CC8  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14443  004CCA  0E00               	movlw	0
 14444  004CCC  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14445                           
 14446                           ; BSR set to: 0
 14447  004CCE  5195               	movf	___ftdiv@sign& (0+255),w,b
 14448  004CD0  0F89               	addlw	137
 14449  004CD2  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14450                           
 14451                           ; BSR set to: 0
 14452  004CD4  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14453                           
 14454                           ; BSR set to: 0
 14455  004CD8  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14456  004CDA  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14457                           
 14458                           ; BSR set to: 0
 14459  004CDC  0E80               	movlw	128
 14460  004CDE  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14461                           
 14462                           ; BSR set to: 0
 14463  004CE0  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14464                           
 14465                           ; BSR set to: 0
 14466  004CE2  0EFF               	movlw	255
 14467  004CE4  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14468  004CE6  0EFF               	movlw	255
 14469  004CE8  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14470  004CEA  0E00               	movlw	0
 14471  004CEC  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14472                           
 14473                           ; BSR set to: 0
 14474  004CEE  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14475                           
 14476                           ; BSR set to: 0
 14477  004CF0  0EFF               	movlw	255
 14478  004CF2  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14479  004CF4  0EFF               	movlw	255
 14480  004CF6  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14481  004CF8  0E00               	movlw	0
 14482  004CFA  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14483                           
 14484                           ; BSR set to: 0
 14485  004CFC  0E18               	movlw	24
 14486  004CFE  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14487  004D00                     
 14488                           ; BSR set to: 0
 14489                           
 14490                           ; BSR set to: 0
 14491  004D00  90D8               	bcf	status,0,c
 14492  004D02  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14493  004D04  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14494  004D06  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14495                           
 14496                           ; BSR set to: 0
 14497  004D08  518A               	movf	___ftdiv@f2& (0+255),w,b
 14498  004D0A  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14499  004D0C  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14500  004D0E  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14501  004D10  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14502  004D12  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14503  004D14  A0D8               	btfss	status,0,c
 14504  004D16  D007               	goto	l1877
 14505                           
 14506                           ; BSR set to: 0
 14507  004D18  518A               	movf	___ftdiv@f2& (0+255),w,b
 14508  004D1A  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14509  004D1C  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14510  004D1E  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14511  004D20  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14512  004D22  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14513                           
 14514                           ; BSR set to: 0
 14515  004D24  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14516  004D26                     l1877:
 14517                           
 14518                           ; BSR set to: 0
 14519  004D26  90D8               	bcf	status,0,c
 14520  004D28  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14521  004D2A  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14522  004D2C  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14523                           
 14524                           ; BSR set to: 0
 14525  004D2E  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14526  004D30  D7E7               	goto	l1876
 14527                           
 14528                           ; BSR set to: 0
 14529                           
 14530                           ; BSR set to: 0
 14531  004D32  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14532  004D36  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14533  004D3A  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14534  004D3E  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14535  004D42  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14536  004D46  ECD1  F027         	call	___ftpack	;wreg free
 14537  004D4A  C060  F087         	movff	?___ftpack,?___ftdiv
 14538  004D4E  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14539  004D52  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14540  004D56  0012               	return	
 14541  004D58                     __end_of___ftdiv:
 14542                           	opt stack 0
 14543                           tblptru	equ	0xFF8
 14544                           tblptrh	equ	0xFF7
 14545                           tblptrl	equ	0xFF6
 14546                           tablat	equ	0xFF5
 14547                           prodh	equ	0xFF4
 14548                           prodl	equ	0xFF3
 14549                           intcon	equ	0xFF2
 14550                           intcon2	equ	0xFF1
 14551                           intcon3	equ	0xFF0
 14552                           postinc0	equ	0xFEE
 14553                           wreg	equ	0xFE8
 14554                           postdec1	equ	0xFE5
 14555                           fsr1l	equ	0xFE1
 14556                           indf2	equ	0xFDF
 14557                           postinc2	equ	0xFDE
 14558                           postdec2	equ	0xFDD
 14559                           fsr2h	equ	0xFDA
 14560                           fsr2l	equ	0xFD9
 14561                           status	equ	0xFD8
 14562                           
 14563 ;; *************** function ___ftadd *****************
 14564 ;; Defined at:
 14565 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;  f1              3   27[BANK0 ] float 
 14568 ;;  f2              3   30[BANK0 ] float 
 14569 ;; Auto vars:     Size  Location     Type
 14570 ;;  exp1            1   38[BANK0 ] unsigned char 
 14571 ;;  exp2            1   37[BANK0 ] unsigned char 
 14572 ;;  sign            1   36[BANK0 ] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  3   27[BANK0 ] float 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2, status,0, cstack
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14582 ;;      Params:         0       6       0       0       0       0       0       0       0
 14583 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14584 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14585 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14586 ;;Total ram usage:       12 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:    7
 14589 ;; This function calls:
 14590 ;;		___ftpack
 14591 ;; This function is called by:
 14592 ;;		_getSensors
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text15
 14597  0041CA                     __ptext15:
 14598                           	opt stack 0
 14599  0041CA                     ___ftadd:
 14600                           	opt stack 22
 14601                           
 14602                           ;incstack = 0
 14603  0041CA  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14604  0041CE  0100               	movlb	0	; () banked
 14605  0041D0  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14606  0041D2  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14607  0041D4  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14608  0041D6  3781               	rlcf	??___ftadd& (0+255),f,b
 14609  0041D8  E301               	bnc	u12051
 14610  0041DA  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14611  0041DC                     u12051:
 14612  0041DC  5181               	movf	??___ftadd& (0+255),w,b
 14613  0041DE  6F86               	movwf	___ftadd@exp1& (0+255),b
 14614  0041E0  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14615  0041E4  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14616  0041E6  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14617  0041E8  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14618  0041EA  3781               	rlcf	??___ftadd& (0+255),f,b
 14619  0041EC  E301               	bnc	u12061
 14620  0041EE  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14621  0041F0                     u12061:
 14622  0041F0  5181               	movf	??___ftadd& (0+255),w,b
 14623  0041F2  6F85               	movwf	___ftadd@exp2& (0+255),b
 14624                           
 14625                           ; BSR set to: 0
 14626  0041F4  5186               	movf	___ftadd@exp1& (0+255),w,b
 14627  0041F6  B4D8               	btfsc	status,2,c
 14628  0041F8  D00B               	goto	u12090
 14629                           
 14630                           ; BSR set to: 0
 14631  0041FA  5185               	movf	___ftadd@exp2& (0+255),w,b
 14632  0041FC  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14633  0041FE  B0D8               	btfsc	status,0,c
 14634  004200  D00E               	goto	l1840
 14635                           
 14636                           ; BSR set to: 0
 14637  004202  5186               	movf	___ftadd@exp1& (0+255),w,b
 14638  004204  0800               	sublw	0
 14639  004206  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14640  004208  6F81               	movwf	??___ftadd& (0+255),b
 14641  00420A  0E18               	movlw	24
 14642  00420C  6581               	cpfsgt	??___ftadd& (0+255),b
 14643  00420E  D007               	goto	l1840
 14644  004210                     u12090:
 14645                           
 14646                           ; BSR set to: 0
 14647  004210  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14648  004214  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14649  004218  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14650  00421C  0012               	return	
 14651  00421E                     l1840:
 14652                           
 14653                           ; BSR set to: 0
 14654                           
 14655                           ; BSR set to: 0
 14656  00421E  5185               	movf	___ftadd@exp2& (0+255),w,b
 14657  004220  B4D8               	btfsc	status,2,c
 14658  004222  D00B               	goto	u12120
 14659                           
 14660                           ; BSR set to: 0
 14661  004224  5186               	movf	___ftadd@exp1& (0+255),w,b
 14662  004226  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14663  004228  B0D8               	btfsc	status,0,c
 14664  00422A  D00E               	goto	l1844
 14665                           
 14666                           ; BSR set to: 0
 14667  00422C  5185               	movf	___ftadd@exp2& (0+255),w,b
 14668  00422E  0800               	sublw	0
 14669  004230  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14670  004232  6F81               	movwf	??___ftadd& (0+255),b
 14671  004234  0E18               	movlw	24
 14672  004236  6581               	cpfsgt	??___ftadd& (0+255),b
 14673  004238  D007               	goto	l1844
 14674  00423A                     u12120:
 14675                           
 14676                           ; BSR set to: 0
 14677  00423A  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14678  00423E  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14679  004242  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14680  004246  0012               	return	
 14681  004248                     l1844:
 14682                           
 14683                           ; BSR set to: 0
 14684                           
 14685                           ; BSR set to: 0
 14686  004248  0E06               	movlw	6
 14687  00424A  6F84               	movwf	___ftadd@sign& (0+255),b
 14688                           
 14689                           ; BSR set to: 0
 14690  00424C  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14691                           
 14692                           ; BSR set to: 0
 14693  00424E  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14694                           
 14695                           ; BSR set to: 0
 14696                           
 14697                           ; BSR set to: 0
 14698  004250  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14699                           
 14700                           ; BSR set to: 0
 14701  004252  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14702                           
 14703                           ; BSR set to: 0
 14704  004254  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14705                           
 14706                           ; BSR set to: 0
 14707  004256  0EFF               	movlw	255
 14708  004258  177B               	andwf	___ftadd@f1& (0+255),f,b
 14709  00425A  0EFF               	movlw	255
 14710  00425C  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14711  00425E  0E00               	movlw	0
 14712  004260  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14713  004262  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14714                           
 14715                           ; BSR set to: 0
 14716  004264  0EFF               	movlw	255
 14717  004266  177E               	andwf	___ftadd@f2& (0+255),f,b
 14718  004268  0EFF               	movlw	255
 14719  00426A  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14720  00426C  0E00               	movlw	0
 14721  00426E  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14722                           
 14723                           ; BSR set to: 0
 14724  004270  5185               	movf	___ftadd@exp2& (0+255),w,b
 14725  004272  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14726  004274  B0D8               	btfsc	status,0,c
 14727  004276  D01B               	goto	l1849
 14728  004278                     u12150:
 14729                           
 14730                           ; BSR set to: 0
 14731                           
 14732                           ; BSR set to: 0
 14733  004278  90D8               	bcf	status,0,c
 14734  00427A  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14735  00427C  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14736  00427E  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14737  004280  0785               	decf	___ftadd@exp2& (0+255),f,b
 14738                           
 14739                           ; BSR set to: 0
 14740  004282  5186               	movf	___ftadd@exp1& (0+255),w,b
 14741  004284  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14742  004286  B4D8               	btfsc	status,2,c
 14743  004288  D00D               	goto	l1854
 14744                           
 14745                           ; BSR set to: 0
 14746  00428A  0784               	decf	___ftadd@sign& (0+255),f,b
 14747  00428C  C084  F081         	movff	___ftadd@sign,??___ftadd
 14748  004290  0E07               	movlw	7
 14749  004292  1781               	andwf	??___ftadd& (0+255),f,b
 14750  004294  B4D8               	btfsc	status,2,c
 14751  004296  D006               	goto	l1854
 14752  004298  D7EF               	goto	u12150
 14753  00429A                     
 14754                           ; BSR set to: 0
 14755                           
 14756                           ; BSR set to: 0
 14757  00429A  90D8               	bcf	status,0,c
 14758  00429C  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14759  00429E  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14760  0042A0  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14761  0042A2  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14762  0042A4                     l1854:
 14763                           
 14764                           ; BSR set to: 0
 14765                           
 14766                           ; BSR set to: 0
 14767  0042A4  5185               	movf	___ftadd@exp2& (0+255),w,b
 14768  0042A6  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14769  0042A8  B4D8               	btfsc	status,2,c
 14770  0042AA  D01F               	goto	u12220
 14771  0042AC  D7F6               	goto	l1855
 14772  0042AE                     l1849:
 14773                           
 14774                           ; BSR set to: 0
 14775                           
 14776                           ; BSR set to: 0
 14777  0042AE  5186               	movf	___ftadd@exp1& (0+255),w,b
 14778  0042B0  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14779  0042B2  B0D8               	btfsc	status,0,c
 14780  0042B4  D01A               	goto	u12220
 14781  0042B6                     u12190:
 14782                           
 14783                           ; BSR set to: 0
 14784                           
 14785                           ; BSR set to: 0
 14786  0042B6  90D8               	bcf	status,0,c
 14787  0042B8  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14788  0042BA  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14789  0042BC  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14790  0042BE  0786               	decf	___ftadd@exp1& (0+255),f,b
 14791                           
 14792                           ; BSR set to: 0
 14793  0042C0  5186               	movf	___ftadd@exp1& (0+255),w,b
 14794  0042C2  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14795  0042C4  B4D8               	btfsc	status,2,c
 14796  0042C6  D00D               	goto	l1863
 14797                           
 14798                           ; BSR set to: 0
 14799  0042C8  0784               	decf	___ftadd@sign& (0+255),f,b
 14800  0042CA  C084  F081         	movff	___ftadd@sign,??___ftadd
 14801  0042CE  0E07               	movlw	7
 14802  0042D0  1781               	andwf	??___ftadd& (0+255),f,b
 14803  0042D2  B4D8               	btfsc	status,2,c
 14804  0042D4  D006               	goto	l1863
 14805  0042D6  D7EF               	goto	u12190
 14806  0042D8                     
 14807                           ; BSR set to: 0
 14808                           
 14809                           ; BSR set to: 0
 14810  0042D8  90D8               	bcf	status,0,c
 14811  0042DA  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14812  0042DC  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14813  0042DE  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14814  0042E0  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14815  0042E2                     l1863:
 14816                           
 14817                           ; BSR set to: 0
 14818                           
 14819                           ; BSR set to: 0
 14820  0042E2  5185               	movf	___ftadd@exp2& (0+255),w,b
 14821  0042E4  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14822  0042E6  A4D8               	btfss	status,2,c
 14823  0042E8  D7F7               	goto	l1864
 14824  0042EA                     u12220:
 14825                           
 14826                           ; BSR set to: 0
 14827                           
 14828                           ; BSR set to: 0
 14829                           
 14830                           ; BSR set to: 0
 14831  0042EA  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14832  0042EC  D00C               	goto	l1866
 14833                           
 14834                           ; BSR set to: 0
 14835  0042EE  0EFF               	movlw	255
 14836  0042F0  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14837  0042F2  0EFF               	movlw	255
 14838  0042F4  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14839  0042F6  0EFF               	movlw	255
 14840  0042F8  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14841  0042FA  0E01               	movlw	1
 14842  0042FC  277B               	addwf	___ftadd@f1& (0+255),f,b
 14843  0042FE  0E00               	movlw	0
 14844  004300  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14845  004302  0E00               	movlw	0
 14846  004304  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14847  004306                     l1866:
 14848                           
 14849                           ; BSR set to: 0
 14850  004306  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14851  004308  D00C               	goto	l1867
 14852                           
 14853                           ; BSR set to: 0
 14854  00430A  0EFF               	movlw	255
 14855  00430C  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14856  00430E  0EFF               	movlw	255
 14857  004310  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14858  004312  0EFF               	movlw	255
 14859  004314  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14860  004316  0E01               	movlw	1
 14861  004318  277E               	addwf	___ftadd@f2& (0+255),f,b
 14862  00431A  0E00               	movlw	0
 14863  00431C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14864  00431E  0E00               	movlw	0
 14865  004320  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14866  004322                     l1867:
 14867                           
 14868                           ; BSR set to: 0
 14869                           
 14870                           ; BSR set to: 0
 14871  004322  0E00               	movlw	0
 14872  004324  6F84               	movwf	___ftadd@sign& (0+255),b
 14873                           
 14874                           ; BSR set to: 0
 14875  004326  517B               	movf	___ftadd@f1& (0+255),w,b
 14876  004328  277E               	addwf	___ftadd@f2& (0+255),f,b
 14877  00432A  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14878  00432C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14879  00432E  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14880  004330  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14881                           
 14882                           ; BSR set to: 0
 14883  004332  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14884  004334  D00E               	goto	l1868
 14885                           
 14886                           ; BSR set to: 0
 14887  004336  0EFF               	movlw	255
 14888  004338  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14889  00433A  0EFF               	movlw	255
 14890  00433C  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14891  00433E  0EFF               	movlw	255
 14892  004340  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14893  004342  0E01               	movlw	1
 14894  004344  277E               	addwf	___ftadd@f2& (0+255),f,b
 14895  004346  0E00               	movlw	0
 14896  004348  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14897  00434A  0E00               	movlw	0
 14898  00434C  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14899                           
 14900                           ; BSR set to: 0
 14901  00434E  0E01               	movlw	1
 14902  004350  6F84               	movwf	___ftadd@sign& (0+255),b
 14903  004352                     l1868:
 14904                           
 14905                           ; BSR set to: 0
 14906                           
 14907                           ; BSR set to: 0
 14908  004352  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14909  004356  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14910  00435A  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14911  00435E  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14912  004362  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14913  004366  ECD1  F027         	call	___ftpack	;wreg free
 14914  00436A  C060  F07B         	movff	?___ftpack,?___ftadd
 14915  00436E  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14916  004372  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14917  004376  0012               	return	
 14918  004378                     __end_of___ftadd:
 14919                           	opt stack 0
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           intcon2	equ	0xFF1
 14928                           intcon3	equ	0xFF0
 14929                           postinc0	equ	0xFEE
 14930                           wreg	equ	0xFE8
 14931                           postdec1	equ	0xFE5
 14932                           fsr1l	equ	0xFE1
 14933                           indf2	equ	0xFDF
 14934                           postinc2	equ	0xFDE
 14935                           postdec2	equ	0xFDD
 14936                           fsr2h	equ	0xFDA
 14937                           fsr2l	equ	0xFD9
 14938                           status	equ	0xFD8
 14939                           
 14940 ;; *************** function ___ftpack *****************
 14941 ;; Defined at:
 14942 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14943 ;; Parameters:    Size  Location     Type
 14944 ;;  arg             3    0[BANK0 ] unsigned um
 14945 ;;  exp             1    3[BANK0 ] unsigned char 
 14946 ;;  sign            1    4[BANK0 ] unsigned char 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;		None
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  3    0[BANK0 ] float 
 14951 ;; Registers used:
 14952 ;;		wreg, status,2, status,0
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14958 ;;      Params:         0       5       0       0       0       0       0       0       0
 14959 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14960 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14961 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14962 ;;Total ram usage:        8 bytes
 14963 ;; Hardware stack levels used:    1
 14964 ;; Hardware stack levels required when called:    6
 14965 ;; This function calls:
 14966 ;;		Nothing
 14967 ;; This function is called by:
 14968 ;;		___ftadd
 14969 ;;		___ftdiv
 14970 ;;		___ftmul
 14971 ;;		___lwtoft
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text16
 14976  004FA2                     __ptext16:
 14977                           	opt stack 0
 14978  004FA2                     ___ftpack:
 14979                           	opt stack 22
 14980                           
 14981                           ;incstack = 0
 14982  004FA2  0100               	movlb	0	; () banked
 14983  004FA4  5163               	movf	___ftpack@exp& (0+255),w,b
 14984  004FA6  B4D8               	btfsc	status,2,c
 14985  004FA8  D005               	goto	u8640
 14986                           
 14987                           ; BSR set to: 0
 14988  004FAA  5160               	movf	___ftpack@arg& (0+255),w,b
 14989  004FAC  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14990  004FAE  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14991  004FB0  A4D8               	btfss	status,2,c
 14992  004FB2  D00C               	goto	l1809
 14993  004FB4                     u8640:
 14994                           
 14995                           ; BSR set to: 0
 14996                           
 14997                           ; BSR set to: 0
 14998  004FB4  0E00               	movlw	0
 14999  004FB6  6F60               	movwf	?___ftpack& (0+255),b
 15000  004FB8  0E00               	movlw	0
 15001  004FBA  6F61               	movwf	(?___ftpack+1)& (0+255),b
 15002  004FBC  0E00               	movlw	0
 15003  004FBE  6F62               	movwf	(?___ftpack+2)& (0+255),b
 15004                           
 15005                           ; BSR set to: 0
 15006  004FC0  0012               	return	
 15007  004FC2                     
 15008                           ; BSR set to: 0
 15009                           
 15010                           ; BSR set to: 0
 15011  004FC2  2B63               	incf	___ftpack@exp& (0+255),f,b
 15012  004FC4  90D8               	bcf	status,0,c
 15013  004FC6  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15014  004FC8  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15015  004FCA  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15016  004FCC                     l1809:
 15017                           
 15018                           ; BSR set to: 0
 15019                           
 15020                           ; BSR set to: 0
 15021  004FCC  0E00               	movlw	0
 15022  004FCE  1560               	andwf	___ftpack@arg& (0+255),w,b
 15023  004FD0  6F65               	movwf	??___ftpack& (0+255),b
 15024  004FD2  0E00               	movlw	0
 15025  004FD4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15026  004FD6  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15027  004FD8  0EFE               	movlw	254
 15028  004FDA  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15029  004FDC  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15030  004FDE  5165               	movf	??___ftpack& (0+255),w,b
 15031  004FE0  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15032  004FE2  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15033  004FE4  B4D8               	btfsc	status,2,c
 15034  004FE6  D00C               	goto	l1812
 15035  004FE8  D7EC               	goto	l1810
 15036  004FEA                     
 15037                           ; BSR set to: 0
 15038                           
 15039                           ; BSR set to: 0
 15040  004FEA  2B63               	incf	___ftpack@exp& (0+255),f,b
 15041                           
 15042                           ; BSR set to: 0
 15043  004FEC  0E01               	movlw	1
 15044  004FEE  2760               	addwf	___ftpack@arg& (0+255),f,b
 15045  004FF0  0E00               	movlw	0
 15046  004FF2  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 15047  004FF4  0E00               	movlw	0
 15048  004FF6  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15049  004FF8  90D8               	bcf	status,0,c
 15050  004FFA  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15051  004FFC  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15052  004FFE  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15053  005000                     l1812:
 15054                           
 15055                           ; BSR set to: 0
 15056                           
 15057                           ; BSR set to: 0
 15058  005000  0E00               	movlw	0
 15059  005002  1560               	andwf	___ftpack@arg& (0+255),w,b
 15060  005004  6F65               	movwf	??___ftpack& (0+255),b
 15061  005006  0E00               	movlw	0
 15062  005008  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15063  00500A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15064  00500C  0EFF               	movlw	255
 15065  00500E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15066  005010  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15067  005012  5165               	movf	??___ftpack& (0+255),w,b
 15068  005014  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15069  005016  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15070  005018  B4D8               	btfsc	status,2,c
 15071  00501A  D006               	goto	l1815
 15072  00501C  D7E6               	goto	l1813
 15073  00501E                     
 15074                           ; BSR set to: 0
 15075                           
 15076                           ; BSR set to: 0
 15077  00501E  0763               	decf	___ftpack@exp& (0+255),f,b
 15078  005020  90D8               	bcf	status,0,c
 15079  005022  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15080  005024  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15081  005026  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15082  005028                     l1815:
 15083                           
 15084                           ; BSR set to: 0
 15085                           
 15086                           ; BSR set to: 0
 15087  005028  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15088  00502A  D003               	goto	u8680
 15089                           
 15090                           ; BSR set to: 0
 15091  00502C  0E02               	movlw	2
 15092  00502E  6163               	cpfslt	___ftpack@exp& (0+255),b
 15093  005030  D7F6               	goto	l1816
 15094  005032                     u8680:
 15095                           
 15096                           ; BSR set to: 0
 15097                           
 15098                           ; BSR set to: 0
 15099  005032  A163               	btfss	___ftpack@exp& (0+255),0,b
 15100                           
 15101                           ; BSR set to: 0
 15102  005034  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15103                           
 15104                           ; BSR set to: 0
 15105                           
 15106                           ; BSR set to: 0
 15107  005036  90D8               	bcf	status,0,c
 15108  005038  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15109  00503A  5163               	movf	___ftpack@exp& (0+255),w,b
 15110  00503C  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15111                           
 15112                           ; BSR set to: 0
 15113  00503E  5164               	movf	___ftpack@sign& (0+255),w,b
 15114  005040  A4D8               	btfss	status,2,c
 15115                           
 15116                           ; BSR set to: 0
 15117  005042  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15118                           
 15119                           ; BSR set to: 0
 15120                           
 15121                           ; BSR set to: 0
 15122  005044  C060  F060         	movff	___ftpack@arg,?___ftpack
 15123  005048  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15124  00504C  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15125  005050  0012               	return	
 15126  005052                     __end_of___ftpack:
 15127                           	opt stack 0
 15128                           tblptru	equ	0xFF8
 15129                           tblptrh	equ	0xFF7
 15130                           tblptrl	equ	0xFF6
 15131                           tablat	equ	0xFF5
 15132                           prodh	equ	0xFF4
 15133                           prodl	equ	0xFF3
 15134                           intcon	equ	0xFF2
 15135                           intcon2	equ	0xFF1
 15136                           intcon3	equ	0xFF0
 15137                           postinc0	equ	0xFEE
 15138                           wreg	equ	0xFE8
 15139                           postdec1	equ	0xFE5
 15140                           fsr1l	equ	0xFE1
 15141                           indf2	equ	0xFDF
 15142                           postinc2	equ	0xFDE
 15143                           postdec2	equ	0xFDD
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _faseAtual *****************
 15149 ;; Defined at:
 15150 ;;		line 8 in file "src/FuncoesControlador.h"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  tp              1    wreg     unsigned char 
 15153 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 15154 ;;		 -> fase(1), 
 15155 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 15156 ;;		 -> tempajt(1), 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  tp              1    5[BANK0 ] unsigned char 
 15159 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 15160 ;;  _fasee          1    4[BANK0 ] unsigned char 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  2    0[BANK0 ] PTR unsigned char 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15170 ;;      Params:         0       4       0       0       0       0       0       0       0
 15171 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15173 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15174 ;;Total ram usage:        7 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:    6
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_main
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text17
 15185  004656                     __ptext17:
 15186                           	opt stack 0
 15187  004656                     _faseAtual:
 15188                           	opt stack 24
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;incstack = 0
 15192                           ;faseAtual@tp stored from wreg
 15193  004656  0100               	movlb	0	; () banked
 15194  004658  6F65               	movwf	faseAtual@tp& (0+255),b
 15195                           
 15196                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 15197  00465A  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15198  00465E  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15199  004662  50DF               	movf	indf2,w,c
 15200  004664  0100               	movlb	0	; () banked
 15201  004666  6F64               	movwf	faseAtual@_fasee& (0+255),b
 15202                           
 15203                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 15204  004668  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15205  00466C  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15206  004670  50DF               	movf	indf2,w,c
 15207  004672  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;FuncoesControlador.h: 11: if (tp == '?') {
 15211  004674  0E3F               	movlw	63
 15212  004676  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15213  004678  B4D8               	btfsc	status,2,c
 15214  00467A  D01A               	goto	l869
 15215  00467C  D027               	goto	l868
 15216  00467E                     
 15217                           ; BSR set to: 0
 15218                           
 15219                           ; BSR set to: 0
 15220  00467E  0EDF               	movlw	low STR_1
 15221  004680  6F60               	movwf	?_faseAtual& (0+255),b
 15222  004682  0E7E               	movlw	high STR_1
 15223  004684  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15224                           
 15225                           ; BSR set to: 0
 15226  004686  0012               	return	
 15227  004688                     
 15228                           ; BSR set to: 0
 15229                           
 15230                           ; BSR set to: 0
 15231  004688  0EBD               	movlw	low STR_2
 15232  00468A  6F60               	movwf	?_faseAtual& (0+255),b
 15233  00468C  0E7E               	movlw	high STR_2
 15234  00468E  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15235                           
 15236                           ; BSR set to: 0
 15237  004690  0012               	return	
 15238  004692                     
 15239                           ; BSR set to: 0
 15240                           
 15241                           ; BSR set to: 0
 15242  004692  0ED4               	movlw	low STR_3
 15243  004694  6F60               	movwf	?_faseAtual& (0+255),b
 15244  004696  0E7E               	movlw	high STR_3
 15245  004698  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15246                           
 15247                           ; BSR set to: 0
 15248  00469A  0012               	return	
 15249  00469C                     
 15250                           ; BSR set to: 0
 15251                           
 15252                           ; BSR set to: 0
 15253  00469C  0E15               	movlw	low STR_4
 15254  00469E  6F60               	movwf	?_faseAtual& (0+255),b
 15255  0046A0  0E7F               	movlw	high STR_4
 15256  0046A2  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15257                           
 15258                           ; BSR set to: 0
 15259  0046A4  0012               	return	
 15260  0046A6                     
 15261                           ; BSR set to: 0
 15262                           
 15263                           ; BSR set to: 0
 15264  0046A6  0EE7               	movlw	low STR_5
 15265  0046A8  6F60               	movwf	?_faseAtual& (0+255),b
 15266  0046AA  0E7F               	movlw	high STR_5
 15267  0046AC  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;FuncoesControlador.h: 18: }
 15271                           
 15272                           ; BSR set to: 0
 15273  0046AE  0012               	return	
 15274  0046B0                     l869:
 15275                           
 15276                           ; BSR set to: 0
 15277                           
 15278                           ; BSR set to: 0
 15279  0046B0  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15280                           
 15281                           ; Switch size 1, requested type "space"
 15282                           ; Number of cases is 4, Range of values is 1 to 4
 15283                           ; switch strategies available:
 15284                           ; Name         Instructions Cycles
 15285                           ; simple_byte           13     7 (average)
 15286                           ;	Chosen strategy is simple_byte
 15287  0046B2  0A01               	xorlw	1	; case 1
 15288  0046B4  B4D8               	btfsc	status,2,c
 15289  0046B6  D7E3               	goto	l870
 15290  0046B8  0A03               	xorlw	3	; case 2
 15291  0046BA  B4D8               	btfsc	status,2,c
 15292  0046BC  D7E5               	goto	l872
 15293  0046BE  0A01               	xorlw	1	; case 3
 15294  0046C0  B4D8               	btfsc	status,2,c
 15295  0046C2  D7E7               	goto	l873
 15296  0046C4  0A07               	xorlw	7	; case 4
 15297  0046C6  B4D8               	btfsc	status,2,c
 15298  0046C8  D7E9               	goto	l874
 15299  0046CA  D7ED               	goto	l875
 15300  0046CC                     l868:
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15304                           
 15305                           ; BSR set to: 0
 15306  0046CC  0E46               	movlw	70
 15307  0046CE  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15308  0046D0  A4D8               	btfss	status,2,c
 15309  0046D2  D031               	goto	l878
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15313  0046D4  0E65               	movlw	101
 15314  0046D6  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15315  0046D8  D007               	goto	l879
 15316                           
 15317                           ; BSR set to: 0
 15318  0046DA  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15319  0046DE  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15320  0046E2  0E01               	movlw	1
 15321  0046E4  6EDF               	movwf	indf2,c
 15322  0046E6  0012               	return	
 15323  0046E8                     l879:
 15324                           
 15325                           ; BSR set to: 0
 15326                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15327                           
 15328                           ; BSR set to: 0
 15329  0046E8  0E64               	movlw	100
 15330  0046EA  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15331  0046EC  D00A               	goto	l881
 15332                           
 15333                           ; BSR set to: 0
 15334  0046EE  0E6F               	movlw	111
 15335  0046F0  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15336  0046F2  D007               	goto	l881
 15337                           
 15338                           ; BSR set to: 0
 15339  0046F4  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15340  0046F8  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15341  0046FC  0E02               	movlw	2
 15342  0046FE  6EDF               	movwf	indf2,c
 15343  004700  0012               	return	
 15344  004702                     l881:
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15348                           
 15349                           ; BSR set to: 0
 15350  004702  0E6E               	movlw	110
 15351  004704  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15352  004706  D00A               	goto	l883
 15353                           
 15354                           ; BSR set to: 0
 15355  004708  0E86               	movlw	134
 15356  00470A  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15357  00470C  D007               	goto	l883
 15358                           
 15359                           ; BSR set to: 0
 15360  00470E  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15361  004712  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15362  004716  0E03               	movlw	3
 15363  004718  6EDF               	movwf	indf2,c
 15364  00471A  0012               	return	
 15365  00471C                     l883:
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15369                           
 15370                           ; BSR set to: 0
 15371  00471C  0E85               	movlw	133
 15372  00471E  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15373  004720  0012               	return	
 15374                           
 15375                           ; BSR set to: 0
 15376  004722  0EA1               	movlw	161
 15377  004724  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15378  004726  0012               	return	
 15379                           
 15380                           ; BSR set to: 0
 15381  004728  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15382  00472C  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15383  004730  0E04               	movlw	4
 15384  004732  6EDF               	movwf	indf2,c
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;FuncoesControlador.h: 25: } else
 15388                           
 15389                           ; BSR set to: 0
 15390                           
 15391                           ; BSR set to: 0
 15392                           
 15393                           ; BSR set to: 0
 15394  004734  0012               	return	
 15395  004736                     l878:
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15399                           
 15400                           ; BSR set to: 0
 15401  004736  0E41               	movlw	65
 15402  004738  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15403  00473A  A4D8               	btfss	status,2,c
 15404  00473C  0012               	return	
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15408  00473E  05EC               	decf	_fase& (0+255),w,b
 15409  004740  A4D8               	btfss	status,2,c
 15410  004742  D007               	goto	l888
 15411                           
 15412                           ; BSR set to: 0
 15413  004744  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15414  004748  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15415  00474C  0E55               	movlw	85
 15416  00474E  6EDF               	movwf	indf2,c
 15417  004750  0012               	return	
 15418  004752                     l888:
 15419                           
 15420                           ; BSR set to: 0
 15421                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15422                           
 15423                           ; BSR set to: 0
 15424  004752  0E02               	movlw	2
 15425  004754  19EC               	xorwf	_fase& (0+255),w,b
 15426  004756  A4D8               	btfss	status,2,c
 15427  004758  D007               	goto	l890
 15428                           
 15429                           ; BSR set to: 0
 15430  00475A  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15431  00475E  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15432  004762  0E65               	movlw	101
 15433  004764  6EDF               	movwf	indf2,c
 15434  004766  0012               	return	
 15435  004768                     l890:
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15439                           
 15440                           ; BSR set to: 0
 15441  004768  0E03               	movlw	3
 15442  00476A  19EC               	xorwf	_fase& (0+255),w,b
 15443  00476C  A4D8               	btfss	status,2,c
 15444  00476E  D007               	goto	l892
 15445                           
 15446                           ; BSR set to: 0
 15447  004770  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15448  004774  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15449  004778  0E6F               	movlw	111
 15450  00477A  6EDF               	movwf	indf2,c
 15451  00477C  0012               	return	
 15452  00477E                     l892:
 15453                           
 15454                           ; BSR set to: 0
 15455                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15456                           
 15457                           ; BSR set to: 0
 15458  00477E  0E04               	movlw	4
 15459  004780  19EC               	xorwf	_fase& (0+255),w,b
 15460  004782  A4D8               	btfss	status,2,c
 15461  004784  0012               	return	
 15462                           
 15463                           ; BSR set to: 0
 15464  004786  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15465  00478A  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15466  00478E  0E86               	movlw	134
 15467  004790  6EDF               	movwf	indf2,c
 15468                           
 15469                           ; BSR set to: 0
 15470                           
 15471                           ; BSR set to: 0
 15472                           
 15473                           ; BSR set to: 0
 15474                           
 15475                           ; BSR set to: 0
 15476                           
 15477                           ; BSR set to: 0
 15478                           
 15479                           ; BSR set to: 0
 15480  004792  0012               	return	
 15481  004794                     __end_of_faseAtual:
 15482                           	opt stack 0
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           intcon	equ	0xFF2
 15490                           intcon2	equ	0xFF1
 15491                           intcon3	equ	0xFF0
 15492                           postinc0	equ	0xFEE
 15493                           wreg	equ	0xFE8
 15494                           postdec1	equ	0xFE5
 15495                           fsr1l	equ	0xFE1
 15496                           indf2	equ	0xFDF
 15497                           postinc2	equ	0xFDE
 15498                           postdec2	equ	0xFDD
 15499                           fsr2h	equ	0xFDA
 15500                           fsr2l	equ	0xFD9
 15501                           status	equ	0xFD8
 15502                           
 15503 ;; *************** function _enviaDadosWifi *****************
 15504 ;; Defined at:
 15505 ;;		line 189 in file "src/conexaoWifi.h"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;		None
 15508 ;; Auto vars:     Size  Location     Type
 15509 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15510 ;;  i               1  118[BANK0 ] unsigned char 
 15511 ;; Return value:  Size  Location     Type
 15512 ;;                  1    wreg      void 
 15513 ;; Registers used:
 15514 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15520 ;;      Params:         0       0       0       0       0       0       0       0       0
 15521 ;;      Locals:         0      18       0       0       0       0       0       0       0
 15522 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15523 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15524 ;;Total ram usage:       20 bytes
 15525 ;; Hardware stack levels used:    1
 15526 ;; Hardware stack levels required when called:    9
 15527 ;; This function calls:
 15528 ;;		___wmul
 15529 ;;		_delay
 15530 ;;		_getMac
 15531 ;;		_limpaBuffer
 15532 ;;		_printf
 15533 ;;		_sprintf
 15534 ;;		_strlen
 15535 ;;		_strstr
 15536 ;; This function is called by:
 15537 ;;		_main
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541                           	psect	text18
 15542  002BD6                     __ptext18:
 15543                           	opt stack 0
 15544  002BD6                     _enviaDadosWifi:
 15545                           	opt stack 21
 15546                           
 15547                           ;conexaoWifi.h: 190: if (t_wifi_restart == 0) {
 15548                           
 15549                           ; BSR set to: 0
 15550                           ;incstack = 0
 15551  002BD6  0101               	movlb	1	; () banked
 15552  002BD8  5197               	movf	_t_wifi_restart& (0+255),w,b
 15553  002BDA  A4D8               	btfss	status,2,c
 15554  002BDC  D005               	goto	l1027
 15555                           
 15556                           ; BSR set to: 1
 15557                           ;conexaoWifi.h: 191: f_wifi_processo = 0;
 15558  002BDE  0E00               	movlw	0
 15559  002BE0  6F96               	movwf	_f_wifi_processo& (0+255),b
 15560                           
 15561                           ;conexaoWifi.h: 192: t_wifi_restart = 10;
 15562  002BE2  0E0A               	movlw	10
 15563  002BE4  6F97               	movwf	_t_wifi_restart& (0+255),b
 15564                           
 15565                           ;conexaoWifi.h: 193: } else if (strlen(wifi_MAC) == 12) {
 15566  002BE6  0012               	return	
 15567  002BE8                     l1027:
 15568                           
 15569                           ; BSR set to: 1
 15570                           
 15571                           ; BSR set to: 1
 15572  002BE8  0EB0               	movlw	low _wifi_MAC
 15573  002BEA  0100               	movlb	0	; () banked
 15574  002BEC  6F60               	movwf	strlen@s& (0+255),b
 15575  002BEE  0E02               	movlw	high _wifi_MAC
 15576  002BF0  6F61               	movwf	(strlen@s+1)& (0+255),b
 15577  002BF2  EC6E  F02C         	call	_strlen	;wreg free
 15578  002BF6  0E0C               	movlw	12
 15579  002BF8  0100               	movlb	0	; () banked
 15580  002BFA  1960               	xorwf	?_strlen& (0+255),w,b
 15581  002BFC  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15582  002BFE  B4D8               	btfsc	status,2,c
 15583  002C00  D211               	goto	l1030
 15584  002C02  D279               	goto	l1062
 15585  002C04                     
 15586                           ;conexaoWifi.h: 196: limpaBuffer();
 15587                           
 15588                           ; BSR set to: 0
 15589  002C04  EC75  F02D         	call	_limpaBuffer	;wreg free
 15590                           
 15591                           ;conexaoWifi.h: 197: printf("AT+CWMODE=1\r\n");
 15592  002C08  0E35               	movlw	low STR_44
 15593  002C0A  0100               	movlb	0	; () banked
 15594  002C0C  6F81               	movwf	printf@f& (0+255),b
 15595  002C0E  0E7E               	movlw	high STR_44
 15596  002C10  6F82               	movwf	(printf@f+1)& (0+255),b
 15597  002C12  ECB4  F02D         	call	_printf	;wreg free
 15598                           
 15599                           ;conexaoWifi.h: 198: wifi_conectado = 0;
 15600  002C16  0E00               	movlw	0
 15601  002C18  0101               	movlb	1	; () banked
 15602  002C1A  6F9A               	movwf	_wifi_conectado& (0+255),b
 15603                           
 15604                           ; BSR set to: 1
 15605                           ;conexaoWifi.h: 199: f_wifi_processo++;
 15606  002C1C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15607                           
 15608                           ;conexaoWifi.h: 200: break;
 15609  002C1E  0012               	return	
 15610  002C20                     
 15611                           ; BSR set to: 1
 15612                           ;conexaoWifi.h: 202: if (strstr(bufferSerial, "OK") != (0)) {
 15613                           
 15614                           ; BSR set to: 1
 15615  002C20  0E42               	movlw	low _bufferSerial
 15616  002C22  0100               	movlb	0	; () banked
 15617  002C24  6F6F               	movwf	strstr@s1& (0+255),b
 15618  002C26  0E02               	movlw	high _bufferSerial
 15619  002C28  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15620  002C2A  0EF6               	movlw	low STR_13
 15621  002C2C  6F71               	movwf	strstr@s2& (0+255),b
 15622  002C2E  0E7F               	movlw	high STR_13
 15623  002C30  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15624  002C32  EC7F  F028         	call	_strstr	;wreg free
 15625  002C36  0100               	movlb	0	; () banked
 15626  002C38  516F               	movf	?_strstr& (0+255),w,b
 15627  002C3A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15628  002C3C  B4D8               	btfsc	status,2,c
 15629  002C3E  0012               	return	
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;conexaoWifi.h: 203: f_wifi_processo++;
 15633  002C40  0101               	movlb	1	; () banked
 15634  002C42  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15635                           
 15636                           ; BSR set to: 1
 15637                           ;conexaoWifi.h: 204: }
 15638                           ;conexaoWifi.h: 205: break;
 15639  002C44  0012               	return	
 15640  002C46                     
 15641                           ; BSR set to: 1
 15642                           ;conexaoWifi.h: 207: limpaBuffer();
 15643                           
 15644                           ; BSR set to: 1
 15645  002C46  EC75  F02D         	call	_limpaBuffer	;wreg free
 15646                           
 15647                           ;conexaoWifi.h: 208: printf("AT+CIPMUX=0\r\n");
 15648  002C4A  0E27               	movlw	low STR_46
 15649  002C4C  0100               	movlb	0	; () banked
 15650  002C4E  6F81               	movwf	printf@f& (0+255),b
 15651  002C50  0E7E               	movlw	high STR_46
 15652  002C52  6F82               	movwf	(printf@f+1)& (0+255),b
 15653  002C54  ECB4  F02D         	call	_printf	;wreg free
 15654                           
 15655                           ;conexaoWifi.h: 209: f_wifi_processo++;
 15656  002C58  0101               	movlb	1	; () banked
 15657  002C5A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15658                           
 15659                           ;conexaoWifi.h: 210: break;
 15660  002C5C  0012               	return	
 15661  002C5E                     
 15662                           ; BSR set to: 1
 15663                           ;conexaoWifi.h: 212: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "link"
      +                          ) != (0)) {
 15664                           
 15665                           ; BSR set to: 1
 15666  002C5E  0E42               	movlw	low _bufferSerial
 15667  002C60  0100               	movlb	0	; () banked
 15668  002C62  6F6F               	movwf	strstr@s1& (0+255),b
 15669  002C64  0E02               	movlw	high _bufferSerial
 15670  002C66  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15671  002C68  0EDD               	movlw	low STR_48
 15672  002C6A  6F71               	movwf	strstr@s2& (0+255),b
 15673  002C6C  0E7F               	movlw	high STR_48
 15674  002C6E  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15675  002C70  EC7F  F028         	call	_strstr	;wreg free
 15676  002C74  0100               	movlb	0	; () banked
 15677  002C76  516F               	movf	?_strstr& (0+255),w,b
 15678  002C78  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15679  002C7A  B4D8               	btfsc	status,2,c
 15680  002C7C  D002               	goto	u13110
 15681  002C7E  0E01               	movlw	1
 15682  002C80  D001               	goto	u13112
 15683  002C82                     u13110:
 15684  002C82  0E00               	movlw	0
 15685  002C84                     u13112:
 15686  002C84  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15687  002C86  0E42               	movlw	low _bufferSerial
 15688  002C88  6F6F               	movwf	strstr@s1& (0+255),b
 15689  002C8A  0E02               	movlw	high _bufferSerial
 15690  002C8C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15691  002C8E  0EF6               	movlw	low STR_13
 15692  002C90  6F71               	movwf	strstr@s2& (0+255),b
 15693  002C92  0E7F               	movlw	high STR_13
 15694  002C94  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15695  002C96  EC7F  F028         	call	_strstr	;wreg free
 15696  002C9A  0100               	movlb	0	; () banked
 15697  002C9C  516F               	movf	?_strstr& (0+255),w,b
 15698  002C9E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15699  002CA0  B4D8               	btfsc	status,2,c
 15700  002CA2  D002               	goto	u13120
 15701  002CA4  0E01               	movlw	1
 15702  002CA6  D001               	goto	u13122
 15703  002CA8                     u13120:
 15704  002CA8  0E00               	movlw	0
 15705  002CAA                     u13122:
 15706  002CAA  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15707  002CAC  A0E8               	btfss	wreg,0,c
 15708  002CAE  0012               	return	
 15709                           
 15710                           ; BSR set to: 0
 15711                           ;conexaoWifi.h: 213: f_wifi_processo++;
 15712  002CB0  0101               	movlb	1	; () banked
 15713  002CB2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15714                           
 15715                           ; BSR set to: 1
 15716                           ;conexaoWifi.h: 214: }
 15717                           ;conexaoWifi.h: 215: break;
 15718  002CB4  0012               	return	
 15719  002CB6                     
 15720                           ; BSR set to: 1
 15721                           ;conexaoWifi.h: 217: limpaBuffer();
 15722                           
 15723                           ; BSR set to: 1
 15724  002CB6  EC75  F02D         	call	_limpaBuffer	;wreg free
 15725                           
 15726                           ;conexaoWifi.h: 218: delay(10);
 15727  002CBA  0E00               	movlw	0
 15728  002CBC  0100               	movlb	0	; () banked
 15729  002CBE  6F61               	movwf	(delay@x+1)& (0+255),b
 15730  002CC0  0E0A               	movlw	10
 15731  002CC2  6F60               	movwf	delay@x& (0+255),b
 15732  002CC4  EC94  F02E         	call	_delay	;wreg free
 15733                           
 15734                           ;conexaoWifi.h: 219: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15735  002CC8  0EFE               	movlw	low STR_49
 15736  002CCA  0100               	movlb	0	; () banked
 15737  002CCC  6F81               	movwf	printf@f& (0+255),b
 15738  002CCE  0E7B               	movlw	high STR_49
 15739  002CD0  6F82               	movwf	(printf@f+1)& (0+255),b
 15740  002CD2  0EA1               	movlw	low _ssid
 15741  002CD4  6F83               	movwf	(?_printf+2)& (0+255),b
 15742  002CD6  0E02               	movlw	high _ssid
 15743  002CD8  6F84               	movwf	(?_printf+3)& (0+255),b
 15744  002CDA  0E92               	movlw	low _senha
 15745  002CDC  6F85               	movwf	(?_printf+4)& (0+255),b
 15746  002CDE  0E02               	movlw	high _senha
 15747  002CE0  6F86               	movwf	(?_printf+5)& (0+255),b
 15748  002CE2  ECB4  F02D         	call	_printf	;wreg free
 15749                           
 15750                           ;conexaoWifi.h: 220: f_wifi_processo++;
 15751  002CE6  0101               	movlb	1	; () banked
 15752  002CE8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15753                           
 15754                           ; BSR set to: 1
 15755                           ;conexaoWifi.h: 221: t_wifi_restart = 35;
 15756  002CEA  0E23               	movlw	35
 15757  002CEC  6F97               	movwf	_t_wifi_restart& (0+255),b
 15758                           
 15759                           ;conexaoWifi.h: 222: break;
 15760  002CEE  0012               	return	
 15761  002CF0                     
 15762                           ; BSR set to: 1
 15763                           ;conexaoWifi.h: 225: f_wifi_processo++;
 15764                           
 15765                           ; BSR set to: 1
 15766  002CF0  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15767                           
 15768                           ;conexaoWifi.h: 227: break;
 15769  002CF2  0012               	return	
 15770  002CF4                     
 15771                           ; BSR set to: 1
 15772                           ;conexaoWifi.h: 229: limpaBuffer();
 15773                           
 15774                           ; BSR set to: 1
 15775  002CF4  EC75  F02D         	call	_limpaBuffer	;wreg free
 15776                           
 15777                           ;conexaoWifi.h: 230: if (t_wifi_restart <= 15) {
 15778  002CF8  0E10               	movlw	16
 15779  002CFA  0101               	movlb	1	; () banked
 15780  002CFC  6197               	cpfslt	_t_wifi_restart& (0+255),b
 15781  002CFE  0012               	return	
 15782                           
 15783                           ; BSR set to: 1
 15784                           ;conexaoWifi.h: 231: printf("AT+CIPSTATUS\r\n");
 15785  002D00  0EFA               	movlw	low STR_50
 15786  002D02  0100               	movlb	0	; () banked
 15787  002D04  6F81               	movwf	printf@f& (0+255),b
 15788  002D06  0E7D               	movlw	high STR_50
 15789  002D08  6F82               	movwf	(printf@f+1)& (0+255),b
 15790  002D0A  ECB4  F02D         	call	_printf	;wreg free
 15791                           
 15792                           ;conexaoWifi.h: 232: f_wifi_processo++;
 15793  002D0E  0101               	movlb	1	; () banked
 15794  002D10  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15795                           
 15796                           ; BSR set to: 1
 15797                           ;conexaoWifi.h: 233: }
 15798                           ;conexaoWifi.h: 234: break;
 15799  002D12  0012               	return	
 15800  002D14                     
 15801                           ; BSR set to: 1
 15802                           ;conexaoWifi.h: 236: if (strstr(bufferSerial, "2") != (0) | strstr(bufferSerial, "4") !=
      +                           (0)) {
 15803                           
 15804                           ; BSR set to: 1
 15805  002D14  0E42               	movlw	low _bufferSerial
 15806  002D16  0100               	movlb	0	; () banked
 15807  002D18  6F6F               	movwf	strstr@s1& (0+255),b
 15808  002D1A  0E02               	movlw	high _bufferSerial
 15809  002D1C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15810  002D1E  0EFD               	movlw	low STR_52
 15811  002D20  6F71               	movwf	strstr@s2& (0+255),b
 15812  002D22  0E7F               	movlw	high STR_52
 15813  002D24  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15814  002D26  EC7F  F028         	call	_strstr	;wreg free
 15815  002D2A  0100               	movlb	0	; () banked
 15816  002D2C  516F               	movf	?_strstr& (0+255),w,b
 15817  002D2E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15818  002D30  B4D8               	btfsc	status,2,c
 15819  002D32  D002               	goto	u13150
 15820  002D34  0E01               	movlw	1
 15821  002D36  D001               	goto	u13152
 15822  002D38                     u13150:
 15823  002D38  0E00               	movlw	0
 15824  002D3A                     u13152:
 15825  002D3A  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15826  002D3C  0E42               	movlw	low _bufferSerial
 15827  002D3E  6F6F               	movwf	strstr@s1& (0+255),b
 15828  002D40  0E02               	movlw	high _bufferSerial
 15829  002D42  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15830  002D44  0EFB               	movlw	low STR_51
 15831  002D46  6F71               	movwf	strstr@s2& (0+255),b
 15832  002D48  0E7F               	movlw	high STR_51
 15833  002D4A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15834  002D4C  EC7F  F028         	call	_strstr	;wreg free
 15835  002D50  0100               	movlb	0	; () banked
 15836  002D52  516F               	movf	?_strstr& (0+255),w,b
 15837  002D54  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15838  002D56  B4D8               	btfsc	status,2,c
 15839  002D58  D002               	goto	u13160
 15840  002D5A  0E01               	movlw	1
 15841  002D5C  D001               	goto	u13162
 15842  002D5E                     u13160:
 15843  002D5E  0E00               	movlw	0
 15844  002D60                     u13162:
 15845  002D60  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15846  002D62  A0E8               	btfss	wreg,0,c
 15847  002D64  0012               	return	
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;conexaoWifi.h: 237: wifi_conectado = 1;
 15851  002D66  0E01               	movlw	1
 15852  002D68  0101               	movlb	1	; () banked
 15853  002D6A  6F9A               	movwf	_wifi_conectado& (0+255),b
 15854                           
 15855                           ; BSR set to: 1
 15856                           ;conexaoWifi.h: 238: f_wifi_processo++;
 15857  002D6C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15858                           
 15859                           ; BSR set to: 1
 15860                           ;conexaoWifi.h: 239: }
 15861                           ;conexaoWifi.h: 240: break;
 15862  002D6E  0012               	return	
 15863  002D70                     
 15864                           ; BSR set to: 1
 15865                           ;conexaoWifi.h: 242: limpaBuffer();
 15866                           
 15867                           ; BSR set to: 1
 15868  002D70  EC75  F02D         	call	_limpaBuffer	;wreg free
 15869                           
 15870                           ;conexaoWifi.h: 244: printf("AT+CIPSTART=\"TCP\",\"https://smartsec-node.herokuapp.com/\
      +                          ",80\r\n");
 15871  002D74  0E2E               	movlw	low STR_53
 15872  002D76  0100               	movlb	0	; () banked
 15873  002D78  6F81               	movwf	printf@f& (0+255),b
 15874  002D7A  0E7B               	movlw	high STR_53
 15875  002D7C  6F82               	movwf	(printf@f+1)& (0+255),b
 15876  002D7E  ECB4  F02D         	call	_printf	;wreg free
 15877                           
 15878                           ;conexaoWifi.h: 245: f_wifi_processo++;
 15879  002D82  0101               	movlb	1	; () banked
 15880  002D84  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15881                           
 15882                           ;conexaoWifi.h: 246: break;
 15883  002D86  0012               	return	
 15884  002D88                     
 15885                           ; BSR set to: 1
 15886                           ;conexaoWifi.h: 248: if (strstr(bufferSerial, "OK") != (0)) {
 15887                           
 15888                           ; BSR set to: 1
 15889  002D88  0E42               	movlw	low _bufferSerial
 15890  002D8A  0100               	movlb	0	; () banked
 15891  002D8C  6F6F               	movwf	strstr@s1& (0+255),b
 15892  002D8E  0E02               	movlw	high _bufferSerial
 15893  002D90  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15894  002D92  0EF6               	movlw	low STR_13
 15895  002D94  6F71               	movwf	strstr@s2& (0+255),b
 15896  002D96  0E7F               	movlw	high STR_13
 15897  002D98  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15898  002D9A  EC7F  F028         	call	_strstr	;wreg free
 15899  002D9E  0100               	movlb	0	; () banked
 15900  002DA0  516F               	movf	?_strstr& (0+255),w,b
 15901  002DA2  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15902  002DA4  B4D8               	btfsc	status,2,c
 15903  002DA6  0012               	return	
 15904                           
 15905                           ; BSR set to: 0
 15906                           ;conexaoWifi.h: 249: f_wifi_processo++;
 15907  002DA8  0101               	movlb	1	; () banked
 15908  002DAA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15909                           
 15910                           ; BSR set to: 1
 15911                           ;conexaoWifi.h: 250: }
 15912                           ;conexaoWifi.h: 251: break;
 15913  002DAC  0012               	return	
 15914  002DAE                     
 15915                           ; BSR set to: 1
 15916                           ;conexaoWifi.h: 253: limpaBuffer();
 15917                           
 15918                           ; BSR set to: 1
 15919  002DAE  EC75  F02D         	call	_limpaBuffer	;wreg free
 15920                           
 15921                           ;conexaoWifi.h: 254: printf("AT+CIPSENDEX=260\r\n");
 15922  002DB2  0EDE               	movlw	low STR_55
 15923  002DB4  0100               	movlb	0	; () banked
 15924  002DB6  6F81               	movwf	printf@f& (0+255),b
 15925  002DB8  0E7C               	movlw	high STR_55
 15926  002DBA  6F82               	movwf	(printf@f+1)& (0+255),b
 15927  002DBC  ECB4  F02D         	call	_printf	;wreg free
 15928                           
 15929                           ;conexaoWifi.h: 255: f_wifi_processo++;
 15930  002DC0  0101               	movlb	1	; () banked
 15931  002DC2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15932                           
 15933                           ;conexaoWifi.h: 256: break;
 15934  002DC4  0012               	return	
 15935  002DC6                     
 15936                           ; BSR set to: 1
 15937                           ;conexaoWifi.h: 258: if (strstr(bufferSerial, ">") != (0)) {
 15938                           
 15939                           ; BSR set to: 1
 15940  002DC6  0E42               	movlw	low _bufferSerial
 15941  002DC8  0100               	movlb	0	; () banked
 15942  002DCA  6F6F               	movwf	strstr@s1& (0+255),b
 15943  002DCC  0E02               	movlw	high _bufferSerial
 15944  002DCE  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15945  002DD0  0E78               	movlw	low (STR_107+18)
 15946  002DD2  6F71               	movwf	strstr@s2& (0+255),b
 15947  002DD4  0E7C               	movlw	high (STR_107+18)
 15948  002DD6  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15949  002DD8  EC7F  F028         	call	_strstr	;wreg free
 15950  002DDC  0100               	movlb	0	; () banked
 15951  002DDE  516F               	movf	?_strstr& (0+255),w,b
 15952  002DE0  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15953  002DE2  B4D8               	btfsc	status,2,c
 15954  002DE4  0012               	return	
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;conexaoWifi.h: 259: f_wifi_processo++;
 15958  002DE6  0101               	movlb	1	; () banked
 15959  002DE8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15960                           
 15961                           ; BSR set to: 1
 15962                           ;conexaoWifi.h: 260: }
 15963                           ;conexaoWifi.h: 261: break;
 15964  002DEA  0012               	return	
 15965  002DEC                     
 15966                           ; BSR set to: 1
 15967                           ;conexaoWifi.h: 263: limpaBuffer();
 15968                           
 15969                           ; BSR set to: 1
 15970  002DEC  EC75  F02D         	call	_limpaBuffer	;wreg free
 15971                           
 15972                           ;conexaoWifi.h: 264: char i = 0;
 15973  002DF0  0E00               	movlw	0
 15974  002DF2  0100               	movlb	0	; () banked
 15975  002DF4  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;conexaoWifi.h: 265: char AUX[15];
 15979                           ;conexaoWifi.h: 266: sprintf(AUX, "%s", "Oct 22 2019");
 15980  002DF6  0EC5               	movlw	low enviaDadosWifi@AUX
 15981  002DF8  6F81               	movwf	sprintf@wh& (0+255),b
 15982  002DFA  0E00               	movlw	high enviaDadosWifi@AUX
 15983  002DFC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15984  002DFE  0E26               	movlw	low (STR_82+7)
 15985  002E00  6F83               	movwf	sprintf@f& (0+255),b
 15986  002E02  0E7F               	movlw	high (STR_82+7)
 15987  002E04  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15988  002E06  0EA5               	movlw	low STR_58
 15989  002E08  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15990  002E0A  0E7E               	movlw	high STR_58
 15991  002E0C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15992  002E0E  EC10  F02D         	call	_sprintf	;wreg free
 15993                           
 15994                           ;conexaoWifi.h: 267: for (i = 0; i < strlen(AUX); i++) {
 15995  002E12  0E00               	movlw	0
 15996  002E14  0100               	movlb	0	; () banked
 15997  002E16  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15998  002E18  D017               	goto	l1051
 15999  002E1A                     
 16000                           ; BSR set to: 0
 16001                           ;conexaoWifi.h: 268: if (AUX[i] == ' ') AUX[i] = '-';
 16002                           
 16003                           ; BSR set to: 0
 16004  002E1A  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 16005  002E1C  0D01               	mullw	1
 16006  002E1E  0EC5               	movlw	low enviaDadosWifi@AUX
 16007  002E20  24F3               	addwf	prodl,w,c
 16008  002E22  6ED9               	movwf	fsr2l,c
 16009  002E24  0E00               	movlw	high enviaDadosWifi@AUX
 16010  002E26  20F4               	addwfc	prodh,w,c
 16011  002E28  6EDA               	movwf	fsr2h,c
 16012  002E2A  0E20               	movlw	32
 16013  002E2C  18DE               	xorwf	postinc2,w,c
 16014  002E2E  A4D8               	btfss	status,2,c
 16015  002E30  D00A               	goto	l1053
 16016                           
 16017                           ; BSR set to: 0
 16018  002E32  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 16019  002E34  0D01               	mullw	1
 16020  002E36  0EC5               	movlw	low enviaDadosWifi@AUX
 16021  002E38  24F3               	addwf	prodl,w,c
 16022  002E3A  6ED9               	movwf	fsr2l,c
 16023  002E3C  0E00               	movlw	high enviaDadosWifi@AUX
 16024  002E3E  20F4               	addwfc	prodh,w,c
 16025  002E40  6EDA               	movwf	fsr2h,c
 16026  002E42  0E2D               	movlw	45
 16027  002E44  6EDF               	movwf	indf2,c
 16028  002E46                     l1053:
 16029                           
 16030                           ; BSR set to: 0
 16031                           
 16032                           ; BSR set to: 0
 16033  002E46  2BD6               	incf	enviaDadosWifi@i& (0+255),f,b
 16034  002E48                     l1051:
 16035                           
 16036                           ; BSR set to: 0
 16037                           
 16038                           ; BSR set to: 0
 16039  002E48  0EC5               	movlw	low enviaDadosWifi@AUX
 16040  002E4A  6F60               	movwf	strlen@s& (0+255),b
 16041  002E4C  0E00               	movlw	high enviaDadosWifi@AUX
 16042  002E4E  6F61               	movwf	(strlen@s+1)& (0+255),b
 16043  002E50  EC6E  F02C         	call	_strlen	;wreg free
 16044  002E54  0100               	movlb	0	; () banked
 16045  002E56  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 16046  002E58  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16047  002E5A  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 16048  002E5C  5160               	movf	?_strlen& (0+255),w,b
 16049  002E5E  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 16050  002E60  5161               	movf	(?_strlen+1)& (0+255),w,b
 16051  002E62  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16052  002E64  A0D8               	btfss	status,0,c
 16053  002E66  D7D9               	goto	l1052
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;conexaoWifi.h: 269: }
 16057                           ;conexaoWifi.h: 271: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : https://smartsec-node.herokuapp.com\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalh
      +                          a, buzz
 16058                           
 16059                           ; BSR set to: 0
 16060  002E68  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
 16061  002E6C  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 16062  002E70  0E00               	movlw	0
 16063  002E72  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16064  002E74  0E27               	movlw	39
 16065  002E76  6F62               	movwf	___wmul@multiplicand& (0+255),b
 16066  002E78  ECA9  F02E         	call	___wmul	;wreg free
 16067  002E7C  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2490
 16068  002E80  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2490+1
 16069                           
 16070                           ;conexaoWifi.h: 269: }
 16071                           ;conexaoWifi.h: 271: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : https://smartsec-node.herokuapp.com\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalh
      +                          a, buzz
 16072  002E84  0E71               	movlw	low STR_59
 16073  002E86  0100               	movlb	0	; () banked
 16074  002E88  6F81               	movwf	printf@f& (0+255),b
 16075  002E8A  0E7A               	movlw	high STR_59
 16076  002E8C  6F82               	movwf	(printf@f+1)& (0+255),b
 16077  002E8E  C0FD  F083         	movff	_temp,?_printf+2
 16078  002E92  6B84               	clrf	(?_printf+3)& (0+255),b
 16079  002E94  C0EA  F085         	movff	_tempajt,?_printf+4
 16080  002E98  6B86               	clrf	(?_printf+5)& (0+255),b
 16081  002E9A  C0FC  F087         	movff	_umid,?_printf+6
 16082  002E9E  6B88               	clrf	(?_printf+7)& (0+255),b
 16083  002EA0  C0E9  F089         	movff	_umidajt,?_printf+8
 16084  002EA4  6B8A               	clrf	(?_printf+9)& (0+255),b
 16085  002EA6  C0F9  F08B         	movff	_fornalha,?_printf+10
 16086  002EAA  6B8C               	clrf	(?_printf+11)& (0+255),b
 16087  002EAC  C0FA  F08D         	movff	_buzzer,?_printf+12
 16088  002EB0  6B8E               	clrf	(?_printf+13)& (0+255),b
 16089  002EB2  C0F6  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 16090  002EB6  6B90               	clrf	(?_printf+15)& (0+255),b
 16091  002EB8  C0F8  F091         	movff	_trava_fase,?_printf+16
 16092  002EBC  6B92               	clrf	(?_printf+17)& (0+255),b
 16093  002EBE  C0EC  F093         	movff	_fase,?_printf+18
 16094  002EC2  6B94               	clrf	(?_printf+19)& (0+255),b
 16095  002EC4  C0EB  F095         	movff	_clima,?_printf+20
 16096  002EC8  6B96               	clrf	(?_printf+21)& (0+255),b
 16097  002ECA  C0F7  F097         	movff	_tipo_sensor_umidade,?_printf+22
 16098  002ECE  6B98               	clrf	(?_printf+23)& (0+255),b
 16099  002ED0  0EB0               	movlw	low _wifi_MAC
 16100  002ED2  6F99               	movwf	(?_printf+24)& (0+255),b
 16101  002ED4  0E02               	movlw	high _wifi_MAC
 16102  002ED6  6F9A               	movwf	(?_printf+25)& (0+255),b
 16103  002ED8  C0D4  F09B         	movff	_enviaDadosWifi$2490,?_printf+26
 16104  002EDC  C0D5  F09C         	movff	_enviaDadosWifi$2490+1,?_printf+27
 16105  002EE0  0EC5               	movlw	low enviaDadosWifi@AUX
 16106  002EE2  6F9D               	movwf	(?_printf+28)& (0+255),b
 16107  002EE4  0E00               	movlw	high enviaDadosWifi@AUX
 16108  002EE6  6F9E               	movwf	(?_printf+29)& (0+255),b
 16109  002EE8  C0FE  F09F         	movff	_f_falta_energia,?_printf+30
 16110  002EEC  6BA0               	clrf	(?_printf+31)& (0+255),b
 16111  002EEE  C0F7  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 16112  002EF2  6BA2               	clrf	(?_printf+33)& (0+255),b
 16113  002EF4  C0EF  F0A3         	movff	_h_abafador,?_printf+34
 16114  002EF8  6BA4               	clrf	(?_printf+35)& (0+255),b
 16115  002EFA  C1F4  F0A5         	movff	_h_flap,?_printf+36
 16116  002EFE  6BA6               	clrf	(?_printf+37)& (0+255),b
 16117  002F00  C0F0  F0A7         	movff	_h_venotinha,?_printf+38
 16118  002F04  6BA8               	clrf	(?_printf+39)& (0+255),b
 16119  002F06  C0F1  F0A9         	movff	_h_modo_seguranca,?_printf+40
 16120  002F0A  6BAA               	clrf	(?_printf+41)& (0+255),b
 16121  002F0C  C0EE  F0AB         	movff	_h_buzzer,?_printf+42
 16122  002F10  6BAC               	clrf	(?_printf+43)& (0+255),b
 16123  002F12  C0F5  F0AD         	movff	_t_flap_ligado,?_printf+44
 16124  002F16  6BAE               	clrf	(?_printf+45)& (0+255),b
 16125  002F18  C0F4  F0AF         	movff	_t_flap_intervalo,?_printf+46
 16126  002F1C  6BB0               	clrf	(?_printf+47)& (0+255),b
 16127  002F1E  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 16128  002F22  6BB2               	clrf	(?_printf+49)& (0+255),b
 16129  002F24  C0F3  F0B3         	movff	_t_temp_automatica,?_printf+50
 16130  002F28  6BB4               	clrf	(?_printf+51)& (0+255),b
 16131  002F2A  C1F1  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 16132  002F2E  C1F2  F0B6         	movff	_wifi_habilita_alteracao+1,?_printf+53
 16133  002F32  C1EF  F0B7         	movff	_wifi_SENHA,?_printf+54
 16134  002F36  C1F0  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 16135  002F3A  C0ED  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 16136  002F3E  6BBA               	clrf	(?_printf+57)& (0+255),b
 16137  002F40  C0F2  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 16138  002F44  6BBC               	clrf	(?_printf+59)& (0+255),b
 16139  002F46  ECB4  F02D         	call	_printf	;wreg free
 16140                           
 16141                           ;conexaoWifi.h: 272: f_wifi_processo++;
 16142  002F4A  0101               	movlb	1	; () banked
 16143  002F4C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16144                           
 16145                           ;conexaoWifi.h: 273: break;
 16146  002F4E  0012               	return	
 16147  002F50                     
 16148                           ; BSR set to: 1
 16149                           ;conexaoWifi.h: 275: if (strstr(bufferSerial, "200") != (0) | strstr(bufferSerial, "save
      +                          ") != (0)) {
 16150                           
 16151                           ; BSR set to: 1
 16152  002F50  0E42               	movlw	low _bufferSerial
 16153  002F52  0100               	movlb	0	; () banked
 16154  002F54  6F6F               	movwf	strstr@s1& (0+255),b
 16155  002F56  0E02               	movlw	high _bufferSerial
 16156  002F58  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16157  002F5A  0ED8               	movlw	low STR_61
 16158  002F5C  6F71               	movwf	strstr@s2& (0+255),b
 16159  002F5E  0E7F               	movlw	high STR_61
 16160  002F60  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16161  002F62  EC7F  F028         	call	_strstr	;wreg free
 16162  002F66  0100               	movlb	0	; () banked
 16163  002F68  516F               	movf	?_strstr& (0+255),w,b
 16164  002F6A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16165  002F6C  B4D8               	btfsc	status,2,c
 16166  002F6E  D002               	goto	u13220
 16167  002F70  0E01               	movlw	1
 16168  002F72  D001               	goto	u13222
 16169  002F74                     u13220:
 16170  002F74  0E00               	movlw	0
 16171  002F76                     u13222:
 16172  002F76  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16173  002F78  0E42               	movlw	low _bufferSerial
 16174  002F7A  6F6F               	movwf	strstr@s1& (0+255),b
 16175  002F7C  0E02               	movlw	high _bufferSerial
 16176  002F7E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16177  002F80  0EEB               	movlw	low STR_60
 16178  002F82  6F71               	movwf	strstr@s2& (0+255),b
 16179  002F84  0E7F               	movlw	high STR_60
 16180  002F86  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16181  002F88  EC7F  F028         	call	_strstr	;wreg free
 16182  002F8C  0100               	movlb	0	; () banked
 16183  002F8E  516F               	movf	?_strstr& (0+255),w,b
 16184  002F90  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16185  002F92  B4D8               	btfsc	status,2,c
 16186  002F94  D002               	goto	u13230
 16187  002F96  0E01               	movlw	1
 16188  002F98  D001               	goto	u13232
 16189  002F9A                     u13230:
 16190  002F9A  0E00               	movlw	0
 16191  002F9C                     u13232:
 16192  002F9C  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16193  002F9E  A0E8               	btfss	wreg,0,c
 16194  002FA0  0012               	return	
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;conexaoWifi.h: 276: f_wifi_processo++;
 16198  002FA2  0101               	movlb	1	; () banked
 16199  002FA4  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16200                           
 16201                           ; BSR set to: 1
 16202                           ;conexaoWifi.h: 277: }
 16203                           ;conexaoWifi.h: 278: break;
 16204  002FA6  0012               	return	
 16205  002FA8                     
 16206                           ; BSR set to: 1
 16207                           ;conexaoWifi.h: 280: limpaBuffer();
 16208                           
 16209                           ; BSR set to: 1
 16210  002FA8  EC75  F02D         	call	_limpaBuffer	;wreg free
 16211                           
 16212                           ;conexaoWifi.h: 281: printf("AT+CIPCLOSE\r\n");
 16213  002FAC  0E5F               	movlw	low STR_62
 16214  002FAE  0100               	movlb	0	; () banked
 16215  002FB0  6F81               	movwf	printf@f& (0+255),b
 16216  002FB2  0E7E               	movlw	high STR_62
 16217  002FB4  6F82               	movwf	(printf@f+1)& (0+255),b
 16218  002FB6  ECB4  F02D         	call	_printf	;wreg free
 16219                           
 16220                           ;conexaoWifi.h: 282: f_wifi_processo++;
 16221  002FBA  0101               	movlb	1	; () banked
 16222  002FBC  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16223                           
 16224                           ;conexaoWifi.h: 283: break;
 16225  002FBE  0012               	return	
 16226  002FC0                     
 16227                           ; BSR set to: 1
 16228                           ;conexaoWifi.h: 285: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "CLOSE
      +                          D") != (0)) {
 16229                           
 16230                           ; BSR set to: 1
 16231  002FC0  0E42               	movlw	low _bufferSerial
 16232  002FC2  0100               	movlb	0	; () banked
 16233  002FC4  6F6F               	movwf	strstr@s1& (0+255),b
 16234  002FC6  0E02               	movlw	high _bufferSerial
 16235  002FC8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16236  002FCA  0E91               	movlw	low STR_64
 16237  002FCC  6F71               	movwf	strstr@s2& (0+255),b
 16238  002FCE  0E7F               	movlw	high STR_64
 16239  002FD0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16240  002FD2  EC7F  F028         	call	_strstr	;wreg free
 16241  002FD6  0100               	movlb	0	; () banked
 16242  002FD8  516F               	movf	?_strstr& (0+255),w,b
 16243  002FDA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16244  002FDC  B4D8               	btfsc	status,2,c
 16245  002FDE  D002               	goto	u13250
 16246  002FE0  0E01               	movlw	1
 16247  002FE2  D001               	goto	u13252
 16248  002FE4                     u13250:
 16249  002FE4  0E00               	movlw	0
 16250  002FE6                     u13252:
 16251  002FE6  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16252  002FE8  0E42               	movlw	low _bufferSerial
 16253  002FEA  6F6F               	movwf	strstr@s1& (0+255),b
 16254  002FEC  0E02               	movlw	high _bufferSerial
 16255  002FEE  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16256  002FF0  0EF6               	movlw	low STR_13
 16257  002FF2  6F71               	movwf	strstr@s2& (0+255),b
 16258  002FF4  0E7F               	movlw	high STR_13
 16259  002FF6  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16260  002FF8  EC7F  F028         	call	_strstr	;wreg free
 16261  002FFC  0100               	movlb	0	; () banked
 16262  002FFE  516F               	movf	?_strstr& (0+255),w,b
 16263  003000  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16264  003002  B4D8               	btfsc	status,2,c
 16265  003004  D002               	goto	u13260
 16266  003006  0E01               	movlw	1
 16267  003008  D001               	goto	u13262
 16268  00300A                     u13260:
 16269  00300A  0E00               	movlw	0
 16270  00300C                     u13262:
 16271  00300C  11C3               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16272  00300E  A0E8               	btfss	wreg,0,c
 16273  003010  0012               	return	
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;conexaoWifi.h: 286: f_wifi_processo = 6;
 16277  003012  0E06               	movlw	6
 16278  003014  0101               	movlb	1	; () banked
 16279  003016  6F96               	movwf	_f_wifi_processo& (0+255),b
 16280                           
 16281                           ;conexaoWifi.h: 287: t_wifi_restart = 25;
 16282  003018  0E19               	movlw	25
 16283  00301A  6F97               	movwf	_t_wifi_restart& (0+255),b
 16284                           
 16285                           ; BSR set to: 1
 16286                           ;conexaoWifi.h: 288: }
 16287                           ;conexaoWifi.h: 289: break;
 16288  00301C  0012               	return	
 16289  00301E                     
 16290                           ; BSR set to: 1
 16291                           ;conexaoWifi.h: 291: f_wifi_processo = 0;
 16292                           
 16293                           ; BSR set to: 1
 16294  00301E  0E00               	movlw	0
 16295  003020  6F96               	movwf	_f_wifi_processo& (0+255),b
 16296                           
 16297                           ;conexaoWifi.h: 292: }
 16298  003022  0012               	return	
 16299  003024                     l1030:
 16300                           
 16301                           ; BSR set to: 1
 16302  003024  0101               	movlb	1	; () banked
 16303  003026  5196               	movf	_f_wifi_processo& (0+255),w,b
 16304                           
 16305                           ; Switch size 1, requested type "space"
 16306                           ; Number of cases is 16, Range of values is 0 to 15
 16307                           ; switch strategies available:
 16308                           ; Name         Instructions Cycles
 16309                           ; simple_byte           49    25 (average)
 16310                           ;	Chosen strategy is simple_byte
 16311  003028  0A00               	xorlw	0	; case 0
 16312  00302A  B4D8               	btfsc	status,2,c
 16313  00302C  D5EB               	goto	l1031
 16314  00302E  0A01               	xorlw	1	; case 1
 16315  003030  B4D8               	btfsc	status,2,c
 16316  003032  D5F6               	goto	l1033
 16317  003034  0A03               	xorlw	3	; case 2
 16318  003036  B4D8               	btfsc	status,2,c
 16319  003038  D606               	goto	l1035
 16320  00303A  0A01               	xorlw	1	; case 3
 16321  00303C  B4D8               	btfsc	status,2,c
 16322  00303E  D60F               	goto	l1036
 16323  003040  0A07               	xorlw	7	; case 4
 16324  003042  B4D8               	btfsc	status,2,c
 16325  003044  D638               	goto	l1038
 16326  003046  0A01               	xorlw	1	; case 5
 16327  003048  B4D8               	btfsc	status,2,c
 16328  00304A  D652               	goto	l1039
 16329  00304C  0A03               	xorlw	3	; case 6
 16330  00304E  B4D8               	btfsc	status,2,c
 16331  003050  D651               	goto	l1040
 16332  003052  0A01               	xorlw	1	; case 7
 16333  003054  B4D8               	btfsc	status,2,c
 16334  003056  D65E               	goto	l1042
 16335  003058  0A0F               	xorlw	15	; case 8
 16336  00305A  B4D8               	btfsc	status,2,c
 16337  00305C  D689               	goto	l1044
 16338  00305E  0A01               	xorlw	1	; case 9
 16339  003060  B4D8               	btfsc	status,2,c
 16340  003062  D692               	goto	l1045
 16341  003064  0A03               	xorlw	3	; case 10
 16342  003066  B4D8               	btfsc	status,2,c
 16343  003068  D6A2               	goto	l1047
 16344  00306A  0A01               	xorlw	1	; case 11
 16345  00306C  B4D8               	btfsc	status,2,c
 16346  00306E  D6AB               	goto	l1048
 16347  003070  0A07               	xorlw	7	; case 12
 16348  003072  B4D8               	btfsc	status,2,c
 16349  003074  D6BB               	goto	l1050
 16350  003076  0A01               	xorlw	1	; case 13
 16351  003078  B4D8               	btfsc	status,2,c
 16352  00307A  D76A               	goto	l1055
 16353  00307C  0A03               	xorlw	3	; case 14
 16354  00307E  B4D8               	btfsc	status,2,c
 16355  003080  D793               	goto	l1057
 16356  003082  0A01               	xorlw	1	; case 15
 16357  003084  B4D8               	btfsc	status,2,c
 16358  003086  D79C               	goto	l1058
 16359  003088  D7CA               	goto	l1060
 16360  00308A                     
 16361                           ; BSR set to: 1
 16362                           ;conexaoWifi.h: 296: limpaBuffer();
 16363                           
 16364                           ; BSR set to: 1
 16365  00308A  EC75  F02D         	call	_limpaBuffer	;wreg free
 16366                           
 16367                           ;conexaoWifi.h: 297: printf("AT+CIFSR\r\n");
 16368  00308E  0EC9               	movlw	low STR_65
 16369  003090  0100               	movlb	0	; () banked
 16370  003092  6F81               	movwf	printf@f& (0+255),b
 16371  003094  0E7E               	movlw	high STR_65
 16372  003096  6F82               	movwf	(printf@f+1)& (0+255),b
 16373  003098  ECB4  F02D         	call	_printf	;wreg free
 16374                           
 16375                           ;conexaoWifi.h: 298: f_wifi_processo++;
 16376  00309C  0101               	movlb	1	; () banked
 16377  00309E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16378                           
 16379                           ;conexaoWifi.h: 299: break;
 16380  0030A0  0012               	return	
 16381  0030A2                     
 16382                           ; BSR set to: 1
 16383                           ;conexaoWifi.h: 301: if (strstr(bufferSerial, "MAC") != (0)) {
 16384                           
 16385                           ; BSR set to: 1
 16386  0030A2  0E42               	movlw	low _bufferSerial
 16387  0030A4  0100               	movlb	0	; () banked
 16388  0030A6  6F6F               	movwf	strstr@s1& (0+255),b
 16389  0030A8  0E02               	movlw	high _bufferSerial
 16390  0030AA  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16391  0030AC  0EEF               	movlw	low STR_66
 16392  0030AE  6F71               	movwf	strstr@s2& (0+255),b
 16393  0030B0  0E7F               	movlw	high STR_66
 16394  0030B2  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16395  0030B4  EC7F  F028         	call	_strstr	;wreg free
 16396  0030B8  0100               	movlb	0	; () banked
 16397  0030BA  516F               	movf	?_strstr& (0+255),w,b
 16398  0030BC  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16399  0030BE  B4D8               	btfsc	status,2,c
 16400  0030C0  0012               	return	
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;conexaoWifi.h: 302: getMac(strstr(bufferSerial, "MAC"), wifi_MAC);
 16404  0030C2  0E42               	movlw	low _bufferSerial
 16405  0030C4  6F6F               	movwf	strstr@s1& (0+255),b
 16406  0030C6  0E02               	movlw	high _bufferSerial
 16407  0030C8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16408  0030CA  0EEF               	movlw	low STR_66
 16409  0030CC  6F71               	movwf	strstr@s2& (0+255),b
 16410  0030CE  0E7F               	movlw	high STR_66
 16411  0030D0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16412  0030D2  EC7F  F028         	call	_strstr	;wreg free
 16413  0030D6  C06F  F073         	movff	?_strstr,getMac@mac
 16414  0030DA  C070  F074         	movff	?_strstr+1,getMac@mac+1
 16415  0030DE  0EB0               	movlw	low _wifi_MAC
 16416  0030E0  0100               	movlb	0	; () banked
 16417  0030E2  6F75               	movwf	getMac@var& (0+255),b
 16418  0030E4  0E02               	movlw	high _wifi_MAC
 16419  0030E6  6F76               	movwf	(getMac@var+1)& (0+255),b
 16420  0030E8  ECBC  F021         	call	_getMac	;wreg free
 16421                           
 16422                           ;conexaoWifi.h: 303: }
 16423                           ;conexaoWifi.h: 304: break;
 16424  0030EC  0012               	return	
 16425  0030EE                     
 16426                           ;conexaoWifi.h: 306: f_wifi_processo = 0;
 16427  0030EE  0E00               	movlw	0
 16428  0030F0  0101               	movlb	1	; () banked
 16429  0030F2  6F96               	movwf	_f_wifi_processo& (0+255),b
 16430                           
 16431                           ; BSR set to: 1
 16432                           ;conexaoWifi.h: 308: }
 16433                           
 16434                           ;conexaoWifi.h: 307: break;
 16435  0030F4  0012               	return	
 16436  0030F6                     l1062:
 16437                           
 16438                           ; BSR set to: 1
 16439  0030F6  0101               	movlb	1	; () banked
 16440  0030F8  5196               	movf	_f_wifi_processo& (0+255),w,b
 16441                           
 16442                           ; Switch size 1, requested type "space"
 16443                           ; Number of cases is 2, Range of values is 0 to 1
 16444                           ; switch strategies available:
 16445                           ; Name         Instructions Cycles
 16446                           ; simple_byte            7     4 (average)
 16447                           ;	Chosen strategy is simple_byte
 16448  0030FA  0A00               	xorlw	0	; case 0
 16449  0030FC  B4D8               	btfsc	status,2,c
 16450  0030FE  D7C5               	goto	l1063
 16451  003100  0A01               	xorlw	1	; case 1
 16452  003102  B4D8               	btfsc	status,2,c
 16453  003104  D7CE               	goto	l1065
 16454  003106  D7F3               	goto	l1067
 16455  003108                     __end_of_enviaDadosWifi:
 16456                           	opt stack 0
 16457                           tblptru	equ	0xFF8
 16458                           tblptrh	equ	0xFF7
 16459                           tblptrl	equ	0xFF6
 16460                           tablat	equ	0xFF5
 16461                           prodh	equ	0xFF4
 16462                           prodl	equ	0xFF3
 16463                           intcon	equ	0xFF2
 16464                           intcon2	equ	0xFF1
 16465                           intcon3	equ	0xFF0
 16466                           postinc0	equ	0xFEE
 16467                           wreg	equ	0xFE8
 16468                           postdec1	equ	0xFE5
 16469                           fsr1l	equ	0xFE1
 16470                           indf2	equ	0xFDF
 16471                           postinc2	equ	0xFDE
 16472                           postdec2	equ	0xFDD
 16473                           fsr2h	equ	0xFDA
 16474                           fsr2l	equ	0xFD9
 16475                           status	equ	0xFD8
 16476                           
 16477 ;; *************** function _getMac *****************
 16478 ;; Defined at:
 16479 ;;		line 28 in file "src/conexaoWifi.h"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;  mac             2   19[BANK0 ] PTR unsigned char 
 16482 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 16483 ;;		 -> bufferSerial(80), 
 16484 ;;  var             2   21[BANK0 ] PTR unsigned char 
 16485 ;;		 -> wifi_MAC(24), 
 16486 ;; Auto vars:     Size  Location     Type
 16487 ;;  i               1   27[BANK0 ] unsigned char 
 16488 ;;  men             1   26[BANK0 ] unsigned char 
 16489 ;;  j               1   25[BANK0 ] unsigned char 
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  1    wreg      void 
 16492 ;; Registers used:
 16493 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16499 ;;      Params:         0       4       0       0       0       0       0       0       0
 16500 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16501 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16502 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16503 ;;Total ram usage:        9 bytes
 16504 ;; Hardware stack levels used:    1
 16505 ;; Hardware stack levels required when called:    7
 16506 ;; This function calls:
 16507 ;;		_strlen
 16508 ;; This function is called by:
 16509 ;;		_enviaDadosWifi
 16510 ;; This function uses a non-reentrant model
 16511 ;;
 16512                           
 16513                           	psect	text19
 16514  004378                     __ptext19:
 16515                           	opt stack 0
 16516  004378                     _getMac:
 16517                           	opt stack 22
 16518                           
 16519                           ;conexaoWifi.h: 29: unsigned char i = 0;
 16520                           
 16521                           ;incstack = 0
 16522  004378  0E00               	movlw	0
 16523  00437A  0100               	movlb	0	; () banked
 16524  00437C  6F7B               	movwf	getMac@i& (0+255),b
 16525                           
 16526                           ;conexaoWifi.h: 30: unsigned char j = 0;
 16527  00437E  0E00               	movlw	0
 16528  004380  6F79               	movwf	getMac@j& (0+255),b
 16529                           
 16530                           ;conexaoWifi.h: 31: unsigned char men = 0;
 16531  004382  0E00               	movlw	0
 16532  004384  6F7A               	movwf	getMac@men& (0+255),b
 16533                           
 16534                           ;conexaoWifi.h: 32: for (i = 0; i < strlen(mac); i++) {
 16535  004386  0E00               	movlw	0
 16536  004388  6F7B               	movwf	getMac@i& (0+255),b
 16537  00438A  D09D               	goto	l965
 16538  00438C                     
 16539                           ; BSR set to: 0
 16540                           ;conexaoWifi.h: 33: if (mac[i] == '"' && men == 0) {
 16541                           
 16542                           ; BSR set to: 0
 16543  00438C  517B               	movf	getMac@i& (0+255),w,b
 16544  00438E  0D01               	mullw	1
 16545  004390  C073  F077         	movff	getMac@mac,??_getMac
 16546  004394  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16547  004398  50F3               	movf	prodl,w,c
 16548  00439A  2777               	addwf	??_getMac& (0+255),f,b
 16549  00439C  50F4               	movf	prodh,w,c
 16550  00439E  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16551  0043A0  C077  FFF6         	movff	??_getMac,tblptrl
 16552  0043A4  C078  FFF7         	movff	??_getMac+1,tblptrh
 16553  0043A8  6AF8               	clrf	tblptru,c
 16554  0043AA  0E07               	movlw	(high __ramtop+-1)
 16555  0043AC  64F7               	cpfsgt	tblptrh,c
 16556  0043AE  D003               	bra	u11777
 16557  0043B0  0008               	tblrd		*
 16558  0043B2  50F5               	movf	tablat,w,c
 16559  0043B4  D005               	bra	u11770
 16560  0043B6                     u11777:
 16561  0043B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 16562  0043BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 16563  0043BE  50EF               	movf	indf0,w,c
 16564  0043C0                     u11770:
 16565  0043C0  0A22               	xorlw	34
 16566  0043C2  A4D8               	btfss	status,2,c
 16567  0043C4  D007               	goto	l967
 16568  0043C6  0100               	movlb	0	; () banked
 16569  0043C8  517A               	movf	getMac@men& (0+255),w,b
 16570  0043CA  A4D8               	btfss	status,2,c
 16571  0043CC  D003               	goto	l967
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;conexaoWifi.h: 34: men = 1;
 16575  0043CE  0E01               	movlw	1
 16576  0043D0  6F7A               	movwf	getMac@men& (0+255),b
 16577                           
 16578                           ;conexaoWifi.h: 35: } else if (mac[i] == '"' && men == 1) {
 16579  0043D2  D077               	goto	l972
 16580  0043D4                     l967:
 16581                           
 16582                           ; BSR set to: 0
 16583  0043D4  0100               	movlb	0	; () banked
 16584  0043D6  517B               	movf	getMac@i& (0+255),w,b
 16585  0043D8  0D01               	mullw	1
 16586  0043DA  C073  F077         	movff	getMac@mac,??_getMac
 16587  0043DE  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16588  0043E2  50F3               	movf	prodl,w,c
 16589  0043E4  2777               	addwf	??_getMac& (0+255),f,b
 16590  0043E6  50F4               	movf	prodh,w,c
 16591  0043E8  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16592  0043EA  C077  FFF6         	movff	??_getMac,tblptrl
 16593  0043EE  C078  FFF7         	movff	??_getMac+1,tblptrh
 16594  0043F2  6AF8               	clrf	tblptru,c
 16595  0043F4  0E07               	movlw	(high __ramtop+-1)
 16596  0043F6  64F7               	cpfsgt	tblptrh,c
 16597  0043F8  D003               	bra	u11807
 16598  0043FA  0008               	tblrd		*
 16599  0043FC  50F5               	movf	tablat,w,c
 16600  0043FE  D005               	bra	u11800
 16601  004400                     u11807:
 16602  004400  CFF6 FFE9          	movff	tblptrl,fsr0l
 16603  004404  CFF7 FFEA          	movff	tblptrh,fsr0h
 16604  004408  50EF               	movf	indf0,w,c
 16605  00440A                     u11800:
 16606  00440A  0A22               	xorlw	34
 16607  00440C  A4D8               	btfss	status,2,c
 16608  00440E  D00F               	goto	l969
 16609  004410  0100               	movlb	0	; () banked
 16610  004412  057A               	decf	getMac@men& (0+255),w,b
 16611  004414  A4D8               	btfss	status,2,c
 16612  004416  D00B               	goto	l969
 16613                           
 16614                           ; BSR set to: 0
 16615                           ;conexaoWifi.h: 36: var[j] = '\0';
 16616  004418  5179               	movf	getMac@j& (0+255),w,b
 16617  00441A  0D01               	mullw	1
 16618  00441C  50F3               	movf	prodl,w,c
 16619  00441E  2575               	addwf	getMac@var& (0+255),w,b
 16620  004420  6ED9               	movwf	fsr2l,c
 16621  004422  50F4               	movf	prodh,w,c
 16622  004424  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16623  004426  6EDA               	movwf	fsr2h,c
 16624  004428  0E00               	movlw	0
 16625  00442A  6EDF               	movwf	indf2,c
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;conexaoWifi.h: 37: return;
 16629  00442C  0012               	return	
 16630  00442E                     l969:
 16631                           
 16632                           ; BSR set to: 0
 16633  00442E  0100               	movlb	0	; () banked
 16634  004430  517A               	movf	getMac@men& (0+255),w,b
 16635  004432  B4D8               	btfsc	status,2,c
 16636  004434  D046               	goto	l972
 16637                           
 16638                           ; BSR set to: 0
 16639  004436  517B               	movf	getMac@i& (0+255),w,b
 16640  004438  0D01               	mullw	1
 16641  00443A  C073  F077         	movff	getMac@mac,??_getMac
 16642  00443E  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16643  004442  50F3               	movf	prodl,w,c
 16644  004444  2777               	addwf	??_getMac& (0+255),f,b
 16645  004446  50F4               	movf	prodh,w,c
 16646  004448  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16647  00444A  C077  FFF6         	movff	??_getMac,tblptrl
 16648  00444E  C078  FFF7         	movff	??_getMac+1,tblptrh
 16649  004452  6AF8               	clrf	tblptru,c
 16650  004454  0E07               	movlw	(high __ramtop+-1)
 16651  004456  64F7               	cpfsgt	tblptrh,c
 16652  004458  D003               	bra	u11847
 16653  00445A  0008               	tblrd		*
 16654  00445C  50F5               	movf	tablat,w,c
 16655  00445E  D005               	bra	u11840
 16656  004460                     u11847:
 16657  004460  CFF6 FFE9          	movff	tblptrl,fsr0l
 16658  004464  CFF7 FFEA          	movff	tblptrh,fsr0h
 16659  004468  50EF               	movf	indf0,w,c
 16660  00446A                     u11840:
 16661  00446A  0A3A               	xorlw	58
 16662  00446C  B4D8               	btfsc	status,2,c
 16663  00446E  D029               	goto	l972
 16664  004470  0E0C               	movlw	12
 16665  004472  0100               	movlb	0	; () banked
 16666  004474  6179               	cpfslt	getMac@j& (0+255),b
 16667  004476  D025               	goto	l972
 16668                           
 16669                           ; BSR set to: 0
 16670                           ;conexaoWifi.h: 39: var[j++] = mac[i];
 16671  004478  517B               	movf	getMac@i& (0+255),w,b
 16672  00447A  0D01               	mullw	1
 16673  00447C  C073  F077         	movff	getMac@mac,??_getMac
 16674  004480  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16675  004484  50F3               	movf	prodl,w,c
 16676  004486  2777               	addwf	??_getMac& (0+255),f,b
 16677  004488  50F4               	movf	prodh,w,c
 16678  00448A  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16679  00448C  C077  FFF6         	movff	??_getMac,tblptrl
 16680  004490  C078  FFF7         	movff	??_getMac+1,tblptrh
 16681  004494  6AF8               	clrf	tblptru,c
 16682  004496  5179               	movf	getMac@j& (0+255),w,b
 16683  004498  0D01               	mullw	1
 16684  00449A  50F3               	movf	prodl,w,c
 16685  00449C  2575               	addwf	getMac@var& (0+255),w,b
 16686  00449E  6ED9               	movwf	fsr2l,c
 16687  0044A0  50F4               	movf	prodh,w,c
 16688  0044A2  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16689  0044A4  6EDA               	movwf	fsr2h,c
 16690  0044A6  0E07               	movlw	(high __ramtop+-1)
 16691  0044A8  64F7               	cpfsgt	tblptrh,c
 16692  0044AA  D003               	bra	u11877
 16693  0044AC  0008               	tblrd		*
 16694  0044AE  50F5               	movf	tablat,w,c
 16695  0044B0  D005               	bra	u11870
 16696  0044B2                     u11877:
 16697  0044B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16698  0044B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16699  0044BA  50EF               	movf	indf0,w,c
 16700  0044BC                     u11870:
 16701  0044BC  6EDF               	movwf	indf2,c
 16702  0044BE  0100               	movlb	0	; () banked
 16703  0044C0  2B79               	incf	getMac@j& (0+255),f,b
 16704  0044C2                     l972:
 16705                           
 16706                           ; BSR set to: 0
 16707                           
 16708                           ; BSR set to: 0
 16709                           
 16710                           ; BSR set to: 0
 16711  0044C2  0100               	movlb	0	; () banked
 16712  0044C4  2B7B               	incf	getMac@i& (0+255),f,b
 16713  0044C6                     l965:
 16714                           
 16715                           ; BSR set to: 0
 16716                           
 16717                           ; BSR set to: 0
 16718  0044C6  C073  F060         	movff	getMac@mac,strlen@s
 16719  0044CA  C074  F061         	movff	getMac@mac+1,strlen@s+1
 16720  0044CE  EC6E  F02C         	call	_strlen	;wreg free
 16721  0044D2  0100               	movlb	0	; () banked
 16722  0044D4  517B               	movf	getMac@i& (0+255),w,b
 16723  0044D6  6F77               	movwf	??_getMac& (0+255),b
 16724  0044D8  6B78               	clrf	(??_getMac+1)& (0+255),b
 16725  0044DA  5160               	movf	?_strlen& (0+255),w,b
 16726  0044DC  5D77               	subwf	??_getMac& (0+255),w,b
 16727  0044DE  5161               	movf	(?_strlen+1)& (0+255),w,b
 16728  0044E0  5978               	subwfb	(??_getMac+1)& (0+255),w,b
 16729  0044E2  B0D8               	btfsc	status,0,c
 16730  0044E4  0012               	return	
 16731  0044E6  D752               	goto	l966
 16732  0044E8                     __end_of_getMac:
 16733                           	opt stack 0
 16734                           tblptru	equ	0xFF8
 16735                           tblptrh	equ	0xFF7
 16736                           tblptrl	equ	0xFF6
 16737                           tablat	equ	0xFF5
 16738                           prodh	equ	0xFF4
 16739                           prodl	equ	0xFF3
 16740                           intcon	equ	0xFF2
 16741                           intcon2	equ	0xFF1
 16742                           intcon3	equ	0xFF0
 16743                           indf0	equ	0xFEF
 16744                           postinc0	equ	0xFEE
 16745                           fsr0h	equ	0xFEA
 16746                           fsr0l	equ	0xFE9
 16747                           wreg	equ	0xFE8
 16748                           postdec1	equ	0xFE5
 16749                           fsr1l	equ	0xFE1
 16750                           indf2	equ	0xFDF
 16751                           postinc2	equ	0xFDE
 16752                           postdec2	equ	0xFDD
 16753                           fsr2h	equ	0xFDA
 16754                           fsr2l	equ	0xFD9
 16755                           status	equ	0xFD8
 16756                           
 16757 ;; *************** function _criaCaracteresCGRAM *****************
 16758 ;; Defined at:
 16759 ;;		line 180 in file "src/lcd.h"
 16760 ;; Parameters:    Size  Location     Type
 16761 ;;		None
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16764 ;;  i               1   67[BANK0 ] unsigned char 
 16765 ;;  j               1   66[BANK0 ] unsigned char 
 16766 ;;  k               1   65[BANK0 ] unsigned char 
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  1    wreg      void 
 16769 ;; Registers used:
 16770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16771 ;; Tracked objects:
 16772 ;;		On entry : 0/0
 16773 ;;		On exit  : 0/0
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16776 ;;      Params:         0       0       0       0       0       0       0       0       0
 16777 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16778 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16779 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16780 ;;Total ram usage:       64 bytes
 16781 ;; Hardware stack levels used:    1
 16782 ;; Hardware stack levels required when called:    8
 16783 ;; This function calls:
 16784 ;;		_Lcd_Cmd
 16785 ;;		_Lcd_Write_Char
 16786 ;; This function is called by:
 16787 ;;		_main
 16788 ;; This function uses a non-reentrant model
 16789 ;;
 16790                           
 16791                           	psect	text20
 16792  005052                     __ptext20:
 16793                           	opt stack 0
 16794  005052                     _criaCaracteresCGRAM:
 16795                           	opt stack 22
 16796                           
 16797                           ;lcd.h: 187: const char character[7][8] = {
 16798                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16799                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16800                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16801                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16802                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16803                           ;lcd.h: 196: };
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;incstack = 0
 16807  005052  0E6F               	movlw	low criaCaracteresCGRAM@F3896
 16808  005054  6EF6               	movwf	tblptrl,c
 16809  005056                     	if	1	;There is more than 1 active tblptr byte
 16810  005056  0E77               	movlw	high criaCaracteresCGRAM@F3896
 16811  005058  6EF7               	movwf	tblptrh,c
 16812  00505A                     	endif
 16813  00505A                     	if	0	;There are less than 3 active tblptr bytes
 16814  00505A                     	endif
 16815  00505A  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16816  00505E  0E37               	movlw	55
 16817  005060                     u12570:
 16818  005060  0009               	tblrd		*+
 16819  005062  CFF5 FFDE          	movff	tablat,postinc2
 16820  005066  06E8               	decf	wreg,f,c
 16821  005068  E2FB               	bc	u12570
 16822                           
 16823                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16824  00506A  0E04               	movlw	4
 16825  00506C  ECE4  F02E         	call	_Lcd_Cmd
 16826                           
 16827                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16828  005070  0E00               	movlw	0
 16829  005072  ECE4  F02E         	call	_Lcd_Cmd
 16830                           
 16831                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16832  005076  0E21               	movlw	33
 16833  005078                     u15387:
 16834  005078  2EE8               	decfsz	wreg,f,c
 16835  00507A  D7FE               	bra	u15387
 16836  00507C  F000               	nop	
 16837                           
 16838                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16839  00507E  0E00               	movlw	0
 16840  005080  0100               	movlb	0	; () banked
 16841  005082  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16842                           
 16843                           ; BSR set to: 0
 16844  005084  0E00               	movlw	0
 16845  005086  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16846                           
 16847                           ; BSR set to: 0
 16848  005088  0E00               	movlw	0
 16849  00508A  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16853  00508C  0E00               	movlw	0
 16854  00508E  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16855  005090                     l8295:
 16856                           
 16857                           ; BSR set to: 0
 16858  005090  0E04               	movlw	4
 16859  005092  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16860  005094  D001               	goto	l267
 16861  005096  0012               	return	
 16862  005098                     l267:
 16863                           
 16864                           ; BSR set to: 0
 16865                           ;lcd.h: 202: if (k == 1) i = 0;
 16866                           
 16867                           ; BSR set to: 0
 16868  005098  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16869  00509A  A4D8               	btfss	status,2,c
 16870  00509C  D002               	goto	l269
 16871                           
 16872                           ; BSR set to: 0
 16873  00509E  0E00               	movlw	0
 16874  0050A0  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16875  0050A2                     l269:
 16876                           
 16877                           ; BSR set to: 0
 16878                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16879  0050A2  0E00               	movlw	0
 16880  0050A4  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16881  0050A6                     l8303:
 16882                           
 16883                           ; BSR set to: 0
 16884  0050A6  0E07               	movlw	7
 16885  0050A8  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16886  0050AA  D001               	goto	l270
 16887  0050AC  D025               	goto	u12620
 16888  0050AE                     l270:
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16892                           
 16893                           ; BSR set to: 0
 16894  0050AE  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16895  0050B0  A4D8               	btfss	status,2,c
 16896  0050B2  D005               	goto	l273
 16897                           
 16898                           ; BSR set to: 0
 16899  0050B4  0E00               	movlw	0
 16900  0050B6  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16901  0050B8  0E00               	movlw	0
 16902  0050BA  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16903  0050BC  D017               	goto	l275
 16904  0050BE                     l273:
 16905                           
 16906                           ; BSR set to: 0
 16907                           
 16908                           ; BSR set to: 0
 16909  0050BE  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16910  0050C0  0D08               	mullw	8
 16911  0050C2  0E67               	movlw	low criaCaracteresCGRAM@character
 16912  0050C4  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16913  0050C6  0E00               	movlw	high criaCaracteresCGRAM@character
 16914  0050C8  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16915  0050CA  50F3               	movf	prodl,w,c
 16916  0050CC  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16917  0050CE  50F4               	movf	prodh,w,c
 16918  0050D0  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16919  0050D2  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16920  0050D4  0D01               	mullw	1
 16921  0050D6  50F3               	movf	prodl,w,c
 16922  0050D8  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16923  0050DA  6ED9               	movwf	fsr2l,c
 16924  0050DC  50F4               	movf	prodh,w,c
 16925  0050DE  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16926  0050E0  6EDA               	movwf	fsr2h,c
 16927  0050E2  50DF               	movf	indf2,w,c
 16928  0050E4  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16929  0050E6  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16930  0050E8  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16931  0050EA  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16932  0050EC                     l275:
 16933                           
 16934                           ; BSR set to: 0
 16935                           
 16936                           ; BSR set to: 0
 16937  0050EC  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16938  0050EE  EC95  F02D         	call	_Lcd_Write_Char
 16939  0050F2  0100               	movlb	0	; () banked
 16940  0050F4  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16941  0050F6  D7D7               	goto	l8303
 16942  0050F8                     u12620:
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;lcd.h: 205: }
 16946                           ;lcd.h: 206: k++;
 16947                           
 16948                           ; BSR set to: 0
 16949  0050F8  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16950  0050FA  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16951  0050FC  D7C9               	goto	l8295
 16952  0050FE                     __end_of_criaCaracteresCGRAM:
 16953                           	opt stack 0
 16954                           tblptru	equ	0xFF8
 16955                           tblptrh	equ	0xFF7
 16956                           tblptrl	equ	0xFF6
 16957                           tablat	equ	0xFF5
 16958                           prodh	equ	0xFF4
 16959                           prodl	equ	0xFF3
 16960                           intcon	equ	0xFF2
 16961                           intcon2	equ	0xFF1
 16962                           intcon3	equ	0xFF0
 16963                           indf0	equ	0xFEF
 16964                           postinc0	equ	0xFEE
 16965                           fsr0h	equ	0xFEA
 16966                           fsr0l	equ	0xFE9
 16967                           wreg	equ	0xFE8
 16968                           postdec1	equ	0xFE5
 16969                           fsr1l	equ	0xFE1
 16970                           indf2	equ	0xFDF
 16971                           postinc2	equ	0xFDE
 16972                           postdec2	equ	0xFDD
 16973                           fsr2h	equ	0xFDA
 16974                           fsr2l	equ	0xFD9
 16975                           status	equ	0xFD8
 16976                           
 16977 ;; *************** function _controle *****************
 16978 ;; Defined at:
 16979 ;;		line 148 in file "src/Controle.h"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;		None
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;		None
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      void 
 16986 ;; Registers used:
 16987 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16993 ;;      Params:         0       0       0       0       0       0       0       0       0
 16994 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16995 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16996 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16997 ;;Total ram usage:        7 bytes
 16998 ;; Hardware stack levels used:    1
 16999 ;; Hardware stack levels required when called:    8
 17000 ;; This function calls:
 17001 ;;		_acaoFlap
 17002 ;;		_setLed
 17003 ;; This function is called by:
 17004 ;;		_main
 17005 ;; This function uses a non-reentrant model
 17006 ;;
 17007                           
 17008                           	psect	text21
 17009  003AEC                     __ptext21:
 17010                           	opt stack 0
 17011  003AEC                     _controle:
 17012                           	opt stack 22
 17013                           
 17014                           ;Controle.h: 150: if (f_falta_energia == 0) {
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;incstack = 0
 17018  003AEC  0100               	movlb	0	; () banked
 17019  003AEE  51FE               	movf	_f_falta_energia& (0+255),w,b
 17020  003AF0  A4D8               	btfss	status,2,c
 17021  003AF2  D02B               	goto	l1156
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;Controle.h: 151: LATBbits.LATB5 = blinkk;
 17025  003AF4  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17026  003AF6  D002               	bra	u13695
 17027  003AF8  8A8A               	bsf	3978,5,c	;volatile
 17028  003AFA  D001               	bra	u13697
 17029  003AFC                     u13695:
 17030  003AFC  9A8A               	bcf	3978,5,c	;volatile
 17031  003AFE                     u13697:
 17032                           
 17033                           ;Controle.h: 152: LATEbits.LE0 = 0;
 17034  003AFE  908D               	bcf	3981,0,c	;volatile
 17035                           
 17036                           ;Controle.h: 153: LATDbits.LD0 = 1;
 17037  003B00  808C               	bsf	3980,0,c	;volatile
 17038                           
 17039                           ;Controle.h: 154: LATDbits.LD1 = 0;
 17040  003B02  928C               	bcf	3980,1,c	;volatile
 17041                           
 17042                           ;Controle.h: 155: acaoFlap(1, 10, 0);
 17043  003B04  0E00               	movlw	0
 17044  003B06  0100               	movlb	0	; () banked
 17045  003B08  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17046  003B0A  0E0A               	movlw	10
 17047  003B0C  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17048  003B0E  0E00               	movlw	0
 17049  003B10  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17050  003B12  0E00               	movlw	0
 17051  003B14  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17052  003B16  0E01               	movlw	1
 17053  003B18  EC4B  F02A         	call	_acaoFlap
 17054                           
 17055                           ;Controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 17056  003B1C  0441               	decf	_f_buzzer_falta_energia,w,c
 17057  003B1E  A4D8               	btfss	status,2,c
 17058  003B20  D008               	goto	l1157
 17059  003B22  0100               	movlb	0	; () banked
 17060  003B24  51FA               	movf	_buzzer& (0+255),w,b
 17061  003B26  A4D8               	btfss	status,2,c
 17062  003B28  D004               	goto	l1157
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;Controle.h: 157: buzzer = 1;
 17066  003B2A  0E01               	movlw	1
 17067  003B2C  6FFA               	movwf	_buzzer& (0+255),b
 17068                           
 17069                           ;Controle.h: 158: f_buzzer_falta_energia = 0;
 17070  003B2E  0E00               	movlw	0
 17071  003B30  6E41               	movwf	_f_buzzer_falta_energia,c
 17072  003B32                     l1157:
 17073                           
 17074                           ;Controle.h: 159: }
 17075                           ;Controle.h: 160: if (buzzer) {
 17076  003B32  0100               	movlb	0	; () banked
 17077  003B34  51FA               	movf	_buzzer& (0+255),w,b
 17078  003B36  B4D8               	btfsc	status,2,c
 17079  003B38  D006               	goto	l1158
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;Controle.h: 161: LATCbits.LC1 = blinkk;
 17083  003B3A  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17084  003B3C  D002               	bra	u13735
 17085  003B3E  828B               	bsf	3979,1,c	;volatile
 17086  003B40  D001               	bra	u13737
 17087  003B42                     u13735:
 17088  003B42  928B               	bcf	3979,1,c	;volatile
 17089  003B44                     u13737:
 17090                           
 17091                           ;Controle.h: 162: } else {
 17092  003B44  0012               	return	
 17093  003B46                     l1158:
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;Controle.h: 163: LATCbits.LC1 = 0;
 17097  003B46  928B               	bcf	3979,1,c	;volatile
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;Controle.h: 164: }
 17101                           ;Controle.h: 165: return;
 17102  003B48  0012               	return	
 17103  003B4A                     l1156:
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;Controle.h: 167: f_buzzer_falta_energia = 1;
 17107                           
 17108                           ; BSR set to: 0
 17109  003B4A  0E01               	movlw	1
 17110  003B4C  6E41               	movwf	_f_buzzer_falta_energia,c
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;Controle.h: 168: }
 17114                           ;Controle.h: 172: LATBbits.LATB5 = 1;
 17115                           
 17116                           ; BSR set to: 0
 17117  003B4E  8A8A               	bsf	3978,5,c	;volatile
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;Controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 17121  003B50  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17122  003B52  C0FD  F068         	movff	_temp,??_controle
 17123  003B56  6B69               	clrf	(??_controle+1)& (0+255),b
 17124  003B58  2768               	addwf	??_controle& (0+255),f,b
 17125  003B5A  0E00               	movlw	0
 17126  003B5C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17127  003B5E  51EA               	movf	_tempajt& (0+255),w,b
 17128  003B60  6F6A               	movwf	(??_controle+2)& (0+255),b
 17129  003B62  6B6B               	clrf	(??_controle+3)& (0+255),b
 17130  003B64  5168               	movf	??_controle& (0+255),w,b
 17131  003B66  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17132  003B68  516B               	movf	(??_controle+3)& (0+255),w,b
 17133  003B6A  0A80               	xorlw	128
 17134  003B6C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17135  003B6E  5169               	movf	(??_controle+1)& (0+255),w,b
 17136  003B70  0A80               	xorlw	128
 17137  003B72  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17138  003B74  B0D8               	btfsc	status,0,c
 17139  003B76  D01B               	goto	u13750
 17140                           
 17141                           ; BSR set to: 0
 17142  003B78  51EA               	movf	_tempajt& (0+255),w,b
 17143  003B7A  6F68               	movwf	??_controle& (0+255),b
 17144  003B7C  6B69               	clrf	(??_controle+1)& (0+255),b
 17145  003B7E  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17146  003B80  6F6A               	movwf	(??_controle+2)& (0+255),b
 17147  003B82  6B6B               	clrf	(??_controle+3)& (0+255),b
 17148  003B84  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17149  003B86  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17150  003B88  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17151  003B8A  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17152  003B8C  51FD               	movf	_temp& (0+255),w,b
 17153  003B8E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17154  003B90  6B6D               	clrf	(??_controle+5)& (0+255),b
 17155  003B92  516A               	movf	(??_controle+2)& (0+255),w,b
 17156  003B94  276C               	addwf	(??_controle+4)& (0+255),f,b
 17157  003B96  516B               	movf	(??_controle+3)& (0+255),w,b
 17158  003B98  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17159  003B9A  5168               	movf	??_controle& (0+255),w,b
 17160  003B9C  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17161  003B9E  516D               	movf	(??_controle+5)& (0+255),w,b
 17162  003BA0  0A80               	xorlw	128
 17163  003BA2  6F6E               	movwf	(??_controle+6)& (0+255),b
 17164  003BA4  5169               	movf	(??_controle+1)& (0+255),w,b
 17165  003BA6  0A80               	xorlw	128
 17166  003BA8  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17167  003BAA  A0D8               	btfss	status,0,c
 17168  003BAC  D024               	goto	l1162
 17169  003BAE                     u13750:
 17170                           
 17171                           ; BSR set to: 0
 17172                           
 17173                           ; BSR set to: 0
 17174  003BAE  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17175  003BB0  B4D8               	btfsc	status,2,c
 17176  003BB2  D021               	goto	l1162
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;Controle.h: 175: setLed(8, 1);
 17180  003BB4  0E01               	movlw	1
 17181  003BB6  6F60               	movwf	setLed@acao& (0+255),b
 17182  003BB8  0E08               	movlw	8
 17183  003BBA  EC1A  F02F         	call	_setLed
 17184                           
 17185                           ;Controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 17186  003BBE  0E00               	movlw	0
 17187  003BC0  0100               	movlb	0	; () banked
 17188  003BC2  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17189  003BC4  0E0A               	movlw	10
 17190  003BC6  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17191  003BC8  0E00               	movlw	0
 17192  003BCA  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17193  003BCC  0E00               	movlw	0
 17194  003BCE  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17195  003BD0  0E00               	movlw	0
 17196  003BD2  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17197  003BD4  0E01               	movlw	1
 17198  003BD6  EC4B  F02A         	call	_acaoFlap
 17199                           
 17200                           ;Controle.h: 177: if (t_controle_modo_seguranca == 0) {
 17201  003BDA  5033               	movf	_t_controle_modo_seguranca,w,c
 17202  003BDC  1034               	iorwf	_t_controle_modo_seguranca+1,w,c
 17203  003BDE  A4D8               	btfss	status,2,c
 17204  003BE0  D043               	goto	l1169
 17205                           
 17206                           ;Controle.h: 178: t_controle_modo_seguranca = 1800;
 17207  003BE2  0E07               	movlw	7
 17208  003BE4  6E34               	movwf	_t_controle_modo_seguranca+1,c
 17209  003BE6  0E08               	movlw	8
 17210  003BE8  6E33               	movwf	_t_controle_modo_seguranca,c
 17211                           
 17212                           ;Controle.h: 179: md_seguranca = ~md_seguranca;
 17213  003BEA  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17214  003BEC  D002               	goto	u13780
 17215  003BEE  824F               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17216  003BF0  D03B               	goto	l1169
 17217  003BF2                     u13780:
 17218  003BF2  924F               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17219                           
 17220                           ;Controle.h: 180: }
 17221                           ;Controle.h: 181: } else {
 17222  003BF4  D039               	goto	l1169
 17223  003BF6                     l1162:
 17224                           
 17225                           ;Controle.h: 182: setLed(8, 0);
 17226  003BF6  0E00               	movlw	0
 17227  003BF8  0100               	movlb	0	; () banked
 17228  003BFA  6F60               	movwf	setLed@acao& (0+255),b
 17229  003BFC  0E08               	movlw	8
 17230  003BFE  EC1A  F02F         	call	_setLed
 17231                           
 17232                           ;Controle.h: 183: if (umid >= (umidajt + h_flap)) {
 17233  003C02  0101               	movlb	1	; () banked
 17234  003C04  51F4               	movf	_h_flap& (0+255),w,b
 17235  003C06  C0E9  F068         	movff	_umidajt,??_controle
 17236  003C0A  0100               	movlb	0	; () banked
 17237  003C0C  6B69               	clrf	(??_controle+1)& (0+255),b
 17238  003C0E  2768               	addwf	??_controle& (0+255),f,b
 17239  003C10  0E00               	movlw	0
 17240  003C12  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17241  003C14  51FC               	movf	_umid& (0+255),w,b
 17242  003C16  6F6A               	movwf	(??_controle+2)& (0+255),b
 17243  003C18  6B6B               	clrf	(??_controle+3)& (0+255),b
 17244  003C1A  5168               	movf	??_controle& (0+255),w,b
 17245  003C1C  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17246  003C1E  516B               	movf	(??_controle+3)& (0+255),w,b
 17247  003C20  0A80               	xorlw	128
 17248  003C22  6F6C               	movwf	(??_controle+4)& (0+255),b
 17249  003C24  5169               	movf	(??_controle+1)& (0+255),w,b
 17250  003C26  0A80               	xorlw	128
 17251  003C28  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17252  003C2A  A0D8               	btfss	status,0,c
 17253  003C2C  D00D               	goto	l1167
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;Controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 17257  003C2E  C0F5  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 17258  003C32  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17259  003C34  51F4               	movf	_t_flap_intervalo& (0+255),w,b
 17260  003C36  0D0A               	mullw	10
 17261  003C38  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 17262  003C3C  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 17263  003C40  0E01               	movlw	1
 17264  003C42  EC4B  F02A         	call	_acaoFlap
 17265                           
 17266                           ;Controle.h: 185: } else if (umid <= umidajt) {
 17267  003C46  D010               	goto	l1169
 17268  003C48                     l1167:
 17269  003C48  0100               	movlb	0	; () banked
 17270  003C4A  51FC               	movf	_umid& (0+255),w,b
 17271  003C4C  5DE9               	subwf	_umidajt& (0+255),w,b
 17272  003C4E  A0D8               	btfss	status,0,c
 17273  003C50  D00B               	goto	l1169
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;Controle.h: 186: acaoFlap(0, 200, 600);
 17277  003C52  0E00               	movlw	0
 17278  003C54  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17279  003C56  0EC8               	movlw	200
 17280  003C58  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17281  003C5A  0E02               	movlw	2
 17282  003C5C  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17283  003C5E  0E58               	movlw	88
 17284  003C60  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17285  003C62  0E00               	movlw	0
 17286  003C64  EC4B  F02A         	call	_acaoFlap
 17287  003C68                     l1169:
 17288                           
 17289                           ;Controle.h: 187: }
 17290                           ;Controle.h: 188: }
 17291                           ;Controle.h: 189: if (temp > 0) {
 17292  003C68  0100               	movlb	0	; () banked
 17293  003C6A  51FD               	movf	_temp& (0+255),w,b
 17294  003C6C  B4D8               	btfsc	status,2,c
 17295  003C6E  D03D               	goto	l1170
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;Controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 17299  003C70  51EF               	movf	_h_abafador& (0+255),w,b
 17300  003C72  C0FD  F068         	movff	_temp,??_controle
 17301  003C76  6B69               	clrf	(??_controle+1)& (0+255),b
 17302  003C78  2768               	addwf	??_controle& (0+255),f,b
 17303  003C7A  0E00               	movlw	0
 17304  003C7C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17305  003C7E  51EA               	movf	_tempajt& (0+255),w,b
 17306  003C80  6F6A               	movwf	(??_controle+2)& (0+255),b
 17307  003C82  6B6B               	clrf	(??_controle+3)& (0+255),b
 17308  003C84  5168               	movf	??_controle& (0+255),w,b
 17309  003C86  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17310  003C88  516B               	movf	(??_controle+3)& (0+255),w,b
 17311  003C8A  0A80               	xorlw	128
 17312  003C8C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17313  003C8E  5169               	movf	(??_controle+1)& (0+255),w,b
 17314  003C90  0A80               	xorlw	128
 17315  003C92  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17316  003C94  A0D8               	btfss	status,0,c
 17317  003C96  D002               	goto	l1171
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;Controle.h: 191: LATEbits.LE0 = 1;
 17321  003C98  808D               	bsf	3981,0,c	;volatile
 17322  003C9A  D008               	goto	L30
 17323  003C9C                     l1171:
 17324                           
 17325                           ; BSR set to: 0
 17326                           
 17327                           ; BSR set to: 0
 17328  003C9C  51EA               	movf	_tempajt& (0+255),w,b
 17329  003C9E  5DFD               	subwf	_temp& (0+255),w,b
 17330  003CA0  A0D8               	btfss	status,0,c
 17331  003CA2  D003               	goto	l1173
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;Controle.h: 194: LATEbits.LE0 = 0;
 17335  003CA4  908D               	bcf	3981,0,c	;volatile
 17336                           
 17337                           ;Controle.h: 195: LATDbits.LD0 = 1;
 17338  003CA6  808C               	bsf	3980,0,c	;volatile
 17339                           
 17340                           ;Controle.h: 196: } else {
 17341  003CA8  D002               	goto	l1174
 17342  003CAA                     l1173:
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;Controle.h: 197: LATEbits.LE0 = 0;
 17346  003CAA  908D               	bcf	3981,0,c	;volatile
 17347  003CAC                     L30:
 17348                           
 17349                           ;Controle.h: 198: LATDbits.LD0 = 0;
 17350  003CAC  908C               	bcf	3980,0,c	;volatile
 17351  003CAE                     l1174:
 17352                           
 17353                           ; BSR set to: 0
 17354                           ;Controle.h: 199: }
 17355                           ;Controle.h: 201: if (fornalha == 1) {
 17356                           
 17357                           ; BSR set to: 0
 17358                           
 17359                           ; BSR set to: 0
 17360  003CAE  05F9               	decf	_fornalha& (0+255),w,b
 17361  003CB0  A4D8               	btfss	status,2,c
 17362  003CB2  D01D               	goto	L31
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;Controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 17366  003CB4  51F0               	movf	_h_venotinha& (0+255),w,b
 17367  003CB6  C0FD  F068         	movff	_temp,??_controle
 17368  003CBA  6B69               	clrf	(??_controle+1)& (0+255),b
 17369  003CBC  2768               	addwf	??_controle& (0+255),f,b
 17370  003CBE  0E00               	movlw	0
 17371  003CC0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17372  003CC2  51EA               	movf	_tempajt& (0+255),w,b
 17373  003CC4  6F6A               	movwf	(??_controle+2)& (0+255),b
 17374  003CC6  6B6B               	clrf	(??_controle+3)& (0+255),b
 17375  003CC8  5168               	movf	??_controle& (0+255),w,b
 17376  003CCA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17377  003CCC  516B               	movf	(??_controle+3)& (0+255),w,b
 17378  003CCE  0A80               	xorlw	128
 17379  003CD0  6F6C               	movwf	(??_controle+4)& (0+255),b
 17380  003CD2  5169               	movf	(??_controle+1)& (0+255),w,b
 17381  003CD4  0A80               	xorlw	128
 17382  003CD6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17383  003CD8  A0D8               	btfss	status,0,c
 17384  003CDA  D002               	goto	l1176
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;Controle.h: 203: LATDbits.LD1 = 1;
 17388  003CDC  828C               	bsf	3980,1,c	;volatile
 17389                           
 17390                           ;Controle.h: 205: } else if (temp >= tempajt) {
 17391  003CDE  D008               	goto	l1180
 17392  003CE0                     l1176:
 17393                           
 17394                           ; BSR set to: 0
 17395                           
 17396                           ; BSR set to: 0
 17397  003CE0  51EA               	movf	_tempajt& (0+255),w,b
 17398  003CE2  5DFD               	subwf	_temp& (0+255),w,b
 17399  003CE4  A0D8               	btfss	status,0,c
 17400  003CE6  D004               	goto	l1180
 17401  003CE8  D002               	goto	L31
 17402  003CEA                     l1170:
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;Controle.h: 213: LATEbits.LE0 = 0;
 17406  003CEA  908D               	bcf	3981,0,c	;volatile
 17407                           
 17408                           ;Controle.h: 214: LATDbits.LD0 = 1;
 17409  003CEC  808C               	bsf	3980,0,c	;volatile
 17410  003CEE                     L31:
 17411                           
 17412                           ;Controle.h: 215: LATDbits.LD1 = 0;
 17413  003CEE  928C               	bcf	3980,1,c	;volatile
 17414  003CF0                     l1180:
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;Controle.h: 216: }
 17418                           ;Controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 17419                           
 17420                           ; BSR set to: 0
 17421  003CF0  05F9               	decf	_fornalha& (0+255),w,b
 17422  003CF2  A4D8               	btfss	status,2,c
 17423  003CF4  D007               	goto	l1181
 17424                           
 17425                           ; BSR set to: 0
 17426  003CF6  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17427  003CF8  B4D8               	btfsc	status,2,c
 17428  003CFA  D004               	goto	l1181
 17429                           
 17430                           ; BSR set to: 0
 17431                           ;Controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 17432  003CFC  C0F2  F035         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 17433  003D00  6A36               	clrf	_t_controle_religar_ventoinha+1,c
 17434                           
 17435                           ;Controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 17436  003D02  D009               	goto	l1183
 17437  003D04                     l1181:
 17438                           
 17439                           ; BSR set to: 0
 17440                           
 17441                           ; BSR set to: 0
 17442  003D04  5035               	movf	_t_controle_religar_ventoinha,w,c
 17443  003D06  1036               	iorwf	_t_controle_religar_ventoinha+1,w,c
 17444  003D08  A4D8               	btfss	status,2,c
 17445  003D0A  D005               	goto	l1183
 17446                           
 17447                           ; BSR set to: 0
 17448  003D0C  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17449  003D0E  B4D8               	btfsc	status,2,c
 17450  003D10  D002               	goto	l1183
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;Controle.h: 222: fornalha = 1;
 17454  003D12  0E01               	movlw	1
 17455  003D14  6FF9               	movwf	_fornalha& (0+255),b
 17456  003D16                     l1183:
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;Controle.h: 223: }
 17460                           ;Controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 17461                           
 17462                           ; BSR set to: 0
 17463                           
 17464                           ; BSR set to: 0
 17465  003D16  05FA               	decf	_buzzer& (0+255),w,b
 17466  003D18  A4D8               	btfss	status,2,c
 17467  003D1A  D043               	goto	l1188
 17468                           
 17469                           ; BSR set to: 0
 17470  003D1C  503F               	movf	_t_controle_buzzer,w,c
 17471  003D1E  A4D8               	btfss	status,2,c
 17472  003D20  D040               	goto	l1188
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;Controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 17476  003D22  51EE               	movf	_h_buzzer& (0+255),w,b
 17477  003D24  C0FD  F068         	movff	_temp,??_controle
 17478  003D28  6B69               	clrf	(??_controle+1)& (0+255),b
 17479  003D2A  2768               	addwf	??_controle& (0+255),f,b
 17480  003D2C  0E00               	movlw	0
 17481  003D2E  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17482  003D30  51EA               	movf	_tempajt& (0+255),w,b
 17483  003D32  6F6A               	movwf	(??_controle+2)& (0+255),b
 17484  003D34  6B6B               	clrf	(??_controle+3)& (0+255),b
 17485  003D36  5168               	movf	??_controle& (0+255),w,b
 17486  003D38  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17487  003D3A  516B               	movf	(??_controle+3)& (0+255),w,b
 17488  003D3C  0A80               	xorlw	128
 17489  003D3E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17490  003D40  5169               	movf	(??_controle+1)& (0+255),w,b
 17491  003D42  0A80               	xorlw	128
 17492  003D44  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17493  003D46  B0D8               	btfsc	status,0,c
 17494  003D48  D01B               	goto	u13950
 17495                           
 17496                           ; BSR set to: 0
 17497  003D4A  51EA               	movf	_tempajt& (0+255),w,b
 17498  003D4C  6F68               	movwf	??_controle& (0+255),b
 17499  003D4E  6B69               	clrf	(??_controle+1)& (0+255),b
 17500  003D50  51EE               	movf	_h_buzzer& (0+255),w,b
 17501  003D52  6F6A               	movwf	(??_controle+2)& (0+255),b
 17502  003D54  6B6B               	clrf	(??_controle+3)& (0+255),b
 17503  003D56  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17504  003D58  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17505  003D5A  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17506  003D5C  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17507  003D5E  51FD               	movf	_temp& (0+255),w,b
 17508  003D60  6F6C               	movwf	(??_controle+4)& (0+255),b
 17509  003D62  6B6D               	clrf	(??_controle+5)& (0+255),b
 17510  003D64  516A               	movf	(??_controle+2)& (0+255),w,b
 17511  003D66  276C               	addwf	(??_controle+4)& (0+255),f,b
 17512  003D68  516B               	movf	(??_controle+3)& (0+255),w,b
 17513  003D6A  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17514  003D6C  5168               	movf	??_controle& (0+255),w,b
 17515  003D6E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17516  003D70  516D               	movf	(??_controle+5)& (0+255),w,b
 17517  003D72  0A80               	xorlw	128
 17518  003D74  6F6E               	movwf	(??_controle+6)& (0+255),b
 17519  003D76  5169               	movf	(??_controle+1)& (0+255),w,b
 17520  003D78  0A80               	xorlw	128
 17521  003D7A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17522  003D7C  A0D8               	btfss	status,0,c
 17523  003D7E  D010               	goto	l1185
 17524  003D80                     u13950:
 17525                           
 17526                           ; BSR set to: 0
 17527                           ;Controle.h: 228: t_controle_buzzer = 10;
 17528                           
 17529                           ; BSR set to: 0
 17530  003D80  0E0A               	movlw	10
 17531  003D82  6E3F               	movwf	_t_controle_buzzer,c
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;Controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 17535  003D84  A28B               	btfss	3979,1,c	;volatile
 17536  003D86  D002               	goto	u13960
 17537  003D88  0E01               	movlw	1
 17538  003D8A  D001               	goto	u13966
 17539  003D8C                     u13960:
 17540  003D8C  0E00               	movlw	0
 17541  003D8E                     u13966:
 17542  003D8E  0AFF               	xorlw	255
 17543  003D90  6F68               	movwf	??_controle& (0+255),b
 17544  003D92  4768               	rlncf	??_controle& (0+255),f,b
 17545  003D94  508B               	movf	3979,w,c	;volatile
 17546  003D96  1968               	xorwf	??_controle& (0+255),w,b
 17547  003D98  0BFD               	andlw	-3
 17548  003D9A  1968               	xorwf	??_controle& (0+255),w,b
 17549  003D9C  6E8B               	movwf	3979,c	;volatile
 17550                           
 17551                           ;Controle.h: 230: } else {
 17552  003D9E  D001               	goto	l1188
 17553  003DA0                     l1185:
 17554                           
 17555                           ; BSR set to: 0
 17556                           ;Controle.h: 231: LATCbits.LC1 = 0;
 17557  003DA0  928B               	bcf	3979,1,c	;volatile
 17558  003DA2                     l1188:
 17559                           
 17560                           ; BSR set to: 0
 17561                           ;Controle.h: 232: }
 17562                           ;Controle.h: 233: }
 17563                           ;Controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 17564                           
 17565                           ; BSR set to: 0
 17566                           
 17567                           ; BSR set to: 0
 17568  003DA2  05FA               	decf	_buzzer& (0+255),w,b
 17569  003DA4  A4D8               	btfss	status,2,c
 17570  003DA6  D007               	goto	l1189
 17571                           
 17572                           ; BSR set to: 0
 17573  003DA8  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17574  003DAA  B4D8               	btfsc	status,2,c
 17575  003DAC  D004               	goto	l1189
 17576                           
 17577                           ; BSR set to: 0
 17578                           ;Controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 17579  003DAE  C0FF  F037         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 17580  003DB2  6A38               	clrf	_t_controle_religar_buzzer+1,c
 17581                           
 17582                           ;Controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 17583  003DB4  D009               	goto	l1191
 17584  003DB6                     l1189:
 17585                           
 17586                           ; BSR set to: 0
 17587                           
 17588                           ; BSR set to: 0
 17589  003DB6  5037               	movf	_t_controle_religar_buzzer,w,c
 17590  003DB8  1038               	iorwf	_t_controle_religar_buzzer+1,w,c
 17591  003DBA  A4D8               	btfss	status,2,c
 17592  003DBC  D005               	goto	l1191
 17593                           
 17594                           ; BSR set to: 0
 17595  003DBE  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17596  003DC0  B4D8               	btfsc	status,2,c
 17597  003DC2  D002               	goto	l1191
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;Controle.h: 237: buzzer = 1;
 17601  003DC4  0E01               	movlw	1
 17602  003DC6  6FFA               	movwf	_buzzer& (0+255),b
 17603  003DC8                     l1191:
 17604                           
 17605                           ; BSR set to: 0
 17606                           ;Controle.h: 238: }
 17607                           ;Controle.h: 239: if (!buzzer) {
 17608                           
 17609                           ; BSR set to: 0
 17610  003DC8  51FA               	movf	_buzzer& (0+255),w,b
 17611  003DCA  B4D8               	btfsc	status,2,c
 17612                           
 17613                           ; BSR set to: 0
 17614                           ;Controle.h: 240: LATCbits.LC1 = 0;
 17615  003DCC  928B               	bcf	3979,1,c	;volatile
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;Controle.h: 241: }
 17619                           ;Controle.h: 245: if (temp + 3 < tempajt) {
 17620                           
 17621                           ; BSR set to: 0
 17622  003DCE  51EA               	movf	_tempajt& (0+255),w,b
 17623  003DD0  6F68               	movwf	??_controle& (0+255),b
 17624  003DD2  6B69               	clrf	(??_controle+1)& (0+255),b
 17625  003DD4  51FD               	movf	_temp& (0+255),w,b
 17626  003DD6  6F6A               	movwf	(??_controle+2)& (0+255),b
 17627  003DD8  6B6B               	clrf	(??_controle+3)& (0+255),b
 17628  003DDA  0E03               	movlw	3
 17629  003DDC  276A               	addwf	(??_controle+2)& (0+255),f,b
 17630  003DDE  0E00               	movlw	0
 17631  003DE0  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17632  003DE2  5168               	movf	??_controle& (0+255),w,b
 17633  003DE4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17634  003DE6  516B               	movf	(??_controle+3)& (0+255),w,b
 17635  003DE8  0A80               	xorlw	128
 17636  003DEA  6F6C               	movwf	(??_controle+4)& (0+255),b
 17637  003DEC  5169               	movf	(??_controle+1)& (0+255),w,b
 17638  003DEE  0A80               	xorlw	128
 17639  003DF0  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17640  003DF2  B0D8               	btfsc	status,0,c
 17641  003DF4  D00C               	goto	l1193
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;Controle.h: 246: setLed(16, 1);
 17645  003DF6  0E01               	movlw	1
 17646  003DF8  6F60               	movwf	setLed@acao& (0+255),b
 17647  003DFA  0E10               	movlw	16
 17648  003DFC  EC1A  F02F         	call	_setLed
 17649                           
 17650                           ;Controle.h: 247: setLed(32, 0);
 17651  003E00  0E00               	movlw	0
 17652  003E02  0100               	movlb	0	; () banked
 17653  003E04  6F60               	movwf	setLed@acao& (0+255),b
 17654  003E06  0E20               	movlw	32
 17655  003E08  EC1A  F02F         	call	_setLed
 17656                           
 17657                           ;Controle.h: 248: } else if (temp - 3 > tempajt) {
 17658  003E0C  D031               	goto	l1196
 17659  003E0E                     l1193:
 17660  003E0E  0EFD               	movlw	253
 17661  003E10  0100               	movlb	0	; () banked
 17662  003E12  6F68               	movwf	??_controle& (0+255),b
 17663  003E14  0EFF               	movlw	255
 17664  003E16  6F69               	movwf	(??_controle+1)& (0+255),b
 17665  003E18  51FD               	movf	_temp& (0+255),w,b
 17666  003E1A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17667  003E1C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17668  003E1E  5168               	movf	??_controle& (0+255),w,b
 17669  003E20  276A               	addwf	(??_controle+2)& (0+255),f,b
 17670  003E22  5169               	movf	(??_controle+1)& (0+255),w,b
 17671  003E24  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17672  003E26  51EA               	movf	_tempajt& (0+255),w,b
 17673  003E28  6F6C               	movwf	(??_controle+4)& (0+255),b
 17674  003E2A  6B6D               	clrf	(??_controle+5)& (0+255),b
 17675  003E2C  516A               	movf	(??_controle+2)& (0+255),w,b
 17676  003E2E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17677  003E30  516D               	movf	(??_controle+5)& (0+255),w,b
 17678  003E32  0A80               	xorlw	128
 17679  003E34  6F6E               	movwf	(??_controle+6)& (0+255),b
 17680  003E36  516B               	movf	(??_controle+3)& (0+255),w,b
 17681  003E38  0A80               	xorlw	128
 17682  003E3A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17683  003E3C  B0D8               	btfsc	status,0,c
 17684  003E3E  D00C               	goto	l1195
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;Controle.h: 249: setLed(32, 1);
 17688  003E40  0E01               	movlw	1
 17689  003E42  6F60               	movwf	setLed@acao& (0+255),b
 17690  003E44  0E20               	movlw	32
 17691  003E46  EC1A  F02F         	call	_setLed
 17692                           
 17693                           ;Controle.h: 250: setLed(16, 0);
 17694  003E4A  0E00               	movlw	0
 17695  003E4C  0100               	movlb	0	; () banked
 17696  003E4E  6F60               	movwf	setLed@acao& (0+255),b
 17697  003E50  0E10               	movlw	16
 17698  003E52  EC1A  F02F         	call	_setLed
 17699                           
 17700                           ;Controle.h: 251: } else {
 17701  003E56  D00C               	goto	l1196
 17702  003E58                     l1195:
 17703                           
 17704                           ;Controle.h: 252: setLed(32, 0);
 17705  003E58  0E00               	movlw	0
 17706  003E5A  0100               	movlb	0	; () banked
 17707  003E5C  6F60               	movwf	setLed@acao& (0+255),b
 17708  003E5E  0E20               	movlw	32
 17709  003E60  EC1A  F02F         	call	_setLed
 17710                           
 17711                           ;Controle.h: 253: setLed(16, 0);
 17712  003E64  0E00               	movlw	0
 17713  003E66  0100               	movlb	0	; () banked
 17714  003E68  6F60               	movwf	setLed@acao& (0+255),b
 17715  003E6A  0E10               	movlw	16
 17716  003E6C  EC1A  F02F         	call	_setLed
 17717  003E70                     l1196:
 17718                           
 17719                           ;Controle.h: 254: }
 17720                           ;Controle.h: 256: if (umid + 3 < umidajt) {
 17721  003E70  0100               	movlb	0	; () banked
 17722  003E72  51E9               	movf	_umidajt& (0+255),w,b
 17723  003E74  6F68               	movwf	??_controle& (0+255),b
 17724  003E76  6B69               	clrf	(??_controle+1)& (0+255),b
 17725  003E78  51FC               	movf	_umid& (0+255),w,b
 17726  003E7A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17727  003E7C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17728  003E7E  0E03               	movlw	3
 17729  003E80  276A               	addwf	(??_controle+2)& (0+255),f,b
 17730  003E82  0E00               	movlw	0
 17731  003E84  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17732  003E86  5168               	movf	??_controle& (0+255),w,b
 17733  003E88  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17734  003E8A  516B               	movf	(??_controle+3)& (0+255),w,b
 17735  003E8C  0A80               	xorlw	128
 17736  003E8E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17737  003E90  5169               	movf	(??_controle+1)& (0+255),w,b
 17738  003E92  0A80               	xorlw	128
 17739  003E94  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17740  003E96  B0D8               	btfsc	status,0,c
 17741  003E98  D00C               	goto	l1197
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;Controle.h: 257: setLed(1, 0);
 17745  003E9A  0E00               	movlw	0
 17746  003E9C  6F60               	movwf	setLed@acao& (0+255),b
 17747  003E9E  0E01               	movlw	1
 17748  003EA0  EC1A  F02F         	call	_setLed
 17749                           
 17750                           ;Controle.h: 258: setLed(2, 1);
 17751  003EA4  0E01               	movlw	1
 17752  003EA6  0100               	movlb	0	; () banked
 17753  003EA8  6F60               	movwf	setLed@acao& (0+255),b
 17754  003EAA  0E02               	movlw	2
 17755  003EAC  EC1A  F02F         	call	_setLed
 17756                           
 17757                           ;Controle.h: 259: } else if (umid - 3 > umidajt) {
 17758  003EB0  0012               	return	
 17759  003EB2                     l1197:
 17760  003EB2  0EFD               	movlw	253
 17761  003EB4  0100               	movlb	0	; () banked
 17762  003EB6  6F68               	movwf	??_controle& (0+255),b
 17763  003EB8  0EFF               	movlw	255
 17764  003EBA  6F69               	movwf	(??_controle+1)& (0+255),b
 17765  003EBC  51FC               	movf	_umid& (0+255),w,b
 17766  003EBE  6F6A               	movwf	(??_controle+2)& (0+255),b
 17767  003EC0  6B6B               	clrf	(??_controle+3)& (0+255),b
 17768  003EC2  5168               	movf	??_controle& (0+255),w,b
 17769  003EC4  276A               	addwf	(??_controle+2)& (0+255),f,b
 17770  003EC6  5169               	movf	(??_controle+1)& (0+255),w,b
 17771  003EC8  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17772  003ECA  51E9               	movf	_umidajt& (0+255),w,b
 17773  003ECC  6F6C               	movwf	(??_controle+4)& (0+255),b
 17774  003ECE  6B6D               	clrf	(??_controle+5)& (0+255),b
 17775  003ED0  516A               	movf	(??_controle+2)& (0+255),w,b
 17776  003ED2  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17777  003ED4  516D               	movf	(??_controle+5)& (0+255),w,b
 17778  003ED6  0A80               	xorlw	128
 17779  003ED8  6F6E               	movwf	(??_controle+6)& (0+255),b
 17780  003EDA  516B               	movf	(??_controle+3)& (0+255),w,b
 17781  003EDC  0A80               	xorlw	128
 17782  003EDE  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17783  003EE0  B0D8               	btfsc	status,0,c
 17784  003EE2  D00C               	goto	l1199
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;Controle.h: 260: setLed(1, 1);
 17788  003EE4  0E01               	movlw	1
 17789  003EE6  6F60               	movwf	setLed@acao& (0+255),b
 17790  003EE8  0E01               	movlw	1
 17791  003EEA  EC1A  F02F         	call	_setLed
 17792                           
 17793                           ;Controle.h: 261: setLed(2, 0);
 17794  003EEE  0E00               	movlw	0
 17795  003EF0  0100               	movlb	0	; () banked
 17796  003EF2  6F60               	movwf	setLed@acao& (0+255),b
 17797  003EF4  0E02               	movlw	2
 17798  003EF6  EC1A  F02F         	call	_setLed
 17799                           
 17800                           ;Controle.h: 262: } else {
 17801  003EFA  0012               	return	
 17802  003EFC                     l1199:
 17803                           
 17804                           ;Controle.h: 263: setLed(1, 0);
 17805  003EFC  0E00               	movlw	0
 17806  003EFE  0100               	movlb	0	; () banked
 17807  003F00  6F60               	movwf	setLed@acao& (0+255),b
 17808  003F02  0E01               	movlw	1
 17809  003F04  EC1A  F02F         	call	_setLed
 17810                           
 17811                           ;Controle.h: 264: setLed(2, 0);
 17812  003F08  0E00               	movlw	0
 17813  003F0A  0100               	movlb	0	; () banked
 17814  003F0C  6F60               	movwf	setLed@acao& (0+255),b
 17815  003F0E  0E02               	movlw	2
 17816  003F10  EC1A  F02F         	call	_setLed
 17817  003F14  0012               	return	
 17818  003F16                     __end_of_controle:
 17819                           	opt stack 0
 17820                           tblptru	equ	0xFF8
 17821                           tblptrh	equ	0xFF7
 17822                           tblptrl	equ	0xFF6
 17823                           tablat	equ	0xFF5
 17824                           prodh	equ	0xFF4
 17825                           prodl	equ	0xFF3
 17826                           intcon	equ	0xFF2
 17827                           intcon2	equ	0xFF1
 17828                           intcon3	equ	0xFF0
 17829                           indf0	equ	0xFEF
 17830                           postinc0	equ	0xFEE
 17831                           fsr0h	equ	0xFEA
 17832                           fsr0l	equ	0xFE9
 17833                           wreg	equ	0xFE8
 17834                           postdec1	equ	0xFE5
 17835                           fsr1l	equ	0xFE1
 17836                           indf2	equ	0xFDF
 17837                           postinc2	equ	0xFDE
 17838                           postdec2	equ	0xFDD
 17839                           fsr2h	equ	0xFDA
 17840                           fsr2l	equ	0xFD9
 17841                           status	equ	0xFD8
 17842                           
 17843 ;; *************** function _acaoFlap *****************
 17844 ;; Defined at:
 17845 ;;		line 123 in file "src/Controle.h"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;  acao            1    wreg     unsigned char 
 17848 ;;  tempo_ativad    2    2[BANK0 ] int 
 17849 ;;  tempo_aguard    2    4[BANK0 ] int 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;  acao            1    7[BANK0 ] unsigned char 
 17852 ;; Return value:  Size  Location     Type
 17853 ;;                  1    wreg      void 
 17854 ;; Registers used:
 17855 ;;		wreg, status,2, status,0, cstack
 17856 ;; Tracked objects:
 17857 ;;		On entry : 0/0
 17858 ;;		On exit  : 0/0
 17859 ;;		Unchanged: 0/0
 17860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17861 ;;      Params:         0       4       0       0       0       0       0       0       0
 17862 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17863 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17864 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17865 ;;Total ram usage:        6 bytes
 17866 ;; Hardware stack levels used:    1
 17867 ;; Hardware stack levels required when called:    7
 17868 ;; This function calls:
 17869 ;;		_setLed
 17870 ;; This function is called by:
 17871 ;;		_controle
 17872 ;; This function uses a non-reentrant model
 17873 ;;
 17874                           
 17875                           	psect	text22
 17876  005496                     __ptext22:
 17877                           	opt stack 0
 17878  005496                     _acaoFlap:
 17879                           	opt stack 22
 17880                           
 17881                           ;incstack = 0
 17882                           ;acaoFlap@acao stored from wreg
 17883  005496  0100               	movlb	0	; () banked
 17884  005498  6F67               	movwf	acaoFlap@acao& (0+255),b
 17885                           
 17886                           ;Controle.h: 124: if (acao != _acao_flap) {
 17887  00549A  5042               	movf	__acao_flap,w,c
 17888  00549C  0100               	movlb	0	; () banked
 17889  00549E  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17890  0054A0  B4D8               	btfsc	status,2,c
 17891  0054A2  D007               	goto	l1147
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;Controle.h: 125: t_controle_flap = 0;
 17895  0054A4  0E00               	movlw	0
 17896  0054A6  6E3A               	movwf	_t_controle_flap+1,c
 17897  0054A8  0E00               	movlw	0
 17898  0054AA  6E39               	movwf	_t_controle_flap,c
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;Controle.h: 126: _acao_flap = acao;
 17902  0054AC  C067  F042         	movff	acaoFlap@acao,__acao_flap
 17903                           
 17904                           ; BSR set to: 0
 17905                           ;Controle.h: 127: return;
 17906  0054B0  0012               	return	
 17907  0054B2                     l1147:
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;Controle.h: 128: }
 17911                           ;Controle.h: 129: if (acao) {
 17912                           
 17913                           ; BSR set to: 0
 17914  0054B2  5167               	movf	acaoFlap@acao& (0+255),w,b
 17915  0054B4  B4D8               	btfsc	status,2,c
 17916  0054B6  D006               	goto	l1149
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;Controle.h: 130: setLed(4, 1);
 17920  0054B8  0E01               	movlw	1
 17921  0054BA  6F60               	movwf	setLed@acao& (0+255),b
 17922  0054BC  0E04               	movlw	4
 17923  0054BE  EC1A  F02F         	call	_setLed
 17924                           
 17925                           ;Controle.h: 131: } else {
 17926  0054C2  D006               	goto	l1150
 17927  0054C4                     l1149:
 17928                           
 17929                           ;Controle.h: 132: setLed(4, 0);
 17930  0054C4  0E00               	movlw	0
 17931  0054C6  0100               	movlb	0	; () banked
 17932  0054C8  6F60               	movwf	setLed@acao& (0+255),b
 17933  0054CA  0E04               	movlw	4
 17934  0054CC  EC1A  F02F         	call	_setLed
 17935  0054D0                     l1150:
 17936                           
 17937                           ;Controle.h: 133: }
 17938                           ;Controle.h: 135: if (!t_controle_flap) {
 17939  0054D0  5039               	movf	_t_controle_flap,w,c
 17940  0054D2  103A               	iorwf	_t_controle_flap+1,w,c
 17941  0054D4  A4D8               	btfss	status,2,c
 17942  0054D6  D007               	goto	l1151
 17943                           
 17944                           ;Controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17945  0054D8  0100               	movlb	0	; () banked
 17946  0054DA  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17947  0054DC  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17948  0054DE  6E39               	movwf	_t_controle_flap,c
 17949  0054E0  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17950  0054E2  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17951  0054E4  6E3A               	movwf	_t_controle_flap+1,c
 17952  0054E6                     l1151:
 17953                           
 17954                           ;Controle.h: 137: }
 17955                           ;Controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17956  0054E6  5039               	movf	_t_controle_flap,w,c
 17957  0054E8  0100               	movlb	0	; () banked
 17958  0054EA  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17959  0054EC  503A               	movf	_t_controle_flap+1,w,c
 17960  0054EE  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17961  0054F0  B0D8               	btfsc	status,0,c
 17962  0054F2  D015               	goto	l1152
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;Controle.h: 140: LATAbits.LA5 = !acao;
 17966  0054F4  5167               	movf	acaoFlap@acao& (0+255),w,b
 17967  0054F6  A4D8               	btfss	status,2,c
 17968  0054F8  D003               	goto	u11950
 17969  0054FA  6B66               	clrf	??_acaoFlap& (0+255),b
 17970  0054FC  2B66               	incf	??_acaoFlap& (0+255),f,b
 17971  0054FE  D002               	goto	u11968
 17972  005500                     u11950:
 17973  005500  0100               	movlb	0	; () banked
 17974  005502  6B66               	clrf	??_acaoFlap& (0+255),b
 17975  005504                     u11968:
 17976  005504  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17977  005506  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17978  005508  5089               	movf	3977,w,c	;volatile
 17979  00550A  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17980  00550C  0BDF               	andlw	-33
 17981  00550E  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17982  005510  6E89               	movwf	3977,c	;volatile
 17983                           
 17984                           ; BSR set to: 0
 17985                           ;Controle.h: 141: LATCbits.LC2 = acao;
 17986  005512  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17987  005514  D002               	bra	u11975
 17988  005516  948B               	bcf	3979,2,c	;volatile
 17989  005518  D001               	bra	u11976
 17990  00551A                     u11975:
 17991  00551A  848B               	bsf	3979,2,c	;volatile
 17992  00551C                     u11976:
 17993                           
 17994                           ;Controle.h: 142: } else {
 17995  00551C  0012               	return	
 17996  00551E                     l1152:
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;Controle.h: 143: LATAbits.LA5 = 0;
 18000  00551E  9A89               	bcf	3977,5,c	;volatile
 18001                           
 18002                           ;Controle.h: 144: LATCbits.LC2 = 0;
 18003  005520  948B               	bcf	3979,2,c	;volatile
 18004  005522  0012               	return	
 18005  005524                     __end_of_acaoFlap:
 18006                           	opt stack 0
 18007                           tblptru	equ	0xFF8
 18008                           tblptrh	equ	0xFF7
 18009                           tblptrl	equ	0xFF6
 18010                           tablat	equ	0xFF5
 18011                           prodh	equ	0xFF4
 18012                           prodl	equ	0xFF3
 18013                           intcon	equ	0xFF2
 18014                           intcon2	equ	0xFF1
 18015                           intcon3	equ	0xFF0
 18016                           indf0	equ	0xFEF
 18017                           postinc0	equ	0xFEE
 18018                           fsr0h	equ	0xFEA
 18019                           fsr0l	equ	0xFE9
 18020                           wreg	equ	0xFE8
 18021                           postdec1	equ	0xFE5
 18022                           fsr1l	equ	0xFE1
 18023                           indf2	equ	0xFDF
 18024                           postinc2	equ	0xFDE
 18025                           postdec2	equ	0xFDD
 18026                           fsr2h	equ	0xFDA
 18027                           fsr2l	equ	0xFD9
 18028                           status	equ	0xFD8
 18029                           
 18030 ;; *************** function _setLed *****************
 18031 ;; Defined at:
 18032 ;;		line 18 in file "src/Led_display.h"
 18033 ;; Parameters:    Size  Location     Type
 18034 ;;  led             1    wreg     unsigned char 
 18035 ;;  acao            1    0[BANK0 ] unsigned char 
 18036 ;; Auto vars:     Size  Location     Type
 18037 ;;  led             1    1[BANK0 ] unsigned char 
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  1    wreg      void 
 18040 ;; Registers used:
 18041 ;;		wreg, status,2, status,0
 18042 ;; Tracked objects:
 18043 ;;		On entry : 0/0
 18044 ;;		On exit  : 0/0
 18045 ;;		Unchanged: 0/0
 18046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18047 ;;      Params:         0       1       0       0       0       0       0       0       0
 18048 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18050 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18051 ;;Total ram usage:        2 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; Hardware stack levels required when called:    6
 18054 ;; This function calls:
 18055 ;;		Nothing
 18056 ;; This function is called by:
 18057 ;;		_acaoFlap
 18058 ;;		_controle
 18059 ;; This function uses a non-reentrant model
 18060 ;;
 18061                           
 18062                           	psect	text23
 18063  005E34                     __ptext23:
 18064                           	opt stack 0
 18065  005E34                     _setLed:
 18066                           	opt stack 23
 18067                           
 18068                           ;incstack = 0
 18069                           ;setLed@led stored from wreg
 18070  005E34  0100               	movlb	0	; () banked
 18071  005E36  6F61               	movwf	setLed@led& (0+255),b
 18072                           
 18073                           ;Led_display.h: 19: if (acao) {
 18074  005E38  0100               	movlb	0	; () banked
 18075  005E3A  5160               	movf	setLed@acao& (0+255),w,b
 18076  005E3C  B4D8               	btfsc	status,2,c
 18077  005E3E  D004               	goto	l213
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;Led_display.h: 20: leds = leds | led;
 18081  005E40  5045               	movf	_leds,w,c
 18082  005E42  1161               	iorwf	setLed@led& (0+255),w,b
 18083  005E44  6E45               	movwf	_leds,c
 18084                           
 18085                           ;Led_display.h: 22: } else {
 18086  005E46  0012               	return	
 18087  005E48                     l213:
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;Led_display.h: 23: leds = leds&~led;
 18091                           
 18092                           ; BSR set to: 0
 18093  005E48  5161               	movf	setLed@led& (0+255),w,b
 18094  005E4A  0AFF               	xorlw	255
 18095  005E4C  1445               	andwf	_leds,w,c
 18096  005E4E  6E45               	movwf	_leds,c
 18097  005E50  0012               	return	
 18098  005E52                     __end_of_setLed:
 18099                           	opt stack 0
 18100                           tblptru	equ	0xFF8
 18101                           tblptrh	equ	0xFF7
 18102                           tblptrl	equ	0xFF6
 18103                           tablat	equ	0xFF5
 18104                           prodh	equ	0xFF4
 18105                           prodl	equ	0xFF3
 18106                           intcon	equ	0xFF2
 18107                           intcon2	equ	0xFF1
 18108                           intcon3	equ	0xFF0
 18109                           indf0	equ	0xFEF
 18110                           postinc0	equ	0xFEE
 18111                           fsr0h	equ	0xFEA
 18112                           fsr0l	equ	0xFE9
 18113                           wreg	equ	0xFE8
 18114                           postdec1	equ	0xFE5
 18115                           fsr1l	equ	0xFE1
 18116                           indf2	equ	0xFDF
 18117                           postinc2	equ	0xFDE
 18118                           postdec2	equ	0xFDD
 18119                           fsr2h	equ	0xFDA
 18120                           fsr2l	equ	0xFD9
 18121                           status	equ	0xFD8
 18122                           
 18123 ;; *************** function _climaAtual *****************
 18124 ;; Defined at:
 18125 ;;		line 34 in file "src/FuncoesControlador.h"
 18126 ;; Parameters:    Size  Location     Type
 18127 ;;  c               1    wreg     unsigned char 
 18128 ;; Auto vars:     Size  Location     Type
 18129 ;;  c               1    2[BANK0 ] unsigned char 
 18130 ;; Return value:  Size  Location     Type
 18131 ;;                  2    0[BANK0 ] PTR unsigned char 
 18132 ;; Registers used:
 18133 ;;		wreg, status,2, status,0
 18134 ;; Tracked objects:
 18135 ;;		On entry : 0/0
 18136 ;;		On exit  : 0/0
 18137 ;;		Unchanged: 0/0
 18138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18139 ;;      Params:         0       2       0       0       0       0       0       0       0
 18140 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18141 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18142 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18143 ;;Total ram usage:        3 bytes
 18144 ;; Hardware stack levels used:    1
 18145 ;; Hardware stack levels required when called:    6
 18146 ;; This function calls:
 18147 ;;		Nothing
 18148 ;; This function is called by:
 18149 ;;		_main
 18150 ;; This function uses a non-reentrant model
 18151 ;;
 18152                           
 18153                           	psect	text24
 18154  0059D8                     __ptext24:
 18155                           	opt stack 0
 18156  0059D8                     _climaAtual:
 18157                           	opt stack 24
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;incstack = 0
 18161                           ;climaAtual@c stored from wreg
 18162  0059D8  0100               	movlb	0	; () banked
 18163  0059DA  6F62               	movwf	climaAtual@c& (0+255),b
 18164                           
 18165                           ;FuncoesControlador.h: 35: switch (c) {
 18166  0059DC  D015               	goto	l897
 18167  0059DE  0EC8               	movlw	low STR_6
 18168  0059E0  0100               	movlb	0	; () banked
 18169  0059E2  6F60               	movwf	?_climaAtual& (0+255),b
 18170  0059E4  0E7F               	movlw	high STR_6
 18171  0059E6  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18172                           
 18173                           ; BSR set to: 0
 18174  0059E8  0012               	return	
 18175  0059EA                     
 18176                           ; BSR set to: 0
 18177                           
 18178                           ; BSR set to: 0
 18179  0059EA  0E98               	movlw	low STR_7
 18180  0059EC  6F60               	movwf	?_climaAtual& (0+255),b
 18181  0059EE  0E7F               	movlw	high STR_7
 18182  0059F0  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18183                           
 18184                           ; BSR set to: 0
 18185  0059F2  0012               	return	
 18186  0059F4                     
 18187                           ; BSR set to: 0
 18188                           
 18189                           ; BSR set to: 0
 18190  0059F4  0EE2               	movlw	low STR_8
 18191  0059F6  6F60               	movwf	?_climaAtual& (0+255),b
 18192  0059F8  0E7F               	movlw	high STR_8
 18193  0059FA  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18194                           
 18195                           ; BSR set to: 0
 18196  0059FC  0012               	return	
 18197  0059FE                     
 18198                           ; BSR set to: 0
 18199                           
 18200                           ; BSR set to: 0
 18201  0059FE  0EF3               	movlw	low STR_9
 18202  005A00  6F60               	movwf	?_climaAtual& (0+255),b
 18203  005A02  0E7F               	movlw	high STR_9
 18204  005A04  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;FuncoesControlador.h: 41: }
 18208                           
 18209                           ; BSR set to: 0
 18210  005A06  0012               	return	
 18211  005A08                     l897:
 18212                           
 18213                           ; BSR set to: 0
 18214  005A08  0100               	movlb	0	; () banked
 18215  005A0A  5162               	movf	climaAtual@c& (0+255),w,b
 18216                           
 18217                           ; Switch size 1, requested type "space"
 18218                           ; Number of cases is 3, Range of values is 1 to 3
 18219                           ; switch strategies available:
 18220                           ; Name         Instructions Cycles
 18221                           ; simple_byte           10     6 (average)
 18222                           ;	Chosen strategy is simple_byte
 18223  005A0C  0A01               	xorlw	1	; case 1
 18224  005A0E  B4D8               	btfsc	status,2,c
 18225  005A10  D7E6               	goto	l898
 18226  005A12  0A03               	xorlw	3	; case 2
 18227  005A14  B4D8               	btfsc	status,2,c
 18228  005A16  D7E9               	goto	l900
 18229  005A18  0A01               	xorlw	1	; case 3
 18230  005A1A  B4D8               	btfsc	status,2,c
 18231  005A1C  D7EB               	goto	l901
 18232  005A1E  D7EF               	goto	l902
 18233  005A20                     __end_of_climaAtual:
 18234                           	opt stack 0
 18235                           tblptru	equ	0xFF8
 18236                           tblptrh	equ	0xFF7
 18237                           tblptrl	equ	0xFF6
 18238                           tablat	equ	0xFF5
 18239                           prodh	equ	0xFF4
 18240                           prodl	equ	0xFF3
 18241                           intcon	equ	0xFF2
 18242                           intcon2	equ	0xFF1
 18243                           intcon3	equ	0xFF0
 18244                           indf0	equ	0xFEF
 18245                           postinc0	equ	0xFEE
 18246                           fsr0h	equ	0xFEA
 18247                           fsr0l	equ	0xFE9
 18248                           wreg	equ	0xFE8
 18249                           postdec1	equ	0xFE5
 18250                           fsr1l	equ	0xFE1
 18251                           indf2	equ	0xFDF
 18252                           postinc2	equ	0xFDE
 18253                           postdec2	equ	0xFDD
 18254                           fsr2h	equ	0xFDA
 18255                           fsr2l	equ	0xFD9
 18256                           status	equ	0xFD8
 18257                           
 18258 ;; *************** function _btPress *****************
 18259 ;; Defined at:
 18260 ;;		line 26 in file "src/Teclado.h"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  bt              1    wreg     unsigned char 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  bt              1    0[BANK0 ] unsigned char 
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      unsigned char 
 18267 ;; Registers used:
 18268 ;;		wreg, status,2, status,0
 18269 ;; Tracked objects:
 18270 ;;		On entry : 0/0
 18271 ;;		On exit  : 0/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18274 ;;      Params:         0       0       0       0       0       0       0       0       0
 18275 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18277 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18278 ;;Total ram usage:        1 bytes
 18279 ;; Hardware stack levels used:    1
 18280 ;; Hardware stack levels required when called:    6
 18281 ;; This function calls:
 18282 ;;		Nothing
 18283 ;; This function is called by:
 18284 ;;		_main
 18285 ;; This function uses a non-reentrant model
 18286 ;;
 18287                           
 18288                           	psect	text25
 18289  005E52                     __ptext25:
 18290                           	opt stack 0
 18291  005E52                     _btPress:
 18292                           	opt stack 24
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;incstack = 0
 18296                           ;btPress@bt stored from wreg
 18297  005E52  0100               	movlb	0	; () banked
 18298  005E54  6F60               	movwf	btPress@bt& (0+255),b
 18299                           
 18300                           ;Teclado.h: 27: if (bt_flag == bt) {
 18301  005E56  0100               	movlb	0	; () banked
 18302  005E58  5160               	movf	btPress@bt& (0+255),w,b
 18303  005E5A  1844               	xorwf	_bt_flag,w,c
 18304  005E5C  B4D8               	btfsc	status,2,c
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 18308  005E5E  A481               	btfss	3969,2,c	;volatile
 18309  005E60  D004               	goto	l292
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;Teclado.h: 29: bt_flag = 0;
 18313  005E62  0E00               	movlw	0
 18314  005E64  6E44               	movwf	_bt_flag,c
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;Teclado.h: 30: return 1;
 18318  005E66  0E01               	movlw	1
 18319                           
 18320                           ; BSR set to: 0
 18321  005E68  0012               	return	
 18322  005E6A                     l292:
 18323                           
 18324                           ; BSR set to: 0
 18325                           ;Teclado.h: 31: }
 18326                           ;Teclado.h: 32: }
 18327                           ;Teclado.h: 33: return 0;
 18328                           
 18329                           ; BSR set to: 0
 18330                           
 18331                           ; BSR set to: 0
 18332  005E6A  0E00               	movlw	0
 18333  005E6C  0012               	return	
 18334  005E6E                     __end_of_btPress:
 18335                           	opt stack 0
 18336                           tblptru	equ	0xFF8
 18337                           tblptrh	equ	0xFF7
 18338                           tblptrl	equ	0xFF6
 18339                           tablat	equ	0xFF5
 18340                           prodh	equ	0xFF4
 18341                           prodl	equ	0xFF3
 18342                           intcon	equ	0xFF2
 18343                           intcon2	equ	0xFF1
 18344                           intcon3	equ	0xFF0
 18345                           indf0	equ	0xFEF
 18346                           postinc0	equ	0xFEE
 18347                           fsr0h	equ	0xFEA
 18348                           fsr0l	equ	0xFE9
 18349                           wreg	equ	0xFE8
 18350                           postdec1	equ	0xFE5
 18351                           fsr1l	equ	0xFE1
 18352                           indf2	equ	0xFDF
 18353                           postinc2	equ	0xFDE
 18354                           postdec2	equ	0xFDD
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function _blink *****************
 18360 ;; Defined at:
 18361 ;;		line 212 in file "src/lcd.h"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  line            2    0[BANK0 ] PTR unsigned char 
 18364 ;;		 -> line3(21), line2(21), line1(21), 
 18365 ;;  start           1    2[BANK0 ] unsigned char 
 18366 ;;  end             1    3[BANK0 ] unsigned char 
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;  i               1    4[BANK0 ] unsigned char 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      void 
 18371 ;; Registers used:
 18372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18378 ;;      Params:         0       4       0       0       0       0       0       0       0
 18379 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18381 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18382 ;;Total ram usage:        5 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:    6
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_main
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text26
 18393  005C0A                     __ptext26:
 18394                           	opt stack 0
 18395  005C0A                     _blink:
 18396                           	opt stack 24
 18397                           
 18398                           ;lcd.h: 213: if (blinkk) {
 18399                           
 18400                           ; BSR set to: 0
 18401                           ;incstack = 0
 18402  005C0A  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 18403  005C0C  0012               	return	
 18404                           
 18405                           ;lcd.h: 214: char i = 0;
 18406  005C0E  0E00               	movlw	0
 18407  005C10  0100               	movlb	0	; () banked
 18408  005C12  6F64               	movwf	blink@i& (0+255),b
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 18412  005C14  0762               	decf	blink@start& (0+255),f,b
 18413  005C16  C062  F064         	movff	blink@start,blink@i
 18414  005C1A  D00B               	goto	l280
 18415  005C1C                     
 18416                           ; BSR set to: 0
 18417                           ;lcd.h: 216: line[i] = ' ';
 18418                           
 18419                           ; BSR set to: 0
 18420  005C1C  5164               	movf	blink@i& (0+255),w,b
 18421  005C1E  0D01               	mullw	1
 18422  005C20  50F3               	movf	prodl,w,c
 18423  005C22  2560               	addwf	blink@line& (0+255),w,b
 18424  005C24  6ED9               	movwf	fsr2l,c
 18425  005C26  50F4               	movf	prodh,w,c
 18426  005C28  2161               	addwfc	(blink@line+1)& (0+255),w,b
 18427  005C2A  6EDA               	movwf	fsr2h,c
 18428  005C2C  0E20               	movlw	32
 18429  005C2E  6EDF               	movwf	indf2,c
 18430                           
 18431                           ; BSR set to: 0
 18432  005C30  2B64               	incf	blink@i& (0+255),f,b
 18433  005C32                     l280:
 18434                           
 18435                           ; BSR set to: 0
 18436                           
 18437                           ; BSR set to: 0
 18438  005C32  5163               	movf	blink@end& (0+255),w,b
 18439  005C34  5D64               	subwf	blink@i& (0+255),w,b
 18440  005C36  B0D8               	btfsc	status,0,c
 18441  005C38  0012               	return	
 18442  005C3A  D7F0               	goto	l281
 18443  005C3C                     __end_of_blink:
 18444                           	opt stack 0
 18445                           tblptru	equ	0xFF8
 18446                           tblptrh	equ	0xFF7
 18447                           tblptrl	equ	0xFF6
 18448                           tablat	equ	0xFF5
 18449                           prodh	equ	0xFF4
 18450                           prodl	equ	0xFF3
 18451                           intcon	equ	0xFF2
 18452                           intcon2	equ	0xFF1
 18453                           intcon3	equ	0xFF0
 18454                           indf0	equ	0xFEF
 18455                           postinc0	equ	0xFEE
 18456                           fsr0h	equ	0xFEA
 18457                           fsr0l	equ	0xFE9
 18458                           wreg	equ	0xFE8
 18459                           postdec1	equ	0xFE5
 18460                           fsr1l	equ	0xFE1
 18461                           indf2	equ	0xFDF
 18462                           postinc2	equ	0xFDE
 18463                           postdec2	equ	0xFDD
 18464                           fsr2h	equ	0xFDA
 18465                           fsr2l	equ	0xFD9
 18466                           status	equ	0xFD8
 18467                           
 18468 ;; *************** function _alterarConfigWifi *****************
 18469 ;; Defined at:
 18470 ;;		line 67 in file "src/conexaoWifi.h"
 18471 ;; Parameters:    Size  Location     Type
 18472 ;;		None
 18473 ;; Auto vars:     Size  Location     Type
 18474 ;;  i               1   99[BANK0 ] unsigned char 
 18475 ;; Return value:  Size  Location     Type
 18476 ;;                  1    wreg      void 
 18477 ;; Registers used:
 18478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18479 ;; Tracked objects:
 18480 ;;		On entry : 0/0
 18481 ;;		On exit  : 0/0
 18482 ;;		Unchanged: 0/0
 18483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18484 ;;      Params:         0       0       0       0       0       0       0       0       0
 18485 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18486 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18487 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18488 ;;Total ram usage:        1 bytes
 18489 ;; Hardware stack levels used:    1
 18490 ;; Hardware stack levels required when called:   10
 18491 ;; This function calls:
 18492 ;;		_atualizaLCD
 18493 ;;		_delay
 18494 ;;		_filtroStr
 18495 ;;		_limpaBuffer
 18496 ;;		_printf
 18497 ;;		_sprintf
 18498 ;;		_strlen
 18499 ;;		_strstr
 18500 ;;		_writeEEPROM_ext
 18501 ;; This function is called by:
 18502 ;;		_main
 18503 ;; This function uses a non-reentrant model
 18504 ;;
 18505                           
 18506                           	psect	text27
 18507  003620                     __ptext27:
 18508                           	opt stack 0
 18509  003620                     _alterarConfigWifi:
 18510                           	opt stack 20
 18511                           
 18512                           ;conexaoWifi.h: 69: if (t_wifi_restart == 0) {
 18513                           
 18514                           ;incstack = 0
 18515  003620  0101               	movlb	1	; () banked
 18516  003622  5197               	movf	_t_wifi_restart& (0+255),w,b
 18517  003624  A4D8               	btfss	status,2,c
 18518  003626  D007               	goto	l986
 18519                           
 18520                           ; BSR set to: 1
 18521                           ;conexaoWifi.h: 70: menu = 8;
 18522  003628  0E08               	movlw	8
 18523  00362A  0100               	movlb	0	; () banked
 18524  00362C  6FFB               	movwf	_menu& (0+255),b
 18525                           
 18526                           ;conexaoWifi.h: 71: opcaomenu = 1;
 18527  00362E  0E01               	movlw	1
 18528  003630  0101               	movlb	1	; () banked
 18529  003632  6F99               	movwf	_opcaomenu& (0+255),b
 18530                           
 18531                           ; BSR set to: 1
 18532                           ;conexaoWifi.h: 73: } else {
 18533                           
 18534                           ; BSR set to: 1
 18535                           ;conexaoWifi.h: 72: return;
 18536  003634  0012               	return	
 18537  003636                     l986:
 18538                           
 18539                           ; BSR set to: 1
 18540                           ;conexaoWifi.h: 74: delay(10);
 18541                           
 18542                           ; BSR set to: 1
 18543  003636  0E00               	movlw	0
 18544  003638  0100               	movlb	0	; () banked
 18545  00363A  6F61               	movwf	(delay@x+1)& (0+255),b
 18546  00363C  0E0A               	movlw	10
 18547  00363E  6F60               	movwf	delay@x& (0+255),b
 18548  003640  EC94  F02E         	call	_delay	;wreg free
 18549                           
 18550                           ;conexaoWifi.h: 75: switch (f_wifi_processo) {
 18551  003644  D223               	goto	l989
 18552  003646                     
 18553                           ;conexaoWifi.h: 77: limpaBuffer();
 18554  003646  EC75  F02D         	call	_limpaBuffer	;wreg free
 18555                           
 18556                           ;conexaoWifi.h: 78: printf("AT+CWMODE=2\r\n");
 18557  00364A  0E51               	movlw	low STR_12
 18558  00364C  0100               	movlb	0	; () banked
 18559  00364E  6F81               	movwf	printf@f& (0+255),b
 18560  003650  0E7E               	movlw	high STR_12
 18561  003652  6F82               	movwf	(printf@f+1)& (0+255),b
 18562  003654  ECB4  F02D         	call	_printf	;wreg free
 18563                           
 18564                           ;conexaoWifi.h: 79: wifi_conectado = 0;
 18565  003658  0E00               	movlw	0
 18566  00365A  0101               	movlb	1	; () banked
 18567  00365C  6F9A               	movwf	_wifi_conectado& (0+255),b
 18568                           
 18569                           ; BSR set to: 1
 18570                           ;conexaoWifi.h: 80: f_wifi_processo++;
 18571  00365E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18572                           
 18573                           ;conexaoWifi.h: 81: break;
 18574  003660  0012               	return	
 18575  003662                     
 18576                           ; BSR set to: 1
 18577                           ;conexaoWifi.h: 83: if (strstr(bufferSerial, "OK") != (0)) {
 18578                           
 18579                           ; BSR set to: 1
 18580  003662  0E42               	movlw	low _bufferSerial
 18581  003664  0100               	movlb	0	; () banked
 18582  003666  6F6F               	movwf	strstr@s1& (0+255),b
 18583  003668  0E02               	movlw	high _bufferSerial
 18584  00366A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18585  00366C  0EF6               	movlw	low STR_13
 18586  00366E  6F71               	movwf	strstr@s2& (0+255),b
 18587  003670  0E7F               	movlw	high STR_13
 18588  003672  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18589  003674  EC7F  F028         	call	_strstr	;wreg free
 18590  003678  0100               	movlb	0	; () banked
 18591  00367A  516F               	movf	?_strstr& (0+255),w,b
 18592  00367C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18593  00367E  B4D8               	btfsc	status,2,c
 18594  003680  0012               	return	
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;conexaoWifi.h: 84: f_wifi_processo++;
 18598  003682  0101               	movlb	1	; () banked
 18599  003684  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18600                           
 18601                           ; BSR set to: 1
 18602                           ;conexaoWifi.h: 85: }
 18603                           ;conexaoWifi.h: 86: break;
 18604  003686  0012               	return	
 18605  003688                     
 18606                           ; BSR set to: 1
 18607                           ;conexaoWifi.h: 88: limpaBuffer();
 18608                           
 18609                           ; BSR set to: 1
 18610  003688  EC75  F02D         	call	_limpaBuffer	;wreg free
 18611                           
 18612                           ;conexaoWifi.h: 89: printf("AT+CIPMUX=1\r\n");
 18613  00368C  0E43               	movlw	low STR_14
 18614  00368E  0100               	movlb	0	; () banked
 18615  003690  6F81               	movwf	printf@f& (0+255),b
 18616  003692  0E7E               	movlw	high STR_14
 18617  003694  6F82               	movwf	(printf@f+1)& (0+255),b
 18618  003696  ECB4  F02D         	call	_printf	;wreg free
 18619                           
 18620                           ;conexaoWifi.h: 90: f_wifi_processo++;
 18621  00369A  0101               	movlb	1	; () banked
 18622  00369C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18623                           
 18624                           ;conexaoWifi.h: 91: break;
 18625  00369E  0012               	return	
 18626  0036A0                     
 18627                           ; BSR set to: 1
 18628                           ;conexaoWifi.h: 93: if (strstr(bufferSerial, "OK") != (0)) {
 18629                           
 18630                           ; BSR set to: 1
 18631  0036A0  0E42               	movlw	low _bufferSerial
 18632  0036A2  0100               	movlb	0	; () banked
 18633  0036A4  6F6F               	movwf	strstr@s1& (0+255),b
 18634  0036A6  0E02               	movlw	high _bufferSerial
 18635  0036A8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18636  0036AA  0EF6               	movlw	low STR_13
 18637  0036AC  6F71               	movwf	strstr@s2& (0+255),b
 18638  0036AE  0E7F               	movlw	high STR_13
 18639  0036B0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18640  0036B2  EC7F  F028         	call	_strstr	;wreg free
 18641  0036B6  0100               	movlb	0	; () banked
 18642  0036B8  516F               	movf	?_strstr& (0+255),w,b
 18643  0036BA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18644  0036BC  B4D8               	btfsc	status,2,c
 18645  0036BE  0012               	return	
 18646                           
 18647                           ; BSR set to: 0
 18648                           ;conexaoWifi.h: 94: f_wifi_processo++;
 18649  0036C0  0101               	movlb	1	; () banked
 18650  0036C2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18651                           
 18652                           ; BSR set to: 1
 18653                           ;conexaoWifi.h: 95: }
 18654                           ;conexaoWifi.h: 96: break;
 18655  0036C4  0012               	return	
 18656  0036C6                     
 18657                           ; BSR set to: 1
 18658                           ;conexaoWifi.h: 98: limpaBuffer();
 18659                           
 18660                           ; BSR set to: 1
 18661  0036C6  EC75  F02D         	call	_limpaBuffer	;wreg free
 18662                           
 18663                           ;conexaoWifi.h: 99: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18664  0036CA  0E99               	movlw	low STR_16
 18665  0036CC  0100               	movlb	0	; () banked
 18666  0036CE  6F81               	movwf	printf@f& (0+255),b
 18667  0036D0  0E7B               	movlw	high STR_16
 18668  0036D2  6F82               	movwf	(printf@f+1)& (0+255),b
 18669  0036D4  ECB4  F02D         	call	_printf	;wreg free
 18670                           
 18671                           ;conexaoWifi.h: 100: f_wifi_processo++;
 18672  0036D8  0101               	movlb	1	; () banked
 18673  0036DA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18674                           
 18675                           ;conexaoWifi.h: 101: break;
 18676  0036DC  0012               	return	
 18677  0036DE                     
 18678                           ; BSR set to: 1
 18679                           ;conexaoWifi.h: 103: if (strstr(bufferSerial, "OK") != (0)) {
 18680                           
 18681                           ; BSR set to: 1
 18682  0036DE  0E42               	movlw	low _bufferSerial
 18683  0036E0  0100               	movlb	0	; () banked
 18684  0036E2  6F6F               	movwf	strstr@s1& (0+255),b
 18685  0036E4  0E02               	movlw	high _bufferSerial
 18686  0036E6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18687  0036E8  0EF6               	movlw	low STR_13
 18688  0036EA  6F71               	movwf	strstr@s2& (0+255),b
 18689  0036EC  0E7F               	movlw	high STR_13
 18690  0036EE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18691  0036F0  EC7F  F028         	call	_strstr	;wreg free
 18692  0036F4  0100               	movlb	0	; () banked
 18693  0036F6  516F               	movf	?_strstr& (0+255),w,b
 18694  0036F8  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18695  0036FA  B4D8               	btfsc	status,2,c
 18696  0036FC  0012               	return	
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;conexaoWifi.h: 104: f_wifi_processo++;
 18700  0036FE  0101               	movlb	1	; () banked
 18701  003700  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18702                           
 18703                           ; BSR set to: 1
 18704                           ;conexaoWifi.h: 105: }
 18705                           ;conexaoWifi.h: 106: break;
 18706  003702  0012               	return	
 18707  003704                     
 18708                           ; BSR set to: 1
 18709                           ;conexaoWifi.h: 108: limpaBuffer();
 18710                           
 18711                           ; BSR set to: 1
 18712  003704  EC75  F02D         	call	_limpaBuffer	;wreg free
 18713                           
 18714                           ;conexaoWifi.h: 109: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18715  003708  0EBC               	movlw	low STR_18
 18716  00370A  0100               	movlb	0	; () banked
 18717  00370C  6F81               	movwf	printf@f& (0+255),b
 18718  00370E  0E7B               	movlw	high STR_18
 18719  003710  6F82               	movwf	(printf@f+1)& (0+255),b
 18720  003712  ECB4  F02D         	call	_printf	;wreg free
 18721                           
 18722                           ;conexaoWifi.h: 110: f_wifi_processo++;
 18723  003716  0101               	movlb	1	; () banked
 18724  003718  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18725                           
 18726                           ;conexaoWifi.h: 111: break;
 18727  00371A  0012               	return	
 18728  00371C                     
 18729                           ; BSR set to: 1
 18730                           ;conexaoWifi.h: 113: if (strstr(bufferSerial, "OK") != (0)) {
 18731                           
 18732                           ; BSR set to: 1
 18733  00371C  0E42               	movlw	low _bufferSerial
 18734  00371E  0100               	movlb	0	; () banked
 18735  003720  6F6F               	movwf	strstr@s1& (0+255),b
 18736  003722  0E02               	movlw	high _bufferSerial
 18737  003724  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18738  003726  0EF6               	movlw	low STR_13
 18739  003728  6F71               	movwf	strstr@s2& (0+255),b
 18740  00372A  0E7F               	movlw	high STR_13
 18741  00372C  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18742  00372E  EC7F  F028         	call	_strstr	;wreg free
 18743  003732  0100               	movlb	0	; () banked
 18744  003734  516F               	movf	?_strstr& (0+255),w,b
 18745  003736  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18746  003738  B4D8               	btfsc	status,2,c
 18747  00373A  0012               	return	
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;conexaoWifi.h: 114: f_wifi_processo++;
 18751  00373C  0101               	movlb	1	; () banked
 18752  00373E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18753                           
 18754                           ; BSR set to: 1
 18755                           ;conexaoWifi.h: 115: }
 18756                           ;conexaoWifi.h: 116: break;
 18757  003740  0012               	return	
 18758  003742                     
 18759                           ; BSR set to: 1
 18760                           ;conexaoWifi.h: 118: limpaBuffer();
 18761                           
 18762                           ; BSR set to: 1
 18763  003742  EC75  F02D         	call	_limpaBuffer	;wreg free
 18764                           
 18765                           ;conexaoWifi.h: 119: printf("AT+CIPSERVER=1,8080\r\n");
 18766  003746  0ED2               	movlw	low STR_20
 18767  003748  0100               	movlb	0	; () banked
 18768  00374A  6F81               	movwf	printf@f& (0+255),b
 18769  00374C  0E7B               	movlw	high STR_20
 18770  00374E  6F82               	movwf	(printf@f+1)& (0+255),b
 18771  003750  ECB4  F02D         	call	_printf	;wreg free
 18772                           
 18773                           ;conexaoWifi.h: 120: f_wifi_processo++;
 18774  003754  0101               	movlb	1	; () banked
 18775  003756  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18776                           
 18777                           ;conexaoWifi.h: 121: break;
 18778  003758  0012               	return	
 18779  00375A                     
 18780                           ; BSR set to: 1
 18781                           ;conexaoWifi.h: 123: if (strstr(bufferSerial, "OK") != (0)) {
 18782                           
 18783                           ; BSR set to: 1
 18784  00375A  0E42               	movlw	low _bufferSerial
 18785  00375C  0100               	movlb	0	; () banked
 18786  00375E  6F6F               	movwf	strstr@s1& (0+255),b
 18787  003760  0E02               	movlw	high _bufferSerial
 18788  003762  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18789  003764  0EF6               	movlw	low STR_13
 18790  003766  6F71               	movwf	strstr@s2& (0+255),b
 18791  003768  0E7F               	movlw	high STR_13
 18792  00376A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18793  00376C  EC7F  F028         	call	_strstr	;wreg free
 18794  003770  0100               	movlb	0	; () banked
 18795  003772  516F               	movf	?_strstr& (0+255),w,b
 18796  003774  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18797  003776  B4D8               	btfsc	status,2,c
 18798  003778  0012               	return	
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;conexaoWifi.h: 124: f_wifi_processo++;
 18802  00377A  0101               	movlb	1	; () banked
 18803  00377C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18804                           
 18805                           ; BSR set to: 1
 18806                           ;conexaoWifi.h: 125: t_wifi_restart = 180;
 18807  00377E  0EB4               	movlw	180
 18808  003780  6F97               	movwf	_t_wifi_restart& (0+255),b
 18809                           
 18810                           ; BSR set to: 1
 18811                           ;conexaoWifi.h: 126: }
 18812                           ;conexaoWifi.h: 127: break;
 18813  003782  0012               	return	
 18814  003784                     
 18815                           ; BSR set to: 1
 18816                           ;conexaoWifi.h: 129: sprintf(line1, "Conecte-se a rede e");
 18817                           
 18818                           ; BSR set to: 1
 18819  003784  0EDA               	movlw	low _line1
 18820  003786  0100               	movlb	0	; () banked
 18821  003788  6F81               	movwf	sprintf@wh& (0+255),b
 18822  00378A  0E01               	movlw	high _line1
 18823  00378C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18824  00378E  0ECA               	movlw	low STR_22
 18825  003790  6F83               	movwf	sprintf@f& (0+255),b
 18826  003792  0E7C               	movlw	high STR_22
 18827  003794  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18828  003796  EC10  F02D         	call	_sprintf	;wreg free
 18829                           
 18830                           ;conexaoWifi.h: 130: sprintf(line2, "acesse o IP para");
 18831  00379A  0EC5               	movlw	low _line2
 18832  00379C  0100               	movlb	0	; () banked
 18833  00379E  6F81               	movwf	sprintf@wh& (0+255),b
 18834  0037A0  0E01               	movlw	high _line2
 18835  0037A2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18836  0037A4  0E84               	movlw	low STR_23
 18837  0037A6  6F83               	movwf	sprintf@f& (0+255),b
 18838  0037A8  0E7D               	movlw	high STR_23
 18839  0037AA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18840  0037AC  EC10  F02D         	call	_sprintf	;wreg free
 18841                           
 18842                           ;conexaoWifi.h: 131: sprintf(line3, "configurar o WIFI...");
 18843  0037B0  0EB0               	movlw	low _line3
 18844  0037B2  0100               	movlb	0	; () banked
 18845  0037B4  6F81               	movwf	sprintf@wh& (0+255),b
 18846  0037B6  0E01               	movlw	high _line3
 18847  0037B8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18848  0037BA  0E28               	movlw	low STR_24
 18849  0037BC  6F83               	movwf	sprintf@f& (0+255),b
 18850  0037BE  0E7C               	movlw	high STR_24
 18851  0037C0  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18852  0037C2  EC10  F02D         	call	_sprintf	;wreg free
 18853                           
 18854                           ;conexaoWifi.h: 132: sprintf(line4, "10.1.1.1:8080");
 18855  0037C6  0E9B               	movlw	low _line4
 18856  0037C8  0100               	movlb	0	; () banked
 18857  0037CA  6F81               	movwf	sprintf@wh& (0+255),b
 18858  0037CC  0E01               	movlw	high _line4
 18859  0037CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18860  0037D0  0E89               	movlw	low STR_25
 18861  0037D2  6F83               	movwf	sprintf@f& (0+255),b
 18862  0037D4  0E7E               	movlw	high STR_25
 18863  0037D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18864  0037D8  EC10  F02D         	call	_sprintf	;wreg free
 18865                           
 18866                           ;conexaoWifi.h: 133: if ((strstr(bufferSerial, "+IPD") != (0)) || (strstr(bufferSerial, 
      +                          "Accept") != (0)) || (strstr(bufferSerial, "CONNECT") != (0))) {
 18867  0037DC  0E42               	movlw	low _bufferSerial
 18868  0037DE  0100               	movlb	0	; () banked
 18869  0037E0  6F6F               	movwf	strstr@s1& (0+255),b
 18870  0037E2  0E02               	movlw	high _bufferSerial
 18871  0037E4  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18872  0037E6  0ECE               	movlw	low STR_26
 18873  0037E8  6F71               	movwf	strstr@s2& (0+255),b
 18874  0037EA  0E7F               	movlw	high STR_26
 18875  0037EC  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18876  0037EE  EC7F  F028         	call	_strstr	;wreg free
 18877  0037F2  0100               	movlb	0	; () banked
 18878  0037F4  516F               	movf	?_strstr& (0+255),w,b
 18879  0037F6  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18880  0037F8  A4D8               	btfss	status,2,c
 18881  0037FA  D01E               	goto	u12990
 18882                           
 18883                           ; BSR set to: 0
 18884  0037FC  0E42               	movlw	low _bufferSerial
 18885  0037FE  6F6F               	movwf	strstr@s1& (0+255),b
 18886  003800  0E02               	movlw	high _bufferSerial
 18887  003802  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18888  003804  0EBB               	movlw	low STR_27
 18889  003806  6F71               	movwf	strstr@s2& (0+255),b
 18890  003808  0E7F               	movlw	high STR_27
 18891  00380A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18892  00380C  EC7F  F028         	call	_strstr	;wreg free
 18893  003810  0100               	movlb	0	; () banked
 18894  003812  516F               	movf	?_strstr& (0+255),w,b
 18895  003814  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18896  003816  A4D8               	btfss	status,2,c
 18897  003818  D00F               	goto	u12990
 18898                           
 18899                           ; BSR set to: 0
 18900  00381A  0E42               	movlw	low _bufferSerial
 18901  00381C  6F6F               	movwf	strstr@s1& (0+255),b
 18902  00381E  0E02               	movlw	high _bufferSerial
 18903  003820  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18904  003822  0E6B               	movlw	low STR_28
 18905  003824  6F71               	movwf	strstr@s2& (0+255),b
 18906  003826  0E7F               	movlw	high STR_28
 18907  003828  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18908  00382A  EC7F  F028         	call	_strstr	;wreg free
 18909  00382E  0100               	movlb	0	; () banked
 18910  003830  516F               	movf	?_strstr& (0+255),w,b
 18911  003832  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18912  003834  B4D8               	btfsc	status,2,c
 18913  003836  0012               	return	
 18914  003838                     u12990:
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;conexaoWifi.h: 134: delay(400);
 18918                           
 18919                           ; BSR set to: 0
 18920  003838  0E01               	movlw	1
 18921  00383A  6F61               	movwf	(delay@x+1)& (0+255),b
 18922  00383C  0E90               	movlw	144
 18923  00383E  6F60               	movwf	delay@x& (0+255),b
 18924  003840  EC94  F02E         	call	_delay	;wreg free
 18925                           
 18926                           ;conexaoWifi.h: 135: f_wifi_processo++;
 18927  003844  0101               	movlb	1	; () banked
 18928  003846  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18929                           
 18930                           ; BSR set to: 1
 18931                           ;conexaoWifi.h: 136: }
 18932                           ;conexaoWifi.h: 137: break;
 18933  003848  0012               	return	
 18934  00384A                     
 18935                           ; BSR set to: 1
 18936                           ;conexaoWifi.h: 139: limpaBuffer();
 18937                           
 18938                           ; BSR set to: 1
 18939  00384A  EC75  F02D         	call	_limpaBuffer	;wreg free
 18940                           
 18941                           ;conexaoWifi.h: 140: printf("AT+CIPSENDEX=0,800\r\n");
 18942  00384E  0E13               	movlw	low STR_29
 18943  003850  0100               	movlb	0	; () banked
 18944  003852  6F81               	movwf	printf@f& (0+255),b
 18945  003854  0E7C               	movlw	high STR_29
 18946  003856  6F82               	movwf	(printf@f+1)& (0+255),b
 18947  003858  ECB4  F02D         	call	_printf	;wreg free
 18948                           
 18949                           ;conexaoWifi.h: 141: f_wifi_processo++;
 18950  00385C  0101               	movlb	1	; () banked
 18951  00385E  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18952                           
 18953                           ;conexaoWifi.h: 142: break;
 18954  003860  0012               	return	
 18955  003862                     
 18956                           ; BSR set to: 1
 18957                           ;conexaoWifi.h: 144: if (strstr(bufferSerial, ">") != (0)) {
 18958                           
 18959                           ; BSR set to: 1
 18960  003862  0E42               	movlw	low _bufferSerial
 18961  003864  0100               	movlb	0	; () banked
 18962  003866  6F6F               	movwf	strstr@s1& (0+255),b
 18963  003868  0E02               	movlw	high _bufferSerial
 18964  00386A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18965  00386C  0E78               	movlw	low (STR_107+18)
 18966  00386E  6F71               	movwf	strstr@s2& (0+255),b
 18967  003870  0E7C               	movlw	high (STR_107+18)
 18968  003872  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18969  003874  EC7F  F028         	call	_strstr	;wreg free
 18970  003878  0100               	movlb	0	; () banked
 18971  00387A  516F               	movf	?_strstr& (0+255),w,b
 18972  00387C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18973  00387E  B4D8               	btfsc	status,2,c
 18974  003880  0012               	return	
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;conexaoWifi.h: 145: f_wifi_processo++;
 18978  003882  0101               	movlb	1	; () banked
 18979  003884  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18980                           
 18981                           ; BSR set to: 1
 18982                           ;conexaoWifi.h: 146: }
 18983                           ;conexaoWifi.h: 147: break;
 18984  003886  0012               	return	
 18985  003888                     
 18986                           ; BSR set to: 1
 18987                           ;conexaoWifi.h: 149: limpaBuffer();
 18988                           
 18989                           ; BSR set to: 1
 18990  003888  EC75  F02D         	call	_limpaBuffer	;wreg free
 18991                           
 18992                           ;conexaoWifi.h: 150: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18993  00388C  0E6C               	movlw	low STR_31
 18994  00388E  0100               	movlb	0	; () banked
 18995  003890  6F81               	movwf	printf@f& (0+255),b
 18996  003892  0E7B               	movlw	high STR_31
 18997  003894  6F82               	movwf	(printf@f+1)& (0+255),b
 18998  003896  ECB4  F02D         	call	_printf	;wreg free
 18999                           
 19000                           ;conexaoWifi.h: 151: delay(100);
 19001  00389A  0E00               	movlw	0
 19002  00389C  0100               	movlb	0	; () banked
 19003  00389E  6F61               	movwf	(delay@x+1)& (0+255),b
 19004  0038A0  0E64               	movlw	100
 19005  0038A2  6F60               	movwf	delay@x& (0+255),b
 19006  0038A4  EC94  F02E         	call	_delay	;wreg free
 19007                           
 19008                           ;conexaoWifi.h: 152: printf("<html><head><title>WIFI</title><style>*{font-size: 35px;fon
      +                          t-family:sans-serif;}form{height:450px;display:flex;flex-direction:column;justify-conten
      +                          t:space-around;align-items:center;margin:0 auto;}button{width:280px;height:60px;color:Wh
      +                          ite;bac
 19009  0038A8  0EB1               	movlw	low STR_32
 19010  0038AA  0100               	movlb	0	; () banked
 19011  0038AC  6F81               	movwf	printf@f& (0+255),b
 19012  0038AE  0E77               	movlw	high STR_32
 19013  0038B0  6F82               	movwf	(printf@f+1)& (0+255),b
 19014  0038B2  ECB4  F02D         	call	_printf	;wreg free
 19015                           
 19016                           ;conexaoWifi.h: 153: delay(800);
 19017  0038B6  0E03               	movlw	3
 19018  0038B8  0100               	movlb	0	; () banked
 19019  0038BA  6F61               	movwf	(delay@x+1)& (0+255),b
 19020  0038BC  0E20               	movlw	32
 19021  0038BE  6F60               	movwf	delay@x& (0+255),b
 19022  0038C0  EC94  F02E         	call	_delay	;wreg free
 19023                           
 19024                           ;conexaoWifi.h: 154: printf("AT+CIPCLOSE=0\r\n");
 19025  0038C4  0EEA               	movlw	low STR_33
 19026  0038C6  0100               	movlb	0	; () banked
 19027  0038C8  6F81               	movwf	printf@f& (0+255),b
 19028  0038CA  0E7D               	movlw	high STR_33
 19029  0038CC  6F82               	movwf	(printf@f+1)& (0+255),b
 19030  0038CE  ECB4  F02D         	call	_printf	;wreg free
 19031                           
 19032                           ;conexaoWifi.h: 155: delay(300);
 19033  0038D2  0E01               	movlw	1
 19034  0038D4  0100               	movlb	0	; () banked
 19035  0038D6  6F61               	movwf	(delay@x+1)& (0+255),b
 19036  0038D8  0E2C               	movlw	44
 19037  0038DA  6F60               	movwf	delay@x& (0+255),b
 19038  0038DC  EC94  F02E         	call	_delay	;wreg free
 19039                           
 19040                           ;conexaoWifi.h: 156: t_wifi_restart = 180;
 19041  0038E0  0EB4               	movlw	180
 19042  0038E2  0101               	movlb	1	; () banked
 19043  0038E4  6F97               	movwf	_t_wifi_restart& (0+255),b
 19044                           
 19045                           ; BSR set to: 1
 19046                           ;conexaoWifi.h: 157: limpaBuffer();
 19047  0038E6  EC75  F02D         	call	_limpaBuffer	;wreg free
 19048                           
 19049                           ;conexaoWifi.h: 158: f_wifi_processo++;
 19050  0038EA  0101               	movlb	1	; () banked
 19051  0038EC  2B96               	incf	_f_wifi_processo& (0+255),f,b
 19052                           
 19053                           ;conexaoWifi.h: 159: break;
 19054  0038EE  0012               	return	
 19055  0038F0                     
 19056                           ; BSR set to: 1
 19057                           ;conexaoWifi.h: 161: sprintf(line4, "Aguardando...");
 19058                           
 19059                           ; BSR set to: 1
 19060  0038F0  0E9B               	movlw	low _line4
 19061  0038F2  0100               	movlb	0	; () banked
 19062  0038F4  6F81               	movwf	sprintf@wh& (0+255),b
 19063  0038F6  0E01               	movlw	high _line4
 19064  0038F8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19065  0038FA  0E7B               	movlw	low STR_34
 19066  0038FC  6F83               	movwf	sprintf@f& (0+255),b
 19067  0038FE  0E7E               	movlw	high STR_34
 19068  003900  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19069  003902  EC10  F02D         	call	_sprintf	;wreg free
 19070                           
 19071                           ;conexaoWifi.h: 162: if ((strstr(bufferSerial, "ssid") != (0)) && (strstr(bufferSerial, 
      +                          "fimstr") != (0))) {
 19072  003906  0E42               	movlw	low _bufferSerial
 19073  003908  0100               	movlb	0	; () banked
 19074  00390A  6F6F               	movwf	strstr@s1& (0+255),b
 19075  00390C  0E02               	movlw	high _bufferSerial
 19076  00390E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19077  003910  0ED3               	movlw	low STR_35
 19078  003912  6F71               	movwf	strstr@s2& (0+255),b
 19079  003914  0E7F               	movlw	high STR_35
 19080  003916  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19081  003918  EC7F  F028         	call	_strstr	;wreg free
 19082  00391C  0100               	movlb	0	; () banked
 19083  00391E  516F               	movf	?_strstr& (0+255),w,b
 19084  003920  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19085  003922  B4D8               	btfsc	status,2,c
 19086  003924  0012               	return	
 19087                           
 19088                           ; BSR set to: 0
 19089  003926  0E42               	movlw	low _bufferSerial
 19090  003928  6F6F               	movwf	strstr@s1& (0+255),b
 19091  00392A  0E02               	movlw	high _bufferSerial
 19092  00392C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19093  00392E  0EAD               	movlw	low STR_36
 19094  003930  6F71               	movwf	strstr@s2& (0+255),b
 19095  003932  0E7F               	movlw	high STR_36
 19096  003934  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19097  003936  EC7F  F028         	call	_strstr	;wreg free
 19098  00393A  0100               	movlb	0	; () banked
 19099  00393C  516F               	movf	?_strstr& (0+255),w,b
 19100  00393E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19101  003940  B4D8               	btfsc	status,2,c
 19102  003942  0012               	return	
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;conexaoWifi.h: 163: filtroStr("ssid=", "&", bufferSerial, ssid);
 19106  003944  0EC2               	movlw	low STR_37
 19107  003946  6F91               	movwf	filtroStr@inicio& (0+255),b
 19108  003948  0E7F               	movlw	high STR_37
 19109  00394A  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19110  00394C  0EF9               	movlw	low STR_38
 19111  00394E  6F93               	movwf	filtroStr@fim& (0+255),b
 19112  003950  0E7F               	movlw	high STR_38
 19113  003952  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19114  003954  0E42               	movlw	low _bufferSerial
 19115  003956  6F95               	movwf	filtroStr@str& (0+255),b
 19116  003958  0E02               	movlw	high _bufferSerial
 19117  00395A  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19118  00395C  0EA1               	movlw	low _ssid
 19119  00395E  6F97               	movwf	filtroStr@strdest& (0+255),b
 19120  003960  0E02               	movlw	high _ssid
 19121  003962  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19122  003964  EC74  F022         	call	_filtroStr	;wreg free
 19123                           
 19124                           ;conexaoWifi.h: 164: filtroStr("senha=", "&", bufferSerial, senha);
 19125  003968  0E8A               	movlw	low STR_39
 19126  00396A  0100               	movlb	0	; () banked
 19127  00396C  6F91               	movwf	filtroStr@inicio& (0+255),b
 19128  00396E  0E7F               	movlw	high STR_39
 19129  003970  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19130  003972  0EF9               	movlw	low STR_38
 19131  003974  6F93               	movwf	filtroStr@fim& (0+255),b
 19132  003976  0E7F               	movlw	high STR_38
 19133  003978  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19134  00397A  0E42               	movlw	low _bufferSerial
 19135  00397C  6F95               	movwf	filtroStr@str& (0+255),b
 19136  00397E  0E02               	movlw	high _bufferSerial
 19137  003980  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19138  003982  0E92               	movlw	low _senha
 19139  003984  6F97               	movwf	filtroStr@strdest& (0+255),b
 19140  003986  0E02               	movlw	high _senha
 19141  003988  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19142  00398A  EC74  F022         	call	_filtroStr	;wreg free
 19143                           
 19144                           ;conexaoWifi.h: 166: sprintf(line1, "%s", ssid);
 19145  00398E  0EDA               	movlw	low _line1
 19146  003990  0100               	movlb	0	; () banked
 19147  003992  6F81               	movwf	sprintf@wh& (0+255),b
 19148  003994  0E01               	movlw	high _line1
 19149  003996  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19150  003998  0E26               	movlw	low (STR_82+7)
 19151  00399A  6F83               	movwf	sprintf@f& (0+255),b
 19152  00399C  0E7F               	movlw	high (STR_82+7)
 19153  00399E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19154  0039A0  0EA1               	movlw	low _ssid
 19155  0039A2  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19156  0039A4  0E02               	movlw	high _ssid
 19157  0039A6  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19158  0039A8  EC10  F02D         	call	_sprintf	;wreg free
 19159                           
 19160                           ;conexaoWifi.h: 167: sprintf(line2, "%s", senha);
 19161  0039AC  0EC5               	movlw	low _line2
 19162  0039AE  0100               	movlb	0	; () banked
 19163  0039B0  6F81               	movwf	sprintf@wh& (0+255),b
 19164  0039B2  0E01               	movlw	high _line2
 19165  0039B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19166  0039B6  0E26               	movlw	low (STR_82+7)
 19167  0039B8  6F83               	movwf	sprintf@f& (0+255),b
 19168  0039BA  0E7F               	movlw	high (STR_82+7)
 19169  0039BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19170  0039BE  0E92               	movlw	low _senha
 19171  0039C0  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19172  0039C2  0E02               	movlw	high _senha
 19173  0039C4  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19174  0039C6  EC10  F02D         	call	_sprintf	;wreg free
 19175                           
 19176                           ;conexaoWifi.h: 168: sprintf(line4, "OK...        ");
 19177  0039CA  0E9B               	movlw	low _line4
 19178  0039CC  0100               	movlb	0	; () banked
 19179  0039CE  6F81               	movwf	sprintf@wh& (0+255),b
 19180  0039D0  0E01               	movlw	high _line4
 19181  0039D2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19182  0039D4  0E6D               	movlw	low STR_43
 19183  0039D6  6F83               	movwf	sprintf@f& (0+255),b
 19184  0039D8  0E7E               	movlw	high STR_43
 19185  0039DA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19186  0039DC  EC10  F02D         	call	_sprintf	;wreg free
 19187                           
 19188                           ;conexaoWifi.h: 169: atualizaLCD(line1, line2, line3, line4);
 19189  0039E0  0EDA               	movlw	low _line1
 19190  0039E2  0100               	movlb	0	; () banked
 19191  0039E4  6F68               	movwf	atualizaLCD@line1& (0+255),b
 19192  0039E6  0E01               	movlw	high _line1
 19193  0039E8  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 19194  0039EA  0EC5               	movlw	low _line2
 19195  0039EC  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 19196  0039EE  0E01               	movlw	high _line2
 19197  0039F0  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 19198  0039F2  0EB0               	movlw	low _line3
 19199  0039F4  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 19200  0039F6  0E01               	movlw	high _line3
 19201  0039F8  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 19202  0039FA  0E9B               	movlw	low _line4
 19203  0039FC  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 19204  0039FE  0E01               	movlw	high _line4
 19205  003A00  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 19206  003A02  EC14  F027         	call	_atualizaLCD	;wreg free
 19207                           
 19208                           ;conexaoWifi.h: 171: if (strlen(ssid) > 3) {
 19209  003A06  0EA1               	movlw	low _ssid
 19210  003A08  0100               	movlb	0	; () banked
 19211  003A0A  6F60               	movwf	strlen@s& (0+255),b
 19212  003A0C  0E02               	movlw	high _ssid
 19213  003A0E  6F61               	movwf	(strlen@s+1)& (0+255),b
 19214  003A10  EC6E  F02C         	call	_strlen	;wreg free
 19215  003A14  0100               	movlb	0	; () banked
 19216  003A16  5161               	movf	(?_strlen+1)& (0+255),w,b
 19217  003A18  E104               	bnz	u13030
 19218  003A1A  0E04               	movlw	4
 19219  003A1C  5D60               	subwf	?_strlen& (0+255),w,b
 19220  003A1E  A0D8               	btfss	status,0,c
 19221  003A20  D030               	goto	u13070
 19222  003A22                     u13030:
 19223                           
 19224                           ; BSR set to: 0
 19225                           ;conexaoWifi.h: 172: unsigned char i = 0;
 19226  003A22  0E00               	movlw	0
 19227  003A24  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19228                           
 19229                           ;conexaoWifi.h: 173: for (i = 0; i < 15; i++) {
 19230  003A26  0E00               	movlw	0
 19231  003A28  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19232  003A2A                     l8647:
 19233                           
 19234                           ; BSR set to: 0
 19235  003A2A  0E0E               	movlw	14
 19236  003A2C  65C3               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19237  003A2E  D001               	goto	l1017
 19238  003A30  D011               	goto	u13050
 19239  003A32                     l1017:
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;conexaoWifi.h: 174: writeEEPROM_ext((40 + i), ssid[i]);
 19243                           
 19244                           ; BSR set to: 0
 19245  003A32  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19246  003A34  0D01               	mullw	1
 19247  003A36  0EA1               	movlw	low _ssid
 19248  003A38  24F3               	addwf	prodl,w,c
 19249  003A3A  6ED9               	movwf	fsr2l,c
 19250  003A3C  0E02               	movlw	high _ssid
 19251  003A3E  20F4               	addwfc	prodh,w,c
 19252  003A40  6EDA               	movwf	fsr2h,c
 19253  003A42  50DF               	movf	indf2,w,c
 19254  003A44  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19255  003A46  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19256  003A48  0F28               	addlw	40
 19257  003A4A  EC54  F02D         	call	_writeEEPROM_ext
 19258  003A4E  0100               	movlb	0	; () banked
 19259  003A50  2BC3               	incf	alterarConfigWifi@i& (0+255),f,b
 19260  003A52  D7EB               	goto	l8647
 19261  003A54                     u13050:
 19262                           
 19263                           ; BSR set to: 0
 19264                           ;conexaoWifi.h: 175: }
 19265                           ;conexaoWifi.h: 176: for (i = 0; i < 15; i++) {
 19266                           
 19267                           ; BSR set to: 0
 19268  003A54  0E00               	movlw	0
 19269  003A56  6FC3               	movwf	alterarConfigWifi@i& (0+255),b
 19270  003A58                     l8659:
 19271                           
 19272                           ; BSR set to: 0
 19273  003A58  0E0E               	movlw	14
 19274  003A5A  65C3               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19275  003A5C  D001               	goto	l1019
 19276  003A5E  D011               	goto	u13070
 19277  003A60                     l1019:
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;conexaoWifi.h: 177: writeEEPROM_ext((60 + i), senha[i]);
 19281                           
 19282                           ; BSR set to: 0
 19283  003A60  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19284  003A62  0D01               	mullw	1
 19285  003A64  0E92               	movlw	low _senha
 19286  003A66  24F3               	addwf	prodl,w,c
 19287  003A68  6ED9               	movwf	fsr2l,c
 19288  003A6A  0E02               	movlw	high _senha
 19289  003A6C  20F4               	addwfc	prodh,w,c
 19290  003A6E  6EDA               	movwf	fsr2h,c
 19291  003A70  50DF               	movf	indf2,w,c
 19292  003A72  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19293  003A74  51C3               	movf	alterarConfigWifi@i& (0+255),w,b
 19294  003A76  0F3C               	addlw	60
 19295  003A78  EC54  F02D         	call	_writeEEPROM_ext
 19296  003A7C  0100               	movlb	0	; () banked
 19297  003A7E  2BC3               	incf	alterarConfigWifi@i& (0+255),f,b
 19298  003A80  D7EB               	goto	l8659
 19299  003A82                     u13070:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;conexaoWifi.h: 178: }
 19303                           ;conexaoWifi.h: 179: }
 19304                           ;conexaoWifi.h: 180: while (1) {
 19305                           
 19306                           ; BSR set to: 0
 19307  003A82  D7FF               	goto	u13070
 19308  003A84  0E00               	movlw	0
 19309  003A86  0101               	movlb	1	; () banked
 19310  003A88  6F96               	movwf	_f_wifi_processo& (0+255),b
 19311                           
 19312                           ;conexaoWifi.h: 185: }
 19313  003A8A  0012               	return	
 19314  003A8C                     l989:
 19315                           
 19316                           ; BSR set to: 1
 19317  003A8C  0101               	movlb	1	; () banked
 19318  003A8E  5196               	movf	_f_wifi_processo& (0+255),w,b
 19319                           
 19320                           ; Switch size 1, requested type "space"
 19321                           ; Number of cases is 15, Range of values is 0 to 14
 19322                           ; switch strategies available:
 19323                           ; Name         Instructions Cycles
 19324                           ; simple_byte           46    24 (average)
 19325                           ;	Chosen strategy is simple_byte
 19326  003A90  0A00               	xorlw	0	; case 0
 19327  003A92  B4D8               	btfsc	status,2,c
 19328  003A94  D5D8               	goto	l990
 19329  003A96  0A01               	xorlw	1	; case 1
 19330  003A98  B4D8               	btfsc	status,2,c
 19331  003A9A  D5E3               	goto	l992
 19332  003A9C  0A03               	xorlw	3	; case 2
 19333  003A9E  B4D8               	btfsc	status,2,c
 19334  003AA0  D5F3               	goto	l994
 19335  003AA2  0A01               	xorlw	1	; case 3
 19336  003AA4  B4D8               	btfsc	status,2,c
 19337  003AA6  D5FC               	goto	l995
 19338  003AA8  0A07               	xorlw	7	; case 4
 19339  003AAA  B4D8               	btfsc	status,2,c
 19340  003AAC  D60C               	goto	l997
 19341  003AAE  0A01               	xorlw	1	; case 5
 19342  003AB0  B4D8               	btfsc	status,2,c
 19343  003AB2  D615               	goto	l998
 19344  003AB4  0A03               	xorlw	3	; case 6
 19345  003AB6  B4D8               	btfsc	status,2,c
 19346  003AB8  D625               	goto	l1000
 19347  003ABA  0A01               	xorlw	1	; case 7
 19348  003ABC  B4D8               	btfsc	status,2,c
 19349  003ABE  D62E               	goto	l1001
 19350  003AC0  0A0F               	xorlw	15	; case 8
 19351  003AC2  B4D8               	btfsc	status,2,c
 19352  003AC4  D63E               	goto	l1003
 19353  003AC6  0A01               	xorlw	1	; case 9
 19354  003AC8  B4D8               	btfsc	status,2,c
 19355  003ACA  D647               	goto	l1004
 19356  003ACC  0A03               	xorlw	3	; case 10
 19357  003ACE  B4D8               	btfsc	status,2,c
 19358  003AD0  D659               	goto	l1006
 19359  003AD2  0A01               	xorlw	1	; case 11
 19360  003AD4  B4D8               	btfsc	status,2,c
 19361  003AD6  D6B9               	goto	l1010
 19362  003AD8  0A07               	xorlw	7	; case 12
 19363  003ADA  B4D8               	btfsc	status,2,c
 19364  003ADC  D6C2               	goto	l1011
 19365  003ADE  0A01               	xorlw	1	; case 13
 19366  003AE0  B4D8               	btfsc	status,2,c
 19367  003AE2  D6D2               	goto	l1013
 19368  003AE4  0A03               	xorlw	3	; case 14
 19369  003AE6  B4D8               	btfsc	status,2,c
 19370  003AE8  D703               	goto	l1014
 19371  003AEA  D7CC               	goto	l1024
 19372  003AEC                     __end_of_alterarConfigWifi:
 19373                           	opt stack 0
 19374                           tblptru	equ	0xFF8
 19375                           tblptrh	equ	0xFF7
 19376                           tblptrl	equ	0xFF6
 19377                           tablat	equ	0xFF5
 19378                           prodh	equ	0xFF4
 19379                           prodl	equ	0xFF3
 19380                           intcon	equ	0xFF2
 19381                           intcon2	equ	0xFF1
 19382                           intcon3	equ	0xFF0
 19383                           indf0	equ	0xFEF
 19384                           postinc0	equ	0xFEE
 19385                           fsr0h	equ	0xFEA
 19386                           fsr0l	equ	0xFE9
 19387                           wreg	equ	0xFE8
 19388                           postdec1	equ	0xFE5
 19389                           fsr1l	equ	0xFE1
 19390                           indf2	equ	0xFDF
 19391                           postinc2	equ	0xFDE
 19392                           postdec2	equ	0xFDD
 19393                           fsr2h	equ	0xFDA
 19394                           fsr2l	equ	0xFD9
 19395                           status	equ	0xFD8
 19396                           
 19397 ;; *************** function _writeEEPROM_ext *****************
 19398 ;; Defined at:
 19399 ;;		line 14 in file "src/Eeprom_ext.h"
 19400 ;; Parameters:    Size  Location     Type
 19401 ;;  adress          1    wreg     unsigned char 
 19402 ;;  data            1    3[BANK0 ] unsigned char 
 19403 ;; Auto vars:     Size  Location     Type
 19404 ;;  adress          1    4[BANK0 ] unsigned char 
 19405 ;; Return value:  Size  Location     Type
 19406 ;;                  1    wreg      void 
 19407 ;; Registers used:
 19408 ;;		wreg, status,2, status,0, cstack
 19409 ;; Tracked objects:
 19410 ;;		On entry : 0/0
 19411 ;;		On exit  : 0/0
 19412 ;;		Unchanged: 0/0
 19413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19414 ;;      Params:         0       1       0       0       0       0       0       0       0
 19415 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19417 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19418 ;;Total ram usage:        2 bytes
 19419 ;; Hardware stack levels used:    1
 19420 ;; Hardware stack levels required when called:    8
 19421 ;; This function calls:
 19422 ;;		_I2C_Start
 19423 ;;		_I2C_Stop
 19424 ;;		_I2C_Write
 19425 ;;		_delay
 19426 ;; This function is called by:
 19427 ;;		_setUmidade
 19428 ;;		_setRangeValor
 19429 ;;		_alterarConfigWifi
 19430 ;;		_main
 19431 ;;		_writeEEPROM16_ext
 19432 ;; This function uses a non-reentrant model
 19433 ;;
 19434                           
 19435                           	psect	text28
 19436  005AA8                     __ptext28:
 19437                           	opt stack 0
 19438  005AA8                     _writeEEPROM_ext:
 19439                           	opt stack 22
 19440                           
 19441                           ;incstack = 0
 19442                           ;writeEEPROM_ext@adress stored from wreg
 19443  005AA8  0100               	movlb	0	; () banked
 19444  005AAA  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 19445                           
 19446                           ;Eeprom_ext.h: 16: I2C_Start();
 19447  005AAC  EC84  F02F         	call	_I2C_Start	;wreg free
 19448                           
 19449                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 19450  005AB0  0E00               	movlw	0
 19451  005AB2  0100               	movlb	0	; () banked
 19452  005AB4  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 19453  005AB6  0EA0               	movlw	160
 19454  005AB8  6F61               	movwf	I2C_Write@d& (0+255),b
 19455  005ABA  EC72  F02F         	call	_I2C_Write	;wreg free
 19456                           
 19457                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 19458  005ABE  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 19459  005AC2  0100               	movlb	0	; () banked
 19460  005AC4  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19461  005AC6  EC72  F02F         	call	_I2C_Write	;wreg free
 19462                           
 19463                           ;Eeprom_ext.h: 20: I2C_Write(data);
 19464  005ACA  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 19465  005ACE  0100               	movlb	0	; () banked
 19466  005AD0  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19467  005AD2  EC72  F02F         	call	_I2C_Write	;wreg free
 19468                           
 19469                           ;Eeprom_ext.h: 21: I2C_Stop();
 19470  005AD6  EC80  F02F         	call	_I2C_Stop	;wreg free
 19471                           
 19472                           ;Eeprom_ext.h: 22: delay(105);
 19473  005ADA  0E00               	movlw	0
 19474  005ADC  0100               	movlb	0	; () banked
 19475  005ADE  6F61               	movwf	(delay@x+1)& (0+255),b
 19476  005AE0  0E69               	movlw	105
 19477  005AE2  6F60               	movwf	delay@x& (0+255),b
 19478  005AE4  EC94  F02E         	call	_delay	;wreg free
 19479  005AE8  0012               	return		;funcret
 19480  005AEA                     __end_of_writeEEPROM_ext:
 19481                           	opt stack 0
 19482                           tblptru	equ	0xFF8
 19483                           tblptrh	equ	0xFF7
 19484                           tblptrl	equ	0xFF6
 19485                           tablat	equ	0xFF5
 19486                           prodh	equ	0xFF4
 19487                           prodl	equ	0xFF3
 19488                           intcon	equ	0xFF2
 19489                           intcon2	equ	0xFF1
 19490                           intcon3	equ	0xFF0
 19491                           indf0	equ	0xFEF
 19492                           postinc0	equ	0xFEE
 19493                           fsr0h	equ	0xFEA
 19494                           fsr0l	equ	0xFE9
 19495                           wreg	equ	0xFE8
 19496                           postdec1	equ	0xFE5
 19497                           fsr1l	equ	0xFE1
 19498                           indf2	equ	0xFDF
 19499                           postinc2	equ	0xFDE
 19500                           postdec2	equ	0xFDD
 19501                           fsr2h	equ	0xFDA
 19502                           fsr2l	equ	0xFD9
 19503                           status	equ	0xFD8
 19504                           
 19505 ;; *************** function _I2C_Write *****************
 19506 ;; Defined at:
 19507 ;;		line 41 in file "src/I2C.c"
 19508 ;; Parameters:    Size  Location     Type
 19509 ;;  d               2    1[BANK0 ] unsigned int 
 19510 ;; Auto vars:     Size  Location     Type
 19511 ;;		None
 19512 ;; Return value:  Size  Location     Type
 19513 ;;                  1    wreg      void 
 19514 ;; Registers used:
 19515 ;;		wreg, status,2, status,0, cstack
 19516 ;; Tracked objects:
 19517 ;;		On entry : 0/0
 19518 ;;		On exit  : 0/0
 19519 ;;		Unchanged: 0/0
 19520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19521 ;;      Params:         0       2       0       0       0       0       0       0       0
 19522 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19524 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19525 ;;Total ram usage:        2 bytes
 19526 ;; Hardware stack levels used:    1
 19527 ;; Hardware stack levels required when called:    7
 19528 ;; This function calls:
 19529 ;;		_I2C_Wait
 19530 ;; This function is called by:
 19531 ;;		_updateLeds
 19532 ;;		_writeEEPROM_ext
 19533 ;;		_readEEPROM_ext
 19534 ;; This function uses a non-reentrant model
 19535 ;;
 19536                           
 19537                           	psect	text29
 19538  005EE4                     __ptext29:
 19539                           	opt stack 0
 19540  005EE4                     _I2C_Write:
 19541                           	opt stack 22
 19542                           
 19543                           ;I2C.c: 42: I2C_Wait();
 19544                           
 19545                           ;incstack = 0
 19546  005EE4  EC51  F02F         	call	_I2C_Wait	;wreg free
 19547                           
 19548                           ;I2C.c: 43: SSPBUF = d;
 19549  005EE8  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19550  005EEC  0012               	return		;funcret
 19551  005EEE                     __end_of_I2C_Write:
 19552                           	opt stack 0
 19553                           tblptru	equ	0xFF8
 19554                           tblptrh	equ	0xFF7
 19555                           tblptrl	equ	0xFF6
 19556                           tablat	equ	0xFF5
 19557                           prodh	equ	0xFF4
 19558                           prodl	equ	0xFF3
 19559                           intcon	equ	0xFF2
 19560                           intcon2	equ	0xFF1
 19561                           intcon3	equ	0xFF0
 19562                           indf0	equ	0xFEF
 19563                           postinc0	equ	0xFEE
 19564                           fsr0h	equ	0xFEA
 19565                           fsr0l	equ	0xFE9
 19566                           wreg	equ	0xFE8
 19567                           postdec1	equ	0xFE5
 19568                           fsr1l	equ	0xFE1
 19569                           indf2	equ	0xFDF
 19570                           postinc2	equ	0xFDE
 19571                           postdec2	equ	0xFDD
 19572                           fsr2h	equ	0xFDA
 19573                           fsr2l	equ	0xFD9
 19574                           status	equ	0xFD8
 19575                           
 19576 ;; *************** function _I2C_Stop *****************
 19577 ;; Defined at:
 19578 ;;		line 35 in file "src/I2C.c"
 19579 ;; Parameters:    Size  Location     Type
 19580 ;;		None
 19581 ;; Auto vars:     Size  Location     Type
 19582 ;;		None
 19583 ;; Return value:  Size  Location     Type
 19584 ;;                  1    wreg      void 
 19585 ;; Registers used:
 19586 ;;		wreg, status,2, status,0, cstack
 19587 ;; Tracked objects:
 19588 ;;		On entry : 0/0
 19589 ;;		On exit  : 0/0
 19590 ;;		Unchanged: 0/0
 19591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19592 ;;      Params:         0       0       0       0       0       0       0       0       0
 19593 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19594 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19595 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19596 ;;Total ram usage:        0 bytes
 19597 ;; Hardware stack levels used:    1
 19598 ;; Hardware stack levels required when called:    7
 19599 ;; This function calls:
 19600 ;;		_I2C_Wait
 19601 ;; This function is called by:
 19602 ;;		_updateLeds
 19603 ;;		_writeEEPROM_ext
 19604 ;;		_readEEPROM_ext
 19605 ;; This function uses a non-reentrant model
 19606 ;;
 19607                           
 19608                           	psect	text30
 19609  005F00                     __ptext30:
 19610                           	opt stack 0
 19611  005F00                     _I2C_Stop:
 19612                           	opt stack 22
 19613                           
 19614                           ;I2C.c: 36: I2C_Wait();
 19615                           
 19616                           ;incstack = 0
 19617  005F00  EC51  F02F         	call	_I2C_Wait	;wreg free
 19618                           
 19619                           ;I2C.c: 37: PEN = 1;
 19620  005F04  84C5               	bsf	4037,2,c	;volatile
 19621  005F06  0012               	return		;funcret
 19622  005F08                     __end_of_I2C_Stop:
 19623                           	opt stack 0
 19624                           tblptru	equ	0xFF8
 19625                           tblptrh	equ	0xFF7
 19626                           tblptrl	equ	0xFF6
 19627                           tablat	equ	0xFF5
 19628                           prodh	equ	0xFF4
 19629                           prodl	equ	0xFF3
 19630                           intcon	equ	0xFF2
 19631                           intcon2	equ	0xFF1
 19632                           intcon3	equ	0xFF0
 19633                           indf0	equ	0xFEF
 19634                           postinc0	equ	0xFEE
 19635                           fsr0h	equ	0xFEA
 19636                           fsr0l	equ	0xFE9
 19637                           wreg	equ	0xFE8
 19638                           postdec1	equ	0xFE5
 19639                           fsr1l	equ	0xFE1
 19640                           indf2	equ	0xFDF
 19641                           postinc2	equ	0xFDE
 19642                           postdec2	equ	0xFDD
 19643                           fsr2h	equ	0xFDA
 19644                           fsr2l	equ	0xFD9
 19645                           status	equ	0xFD8
 19646                           
 19647 ;; *************** function _I2C_Start *****************
 19648 ;; Defined at:
 19649 ;;		line 25 in file "src/I2C.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;		None
 19652 ;; Auto vars:     Size  Location     Type
 19653 ;;		None
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1    wreg      void 
 19656 ;; Registers used:
 19657 ;;		wreg, status,2, status,0, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/0
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19663 ;;      Params:         0       0       0       0       0       0       0       0       0
 19664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19666 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19667 ;;Total ram usage:        0 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:    7
 19670 ;; This function calls:
 19671 ;;		_I2C_Wait
 19672 ;; This function is called by:
 19673 ;;		_updateLeds
 19674 ;;		_writeEEPROM_ext
 19675 ;;		_readEEPROM_ext
 19676 ;; This function uses a non-reentrant model
 19677 ;;
 19678                           
 19679                           	psect	text31
 19680  005F08                     __ptext31:
 19681                           	opt stack 0
 19682  005F08                     _I2C_Start:
 19683                           	opt stack 22
 19684                           
 19685                           ;I2C.c: 26: I2C_Wait();
 19686                           
 19687                           ;incstack = 0
 19688  005F08  EC51  F02F         	call	_I2C_Wait	;wreg free
 19689                           
 19690                           ;I2C.c: 27: SEN = 1;
 19691  005F0C  80C5               	bsf	4037,0,c	;volatile
 19692  005F0E  0012               	return		;funcret
 19693  005F10                     __end_of_I2C_Start:
 19694                           	opt stack 0
 19695                           tblptru	equ	0xFF8
 19696                           tblptrh	equ	0xFF7
 19697                           tblptrl	equ	0xFF6
 19698                           tablat	equ	0xFF5
 19699                           prodh	equ	0xFF4
 19700                           prodl	equ	0xFF3
 19701                           intcon	equ	0xFF2
 19702                           intcon2	equ	0xFF1
 19703                           intcon3	equ	0xFF0
 19704                           indf0	equ	0xFEF
 19705                           postinc0	equ	0xFEE
 19706                           fsr0h	equ	0xFEA
 19707                           fsr0l	equ	0xFE9
 19708                           wreg	equ	0xFE8
 19709                           postdec1	equ	0xFE5
 19710                           fsr1l	equ	0xFE1
 19711                           indf2	equ	0xFDF
 19712                           postinc2	equ	0xFDE
 19713                           postdec2	equ	0xFDD
 19714                           fsr2h	equ	0xFDA
 19715                           fsr2l	equ	0xFD9
 19716                           status	equ	0xFD8
 19717                           
 19718 ;; *************** function _I2C_Wait *****************
 19719 ;; Defined at:
 19720 ;;		line 21 in file "src/I2C.c"
 19721 ;; Parameters:    Size  Location     Type
 19722 ;;		None
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;		None
 19725 ;; Return value:  Size  Location     Type
 19726 ;;                  1    wreg      void 
 19727 ;; Registers used:
 19728 ;;		wreg, status,2, status,0
 19729 ;; Tracked objects:
 19730 ;;		On entry : 0/0
 19731 ;;		On exit  : 0/0
 19732 ;;		Unchanged: 0/0
 19733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19734 ;;      Params:         0       0       0       0       0       0       0       0       0
 19735 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19736 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19737 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19738 ;;Total ram usage:        1 bytes
 19739 ;; Hardware stack levels used:    1
 19740 ;; Hardware stack levels required when called:    6
 19741 ;; This function calls:
 19742 ;;		Nothing
 19743 ;; This function is called by:
 19744 ;;		_I2C_Start
 19745 ;;		_I2C_Restart
 19746 ;;		_I2C_Stop
 19747 ;;		_I2C_Write
 19748 ;;		_I2C_Read
 19749 ;; This function uses a non-reentrant model
 19750 ;;
 19751                           
 19752                           	psect	text32
 19753  005EA2                     __ptext32:
 19754                           	opt stack 0
 19755  005EA2                     _I2C_Wait:
 19756                           	opt stack 22
 19757                           
 19758                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19759                           
 19760                           ;incstack = 0
 19761  005EA2  B4C7               	btfsc	4039,2,c	;volatile
 19762  005EA4  D7FE               	goto	_I2C_Wait
 19763  005EA6  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19764  005EAA  0E1F               	movlw	31
 19765  005EAC  0100               	movlb	0	; () banked
 19766  005EAE  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19767  005EB0  B4D8               	btfsc	status,2,c
 19768  005EB2  0012               	return	
 19769  005EB4  D7F6               	goto	_I2C_Wait
 19770  005EB6                     __end_of_I2C_Wait:
 19771                           	opt stack 0
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           intcon2	equ	0xFF1
 19780                           intcon3	equ	0xFF0
 19781                           indf0	equ	0xFEF
 19782                           postinc0	equ	0xFEE
 19783                           fsr0h	equ	0xFEA
 19784                           fsr0l	equ	0xFE9
 19785                           wreg	equ	0xFE8
 19786                           postdec1	equ	0xFE5
 19787                           fsr1l	equ	0xFE1
 19788                           indf2	equ	0xFDF
 19789                           postinc2	equ	0xFDE
 19790                           postdec2	equ	0xFDD
 19791                           fsr2h	equ	0xFDA
 19792                           fsr2l	equ	0xFD9
 19793                           status	equ	0xFD8
 19794                           
 19795 ;; *************** function _printf *****************
 19796 ;; Defined at:
 19797 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19800 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(189), 
 19801 ;;		 -> STR_55(19), STR_53(62), STR_50(15), STR_49(21), 
 19802 ;;		 -> STR_46(14), STR_44(14), STR_33(16), STR_32(704), 
 19803 ;;		 -> STR_31(45), STR_29(21), STR_20(22), STR_18(22), 
 19804 ;;		 -> STR_16(35), STR_14(14), STR_12(14), 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;  pb              4   95[BANK0 ] struct __prbuf
 19807 ;;  ap              2   93[BANK0 ] PTR void [1]
 19808 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19809 ;; Return value:  Size  Location     Type
 19810 ;;                  2   33[BANK0 ] int 
 19811 ;; Registers used:
 19812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19813 ;; Tracked objects:
 19814 ;;		On entry : 0/0
 19815 ;;		On exit  : 0/0
 19816 ;;		Unchanged: 0/0
 19817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19818 ;;      Params:         0      60       0       0       0       0       0       0       0
 19819 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19821 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19822 ;;Total ram usage:       66 bytes
 19823 ;; Hardware stack levels used:    1
 19824 ;; Hardware stack levels required when called:    8
 19825 ;; This function calls:
 19826 ;;		__doprnt
 19827 ;; This function is called by:
 19828 ;;		_alterarConfigWifi
 19829 ;;		_enviaDadosWifi
 19830 ;;		_main
 19831 ;; This function uses a non-reentrant model
 19832 ;;
 19833                           
 19834                           	psect	text33
 19835  005B68                     __ptext33:
 19836                           	opt stack 0
 19837  005B68                     _printf:
 19838                           	opt stack 22
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;incstack = 0
 19842  005B68  0E00               	movlw	0
 19843  005B6A  0100               	movlb	0	; () banked
 19844  005B6C  6FBF               	movwf	printf@pb& (0+255),b
 19845  005B6E  0E00               	movlw	0
 19846  005B70  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19847  005B72  0EC8               	movlw	low _putch
 19848  005B74  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19849  005B76  0E5E               	movlw	high _putch
 19850  005B78  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19851  005B7A  0E83               	movlw	low (?_printf+2)
 19852  005B7C  6FBD               	movwf	printf@ap& (0+255),b
 19853  005B7E  0E00               	movlw	high (?_printf+2)
 19854  005B80  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;	Return value of _printf is never used
 19858  005B82  0EBF               	movlw	low printf@pb
 19859  005B84  6F6C               	movwf	__doprnt@pb& (0+255),b
 19860  005B86  0E00               	movlw	high printf@pb
 19861  005B88  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19862  005B8A  C081  F06E         	movff	printf@f,__doprnt@f
 19863  005B8E  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19864  005B92  0EBD               	movlw	low printf@ap
 19865  005B94  6F70               	movwf	__doprnt@ap& (0+255),b
 19866  005B96  0E00               	movlw	high printf@ap
 19867  005B98  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19868  005B9A  EC0B  F013         	call	__doprnt	;wreg free
 19869  005B9E  0012               	return	
 19870  005BA0                     __end_of_printf:
 19871                           	opt stack 0
 19872                           tblptru	equ	0xFF8
 19873                           tblptrh	equ	0xFF7
 19874                           tblptrl	equ	0xFF6
 19875                           tablat	equ	0xFF5
 19876                           prodh	equ	0xFF4
 19877                           prodl	equ	0xFF3
 19878                           intcon	equ	0xFF2
 19879                           intcon2	equ	0xFF1
 19880                           intcon3	equ	0xFF0
 19881                           indf0	equ	0xFEF
 19882                           postinc0	equ	0xFEE
 19883                           fsr0h	equ	0xFEA
 19884                           fsr0l	equ	0xFE9
 19885                           wreg	equ	0xFE8
 19886                           postdec1	equ	0xFE5
 19887                           fsr1l	equ	0xFE1
 19888                           indf2	equ	0xFDF
 19889                           postinc2	equ	0xFDE
 19890                           postdec2	equ	0xFDD
 19891                           fsr2h	equ	0xFDA
 19892                           fsr2l	equ	0xFD9
 19893                           status	equ	0xFD8
 19894                           
 19895 ;; *************** function _limpaBuffer *****************
 19896 ;; Defined at:
 19897 ;;		line 21 in file "src/conexaoWifi.h"
 19898 ;; Parameters:    Size  Location     Type
 19899 ;;		None
 19900 ;; Auto vars:     Size  Location     Type
 19901 ;;		None
 19902 ;; Return value:  Size  Location     Type
 19903 ;;                  1    wreg      void 
 19904 ;; Registers used:
 19905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19906 ;; Tracked objects:
 19907 ;;		On entry : 0/0
 19908 ;;		On exit  : 0/0
 19909 ;;		Unchanged: 0/0
 19910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19911 ;;      Params:         0       0       0       0       0       0       0       0       0
 19912 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19913 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19914 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19915 ;;Total ram usage:        0 bytes
 19916 ;; Hardware stack levels used:    1
 19917 ;; Hardware stack levels required when called:    7
 19918 ;; This function calls:
 19919 ;;		_delay
 19920 ;;		_memset
 19921 ;; This function is called by:
 19922 ;;		_alterarConfigWifi
 19923 ;;		_enviaDadosWifi
 19924 ;; This function uses a non-reentrant model
 19925 ;;
 19926                           
 19927                           	psect	text34
 19928  005AEA                     __ptext34:
 19929                           	opt stack 0
 19930  005AEA                     _limpaBuffer:
 19931                           	opt stack 22
 19932                           
 19933                           ;conexaoWifi.h: 22: delay(5);
 19934                           
 19935                           ;incstack = 0
 19936  005AEA  0E00               	movlw	0
 19937  005AEC  0100               	movlb	0	; () banked
 19938  005AEE  6F61               	movwf	(delay@x+1)& (0+255),b
 19939  005AF0  0E05               	movlw	5
 19940  005AF2  6F60               	movwf	delay@x& (0+255),b
 19941  005AF4  EC94  F02E         	call	_delay	;wreg free
 19942                           
 19943                           ;conexaoWifi.h: 23: memset(bufferSerial, 0, sizeof (bufferSerial));
 19944  005AF8  0E42               	movlw	low _bufferSerial
 19945  005AFA  0100               	movlb	0	; () banked
 19946  005AFC  6F60               	movwf	memset@p1& (0+255),b
 19947  005AFE  0E02               	movlw	high _bufferSerial
 19948  005B00  6F61               	movwf	(memset@p1+1)& (0+255),b
 19949  005B02  0E00               	movlw	0
 19950  005B04  6F63               	movwf	(memset@c+1)& (0+255),b
 19951  005B06  0E00               	movlw	0
 19952  005B08  6F62               	movwf	memset@c& (0+255),b
 19953  005B0A  0E00               	movlw	0
 19954  005B0C  6F65               	movwf	(memset@n+1)& (0+255),b
 19955  005B0E  0E50               	movlw	80
 19956  005B10  6F64               	movwf	memset@n& (0+255),b
 19957  005B12  EC36  F02E         	call	_memset	;wreg free
 19958                           
 19959                           ;conexaoWifi.h: 24: cbf = 0;
 19960  005B16  0E00               	movlw	0
 19961  005B18  6E43               	movwf	_cbf,c
 19962                           
 19963                           ;conexaoWifi.h: 25: delay(5);
 19964  005B1A  0E00               	movlw	0
 19965  005B1C  0100               	movlb	0	; () banked
 19966  005B1E  6F61               	movwf	(delay@x+1)& (0+255),b
 19967  005B20  0E05               	movlw	5
 19968  005B22  6F60               	movwf	delay@x& (0+255),b
 19969  005B24  EC94  F02E         	call	_delay	;wreg free
 19970  005B28  0012               	return		;funcret
 19971  005B2A                     __end_of_limpaBuffer:
 19972                           	opt stack 0
 19973                           tblptru	equ	0xFF8
 19974                           tblptrh	equ	0xFF7
 19975                           tblptrl	equ	0xFF6
 19976                           tablat	equ	0xFF5
 19977                           prodh	equ	0xFF4
 19978                           prodl	equ	0xFF3
 19979                           intcon	equ	0xFF2
 19980                           intcon2	equ	0xFF1
 19981                           intcon3	equ	0xFF0
 19982                           indf0	equ	0xFEF
 19983                           postinc0	equ	0xFEE
 19984                           fsr0h	equ	0xFEA
 19985                           fsr0l	equ	0xFE9
 19986                           wreg	equ	0xFE8
 19987                           postdec1	equ	0xFE5
 19988                           fsr1l	equ	0xFE1
 19989                           indf2	equ	0xFDF
 19990                           postinc2	equ	0xFDE
 19991                           postdec2	equ	0xFDD
 19992                           fsr2h	equ	0xFDA
 19993                           fsr2l	equ	0xFD9
 19994                           status	equ	0xFD8
 19995                           
 19996 ;; *************** function _memset *****************
 19997 ;; Defined at:
 19998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19999 ;; Parameters:    Size  Location     Type
 20000 ;;  p1              2    0[BANK0 ] PTR void 
 20001 ;;		 -> bufferSerial(80), 
 20002 ;;  c               2    2[BANK0 ] int 
 20003 ;;  n               2    4[BANK0 ] unsigned int 
 20004 ;; Auto vars:     Size  Location     Type
 20005 ;;  p               2    6[BANK0 ] PTR unsigned char 
 20006 ;;		 -> bufferSerial(80), 
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  2    0[BANK0 ] PTR void 
 20009 ;; Registers used:
 20010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20016 ;;      Params:         0       6       0       0       0       0       0       0       0
 20017 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20019 ;;      Totals:         0       8       0       0       0       0       0       0       0
 20020 ;;Total ram usage:        8 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; Hardware stack levels required when called:    6
 20023 ;; This function calls:
 20024 ;;		Nothing
 20025 ;; This function is called by:
 20026 ;;		_limpaBuffer
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           	psect	text35
 20031  005C6C                     __ptext35:
 20032                           	opt stack 0
 20033  005C6C                     _memset:
 20034                           	opt stack 22
 20035                           
 20036                           ;incstack = 0
 20037  005C6C  C060  F066         	movff	memset@p1,memset@p
 20038  005C70  C061  F067         	movff	memset@p1+1,memset@p+1
 20039  005C74  D009               	goto	l2027
 20040  005C76                     l6561:
 20041  005C76  C066  FFD9         	movff	memset@p,fsr2l
 20042  005C7A  C067  FFDA         	movff	memset@p+1,fsr2h
 20043  005C7E  C062  FFDF         	movff	memset@c,indf2
 20044  005C82  0100               	movlb	0	; () banked
 20045  005C84  4B66               	infsnz	memset@p& (0+255),f,b
 20046  005C86  2B67               	incf	(memset@p+1)& (0+255),f,b
 20047  005C88                     l2027:
 20048                           
 20049                           ; BSR set to: 0
 20050  005C88  0100               	movlb	0	; () banked
 20051  005C8A  0764               	decf	memset@n& (0+255),f,b
 20052  005C8C  A0D8               	btfss	status,0,c
 20053  005C8E  0765               	decf	(memset@n+1)& (0+255),f,b
 20054  005C90  2964               	incf	memset@n& (0+255),w,b
 20055  005C92  E1F1               	bnz	l6561
 20056  005C94  2965               	incf	(memset@n+1)& (0+255),w,b
 20057  005C96  B4D8               	btfsc	status,2,c
 20058  005C98  0012               	return	
 20059  005C9A  D7ED               	goto	l2028
 20060  005C9C                     __end_of_memset:
 20061                           	opt stack 0
 20062                           tblptru	equ	0xFF8
 20063                           tblptrh	equ	0xFF7
 20064                           tblptrl	equ	0xFF6
 20065                           tablat	equ	0xFF5
 20066                           prodh	equ	0xFF4
 20067                           prodl	equ	0xFF3
 20068                           intcon	equ	0xFF2
 20069                           intcon2	equ	0xFF1
 20070                           intcon3	equ	0xFF0
 20071                           indf0	equ	0xFEF
 20072                           postinc0	equ	0xFEE
 20073                           fsr0h	equ	0xFEA
 20074                           fsr0l	equ	0xFE9
 20075                           wreg	equ	0xFE8
 20076                           postdec1	equ	0xFE5
 20077                           fsr1l	equ	0xFE1
 20078                           indf2	equ	0xFDF
 20079                           postinc2	equ	0xFDE
 20080                           postdec2	equ	0xFDD
 20081                           fsr2h	equ	0xFDA
 20082                           fsr2l	equ	0xFD9
 20083                           status	equ	0xFD8
 20084                           
 20085 ;; *************** function _delay *****************
 20086 ;; Defined at:
 20087 ;;		line 18 in file "src/function.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;  x               2    0[BANK0 ] int 
 20090 ;; Auto vars:     Size  Location     Type
 20091 ;;		None
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  1    wreg      void 
 20094 ;; Registers used:
 20095 ;;		wreg, status,2, status,0
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/0
 20098 ;;		On exit  : 0/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20101 ;;      Params:         0       2       0       0       0       0       0       0       0
 20102 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20103 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20104 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20105 ;;Total ram usage:        3 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; Hardware stack levels required when called:    6
 20108 ;; This function calls:
 20109 ;;		Nothing
 20110 ;; This function is called by:
 20111 ;;		_writeEEPROM_ext
 20112 ;;		_limpaBuffer
 20113 ;;		_alterarConfigWifi
 20114 ;;		_enviaDadosWifi
 20115 ;;		_main
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           	psect	text36
 20120  005D28                     __ptext36:
 20121                           	opt stack 0
 20122  005D28                     _delay:
 20123                           	opt stack 23
 20124                           
 20125                           ;function.c: 19: while (x--) {
 20126                           
 20127                           ; BSR set to: 0
 20128                           ;incstack = 0
 20129  005D28  D00A               	goto	l1477
 20130  005D2A                     l6555:
 20131                           
 20132                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 20133  005D2A  0E03               	movlw	3
 20134  005D2C  0100               	movlb	0	; () banked
 20135  005D2E  6F62               	movwf	??_delay& (0+255),b
 20136  005D30  0E97               	movlw	151
 20137  005D32                     u15397:
 20138  005D32  2EE8               	decfsz	wreg,f,c
 20139  005D34  D7FE               	bra	u15397
 20140  005D36  2F62               	decfsz	??_delay& (0+255),f,b
 20141  005D38  D7FC               	bra	u15397
 20142  005D3A  D000               	nop2	
 20143  005D3C  0004               	clrwdt		;# 
 20144  005D3E                     l1477:
 20145  005D3E  0100               	movlb	0	; () banked
 20146  005D40  0760               	decf	delay@x& (0+255),f,b
 20147  005D42  A0D8               	btfss	status,0,c
 20148  005D44  0761               	decf	(delay@x+1)& (0+255),f,b
 20149  005D46  2960               	incf	delay@x& (0+255),w,b
 20150  005D48  E1F0               	bnz	l6555
 20151  005D4A  2961               	incf	(delay@x+1)& (0+255),w,b
 20152  005D4C  B4D8               	btfsc	status,2,c
 20153  005D4E  0012               	return	
 20154  005D50  D7EC               	goto	l1478
 20155  005D52                     __end_of_delay:
 20156                           	opt stack 0
 20157                           tblptru	equ	0xFF8
 20158                           tblptrh	equ	0xFF7
 20159                           tblptrl	equ	0xFF6
 20160                           tablat	equ	0xFF5
 20161                           prodh	equ	0xFF4
 20162                           prodl	equ	0xFF3
 20163                           intcon	equ	0xFF2
 20164                           intcon2	equ	0xFF1
 20165                           intcon3	equ	0xFF0
 20166                           indf0	equ	0xFEF
 20167                           postinc0	equ	0xFEE
 20168                           fsr0h	equ	0xFEA
 20169                           fsr0l	equ	0xFE9
 20170                           wreg	equ	0xFE8
 20171                           postdec1	equ	0xFE5
 20172                           fsr1l	equ	0xFE1
 20173                           indf2	equ	0xFDF
 20174                           postinc2	equ	0xFDE
 20175                           postdec2	equ	0xFDD
 20176                           fsr2h	equ	0xFDA
 20177                           fsr2l	equ	0xFD9
 20178                           status	equ	0xFD8
 20179                           
 20180 ;; *************** function _filtroStr *****************
 20181 ;; Defined at:
 20182 ;;		line 44 in file "src/conexaoWifi.h"
 20183 ;; Parameters:    Size  Location     Type
 20184 ;;  inicio          2   49[BANK0 ] PTR unsigned char 
 20185 ;;		 -> STR_39(7), STR_37(6), 
 20186 ;;  fim             2   51[BANK0 ] PTR unsigned char 
 20187 ;;		 -> STR_40(2), STR_38(2), 
 20188 ;;  str             2   53[BANK0 ] PTR unsigned char 
 20189 ;;		 -> bufferSerial(80), 
 20190 ;;  strdest         2   55[BANK0 ] PTR unsigned char 
 20191 ;;		 -> senha(15), ssid(15), 
 20192 ;; Auto vars:     Size  Location     Type
 20193 ;;  _str           82    0[BANK1 ] unsigned char [82]
 20194 ;;  aux            60   82[BANK1 ] unsigned char [60]
 20195 ;;  p               2  147[BANK1 ] PTR unsigned char 
 20196 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20197 ;;		 -> bufferSerial(80), 
 20198 ;;  i               1  149[BANK1 ] unsigned char 
 20199 ;;  x               1  146[BANK1 ] unsigned char 
 20200 ;;  count           1  145[BANK1 ] unsigned char 
 20201 ;;  y               1  144[BANK1 ] unsigned char 
 20202 ;; Return value:  Size  Location     Type
 20203 ;;                  1    wreg      void 
 20204 ;; Registers used:
 20205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20206 ;; Tracked objects:
 20207 ;;		On entry : 0/0
 20208 ;;		On exit  : 0/0
 20209 ;;		Unchanged: 0/0
 20210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20211 ;;      Params:         0       8       0       0       0       0       0       0       0
 20212 ;;      Locals:         0       0     150       0       0       0       0       0       0
 20213 ;;      Temps:          0       5       0       0       0       0       0       0       0
 20214 ;;      Totals:         0      13     150       0       0       0       0       0       0
 20215 ;;Total ram usage:      163 bytes
 20216 ;; Hardware stack levels used:    1
 20217 ;; Hardware stack levels required when called:    9
 20218 ;; This function calls:
 20219 ;;		_sprintf
 20220 ;;		_strcpy
 20221 ;;		_strlen
 20222 ;;		_strncpy
 20223 ;;		_strstr
 20224 ;;		_strtok
 20225 ;; This function is called by:
 20226 ;;		_alterarConfigWifi
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           
 20230                           	psect	text37
 20231  0044E8                     __ptext37:
 20232                           	opt stack 0
 20233  0044E8                     _filtroStr:
 20234                           	opt stack 20
 20235                           
 20236                           ;conexaoWifi.h: 45: char i = 0;
 20237                           
 20238                           ; BSR set to: 0
 20239                           ;incstack = 0
 20240  0044E8  0E00               	movlw	0
 20241  0044EA  0101               	movlb	1	; () banked
 20242  0044EC  6F95               	movwf	filtroStr@i& (0+255),b
 20243                           
 20244                           ;conexaoWifi.h: 46: char x = 0;
 20245  0044EE  0E00               	movlw	0
 20246  0044F0  6F92               	movwf	filtroStr@x& (0+255),b
 20247                           
 20248                           ;conexaoWifi.h: 47: char y = 0;
 20249  0044F2  0E00               	movlw	0
 20250  0044F4  6F90               	movwf	filtroStr@y& (0+255),b
 20251                           
 20252                           ;conexaoWifi.h: 48: char count = 0;
 20253  0044F6  0E00               	movlw	0
 20254  0044F8  6F91               	movwf	filtroStr@count& (0+255),b
 20255                           
 20256                           ; BSR set to: 1
 20257                           ;conexaoWifi.h: 49: char *p;
 20258                           ;conexaoWifi.h: 50: char _str[82];
 20259                           ;conexaoWifi.h: 51: char aux[60];
 20260                           ;conexaoWifi.h: 53: strncpy(_str, str, 80);
 20261  0044FA  0E00               	movlw	low filtroStr@_str
 20262  0044FC  0100               	movlb	0	; () banked
 20263  0044FE  6F60               	movwf	strncpy@to& (0+255),b
 20264  004500  0E01               	movlw	high filtroStr@_str
 20265  004502  6F61               	movwf	(strncpy@to+1)& (0+255),b
 20266  004504  C095  F062         	movff	filtroStr@str,strncpy@from
 20267  004508  C096  F063         	movff	filtroStr@str+1,strncpy@from+1
 20268  00450C  0E00               	movlw	0
 20269  00450E  6F65               	movwf	(strncpy@size+1)& (0+255),b
 20270  004510  0E50               	movlw	80
 20271  004512  6F64               	movwf	strncpy@size& (0+255),b
 20272  004514  EC3D  F02C         	call	_strncpy	;wreg free
 20273                           
 20274                           ;conexaoWifi.h: 54: p = strstr(_str, inicio);
 20275  004518  0E00               	movlw	low filtroStr@_str
 20276  00451A  0100               	movlb	0	; () banked
 20277  00451C  6F6F               	movwf	strstr@s1& (0+255),b
 20278  00451E  0E01               	movlw	high filtroStr@_str
 20279  004520  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20280  004522  C091  F071         	movff	filtroStr@inicio,strstr@s2
 20281  004526  C092  F072         	movff	filtroStr@inicio+1,strstr@s2+1
 20282  00452A  EC7F  F028         	call	_strstr	;wreg free
 20283  00452E  C06F  F193         	movff	?_strstr,filtroStr@p
 20284  004532  C070  F194         	movff	?_strstr+1,filtroStr@p+1
 20285                           
 20286                           ;conexaoWifi.h: 55: strcpy(p, strtok(p, fim));
 20287  004536  C193  F071         	movff	filtroStr@p,strcpy@to
 20288  00453A  C194  F072         	movff	filtroStr@p+1,strcpy@to+1
 20289  00453E  C193  F06D         	movff	filtroStr@p,strtok@s1
 20290  004542  C194  F06E         	movff	filtroStr@p+1,strtok@s1+1
 20291  004546  C093  F06F         	movff	filtroStr@fim,strtok@s2
 20292  00454A  C094  F070         	movff	filtroStr@fim+1,strtok@s2+1
 20293  00454E  EC4D  F024         	call	_strtok	;wreg free
 20294  004552  C06D  F073         	movff	?_strtok,strcpy@from
 20295  004556  C06E  F074         	movff	?_strtok+1,strcpy@from+1
 20296  00455A  EC0A  F02C         	call	_strcpy	;wreg free
 20297                           
 20298                           ;conexaoWifi.h: 56: sprintf(aux, "%s", p);
 20299  00455E  0E52               	movlw	low filtroStr@aux
 20300  004560  0100               	movlb	0	; () banked
 20301  004562  6F81               	movwf	sprintf@wh& (0+255),b
 20302  004564  0E01               	movlw	high filtroStr@aux
 20303  004566  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20304  004568  0E26               	movlw	low (STR_82+7)
 20305  00456A  6F83               	movwf	sprintf@f& (0+255),b
 20306  00456C  0E7F               	movlw	high (STR_82+7)
 20307  00456E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20308  004570  C193  F085         	movff	filtroStr@p,?_sprintf+4
 20309  004574  C194  F086         	movff	filtroStr@p+1,?_sprintf+5
 20310  004578  EC10  F02D         	call	_sprintf	;wreg free
 20311                           
 20312                           ;conexaoWifi.h: 58: x = strlen(inicio);
 20313  00457C  C091  F060         	movff	filtroStr@inicio,strlen@s
 20314  004580  C092  F061         	movff	filtroStr@inicio+1,strlen@s+1
 20315  004584  EC6E  F02C         	call	_strlen	;wreg free
 20316  004588  0100               	movlb	0	; () banked
 20317  00458A  5160               	movf	?_strlen& (0+255),w,b
 20318  00458C  0101               	movlb	1	; () banked
 20319  00458E  6F92               	movwf	filtroStr@x& (0+255),b
 20320                           
 20321                           ; BSR set to: 1
 20322                           ;conexaoWifi.h: 59: y = strlen(aux);
 20323  004590  0E52               	movlw	low filtroStr@aux
 20324  004592  0100               	movlb	0	; () banked
 20325  004594  6F60               	movwf	strlen@s& (0+255),b
 20326  004596  0E01               	movlw	high filtroStr@aux
 20327  004598  6F61               	movwf	(strlen@s+1)& (0+255),b
 20328  00459A  EC6E  F02C         	call	_strlen	;wreg free
 20329  00459E  0100               	movlb	0	; () banked
 20330  0045A0  5160               	movf	?_strlen& (0+255),w,b
 20331  0045A2  0101               	movlb	1	; () banked
 20332  0045A4  6F90               	movwf	filtroStr@y& (0+255),b
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;conexaoWifi.h: 61: for (i = x; i < (x + y); i++) {
 20336  0045A6  C192  F195         	movff	filtroStr@x,filtroStr@i
 20337  0045AA  D02F               	goto	l976
 20338  0045AC                     
 20339                           ;conexaoWifi.h: 62: strdest[count++] = (char) (aux[i] == '+') ? ' ' : aux[i];
 20340                           
 20341                           ; BSR set to: 1
 20342  0045AC  0101               	movlb	1	; () banked
 20343  0045AE  5195               	movf	filtroStr@i& (0+255),w,b
 20344  0045B0  0D01               	mullw	1
 20345  0045B2  0E52               	movlw	low filtroStr@aux
 20346  0045B4  24F3               	addwf	prodl,w,c
 20347  0045B6  6ED9               	movwf	fsr2l,c
 20348  0045B8  0E01               	movlw	high filtroStr@aux
 20349  0045BA  20F4               	addwfc	prodh,w,c
 20350  0045BC  6EDA               	movwf	fsr2h,c
 20351  0045BE  0E2B               	movlw	43
 20352  0045C0  18DE               	xorwf	postinc2,w,c
 20353  0045C2  B4D8               	btfsc	status,2,c
 20354  0045C4  D010               	goto	l979
 20355                           
 20356                           ; BSR set to: 1
 20357  0045C6  5195               	movf	filtroStr@i& (0+255),w,b
 20358  0045C8  0D01               	mullw	1
 20359  0045CA  0E52               	movlw	low filtroStr@aux
 20360  0045CC  24F3               	addwf	prodl,w,c
 20361  0045CE  6ED9               	movwf	fsr2l,c
 20362  0045D0  0E01               	movlw	high filtroStr@aux
 20363  0045D2  20F4               	addwfc	prodh,w,c
 20364  0045D4  6EDA               	movwf	fsr2h,c
 20365  0045D6  50DF               	movf	indf2,w,c
 20366  0045D8  0100               	movlb	0	; () banked
 20367  0045DA  6F99               	movwf	??_filtroStr& (0+255),b
 20368  0045DC  5199               	movf	??_filtroStr& (0+255),w,b
 20369  0045DE  0101               	movlb	1	; () banked
 20370  0045E0  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20371  0045E2  6B8F               	clrf	(_filtroStr$1335+1)& (0+255),b
 20372  0045E4  D004               	goto	l981
 20373  0045E6                     l979:
 20374                           
 20375                           ; BSR set to: 1
 20376                           
 20377                           ; BSR set to: 1
 20378  0045E6  0E00               	movlw	0
 20379  0045E8  6F8F               	movwf	(_filtroStr$1335+1)& (0+255),b
 20380  0045EA  0E20               	movlw	32
 20381  0045EC  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20382  0045EE                     l981:
 20383                           
 20384                           ; BSR set to: 1
 20385                           
 20386                           ; BSR set to: 1
 20387  0045EE  5191               	movf	filtroStr@count& (0+255),w,b
 20388  0045F0  0D01               	mullw	1
 20389  0045F2  50F3               	movf	prodl,w,c
 20390  0045F4  0100               	movlb	0	; () banked
 20391  0045F6  2597               	addwf	filtroStr@strdest& (0+255),w,b
 20392  0045F8  6ED9               	movwf	fsr2l,c
 20393  0045FA  50F4               	movf	prodh,w,c
 20394  0045FC  2198               	addwfc	(filtroStr@strdest+1)& (0+255),w,b
 20395  0045FE  6EDA               	movwf	fsr2h,c
 20396  004600  C18E  FFDF         	movff	_filtroStr$1335,indf2
 20397                           
 20398                           ; BSR set to: 0
 20399  004604  0101               	movlb	1	; () banked
 20400  004606  2B91               	incf	filtroStr@count& (0+255),f,b
 20401                           
 20402                           ; BSR set to: 1
 20403  004608  2B95               	incf	filtroStr@i& (0+255),f,b
 20404  00460A                     l976:
 20405                           
 20406                           ; BSR set to: 1
 20407                           
 20408                           ; BSR set to: 1
 20409  00460A  5190               	movf	filtroStr@y& (0+255),w,b
 20410  00460C  C192  F099         	movff	filtroStr@x,??_filtroStr
 20411  004610  0100               	movlb	0	; () banked
 20412  004612  6B9A               	clrf	(??_filtroStr+1)& (0+255),b
 20413  004614  2799               	addwf	??_filtroStr& (0+255),f,b
 20414  004616  0E00               	movlw	0
 20415  004618  239A               	addwfc	(??_filtroStr+1)& (0+255),f,b
 20416  00461A  0101               	movlb	1	; () banked
 20417  00461C  5195               	movf	filtroStr@i& (0+255),w,b
 20418  00461E  0100               	movlb	0	; () banked
 20419  004620  6F9B               	movwf	(??_filtroStr+2)& (0+255),b
 20420  004622  6B9C               	clrf	(??_filtroStr+3)& (0+255),b
 20421  004624  5199               	movf	??_filtroStr& (0+255),w,b
 20422  004626  5D9B               	subwf	(??_filtroStr+2)& (0+255),w,b
 20423  004628  519C               	movf	(??_filtroStr+3)& (0+255),w,b
 20424  00462A  0A80               	xorlw	128
 20425  00462C  6F9D               	movwf	(??_filtroStr+4)& (0+255),b
 20426  00462E  519A               	movf	(??_filtroStr+1)& (0+255),w,b
 20427  004630  0A80               	xorlw	128
 20428  004632  599D               	subwfb	(??_filtroStr+4)& (0+255),w,b
 20429  004634  A0D8               	btfss	status,0,c
 20430  004636  D7BA               	goto	l977
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;conexaoWifi.h: 63: }
 20434                           ;conexaoWifi.h: 64: sprintf(strdest, "%s", strdest);
 20435                           
 20436                           ; BSR set to: 0
 20437  004638  C097  F081         	movff	filtroStr@strdest,sprintf@wh
 20438  00463C  C098  F082         	movff	filtroStr@strdest+1,sprintf@wh+1
 20439  004640  0E26               	movlw	low (STR_82+7)
 20440  004642  6F83               	movwf	sprintf@f& (0+255),b
 20441  004644  0E7F               	movlw	high (STR_82+7)
 20442  004646  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20443  004648  C097  F085         	movff	filtroStr@strdest,?_sprintf+4
 20444  00464C  C098  F086         	movff	filtroStr@strdest+1,?_sprintf+5
 20445  004650  EC10  F02D         	call	_sprintf	;wreg free
 20446  004654  0012               	return		;funcret
 20447  004656                     __end_of_filtroStr:
 20448                           	opt stack 0
 20449                           tblptru	equ	0xFF8
 20450                           tblptrh	equ	0xFF7
 20451                           tblptrl	equ	0xFF6
 20452                           tablat	equ	0xFF5
 20453                           prodh	equ	0xFF4
 20454                           prodl	equ	0xFF3
 20455                           intcon	equ	0xFF2
 20456                           intcon2	equ	0xFF1
 20457                           intcon3	equ	0xFF0
 20458                           indf0	equ	0xFEF
 20459                           postinc0	equ	0xFEE
 20460                           fsr0h	equ	0xFEA
 20461                           fsr0l	equ	0xFE9
 20462                           wreg	equ	0xFE8
 20463                           postdec1	equ	0xFE5
 20464                           fsr1l	equ	0xFE1
 20465                           indf2	equ	0xFDF
 20466                           postinc2	equ	0xFDE
 20467                           postdec2	equ	0xFDD
 20468                           fsr2h	equ	0xFDA
 20469                           fsr2l	equ	0xFD9
 20470                           status	equ	0xFD8
 20471                           
 20472 ;; *************** function _strtok *****************
 20473 ;; Defined at:
 20474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strtok.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;  s1              2   13[BANK0 ] PTR unsigned char 
 20477 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20478 ;;		 -> bufferSerial(80), 
 20479 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
 20480 ;;		 -> STR_40(2), STR_38(2), 
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;		None
 20483 ;; Return value:  Size  Location     Type
 20484 ;;                  2   13[BANK0 ] PTR unsigned char 
 20485 ;; Registers used:
 20486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20487 ;; Tracked objects:
 20488 ;;		On entry : 0/0
 20489 ;;		On exit  : 0/0
 20490 ;;		Unchanged: 0/0
 20491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20492 ;;      Params:         0       4       0       0       0       0       0       0       0
 20493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20494 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20495 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20496 ;;Total ram usage:        4 bytes
 20497 ;; Hardware stack levels used:    1
 20498 ;; Hardware stack levels required when called:    8
 20499 ;; This function calls:
 20500 ;;		_strcspn
 20501 ;;		_strspn
 20502 ;; This function is called by:
 20503 ;;		_filtroStr
 20504 ;; This function uses a non-reentrant model
 20505 ;;
 20506                           
 20507                           	psect	text38
 20508  00489A                     __ptext38:
 20509                           	opt stack 0
 20510  00489A                     _strtok:
 20511                           	opt stack 20
 20512                           
 20513                           ;incstack = 0
 20514  00489A  0100               	movlb	0	; () banked
 20515  00489C  516D               	movf	strtok@s1& (0+255),w,b
 20516  00489E  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20517  0048A0  A4D8               	btfss	status,2,c
 20518  0048A2  D004               	goto	l2212
 20519                           
 20520                           ; BSR set to: 0
 20521  0048A4  C031  F06D         	movff	strtok@sp,strtok@s1
 20522  0048A8  C032  F06E         	movff	strtok@sp+1,strtok@s1+1
 20523  0048AC                     l2212:
 20524                           
 20525                           ; BSR set to: 0
 20526  0048AC  516D               	movf	strtok@s1& (0+255),w,b
 20527  0048AE  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20528  0048B0  A4D8               	btfss	status,2,c
 20529  0048B2  D005               	goto	l2213
 20530                           
 20531                           ; BSR set to: 0
 20532  0048B4  0E00               	movlw	0
 20533  0048B6  6F6D               	movwf	?_strtok& (0+255),b
 20534  0048B8  0E00               	movlw	0
 20535  0048BA  6F6E               	movwf	(?_strtok+1)& (0+255),b
 20536                           
 20537                           ; BSR set to: 0
 20538  0048BC  0012               	return	
 20539  0048BE                     l2213:
 20540                           
 20541                           ; BSR set to: 0
 20542                           
 20543                           ; BSR set to: 0
 20544  0048BE  C06D  F066         	movff	strtok@s1,strspn@s1
 20545  0048C2  C06E  F067         	movff	strtok@s1+1,strspn@s1+1
 20546  0048C6  C06F  F068         	movff	strtok@s2,strspn@s2
 20547  0048CA  C070  F069         	movff	strtok@s2+1,strspn@s2+1
 20548  0048CE  EC92  F02A         	call	_strspn	;wreg free
 20549  0048D2  0100               	movlb	0	; () banked
 20550  0048D4  5166               	movf	?_strspn& (0+255),w,b
 20551  0048D6  276D               	addwf	strtok@s1& (0+255),f,b
 20552  0048D8  5167               	movf	(?_strspn+1)& (0+255),w,b
 20553  0048DA  236E               	addwfc	(strtok@s1+1)& (0+255),f,b
 20554                           
 20555                           ; BSR set to: 0
 20556  0048DC  C06D  FFF6         	movff	strtok@s1,tblptrl
 20557  0048E0  C06E  FFF7         	movff	strtok@s1+1,tblptrh
 20558  0048E4  6AF8               	clrf	tblptru,c
 20559  0048E6  0E07               	movlw	(high __ramtop+-1)
 20560  0048E8  64F7               	cpfsgt	tblptrh,c
 20561  0048EA  D003               	bra	u8557
 20562  0048EC  0008               	tblrd		*
 20563  0048EE  50F5               	movf	tablat,w,c
 20564  0048F0  D005               	bra	u8550
 20565  0048F2                     u8557:
 20566  0048F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20567  0048F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20568  0048FA  50EF               	movf	indf0,w,c
 20569  0048FC                     u8550:
 20570  0048FC  0900               	iorlw	0
 20571  0048FE  A4D8               	btfss	status,2,c
 20572  004900  D009               	goto	l2215
 20573  004902  0E00               	movlw	0
 20574  004904  6E31               	movwf	strtok@sp,c
 20575  004906  0E00               	movlw	0
 20576  004908  6E32               	movwf	strtok@sp+1,c
 20577  00490A  C031  F06D         	movff	strtok@sp,?_strtok
 20578  00490E  C032  F06E         	movff	strtok@sp+1,?_strtok+1
 20579  004912  0012               	return	
 20580  004914                     l2215:
 20581  004914  C06D  F066         	movff	strtok@s1,strcspn@s1
 20582  004918  C06E  F067         	movff	strtok@s1+1,strcspn@s1+1
 20583  00491C  C06F  F068         	movff	strtok@s2,strcspn@s2
 20584  004920  C070  F069         	movff	strtok@s2+1,strcspn@s2+1
 20585  004924  ECD4  F02A         	call	_strcspn	;wreg free
 20586  004928  0100               	movlb	0	; () banked
 20587  00492A  5166               	movf	?_strcspn& (0+255),w,b
 20588  00492C  256D               	addwf	strtok@s1& (0+255),w,b
 20589  00492E  6E31               	movwf	strtok@sp,c
 20590  004930  5167               	movf	(?_strcspn+1)& (0+255),w,b
 20591  004932  216E               	addwfc	(strtok@s1+1)& (0+255),w,b
 20592  004934  6E32               	movwf	strtok@sp+1,c
 20593                           
 20594                           ; BSR set to: 0
 20595  004936  C031  FFF6         	movff	strtok@sp,tblptrl
 20596  00493A  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20597  00493E  6AF8               	clrf	tblptru,c
 20598  004940  0E07               	movlw	(high __ramtop+-1)
 20599  004942  64F7               	cpfsgt	tblptrh,c
 20600  004944  D003               	bra	u8577
 20601  004946  0008               	tblrd		*
 20602  004948  50F5               	movf	tablat,w,c
 20603  00494A  D005               	bra	u8570
 20604  00494C                     u8577:
 20605  00494C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20606  004950  CFF7 FFEA          	movff	tblptrh,fsr0h
 20607  004954  50EF               	movf	indf0,w,c
 20608  004956                     u8570:
 20609  004956  0900               	iorlw	0
 20610  004958  B4D8               	btfsc	status,2,c
 20611  00495A  D015               	goto	l2216
 20612  00495C  C031  FFF6         	movff	strtok@sp,tblptrl
 20613  004960  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20614  004964  6AF8               	clrf	tblptru,c
 20615  004966  0E07               	movlw	(high __ramtop+-1)
 20616  004968  64F7               	cpfsgt	tblptrh,c
 20617  00496A  D004               	bra	u8597
 20618  00496C  0E00               	movlw	0
 20619  00496E  6EF5               	movwf	tablat,c
 20620  004970  000C               	tblwt		*
 20621  004972  D006               	bra	u8590
 20622  004974                     u8597:
 20623  004974  CFF6 FFE9          	movff	tblptrl,fsr0l
 20624  004978  CFF7 FFEA          	movff	tblptrh,fsr0h
 20625  00497C  0E00               	movlw	0
 20626  00497E  6EEF               	movwf	indf0,c
 20627  004980                     u8590:
 20628  004980  4A31               	infsnz	strtok@sp,f,c
 20629  004982  2A32               	incf	strtok@sp+1,f,c
 20630  004984  D004               	goto	l2217
 20631  004986                     l2216:
 20632  004986  0E00               	movlw	0
 20633  004988  6E31               	movwf	strtok@sp,c
 20634  00498A  0E00               	movlw	0
 20635  00498C  6E32               	movwf	strtok@sp+1,c
 20636  00498E                     l2217:
 20637  00498E  C06D  F06D         	movff	strtok@s1,?_strtok
 20638  004992  C06E  F06E         	movff	strtok@s1+1,?_strtok+1
 20639  004996  0012               	return	
 20640  004998                     __end_of_strtok:
 20641                           	opt stack 0
 20642                           tblptru	equ	0xFF8
 20643                           tblptrh	equ	0xFF7
 20644                           tblptrl	equ	0xFF6
 20645                           tablat	equ	0xFF5
 20646                           prodh	equ	0xFF4
 20647                           prodl	equ	0xFF3
 20648                           intcon	equ	0xFF2
 20649                           intcon2	equ	0xFF1
 20650                           intcon3	equ	0xFF0
 20651                           indf0	equ	0xFEF
 20652                           postinc0	equ	0xFEE
 20653                           fsr0h	equ	0xFEA
 20654                           fsr0l	equ	0xFE9
 20655                           wreg	equ	0xFE8
 20656                           postdec1	equ	0xFE5
 20657                           fsr1l	equ	0xFE1
 20658                           indf2	equ	0xFDF
 20659                           postinc2	equ	0xFDE
 20660                           postdec2	equ	0xFDD
 20661                           fsr2h	equ	0xFDA
 20662                           fsr2l	equ	0xFD9
 20663                           status	equ	0xFD8
 20664                           
 20665 ;; *************** function _strspn *****************
 20666 ;; Defined at:
 20667 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strspn.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20670 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20671 ;;		 -> bufferSerial(80), 
 20672 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20673 ;;		 -> STR_40(2), STR_38(2), 
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;  i               2   11[BANK0 ] unsigned int 
 20676 ;; Return value:  Size  Location     Type
 20677 ;;                  2    6[BANK0 ] unsigned int 
 20678 ;; Registers used:
 20679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20680 ;; Tracked objects:
 20681 ;;		On entry : 0/0
 20682 ;;		On exit  : 0/0
 20683 ;;		Unchanged: 0/0
 20684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20685 ;;      Params:         0       4       0       0       0       0       0       0       0
 20686 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20687 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20688 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20689 ;;Total ram usage:        7 bytes
 20690 ;; Hardware stack levels used:    1
 20691 ;; Hardware stack levels required when called:    7
 20692 ;; This function calls:
 20693 ;;		_strchr
 20694 ;; This function is called by:
 20695 ;;		_strtok
 20696 ;; This function uses a non-reentrant model
 20697 ;;
 20698                           
 20699                           	psect	text39
 20700  005524                     __ptext39:
 20701                           	opt stack 0
 20702  005524                     _strspn:
 20703                           	opt stack 20
 20704                           
 20705                           ;incstack = 0
 20706  005524  0E00               	movlw	0
 20707  005526  0100               	movlb	0	; () banked
 20708  005528  6F6C               	movwf	(strspn@i+1)& (0+255),b
 20709  00552A  0E00               	movlw	0
 20710  00552C  6F6B               	movwf	strspn@i& (0+255),b
 20711  00552E  D004               	goto	l2266
 20712  005530                     
 20713                           ; BSR set to: 0
 20714                           
 20715                           ; BSR set to: 0
 20716  005530  4B66               	infsnz	strspn@s1& (0+255),f,b
 20717  005532  2B67               	incf	(strspn@s1+1)& (0+255),f,b
 20718  005534  4B6B               	infsnz	strspn@i& (0+255),f,b
 20719  005536  2B6C               	incf	(strspn@i+1)& (0+255),f,b
 20720  005538                     l2266:
 20721                           
 20722                           ; BSR set to: 0
 20723                           
 20724                           ; BSR set to: 0
 20725  005538  C066  FFF6         	movff	strspn@s1,tblptrl
 20726  00553C  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20727  005540  6AF8               	clrf	tblptru,c
 20728  005542  0E07               	movlw	(high __ramtop+-1)
 20729  005544  64F7               	cpfsgt	tblptrh,c
 20730  005546  D003               	bra	u8327
 20731  005548  0008               	tblrd		*
 20732  00554A  50F5               	movf	tablat,w,c
 20733  00554C  D005               	bra	u8320
 20734  00554E                     u8327:
 20735  00554E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20736  005552  CFF7 FFEA          	movff	tblptrh,fsr0h
 20737  005556  50EF               	movf	indf0,w,c
 20738  005558                     u8320:
 20739  005558  0900               	iorlw	0
 20740  00555A  B4D8               	btfsc	status,2,c
 20741  00555C  D020               	goto	u8350
 20742  00555E  C068  F060         	movff	strspn@s2,strchr@ptr
 20743  005562  C069  F061         	movff	strspn@s2+1,strchr@ptr+1
 20744  005566  C066  FFF6         	movff	strspn@s1,tblptrl
 20745  00556A  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20746  00556E  6AF8               	clrf	tblptru,c
 20747  005570  0E07               	movlw	(high __ramtop+-1)
 20748  005572  64F7               	cpfsgt	tblptrh,c
 20749  005574  D003               	bra	u8347
 20750  005576  0008               	tblrd		*
 20751  005578  50F5               	movf	tablat,w,c
 20752  00557A  D005               	bra	u8340
 20753  00557C                     u8347:
 20754  00557C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20755  005580  CFF7 FFEA          	movff	tblptrh,fsr0h
 20756  005584  50EF               	movf	indf0,w,c
 20757  005586                     u8340:
 20758  005586  0100               	movlb	0	; () banked
 20759  005588  6F6A               	movwf	??_strspn& (0+255),b
 20760  00558A  516A               	movf	??_strspn& (0+255),w,b
 20761  00558C  6F62               	movwf	strchr@chr& (0+255),b
 20762  00558E  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20763  005590  EC9A  F02B         	call	_strchr	;wreg free
 20764  005594  0100               	movlb	0	; () banked
 20765  005596  5160               	movf	?_strchr& (0+255),w,b
 20766  005598  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20767  00559A  A4D8               	btfss	status,2,c
 20768  00559C  D7C9               	goto	l2267
 20769  00559E                     u8350:
 20770                           
 20771                           ; BSR set to: 0
 20772  00559E  C06B  F066         	movff	strspn@i,?_strspn
 20773  0055A2  C06C  F067         	movff	strspn@i+1,?_strspn+1
 20774  0055A6  0012               	return		;funcret
 20775  0055A8                     __end_of_strspn:
 20776                           	opt stack 0
 20777                           tblptru	equ	0xFF8
 20778                           tblptrh	equ	0xFF7
 20779                           tblptrl	equ	0xFF6
 20780                           tablat	equ	0xFF5
 20781                           prodh	equ	0xFF4
 20782                           prodl	equ	0xFF3
 20783                           intcon	equ	0xFF2
 20784                           intcon2	equ	0xFF1
 20785                           intcon3	equ	0xFF0
 20786                           indf0	equ	0xFEF
 20787                           postinc0	equ	0xFEE
 20788                           fsr0h	equ	0xFEA
 20789                           fsr0l	equ	0xFE9
 20790                           wreg	equ	0xFE8
 20791                           postdec1	equ	0xFE5
 20792                           fsr1l	equ	0xFE1
 20793                           indf2	equ	0xFDF
 20794                           postinc2	equ	0xFDE
 20795                           postdec2	equ	0xFDD
 20796                           fsr2h	equ	0xFDA
 20797                           fsr2l	equ	0xFD9
 20798                           status	equ	0xFD8
 20799                           
 20800 ;; *************** function _strcspn *****************
 20801 ;; Defined at:
 20802 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcspn.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20805 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20806 ;;		 -> bufferSerial(80), 
 20807 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20808 ;;		 -> STR_40(2), STR_38(2), 
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;  i               2   11[BANK0 ] unsigned int 
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  2    6[BANK0 ] unsigned int 
 20813 ;; Registers used:
 20814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/0
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20820 ;;      Params:         0       4       0       0       0       0       0       0       0
 20821 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20822 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20823 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20824 ;;Total ram usage:        7 bytes
 20825 ;; Hardware stack levels used:    1
 20826 ;; Hardware stack levels required when called:    7
 20827 ;; This function calls:
 20828 ;;		_strchr
 20829 ;; This function is called by:
 20830 ;;		_strtok
 20831 ;; This function uses a non-reentrant model
 20832 ;;
 20833                           
 20834                           	psect	text40
 20835  0055A8                     __ptext40:
 20836                           	opt stack 0
 20837  0055A8                     _strcspn:
 20838                           	opt stack 20
 20839                           
 20840                           ;incstack = 0
 20841  0055A8  0E00               	movlw	0
 20842  0055AA  0100               	movlb	0	; () banked
 20843  0055AC  6F6C               	movwf	(strcspn@i+1)& (0+255),b
 20844  0055AE  0E00               	movlw	0
 20845  0055B0  6F6B               	movwf	strcspn@i& (0+255),b
 20846  0055B2  D004               	goto	l2247
 20847  0055B4                     
 20848                           ; BSR set to: 0
 20849                           
 20850                           ; BSR set to: 0
 20851  0055B4  4B66               	infsnz	strcspn@s1& (0+255),f,b
 20852  0055B6  2B67               	incf	(strcspn@s1+1)& (0+255),f,b
 20853  0055B8  4B6B               	infsnz	strcspn@i& (0+255),f,b
 20854  0055BA  2B6C               	incf	(strcspn@i+1)& (0+255),f,b
 20855  0055BC                     l2247:
 20856                           
 20857                           ; BSR set to: 0
 20858                           
 20859                           ; BSR set to: 0
 20860  0055BC  C066  FFF6         	movff	strcspn@s1,tblptrl
 20861  0055C0  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20862  0055C4  6AF8               	clrf	tblptru,c
 20863  0055C6  0E07               	movlw	(high __ramtop+-1)
 20864  0055C8  64F7               	cpfsgt	tblptrh,c
 20865  0055CA  D003               	bra	u8367
 20866  0055CC  0008               	tblrd		*
 20867  0055CE  50F5               	movf	tablat,w,c
 20868  0055D0  D005               	bra	u8360
 20869  0055D2                     u8367:
 20870  0055D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 20871  0055D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 20872  0055DA  50EF               	movf	indf0,w,c
 20873  0055DC                     u8360:
 20874  0055DC  0900               	iorlw	0
 20875  0055DE  B4D8               	btfsc	status,2,c
 20876  0055E0  D020               	goto	u8390
 20877  0055E2  C068  F060         	movff	strcspn@s2,strchr@ptr
 20878  0055E6  C069  F061         	movff	strcspn@s2+1,strchr@ptr+1
 20879  0055EA  C066  FFF6         	movff	strcspn@s1,tblptrl
 20880  0055EE  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20881  0055F2  6AF8               	clrf	tblptru,c
 20882  0055F4  0E07               	movlw	(high __ramtop+-1)
 20883  0055F6  64F7               	cpfsgt	tblptrh,c
 20884  0055F8  D003               	bra	u8387
 20885  0055FA  0008               	tblrd		*
 20886  0055FC  50F5               	movf	tablat,w,c
 20887  0055FE  D005               	bra	u8380
 20888  005600                     u8387:
 20889  005600  CFF6 FFE9          	movff	tblptrl,fsr0l
 20890  005604  CFF7 FFEA          	movff	tblptrh,fsr0h
 20891  005608  50EF               	movf	indf0,w,c
 20892  00560A                     u8380:
 20893  00560A  0100               	movlb	0	; () banked
 20894  00560C  6F6A               	movwf	??_strcspn& (0+255),b
 20895  00560E  516A               	movf	??_strcspn& (0+255),w,b
 20896  005610  6F62               	movwf	strchr@chr& (0+255),b
 20897  005612  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20898  005614  EC9A  F02B         	call	_strchr	;wreg free
 20899  005618  0100               	movlb	0	; () banked
 20900  00561A  5160               	movf	?_strchr& (0+255),w,b
 20901  00561C  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20902  00561E  B4D8               	btfsc	status,2,c
 20903  005620  D7C9               	goto	l2248
 20904  005622                     u8390:
 20905                           
 20906                           ; BSR set to: 0
 20907  005622  C06B  F066         	movff	strcspn@i,?_strcspn
 20908  005626  C06C  F067         	movff	strcspn@i+1,?_strcspn+1
 20909  00562A  0012               	return		;funcret
 20910  00562C                     __end_of_strcspn:
 20911                           	opt stack 0
 20912                           tblptru	equ	0xFF8
 20913                           tblptrh	equ	0xFF7
 20914                           tblptrl	equ	0xFF6
 20915                           tablat	equ	0xFF5
 20916                           prodh	equ	0xFF4
 20917                           prodl	equ	0xFF3
 20918                           intcon	equ	0xFF2
 20919                           intcon2	equ	0xFF1
 20920                           intcon3	equ	0xFF0
 20921                           indf0	equ	0xFEF
 20922                           postinc0	equ	0xFEE
 20923                           fsr0h	equ	0xFEA
 20924                           fsr0l	equ	0xFE9
 20925                           wreg	equ	0xFE8
 20926                           postdec1	equ	0xFE5
 20927                           fsr1l	equ	0xFE1
 20928                           indf2	equ	0xFDF
 20929                           postinc2	equ	0xFDE
 20930                           postdec2	equ	0xFDD
 20931                           fsr2h	equ	0xFDA
 20932                           fsr2l	equ	0xFD9
 20933                           status	equ	0xFD8
 20934                           
 20935 ;; *************** function _strstr *****************
 20936 ;; Defined at:
 20937 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 20938 ;; Parameters:    Size  Location     Type
 20939 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 20940 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20941 ;;		 -> bufferSerial(80), 
 20942 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 20943 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 20944 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 20945 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 20946 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 20947 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 20948 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 20949 ;;		 -> STR_15(3), STR_13(3), 
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;		None
 20952 ;; Return value:  Size  Location     Type
 20953 ;;                  2   15[BANK0 ] PTR unsigned char 
 20954 ;; Registers used:
 20955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20956 ;; Tracked objects:
 20957 ;;		On entry : 0/0
 20958 ;;		On exit  : 0/0
 20959 ;;		Unchanged: 0/0
 20960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20961 ;;      Params:         0       4       0       0       0       0       0       0       0
 20962 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20964 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20965 ;;Total ram usage:        4 bytes
 20966 ;; Hardware stack levels used:    1
 20967 ;; Hardware stack levels required when called:    7
 20968 ;; This function calls:
 20969 ;;		_strchr
 20970 ;;		_strlen
 20971 ;;		_strncmp
 20972 ;; This function is called by:
 20973 ;;		_filtroStr
 20974 ;;		_alterarConfigWifi
 20975 ;;		_enviaDadosWifi
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           	psect	text41
 20980  0050FE                     __ptext41:
 20981                           	opt stack 0
 20982  0050FE                     _strstr:
 20983                           	opt stack 22
 20984                           
 20985                           ;incstack = 0
 20986  0050FE  D032               	goto	l2197
 20987  005100  C06F  F066         	movff	strstr@s1,strncmp@s1
 20988  005104  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 20989  005108  C071  F068         	movff	strstr@s2,strncmp@s2
 20990  00510C  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 20991  005110  C071  F060         	movff	strstr@s2,strlen@s
 20992  005114  C072  F061         	movff	strstr@s2+1,strlen@s+1
 20993  005118  EC6E  F02C         	call	_strlen	;wreg free
 20994  00511C  C060  F06A         	movff	?_strlen,strncmp@len
 20995  005120  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 20996  005124  ECAC  F026         	call	_strncmp	;wreg free
 20997  005128  0100               	movlb	0	; () banked
 20998  00512A  5166               	movf	?_strncmp& (0+255),w,b
 20999  00512C  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21000  00512E  A4D8               	btfss	status,2,c
 21001  005130  D005               	goto	l2199
 21002                           
 21003                           ; BSR set to: 0
 21004  005132  C06F  F06F         	movff	strstr@s1,?_strstr
 21005  005136  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21006                           
 21007                           ; BSR set to: 0
 21008  00513A  0012               	return	
 21009  00513C                     l2199:
 21010                           
 21011                           ; BSR set to: 0
 21012                           
 21013                           ; BSR set to: 0
 21014  00513C  0E01               	movlw	1
 21015  00513E  256F               	addwf	strstr@s1& (0+255),w,b
 21016  005140  6F60               	movwf	strchr@ptr& (0+255),b
 21017  005142  0E00               	movlw	0
 21018  005144  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21019  005146  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21020  005148  C071  FFF6         	movff	strstr@s2,tblptrl
 21021  00514C  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21022  005150                     	if	0	;tblptru may be non-zero
 21023  005150                     	endif
 21024  005150                     	if	0	;tblptru may be non-zero
 21025  005150                     	endif
 21026  005150  0008               	tblrd		*
 21027  005152  50F5               	movf	tablat,w,c
 21028  005154  6F62               	movwf	strchr@chr& (0+255),b
 21029  005156  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21030  005158  EC9A  F02B         	call	_strchr	;wreg free
 21031  00515C  C060  F06F         	movff	?_strchr,strstr@s1
 21032  005160  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21033  005164                     l2197:
 21034  005164  0100               	movlb	0	; () banked
 21035  005166  516F               	movf	strstr@s1& (0+255),w,b
 21036  005168  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21037  00516A  B4D8               	btfsc	status,2,c
 21038  00516C  D013               	goto	u8520
 21039                           
 21040                           ; BSR set to: 0
 21041  00516E  C06F  FFF6         	movff	strstr@s1,tblptrl
 21042  005172  C070  FFF7         	movff	strstr@s1+1,tblptrh
 21043  005176  6AF8               	clrf	tblptru,c
 21044  005178  0E07               	movlw	(high __ramtop+-1)
 21045  00517A  64F7               	cpfsgt	tblptrh,c
 21046  00517C  D003               	bra	u8517
 21047  00517E  0008               	tblrd		*
 21048  005180  50F5               	movf	tablat,w,c
 21049  005182  D005               	bra	u8510
 21050  005184                     u8517:
 21051  005184  CFF6 FFE9          	movff	tblptrl,fsr0l
 21052  005188  CFF7 FFEA          	movff	tblptrh,fsr0h
 21053  00518C  50EF               	movf	indf0,w,c
 21054  00518E                     u8510:
 21055  00518E  0900               	iorlw	0
 21056  005190  A4D8               	btfss	status,2,c
 21057  005192  D7B6               	goto	l2198
 21058  005194                     u8520:
 21059  005194  0E00               	movlw	0
 21060  005196  0100               	movlb	0	; () banked
 21061  005198  6F6F               	movwf	?_strstr& (0+255),b
 21062  00519A  0E00               	movlw	0
 21063  00519C  6F70               	movwf	(?_strstr+1)& (0+255),b
 21064  00519E  0012               	return	
 21065  0051A0                     __end_of_strstr:
 21066                           	opt stack 0
 21067                           tblptru	equ	0xFF8
 21068                           tblptrh	equ	0xFF7
 21069                           tblptrl	equ	0xFF6
 21070                           tablat	equ	0xFF5
 21071                           prodh	equ	0xFF4
 21072                           prodl	equ	0xFF3
 21073                           intcon	equ	0xFF2
 21074                           intcon2	equ	0xFF1
 21075                           intcon3	equ	0xFF0
 21076                           indf0	equ	0xFEF
 21077                           postinc0	equ	0xFEE
 21078                           fsr0h	equ	0xFEA
 21079                           fsr0l	equ	0xFE9
 21080                           wreg	equ	0xFE8
 21081                           postdec1	equ	0xFE5
 21082                           fsr1l	equ	0xFE1
 21083                           indf2	equ	0xFDF
 21084                           postinc2	equ	0xFDE
 21085                           postdec2	equ	0xFDD
 21086                           fsr2h	equ	0xFDA
 21087                           fsr2l	equ	0xFD9
 21088                           status	equ	0xFD8
 21089                           
 21090 ;; *************** function _strncmp *****************
 21091 ;; Defined at:
 21092 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 21093 ;; Parameters:    Size  Location     Type
 21094 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21095 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21096 ;;		 -> bufferSerial(80), 
 21097 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21098 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21099 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 21100 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 21101 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 21102 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 21103 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 21104 ;;		 -> STR_15(3), STR_13(3), 
 21105 ;;  len             2   10[BANK0 ] unsigned int 
 21106 ;; Auto vars:     Size  Location     Type
 21107 ;;		None
 21108 ;; Return value:  Size  Location     Type
 21109 ;;                  2    6[BANK0 ] int 
 21110 ;; Registers used:
 21111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21112 ;; Tracked objects:
 21113 ;;		On entry : 0/0
 21114 ;;		On exit  : 0/0
 21115 ;;		Unchanged: 0/0
 21116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21117 ;;      Params:         0       6       0       0       0       0       0       0       0
 21118 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21119 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21120 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21121 ;;Total ram usage:        9 bytes
 21122 ;; Hardware stack levels used:    1
 21123 ;; Hardware stack levels required when called:    6
 21124 ;; This function calls:
 21125 ;;		Nothing
 21126 ;; This function is called by:
 21127 ;;		_strstr
 21128 ;; This function uses a non-reentrant model
 21129 ;;
 21130                           
 21131                           	psect	text42
 21132  004D58                     __ptext42:
 21133                           	opt stack 0
 21134  004D58                     _strncmp:
 21135                           	opt stack 22
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;incstack = 0
 21139  004D58  D059               	goto	l2255
 21140  004D5A                     l6443:
 21141  004D5A  C066  FFF6         	movff	strncmp@s1,tblptrl
 21142  004D5E  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21143  004D62  6AF8               	clrf	tblptru,c
 21144  004D64  0E07               	movlw	(high __ramtop+-1)
 21145  004D66  64F7               	cpfsgt	tblptrh,c
 21146  004D68  D003               	bra	u8277
 21147  004D6A  0008               	tblrd		*
 21148  004D6C  50F5               	movf	tablat,w,c
 21149  004D6E  D005               	bra	u8270
 21150  004D70                     u8277:
 21151  004D70  CFF6 FFE9          	movff	tblptrl,fsr0l
 21152  004D74  CFF7 FFEA          	movff	tblptrh,fsr0h
 21153  004D78  50EF               	movf	indf0,w,c
 21154  004D7A                     u8270:
 21155  004D7A  0900               	iorlw	0
 21156  004D7C  B4D8               	btfsc	status,2,c
 21157  004D7E  D01B               	goto	u8290
 21158  004D80  C068  FFF6         	movff	strncmp@s2,tblptrl
 21159  004D84  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21160  004D88                     	if	0	;tblptru may be non-zero
 21161  004D88                     	endif
 21162  004D88                     	if	0	;tblptru may be non-zero
 21163  004D88                     	endif
 21164  004D88  0008               	tblrd		*
 21165  004D8A  CFF5 F06C          	movff	tablat,??_strncmp
 21166  004D8E  C066  FFF6         	movff	strncmp@s1,tblptrl
 21167  004D92  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21168  004D96  6AF8               	clrf	tblptru,c
 21169  004D98  0100               	movlb	0	; () banked
 21170  004D9A  0E07               	movlw	(high __ramtop+-1)
 21171  004D9C  64F7               	cpfsgt	tblptrh,c
 21172  004D9E  D003               	bra	u8297
 21173  004DA0  0008               	tblrd		*
 21174  004DA2  50F5               	movf	tablat,w,c
 21175  004DA4  D005               	bra	u8295
 21176  004DA6                     u8297:
 21177  004DA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21178  004DAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21179  004DAE  50EF               	movf	indf0,w,c
 21180  004DB0                     u8295:
 21181  004DB0  196C               	xorwf	??_strncmp& (0+255),w,b
 21182  004DB2  B4D8               	btfsc	status,2,c
 21183  004DB4  D026               	goto	l2257
 21184  004DB6                     u8290:
 21185  004DB6  C068  FFF6         	movff	strncmp@s2,tblptrl
 21186  004DBA  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21187  004DBE                     	if	0	;tblptru may be non-zero
 21188  004DBE                     	endif
 21189  004DBE                     	if	0	;tblptru may be non-zero
 21190  004DBE                     	endif
 21191  004DBE  0008               	tblrd		*
 21192  004DC0  50F5               	movf	tablat,w,c
 21193  004DC2  0100               	movlb	0	; () banked
 21194  004DC4  6F6C               	movwf	??_strncmp& (0+255),b
 21195  004DC6  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21196  004DC8  1F6C               	comf	??_strncmp& (0+255),f,b
 21197  004DCA  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21198  004DCC  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21199  004DCE  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21200  004DD0  C066  FFF6         	movff	strncmp@s1,tblptrl
 21201  004DD4  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21202  004DD8  6AF8               	clrf	tblptru,c
 21203  004DDA  0E07               	movlw	(high __ramtop+-1)
 21204  004DDC  64F7               	cpfsgt	tblptrh,c
 21205  004DDE  D003               	bra	u8307
 21206  004DE0  0008               	tblrd		*
 21207  004DE2  50F5               	movf	tablat,w,c
 21208  004DE4  D005               	bra	u8300
 21209  004DE6                     u8307:
 21210  004DE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21211  004DEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21212  004DEE  50EF               	movf	indf0,w,c
 21213  004DF0                     u8300:
 21214  004DF0  0100               	movlb	0	; () banked
 21215  004DF2  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21216  004DF4  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21217  004DF6  256C               	addwf	??_strncmp& (0+255),w,b
 21218  004DF8  6F66               	movwf	?_strncmp& (0+255),b
 21219  004DFA  0E00               	movlw	0
 21220  004DFC  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21221  004DFE  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21222                           
 21223                           ; BSR set to: 0
 21224  004E00  0012               	return	
 21225  004E02                     l2257:
 21226                           
 21227                           ; BSR set to: 0
 21228  004E02  0100               	movlb	0	; () banked
 21229  004E04  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21230  004E06  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21231  004E08  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21232  004E0A  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21233  004E0C                     l2255:
 21234                           
 21235                           ; BSR set to: 0
 21236  004E0C  0100               	movlb	0	; () banked
 21237  004E0E  076A               	decf	strncmp@len& (0+255),f,b
 21238  004E10  A0D8               	btfss	status,0,c
 21239  004E12  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21240  004E14  296A               	incf	strncmp@len& (0+255),w,b
 21241  004E16  E1A1               	bnz	l6443
 21242  004E18  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21243  004E1A  A4D8               	btfss	status,2,c
 21244  004E1C  D79E               	goto	l2256
 21245                           
 21246                           ; BSR set to: 0
 21247                           
 21248                           ; BSR set to: 0
 21249  004E1E  0E00               	movlw	0
 21250  004E20  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21251  004E22  0E00               	movlw	0
 21252  004E24  6F66               	movwf	?_strncmp& (0+255),b
 21253  004E26  0012               	return	
 21254  004E28                     __end_of_strncmp:
 21255                           	opt stack 0
 21256                           tblptru	equ	0xFF8
 21257                           tblptrh	equ	0xFF7
 21258                           tblptrl	equ	0xFF6
 21259                           tablat	equ	0xFF5
 21260                           prodh	equ	0xFF4
 21261                           prodl	equ	0xFF3
 21262                           intcon	equ	0xFF2
 21263                           intcon2	equ	0xFF1
 21264                           intcon3	equ	0xFF0
 21265                           indf0	equ	0xFEF
 21266                           postinc0	equ	0xFEE
 21267                           fsr0h	equ	0xFEA
 21268                           fsr0l	equ	0xFE9
 21269                           wreg	equ	0xFE8
 21270                           postdec1	equ	0xFE5
 21271                           fsr1l	equ	0xFE1
 21272                           indf2	equ	0xFDF
 21273                           postinc2	equ	0xFDE
 21274                           postdec2	equ	0xFDD
 21275                           fsr2h	equ	0xFDA
 21276                           fsr2l	equ	0xFD9
 21277                           status	equ	0xFD8
 21278                           
 21279 ;; *************** function _strlen *****************
 21280 ;; Defined at:
 21281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 21282 ;; Parameters:    Size  Location     Type
 21283 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21284 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21285 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21286 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21287 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21288 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21289 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21290 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21291 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21292 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21293 ;; Auto vars:     Size  Location     Type
 21294 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21295 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21296 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21297 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21298 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21299 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21300 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21301 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21302 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21303 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21304 ;; Return value:  Size  Location     Type
 21305 ;;                  2    0[BANK0 ] unsigned int 
 21306 ;; Registers used:
 21307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21308 ;; Tracked objects:
 21309 ;;		On entry : 0/0
 21310 ;;		On exit  : 0/0
 21311 ;;		Unchanged: 0/0
 21312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21313 ;;      Params:         0       2       0       0       0       0       0       0       0
 21314 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21315 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21316 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21317 ;;Total ram usage:        6 bytes
 21318 ;; Hardware stack levels used:    1
 21319 ;; Hardware stack levels required when called:    6
 21320 ;; This function calls:
 21321 ;;		Nothing
 21322 ;; This function is called by:
 21323 ;;		_getMac
 21324 ;;		_filtroStr
 21325 ;;		_alterarConfigWifi
 21326 ;;		_enviaDadosWifi
 21327 ;;		_strstr
 21328 ;; This function uses a non-reentrant model
 21329 ;;
 21330                           
 21331                           	psect	text43
 21332  0058DC                     __ptext43:
 21333                           	opt stack 0
 21334  0058DC                     _strlen:
 21335                           	opt stack 22
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;incstack = 0
 21339  0058DC  C060  F064         	movff	strlen@s,strlen@cp
 21340  0058E0  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21341  0058E4  D003               	goto	l2175
 21342  0058E6  0100               	movlb	0	; () banked
 21343  0058E8  4B64               	infsnz	strlen@cp& (0+255),f,b
 21344  0058EA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21345  0058EC                     l2175:
 21346                           
 21347                           ; BSR set to: 0
 21348  0058EC  C064  FFF6         	movff	strlen@cp,tblptrl
 21349  0058F0  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21350  0058F4  6AF8               	clrf	tblptru,c
 21351  0058F6  0E07               	movlw	(high __ramtop+-1)
 21352  0058F8  64F7               	cpfsgt	tblptrh,c
 21353  0058FA  D003               	bra	u7887
 21354  0058FC  0008               	tblrd		*
 21355  0058FE  50F5               	movf	tablat,w,c
 21356  005900  D005               	bra	u7880
 21357  005902                     u7887:
 21358  005902  CFF6 FFE9          	movff	tblptrl,fsr0l
 21359  005906  CFF7 FFEA          	movff	tblptrh,fsr0h
 21360  00590A  50EF               	movf	indf0,w,c
 21361  00590C                     u7880:
 21362  00590C  0900               	iorlw	0
 21363  00590E  A4D8               	btfss	status,2,c
 21364  005910  D7EA               	goto	l2176
 21365  005912  C060  F062         	movff	strlen@s,??_strlen
 21366  005916  C061  F063         	movff	strlen@s+1,??_strlen+1
 21367  00591A  0100               	movlb	0	; () banked
 21368  00591C  1F62               	comf	??_strlen& (0+255),f,b
 21369  00591E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21370  005920  4B62               	infsnz	??_strlen& (0+255),f,b
 21371  005922  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21372  005924  5164               	movf	strlen@cp& (0+255),w,b
 21373  005926  2562               	addwf	??_strlen& (0+255),w,b
 21374  005928  6F60               	movwf	?_strlen& (0+255),b
 21375  00592A  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21376  00592C  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21377  00592E  6F61               	movwf	(?_strlen+1)& (0+255),b
 21378  005930  0012               	return	
 21379  005932                     __end_of_strlen:
 21380                           	opt stack 0
 21381                           tblptru	equ	0xFF8
 21382                           tblptrh	equ	0xFF7
 21383                           tblptrl	equ	0xFF6
 21384                           tablat	equ	0xFF5
 21385                           prodh	equ	0xFF4
 21386                           prodl	equ	0xFF3
 21387                           intcon	equ	0xFF2
 21388                           intcon2	equ	0xFF1
 21389                           intcon3	equ	0xFF0
 21390                           indf0	equ	0xFEF
 21391                           postinc0	equ	0xFEE
 21392                           fsr0h	equ	0xFEA
 21393                           fsr0l	equ	0xFE9
 21394                           wreg	equ	0xFE8
 21395                           postdec1	equ	0xFE5
 21396                           fsr1l	equ	0xFE1
 21397                           indf2	equ	0xFDF
 21398                           postinc2	equ	0xFDE
 21399                           postdec2	equ	0xFDD
 21400                           fsr2h	equ	0xFDA
 21401                           fsr2l	equ	0xFD9
 21402                           status	equ	0xFD8
 21403                           
 21404 ;; *************** function _strchr *****************
 21405 ;; Defined at:
 21406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 21407 ;; Parameters:    Size  Location     Type
 21408 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21409 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21410 ;;		 -> bufferSerial(80), 
 21411 ;;  chr             2    2[BANK0 ] int 
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  2    0[BANK0 ] PTR unsigned char 
 21416 ;; Registers used:
 21417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21423 ;;      Params:         0       4       0       0       0       0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21425 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21426 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21427 ;;Total ram usage:        6 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:    6
 21430 ;; This function calls:
 21431 ;;		Nothing
 21432 ;; This function is called by:
 21433 ;;		_strstr
 21434 ;;		_strcspn
 21435 ;;		_strspn
 21436 ;; This function uses a non-reentrant model
 21437 ;;
 21438                           
 21439                           	psect	text44
 21440  005734                     __ptext44:
 21441                           	opt stack 0
 21442  005734                     _strchr:
 21443                           	opt stack 22
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;incstack = 0
 21447  005734  C060  FFF6         	movff	strchr@ptr,tblptrl
 21448  005738  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 21449  00573C  6AF8               	clrf	tblptru,c
 21450  00573E  0E07               	movlw	(high __ramtop+-1)
 21451  005740  64F7               	cpfsgt	tblptrh,c
 21452  005742  D003               	bra	u7827
 21453  005744  0008               	tblrd		*
 21454  005746  50F5               	movf	tablat,w,c
 21455  005748  D005               	bra	u7820
 21456  00574A                     u7827:
 21457  00574A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21458  00574E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21459  005752  50EF               	movf	indf0,w,c
 21460  005754                     u7820:
 21461  005754  0100               	movlb	0	; () banked
 21462  005756  1962               	xorwf	strchr@chr& (0+255),w,b
 21463  005758  A4D8               	btfss	status,2,c
 21464  00575A  D005               	goto	l2240
 21465                           
 21466                           ; BSR set to: 0
 21467  00575C  C060  F060         	movff	strchr@ptr,?_strchr
 21468  005760  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21469                           
 21470                           ; BSR set to: 0
 21471  005764  0012               	return	
 21472  005766                     l2240:
 21473                           
 21474                           ; BSR set to: 0
 21475                           
 21476                           ; BSR set to: 0
 21477  005766  5160               	movf	strchr@ptr& (0+255),w,b
 21478  005768  6F64               	movwf	??_strchr& (0+255),b
 21479  00576A  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 21480  00576C  6F65               	movwf	(??_strchr+1)& (0+255),b
 21481  00576E  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21482  005770  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21483  005772  C064  FFF6         	movff	??_strchr,tblptrl
 21484  005776  C065  FFF7         	movff	??_strchr+1,tblptrh
 21485  00577A  6AF8               	clrf	tblptru,c
 21486  00577C  0E07               	movlw	(high __ramtop+-1)
 21487  00577E  64F7               	cpfsgt	tblptrh,c
 21488  005780  D003               	bra	u7847
 21489  005782  0008               	tblrd		*
 21490  005784  50F5               	movf	tablat,w,c
 21491  005786  D005               	bra	u7840
 21492  005788                     u7847:
 21493  005788  CFF6 FFE9          	movff	tblptrl,fsr0l
 21494  00578C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21495  005790  50EF               	movf	indf0,w,c
 21496  005792                     u7840:
 21497  005792  0900               	iorlw	0
 21498  005794  A4D8               	btfss	status,2,c
 21499  005796  D7CE               	goto	_strchr
 21500  005798  0E00               	movlw	0
 21501  00579A  0100               	movlb	0	; () banked
 21502  00579C  6F60               	movwf	?_strchr& (0+255),b
 21503  00579E  0E00               	movlw	0
 21504  0057A0  6F61               	movwf	(?_strchr+1)& (0+255),b
 21505  0057A2  0012               	return	
 21506  0057A4                     __end_of_strchr:
 21507                           	opt stack 0
 21508                           tblptru	equ	0xFF8
 21509                           tblptrh	equ	0xFF7
 21510                           tblptrl	equ	0xFF6
 21511                           tablat	equ	0xFF5
 21512                           prodh	equ	0xFF4
 21513                           prodl	equ	0xFF3
 21514                           intcon	equ	0xFF2
 21515                           intcon2	equ	0xFF1
 21516                           intcon3	equ	0xFF0
 21517                           indf0	equ	0xFEF
 21518                           postinc0	equ	0xFEE
 21519                           fsr0h	equ	0xFEA
 21520                           fsr0l	equ	0xFE9
 21521                           wreg	equ	0xFE8
 21522                           postdec1	equ	0xFE5
 21523                           fsr1l	equ	0xFE1
 21524                           indf2	equ	0xFDF
 21525                           postinc2	equ	0xFDE
 21526                           postdec2	equ	0xFDD
 21527                           fsr2h	equ	0xFDA
 21528                           fsr2l	equ	0xFD9
 21529                           status	equ	0xFD8
 21530                           
 21531 ;; *************** function _strncpy *****************
 21532 ;; Defined at:
 21533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncpy.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21536 ;;		 -> filtroStr@_str(82), 
 21537 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21538 ;;		 -> bufferSerial(80), 
 21539 ;;  size            2    4[BANK0 ] unsigned int 
 21540 ;; Auto vars:     Size  Location     Type
 21541 ;;  cp              2    6[BANK0 ] PTR unsigned char 
 21542 ;;		 -> filtroStr@_str(82), 
 21543 ;; Return value:  Size  Location     Type
 21544 ;;                  2    0[BANK0 ] PTR unsigned char 
 21545 ;; Registers used:
 21546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21547 ;; Tracked objects:
 21548 ;;		On entry : 0/0
 21549 ;;		On exit  : 0/0
 21550 ;;		Unchanged: 0/0
 21551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21552 ;;      Params:         0       6       0       0       0       0       0       0       0
 21553 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21555 ;;      Totals:         0       8       0       0       0       0       0       0       0
 21556 ;;Total ram usage:        8 bytes
 21557 ;; Hardware stack levels used:    1
 21558 ;; Hardware stack levels required when called:    6
 21559 ;; This function calls:
 21560 ;;		Nothing
 21561 ;; This function is called by:
 21562 ;;		_filtroStr
 21563 ;; This function uses a non-reentrant model
 21564 ;;
 21565                           
 21566                           	psect	text45
 21567  00587A                     __ptext45:
 21568                           	opt stack 0
 21569  00587A                     _strncpy:
 21570                           	opt stack 22
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;incstack = 0
 21574  00587A  C060  F066         	movff	strncpy@to,strncpy@cp
 21575  00587E  C061  F067         	movff	strncpy@to+1,strncpy@cp+1
 21576  005882  D015               	goto	l2183
 21577  005884  0100               	movlb	0	; () banked
 21578  005886  0764               	decf	strncpy@size& (0+255),f,b
 21579  005888  A0D8               	btfss	status,0,c
 21580  00588A  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21581                           
 21582                           ; BSR set to: 0
 21583  00588C  C062  FFD9         	movff	strncpy@from,fsr2l
 21584  005890  C063  FFDA         	movff	strncpy@from+1,fsr2h
 21585  005894  4B62               	infsnz	strncpy@from& (0+255),f,b
 21586  005896  2B63               	incf	(strncpy@from+1)& (0+255),f,b
 21587  005898  C066  FFE1         	movff	strncpy@cp,fsr1l
 21588  00589C  C067  FFE2         	movff	strncpy@cp+1,fsr1h
 21589  0058A0  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21590  0058A2  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21591  0058A4  CFDF FFE7          	movff	indf2,indf1
 21592  0058A8  50E7               	movf	indf1,w,c
 21593  0058AA  B4D8               	btfsc	status,2,c
 21594  0058AC  D00E               	goto	l2185
 21595  0058AE                     l2183:
 21596                           
 21597                           ; BSR set to: 0
 21598                           
 21599                           ; BSR set to: 0
 21600  0058AE  0100               	movlb	0	; () banked
 21601  0058B0  5164               	movf	strncpy@size& (0+255),w,b
 21602  0058B2  1165               	iorwf	(strncpy@size+1)& (0+255),w,b
 21603  0058B4  B4D8               	btfsc	status,2,c
 21604  0058B6  D009               	goto	l2185
 21605  0058B8  D7E5               	goto	l2182
 21606  0058BA                     l6577:
 21607                           
 21608                           ; BSR set to: 0
 21609  0058BA  C066  FFD9         	movff	strncpy@cp,fsr2l
 21610  0058BE  C067  FFDA         	movff	strncpy@cp+1,fsr2h
 21611  0058C2  0E00               	movlw	0
 21612  0058C4  6EDF               	movwf	indf2,c
 21613                           
 21614                           ; BSR set to: 0
 21615  0058C6  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21616  0058C8  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21617  0058CA                     l2185:
 21618                           
 21619                           ; BSR set to: 0
 21620                           
 21621                           ; BSR set to: 0
 21622  0058CA  0764               	decf	strncpy@size& (0+255),f,b
 21623  0058CC  A0D8               	btfss	status,0,c
 21624  0058CE  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21625  0058D0  2964               	incf	strncpy@size& (0+255),w,b
 21626  0058D2  E1F3               	bnz	l6577
 21627  0058D4  2965               	incf	(strncpy@size+1)& (0+255),w,b
 21628  0058D6  B4D8               	btfsc	status,2,c
 21629  0058D8  0012               	return	
 21630  0058DA  D7EF               	goto	l2186
 21631  0058DC                     __end_of_strncpy:
 21632                           	opt stack 0
 21633                           tblptru	equ	0xFF8
 21634                           tblptrh	equ	0xFF7
 21635                           tblptrl	equ	0xFF6
 21636                           tablat	equ	0xFF5
 21637                           prodh	equ	0xFF4
 21638                           prodl	equ	0xFF3
 21639                           intcon	equ	0xFF2
 21640                           intcon2	equ	0xFF1
 21641                           intcon3	equ	0xFF0
 21642                           indf0	equ	0xFEF
 21643                           postinc0	equ	0xFEE
 21644                           fsr0h	equ	0xFEA
 21645                           fsr0l	equ	0xFE9
 21646                           wreg	equ	0xFE8
 21647                           indf1	equ	0xFE7
 21648                           postdec1	equ	0xFE5
 21649                           fsr1h	equ	0xFE2
 21650                           fsr1l	equ	0xFE1
 21651                           indf2	equ	0xFDF
 21652                           postinc2	equ	0xFDE
 21653                           postdec2	equ	0xFDD
 21654                           fsr2h	equ	0xFDA
 21655                           fsr2l	equ	0xFD9
 21656                           status	equ	0xFD8
 21657                           
 21658 ;; *************** function _strcpy *****************
 21659 ;; Defined at:
 21660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 21661 ;; Parameters:    Size  Location     Type
 21662 ;;  to              2   17[BANK0 ] PTR unsigned char 
 21663 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21664 ;;		 -> bufferSerial(80), 
 21665 ;;  from            2   19[BANK0 ] PTR const unsigned char 
 21666 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21667 ;;		 -> bufferSerial(80), 
 21668 ;; Auto vars:     Size  Location     Type
 21669 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 21670 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21671 ;;		 -> bufferSerial(80), 
 21672 ;; Return value:  Size  Location     Type
 21673 ;;                  2   17[BANK0 ] PTR unsigned char 
 21674 ;; Registers used:
 21675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21676 ;; Tracked objects:
 21677 ;;		On entry : 0/0
 21678 ;;		On exit  : 0/0
 21679 ;;		Unchanged: 0/0
 21680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21681 ;;      Params:         0       4       0       0       0       0       0       0       0
 21682 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21683 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21684 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21685 ;;Total ram usage:        7 bytes
 21686 ;; Hardware stack levels used:    1
 21687 ;; Hardware stack levels required when called:    6
 21688 ;; This function calls:
 21689 ;;		Nothing
 21690 ;; This function is called by:
 21691 ;;		_filtroStr
 21692 ;; This function uses a non-reentrant model
 21693 ;;
 21694                           
 21695                           	psect	text46
 21696  005814                     __ptext46:
 21697                           	opt stack 0
 21698  005814                     _strcpy:
 21699                           	opt stack 22
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;incstack = 0
 21703  005814  C071  F076         	movff	strcpy@to,strcpy@cp
 21704  005818  C072  F077         	movff	strcpy@to+1,strcpy@cp+1
 21705  00581C  D005               	goto	l2169
 21706  00581E  0100               	movlb	0	; () banked
 21707  005820  4B76               	infsnz	strcpy@cp& (0+255),f,b
 21708  005822  2B77               	incf	(strcpy@cp+1)& (0+255),f,b
 21709  005824  4B73               	infsnz	strcpy@from& (0+255),f,b
 21710  005826  2B74               	incf	(strcpy@from+1)& (0+255),f,b
 21711  005828                     l2169:
 21712                           
 21713                           ; BSR set to: 0
 21714  005828  C073  FFF6         	movff	strcpy@from,tblptrl
 21715  00582C  C074  FFF7         	movff	strcpy@from+1,tblptrh
 21716  005830  6AF8               	clrf	tblptru,c
 21717  005832  0E07               	movlw	(high __ramtop+-1)
 21718  005834  64F7               	cpfsgt	tblptrh,c
 21719  005836  D003               	bra	u8607
 21720  005838  0008               	tblrd		*
 21721  00583A  50F5               	movf	tablat,w,c
 21722  00583C  D005               	bra	u8600
 21723  00583E                     u8607:
 21724  00583E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21725  005842  CFF7 FFEA          	movff	tblptrh,fsr0h
 21726  005846  50EF               	movf	indf0,w,c
 21727  005848                     u8600:
 21728  005848  C076  FFF6         	movff	strcpy@cp,tblptrl
 21729  00584C  C077  FFF7         	movff	strcpy@cp+1,tblptrh
 21730  005850  6AF8               	clrf	tblptru,c
 21731  005852  0100               	movlb	0	; () banked
 21732  005854  6F75               	movwf	??_strcpy& (0+255),b
 21733  005856  0E07               	movlw	(high __ramtop+-1)
 21734  005858  64F7               	cpfsgt	tblptrh,c
 21735  00585A  D004               	bra	u8617
 21736  00585C  C075  FFF5         	movff	??_strcpy,tablat
 21737  005860  000C               	tblwt		*
 21738  005862  D006               	bra	u8610
 21739  005864                     u8617:
 21740  005864  CFF6 FFE9          	movff	tblptrl,fsr0l
 21741  005868  CFF7 FFEA          	movff	tblptrh,fsr0h
 21742  00586C  C075  FFEF         	movff	??_strcpy,indf0
 21743  005870                     u8610:
 21744  005870  0100               	movlb	0	; () banked
 21745  005872  5175               	movf	??_strcpy& (0+255),w,b
 21746  005874  B4D8               	btfsc	status,2,c
 21747  005876  0012               	return	
 21748  005878  D7D2               	goto	l2170
 21749  00587A                     __end_of_strcpy:
 21750                           	opt stack 0
 21751                           tblptru	equ	0xFF8
 21752                           tblptrh	equ	0xFF7
 21753                           tblptrl	equ	0xFF6
 21754                           tablat	equ	0xFF5
 21755                           prodh	equ	0xFF4
 21756                           prodl	equ	0xFF3
 21757                           intcon	equ	0xFF2
 21758                           intcon2	equ	0xFF1
 21759                           intcon3	equ	0xFF0
 21760                           indf0	equ	0xFEF
 21761                           postinc0	equ	0xFEE
 21762                           fsr0h	equ	0xFEA
 21763                           fsr0l	equ	0xFE9
 21764                           wreg	equ	0xFE8
 21765                           indf1	equ	0xFE7
 21766                           postdec1	equ	0xFE5
 21767                           fsr1h	equ	0xFE2
 21768                           fsr1l	equ	0xFE1
 21769                           indf2	equ	0xFDF
 21770                           postinc2	equ	0xFDE
 21771                           postdec2	equ	0xFDD
 21772                           fsr2h	equ	0xFDA
 21773                           fsr2l	equ	0xFD9
 21774                           status	equ	0xFD8
 21775                           
 21776 ;; *************** function _sprintf *****************
 21777 ;; Defined at:
 21778 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 21779 ;; Parameters:    Size  Location     Type
 21780 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 21781 ;;		 -> enviaDadosWifi@AUX(15), senha(15), ssid(15), line4(21), 
 21782 ;;		 -> line3(21), line2(21), line1(21), filtroStr@aux(60), 
 21783 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 21784 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21785 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21786 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21787 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21788 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21789 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21790 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21791 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21792 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21793 ;;		 -> STR_57(3), STR_43(14), STR_42(3), STR_41(3), 
 21794 ;;		 -> STR_34(14), STR_25(14), STR_24(21), STR_23(17), 
 21795 ;;		 -> STR_22(20), STR_11(3), STR_10(3), 
 21796 ;; Auto vars:     Size  Location     Type
 21797 ;;  pb              4   45[BANK0 ] struct __prbuf
 21798 ;;  ap              2   43[BANK0 ] PTR void [1]
 21799 ;;		 -> ?_sprintf(2), ?_printf(2), 
 21800 ;; Return value:  Size  Location     Type
 21801 ;;                  2   33[BANK0 ] int 
 21802 ;; Registers used:
 21803 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21804 ;; Tracked objects:
 21805 ;;		On entry : 0/0
 21806 ;;		On exit  : 0/0
 21807 ;;		Unchanged: 0/0
 21808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21809 ;;      Params:         0      10       0       0       0       0       0       0       0
 21810 ;;      Locals:         0       6       0       0       0       0       0       0       0
 21811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21812 ;;      Totals:         0      16       0       0       0       0       0       0       0
 21813 ;;Total ram usage:       16 bytes
 21814 ;; Hardware stack levels used:    1
 21815 ;; Hardware stack levels required when called:    8
 21816 ;; This function calls:
 21817 ;;		__doprnt
 21818 ;; This function is called by:
 21819 ;;		_filtroStr
 21820 ;;		_alterarConfigWifi
 21821 ;;		_enviaDadosWifi
 21822 ;;		_main
 21823 ;; This function uses a non-reentrant model
 21824 ;;
 21825                           
 21826                           	psect	text47
 21827  005A20                     __ptext47:
 21828                           	opt stack 0
 21829  005A20                     _sprintf:
 21830                           	opt stack 22
 21831                           
 21832                           ; BSR set to: 0
 21833                           ;incstack = 0
 21834  005A20  C081  F08D         	movff	sprintf@wh,sprintf@pb
 21835  005A24  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 21836  005A28  0E00               	movlw	0
 21837  005A2A  0100               	movlb	0	; () banked
 21838  005A2C  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 21839  005A2E  0E00               	movlw	0
 21840  005A30  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 21841  005A32  0E85               	movlw	low (?_sprintf+4)
 21842  005A34  6F8B               	movwf	sprintf@ap& (0+255),b
 21843  005A36  0E00               	movlw	high (?_sprintf+4)
 21844  005A38  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 21845                           
 21846                           ; BSR set to: 0
 21847  005A3A  0E8D               	movlw	low sprintf@pb
 21848  005A3C  6F6C               	movwf	__doprnt@pb& (0+255),b
 21849  005A3E  0E00               	movlw	high sprintf@pb
 21850  005A40  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 21851  005A42  C083  F06E         	movff	sprintf@f,__doprnt@f
 21852  005A46  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 21853  005A4A  0E8B               	movlw	low sprintf@ap
 21854  005A4C  6F70               	movwf	__doprnt@ap& (0+255),b
 21855  005A4E  0E00               	movlw	high sprintf@ap
 21856  005A50  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 21857  005A52  EC0B  F013         	call	__doprnt	;wreg free
 21858  005A56  C08D  FFD9         	movff	sprintf@pb,fsr2l
 21859  005A5A  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 21860  005A5E  0E00               	movlw	0
 21861  005A60  6EDF               	movwf	indf2,c
 21862  005A62  0012               	return	
 21863  005A64                     __end_of_sprintf:
 21864                           	opt stack 0
 21865                           tblptru	equ	0xFF8
 21866                           tblptrh	equ	0xFF7
 21867                           tblptrl	equ	0xFF6
 21868                           tablat	equ	0xFF5
 21869                           prodh	equ	0xFF4
 21870                           prodl	equ	0xFF3
 21871                           intcon	equ	0xFF2
 21872                           intcon2	equ	0xFF1
 21873                           intcon3	equ	0xFF0
 21874                           indf0	equ	0xFEF
 21875                           postinc0	equ	0xFEE
 21876                           fsr0h	equ	0xFEA
 21877                           fsr0l	equ	0xFE9
 21878                           wreg	equ	0xFE8
 21879                           indf1	equ	0xFE7
 21880                           postdec1	equ	0xFE5
 21881                           fsr1h	equ	0xFE2
 21882                           fsr1l	equ	0xFE1
 21883                           indf2	equ	0xFDF
 21884                           postinc2	equ	0xFDE
 21885                           postdec2	equ	0xFDD
 21886                           fsr2h	equ	0xFDA
 21887                           fsr2l	equ	0xFD9
 21888                           status	equ	0xFD8
 21889                           
 21890 ;; *************** function __doprnt *****************
 21891 ;; Defined at:
 21892 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 21893 ;; Parameters:    Size  Location     Type
 21894 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 21895 ;;		 -> sprintf@pb(4), printf@pb(4), 
 21896 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 21897 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21898 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21899 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21900 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21901 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21902 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21903 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21904 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21905 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21906 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(189), 
 21907 ;;		 -> STR_57(3), STR_55(19), STR_53(62), STR_50(15), 
 21908 ;;		 -> STR_49(21), STR_46(14), STR_44(14), STR_43(14), 
 21909 ;;		 -> STR_42(3), STR_41(3), STR_34(14), STR_33(16), 
 21910 ;;		 -> STR_32(704), STR_31(45), STR_29(21), STR_25(14), 
 21911 ;;		 -> STR_24(21), STR_23(17), STR_22(20), STR_20(22), 
 21912 ;;		 -> STR_18(22), STR_16(35), STR_14(14), STR_12(14), 
 21913 ;;		 -> STR_11(3), STR_10(3), 
 21914 ;;  ap              2   16[BANK0 ] PTR PTR void 
 21915 ;;		 -> sprintf@ap(2), printf@ap(2), 
 21916 ;; Auto vars:     Size  Location     Type
 21917 ;;  tmpval          4    0        struct .
 21918 ;;  width           2   30[BANK0 ] int 
 21919 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 21920 ;;		 -> ?_sprintf(2), ?_printf(2), STR_112(7), _doprnt@c(1), 
 21921 ;;		 -> STR_91(10), STR_90(7), STR_88(11), STR_87(8), 
 21922 ;;		 -> STR_85(11), STR_84(7), STR_72(12), STR_58(12), 
 21923 ;;		 -> enviaDadosWifi@AUX(15), wifi_MAC(24), STR_40(2), senha(15), 
 21924 ;;		 -> STR_38(2), ssid(15), line4(21), line3(21), 
 21925 ;;		 -> line2(21), line1(21), NULL(0), filtroStr@aux(60), 
 21926 ;;		 -> filtroStr@_str(82), bufferSerial(80), STR_9(3), STR_8(5), 
 21927 ;;		 -> STR_7(7), STR_6(6), STR_5(4), STR_4(10), 
 21928 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
 21929 ;;  len             2   26[BANK0 ] unsigned int 
 21930 ;;  val             2   24[BANK0 ] unsigned int 
 21931 ;;  c               1   32[BANK0 ] char 
 21932 ;;  flag            1   23[BANK0 ] unsigned char 
 21933 ;;  prec            1   22[BANK0 ] char 
 21934 ;; Return value:  Size  Location     Type
 21935 ;;                  2   12[BANK0 ] int 
 21936 ;; Registers used:
 21937 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21938 ;; Tracked objects:
 21939 ;;		On entry : 0/0
 21940 ;;		On exit  : 0/0
 21941 ;;		Unchanged: 0/0
 21942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21943 ;;      Params:         0       6       0       0       0       0       0       0       0
 21944 ;;      Locals:         0      11       0       0       0       0       0       0       0
 21945 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21946 ;;      Totals:         0      21       0       0       0       0       0       0       0
 21947 ;;Total ram usage:       21 bytes
 21948 ;; Hardware stack levels used:    1
 21949 ;; Hardware stack levels required when called:    7
 21950 ;; This function calls:
 21951 ;;		Absolute function
 21952 ;;		___lwdiv
 21953 ;;		___lwmod
 21954 ;;		___wmul
 21955 ;;		_isdigit
 21956 ;;		_putch
 21957 ;; This function is called by:
 21958 ;;		_printf
 21959 ;;		_sprintf
 21960 ;; This function uses a non-reentrant model
 21961 ;;
 21962                           
 21963                           	psect	text48
 21964  002616                     __ptext48:
 21965                           	opt stack 0
 21966  002616                     __doprnt:
 21967                           	opt stack 22
 21968                           
 21969                           ;doprnt.c: 499: signed char c;
 21970                           ;doprnt.c: 501: int width;
 21971                           ;doprnt.c: 506: signed char prec;
 21972                           ;doprnt.c: 508: unsigned char flag;
 21973                           ;doprnt.c: 523: union {
 21974                           ;doprnt.c: 524: unsigned long vd;
 21975                           ;doprnt.c: 525: double integ;
 21976                           ;doprnt.c: 526: } tmpval;
 21977                           ;doprnt.c: 528: unsigned int val;
 21978                           ;doprnt.c: 529: unsigned len;
 21979                           ;doprnt.c: 530: const char * cp;
 21980                           ;doprnt.c: 536: while(c = *f++) {
 21981                           
 21982                           ;incstack = 0
 21983  002616  D2CC               	goto	u8250
 21984  002618                     
 21985                           ;doprnt.c: 538: if(c != '%')
 21986  002618  0E25               	movlw	37
 21987  00261A  0100               	movlb	0	; () banked
 21988  00261C  1980               	xorwf	__doprnt@c& (0+255),w,b
 21989  00261E  B4D8               	btfsc	status,2,c
 21990  002620  D033               	goto	l1541
 21991                           
 21992                           ; BSR set to: 0
 21993                           ;doprnt.c: 540: {
 21994                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 21995  002622  EE20 F002          	lfsr	2,2
 21996  002626  516C               	movf	__doprnt@pb& (0+255),w,b
 21997  002628  26D9               	addwf	fsr2l,f,c
 21998  00262A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21999  00262C  22DA               	addwfc	fsr2h,f,c
 22000  00262E  50DE               	movf	postinc2,w,c
 22001  002630  10DE               	iorwf	postinc2,w,c
 22002  002632  B4D8               	btfsc	status,2,c
 22003  002634  D013               	goto	l1542
 22004                           
 22005                           ; BSR set to: 0
 22006  002636  EE20 F002          	lfsr	2,2
 22007  00263A  516C               	movf	__doprnt@pb& (0+255),w,b
 22008  00263C  26D9               	addwf	fsr2l,f,c
 22009  00263E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22010  002640  22DA               	addwfc	fsr2h,f,c
 22011  002642  D801               	call	u7948
 22012  002644  D2B5               	goto	u8250
 22013  002646                     u7948:
 22014  002646  0005               	push	
 22015  002648  6EFA               	movwf	pclath,c
 22016  00264A  50DE               	movf	postinc2,w,c
 22017  00264C  6EFD               	movwf	tosl,c
 22018  00264E  50DE               	movf	postinc2,w,c
 22019  002650  6EFE               	movwf	tosh,c
 22020  002652  50F8               	movf	tblptru,w,c
 22021  002654  6EFF               	movwf	tosu,c
 22022  002656  50FA               	movf	pclath,w,c
 22023  002658  5180               	movf	__doprnt@c& (0+255),w,b
 22024  00265A  0012               	return		;indir
 22025  00265C                     l1542:
 22026  00265C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22027  002660  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22028  002664  CFDE F072          	movff	postinc2,??__doprnt
 22029  002668  CFDD F073          	movff	postdec2,??__doprnt+1
 22030  00266C  C072  FFD9         	movff	??__doprnt,fsr2l
 22031  002670  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22032  002674  C080  FFDF         	movff	__doprnt@c,indf2
 22033  002678  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22034  00267C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22035  002680  2ADE               	incf	postinc2,f,c
 22036  002682  0E00               	movlw	0
 22037  002684  22DD               	addwfc	postdec2,f,c
 22038                           
 22039                           ;doprnt.c: 542: continue;
 22040  002686  D294               	goto	u8250
 22041  002688                     l1541:
 22042                           
 22043                           ;doprnt.c: 543: }
 22044                           ;doprnt.c: 546: width = 0;
 22045  002688  0E00               	movlw	0
 22046  00268A  0100               	movlb	0	; () banked
 22047  00268C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22048  00268E  0E00               	movlw	0
 22049  002690  6F7E               	movwf	__doprnt@width& (0+255),b
 22050                           
 22051                           ;doprnt.c: 548: flag = 0;
 22052  002692  0E00               	movlw	0
 22053  002694  6F77               	movwf	__doprnt@flag& (0+255),b
 22054                           
 22055                           ; BSR set to: 0
 22056                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 22057  002696  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22058  00269A  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22059  00269E                     	if	0	;tblptru may be non-zero
 22060  00269E                     	endif
 22061  00269E                     	if	0	;tblptru may be non-zero
 22062  00269E                     	endif
 22063  00269E  0008               	tblrd		*
 22064  0026A0  50F5               	movf	tablat,w,c
 22065  0026A2  EC09  F02F         	call	_isdigit
 22066  0026A6  A0D8               	btfss	status,0,c
 22067  0026A8  D13C               	goto	l1547
 22068                           
 22069                           ;doprnt.c: 598: width = 0;
 22070  0026AA  0E00               	movlw	0
 22071  0026AC  0100               	movlb	0	; () banked
 22072  0026AE  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22073  0026B0  0E00               	movlw	0
 22074  0026B2  6F7E               	movwf	__doprnt@width& (0+255),b
 22075  0026B4                     
 22076                           ;doprnt.c: 600: width *= 10;
 22077                           
 22078                           ; BSR set to: 0
 22079  0026B4  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 22080  0026B8  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 22081  0026BC  0E00               	movlw	0
 22082  0026BE  0100               	movlb	0	; () banked
 22083  0026C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22084  0026C2  0E0A               	movlw	10
 22085  0026C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 22086  0026C6  ECA9  F02E         	call	___wmul	;wreg free
 22087  0026CA  C060  F07E         	movff	?___wmul,__doprnt@width
 22088  0026CE  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 22089                           
 22090                           ;doprnt.c: 601: width += *f++ - '0';
 22091  0026D2  0ED0               	movlw	208
 22092  0026D4  0100               	movlb	0	; () banked
 22093  0026D6  6F72               	movwf	??__doprnt& (0+255),b
 22094  0026D8  0EFF               	movlw	255
 22095  0026DA  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22096  0026DC  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22097  0026E0  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22098  0026E4                     	if	0	;tblptru may be non-zero
 22099  0026E4                     	endif
 22100  0026E4                     	if	0	;tblptru may be non-zero
 22101  0026E4                     	endif
 22102  0026E4  0008               	tblrd		*
 22103  0026E6  50F5               	movf	tablat,w,c
 22104  0026E8  6F74               	movwf	(??__doprnt+2)& (0+255),b
 22105  0026EA  6B75               	clrf	(??__doprnt+3)& (0+255),b
 22106  0026EC  5172               	movf	??__doprnt& (0+255),w,b
 22107  0026EE  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 22108  0026F0  5173               	movf	(??__doprnt+1)& (0+255),w,b
 22109  0026F2  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 22110  0026F4  5174               	movf	(??__doprnt+2)& (0+255),w,b
 22111  0026F6  277E               	addwf	__doprnt@width& (0+255),f,b
 22112  0026F8  5175               	movf	(??__doprnt+3)& (0+255),w,b
 22113  0026FA  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22114                           
 22115                           ; BSR set to: 0
 22116  0026FC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22117  0026FE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22121  002700  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22122  002704  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22123  002708                     	if	0	;tblptru may be non-zero
 22124  002708                     	endif
 22125  002708                     	if	0	;tblptru may be non-zero
 22126  002708                     	endif
 22127  002708  0008               	tblrd		*
 22128  00270A  50F5               	movf	tablat,w,c
 22129  00270C  EC09  F02F         	call	_isdigit
 22130  002710  A0D8               	btfss	status,0,c
 22131  002712  D107               	goto	l1547
 22132  002714  D7CF               	goto	l1545
 22133  002716                     
 22134                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22135  002716  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22136  00271A  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22137  00271E  CFDF F072          	movff	indf2,??__doprnt
 22138  002722  0E02               	movlw	2
 22139  002724  26DE               	addwf	postinc2,f,c
 22140  002726  CFDF F073          	movff	indf2,??__doprnt+1
 22141  00272A  0E00               	movlw	0
 22142  00272C  22DD               	addwfc	postdec2,f,c
 22143  00272E  C072  FFD9         	movff	??__doprnt,fsr2l
 22144  002732  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22145  002736  CFDE F07C          	movff	postinc2,__doprnt@cp
 22146  00273A  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 22147                           
 22148                           ;doprnt.c: 740: if(!cp)
 22149  00273E  0100               	movlb	0	; () banked
 22150  002740  517C               	movf	__doprnt@cp& (0+255),w,b
 22151  002742  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 22152  002744  A4D8               	btfss	status,2,c
 22153  002746  D004               	goto	l1554
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;doprnt.c: 741: cp = "(null)";
 22157  002748  0E83               	movlw	low STR_112
 22158  00274A  6F7C               	movwf	__doprnt@cp& (0+255),b
 22159  00274C  0E7F               	movlw	high STR_112
 22160  00274E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22161  002750                     l1554:
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;doprnt.c: 745: len = 0;
 22165                           
 22166                           ; BSR set to: 0
 22167  002750  0E00               	movlw	0
 22168  002752  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22169  002754  0E00               	movlw	0
 22170  002756  6F7A               	movwf	__doprnt@len& (0+255),b
 22171                           
 22172                           ;doprnt.c: 746: while(cp[len])
 22173  002758  D003               	goto	l1555
 22174  00275A                     
 22175                           ;doprnt.c: 747: len++;
 22176                           
 22177                           ; BSR set to: 0
 22178  00275A  0100               	movlb	0	; () banked
 22179  00275C  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 22180  00275E  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 22181  002760                     l1555:
 22182                           
 22183                           ; BSR set to: 0
 22184                           
 22185                           ; BSR set to: 0
 22186  002760  517A               	movf	__doprnt@len& (0+255),w,b
 22187  002762  257C               	addwf	__doprnt@cp& (0+255),w,b
 22188  002764  6F72               	movwf	??__doprnt& (0+255),b
 22189  002766  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22190  002768  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 22191  00276A  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22192  00276C  C072  FFF6         	movff	??__doprnt,tblptrl
 22193  002770  C073  FFF7         	movff	??__doprnt+1,tblptrh
 22194  002774  6AF8               	clrf	tblptru,c
 22195  002776  0E07               	movlw	(high __ramtop+-1)
 22196  002778  64F7               	cpfsgt	tblptrh,c
 22197  00277A  D003               	bra	u7987
 22198  00277C  0008               	tblrd		*
 22199  00277E  50F5               	movf	tablat,w,c
 22200  002780  D005               	bra	u7980
 22201  002782                     u7987:
 22202  002782  CFF6 FFE9          	movff	tblptrl,fsr0l
 22203  002786  CFF7 FFEA          	movff	tblptrh,fsr0h
 22204  00278A  50EF               	movf	indf0,w,c
 22205  00278C                     u7980:
 22206  00278C  0900               	iorlw	0
 22207  00278E  A4D8               	btfss	status,2,c
 22208  002790  D7E4               	goto	l1556
 22209  002792                     u7990:
 22210                           
 22211                           ;doprnt.c: 757: if(width > len)
 22212                           
 22213                           ;doprnt.c: 750: dostring:
 22214  002792  0100               	movlb	0	; () banked
 22215  002794  517E               	movf	__doprnt@width& (0+255),w,b
 22216  002796  5D7A               	subwf	__doprnt@len& (0+255),w,b
 22217  002798  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22218  00279A  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 22219  00279C  B0D8               	btfsc	status,0,c
 22220  00279E  D005               	goto	l1559
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;doprnt.c: 758: width -= len;
 22224  0027A0  517A               	movf	__doprnt@len& (0+255),w,b
 22225  0027A2  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22226  0027A4  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22227  0027A6  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22228  0027A8  D037               	goto	l1564
 22229  0027AA                     l1559:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;doprnt.c: 759: else
 22233                           ;doprnt.c: 760: width = 0;
 22234                           
 22235                           ; BSR set to: 0
 22236  0027AA  0E00               	movlw	0
 22237  0027AC  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22238  0027AE  0E00               	movlw	0
 22239  0027B0  6F7E               	movwf	__doprnt@width& (0+255),b
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;doprnt.c: 764: while(width--)
 22243  0027B2  D032               	goto	l1564
 22244  0027B4                     l6331:
 22245                           
 22246                           ; BSR set to: 0
 22247                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22248  0027B4  EE20 F002          	lfsr	2,2
 22249  0027B8  516C               	movf	__doprnt@pb& (0+255),w,b
 22250  0027BA  26D9               	addwf	fsr2l,f,c
 22251  0027BC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22252  0027BE  22DA               	addwfc	fsr2h,f,c
 22253  0027C0  50DE               	movf	postinc2,w,c
 22254  0027C2  10DE               	iorwf	postinc2,w,c
 22255  0027C4  B4D8               	btfsc	status,2,c
 22256  0027C6  D013               	goto	l1563
 22257                           
 22258                           ; BSR set to: 0
 22259  0027C8  EE20 F002          	lfsr	2,2
 22260  0027CC  516C               	movf	__doprnt@pb& (0+255),w,b
 22261  0027CE  26D9               	addwf	fsr2l,f,c
 22262  0027D0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22263  0027D2  22DA               	addwfc	fsr2h,f,c
 22264  0027D4  D801               	call	u8028
 22265  0027D6  D020               	goto	l1564
 22266  0027D8                     u8028:
 22267  0027D8  0005               	push	
 22268  0027DA  6EFA               	movwf	pclath,c
 22269  0027DC  50DE               	movf	postinc2,w,c
 22270  0027DE  6EFD               	movwf	tosl,c
 22271  0027E0  50DE               	movf	postinc2,w,c
 22272  0027E2  6EFE               	movwf	tosh,c
 22273  0027E4  50F8               	movf	tblptru,w,c
 22274  0027E6  6EFF               	movwf	tosu,c
 22275  0027E8  50FA               	movf	pclath,w,c
 22276  0027EA  0E20               	movlw	32
 22277  0027EC  0012               	return		;indir
 22278  0027EE                     l1563:
 22279  0027EE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22280  0027F2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22281  0027F6  CFDE F072          	movff	postinc2,??__doprnt
 22282  0027FA  CFDD F073          	movff	postdec2,??__doprnt+1
 22283  0027FE  C072  FFD9         	movff	??__doprnt,fsr2l
 22284  002802  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22285  002806  0E20               	movlw	32
 22286  002808  6EDF               	movwf	indf2,c
 22287  00280A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22288  00280E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22289  002812  2ADE               	incf	postinc2,f,c
 22290  002814  0E00               	movlw	0
 22291  002816  22DD               	addwfc	postdec2,f,c
 22292  002818                     l1564:
 22293  002818  0100               	movlb	0	; () banked
 22294  00281A  077E               	decf	__doprnt@width& (0+255),f,b
 22295  00281C  A0D8               	btfss	status,0,c
 22296  00281E  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22297  002820  297E               	incf	__doprnt@width& (0+255),w,b
 22298  002822  E1C8               	bnz	l6331
 22299  002824  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 22300  002826  B4D8               	btfsc	status,2,c
 22301  002828  D058               	goto	l1569
 22302  00282A  D7C4               	goto	l1562
 22303  00282C                     l6341:
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 22307  00282C  EE20 F002          	lfsr	2,2
 22308  002830  516C               	movf	__doprnt@pb& (0+255),w,b
 22309  002832  26D9               	addwf	fsr2l,f,c
 22310  002834  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22311  002836  22DA               	addwfc	fsr2h,f,c
 22312  002838  50DE               	movf	postinc2,w,c
 22313  00283A  10DE               	iorwf	postinc2,w,c
 22314  00283C  B4D8               	btfsc	status,2,c
 22315  00283E  D026               	goto	l1568
 22316                           
 22317                           ; BSR set to: 0
 22318  002840  EE20 F002          	lfsr	2,2
 22319  002844  516C               	movf	__doprnt@pb& (0+255),w,b
 22320  002846  26D9               	addwf	fsr2l,f,c
 22321  002848  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22322  00284A  22DA               	addwfc	fsr2h,f,c
 22323  00284C  D801               	call	u8058
 22324  00284E  D01A               	goto	u8059
 22325  002850                     u8058:
 22326  002850  0005               	push	
 22327  002852  6EFA               	movwf	pclath,c
 22328  002854  50DE               	movf	postinc2,w,c
 22329  002856  6EFD               	movwf	tosl,c
 22330  002858  50DE               	movf	postinc2,w,c
 22331  00285A  6EFE               	movwf	tosh,c
 22332  00285C  50F8               	movf	tblptru,w,c
 22333  00285E  6EFF               	movwf	tosu,c
 22334  002860  50FA               	movf	pclath,w,c
 22335  002862  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22336  002866  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22337  00286A  6AF8               	clrf	tblptru,c
 22338  00286C  0E07               	movlw	(high __ramtop+-1)
 22339  00286E  64F7               	cpfsgt	tblptrh,c
 22340  002870  D003               	bra	u8067
 22341  002872  0008               	tblrd		*
 22342  002874  50F5               	movf	tablat,w,c
 22343  002876  D005               	bra	u8060
 22344  002878                     u8067:
 22345  002878  CFF6 FFE9          	movff	tblptrl,fsr0l
 22346  00287C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22347  002880  50EF               	movf	indf0,w,c
 22348  002882                     u8060:
 22349  002882  0012               	return		;indir
 22350  002884                     u8059:
 22351  002884  0100               	movlb	0	; () banked
 22352  002886  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22353  002888  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22354  00288A  D027               	goto	l1569
 22355  00288C                     l1568:
 22356                           
 22357                           ; BSR set to: 0
 22358                           
 22359                           ; BSR set to: 0
 22360  00288C  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22361  002890  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22362  002894  6AF8               	clrf	tblptru,c
 22363  002896  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22364  00289A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22365  00289E  CFDE F072          	movff	postinc2,??__doprnt
 22366  0028A2  CFDD F073          	movff	postdec2,??__doprnt+1
 22367  0028A6  C072  FFD9         	movff	??__doprnt,fsr2l
 22368  0028AA  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22369  0028AE  0E07               	movlw	(high __ramtop+-1)
 22370  0028B0  64F7               	cpfsgt	tblptrh,c
 22371  0028B2  D003               	bra	u8077
 22372  0028B4  0008               	tblrd		*
 22373  0028B6  50F5               	movf	tablat,w,c
 22374  0028B8  D005               	bra	u8070
 22375  0028BA                     u8077:
 22376  0028BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22377  0028BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22378  0028C2  50EF               	movf	indf0,w,c
 22379  0028C4                     u8070:
 22380  0028C4  6EDF               	movwf	indf2,c
 22381  0028C6  0100               	movlb	0	; () banked
 22382  0028C8  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22383  0028CA  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22384                           
 22385                           ; BSR set to: 0
 22386  0028CC  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22387  0028D0  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22388  0028D4  2ADE               	incf	postinc2,f,c
 22389  0028D6  0E00               	movlw	0
 22390  0028D8  22DD               	addwfc	postdec2,f,c
 22391  0028DA                     l1569:
 22392                           
 22393                           ; BSR set to: 0
 22394                           
 22395                           ; BSR set to: 0
 22396                           
 22397                           ; BSR set to: 0
 22398  0028DA  077A               	decf	__doprnt@len& (0+255),f,b
 22399  0028DC  A0D8               	btfss	status,0,c
 22400  0028DE  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 22401  0028E0  297A               	incf	__doprnt@len& (0+255),w,b
 22402  0028E2  E1A4               	bnz	l6341
 22403  0028E4  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 22404  0028E6  B4D8               	btfsc	status,2,c
 22405  0028E8  D163               	goto	u8250
 22406  0028EA  D7A0               	goto	l1567
 22407  0028EC                     
 22408                           ; BSR set to: 0
 22409                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 22410                           
 22411                           ; BSR set to: 0
 22412  0028EC  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22413  0028F0  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22414  0028F4  CFDF F072          	movff	indf2,??__doprnt
 22415  0028F8  0E02               	movlw	2
 22416  0028FA  26DE               	addwf	postinc2,f,c
 22417  0028FC  CFDF F073          	movff	indf2,??__doprnt+1
 22418  002900  0E00               	movlw	0
 22419  002902  22DD               	addwfc	postdec2,f,c
 22420  002904  C072  FFD9         	movff	??__doprnt,fsr2l
 22421  002908  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22422  00290C  50DF               	movf	indf2,w,c
 22423  00290E  6F80               	movwf	__doprnt@c& (0+255),b
 22424  002910                     
 22425                           ; BSR set to: 0
 22426                           ;doprnt.c: 805: cp = (char *)&c;
 22427                           
 22428                           ; BSR set to: 0
 22429  002910  0E80               	movlw	low __doprnt@c
 22430  002912  6F7C               	movwf	__doprnt@cp& (0+255),b
 22431  002914  0E00               	movlw	high __doprnt@c
 22432  002916  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;doprnt.c: 806: len = 1;
 22436  002918  0E00               	movlw	0
 22437  00291A  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22438  00291C  0E01               	movlw	1
 22439  00291E  6F7A               	movwf	__doprnt@len& (0+255),b
 22440                           
 22441                           ;doprnt.c: 807: goto dostring;
 22442  002920  D738               	goto	u7990
 22443  002922                     l1547:
 22444                           
 22445                           ; BSR set to: 0
 22446  002922  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22447  002926  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22448  00292A  0100               	movlb	0	; () banked
 22449  00292C  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22450  00292E  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22451  002930                     	if	0	;tblptru may be non-zero
 22452  002930                     	endif
 22453  002930                     	if	0	;tblptru may be non-zero
 22454  002930                     	endif
 22455  002930  0008               	tblrd		*
 22456  002932  CFF5 F080          	movff	tablat,__doprnt@c
 22457  002936  5180               	movf	__doprnt@c& (0+255),w,b
 22458                           
 22459                           ; Switch size 1, requested type "space"
 22460                           ; Number of cases is 5, Range of values is 0 to 115
 22461                           ; switch strategies available:
 22462                           ; Name         Instructions Cycles
 22463                           ; simple_byte           16     9 (average)
 22464                           ;	Chosen strategy is simple_byte
 22465  002938  0A00               	xorlw	0	; case 0
 22466  00293A  B4D8               	btfsc	status,2,c
 22467  00293C  D146               	goto	u8260
 22468  00293E  0A63               	xorlw	99	; case 99
 22469  002940  B4D8               	btfsc	status,2,c
 22470  002942  D7D4               	goto	l1571
 22471  002944  0A07               	xorlw	7	; case 100
 22472  002946  B4D8               	btfsc	status,2,c
 22473  002948  D007               	goto	l1552
 22474  00294A  0A0D               	xorlw	13	; case 105
 22475  00294C  B4D8               	btfsc	status,2,c
 22476  00294E  D004               	goto	l1552
 22477  002950  0A1A               	xorlw	26	; case 115
 22478  002952  B4D8               	btfsc	status,2,c
 22479  002954  D6E0               	goto	l1553
 22480  002956  D7DC               	goto	l1572
 22481  002958                     l1552:
 22482                           
 22483                           ;doprnt.c: 1253: {
 22484                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 22485                           
 22486                           ; BSR set to: 0
 22487  002958  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22488  00295C  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22489  002960  CFDF F072          	movff	indf2,??__doprnt
 22490  002964  0E02               	movlw	2
 22491  002966  26DE               	addwf	postinc2,f,c
 22492  002968  CFDF F073          	movff	indf2,??__doprnt+1
 22493  00296C  0E00               	movlw	0
 22494  00296E  22DD               	addwfc	postdec2,f,c
 22495  002970  C072  FFD9         	movff	??__doprnt,fsr2l
 22496  002974  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22497  002978  CFDE F078          	movff	postinc2,__doprnt@val
 22498  00297C  CFDD F079          	movff	postdec2,__doprnt@val+1
 22499                           
 22500                           ;doprnt.c: 1261: if((int)val < 0) {
 22501  002980  0100               	movlb	0	; () banked
 22502  002982  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 22503  002984  D006               	goto	l1573
 22504                           
 22505                           ; BSR set to: 0
 22506                           ;doprnt.c: 1262: flag |= 0x03;
 22507  002986  0E03               	movlw	3
 22508  002988  1377               	iorwf	__doprnt@flag& (0+255),f,b
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;doprnt.c: 1263: val = -val;
 22512  00298A  6D78               	negf	__doprnt@val& (0+255),b
 22513  00298C  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 22514  00298E  B0D8               	btfsc	status,0,c
 22515  002990  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 22516  002992                     l1573:
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;doprnt.c: 1264: }
 22520                           ;doprnt.c: 1266: }
 22521                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22522                           
 22523                           ; BSR set to: 0
 22524  002992  0E01               	movlw	1
 22525  002994  6F80               	movwf	__doprnt@c& (0+255),b
 22526  002996                     l6375:
 22527                           
 22528                           ; BSR set to: 0
 22529  002996  0E05               	movlw	5
 22530  002998  1980               	xorwf	__doprnt@c& (0+255),w,b
 22531  00299A  B4D8               	btfsc	status,2,c
 22532  00299C  D012               	goto	u8120
 22533                           
 22534                           ; BSR set to: 0
 22535                           ;doprnt.c: 1306: if(val < dpowers[c])
 22536                           
 22537                           ; BSR set to: 0
 22538                           
 22539                           ; BSR set to: 0
 22540  00299E  5180               	movf	__doprnt@c& (0+255),w,b
 22541  0029A0  0D02               	mullw	2
 22542  0029A2  0EA7               	movlw	low _dpowers
 22543  0029A4  24F3               	addwf	prodl,w,c
 22544  0029A6  6EF6               	movwf	tblptrl,c
 22545  0029A8  0E77               	movlw	high _dpowers
 22546  0029AA  20F4               	addwfc	prodh,w,c
 22547  0029AC  6EF7               	movwf	tblptrh,c
 22548  0029AE                     	if	0	;There are less than 3 active tblptr bytes
 22549  0029AE                     	endif
 22550  0029AE  0009               	tblrd		*+
 22551  0029B0  50F5               	movf	tablat,w,c
 22552  0029B2  5D78               	subwf	__doprnt@val& (0+255),w,b
 22553  0029B4  0009               	tblrd		*+
 22554  0029B6  50F5               	movf	tablat,w,c
 22555  0029B8  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 22556  0029BA  A0D8               	btfss	status,0,c
 22557  0029BC  D002               	goto	u8120
 22558                           
 22559                           ; BSR set to: 0
 22560                           
 22561                           ; BSR set to: 0
 22562                           
 22563                           ; BSR set to: 0
 22564                           ;doprnt.c: 1307: break;
 22565  0029BE  2B80               	incf	__doprnt@c& (0+255),f,b
 22566  0029C0  D7EA               	goto	l6375
 22567  0029C2                     u8120:
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;doprnt.c: 1345: if(width && flag & 0x03)
 22571                           
 22572                           ; BSR set to: 0
 22573  0029C2  517E               	movf	__doprnt@width& (0+255),w,b
 22574  0029C4  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22575  0029C6  B4D8               	btfsc	status,2,c
 22576  0029C8  D009               	goto	l1577
 22577                           
 22578                           ; BSR set to: 0
 22579  0029CA  C077  F072         	movff	__doprnt@flag,??__doprnt
 22580  0029CE  0E03               	movlw	3
 22581  0029D0  1772               	andwf	??__doprnt& (0+255),f,b
 22582  0029D2  B4D8               	btfsc	status,2,c
 22583  0029D4  D003               	goto	l1577
 22584                           
 22585                           ; BSR set to: 0
 22586                           ;doprnt.c: 1346: width--;
 22587  0029D6  077E               	decf	__doprnt@width& (0+255),f,b
 22588  0029D8  A0D8               	btfss	status,0,c
 22589  0029DA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22590  0029DC                     l1577:
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;doprnt.c: 1381: if(width > c)
 22594                           
 22595                           ; BSR set to: 0
 22596  0029DC  0E80               	movlw	128
 22597  0029DE  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22598  0029E0  0E7F               	movlw	127
 22599  0029E2  6F72               	movwf	??__doprnt& (0+255),b
 22600  0029E4  517E               	movf	__doprnt@width& (0+255),w,b
 22601  0029E6  5D80               	subwf	__doprnt@c& (0+255),w,b
 22602  0029E8  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22603  0029EA  0A80               	xorlw	128
 22604  0029EC  5972               	subwfb	??__doprnt& (0+255),w,b
 22605  0029EE  B0D8               	btfsc	status,0,c
 22606  0029F0  D007               	goto	l1578
 22607                           
 22608                           ; BSR set to: 0
 22609                           ;doprnt.c: 1382: width -= c;
 22610  0029F2  5180               	movf	__doprnt@c& (0+255),w,b
 22611  0029F4  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22612  0029F6  0E00               	movlw	0
 22613  0029F8  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22614  0029FA  0EFF               	movlw	255
 22615  0029FC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22616  0029FE  D004               	goto	l1579
 22617  002A00                     l1578:
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;doprnt.c: 1383: else
 22621                           ;doprnt.c: 1384: width = 0;
 22622                           
 22623                           ; BSR set to: 0
 22624  002A00  0E00               	movlw	0
 22625  002A02  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22626  002A04  0E00               	movlw	0
 22627  002A06  6F7E               	movwf	__doprnt@width& (0+255),b
 22628  002A08                     l1579:
 22629                           
 22630                           ; BSR set to: 0
 22631                           ;doprnt.c: 1422: {
 22632                           ;doprnt.c: 1424: if(width
 22633                           ;doprnt.c: 1428: )
 22634                           
 22635                           ; BSR set to: 0
 22636  002A08  517E               	movf	__doprnt@width& (0+255),w,b
 22637  002A0A  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22638  002A0C  B4D8               	btfsc	status,2,c
 22639  002A0E  D03A               	goto	u8190
 22640  002A10                     u8160:
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22644                           
 22645                           ; BSR set to: 0
 22646                           
 22647                           ;doprnt.c: 1429: do
 22648  002A10  EE20 F002          	lfsr	2,2
 22649  002A14  516C               	movf	__doprnt@pb& (0+255),w,b
 22650  002A16  26D9               	addwf	fsr2l,f,c
 22651  002A18  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22652  002A1A  22DA               	addwfc	fsr2h,f,c
 22653  002A1C  50DE               	movf	postinc2,w,c
 22654  002A1E  10DE               	iorwf	postinc2,w,c
 22655  002A20  B4D8               	btfsc	status,2,c
 22656  002A22  D013               	goto	l1582
 22657                           
 22658                           ; BSR set to: 0
 22659  002A24  EE20 F002          	lfsr	2,2
 22660  002A28  516C               	movf	__doprnt@pb& (0+255),w,b
 22661  002A2A  26D9               	addwf	fsr2l,f,c
 22662  002A2C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22663  002A2E  22DA               	addwfc	fsr2h,f,c
 22664  002A30  D801               	call	u8188
 22665  002A32  D020               	goto	l1583
 22666  002A34                     u8188:
 22667  002A34  0005               	push	
 22668  002A36  6EFA               	movwf	pclath,c
 22669  002A38  50DE               	movf	postinc2,w,c
 22670  002A3A  6EFD               	movwf	tosl,c
 22671  002A3C  50DE               	movf	postinc2,w,c
 22672  002A3E  6EFE               	movwf	tosh,c
 22673  002A40  50F8               	movf	tblptru,w,c
 22674  002A42  6EFF               	movwf	tosu,c
 22675  002A44  50FA               	movf	pclath,w,c
 22676  002A46  0E20               	movlw	32
 22677  002A48  0012               	return		;indir
 22678  002A4A                     l1582:
 22679  002A4A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22680  002A4E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22681  002A52  CFDE F072          	movff	postinc2,??__doprnt
 22682  002A56  CFDD F073          	movff	postdec2,??__doprnt+1
 22683  002A5A  C072  FFD9         	movff	??__doprnt,fsr2l
 22684  002A5E  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22685  002A62  0E20               	movlw	32
 22686  002A64  6EDF               	movwf	indf2,c
 22687  002A66  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22688  002A6A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22689  002A6E  2ADE               	incf	postinc2,f,c
 22690  002A70  0E00               	movlw	0
 22691  002A72  22DD               	addwfc	postdec2,f,c
 22692  002A74                     l1583:
 22693                           
 22694                           ;doprnt.c: 1431: while(--width);
 22695  002A74  0100               	movlb	0	; () banked
 22696  002A76  077E               	decf	__doprnt@width& (0+255),f,b
 22697  002A78  A0D8               	btfss	status,0,c
 22698  002A7A  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22699  002A7C  517E               	movf	__doprnt@width& (0+255),w,b
 22700  002A7E  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22701  002A80  A4D8               	btfss	status,2,c
 22702  002A82  D7C6               	goto	u8160
 22703  002A84                     u8190:
 22704                           
 22705                           ; BSR set to: 0
 22706                           ;doprnt.c: 1438: if(flag & 0x03)
 22707                           
 22708                           ; BSR set to: 0
 22709                           
 22710                           ; BSR set to: 0
 22711  002A84  C077  F072         	movff	__doprnt@flag,??__doprnt
 22712  002A88  0E03               	movlw	3
 22713  002A8A  1772               	andwf	??__doprnt& (0+255),f,b
 22714  002A8C  B4D8               	btfsc	status,2,c
 22715  002A8E  D032               	goto	l1587
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 22719  002A90  EE20 F002          	lfsr	2,2
 22720  002A94  516C               	movf	__doprnt@pb& (0+255),w,b
 22721  002A96  26D9               	addwf	fsr2l,f,c
 22722  002A98  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22723  002A9A  22DA               	addwfc	fsr2h,f,c
 22724  002A9C  50DE               	movf	postinc2,w,c
 22725  002A9E  10DE               	iorwf	postinc2,w,c
 22726  002AA0  B4D8               	btfsc	status,2,c
 22727  002AA2  D013               	goto	l1586
 22728                           
 22729                           ; BSR set to: 0
 22730  002AA4  EE20 F002          	lfsr	2,2
 22731  002AA8  516C               	movf	__doprnt@pb& (0+255),w,b
 22732  002AAA  26D9               	addwf	fsr2l,f,c
 22733  002AAC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22734  002AAE  22DA               	addwfc	fsr2h,f,c
 22735  002AB0  D801               	call	u8228
 22736  002AB2  D020               	goto	l1587
 22737  002AB4                     u8228:
 22738  002AB4  0005               	push	
 22739  002AB6  6EFA               	movwf	pclath,c
 22740  002AB8  50DE               	movf	postinc2,w,c
 22741  002ABA  6EFD               	movwf	tosl,c
 22742  002ABC  50DE               	movf	postinc2,w,c
 22743  002ABE  6EFE               	movwf	tosh,c
 22744  002AC0  50F8               	movf	tblptru,w,c
 22745  002AC2  6EFF               	movwf	tosu,c
 22746  002AC4  50FA               	movf	pclath,w,c
 22747  002AC6  0E2D               	movlw	45
 22748  002AC8  0012               	return		;indir
 22749  002ACA                     l1586:
 22750  002ACA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22751  002ACE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22752  002AD2  CFDE F072          	movff	postinc2,??__doprnt
 22753  002AD6  CFDD F073          	movff	postdec2,??__doprnt+1
 22754  002ADA  C072  FFD9         	movff	??__doprnt,fsr2l
 22755  002ADE  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22756  002AE2  0E2D               	movlw	45
 22757  002AE4  6EDF               	movwf	indf2,c
 22758  002AE6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22759  002AEA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22760  002AEE  2ADE               	incf	postinc2,f,c
 22761  002AF0  0E00               	movlw	0
 22762  002AF2  22DD               	addwfc	postdec2,f,c
 22763  002AF4                     l1587:
 22764                           
 22765                           ;doprnt.c: 1469: }
 22766                           ;doprnt.c: 1472: prec = c;
 22767  002AF4  C080  F076         	movff	__doprnt@c,__doprnt@prec
 22768                           
 22769                           ;doprnt.c: 1474: while(prec--) {
 22770  002AF8  D056               	goto	l1591
 22771  002AFA                     
 22772                           ;doprnt.c: 1478: {
 22773                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22774  002AFA  0100               	movlb	0	; () banked
 22775  002AFC  5176               	movf	__doprnt@prec& (0+255),w,b
 22776  002AFE  0D02               	mullw	2
 22777  002B00  0EA7               	movlw	low _dpowers
 22778  002B02  24F3               	addwf	prodl,w,c
 22779  002B04  6EF6               	movwf	tblptrl,c
 22780  002B06  0E77               	movlw	high _dpowers
 22781  002B08  20F4               	addwfc	prodh,w,c
 22782  002B0A  6EF7               	movwf	tblptrh,c
 22783  002B0C                     	if	0	;There are less than 3 active tblptr bytes
 22784  002B0C                     	endif
 22785  002B0C  0009               	tblrd		*+
 22786  002B0E  CFF5 F062          	movff	tablat,___lwdiv@divisor
 22787  002B12  000A               	tblrd		*-
 22788  002B14  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 22789  002B18  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 22790  002B1C  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 22791  002B20  EC99  F02C         	call	___lwdiv
 22792  002B24  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 22793  002B28  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 22794  002B2C  0E00               	movlw	0
 22795  002B2E  0100               	movlb	0	; () banked
 22796  002B30  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 22797  002B32  0E0A               	movlw	10
 22798  002B34  6F69               	movwf	___lwmod@divisor& (0+255),b
 22799  002B36  EC32  F02D         	call	___lwmod	;wreg free
 22800  002B3A  0100               	movlb	0	; () banked
 22801  002B3C  5167               	movf	?___lwmod& (0+255),w,b
 22802  002B3E  0F30               	addlw	48
 22803  002B40  6F80               	movwf	__doprnt@c& (0+255),b
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;doprnt.c: 1523: }
 22807                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 22808  002B42  EE20 F002          	lfsr	2,2
 22809  002B46  516C               	movf	__doprnt@pb& (0+255),w,b
 22810  002B48  26D9               	addwf	fsr2l,f,c
 22811  002B4A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22812  002B4C  22DA               	addwfc	fsr2h,f,c
 22813  002B4E  50DE               	movf	postinc2,w,c
 22814  002B50  10DE               	iorwf	postinc2,w,c
 22815  002B52  B4D8               	btfsc	status,2,c
 22816  002B54  D013               	goto	l1590
 22817                           
 22818                           ; BSR set to: 0
 22819  002B56  EE20 F002          	lfsr	2,2
 22820  002B5A  516C               	movf	__doprnt@pb& (0+255),w,b
 22821  002B5C  26D9               	addwf	fsr2l,f,c
 22822  002B5E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22823  002B60  22DA               	addwfc	fsr2h,f,c
 22824  002B62  D801               	call	u8248
 22825  002B64  D020               	goto	l1591
 22826  002B66                     u8248:
 22827  002B66  0005               	push	
 22828  002B68  6EFA               	movwf	pclath,c
 22829  002B6A  50DE               	movf	postinc2,w,c
 22830  002B6C  6EFD               	movwf	tosl,c
 22831  002B6E  50DE               	movf	postinc2,w,c
 22832  002B70  6EFE               	movwf	tosh,c
 22833  002B72  50F8               	movf	tblptru,w,c
 22834  002B74  6EFF               	movwf	tosu,c
 22835  002B76  50FA               	movf	pclath,w,c
 22836  002B78  5180               	movf	__doprnt@c& (0+255),w,b
 22837  002B7A  0012               	return		;indir
 22838  002B7C                     l1590:
 22839  002B7C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22840  002B80  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22841  002B84  CFDE F072          	movff	postinc2,??__doprnt
 22842  002B88  CFDD F073          	movff	postdec2,??__doprnt+1
 22843  002B8C  C072  FFD9         	movff	??__doprnt,fsr2l
 22844  002B90  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22845  002B94  C080  FFDF         	movff	__doprnt@c,indf2
 22846  002B98  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22847  002B9C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22848  002BA0  2ADE               	incf	postinc2,f,c
 22849  002BA2  0E00               	movlw	0
 22850  002BA4  22DD               	addwfc	postdec2,f,c
 22851  002BA6                     l1591:
 22852  002BA6  0100               	movlb	0	; () banked
 22853  002BA8  0776               	decf	__doprnt@prec& (0+255),f,b
 22854  002BAA  2976               	incf	__doprnt@prec& (0+255),w,b
 22855  002BAC  A4D8               	btfss	status,2,c
 22856  002BAE  D7A5               	goto	l1589
 22857  002BB0                     u8250:
 22858                           
 22859                           ; BSR set to: 0
 22860                           
 22861                           ; BSR set to: 0
 22862  002BB0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22863  002BB4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22864  002BB8  0100               	movlb	0	; () banked
 22865  002BBA  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22866  002BBC  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22867  002BBE                     	if	0	;tblptru may be non-zero
 22868  002BBE                     	endif
 22869  002BBE                     	if	0	;tblptru may be non-zero
 22870  002BBE                     	endif
 22871  002BBE  0008               	tblrd		*
 22872  002BC0  CFF5 F080          	movff	tablat,__doprnt@c
 22873  002BC4  5180               	movf	__doprnt@c& (0+255),w,b
 22874  002BC6  A4D8               	btfss	status,2,c
 22875  002BC8  D527               	goto	l1540
 22876  002BCA                     u8260:
 22877                           
 22878                           ;doprnt.c: 1540: return 0;
 22879                           
 22880                           ; BSR set to: 0
 22881                           
 22882                           ;doprnt.c: 1525: }
 22883                           ;doprnt.c: 1533: }
 22884                           ;doprnt.c: 1535: alldone:
 22885                           
 22886                           ; BSR set to: 0
 22887  002BCA  0E00               	movlw	0
 22888  002BCC  0100               	movlb	0	; () banked
 22889  002BCE  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 22890  002BD0  0E00               	movlw	0
 22891  002BD2  6F6C               	movwf	?__doprnt& (0+255),b
 22892  002BD4  0012               	return	
 22893  002BD6                     __end_of__doprnt:
 22894                           	opt stack 0
 22895                           tosu	equ	0xFFF
 22896                           tosh	equ	0xFFE
 22897                           tosl	equ	0xFFD
 22898                           pclath	equ	0xFFA
 22899                           tblptru	equ	0xFF8
 22900                           tblptrh	equ	0xFF7
 22901                           tblptrl	equ	0xFF6
 22902                           tablat	equ	0xFF5
 22903                           prodh	equ	0xFF4
 22904                           prodl	equ	0xFF3
 22905                           intcon	equ	0xFF2
 22906                           intcon2	equ	0xFF1
 22907                           intcon3	equ	0xFF0
 22908                           indf0	equ	0xFEF
 22909                           postinc0	equ	0xFEE
 22910                           fsr0h	equ	0xFEA
 22911                           fsr0l	equ	0xFE9
 22912                           wreg	equ	0xFE8
 22913                           indf1	equ	0xFE7
 22914                           postdec1	equ	0xFE5
 22915                           fsr1h	equ	0xFE2
 22916                           fsr1l	equ	0xFE1
 22917                           indf2	equ	0xFDF
 22918                           postinc2	equ	0xFDE
 22919                           postdec2	equ	0xFDD
 22920                           fsr2h	equ	0xFDA
 22921                           fsr2l	equ	0xFD9
 22922                           status	equ	0xFD8
 22923                           
 22924 ;; *************** function _putch *****************
 22925 ;; Defined at:
 22926 ;;		line 35 in file "src/USART.h"
 22927 ;; Parameters:    Size  Location     Type
 22928 ;;  c               1    wreg     unsigned char 
 22929 ;; Auto vars:     Size  Location     Type
 22930 ;;  c               1    0[BANK0 ] unsigned char 
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  1    wreg      void 
 22933 ;; Registers used:
 22934 ;;		wreg
 22935 ;; Tracked objects:
 22936 ;;		On entry : 0/0
 22937 ;;		On exit  : 0/0
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22940 ;;      Params:         0       0       0       0       0       0       0       0       0
 22941 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22943 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22944 ;;Total ram usage:        1 bytes
 22945 ;; Hardware stack levels used:    1
 22946 ;; Hardware stack levels required when called:    6
 22947 ;; This function calls:
 22948 ;;		Nothing
 22949 ;; This function is called by:
 22950 ;;		_printf
 22951 ;;		__doprnt
 22952 ;; This function uses a non-reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text49
 22956  005EC8                     __ptext49:
 22957                           	opt stack 0
 22958  005EC8                     _putch:
 22959                           	opt stack 22
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;incstack = 0
 22963                           ;putch@c stored from wreg
 22964  005EC8  0100               	movlb	0	; () banked
 22965  005ECA  6F60               	movwf	putch@c& (0+255),b
 22966  005ECC                     
 22967                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 22968  005ECC  A2AC               	btfss	4012,1,c	;volatile
 22969  005ECE  D7FE               	goto	l6167
 22970                           
 22971                           ;USART.h: 38: TXREG = c;
 22972  005ED0  C060  FFAD         	movff	putch@c,4013	;volatile
 22973  005ED4  0012               	return		;funcret
 22974  005ED6                     __end_of_putch:
 22975                           	opt stack 0
 22976                           tosu	equ	0xFFF
 22977                           tosh	equ	0xFFE
 22978                           tosl	equ	0xFFD
 22979                           pclath	equ	0xFFA
 22980                           tblptru	equ	0xFF8
 22981                           tblptrh	equ	0xFF7
 22982                           tblptrl	equ	0xFF6
 22983                           tablat	equ	0xFF5
 22984                           prodh	equ	0xFF4
 22985                           prodl	equ	0xFF3
 22986                           intcon	equ	0xFF2
 22987                           intcon2	equ	0xFF1
 22988                           intcon3	equ	0xFF0
 22989                           indf0	equ	0xFEF
 22990                           postinc0	equ	0xFEE
 22991                           fsr0h	equ	0xFEA
 22992                           fsr0l	equ	0xFE9
 22993                           wreg	equ	0xFE8
 22994                           indf1	equ	0xFE7
 22995                           postdec1	equ	0xFE5
 22996                           fsr1h	equ	0xFE2
 22997                           fsr1l	equ	0xFE1
 22998                           indf2	equ	0xFDF
 22999                           postinc2	equ	0xFDE
 23000                           postdec2	equ	0xFDD
 23001                           fsr2h	equ	0xFDA
 23002                           fsr2l	equ	0xFD9
 23003                           status	equ	0xFD8
 23004                           
 23005 ;; *************** function _isdigit *****************
 23006 ;; Defined at:
 23007 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 23008 ;; Parameters:    Size  Location     Type
 23009 ;;  c               1    wreg     unsigned char 
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;  c               1    2[BANK0 ] unsigned char 
 23012 ;; Return value:  Size  Location     Type
 23013 ;;		None               void
 23014 ;; Registers used:
 23015 ;;		wreg, status,2, status,0
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23021 ;;      Params:         0       0       0       0       0       0       0       0       0
 23022 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23023 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23024 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23025 ;;Total ram usage:        3 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; Hardware stack levels required when called:    6
 23028 ;; This function calls:
 23029 ;;		Nothing
 23030 ;; This function is called by:
 23031 ;;		__doprnt
 23032 ;; This function uses a non-reentrant model
 23033 ;;
 23034                           
 23035                           	psect	text50
 23036  005E12                     __ptext50:
 23037                           	opt stack 0
 23038  005E12                     _isdigit:
 23039                           	opt stack 22
 23040                           
 23041                           ;incstack = 0
 23042                           ;isdigit@c stored from wreg
 23043  005E12  0100               	movlb	0	; () banked
 23044  005E14  6F62               	movwf	isdigit@c& (0+255),b
 23045  005E16  0E00               	movlw	0
 23046  005E18  0100               	movlb	0	; () banked
 23047  005E1A  6F61               	movwf	_isdigit$1991& (0+255),b
 23048                           
 23049                           ; BSR set to: 0
 23050  005E1C  0E3A               	movlw	58
 23051  005E1E  6162               	cpfslt	isdigit@c& (0+255),b
 23052  005E20  D005               	goto	l1924
 23053                           
 23054                           ; BSR set to: 0
 23055  005E22  0E2F               	movlw	47
 23056  005E24  6562               	cpfsgt	isdigit@c& (0+255),b
 23057  005E26  D002               	goto	l1924
 23058                           
 23059                           ; BSR set to: 0
 23060  005E28  0E01               	movlw	1
 23061  005E2A  6F61               	movwf	_isdigit$1991& (0+255),b
 23062  005E2C                     l1924:
 23063                           
 23064                           ; BSR set to: 0
 23065                           
 23066                           ; BSR set to: 0
 23067  005E2C  C061  F060         	movff	_isdigit$1991,??_isdigit
 23068  005E30  3160               	rrcf	??_isdigit& (0+255),w,b
 23069  005E32  0012               	return	
 23070  005E34                     __end_of_isdigit:
 23071                           	opt stack 0
 23072                           tosu	equ	0xFFF
 23073                           tosh	equ	0xFFE
 23074                           tosl	equ	0xFFD
 23075                           pclath	equ	0xFFA
 23076                           tblptru	equ	0xFF8
 23077                           tblptrh	equ	0xFF7
 23078                           tblptrl	equ	0xFF6
 23079                           tablat	equ	0xFF5
 23080                           prodh	equ	0xFF4
 23081                           prodl	equ	0xFF3
 23082                           intcon	equ	0xFF2
 23083                           intcon2	equ	0xFF1
 23084                           intcon3	equ	0xFF0
 23085                           indf0	equ	0xFEF
 23086                           postinc0	equ	0xFEE
 23087                           fsr0h	equ	0xFEA
 23088                           fsr0l	equ	0xFE9
 23089                           wreg	equ	0xFE8
 23090                           indf1	equ	0xFE7
 23091                           postdec1	equ	0xFE5
 23092                           fsr1h	equ	0xFE2
 23093                           fsr1l	equ	0xFE1
 23094                           indf2	equ	0xFDF
 23095                           postinc2	equ	0xFDE
 23096                           postdec2	equ	0xFDD
 23097                           fsr2h	equ	0xFDA
 23098                           fsr2l	equ	0xFD9
 23099                           status	equ	0xFD8
 23100                           
 23101 ;; *************** function ___wmul *****************
 23102 ;; Defined at:
 23103 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23106 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;  product         2    4[BANK0 ] unsigned int 
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  2    0[BANK0 ] unsigned int 
 23111 ;; Registers used:
 23112 ;;		wreg, status,2, status,0, prodl, prodh
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/0
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23118 ;;      Params:         0       4       0       0       0       0       0       0       0
 23119 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23121 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23122 ;;Total ram usage:        6 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:    6
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_enviaDadosWifi
 23129 ;;		_main
 23130 ;;		__doprnt
 23131 ;; This function uses a non-reentrant model
 23132 ;;
 23133                           
 23134                           	psect	text51
 23135  005D52                     __ptext51:
 23136                           	opt stack 0
 23137  005D52                     ___wmul:
 23138                           	opt stack 22
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;incstack = 0
 23142  005D52  0100               	movlb	0	; () banked
 23143  005D54  5160               	movf	___wmul@multiplier& (0+255),w,b
 23144  005D56  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23145  005D58  CFF3 F064          	movff	prodl,___wmul@product
 23146  005D5C  CFF4 F065          	movff	prodh,___wmul@product+1
 23147  005D60  5160               	movf	___wmul@multiplier& (0+255),w,b
 23148  005D62  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23149  005D64  50F3               	movf	prodl,w,c
 23150  005D66  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23151  005D68  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23152  005D6A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23153  005D6C  50F3               	movf	prodl,w,c
 23154  005D6E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23155                           
 23156                           ; BSR set to: 0
 23157  005D70  C064  F060         	movff	___wmul@product,?___wmul
 23158  005D74  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23159  005D78  0012               	return	
 23160  005D7A                     __end_of___wmul:
 23161                           	opt stack 0
 23162                           tosu	equ	0xFFF
 23163                           tosh	equ	0xFFE
 23164                           tosl	equ	0xFFD
 23165                           pclath	equ	0xFFA
 23166                           tblptru	equ	0xFF8
 23167                           tblptrh	equ	0xFF7
 23168                           tblptrl	equ	0xFF6
 23169                           tablat	equ	0xFF5
 23170                           prodh	equ	0xFF4
 23171                           prodl	equ	0xFF3
 23172                           intcon	equ	0xFF2
 23173                           intcon2	equ	0xFF1
 23174                           intcon3	equ	0xFF0
 23175                           indf0	equ	0xFEF
 23176                           postinc0	equ	0xFEE
 23177                           fsr0h	equ	0xFEA
 23178                           fsr0l	equ	0xFE9
 23179                           wreg	equ	0xFE8
 23180                           indf1	equ	0xFE7
 23181                           postdec1	equ	0xFE5
 23182                           fsr1h	equ	0xFE2
 23183                           fsr1l	equ	0xFE1
 23184                           indf2	equ	0xFDF
 23185                           postinc2	equ	0xFDE
 23186                           postdec2	equ	0xFDD
 23187                           fsr2h	equ	0xFDA
 23188                           fsr2l	equ	0xFD9
 23189                           status	equ	0xFD8
 23190                           
 23191 ;; *************** function ___lwmod *****************
 23192 ;; Defined at:
 23193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 23194 ;; Parameters:    Size  Location     Type
 23195 ;;  dividend        2    7[BANK0 ] unsigned int 
 23196 ;;  divisor         2    9[BANK0 ] unsigned int 
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;  counter         1   11[BANK0 ] unsigned char 
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  2    7[BANK0 ] unsigned int 
 23201 ;; Registers used:
 23202 ;;		wreg, status,2, status,0
 23203 ;; Tracked objects:
 23204 ;;		On entry : 0/0
 23205 ;;		On exit  : 0/0
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23208 ;;      Params:         0       4       0       0       0       0       0       0       0
 23209 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23211 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23212 ;;Total ram usage:        5 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:    6
 23215 ;; This function calls:
 23216 ;;		Nothing
 23217 ;; This function is called by:
 23218 ;;		__doprnt
 23219 ;; This function uses a non-reentrant model
 23220 ;;
 23221                           
 23222                           	psect	text52
 23223  005A64                     __ptext52:
 23224                           	opt stack 0
 23225  005A64                     ___lwmod:
 23226                           	opt stack 22
 23227                           
 23228                           ; BSR set to: 0
 23229                           ;incstack = 0
 23230  005A64  0100               	movlb	0	; () banked
 23231  005A66  5169               	movf	___lwmod@divisor& (0+255),w,b
 23232  005A68  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 23233  005A6A  B4D8               	btfsc	status,2,c
 23234  005A6C  D018               	goto	l2018
 23235                           
 23236                           ; BSR set to: 0
 23237  005A6E  0E01               	movlw	1
 23238  005A70  6F6B               	movwf	___lwmod@counter& (0+255),b
 23239  005A72  D004               	goto	l2013
 23240  005A74                     
 23241                           ; BSR set to: 0
 23242                           
 23243                           ; BSR set to: 0
 23244  005A74  90D8               	bcf	status,0,c
 23245  005A76  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 23246  005A78  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 23247  005A7A  2B6B               	incf	___lwmod@counter& (0+255),f,b
 23248  005A7C                     l2013:
 23249                           
 23250                           ; BSR set to: 0
 23251                           
 23252                           ; BSR set to: 0
 23253  005A7C  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 23254  005A7E  D7FA               	goto	l2014
 23255  005A80                     u7800:
 23256                           
 23257                           ; BSR set to: 0
 23258                           
 23259                           ; BSR set to: 0
 23260                           
 23261                           ; BSR set to: 0
 23262  005A80  5169               	movf	___lwmod@divisor& (0+255),w,b
 23263  005A82  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 23264  005A84  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23265  005A86  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 23266  005A88  A0D8               	btfss	status,0,c
 23267  005A8A  D004               	goto	l2017
 23268                           
 23269                           ; BSR set to: 0
 23270  005A8C  5169               	movf	___lwmod@divisor& (0+255),w,b
 23271  005A8E  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 23272  005A90  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23273  005A92  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 23274  005A94                     l2017:
 23275                           
 23276                           ; BSR set to: 0
 23277                           
 23278                           ; BSR set to: 0
 23279  005A94  90D8               	bcf	status,0,c
 23280  005A96  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 23281  005A98  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 23282                           
 23283                           ; BSR set to: 0
 23284  005A9A  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 23285  005A9C  D7F1               	goto	u7800
 23286  005A9E                     l2018:
 23287                           
 23288                           ; BSR set to: 0
 23289                           
 23290                           ; BSR set to: 0
 23291  005A9E  C067  F067         	movff	___lwmod@dividend,?___lwmod
 23292  005AA2  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 23293                           
 23294                           ; BSR set to: 0
 23295  005AA6  0012               	return		;funcret
 23296  005AA8                     __end_of___lwmod:
 23297                           	opt stack 0
 23298                           tosu	equ	0xFFF
 23299                           tosh	equ	0xFFE
 23300                           tosl	equ	0xFFD
 23301                           pclath	equ	0xFFA
 23302                           tblptru	equ	0xFF8
 23303                           tblptrh	equ	0xFF7
 23304                           tblptrl	equ	0xFF6
 23305                           tablat	equ	0xFF5
 23306                           prodh	equ	0xFF4
 23307                           prodl	equ	0xFF3
 23308                           intcon	equ	0xFF2
 23309                           intcon2	equ	0xFF1
 23310                           intcon3	equ	0xFF0
 23311                           indf0	equ	0xFEF
 23312                           postinc0	equ	0xFEE
 23313                           fsr0h	equ	0xFEA
 23314                           fsr0l	equ	0xFE9
 23315                           wreg	equ	0xFE8
 23316                           indf1	equ	0xFE7
 23317                           postdec1	equ	0xFE5
 23318                           fsr1h	equ	0xFE2
 23319                           fsr1l	equ	0xFE1
 23320                           indf2	equ	0xFDF
 23321                           postinc2	equ	0xFDE
 23322                           postdec2	equ	0xFDD
 23323                           fsr2h	equ	0xFDA
 23324                           fsr2l	equ	0xFD9
 23325                           status	equ	0xFD8
 23326                           
 23327 ;; *************** function ___lwdiv *****************
 23328 ;; Defined at:
 23329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 23330 ;; Parameters:    Size  Location     Type
 23331 ;;  dividend        2    0[BANK0 ] unsigned int 
 23332 ;;  divisor         2    2[BANK0 ] unsigned int 
 23333 ;; Auto vars:     Size  Location     Type
 23334 ;;  quotient        2    4[BANK0 ] unsigned int 
 23335 ;;  counter         1    6[BANK0 ] unsigned char 
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  2    0[BANK0 ] unsigned int 
 23338 ;; Registers used:
 23339 ;;		wreg, status,2, status,0
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23345 ;;      Params:         0       4       0       0       0       0       0       0       0
 23346 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23348 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23349 ;;Total ram usage:        7 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:    6
 23352 ;; This function calls:
 23353 ;;		Nothing
 23354 ;; This function is called by:
 23355 ;;		__doprnt
 23356 ;; This function uses a non-reentrant model
 23357 ;;
 23358                           
 23359                           	psect	text53
 23360  005932                     __ptext53:
 23361                           	opt stack 0
 23362  005932                     ___lwdiv:
 23363                           	opt stack 22
 23364                           
 23365                           ; BSR set to: 0
 23366                           ;incstack = 0
 23367  005932  0E00               	movlw	0
 23368  005934  0100               	movlb	0	; () banked
 23369  005936  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 23370  005938  0E00               	movlw	0
 23371  00593A  6F64               	movwf	___lwdiv@quotient& (0+255),b
 23372                           
 23373                           ; BSR set to: 0
 23374  00593C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23375  00593E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 23376  005940  B4D8               	btfsc	status,2,c
 23377  005942  D01C               	goto	l2008
 23378                           
 23379                           ; BSR set to: 0
 23380  005944  0E01               	movlw	1
 23381  005946  6F66               	movwf	___lwdiv@counter& (0+255),b
 23382  005948  D004               	goto	l2003
 23383  00594A                     
 23384                           ; BSR set to: 0
 23385                           
 23386                           ; BSR set to: 0
 23387  00594A  90D8               	bcf	status,0,c
 23388  00594C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 23389  00594E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 23390  005950  2B66               	incf	___lwdiv@counter& (0+255),f,b
 23391  005952                     l2003:
 23392                           
 23393                           ; BSR set to: 0
 23394                           
 23395                           ; BSR set to: 0
 23396  005952  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 23397  005954  D7FA               	goto	l2004
 23398  005956                     u7770:
 23399                           
 23400                           ; BSR set to: 0
 23401                           
 23402                           ; BSR set to: 0
 23403                           
 23404                           ; BSR set to: 0
 23405  005956  90D8               	bcf	status,0,c
 23406  005958  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 23407  00595A  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 23408                           
 23409                           ; BSR set to: 0
 23410  00595C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23411  00595E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 23412  005960  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23413  005962  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 23414  005964  A0D8               	btfss	status,0,c
 23415  005966  D005               	goto	l2007
 23416                           
 23417                           ; BSR set to: 0
 23418  005968  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23419  00596A  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 23420  00596C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23421  00596E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 23422                           
 23423                           ; BSR set to: 0
 23424  005970  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 23425  005972                     l2007:
 23426                           
 23427                           ; BSR set to: 0
 23428                           
 23429                           ; BSR set to: 0
 23430  005972  90D8               	bcf	status,0,c
 23431  005974  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 23432  005976  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 23433                           
 23434                           ; BSR set to: 0
 23435  005978  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 23436  00597A  D7ED               	goto	u7770
 23437  00597C                     l2008:
 23438                           
 23439                           ; BSR set to: 0
 23440                           
 23441                           ; BSR set to: 0
 23442  00597C  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 23443  005980  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23444                           
 23445                           ; BSR set to: 0
 23446  005984  0012               	return		;funcret
 23447  005986                     __end_of___lwdiv:
 23448                           	opt stack 0
 23449                           tosu	equ	0xFFF
 23450                           tosh	equ	0xFFE
 23451                           tosl	equ	0xFFD
 23452                           pclath	equ	0xFFA
 23453                           tblptru	equ	0xFF8
 23454                           tblptrh	equ	0xFF7
 23455                           tblptrl	equ	0xFF6
 23456                           tablat	equ	0xFF5
 23457                           prodh	equ	0xFF4
 23458                           prodl	equ	0xFF3
 23459                           intcon	equ	0xFF2
 23460                           intcon2	equ	0xFF1
 23461                           intcon3	equ	0xFF0
 23462                           indf0	equ	0xFEF
 23463                           postinc0	equ	0xFEE
 23464                           fsr0h	equ	0xFEA
 23465                           fsr0l	equ	0xFE9
 23466                           wreg	equ	0xFE8
 23467                           indf1	equ	0xFE7
 23468                           postdec1	equ	0xFE5
 23469                           fsr1h	equ	0xFE2
 23470                           fsr1l	equ	0xFE1
 23471                           indf2	equ	0xFDF
 23472                           postinc2	equ	0xFDE
 23473                           postdec2	equ	0xFDD
 23474                           fsr2h	equ	0xFDA
 23475                           fsr2l	equ	0xFD9
 23476                           status	equ	0xFD8
 23477                           
 23478 ;; *************** function _atualizaLCD *****************
 23479 ;; Defined at:
 23480 ;;		line 159 in file "src/lcd.h"
 23481 ;; Parameters:    Size  Location     Type
 23482 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 23483 ;;		 -> line1(21), 
 23484 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 23485 ;;		 -> line2(21), 
 23486 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 23487 ;;		 -> line3(21), 
 23488 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 23489 ;;		 -> line4(21), 
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;  i               1   16[BANK0 ] unsigned char 
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1    wreg      void 
 23494 ;; Registers used:
 23495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23496 ;; Tracked objects:
 23497 ;;		On entry : 0/0
 23498 ;;		On exit  : 0/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23501 ;;      Params:         0       8       0       0       0       0       0       0       0
 23502 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23504 ;;      Totals:         0       9       0       0       0       0       0       0       0
 23505 ;;Total ram usage:        9 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; Hardware stack levels required when called:    9
 23508 ;; This function calls:
 23509 ;;		_Lcd_Set_Cursor
 23510 ;;		_Lcd_Write_String
 23511 ;; This function is called by:
 23512 ;;		_alterarConfigWifi
 23513 ;;		_main
 23514 ;; This function uses a non-reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text54
 23518  004E28                     __ptext54:
 23519                           	opt stack 0
 23520  004E28                     _atualizaLCD:
 23521                           	opt stack 21
 23522                           
 23523                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 23524                           
 23525                           ; BSR set to: 0
 23526                           ;incstack = 0
 23527  004E28  0E01               	movlw	1
 23528  004E2A  0100               	movlb	0	; () banked
 23529  004E2C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23530  004E2E  0E01               	movlw	1
 23531  004E30  EC77  F027         	call	_Lcd_Set_Cursor
 23532                           
 23533                           ;lcd.h: 163: Lcd_Write_String(line1);
 23534  004E34  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 23535  004E38  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 23536  004E3C  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23537                           
 23538                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 23539  004E40  0E01               	movlw	1
 23540  004E42  0100               	movlb	0	; () banked
 23541  004E44  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23542  004E46  0E02               	movlw	2
 23543  004E48  EC77  F027         	call	_Lcd_Set_Cursor
 23544                           
 23545                           ;lcd.h: 165: Lcd_Write_String(line2);
 23546  004E4C  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 23547  004E50  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 23548  004E54  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23549                           
 23550                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 23551  004E58  0E00               	movlw	0
 23552  004E5A  0100               	movlb	0	; () banked
 23553  004E5C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23554  004E5E  0E03               	movlw	3
 23555  004E60  EC77  F027         	call	_Lcd_Set_Cursor
 23556                           
 23557                           ;lcd.h: 167: Lcd_Write_String(line3);
 23558  004E64  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 23559  004E68  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 23560  004E6C  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23561                           
 23562                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 23563  004E70  0E00               	movlw	0
 23564  004E72  0100               	movlb	0	; () banked
 23565  004E74  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23566  004E76  0E04               	movlw	4
 23567  004E78  EC77  F027         	call	_Lcd_Set_Cursor
 23568                           
 23569                           ;lcd.h: 169: Lcd_Write_String(line4);
 23570  004E7C  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 23571  004E80  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 23572  004E84  EC66  F02E         	call	_Lcd_Write_String	;wreg free
 23573                           
 23574                           ;lcd.h: 171: char i = 0;
 23575  004E88  0E00               	movlw	0
 23576  004E8A  0100               	movlb	0	; () banked
 23577  004E8C  6F70               	movwf	atualizaLCD@i& (0+255),b
 23578                           
 23579                           ; BSR set to: 0
 23580                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 23581  004E8E  0E00               	movlw	0
 23582  004E90  6F70               	movwf	atualizaLCD@i& (0+255),b
 23583  004E92                     l6697:
 23584                           
 23585                           ; BSR set to: 0
 23586  004E92  0E13               	movlw	19
 23587  004E94  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 23588  004E96  D001               	goto	l260
 23589  004E98  0012               	return	
 23590  004E9A                     l260:
 23591                           
 23592                           ; BSR set to: 0
 23593                           ;lcd.h: 173: line1[i] = ' ';
 23594                           
 23595                           ; BSR set to: 0
 23596  004E9A  5170               	movf	atualizaLCD@i& (0+255),w,b
 23597  004E9C  0D01               	mullw	1
 23598  004E9E  50F3               	movf	prodl,w,c
 23599  004EA0  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 23600  004EA2  6ED9               	movwf	fsr2l,c
 23601  004EA4  50F4               	movf	prodh,w,c
 23602  004EA6  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 23603  004EA8  6EDA               	movwf	fsr2h,c
 23604  004EAA  0E20               	movlw	32
 23605  004EAC  6EDF               	movwf	indf2,c
 23606                           
 23607                           ;lcd.h: 174: line2[i] = ' ';
 23608  004EAE  5170               	movf	atualizaLCD@i& (0+255),w,b
 23609  004EB0  0D01               	mullw	1
 23610  004EB2  50F3               	movf	prodl,w,c
 23611  004EB4  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 23612  004EB6  6ED9               	movwf	fsr2l,c
 23613  004EB8  50F4               	movf	prodh,w,c
 23614  004EBA  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 23615  004EBC  6EDA               	movwf	fsr2h,c
 23616  004EBE  0E20               	movlw	32
 23617  004EC0  6EDF               	movwf	indf2,c
 23618                           
 23619                           ;lcd.h: 175: line3[i] = ' ';
 23620  004EC2  5170               	movf	atualizaLCD@i& (0+255),w,b
 23621  004EC4  0D01               	mullw	1
 23622  004EC6  50F3               	movf	prodl,w,c
 23623  004EC8  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 23624  004ECA  6ED9               	movwf	fsr2l,c
 23625  004ECC  50F4               	movf	prodh,w,c
 23626  004ECE  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 23627  004ED0  6EDA               	movwf	fsr2h,c
 23628  004ED2  0E20               	movlw	32
 23629  004ED4  6EDF               	movwf	indf2,c
 23630                           
 23631                           ;lcd.h: 176: line4[i] = ' ';
 23632  004ED6  5170               	movf	atualizaLCD@i& (0+255),w,b
 23633  004ED8  0D01               	mullw	1
 23634  004EDA  50F3               	movf	prodl,w,c
 23635  004EDC  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 23636  004EDE  6ED9               	movwf	fsr2l,c
 23637  004EE0  50F4               	movf	prodh,w,c
 23638  004EE2  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 23639  004EE4  6EDA               	movwf	fsr2h,c
 23640  004EE6  0E20               	movlw	32
 23641  004EE8  6EDF               	movwf	indf2,c
 23642                           
 23643                           ; BSR set to: 0
 23644  004EEA  2B70               	incf	atualizaLCD@i& (0+255),f,b
 23645  004EEC  D7D2               	goto	l6697
 23646  004EEE                     __end_of_atualizaLCD:
 23647                           	opt stack 0
 23648                           tosu	equ	0xFFF
 23649                           tosh	equ	0xFFE
 23650                           tosl	equ	0xFFD
 23651                           pclath	equ	0xFFA
 23652                           tblptru	equ	0xFF8
 23653                           tblptrh	equ	0xFF7
 23654                           tblptrl	equ	0xFF6
 23655                           tablat	equ	0xFF5
 23656                           prodh	equ	0xFF4
 23657                           prodl	equ	0xFF3
 23658                           intcon	equ	0xFF2
 23659                           intcon2	equ	0xFF1
 23660                           intcon3	equ	0xFF0
 23661                           indf0	equ	0xFEF
 23662                           postinc0	equ	0xFEE
 23663                           fsr0h	equ	0xFEA
 23664                           fsr0l	equ	0xFE9
 23665                           wreg	equ	0xFE8
 23666                           indf1	equ	0xFE7
 23667                           postdec1	equ	0xFE5
 23668                           fsr1h	equ	0xFE2
 23669                           fsr1l	equ	0xFE1
 23670                           indf2	equ	0xFDF
 23671                           postinc2	equ	0xFDE
 23672                           postdec2	equ	0xFDD
 23673                           fsr2h	equ	0xFDA
 23674                           fsr2l	equ	0xFD9
 23675                           status	equ	0xFD8
 23676                           
 23677 ;; *************** function _Lcd_Write_String *****************
 23678 ;; Defined at:
 23679 ;;		line 137 in file "src/lcd.h"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;  a               2    4[BANK0 ] PTR unsigned char 
 23682 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 23683 ;; Auto vars:     Size  Location     Type
 23684 ;;  i               1    6[BANK0 ] unsigned char 
 23685 ;; Return value:  Size  Location     Type
 23686 ;;                  1    wreg      void 
 23687 ;; Registers used:
 23688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23689 ;; Tracked objects:
 23690 ;;		On entry : 0/0
 23691 ;;		On exit  : 0/0
 23692 ;;		Unchanged: 0/0
 23693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23694 ;;      Params:         0       2       0       0       0       0       0       0       0
 23695 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23697 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23698 ;;Total ram usage:        3 bytes
 23699 ;; Hardware stack levels used:    1
 23700 ;; Hardware stack levels required when called:    8
 23701 ;; This function calls:
 23702 ;;		_Lcd_Write_Char
 23703 ;; This function is called by:
 23704 ;;		_atualizaLCD
 23705 ;; This function uses a non-reentrant model
 23706 ;;
 23707                           
 23708                           	psect	text55
 23709  005CCC                     __ptext55:
 23710                           	opt stack 0
 23711  005CCC                     _Lcd_Write_String:
 23712                           	opt stack 21
 23713                           
 23714                           ;lcd.h: 138: unsigned char i = 0;
 23715                           
 23716                           ; BSR set to: 0
 23717                           ;incstack = 0
 23718  005CCC  0E00               	movlw	0
 23719  005CCE  0100               	movlb	0	; () banked
 23720  005CD0  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23721                           
 23722                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 23723  005CD2  0E00               	movlw	0
 23724  005CD4  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23725  005CD6                     l6543:
 23726                           
 23727                           ; BSR set to: 0
 23728  005CD6  0E13               	movlw	19
 23729  005CD8  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 23730  005CDA  D001               	goto	l255
 23731  005CDC  0012               	return	
 23732  005CDE                     l255:
 23733                           
 23734                           ; BSR set to: 0
 23735                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 23736                           
 23737                           ; BSR set to: 0
 23738  005CDE  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 23739  005CE0  0D01               	mullw	1
 23740  005CE2  50F3               	movf	prodl,w,c
 23741  005CE4  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 23742  005CE6  6ED9               	movwf	fsr2l,c
 23743  005CE8  50F4               	movf	prodh,w,c
 23744  005CEA  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 23745  005CEC  6EDA               	movwf	fsr2h,c
 23746  005CEE  50DF               	movf	indf2,w,c
 23747  005CF0  EC95  F02D         	call	_Lcd_Write_Char
 23748  005CF4  0100               	movlb	0	; () banked
 23749  005CF6  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 23750  005CF8  D7EE               	goto	l6543
 23751  005CFA                     __end_of_Lcd_Write_String:
 23752                           	opt stack 0
 23753                           tosu	equ	0xFFF
 23754                           tosh	equ	0xFFE
 23755                           tosl	equ	0xFFD
 23756                           pclath	equ	0xFFA
 23757                           tblptru	equ	0xFF8
 23758                           tblptrh	equ	0xFF7
 23759                           tblptrl	equ	0xFF6
 23760                           tablat	equ	0xFF5
 23761                           prodh	equ	0xFF4
 23762                           prodl	equ	0xFF3
 23763                           intcon	equ	0xFF2
 23764                           intcon2	equ	0xFF1
 23765                           intcon3	equ	0xFF0
 23766                           indf0	equ	0xFEF
 23767                           postinc0	equ	0xFEE
 23768                           fsr0h	equ	0xFEA
 23769                           fsr0l	equ	0xFE9
 23770                           wreg	equ	0xFE8
 23771                           indf1	equ	0xFE7
 23772                           postdec1	equ	0xFE5
 23773                           fsr1h	equ	0xFE2
 23774                           fsr1l	equ	0xFE1
 23775                           indf2	equ	0xFDF
 23776                           postinc2	equ	0xFDE
 23777                           postdec2	equ	0xFDD
 23778                           fsr2h	equ	0xFDA
 23779                           fsr2l	equ	0xFD9
 23780                           status	equ	0xFD8
 23781                           
 23782 ;; *************** function _Lcd_Write_Char *****************
 23783 ;; Defined at:
 23784 ;;		line 122 in file "src/lcd.h"
 23785 ;; Parameters:    Size  Location     Type
 23786 ;;  a               1    wreg     unsigned char 
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;  a               1    3[BANK0 ] unsigned char 
 23789 ;;  y               1    2[BANK0 ] unsigned char 
 23790 ;;  tempp           1    1[BANK0 ] unsigned char 
 23791 ;; Return value:  Size  Location     Type
 23792 ;;                  1    wreg      void 
 23793 ;; Registers used:
 23794 ;;		wreg, status,2, status,0, cstack
 23795 ;; Tracked objects:
 23796 ;;		On entry : 0/0
 23797 ;;		On exit  : 0/0
 23798 ;;		Unchanged: 0/0
 23799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23800 ;;      Params:         0       0       0       0       0       0       0       0       0
 23801 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23803 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23804 ;;Total ram usage:        3 bytes
 23805 ;; Hardware stack levels used:    1
 23806 ;; Hardware stack levels required when called:    7
 23807 ;; This function calls:
 23808 ;;		_Lcd_Port
 23809 ;; This function is called by:
 23810 ;;		_Lcd_Write_String
 23811 ;;		_criaCaracteresCGRAM
 23812 ;; This function uses a non-reentrant model
 23813 ;;
 23814                           
 23815                           	psect	text56
 23816  005B2A                     __ptext56:
 23817                           	opt stack 0
 23818  005B2A                     _Lcd_Write_Char:
 23819                           	opt stack 22
 23820                           
 23821                           ; BSR set to: 0
 23822                           ;incstack = 0
 23823                           ;Lcd_Write_Char@a stored from wreg
 23824  005B2A  0100               	movlb	0	; () banked
 23825  005B2C  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 23826                           
 23827                           ;lcd.h: 123: char tempp, y;
 23828                           ;lcd.h: 124: tempp = a & 0x0F;
 23829  005B2E  0100               	movlb	0	; () banked
 23830  005B30  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23831  005B32  0B0F               	andlw	15
 23832  005B34  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 23833                           
 23834                           ;lcd.h: 125: y = a & 0xF0;
 23835  005B36  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23836  005B38  0BF0               	andlw	240
 23837  005B3A  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 23838                           
 23839                           ; BSR set to: 0
 23840                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 23841  005B3C  8483               	bsf	3971,2,c	;volatile
 23842                           
 23843                           ; BSR set to: 0
 23844                           ;lcd.h: 127: Lcd_Port(y >> 4);
 23845  005B3E  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 23846  005B40  0B0F               	andlw	15
 23847  005B42  EC4E  F02E         	call	_Lcd_Port
 23848                           
 23849                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 23850  005B46  8683               	bsf	3971,3,c	;volatile
 23851                           
 23852                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23853  005B48  0E1A               	movlw	26
 23854  005B4A                     u15407:
 23855  005B4A  2EE8               	decfsz	wreg,f,c
 23856  005B4C  D7FE               	bra	u15407
 23857  005B4E  D000               	nop2	
 23858                           
 23859                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 23860  005B50  9683               	bcf	3971,3,c	;volatile
 23861                           
 23862                           ;lcd.h: 131: Lcd_Port(tempp);
 23863  005B52  0100               	movlb	0	; () banked
 23864  005B54  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 23865  005B56  EC4E  F02E         	call	_Lcd_Port
 23866                           
 23867                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 23868  005B5A  8683               	bsf	3971,3,c	;volatile
 23869                           
 23870                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23871  005B5C  0E1A               	movlw	26
 23872  005B5E                     u15417:
 23873  005B5E  2EE8               	decfsz	wreg,f,c
 23874  005B60  D7FE               	bra	u15417
 23875  005B62  D000               	nop2	
 23876                           
 23877                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 23878  005B64  9683               	bcf	3971,3,c	;volatile
 23879  005B66  0012               	return		;funcret
 23880  005B68                     __end_of_Lcd_Write_Char:
 23881                           	opt stack 0
 23882                           tosu	equ	0xFFF
 23883                           tosh	equ	0xFFE
 23884                           tosl	equ	0xFFD
 23885                           pclath	equ	0xFFA
 23886                           tblptru	equ	0xFF8
 23887                           tblptrh	equ	0xFF7
 23888                           tblptrl	equ	0xFF6
 23889                           tablat	equ	0xFF5
 23890                           prodh	equ	0xFF4
 23891                           prodl	equ	0xFF3
 23892                           intcon	equ	0xFF2
 23893                           intcon2	equ	0xFF1
 23894                           intcon3	equ	0xFF0
 23895                           indf0	equ	0xFEF
 23896                           postinc0	equ	0xFEE
 23897                           fsr0h	equ	0xFEA
 23898                           fsr0l	equ	0xFE9
 23899                           wreg	equ	0xFE8
 23900                           indf1	equ	0xFE7
 23901                           postdec1	equ	0xFE5
 23902                           fsr1h	equ	0xFE2
 23903                           fsr1l	equ	0xFE1
 23904                           indf2	equ	0xFDF
 23905                           postinc2	equ	0xFDE
 23906                           postdec2	equ	0xFDD
 23907                           fsr2h	equ	0xFDA
 23908                           fsr2l	equ	0xFD9
 23909                           status	equ	0xFD8
 23910                           
 23911 ;; *************** function _Lcd_Set_Cursor *****************
 23912 ;; Defined at:
 23913 ;;		line 87 in file "src/lcd.h"
 23914 ;; Parameters:    Size  Location     Type
 23915 ;;  a               1    wreg     unsigned char 
 23916 ;;  b               1    3[BANK0 ] unsigned char 
 23917 ;; Auto vars:     Size  Location     Type
 23918 ;;  a               1    4[BANK0 ] unsigned char 
 23919 ;;  temp            1    7[BANK0 ] unsigned char 
 23920 ;;  y               1    6[BANK0 ] unsigned char 
 23921 ;;  z               1    5[BANK0 ] unsigned char 
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  1    wreg      void 
 23924 ;; Registers used:
 23925 ;;		wreg, status,2, status,0, cstack
 23926 ;; Tracked objects:
 23927 ;;		On entry : 0/0
 23928 ;;		On exit  : 0/0
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23931 ;;      Params:         0       1       0       0       0       0       0       0       0
 23932 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23934 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23935 ;;Total ram usage:        5 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; Hardware stack levels required when called:    8
 23938 ;; This function calls:
 23939 ;;		_Lcd_Cmd
 23940 ;; This function is called by:
 23941 ;;		_atualizaLCD
 23942 ;; This function uses a non-reentrant model
 23943 ;;
 23944                           
 23945                           	psect	text57
 23946  004EEE                     __ptext57:
 23947                           	opt stack 0
 23948  004EEE                     _Lcd_Set_Cursor:
 23949                           	opt stack 21
 23950                           
 23951                           ;incstack = 0
 23952                           ;Lcd_Set_Cursor@a stored from wreg
 23953  004EEE  0100               	movlb	0	; () banked
 23954  004EF0  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 23955                           
 23956                           ;lcd.h: 88: char temp, z, y;
 23957                           ;lcd.h: 89: switch (a) {
 23958  004EF2  D048               	goto	l242
 23959  004EF4                     
 23960                           ;lcd.h: 91: temp = 0x80 + b - 1;
 23961  004EF4  0100               	movlb	0	; () banked
 23962  004EF6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23963  004EF8  0F7F               	addlw	127
 23964  004EFA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23965                           
 23966                           ;lcd.h: 92: z = temp >> 4;
 23967  004EFC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23968  004EFE  0B0F               	andlw	15
 23969  004F00  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23970                           
 23971                           ;lcd.h: 93: y = temp & 0x0F;
 23972  004F02  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23973  004F04  0B0F               	andlw	15
 23974  004F06  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23975                           
 23976                           ; BSR set to: 0
 23977                           ;lcd.h: 94: Lcd_Cmd(z);
 23978  004F08  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23979  004F0A  ECE4  F02E         	call	_Lcd_Cmd
 23980                           
 23981                           ;lcd.h: 95: Lcd_Cmd(y);
 23982  004F0E  0100               	movlb	0	; () banked
 23983  004F10  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23984  004F12  ECE4  F02E         	call	_Lcd_Cmd
 23985                           
 23986                           ;lcd.h: 96: break;
 23987  004F16  0012               	return	
 23988  004F18                     
 23989                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 23990  004F18  0100               	movlb	0	; () banked
 23991  004F1A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23992  004F1C  0FBF               	addlw	191
 23993  004F1E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23994                           
 23995                           ;lcd.h: 99: z = temp >> 4;
 23996  004F20  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23997  004F22  0B0F               	andlw	15
 23998  004F24  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23999                           
 24000                           ;lcd.h: 100: y = temp & 0x0F;
 24001  004F26  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 24002  004F28  0B0F               	andlw	15
 24003  004F2A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 24004                           
 24005                           ; BSR set to: 0
 24006                           ;lcd.h: 101: Lcd_Cmd(z);
 24007  004F2C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 24008  004F2E  ECE4  F02E         	call	_Lcd_Cmd
 24009                           
 24010                           ;lcd.h: 102: Lcd_Cmd(y);
 24011  004F32  0100               	movlb	0	; () banked
 24012  004F34  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 24013  004F36  ECE4  F02E         	call	_Lcd_Cmd
 24014                           
 24015                           ;lcd.h: 103: break;
 24016  004F3A  0012               	return	
 24017  004F3C                     
 24018                           ;lcd.h: 105: temp = 0x94 + b;
 24019  004F3C  0100               	movlb	0	; () banked
 24020  004F3E  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 24021  004F40  0F94               	addlw	148
 24022  004F42  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 24023                           
 24024                           ;lcd.h: 106: z = temp >> 4;
 24025  004F44  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 24026  004F46  0B0F               	andlw	15
 24027  004F48  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 24028                           
 24029                           ;lcd.h: 107: y = temp & 0x0F;
 24030  004F4A  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 24031  004F4C  0B0F               	andlw	15
 24032  004F4E  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;lcd.h: 108: Lcd_Cmd(z);
 24036  004F50  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 24037  004F52  ECE4  F02E         	call	_Lcd_Cmd
 24038                           
 24039                           ;lcd.h: 109: Lcd_Cmd(y);
 24040  004F56  0100               	movlb	0	; () banked
 24041  004F58  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 24042  004F5A  ECE4  F02E         	call	_Lcd_Cmd
 24043                           
 24044                           ;lcd.h: 110: break;
 24045  004F5E  0012               	return	
 24046  004F60                     
 24047                           ;lcd.h: 112: temp = 0xD4 + b;
 24048  004F60  0100               	movlb	0	; () banked
 24049  004F62  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 24050  004F64  0FD4               	addlw	212
 24051  004F66  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 24052                           
 24053                           ;lcd.h: 113: z = temp >> 4;
 24054  004F68  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 24055  004F6A  0B0F               	andlw	15
 24056  004F6C  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 24057                           
 24058                           ;lcd.h: 114: y = temp & 0x0F;
 24059  004F6E  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 24060  004F70  0B0F               	andlw	15
 24061  004F72  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 24062                           
 24063                           ; BSR set to: 0
 24064                           ;lcd.h: 115: Lcd_Cmd(z);
 24065  004F74  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 24066  004F76  ECE4  F02E         	call	_Lcd_Cmd
 24067                           
 24068                           ;lcd.h: 116: Lcd_Cmd(y);
 24069  004F7A  0100               	movlb	0	; () banked
 24070  004F7C  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 24071  004F7E  ECE4  F02E         	call	_Lcd_Cmd
 24072                           
 24073                           ;lcd.h: 119: }
 24074                           
 24075                           ;lcd.h: 118: default:return;
 24076                           
 24077                           ;lcd.h: 117: break;
 24078  004F82  0012               	return	
 24079  004F84                     l242:
 24080  004F84  0100               	movlb	0	; () banked
 24081  004F86  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 24082                           
 24083                           ; Switch size 1, requested type "space"
 24084                           ; Number of cases is 4, Range of values is 1 to 4
 24085                           ; switch strategies available:
 24086                           ; Name         Instructions Cycles
 24087                           ; simple_byte           13     7 (average)
 24088                           ;	Chosen strategy is simple_byte
 24089  004F88  0A01               	xorlw	1	; case 1
 24090  004F8A  B4D8               	btfsc	status,2,c
 24091  004F8C  D7B3               	goto	l243
 24092  004F8E  0A03               	xorlw	3	; case 2
 24093  004F90  B4D8               	btfsc	status,2,c
 24094  004F92  D7C2               	goto	l245
 24095  004F94  0A01               	xorlw	1	; case 3
 24096  004F96  B4D8               	btfsc	status,2,c
 24097  004F98  D7D1               	goto	l246
 24098  004F9A  0A07               	xorlw	7	; case 4
 24099  004F9C  A4D8               	btfss	status,2,c
 24100  004F9E  0012               	return	
 24101  004FA0  D7DF               	goto	l247
 24102  004FA2                     __end_of_Lcd_Set_Cursor:
 24103                           	opt stack 0
 24104                           tosu	equ	0xFFF
 24105                           tosh	equ	0xFFE
 24106                           tosl	equ	0xFFD
 24107                           pclath	equ	0xFFA
 24108                           tblptru	equ	0xFF8
 24109                           tblptrh	equ	0xFF7
 24110                           tblptrl	equ	0xFF6
 24111                           tablat	equ	0xFF5
 24112                           prodh	equ	0xFF4
 24113                           prodl	equ	0xFF3
 24114                           intcon	equ	0xFF2
 24115                           intcon2	equ	0xFF1
 24116                           intcon3	equ	0xFF0
 24117                           indf0	equ	0xFEF
 24118                           postinc0	equ	0xFEE
 24119                           fsr0h	equ	0xFEA
 24120                           fsr0l	equ	0xFE9
 24121                           wreg	equ	0xFE8
 24122                           indf1	equ	0xFE7
 24123                           postdec1	equ	0xFE5
 24124                           fsr1h	equ	0xFE2
 24125                           fsr1l	equ	0xFE1
 24126                           indf2	equ	0xFDF
 24127                           postinc2	equ	0xFDE
 24128                           postdec2	equ	0xFDD
 24129                           fsr2h	equ	0xFDA
 24130                           fsr2l	equ	0xFD9
 24131                           status	equ	0xFD8
 24132                           
 24133 ;; *************** function _UART_Init *****************
 24134 ;; Defined at:
 24135 ;;		line 9 in file "src/USART.h"
 24136 ;; Parameters:    Size  Location     Type
 24137 ;;		None
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;		None
 24140 ;; Return value:  Size  Location     Type
 24141 ;;                  1    wreg      void 
 24142 ;; Registers used:
 24143 ;;		wreg, status,2
 24144 ;; Tracked objects:
 24145 ;;		On entry : 0/0
 24146 ;;		On exit  : 0/0
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24149 ;;      Params:         0       0       0       0       0       0       0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24151 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24152 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24153 ;;Total ram usage:        0 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; Hardware stack levels required when called:    6
 24156 ;; This function calls:
 24157 ;;		Nothing
 24158 ;; This function is called by:
 24159 ;;		_main
 24160 ;; This function uses a non-reentrant model
 24161 ;;
 24162                           
 24163                           	psect	text58
 24164  005E6E                     __ptext58:
 24165                           	opt stack 0
 24166  005E6E                     _UART_Init:
 24167                           	opt stack 24
 24168                           
 24169                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 24170                           
 24171                           ;incstack = 0
 24172  005E6E  9C94               	bcf	3988,6,c	;volatile
 24173                           
 24174                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 24175  005E70  8E94               	bsf	3988,7,c	;volatile
 24176                           
 24177                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 24178  005E72  8AAC               	bsf	4012,5,c	;volatile
 24179                           
 24180                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 24181  005E74  84AC               	bsf	4012,2,c	;volatile
 24182                           
 24183                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 24184  005E76  98AC               	bcf	4012,4,c	;volatile
 24185                           
 24186                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 24187  005E78  8EAB               	bsf	4011,7,c	;volatile
 24188                           
 24189                           ;USART.h: 20: RCSTAbits.CREN = 1;
 24190  005E7A  88AB               	bsf	4011,4,c	;volatile
 24191                           
 24192                           ;USART.h: 25: SPBRG = 25;
 24193  005E7C  0E19               	movlw	25
 24194  005E7E  6EAF               	movwf	4015,c	;volatile
 24195                           
 24196                           ;USART.h: 28: INTCONbits.GIE = 1;
 24197  005E80  8EF2               	bsf	intcon,7,c	;volatile
 24198                           
 24199                           ;USART.h: 29: INTCONbits.PEIE = 1;
 24200  005E82  8CF2               	bsf	intcon,6,c	;volatile
 24201                           
 24202                           ;USART.h: 31: PIR1bits.RCIF = 0;
 24203  005E84  9A9E               	bcf	3998,5,c	;volatile
 24204                           
 24205                           ;USART.h: 32: PIE1bits.RCIE = 1;
 24206  005E86  8A9D               	bsf	3997,5,c	;volatile
 24207  005E88  0012               	return		;funcret
 24208  005E8A                     __end_of_UART_Init:
 24209                           	opt stack 0
 24210                           tosu	equ	0xFFF
 24211                           tosh	equ	0xFFE
 24212                           tosl	equ	0xFFD
 24213                           pclath	equ	0xFFA
 24214                           tblptru	equ	0xFF8
 24215                           tblptrh	equ	0xFF7
 24216                           tblptrl	equ	0xFF6
 24217                           tablat	equ	0xFF5
 24218                           prodh	equ	0xFF4
 24219                           prodl	equ	0xFF3
 24220                           intcon	equ	0xFF2
 24221                           intcon2	equ	0xFF1
 24222                           intcon3	equ	0xFF0
 24223                           indf0	equ	0xFEF
 24224                           postinc0	equ	0xFEE
 24225                           fsr0h	equ	0xFEA
 24226                           fsr0l	equ	0xFE9
 24227                           wreg	equ	0xFE8
 24228                           indf1	equ	0xFE7
 24229                           postdec1	equ	0xFE5
 24230                           fsr1h	equ	0xFE2
 24231                           fsr1l	equ	0xFE1
 24232                           indf2	equ	0xFDF
 24233                           postinc2	equ	0xFDE
 24234                           postdec2	equ	0xFDD
 24235                           fsr2h	equ	0xFDA
 24236                           fsr2l	equ	0xFD9
 24237                           status	equ	0xFD8
 24238                           
 24239 ;; *************** function _Lcd_Init *****************
 24240 ;; Defined at:
 24241 ;;		line 17 in file "src/lcd.h"
 24242 ;; Parameters:    Size  Location     Type
 24243 ;;		None
 24244 ;; Auto vars:     Size  Location     Type
 24245 ;;		None
 24246 ;; Return value:  Size  Location     Type
 24247 ;;                  1    wreg      void 
 24248 ;; Registers used:
 24249 ;;		wreg, status,2, cstack
 24250 ;; Tracked objects:
 24251 ;;		On entry : 0/0
 24252 ;;		On exit  : 0/0
 24253 ;;		Unchanged: 0/0
 24254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24255 ;;      Params:         0       0       0       0       0       0       0       0       0
 24256 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24257 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24258 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24259 ;;Total ram usage:        1 bytes
 24260 ;; Hardware stack levels used:    1
 24261 ;; Hardware stack levels required when called:    8
 24262 ;; This function calls:
 24263 ;;		_Lcd_Cmd
 24264 ;;		_Lcd_Port
 24265 ;; This function is called by:
 24266 ;;		_main
 24267 ;; This function uses a non-reentrant model
 24268 ;;
 24269                           
 24270                           	psect	text59
 24271  00562C                     __ptext59:
 24272                           	opt stack 0
 24273  00562C                     _Lcd_Init:
 24274                           	opt stack 22
 24275                           
 24276                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 24277                           
 24278                           ;incstack = 0
 24279  00562C  9E95               	bcf	3989,7,c	;volatile
 24280                           
 24281                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 24282  00562E  9C95               	bcf	3989,6,c	;volatile
 24283                           
 24284                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 24285  005630  9A95               	bcf	3989,5,c	;volatile
 24286                           
 24287                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 24288  005632  9895               	bcf	3989,4,c	;volatile
 24289                           
 24290                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 24291  005634  9695               	bcf	3989,3,c	;volatile
 24292                           
 24293                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 24294  005636  9495               	bcf	3989,2,c	;volatile
 24295                           
 24296                           ;lcd.h: 35: Lcd_Port(0x00);
 24297  005638  0E00               	movlw	0
 24298  00563A  EC4E  F02E         	call	_Lcd_Port
 24299                           
 24300                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 24301  00563E  0E34               	movlw	52
 24302  005640  0100               	movlb	0	; () banked
 24303  005642  6F63               	movwf	??_Lcd_Init& (0+255),b
 24304  005644  0EF1               	movlw	241
 24305  005646                     u15427:
 24306  005646  2EE8               	decfsz	wreg,f,c
 24307  005648  D7FE               	bra	u15427
 24308  00564A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24309  00564C  D7FC               	bra	u15427
 24310  00564E  D000               	nop2	
 24311                           
 24312                           ;lcd.h: 37: Lcd_Cmd(0x03);
 24313  005650  0E03               	movlw	3
 24314  005652  ECE4  F02E         	call	_Lcd_Cmd
 24315                           
 24316                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 24317  005656  0E0D               	movlw	13
 24318  005658  0100               	movlb	0	; () banked
 24319  00565A  6F63               	movwf	??_Lcd_Init& (0+255),b
 24320  00565C  0EFB               	movlw	251
 24321  00565E                     u15437:
 24322  00565E  2EE8               	decfsz	wreg,f,c
 24323  005660  D7FE               	bra	u15437
 24324  005662  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24325  005664  D7FC               	bra	u15437
 24326  005666  D000               	nop2	
 24327                           
 24328                           ;lcd.h: 39: Lcd_Cmd(0x03);
 24329  005668  0E03               	movlw	3
 24330  00566A  ECE4  F02E         	call	_Lcd_Cmd
 24331                           
 24332                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 24333  00566E  0E1D               	movlw	29
 24334  005670  0100               	movlb	0	; () banked
 24335  005672  6F63               	movwf	??_Lcd_Init& (0+255),b
 24336  005674  0E91               	movlw	145
 24337  005676                     u15447:
 24338  005676  2EE8               	decfsz	wreg,f,c
 24339  005678  D7FE               	bra	u15447
 24340  00567A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24341  00567C  D7FC               	bra	u15447
 24342                           
 24343                           ;lcd.h: 41: Lcd_Cmd(0x03);
 24344  00567E  0E03               	movlw	3
 24345  005680  ECE4  F02E         	call	_Lcd_Cmd
 24346                           
 24347                           ;lcd.h: 43: Lcd_Cmd(0x02);
 24348  005684  0E02               	movlw	2
 24349  005686  ECE4  F02E         	call	_Lcd_Cmd
 24350                           
 24351                           ;lcd.h: 44: Lcd_Cmd(0x02);
 24352  00568A  0E02               	movlw	2
 24353  00568C  ECE4  F02E         	call	_Lcd_Cmd
 24354                           
 24355                           ;lcd.h: 45: Lcd_Cmd(0x08);
 24356  005690  0E08               	movlw	8
 24357  005692  ECE4  F02E         	call	_Lcd_Cmd
 24358                           
 24359                           ;lcd.h: 46: Lcd_Cmd(0x00);
 24360  005696  0E00               	movlw	0
 24361  005698  ECE4  F02E         	call	_Lcd_Cmd
 24362                           
 24363                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 24364  00569C  0E0C               	movlw	12
 24365  00569E  ECE4  F02E         	call	_Lcd_Cmd
 24366                           
 24367                           ;lcd.h: 48: Lcd_Cmd(0x00);
 24368  0056A2  0E00               	movlw	0
 24369  0056A4  ECE4  F02E         	call	_Lcd_Cmd
 24370                           
 24371                           ;lcd.h: 49: Lcd_Cmd(0x06);
 24372  0056A8  0E06               	movlw	6
 24373  0056AA  ECE4  F02E         	call	_Lcd_Cmd
 24374  0056AE  0012               	return		;funcret
 24375  0056B0                     __end_of_Lcd_Init:
 24376                           	opt stack 0
 24377                           tosu	equ	0xFFF
 24378                           tosh	equ	0xFFE
 24379                           tosl	equ	0xFFD
 24380                           pclath	equ	0xFFA
 24381                           tblptru	equ	0xFF8
 24382                           tblptrh	equ	0xFF7
 24383                           tblptrl	equ	0xFF6
 24384                           tablat	equ	0xFF5
 24385                           prodh	equ	0xFF4
 24386                           prodl	equ	0xFF3
 24387                           intcon	equ	0xFF2
 24388                           intcon2	equ	0xFF1
 24389                           intcon3	equ	0xFF0
 24390                           indf0	equ	0xFEF
 24391                           postinc0	equ	0xFEE
 24392                           fsr0h	equ	0xFEA
 24393                           fsr0l	equ	0xFE9
 24394                           wreg	equ	0xFE8
 24395                           indf1	equ	0xFE7
 24396                           postdec1	equ	0xFE5
 24397                           fsr1h	equ	0xFE2
 24398                           fsr1l	equ	0xFE1
 24399                           indf2	equ	0xFDF
 24400                           postinc2	equ	0xFDE
 24401                           postdec2	equ	0xFDD
 24402                           fsr2h	equ	0xFDA
 24403                           fsr2l	equ	0xFD9
 24404                           status	equ	0xFD8
 24405                           
 24406 ;; *************** function _Lcd_Clear *****************
 24407 ;; Defined at:
 24408 ;;		line 82 in file "src/lcd.h"
 24409 ;; Parameters:    Size  Location     Type
 24410 ;;		None
 24411 ;; Auto vars:     Size  Location     Type
 24412 ;;		None
 24413 ;; Return value:  Size  Location     Type
 24414 ;;                  1    wreg      void 
 24415 ;; Registers used:
 24416 ;;		wreg, status,2, cstack
 24417 ;; Tracked objects:
 24418 ;;		On entry : 0/0
 24419 ;;		On exit  : 0/0
 24420 ;;		Unchanged: 0/0
 24421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24422 ;;      Params:         0       0       0       0       0       0       0       0       0
 24423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24426 ;;Total ram usage:        0 bytes
 24427 ;; Hardware stack levels used:    1
 24428 ;; Hardware stack levels required when called:    8
 24429 ;; This function calls:
 24430 ;;		_Lcd_Cmd
 24431 ;; This function is called by:
 24432 ;;		_main
 24433 ;; This function uses a non-reentrant model
 24434 ;;
 24435                           
 24436                           	psect	text60
 24437  005ED6                     __ptext60:
 24438                           	opt stack 0
 24439  005ED6                     _Lcd_Clear:
 24440                           	opt stack 22
 24441                           
 24442                           ;lcd.h: 83: Lcd_Cmd(0);
 24443                           
 24444                           ;incstack = 0
 24445  005ED6  0E00               	movlw	0
 24446  005ED8  ECE4  F02E         	call	_Lcd_Cmd
 24447                           
 24448                           ;lcd.h: 84: Lcd_Cmd(1);
 24449  005EDC  0E01               	movlw	1
 24450  005EDE  ECE4  F02E         	call	_Lcd_Cmd
 24451  005EE2  0012               	return		;funcret
 24452  005EE4                     __end_of_Lcd_Clear:
 24453                           	opt stack 0
 24454                           tosu	equ	0xFFF
 24455                           tosh	equ	0xFFE
 24456                           tosl	equ	0xFFD
 24457                           pclath	equ	0xFFA
 24458                           tblptru	equ	0xFF8
 24459                           tblptrh	equ	0xFF7
 24460                           tblptrl	equ	0xFF6
 24461                           tablat	equ	0xFF5
 24462                           prodh	equ	0xFF4
 24463                           prodl	equ	0xFF3
 24464                           intcon	equ	0xFF2
 24465                           intcon2	equ	0xFF1
 24466                           intcon3	equ	0xFF0
 24467                           indf0	equ	0xFEF
 24468                           postinc0	equ	0xFEE
 24469                           fsr0h	equ	0xFEA
 24470                           fsr0l	equ	0xFE9
 24471                           wreg	equ	0xFE8
 24472                           indf1	equ	0xFE7
 24473                           postdec1	equ	0xFE5
 24474                           fsr1h	equ	0xFE2
 24475                           fsr1l	equ	0xFE1
 24476                           indf2	equ	0xFDF
 24477                           postinc2	equ	0xFDE
 24478                           postdec2	equ	0xFDD
 24479                           fsr2h	equ	0xFDA
 24480                           fsr2l	equ	0xFD9
 24481                           status	equ	0xFD8
 24482                           
 24483 ;; *************** function _Lcd_Cmd *****************
 24484 ;; Defined at:
 24485 ;;		line 74 in file "src/lcd.h"
 24486 ;; Parameters:    Size  Location     Type
 24487 ;;  a               1    wreg     unsigned char 
 24488 ;; Auto vars:     Size  Location     Type
 24489 ;;  a               1    2[BANK0 ] unsigned char 
 24490 ;; Return value:  Size  Location     Type
 24491 ;;                  1    wreg      void 
 24492 ;; Registers used:
 24493 ;;		wreg, status,2, cstack
 24494 ;; Tracked objects:
 24495 ;;		On entry : 0/0
 24496 ;;		On exit  : 0/0
 24497 ;;		Unchanged: 0/0
 24498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24499 ;;      Params:         0       0       0       0       0       0       0       0       0
 24500 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24501 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24502 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24503 ;;Total ram usage:        2 bytes
 24504 ;; Hardware stack levels used:    1
 24505 ;; Hardware stack levels required when called:    7
 24506 ;; This function calls:
 24507 ;;		_Lcd_Port
 24508 ;; This function is called by:
 24509 ;;		_Lcd_Init
 24510 ;;		_Lcd_Clear
 24511 ;;		_Lcd_Set_Cursor
 24512 ;;		_criaCaracteresCGRAM
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text61
 24517  005DC8                     __ptext61:
 24518                           	opt stack 0
 24519  005DC8                     _Lcd_Cmd:
 24520                           	opt stack 22
 24521                           
 24522                           ;incstack = 0
 24523                           ;Lcd_Cmd@a stored from wreg
 24524  005DC8  0100               	movlb	0	; () banked
 24525  005DCA  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 24526                           
 24527                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 24528  005DCC  9483               	bcf	3971,2,c	;volatile
 24529                           
 24530                           ;lcd.h: 76: Lcd_Port(a);
 24531  005DCE  0100               	movlb	0	; () banked
 24532  005DD0  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 24533  005DD2  EC4E  F02E         	call	_Lcd_Port
 24534                           
 24535                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 24536  005DD6  8683               	bsf	3971,3,c	;volatile
 24537                           
 24538                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 24539  005DD8  0E0B               	movlw	11
 24540  005DDA  0100               	movlb	0	; () banked
 24541  005DDC  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 24542  005DDE  0E62               	movlw	98
 24543  005DE0                     u15457:
 24544  005DE0  2EE8               	decfsz	wreg,f,c
 24545  005DE2  D7FE               	bra	u15457
 24546  005DE4  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 24547  005DE6  D7FC               	bra	u15457
 24548  005DE8  F000               	nop	
 24549                           
 24550                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 24551  005DEA  9683               	bcf	3971,3,c	;volatile
 24552  005DEC  0012               	return		;funcret
 24553  005DEE                     __end_of_Lcd_Cmd:
 24554                           	opt stack 0
 24555                           tosu	equ	0xFFF
 24556                           tosh	equ	0xFFE
 24557                           tosl	equ	0xFFD
 24558                           pclath	equ	0xFFA
 24559                           tblptru	equ	0xFF8
 24560                           tblptrh	equ	0xFF7
 24561                           tblptrl	equ	0xFF6
 24562                           tablat	equ	0xFF5
 24563                           prodh	equ	0xFF4
 24564                           prodl	equ	0xFF3
 24565                           intcon	equ	0xFF2
 24566                           intcon2	equ	0xFF1
 24567                           intcon3	equ	0xFF0
 24568                           indf0	equ	0xFEF
 24569                           postinc0	equ	0xFEE
 24570                           fsr0h	equ	0xFEA
 24571                           fsr0l	equ	0xFE9
 24572                           wreg	equ	0xFE8
 24573                           indf1	equ	0xFE7
 24574                           postdec1	equ	0xFE5
 24575                           fsr1h	equ	0xFE2
 24576                           fsr1l	equ	0xFE1
 24577                           indf2	equ	0xFDF
 24578                           postinc2	equ	0xFDE
 24579                           postdec2	equ	0xFDD
 24580                           fsr2h	equ	0xFDA
 24581                           fsr2l	equ	0xFD9
 24582                           status	equ	0xFD8
 24583                           
 24584 ;; *************** function _Lcd_Port *****************
 24585 ;; Defined at:
 24586 ;;		line 52 in file "src/lcd.h"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;  a               1    wreg     unsigned char 
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;  a               1    0[BANK0 ] unsigned char 
 24591 ;; Return value:  Size  Location     Type
 24592 ;;                  1    wreg      void 
 24593 ;; Registers used:
 24594 ;;		wreg
 24595 ;; Tracked objects:
 24596 ;;		On entry : 0/0
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0
 24601 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24603 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24604 ;;Total ram usage:        1 bytes
 24605 ;; Hardware stack levels used:    1
 24606 ;; Hardware stack levels required when called:    6
 24607 ;; This function calls:
 24608 ;;		Nothing
 24609 ;; This function is called by:
 24610 ;;		_Lcd_Init
 24611 ;;		_Lcd_Cmd
 24612 ;;		_Lcd_Write_Char
 24613 ;; This function uses a non-reentrant model
 24614 ;;
 24615                           
 24616                           	psect	text62
 24617  005C9C                     __ptext62:
 24618                           	opt stack 0
 24619  005C9C                     _Lcd_Port:
 24620                           	opt stack 22
 24621                           
 24622                           ;incstack = 0
 24623                           ;Lcd_Port@a stored from wreg
 24624  005C9C  0100               	movlb	0	; () banked
 24625  005C9E  6F60               	movwf	Lcd_Port@a& (0+255),b
 24626                           
 24627                           ;lcd.h: 53: if (a & 1)
 24628  005CA0  0100               	movlb	0	; () banked
 24629  005CA2  A160               	btfss	Lcd_Port@a& (0+255),0,b
 24630  005CA4  D002               	goto	l225
 24631                           
 24632                           ; BSR set to: 0
 24633                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 24634  005CA6  8883               	bsf	3971,4,c	;volatile
 24635  005CA8  D001               	goto	l226
 24636  005CAA                     l225:
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;lcd.h: 55: else
 24640                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 24641  005CAA  9883               	bcf	3971,4,c	;volatile
 24642  005CAC                     l226:
 24643                           
 24644                           ; BSR set to: 0
 24645                           ;lcd.h: 58: if (a & 2)
 24646                           
 24647                           ; BSR set to: 0
 24648  005CAC  A360               	btfss	Lcd_Port@a& (0+255),1,b
 24649  005CAE  D002               	goto	l227
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 24653  005CB0  8A83               	bsf	3971,5,c	;volatile
 24654  005CB2  D001               	goto	l228
 24655  005CB4                     l227:
 24656                           
 24657                           ; BSR set to: 0
 24658                           ;lcd.h: 60: else
 24659                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 24660  005CB4  9A83               	bcf	3971,5,c	;volatile
 24661  005CB6                     l228:
 24662                           
 24663                           ; BSR set to: 0
 24664                           ;lcd.h: 63: if (a & 4)
 24665                           
 24666                           ; BSR set to: 0
 24667  005CB6  A560               	btfss	Lcd_Port@a& (0+255),2,b
 24668  005CB8  D002               	goto	l229
 24669                           
 24670                           ; BSR set to: 0
 24671                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 24672  005CBA  8C83               	bsf	3971,6,c	;volatile
 24673  005CBC  D001               	goto	l230
 24674  005CBE                     l229:
 24675                           
 24676                           ; BSR set to: 0
 24677                           ;lcd.h: 65: else
 24678                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 24679  005CBE  9C83               	bcf	3971,6,c	;volatile
 24680  005CC0                     l230:
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;lcd.h: 68: if (a & 8)
 24684                           
 24685                           ; BSR set to: 0
 24686  005CC0  A760               	btfss	Lcd_Port@a& (0+255),3,b
 24687  005CC2  D002               	goto	l231
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 24691  005CC4  8E83               	bsf	3971,7,c	;volatile
 24692  005CC6  0012               	return	
 24693  005CC8                     l231:
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;lcd.h: 70: else
 24697                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 24698  005CC8  9E83               	bcf	3971,7,c	;volatile
 24699  005CCA  0012               	return	
 24700  005CCC                     __end_of_Lcd_Port:
 24701                           	opt stack 0
 24702                           tosu	equ	0xFFF
 24703                           tosh	equ	0xFFE
 24704                           tosl	equ	0xFFD
 24705                           pclath	equ	0xFFA
 24706                           tblptru	equ	0xFF8
 24707                           tblptrh	equ	0xFF7
 24708                           tblptrl	equ	0xFF6
 24709                           tablat	equ	0xFF5
 24710                           prodh	equ	0xFF4
 24711                           prodl	equ	0xFF3
 24712                           intcon	equ	0xFF2
 24713                           intcon2	equ	0xFF1
 24714                           intcon3	equ	0xFF0
 24715                           indf0	equ	0xFEF
 24716                           postinc0	equ	0xFEE
 24717                           fsr0h	equ	0xFEA
 24718                           fsr0l	equ	0xFE9
 24719                           wreg	equ	0xFE8
 24720                           indf1	equ	0xFE7
 24721                           postdec1	equ	0xFE5
 24722                           fsr1h	equ	0xFE2
 24723                           fsr1l	equ	0xFE1
 24724                           indf2	equ	0xFDF
 24725                           postinc2	equ	0xFDE
 24726                           postdec2	equ	0xFDD
 24727                           fsr2h	equ	0xFDA
 24728                           fsr2l	equ	0xFD9
 24729                           status	equ	0xFD8
 24730                           
 24731 ;; *************** function _I2C_Master_Init *****************
 24732 ;; Defined at:
 24733 ;;		line 11 in file "src/I2C.c"
 24734 ;; Parameters:    Size  Location     Type
 24735 ;;  c               4   13[BANK0 ] const unsigned long 
 24736 ;; Auto vars:     Size  Location     Type
 24737 ;;		None
 24738 ;; Return value:  Size  Location     Type
 24739 ;;                  1    wreg      void 
 24740 ;; Registers used:
 24741 ;;		wreg, status,2, status,0, cstack
 24742 ;; Tracked objects:
 24743 ;;		On entry : 0/0
 24744 ;;		On exit  : 0/0
 24745 ;;		Unchanged: 0/0
 24746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24747 ;;      Params:         0       4       0       0       0       0       0       0       0
 24748 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24749 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24750 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24751 ;;Total ram usage:        8 bytes
 24752 ;; Hardware stack levels used:    1
 24753 ;; Hardware stack levels required when called:    7
 24754 ;; This function calls:
 24755 ;;		___lldiv
 24756 ;; This function is called by:
 24757 ;;		_main
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text63
 24762  0057A4                     __ptext63:
 24763                           	opt stack 0
 24764  0057A4                     _I2C_Master_Init:
 24765                           	opt stack 23
 24766                           
 24767                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 24768                           
 24769                           ; BSR set to: 0
 24770                           ;incstack = 0
 24771  0057A4  8093               	bsf	3987,0,c	;volatile
 24772                           
 24773                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 24774  0057A6  8293               	bsf	3987,1,c	;volatile
 24775                           
 24776                           ;I2C.c: 14: SSPCON1 = 0x28;
 24777  0057A8  0E28               	movlw	40
 24778  0057AA  6EC6               	movwf	4038,c	;volatile
 24779                           
 24780                           ;I2C.c: 15: SSPCON2 = 0x0;
 24781  0057AC  0E00               	movlw	0
 24782  0057AE  6EC5               	movwf	4037,c	;volatile
 24783                           
 24784                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 24785  0057B0  0E00               	movlw	0
 24786  0057B2  0100               	movlb	0	; () banked
 24787  0057B4  6F60               	movwf	___lldiv@dividend& (0+255),b
 24788  0057B6  0E12               	movlw	18
 24789  0057B8  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 24790  0057BA  0E7A               	movlw	122
 24791  0057BC  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 24792  0057BE  0E00               	movlw	0
 24793  0057C0  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 24794  0057C2  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 24795  0057C6  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 24796  0057CA  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 24797  0057CE  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 24798  0057D2  0E02               	movlw	2
 24799  0057D4                     u14265:
 24800  0057D4  90D8               	bcf	status,0,c
 24801  0057D6  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 24802  0057D8  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 24803  0057DA  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 24804  0057DC  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 24805  0057DE  2EE8               	decfsz	wreg,f,c
 24806  0057E0  D7F9               	goto	u14265
 24807  0057E2  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 24808  0057E6  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 24809  0057EA  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 24810  0057EE  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 24811  0057F2  EC58  F02B         	call	___lldiv	;wreg free
 24812  0057F6  0100               	movlb	0	; () banked
 24813  0057F8  0560               	decf	?___lldiv& (0+255),w,b
 24814  0057FA  6EC8               	movwf	4040,c	;volatile
 24815                           
 24816                           ; BSR set to: 0
 24817                           ;I2C.c: 17: SSPSTAT = 0;
 24818  0057FC  0E00               	movlw	0
 24819  0057FE  6EC7               	movwf	4039,c	;volatile
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 24823  005800  0E82               	movlw	130
 24824  005802  0100               	movlb	0	; () banked
 24825  005804  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 24826  005806  0EDD               	movlw	221
 24827  005808                     u15467:
 24828  005808  2EE8               	decfsz	wreg,f,c
 24829  00580A  D7FE               	bra	u15467
 24830  00580C  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 24831  00580E  D7FC               	bra	u15467
 24832  005810  D000               	nop2	
 24833  005812  0012               	return		;funcret
 24834  005814                     __end_of_I2C_Master_Init:
 24835                           	opt stack 0
 24836                           tosu	equ	0xFFF
 24837                           tosh	equ	0xFFE
 24838                           tosl	equ	0xFFD
 24839                           pclath	equ	0xFFA
 24840                           tblptru	equ	0xFF8
 24841                           tblptrh	equ	0xFF7
 24842                           tblptrl	equ	0xFF6
 24843                           tablat	equ	0xFF5
 24844                           prodh	equ	0xFF4
 24845                           prodl	equ	0xFF3
 24846                           intcon	equ	0xFF2
 24847                           intcon2	equ	0xFF1
 24848                           intcon3	equ	0xFF0
 24849                           indf0	equ	0xFEF
 24850                           postinc0	equ	0xFEE
 24851                           fsr0h	equ	0xFEA
 24852                           fsr0l	equ	0xFE9
 24853                           wreg	equ	0xFE8
 24854                           indf1	equ	0xFE7
 24855                           postdec1	equ	0xFE5
 24856                           fsr1h	equ	0xFE2
 24857                           fsr1l	equ	0xFE1
 24858                           indf2	equ	0xFDF
 24859                           postinc2	equ	0xFDE
 24860                           postdec2	equ	0xFDD
 24861                           fsr2h	equ	0xFDA
 24862                           fsr2l	equ	0xFD9
 24863                           status	equ	0xFD8
 24864                           
 24865 ;; *************** function ___lldiv *****************
 24866 ;; Defined at:
 24867 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 24868 ;; Parameters:    Size  Location     Type
 24869 ;;  dividend        4    0[BANK0 ] unsigned long 
 24870 ;;  divisor         4    4[BANK0 ] unsigned long 
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;  quotient        4    8[BANK0 ] unsigned long 
 24873 ;;  counter         1   12[BANK0 ] unsigned char 
 24874 ;; Return value:  Size  Location     Type
 24875 ;;                  4    0[BANK0 ] unsigned long 
 24876 ;; Registers used:
 24877 ;;		wreg, status,2, status,0
 24878 ;; Tracked objects:
 24879 ;;		On entry : 0/0
 24880 ;;		On exit  : 0/0
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24883 ;;      Params:         0       8       0       0       0       0       0       0       0
 24884 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24885 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24886 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24887 ;;Total ram usage:       13 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; Hardware stack levels required when called:    6
 24890 ;; This function calls:
 24891 ;;		Nothing
 24892 ;; This function is called by:
 24893 ;;		_I2C_Master_Init
 24894 ;; This function uses a non-reentrant model
 24895 ;;
 24896                           
 24897                           	psect	text64
 24898  0056B0                     __ptext64:
 24899                           	opt stack 0
 24900  0056B0                     ___lldiv:
 24901                           	opt stack 23
 24902                           
 24903                           ;incstack = 0
 24904  0056B0  0E00               	movlw	0
 24905  0056B2  0100               	movlb	0	; () banked
 24906  0056B4  6F68               	movwf	___lldiv@quotient& (0+255),b
 24907  0056B6  0E00               	movlw	0
 24908  0056B8  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24909  0056BA  0E00               	movlw	0
 24910  0056BC  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24911  0056BE  0E00               	movlw	0
 24912  0056C0  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24913                           
 24914                           ; BSR set to: 0
 24915  0056C2  5164               	movf	___lldiv@divisor& (0+255),w,b
 24916  0056C4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24917  0056C6  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24918  0056C8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24919  0056CA  B4D8               	btfsc	status,2,c
 24920  0056CC  D02A               	goto	l1955
 24921                           
 24922                           ; BSR set to: 0
 24923  0056CE  0E01               	movlw	1
 24924  0056D0  6F6C               	movwf	___lldiv@counter& (0+255),b
 24925  0056D2  D006               	goto	l1950
 24926  0056D4                     
 24927                           ; BSR set to: 0
 24928                           
 24929                           ; BSR set to: 0
 24930  0056D4  90D8               	bcf	status,0,c
 24931  0056D6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24932  0056D8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24933  0056DA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24934  0056DC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24935  0056DE  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24936  0056E0                     l1950:
 24937                           
 24938                           ; BSR set to: 0
 24939                           
 24940                           ; BSR set to: 0
 24941  0056E0  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24942  0056E2  D7F8               	goto	l1951
 24943  0056E4                     u12490:
 24944                           
 24945                           ; BSR set to: 0
 24946                           
 24947                           ; BSR set to: 0
 24948                           
 24949                           ; BSR set to: 0
 24950  0056E4  90D8               	bcf	status,0,c
 24951  0056E6  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24952  0056E8  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24953  0056EA  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24954  0056EC  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24955                           
 24956                           ; BSR set to: 0
 24957  0056EE  5164               	movf	___lldiv@divisor& (0+255),w,b
 24958  0056F0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24959  0056F2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24960  0056F4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24961  0056F6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24962  0056F8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24963  0056FA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24964  0056FC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24965  0056FE  A0D8               	btfss	status,0,c
 24966  005700  D009               	goto	l1954
 24967                           
 24968                           ; BSR set to: 0
 24969  005702  5164               	movf	___lldiv@divisor& (0+255),w,b
 24970  005704  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24971  005706  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24972  005708  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24973  00570A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24974  00570C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24975  00570E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24976  005710  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24977                           
 24978                           ; BSR set to: 0
 24979  005712  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24980  005714                     l1954:
 24981                           
 24982                           ; BSR set to: 0
 24983                           
 24984                           ; BSR set to: 0
 24985  005714  90D8               	bcf	status,0,c
 24986  005716  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24987  005718  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24988  00571A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24989  00571C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24990                           
 24991                           ; BSR set to: 0
 24992  00571E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24993  005720  D7E1               	goto	u12490
 24994  005722                     l1955:
 24995                           
 24996                           ; BSR set to: 0
 24997                           
 24998                           ; BSR set to: 0
 24999  005722  C068  F060         	movff	___lldiv@quotient,?___lldiv
 25000  005726  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 25001  00572A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 25002  00572E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 25003                           
 25004                           ; BSR set to: 0
 25005  005732  0012               	return		;funcret
 25006  005734                     __end_of___lldiv:
 25007                           	opt stack 0
 25008                           tosu	equ	0xFFF
 25009                           tosh	equ	0xFFE
 25010                           tosl	equ	0xFFD
 25011                           pclath	equ	0xFFA
 25012                           tblptru	equ	0xFF8
 25013                           tblptrh	equ	0xFF7
 25014                           tblptrl	equ	0xFF6
 25015                           tablat	equ	0xFF5
 25016                           prodh	equ	0xFF4
 25017                           prodl	equ	0xFF3
 25018                           intcon	equ	0xFF2
 25019                           intcon2	equ	0xFF1
 25020                           intcon3	equ	0xFF0
 25021                           indf0	equ	0xFEF
 25022                           postinc0	equ	0xFEE
 25023                           fsr0h	equ	0xFEA
 25024                           fsr0l	equ	0xFE9
 25025                           wreg	equ	0xFE8
 25026                           indf1	equ	0xFE7
 25027                           postdec1	equ	0xFE5
 25028                           fsr1h	equ	0xFE2
 25029                           fsr1l	equ	0xFE1
 25030                           indf2	equ	0xFDF
 25031                           postinc2	equ	0xFDE
 25032                           postdec2	equ	0xFDD
 25033                           fsr2h	equ	0xFDA
 25034                           fsr2l	equ	0xFD9
 25035                           status	equ	0xFD8
 25036                           
 25037 ;; *************** function _TIMER0 *****************
 25038 ;; Defined at:
 25039 ;;		line 15 in file "src/main.c"
 25040 ;; Parameters:    Size  Location     Type
 25041 ;;		None
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;  c               1   47[COMRAM] unsigned char 
 25044 ;; Return value:  Size  Location     Type
 25045 ;;                  1    wreg      void 
 25046 ;; Registers used:
 25047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25048 ;; Tracked objects:
 25049 ;;		On entry : 0/0
 25050 ;;		On exit  : 0/0
 25051 ;;		Unchanged: 0/0
 25052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25053 ;;      Params:         0       0       0       0       0       0       0       0       0
 25054 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25055 ;;      Temps:         18       0       0       0       0       0       0       0       0
 25056 ;;      Totals:        19       0       0       0       0       0       0       0       0
 25057 ;;Total ram usage:       19 bytes
 25058 ;; Hardware stack levels used:    1
 25059 ;; Hardware stack levels required when called:    5
 25060 ;; This function calls:
 25061 ;;		_readButtons
 25062 ;;		_timer
 25063 ;; This function is called by:
 25064 ;;		Interrupt level 2
 25065 ;; This function uses a non-reentrant model
 25066 ;;
 25067                           
 25068                           	psect	intcode
 25069  000008                     __pintcode:
 25070                           	opt stack 0
 25071  000008                     _TIMER0:
 25072                           	opt stack 20
 25073                           
 25074                           ; BSR set to: 0
 25075                           ;incstack = 0
 25076  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25077  00000A  EDC3  F025         	call	int_func,f	;refresh shadow registers
 25078                           tosu	equ	0xFFF
 25079                           tosh	equ	0xFFE
 25080                           tosl	equ	0xFFD
 25081                           pclath	equ	0xFFA
 25082                           tblptru	equ	0xFF8
 25083                           tblptrh	equ	0xFF7
 25084                           tblptrl	equ	0xFF6
 25085                           tablat	equ	0xFF5
 25086                           prodh	equ	0xFF4
 25087                           prodl	equ	0xFF3
 25088                           intcon	equ	0xFF2
 25089                           intcon2	equ	0xFF1
 25090                           intcon3	equ	0xFF0
 25091                           indf0	equ	0xFEF
 25092                           postinc0	equ	0xFEE
 25093                           fsr0h	equ	0xFEA
 25094                           fsr0l	equ	0xFE9
 25095                           wreg	equ	0xFE8
 25096                           indf1	equ	0xFE7
 25097                           postdec1	equ	0xFE5
 25098                           fsr1h	equ	0xFE2
 25099                           fsr1l	equ	0xFE1
 25100                           indf2	equ	0xFDF
 25101                           postinc2	equ	0xFDE
 25102                           postdec2	equ	0xFDD
 25103                           fsr2h	equ	0xFDA
 25104                           fsr2l	equ	0xFD9
 25105                           status	equ	0xFD8
 25106                           
 25107                           	psect	intcode_body
 25108  004B86                     __pintcode_body:
 25109                           	opt stack 20
 25110  004B86                     int_func:
 25111                           	opt stack 20
 25112  004B86  0006               	pop		; remove dummy address from shadow register refresh
 25113  004B88  CFFA F01E          	movff	pclath,??_TIMER0
 25114  004B8C  CFFB F01F          	movff	pclatu,??_TIMER0+1
 25115  004B90  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 25116  004B94  CFEA F021          	movff	fsr0h,??_TIMER0+3
 25117  004B98  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 25118  004B9C  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 25119  004BA0  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 25120  004BA4  CFDA F025          	movff	fsr2h,??_TIMER0+7
 25121  004BA8  CFF3 F026          	movff	prodl,??_TIMER0+8
 25122  004BAC  CFF4 F027          	movff	prodh,??_TIMER0+9
 25123  004BB0  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 25124  004BB4  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 25125  004BB8  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 25126  004BBC  CFF5 F02B          	movff	tablat,??_TIMER0+13
 25127  004BC0  C051  F02C         	movff	btemp,??_TIMER0+14
 25128  004BC4  C052  F02D         	movff	btemp+1,??_TIMER0+15
 25129  004BC8  C053  F02E         	movff	btemp+2,??_TIMER0+16
 25130  004BCC  C054  F02F         	movff	btemp+3,??_TIMER0+17
 25131                           
 25132                           ;main.c: 16: if (TMR0IF) {
 25133  004BD0  A4F2               	btfss	intcon,2,c	;volatile
 25134  004BD2  D007               	goto	i2l1261
 25135                           
 25136                           ;main.c: 17: TMR0IF = 0x00;
 25137  004BD4  94F2               	bcf	intcon,2,c	;volatile
 25138                           
 25139                           ;main.c: 18: TMR0H = 0x3C;
 25140  004BD6  0E3C               	movlw	60
 25141  004BD8  6ED7               	movwf	4055,c	;volatile
 25142                           
 25143                           ;main.c: 19: TMR0L = 0xB0;
 25144  004BDA  0EB0               	movlw	176
 25145  004BDC  6ED6               	movwf	4054,c	;volatile
 25146                           
 25147                           ;main.c: 20: timer();
 25148  004BDE  EC8B  F01F         	call	_timer	;wreg free
 25149  004BE2                     i2l1261:
 25150                           
 25151                           ;main.c: 21: }
 25152                           ;main.c: 22: if (RCIF) {
 25153  004BE2  AA9E               	btfss	3998,5,c	;volatile
 25154  004BE4  D01A               	goto	i2l1264
 25155                           
 25156                           ;main.c: 23: char c = RCREG;
 25157  004BE6  CFAE F030          	movff	4014,TIMER0@c	;volatile
 25158                           
 25159                           ;main.c: 24: if (c != '\n' && c != '\r') {
 25160  004BEA  0E0A               	movlw	10
 25161  004BEC  1830               	xorwf	TIMER0@c,w,c
 25162  004BEE  B4D8               	btfsc	status,2,c
 25163  004BF0  D00F               	goto	i2l1263
 25164  004BF2  0E0D               	movlw	13
 25165  004BF4  1830               	xorwf	TIMER0@c,w,c
 25166  004BF6  B4D8               	btfsc	status,2,c
 25167  004BF8  D00B               	goto	i2l1263
 25168                           
 25169                           ;main.c: 25: bufferSerial[cbf++] = c;
 25170  004BFA  5043               	movf	_cbf,w,c
 25171  004BFC  0D01               	mullw	1
 25172  004BFE  0E42               	movlw	low _bufferSerial
 25173  004C00  24F3               	addwf	prodl,w,c
 25174  004C02  6ED9               	movwf	fsr2l,c
 25175  004C04  0E02               	movlw	high _bufferSerial
 25176  004C06  20F4               	addwfc	prodh,w,c
 25177  004C08  6EDA               	movwf	fsr2h,c
 25178  004C0A  C030  FFDF         	movff	TIMER0@c,indf2
 25179  004C0E  2A43               	incf	_cbf,f,c
 25180  004C10                     i2l1263:
 25181                           
 25182                           ;main.c: 26: }
 25183                           ;main.c: 27: if (cbf >= 80) cbf = 0;
 25184  004C10  0E4F               	movlw	79
 25185  004C12  6443               	cpfsgt	_cbf,c
 25186  004C14  D002               	goto	i2l1264
 25187  004C16  0E00               	movlw	0
 25188  004C18  6E43               	movwf	_cbf,c
 25189  004C1A                     i2l1264:
 25190                           
 25191                           ;main.c: 28: }
 25192                           ;main.c: 29: if (INT2IF) {
 25193  004C1A  A2F0               	btfss	intcon3,1,c	;volatile
 25194  004C1C  D003               	goto	i2l1265
 25195                           
 25196                           ;main.c: 30: INT2IF = 0;
 25197  004C1E  92F0               	bcf	intcon3,1,c	;volatile
 25198                           
 25199                           ;main.c: 31: readButtons();
 25200  004C20  ECBD  F02E         	call	_readButtons	;wreg free
 25201  004C24                     i2l1265:
 25202  004C24  C02F  F054         	movff	??_TIMER0+17,btemp+3
 25203  004C28  C02E  F053         	movff	??_TIMER0+16,btemp+2
 25204  004C2C  C02D  F052         	movff	??_TIMER0+15,btemp+1
 25205  004C30  C02C  F051         	movff	??_TIMER0+14,btemp
 25206  004C34  C02B  FFF5         	movff	??_TIMER0+13,tablat
 25207  004C38  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 25208  004C3C  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 25209  004C40  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 25210  004C44  C027  FFF4         	movff	??_TIMER0+9,prodh
 25211  004C48  C026  FFF3         	movff	??_TIMER0+8,prodl
 25212  004C4C  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 25213  004C50  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 25214  004C54  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 25215  004C58  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 25216  004C5C  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 25217  004C60  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 25218  004C64  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 25219  004C68  C01E  FFFA         	movff	??_TIMER0,pclath
 25220  004C6C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25221  004C6E  0011               	retfie		f
 25222  004C70                     __end_of_TIMER0:
 25223                           	opt stack 0
 25224                           tosu	equ	0xFFF
 25225                           tosh	equ	0xFFE
 25226                           tosl	equ	0xFFD
 25227                           pclatu	equ	0xFFB
 25228                           pclath	equ	0xFFA
 25229                           tblptru	equ	0xFF8
 25230                           tblptrh	equ	0xFF7
 25231                           tblptrl	equ	0xFF6
 25232                           tablat	equ	0xFF5
 25233                           prodh	equ	0xFF4
 25234                           prodl	equ	0xFF3
 25235                           intcon	equ	0xFF2
 25236                           intcon2	equ	0xFF1
 25237                           intcon3	equ	0xFF0
 25238                           indf0	equ	0xFEF
 25239                           postinc0	equ	0xFEE
 25240                           fsr0h	equ	0xFEA
 25241                           fsr0l	equ	0xFE9
 25242                           wreg	equ	0xFE8
 25243                           indf1	equ	0xFE7
 25244                           postdec1	equ	0xFE5
 25245                           fsr1h	equ	0xFE2
 25246                           fsr1l	equ	0xFE1
 25247                           indf2	equ	0xFDF
 25248                           postinc2	equ	0xFDE
 25249                           postdec2	equ	0xFDD
 25250                           fsr2h	equ	0xFDA
 25251                           fsr2l	equ	0xFD9
 25252                           status	equ	0xFD8
 25253                           
 25254 ;; *************** function _timer *****************
 25255 ;; Defined at:
 25256 ;;		line 39 in file "src/Controle.h"
 25257 ;; Parameters:    Size  Location     Type
 25258 ;;		None
 25259 ;; Auto vars:     Size  Location     Type
 25260 ;;		None
 25261 ;; Return value:  Size  Location     Type
 25262 ;;                  1    wreg      void 
 25263 ;; Registers used:
 25264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25265 ;; Tracked objects:
 25266 ;;		On entry : 0/0
 25267 ;;		On exit  : 0/0
 25268 ;;		Unchanged: 0/0
 25269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25270 ;;      Params:         0       0       0       0       0       0       0       0       0
 25271 ;;      Locals:         6       0       0       0       0       0       0       0       0
 25272 ;;      Temps:          7       0       0       0       0       0       0       0       0
 25273 ;;      Totals:        13       0       0       0       0       0       0       0       0
 25274 ;;Total ram usage:       13 bytes
 25275 ;; Hardware stack levels used:    1
 25276 ;; Hardware stack levels required when called:    4
 25277 ;; This function calls:
 25278 ;;		i2_setRangeValor
 25279 ;; This function is called by:
 25280 ;;		_TIMER0
 25281 ;; This function uses a non-reentrant model
 25282 ;;
 25283                           
 25284                           	psect	text66
 25285  003F16                     __ptext66:
 25286                           	opt stack 0
 25287  003F16                     _timer:
 25288                           	opt stack 20
 25289                           
 25290                           ;Controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 25291                           
 25292                           ;incstack = 0
 25293  003F16  503A               	movf	_t_controle_flap+1,w,c
 25294  003F18  E109               	bnz	i2l8809
 25295  003F1A  0E02               	movlw	2
 25296  003F1C  5C39               	subwf	_t_controle_flap,w,c
 25297  003F1E  B0D8               	btfsc	status,0,c
 25298  003F20  D005               	goto	i2l1098
 25299  003F22  0E00               	movlw	0
 25300  003F24  6E3A               	movwf	_t_controle_flap+1,c
 25301  003F26  0E00               	movlw	0
 25302  003F28  6E39               	movwf	_t_controle_flap,c
 25303  003F2A  D007               	goto	i2l1100
 25304  003F2C                     i2l1098:
 25305  003F2C                     i2l8809:
 25306  003F2C  0639               	decf	_t_controle_flap,f,c
 25307  003F2E  A0D8               	btfss	status,0,c
 25308  003F30  063A               	decf	_t_controle_flap+1,f,c
 25309  003F32  C039  F039         	movff	_t_controle_flap,_t_controle_flap
 25310  003F36  C03A  F03A         	movff	_t_controle_flap+1,_t_controle_flap+1
 25311  003F3A                     i2l1100:
 25312                           
 25313                           ;Controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 25314  003F3A  0E02               	movlw	2
 25315  003F3C  603F               	cpfslt	_t_controle_buzzer,c
 25316  003F3E  D005               	goto	i2l1102
 25317  003F40  0E00               	movlw	0
 25318  003F42  6E19               	movwf	_timer$1417+1,c
 25319  003F44  0E00               	movlw	0
 25320  003F46  6E18               	movwf	_timer$1417,c
 25321  003F48  D004               	goto	i2l1104
 25322  003F4A                     i2l1102:
 25323  003F4A  063F               	decf	_t_controle_buzzer,f,c
 25324  003F4C  C03F  F018         	movff	_t_controle_buzzer,_timer$1417
 25325  003F50  6A19               	clrf	_timer$1417+1,c
 25326  003F52                     i2l1104:
 25327  003F52  C018  F03F         	movff	_timer$1417,_t_controle_buzzer
 25328                           
 25329                           ;Controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 25330  003F56  5034               	movf	_t_controle_modo_seguranca+1,w,c
 25331  003F58  E109               	bnz	i2l8823
 25332  003F5A  0E02               	movlw	2
 25333  003F5C  5C33               	subwf	_t_controle_modo_seguranca,w,c
 25334  003F5E  B0D8               	btfsc	status,0,c
 25335  003F60  D005               	goto	i2l1106
 25336  003F62  0E00               	movlw	0
 25337  003F64  6E34               	movwf	_t_controle_modo_seguranca+1,c
 25338  003F66  0E00               	movlw	0
 25339  003F68  6E33               	movwf	_t_controle_modo_seguranca,c
 25340  003F6A  D007               	goto	i2l1108
 25341  003F6C                     i2l1106:
 25342  003F6C                     i2l8823:
 25343  003F6C  0633               	decf	_t_controle_modo_seguranca,f,c
 25344  003F6E  A0D8               	btfss	status,0,c
 25345  003F70  0634               	decf	_t_controle_modo_seguranca+1,f,c
 25346  003F72  C033  F033         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 25347  003F76  C034  F034         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 25348  003F7A                     i2l1108:
 25349                           
 25350                           ;Controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 25351  003F7A  0E02               	movlw	2
 25352  003F7C  603C               	cpfslt	_t_leitura_adc,c
 25353  003F7E  D005               	goto	i2l1110
 25354  003F80  0E00               	movlw	0
 25355  003F82  6E1B               	movwf	_timer$1418+1,c
 25356  003F84  0E00               	movlw	0
 25357  003F86  6E1A               	movwf	_timer$1418,c
 25358  003F88  D004               	goto	i2l1112
 25359  003F8A                     i2l1110:
 25360  003F8A  063C               	decf	_t_leitura_adc,f,c
 25361  003F8C  C03C  F01A         	movff	_t_leitura_adc,_timer$1418
 25362  003F90  6A1B               	clrf	_timer$1418+1,c
 25363  003F92                     i2l1112:
 25364  003F92  C01A  F03C         	movff	_timer$1418,_t_leitura_adc
 25365                           
 25366                           ;Controle.h: 47: if (t_controle_blink > 1) {
 25367  003F96  0E01               	movlw	1
 25368  003F98  643E               	cpfsgt	_t_controle_blink,c
 25369  003F9A  D002               	goto	i2l1113
 25370                           
 25371                           ;Controle.h: 48: --t_controle_blink;
 25372  003F9C  063E               	decf	_t_controle_blink,f,c
 25373                           
 25374                           ;Controle.h: 49: } else {
 25375  003F9E  D007               	goto	i2l1114
 25376  003FA0                     i2l1113:
 25377                           
 25378                           ;Controle.h: 50: blinkk = ~blinkk;
 25379  003FA0  B44F               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 25380  003FA2  D002               	goto	i2u1334_40
 25381  003FA4  844F               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 25382  003FA6  D001               	goto	i2u1335_45
 25383  003FA8                     i2u1334_40:
 25384  003FA8  944F               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 25385  003FAA                     i2u1335_45:
 25386                           
 25387                           ;Controle.h: 51: t_controle_blink = 5;
 25388  003FAA  0E05               	movlw	5
 25389  003FAC  6E3E               	movwf	_t_controle_blink,c
 25390  003FAE                     i2l1114:
 25391                           
 25392                           ;Controle.h: 52: }
 25393                           ;Controle.h: 54: base_sec++;
 25394  003FAE  2A4A               	incf	_base_sec,f,c
 25395                           
 25396                           ;Controle.h: 55: if (base_sec > 9) {
 25397  003FB0  0E09               	movlw	9
 25398  003FB2  644A               	cpfsgt	_base_sec,c
 25399  003FB4  0012               	return	
 25400                           
 25401                           ;Controle.h: 56: base_sec = 0;
 25402  003FB6  0E00               	movlw	0
 25403  003FB8  6E4A               	movwf	_base_sec,c
 25404                           
 25405                           ;Controle.h: 57: sec++;
 25406  003FBA  2A48               	incf	_sec,f,c
 25407                           
 25408                           ;Controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 25409  003FBC  0E02               	movlw	2
 25410  003FBE  0101               	movlb	1	; () banked
 25411  003FC0  6197               	cpfslt	_t_wifi_restart& (0+255),b
 25412  003FC2  D005               	goto	i2l1117
 25413                           
 25414                           ; BSR set to: 1
 25415  003FC4  0E00               	movlw	0
 25416  003FC6  6E1D               	movwf	_timer$1419+1,c
 25417  003FC8  0E00               	movlw	0
 25418  003FCA  6E1C               	movwf	_timer$1419,c
 25419  003FCC  D004               	goto	i2l1119
 25420  003FCE                     i2l1117:
 25421                           
 25422                           ; BSR set to: 1
 25423                           
 25424                           ; BSR set to: 1
 25425  003FCE  0797               	decf	_t_wifi_restart& (0+255),f,b
 25426  003FD0  C197  F01C         	movff	_t_wifi_restart,_timer$1419
 25427  003FD4  6A1D               	clrf	_timer$1419+1,c
 25428  003FD6                     i2l1119:
 25429                           
 25430                           ; BSR set to: 1
 25431                           
 25432                           ; BSR set to: 1
 25433  003FD6  C01C  F197         	movff	_timer$1419,_t_wifi_restart
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;Controle.h: 66: if (sec > 59) {
 25437  003FDA  0E3B               	movlw	59
 25438  003FDC  6448               	cpfsgt	_sec,c
 25439  003FDE  0012               	return	
 25440                           
 25441                           ; BSR set to: 1
 25442                           ;Controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 25443  003FE0  5038               	movf	_t_controle_religar_buzzer+1,w,c
 25444  003FE2  E109               	bnz	i2l8861
 25445  003FE4  0E02               	movlw	2
 25446  003FE6  5C37               	subwf	_t_controle_religar_buzzer,w,c
 25447  003FE8  B0D8               	btfsc	status,0,c
 25448  003FEA  D005               	goto	i2l1122
 25449                           
 25450                           ; BSR set to: 1
 25451  003FEC  0E00               	movlw	0
 25452  003FEE  6E38               	movwf	_t_controle_religar_buzzer+1,c
 25453  003FF0  0E00               	movlw	0
 25454  003FF2  6E37               	movwf	_t_controle_religar_buzzer,c
 25455  003FF4  D007               	goto	i2l1124
 25456  003FF6                     i2l1122:
 25457  003FF6                     i2l8861:
 25458                           
 25459                           ; BSR set to: 1
 25460  003FF6  0637               	decf	_t_controle_religar_buzzer,f,c
 25461  003FF8  A0D8               	btfss	status,0,c
 25462  003FFA  0638               	decf	_t_controle_religar_buzzer+1,f,c
 25463  003FFC  C037  F037         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 25464  004000  C038  F038         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 25465  004004                     i2l1124:
 25466                           
 25467                           ; BSR set to: 1
 25468                           ;Controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 25469                           
 25470                           ; BSR set to: 1
 25471  004004  5036               	movf	_t_controle_religar_ventoinha+1,w,c
 25472  004006  E109               	bnz	i2l8867
 25473  004008  0E02               	movlw	2
 25474  00400A  5C35               	subwf	_t_controle_religar_ventoinha,w,c
 25475  00400C  B0D8               	btfsc	status,0,c
 25476  00400E  D005               	goto	i2l1126
 25477                           
 25478                           ; BSR set to: 1
 25479  004010  0E00               	movlw	0
 25480  004012  6E36               	movwf	_t_controle_religar_ventoinha+1,c
 25481  004014  0E00               	movlw	0
 25482  004016  6E35               	movwf	_t_controle_religar_ventoinha,c
 25483  004018  D007               	goto	i2l1128
 25484  00401A                     i2l1126:
 25485  00401A                     i2l8867:
 25486                           
 25487                           ; BSR set to: 1
 25488  00401A  0635               	decf	_t_controle_religar_ventoinha,f,c
 25489  00401C  A0D8               	btfss	status,0,c
 25490  00401E  0636               	decf	_t_controle_religar_ventoinha+1,f,c
 25491  004020  C035  F035         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 25492  004024  C036  F036         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 25493  004028                     i2l1128:
 25494                           
 25495                           ; BSR set to: 1
 25496                           ;Controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 25497                           
 25498                           ; BSR set to: 1
 25499  004028  0E64               	movlw	100
 25500  00402A  0100               	movlb	0	; () banked
 25501  00402C  19EA               	xorwf	_tempajt& (0+255),w,b
 25502  00402E  B4D8               	btfsc	status,2,c
 25503  004030  D057               	goto	i2l1131
 25504                           
 25505                           ; BSR set to: 0
 25506  004032  0E6E               	movlw	110
 25507  004034  19EA               	xorwf	_tempajt& (0+255),w,b
 25508  004036  B4D8               	btfsc	status,2,c
 25509  004038  D053               	goto	i2l1131
 25510                           
 25511                           ; BSR set to: 0
 25512  00403A  0E85               	movlw	133
 25513  00403C  19EA               	xorwf	_tempajt& (0+255),w,b
 25514  00403E  B4D8               	btfsc	status,2,c
 25515  004040  D04F               	goto	i2l1131
 25516                           
 25517                           ; BSR set to: 0
 25518  004042  05FE               	decf	_f_falta_energia& (0+255),w,b
 25519  004044  A4D8               	btfss	status,2,c
 25520  004046  D04C               	goto	i2l1131
 25521                           
 25522                           ; BSR set to: 0
 25523                           ;Controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 25524  004048  51EA               	movf	_tempajt& (0+255),w,b
 25525  00404A  6E11               	movwf	??_timer& (0+255),c
 25526  00404C  6A12               	clrf	(??_timer+1)& (0+255),c
 25527  00404E  51ED               	movf	_h_subir_temp_automatica& (0+255),w,b
 25528  004050  C0FD  F013         	movff	_temp,??_timer+2
 25529  004054  6A14               	clrf	(??_timer+3)& (0+255),c
 25530  004056  2613               	addwf	??_timer+2,f,c
 25531  004058  0E00               	movlw	0
 25532  00405A  2214               	addwfc	??_timer+3,f,c
 25533  00405C  5011               	movf	??_timer,w,c
 25534  00405E  5C13               	subwf	??_timer+2,w,c
 25535  004060  5014               	movf	??_timer+3,w,c
 25536  004062  0A80               	xorlw	128
 25537  004064  6E15               	movwf	(??_timer+4)& (0+255),c
 25538  004066  5012               	movf	??_timer+1,w,c
 25539  004068  0A80               	xorlw	128
 25540  00406A  5815               	subwfb	(??_timer+4)& (0+255),w,c
 25541  00406C  A0D8               	btfss	status,0,c
 25542  00406E  D038               	goto	i2l1131
 25543                           
 25544                           ; BSR set to: 0
 25545  004070  51ED               	movf	_h_subir_temp_automatica& (0+255),w,b
 25546  004072  6E11               	movwf	??_timer& (0+255),c
 25547  004074  6A12               	clrf	(??_timer+1)& (0+255),c
 25548  004076  1E11               	comf	??_timer,f,c
 25549  004078  1E12               	comf	??_timer+1,f,c
 25550  00407A  4A11               	infsnz	??_timer,f,c
 25551  00407C  2A12               	incf	??_timer+1,f,c
 25552  00407E  51FD               	movf	_temp& (0+255),w,b
 25553  004080  6E13               	movwf	(??_timer+2)& (0+255),c
 25554  004082  6A14               	clrf	(??_timer+3)& (0+255),c
 25555  004084  5011               	movf	??_timer,w,c
 25556  004086  2613               	addwf	??_timer+2,f,c
 25557  004088  5012               	movf	??_timer+1,w,c
 25558  00408A  2214               	addwfc	??_timer+3,f,c
 25559  00408C  51EA               	movf	_tempajt& (0+255),w,b
 25560  00408E  6E15               	movwf	(??_timer+4)& (0+255),c
 25561  004090  6A16               	clrf	(??_timer+5)& (0+255),c
 25562  004092  5013               	movf	??_timer+2,w,c
 25563  004094  5C15               	subwf	??_timer+4,w,c
 25564  004096  5016               	movf	??_timer+5,w,c
 25565  004098  0A80               	xorlw	128
 25566  00409A  6E17               	movwf	(??_timer+6)& (0+255),c
 25567  00409C  5014               	movf	??_timer+3,w,c
 25568  00409E  0A80               	xorlw	128
 25569  0040A0  5817               	subwfb	(??_timer+6)& (0+255),w,c
 25570  0040A2  A0D8               	btfss	status,0,c
 25571  0040A4  D01D               	goto	i2l1131
 25572                           
 25573                           ; BSR set to: 0
 25574  0040A6  0E96               	movlw	150
 25575  0040A8  61EA               	cpfslt	_tempajt& (0+255),b
 25576  0040AA  D01A               	goto	i2l1131
 25577                           
 25578                           ; BSR set to: 0
 25579  0040AC  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25580  0040AE  B4D8               	btfsc	status,2,c
 25581  0040B0  D017               	goto	i2l1131
 25582                           
 25583                           ; BSR set to: 0
 25584  0040B2  51F8               	movf	_trava_fase& (0+255),w,b
 25585  0040B4  A4D8               	btfss	status,2,c
 25586  0040B6  D014               	goto	i2l1131
 25587                           
 25588                           ; BSR set to: 0
 25589                           ;Controle.h: 75: t_controle_temp_automatica++;
 25590  0040B8  2A3D               	incf	_t_controle_temp_automatica,f,c
 25591                           
 25592                           ; BSR set to: 0
 25593                           ;Controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 25594  0040BA  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25595  0040BC  5C3D               	subwf	_t_controle_temp_automatica,w,c
 25596  0040BE  A0D8               	btfss	status,0,c
 25597  0040C0  D00F               	goto	i2l1131
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;Controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 25601  0040C2  0EEA               	movlw	low _tempajt
 25602  0040C4  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25603  0040C6  0E00               	movlw	high _tempajt
 25604  0040C8  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25605  0040CA  0E55               	movlw	85
 25606  0040CC  6E08               	movwf	i2setRangeValor@_min,c
 25607  0040CE  0E97               	movlw	151
 25608  0040D0  6E09               	movwf	i2setRangeValor@_max,c
 25609  0040D2  0E01               	movlw	1
 25610  0040D4  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25611  0040D6  0E2B               	movlw	43
 25612  0040D8  EC6C  F029         	call	i2_setRangeValor
 25613                           
 25614                           ;Controle.h: 78: t_controle_temp_automatica = 0;
 25615  0040DC  0E00               	movlw	0
 25616  0040DE  6E3D               	movwf	_t_controle_temp_automatica,c
 25617  0040E0                     i2l1131:
 25618                           
 25619                           ;Controle.h: 79: }
 25620                           ;Controle.h: 80: }
 25621                           ;Controle.h: 81: }
 25622                           ;Controle.h: 83: sec = 0;
 25623  0040E0  0E00               	movlw	0
 25624  0040E2  6E48               	movwf	_sec,c
 25625                           
 25626                           ;Controle.h: 84: min++;
 25627  0040E4  2A47               	incf	_min,f,c
 25628                           
 25629                           ;Controle.h: 85: if (min > 59) {
 25630  0040E6  0E3B               	movlw	59
 25631  0040E8  6447               	cpfsgt	_min,c
 25632  0040EA  0012               	return	
 25633                           
 25634                           ;Controle.h: 86: min = 0;
 25635  0040EC  0E00               	movlw	0
 25636  0040EE  6E47               	movwf	_min,c
 25637                           
 25638                           ;Controle.h: 87: hor++;
 25639  0040F0  2A46               	incf	_hor,f,c
 25640                           
 25641                           ;Controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 25642  0040F2  0100               	movlb	0	; () banked
 25643  0040F4  51F8               	movf	_trava_fase& (0+255),w,b
 25644  0040F6  A4D8               	btfss	status,2,c
 25645  0040F8  D062               	goto	i2l1142
 25646                           
 25647                           ; BSR set to: 0
 25648  0040FA  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25649  0040FC  B4D8               	btfsc	status,2,c
 25650  0040FE  D05F               	goto	i2l1142
 25651                           
 25652                           ; BSR set to: 0
 25653  004100  05FE               	decf	_f_falta_energia& (0+255),w,b
 25654  004102  A4D8               	btfss	status,2,c
 25655  004104  D05C               	goto	i2l1142
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;Controle.h: 91: if (tempajt == 100 && fase == 1) {
 25659  004106  0E64               	movlw	100
 25660  004108  19EA               	xorwf	_tempajt& (0+255),w,b
 25661  00410A  A4D8               	btfss	status,2,c
 25662  00410C  D019               	goto	i2l1134
 25663                           
 25664                           ; BSR set to: 0
 25665  00410E  05EC               	decf	_fase& (0+255),w,b
 25666  004110  A4D8               	btfss	status,2,c
 25667  004112  D016               	goto	i2l1134
 25668                           
 25669                           ; BSR set to: 0
 25670                           ;Controle.h: 92: t_controle_fim_fases++;
 25671  004114  2A40               	incf	_t_controle_fim_fases,f,c
 25672                           
 25673                           ; BSR set to: 0
 25674                           ;Controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 25675  004116  504E               	movf	_t_fim_fase1,w,c
 25676  004118  5C40               	subwf	_t_controle_fim_fases,w,c
 25677  00411A  A0D8               	btfss	status,0,c
 25678  00411C  D050               	goto	i2l1142
 25679                           
 25680                           ; BSR set to: 0
 25681  00411E  504E               	movf	_t_fim_fase1,w,c
 25682  004120  B4D8               	btfsc	status,2,c
 25683  004122  D04D               	goto	i2l1142
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;Controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 25687  004124  0EEA               	movlw	low _tempajt
 25688  004126  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25689  004128  0E00               	movlw	high _tempajt
 25690  00412A  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25691  00412C  0E55               	movlw	85
 25692  00412E  6E08               	movwf	i2setRangeValor@_min,c
 25693  004130  0E97               	movlw	151
 25694  004132  6E09               	movwf	i2setRangeValor@_max,c
 25695  004134  0E01               	movlw	1
 25696  004136  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25697  004138  0E2B               	movlw	43
 25698  00413A  EC6C  F029         	call	i2_setRangeValor
 25699  00413E  D03D               	goto	i2l1140
 25700  004140                     i2l1134:
 25701  004140  0E6E               	movlw	110
 25702  004142  0100               	movlb	0	; () banked
 25703  004144  19EA               	xorwf	_tempajt& (0+255),w,b
 25704  004146  A4D8               	btfss	status,2,c
 25705  004148  D01A               	goto	i2l1137
 25706                           
 25707                           ; BSR set to: 0
 25708  00414A  0E02               	movlw	2
 25709  00414C  19EC               	xorwf	_fase& (0+255),w,b
 25710  00414E  A4D8               	btfss	status,2,c
 25711  004150  D016               	goto	i2l1137
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;Controle.h: 98: t_controle_fim_fases++;
 25715  004152  2A40               	incf	_t_controle_fim_fases,f,c
 25716                           
 25717                           ; BSR set to: 0
 25718                           ;Controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 25719  004154  504D               	movf	_t_fim_fase2,w,c
 25720  004156  5C40               	subwf	_t_controle_fim_fases,w,c
 25721  004158  A0D8               	btfss	status,0,c
 25722  00415A  D031               	goto	i2l1142
 25723                           
 25724                           ; BSR set to: 0
 25725  00415C  504D               	movf	_t_fim_fase2,w,c
 25726  00415E  B4D8               	btfsc	status,2,c
 25727  004160  D02E               	goto	i2l1142
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;Controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 25731  004162  0EEA               	movlw	low _tempajt
 25732  004164  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25733  004166  0E00               	movlw	high _tempajt
 25734  004168  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25735  00416A  0E55               	movlw	85
 25736  00416C  6E08               	movwf	i2setRangeValor@_min,c
 25737  00416E  0E97               	movlw	151
 25738  004170  6E09               	movwf	i2setRangeValor@_max,c
 25739  004172  0E01               	movlw	1
 25740  004174  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25741  004176  0E2B               	movlw	43
 25742  004178  EC6C  F029         	call	i2_setRangeValor
 25743  00417C  D01E               	goto	i2l1140
 25744  00417E                     i2l1137:
 25745  00417E  0E85               	movlw	133
 25746  004180  0100               	movlb	0	; () banked
 25747  004182  19EA               	xorwf	_tempajt& (0+255),w,b
 25748  004184  A4D8               	btfss	status,2,c
 25749  004186  D019               	goto	i2l1140
 25750                           
 25751                           ; BSR set to: 0
 25752  004188  0E03               	movlw	3
 25753  00418A  19EC               	xorwf	_fase& (0+255),w,b
 25754  00418C  A4D8               	btfss	status,2,c
 25755  00418E  D015               	goto	i2l1140
 25756                           
 25757                           ; BSR set to: 0
 25758                           ;Controle.h: 104: t_controle_fim_fases++;
 25759  004190  2A40               	incf	_t_controle_fim_fases,f,c
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;Controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 25763  004192  504C               	movf	_t_fim_fase3,w,c
 25764  004194  5C40               	subwf	_t_controle_fim_fases,w,c
 25765  004196  A0D8               	btfss	status,0,c
 25766  004198  D012               	goto	i2l1142
 25767                           
 25768                           ; BSR set to: 0
 25769  00419A  504C               	movf	_t_fim_fase3,w,c
 25770  00419C  B4D8               	btfsc	status,2,c
 25771  00419E  D00F               	goto	i2l1142
 25772                           
 25773                           ; BSR set to: 0
 25774                           ;Controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 25775  0041A0  0EEA               	movlw	low _tempajt
 25776  0041A2  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25777  0041A4  0E00               	movlw	high _tempajt
 25778  0041A6  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25779  0041A8  0E55               	movlw	85
 25780  0041AA  6E08               	movwf	i2setRangeValor@_min,c
 25781  0041AC  0E97               	movlw	151
 25782  0041AE  6E09               	movwf	i2setRangeValor@_max,c
 25783  0041B0  0E01               	movlw	1
 25784  0041B2  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25785  0041B4  0E2B               	movlw	43
 25786  0041B6  EC6C  F029         	call	i2_setRangeValor
 25787  0041BA                     i2l1140:
 25788                           
 25789                           ;Controle.h: 110: t_controle_fim_fases = 0;
 25790  0041BA  0E00               	movlw	0
 25791  0041BC  6E40               	movwf	_t_controle_fim_fases,c
 25792  0041BE                     i2l1142:
 25793                           
 25794                           ;Controle.h: 111: }
 25795                           ;Controle.h: 112: }
 25796                           ;Controle.h: 114: if (hor > 23) {
 25797  0041BE  0E17               	movlw	23
 25798  0041C0  6446               	cpfsgt	_hor,c
 25799  0041C2  0012               	return	
 25800                           
 25801                           ;Controle.h: 115: hor = 0;
 25802  0041C4  0E00               	movlw	0
 25803  0041C6  6E46               	movwf	_hor,c
 25804  0041C8  0012               	return	
 25805  0041CA                     __end_of_timer:
 25806                           	opt stack 0
 25807                           tosu	equ	0xFFF
 25808                           tosh	equ	0xFFE
 25809                           tosl	equ	0xFFD
 25810                           pclatu	equ	0xFFB
 25811                           pclath	equ	0xFFA
 25812                           tblptru	equ	0xFF8
 25813                           tblptrh	equ	0xFF7
 25814                           tblptrl	equ	0xFF6
 25815                           tablat	equ	0xFF5
 25816                           prodh	equ	0xFF4
 25817                           prodl	equ	0xFF3
 25818                           intcon	equ	0xFF2
 25819                           intcon2	equ	0xFF1
 25820                           intcon3	equ	0xFF0
 25821                           indf0	equ	0xFEF
 25822                           postinc0	equ	0xFEE
 25823                           fsr0h	equ	0xFEA
 25824                           fsr0l	equ	0xFE9
 25825                           wreg	equ	0xFE8
 25826                           indf1	equ	0xFE7
 25827                           postdec1	equ	0xFE5
 25828                           fsr1h	equ	0xFE2
 25829                           fsr1l	equ	0xFE1
 25830                           indf2	equ	0xFDF
 25831                           postinc2	equ	0xFDE
 25832                           postdec2	equ	0xFDD
 25833                           fsr2h	equ	0xFDA
 25834                           fsr2l	equ	0xFD9
 25835                           status	equ	0xFD8
 25836                           
 25837 ;; *************** function i2_setRangeValor *****************
 25838 ;; Defined at:
 25839 ;;		line 76 in file "src/FuncoesControlador.h"
 25840 ;; Parameters:    Size  Location     Type
 25841 ;;  _acao           1    wreg     unsigned char 
 25842 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 25843 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 25844 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1),
      + 
 25845 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 25846 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 25847 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 25848 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 25849 ;;		 -> clima(1), 
 25850 ;;  _min            1    7[COMRAM] unsigned char 
 25851 ;;  _max            1    8[COMRAM] unsigned char 
 25852 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 25853 ;; Auto vars:     Size  Location     Type
 25854 ;;  _acao           1   13[COMRAM] unsigned char 
 25855 ;;  setRangeValo    2   14[COMRAM] int 
 25856 ;; Return value:  Size  Location     Type
 25857 ;;                  1    wreg      void 
 25858 ;; Registers used:
 25859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25860 ;; Tracked objects:
 25861 ;;		On entry : 0/0
 25862 ;;		On exit  : 0/0
 25863 ;;		Unchanged: 0/0
 25864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25865 ;;      Params:         5       0       0       0       0       0       0       0       0
 25866 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25867 ;;      Temps:          3       0       0       0       0       0       0       0       0
 25868 ;;      Totals:        11       0       0       0       0       0       0       0       0
 25869 ;;Total ram usage:       11 bytes
 25870 ;; Hardware stack levels used:    1
 25871 ;; Hardware stack levels required when called:    3
 25872 ;; This function calls:
 25873 ;;		i2_writeEEPROM_ext
 25874 ;; This function is called by:
 25875 ;;		_timer
 25876 ;; This function uses a non-reentrant model
 25877 ;;
 25878                           
 25879                           	psect	text67
 25880  0052D8                     __ptext67:
 25881                           	opt stack 0
 25882  0052D8                     i2_setRangeValor:
 25883                           	opt stack 20
 25884                           
 25885                           ;incstack = 0
 25886                           ;i2setRangeValor@_acao stored from wreg
 25887  0052D8  6E0E               	movwf	i2setRangeValor@_acao,c
 25888                           
 25889                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 25890  0052DA  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25891  0052DE  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25892  0052E2  50DF               	movf	indf2,w,c
 25893  0052E4  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25894  0052E6  500B               	movf	??i2_setRangeValor,w,c
 25895  0052E8  6E0F               	movwf	i2setRangeValor@_aux,c
 25896  0052EA  6A10               	clrf	i2setRangeValor@_aux+1,c
 25897                           
 25898                           ;FuncoesControlador.h: 78: switch (_acao) {
 25899  0052EC  D02C               	goto	i2l934
 25900  0052EE                     
 25901                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 25902  0052EE  5009               	movf	i2setRangeValor@_max,w,c
 25903  0052F0  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25904  0052F2  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25905  0052F4  500B               	movf	??i2_setRangeValor,w,c
 25906  0052F6  5C0F               	subwf	i2setRangeValor@_aux,w,c
 25907  0052F8  5010               	movf	i2setRangeValor@_aux+1,w,c
 25908  0052FA  0A80               	xorlw	128
 25909  0052FC  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25910  0052FE  500C               	movf	??i2_setRangeValor+1,w,c
 25911  005300  0A80               	xorlw	128
 25912  005302  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25913  005304  B0D8               	btfsc	status,0,c
 25914  005306  D003               	goto	i2l937
 25915  005308  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 25916  00530A  2A10               	incf	i2setRangeValor@_aux+1,f,c
 25917  00530C  D013               	goto	L32
 25918  00530E                     i2l937:
 25919  00530E  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 25920  005312  D017               	goto	L33
 25921  005314                     
 25922                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 25923  005314  5008               	movf	i2setRangeValor@_min,w,c
 25924  005316  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25925  005318  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25926  00531A  500F               	movf	i2setRangeValor@_aux,w,c
 25927  00531C  5C0B               	subwf	??i2_setRangeValor,w,c
 25928  00531E  500C               	movf	??i2_setRangeValor+1,w,c
 25929  005320  0A80               	xorlw	128
 25930  005322  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25931  005324  5010               	movf	i2setRangeValor@_aux+1,w,c
 25932  005326  0A80               	xorlw	128
 25933  005328  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25934  00532A  B0D8               	btfsc	status,0,c
 25935  00532C  D008               	goto	i2l943
 25936  00532E  060F               	decf	i2setRangeValor@_aux,f,c
 25937  005330  A0D8               	btfss	status,0,c
 25938  005332  0610               	decf	i2setRangeValor@_aux+1,f,c
 25939  005334                     L32:
 25940  005334  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 25941  005338  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 25942  00533C  D00B               	goto	i2l940
 25943  00533E                     i2l943:
 25944  00533E  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 25945  005342                     L33:
 25946  005342  6A10               	clrf	i2setRangeValor@_aux+1,c
 25947                           
 25948                           ;FuncoesControlador.h: 85: }
 25949                           
 25950                           ;FuncoesControlador.h: 84: break;
 25951  005344  D007               	goto	i2l940
 25952  005346                     i2l934:
 25953  005346  500E               	movf	i2setRangeValor@_acao,w,c
 25954                           
 25955                           ; Switch size 1, requested type "space"
 25956                           ; Number of cases is 2, Range of values is 43 to 45
 25957                           ; switch strategies available:
 25958                           ; Name         Instructions Cycles
 25959                           ; simple_byte            7     4 (average)
 25960                           ;	Chosen strategy is simple_byte
 25961  005348  0A2B               	xorlw	43	; case 43
 25962  00534A  B4D8               	btfsc	status,2,c
 25963  00534C  D7D0               	goto	i2l935
 25964  00534E  0A06               	xorlw	6	; case 45
 25965  005350  B4D8               	btfsc	status,2,c
 25966  005352  D7E0               	goto	i2l941
 25967  005354                     i2l940:
 25968                           
 25969                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 25970  005354  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25971  005356  B4D8               	btfsc	status,2,c
 25972  005358  D005               	goto	i2l946
 25973                           
 25974                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 25975  00535A  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 25976  00535E  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25977  005360  ECD0  F02D         	call	i2_writeEEPROM_ext
 25978  005364                     i2l946:
 25979                           
 25980                           ;FuncoesControlador.h: 88: }
 25981                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 25982  005364  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25983  005368  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25984  00536C  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 25985  005370  0012               	return		;funcret
 25986  005372                     __end_ofi2_setRangeValor:
 25987                           	opt stack 0
 25988                           tosu	equ	0xFFF
 25989                           tosh	equ	0xFFE
 25990                           tosl	equ	0xFFD
 25991                           pclatu	equ	0xFFB
 25992                           pclath	equ	0xFFA
 25993                           tblptru	equ	0xFF8
 25994                           tblptrh	equ	0xFF7
 25995                           tblptrl	equ	0xFF6
 25996                           tablat	equ	0xFF5
 25997                           prodh	equ	0xFF4
 25998                           prodl	equ	0xFF3
 25999                           intcon	equ	0xFF2
 26000                           intcon2	equ	0xFF1
 26001                           intcon3	equ	0xFF0
 26002                           indf0	equ	0xFEF
 26003                           postinc0	equ	0xFEE
 26004                           fsr0h	equ	0xFEA
 26005                           fsr0l	equ	0xFE9
 26006                           wreg	equ	0xFE8
 26007                           indf1	equ	0xFE7
 26008                           postdec1	equ	0xFE5
 26009                           fsr1h	equ	0xFE2
 26010                           fsr1l	equ	0xFE1
 26011                           indf2	equ	0xFDF
 26012                           postinc2	equ	0xFDE
 26013                           postdec2	equ	0xFDD
 26014                           fsr2h	equ	0xFDA
 26015                           fsr2l	equ	0xFD9
 26016                           status	equ	0xFD8
 26017                           
 26018 ;; *************** function i2_writeEEPROM_ext *****************
 26019 ;; Defined at:
 26020 ;;		line 14 in file "src/Eeprom_ext.h"
 26021 ;; Parameters:    Size  Location     Type
 26022 ;;  adress          1    wreg     unsigned char 
 26023 ;;  data            1    3[COMRAM] unsigned char 
 26024 ;; Auto vars:     Size  Location     Type
 26025 ;;  adress          1    4[COMRAM] unsigned char 
 26026 ;; Return value:  Size  Location     Type
 26027 ;;                  1    wreg      void 
 26028 ;; Registers used:
 26029 ;;		wreg, status,2, status,0, cstack
 26030 ;; Tracked objects:
 26031 ;;		On entry : 0/0
 26032 ;;		On exit  : 0/0
 26033 ;;		Unchanged: 0/0
 26034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26035 ;;      Params:         1       0       0       0       0       0       0       0       0
 26036 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26038 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26039 ;;Total ram usage:        2 bytes
 26040 ;; Hardware stack levels used:    1
 26041 ;; Hardware stack levels required when called:    2
 26042 ;; This function calls:
 26043 ;;		i2_I2C_Start
 26044 ;;		i2_I2C_Stop
 26045 ;;		i2_I2C_Write
 26046 ;;		i2_delay
 26047 ;; This function is called by:
 26048 ;;		i2_setRangeValor
 26049 ;; This function uses a non-reentrant model
 26050 ;;
 26051                           
 26052                           	psect	text68
 26053  005BA0                     __ptext68:
 26054                           	opt stack 0
 26055  005BA0                     i2_writeEEPROM_ext:
 26056                           	opt stack 20
 26057                           
 26058                           ;incstack = 0
 26059                           ;i2writeEEPROM_ext@adress stored from wreg
 26060  005BA0  6E05               	movwf	i2writeEEPROM_ext@adress,c
 26061                           
 26062                           ;Eeprom_ext.h: 16: I2C_Start();
 26063  005BA2  EC8C  F02F         	call	i2_I2C_Start	;wreg free
 26064                           
 26065                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 26066  005BA6  0E00               	movlw	0
 26067  005BA8  6E03               	movwf	i2I2C_Write@d+1,c
 26068  005BAA  0EA0               	movlw	160
 26069  005BAC  6E02               	movwf	i2I2C_Write@d,c
 26070  005BAE  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26071                           
 26072                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 26073  005BB2  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 26074  005BB6  6A03               	clrf	i2I2C_Write@d+1,c
 26075  005BB8  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26076                           
 26077                           ;Eeprom_ext.h: 20: I2C_Write(data);
 26078  005BBC  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 26079  005BC0  6A03               	clrf	i2I2C_Write@d+1,c
 26080  005BC2  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26081                           
 26082                           ;Eeprom_ext.h: 21: I2C_Stop();
 26083  005BC6  EC88  F02F         	call	i2_I2C_Stop	;wreg free
 26084                           
 26085                           ;Eeprom_ext.h: 22: delay(105);
 26086  005BCA  0E00               	movlw	0
 26087  005BCC  6E02               	movwf	i2delay@x+1,c
 26088  005BCE  0E69               	movlw	105
 26089  005BD0  6E01               	movwf	i2delay@x,c
 26090  005BD2  ECF7  F02E         	call	i2_delay	;wreg free
 26091  005BD6  0012               	return		;funcret
 26092  005BD8                     __end_ofi2_writeEEPROM_ext:
 26093                           	opt stack 0
 26094                           tosu	equ	0xFFF
 26095                           tosh	equ	0xFFE
 26096                           tosl	equ	0xFFD
 26097                           pclatu	equ	0xFFB
 26098                           pclath	equ	0xFFA
 26099                           tblptru	equ	0xFF8
 26100                           tblptrh	equ	0xFF7
 26101                           tblptrl	equ	0xFF6
 26102                           tablat	equ	0xFF5
 26103                           prodh	equ	0xFF4
 26104                           prodl	equ	0xFF3
 26105                           intcon	equ	0xFF2
 26106                           intcon2	equ	0xFF1
 26107                           intcon3	equ	0xFF0
 26108                           indf0	equ	0xFEF
 26109                           postinc0	equ	0xFEE
 26110                           fsr0h	equ	0xFEA
 26111                           fsr0l	equ	0xFE9
 26112                           wreg	equ	0xFE8
 26113                           indf1	equ	0xFE7
 26114                           postdec1	equ	0xFE5
 26115                           fsr1h	equ	0xFE2
 26116                           fsr1l	equ	0xFE1
 26117                           indf2	equ	0xFDF
 26118                           postinc2	equ	0xFDE
 26119                           postdec2	equ	0xFDD
 26120                           fsr2h	equ	0xFDA
 26121                           fsr2l	equ	0xFD9
 26122                           status	equ	0xFD8
 26123                           
 26124 ;; *************** function i2_delay *****************
 26125 ;; Defined at:
 26126 ;;		line 18 in file "src/function.c"
 26127 ;; Parameters:    Size  Location     Type
 26128 ;;  x               2    0[COMRAM] int 
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;		None
 26131 ;; Return value:  Size  Location     Type
 26132 ;;                  1    wreg      void 
 26133 ;; Registers used:
 26134 ;;		wreg, status,2, status,0
 26135 ;; Tracked objects:
 26136 ;;		On entry : 0/0
 26137 ;;		On exit  : 0/0
 26138 ;;		Unchanged: 0/0
 26139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26140 ;;      Params:         2       0       0       0       0       0       0       0       0
 26141 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26142 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26143 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26144 ;;Total ram usage:        3 bytes
 26145 ;; Hardware stack levels used:    1
 26146 ;; This function calls:
 26147 ;;		Nothing
 26148 ;; This function is called by:
 26149 ;;		i2_writeEEPROM_ext
 26150 ;; This function uses a non-reentrant model
 26151 ;;
 26152                           
 26153                           	psect	text69
 26154  005DEE                     __ptext69:
 26155                           	opt stack 0
 26156  005DEE                     i2_delay:
 26157                           	opt stack 21
 26158                           
 26159                           ;function.c: 19: while (x--) {
 26160                           
 26161                           ;incstack = 0
 26162  005DEE  D008               	goto	i2l1477
 26163  005DF0                     i2l6477:
 26164                           
 26165                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 26166  005DF0  0E03               	movlw	3
 26167  005DF2  6E03               	movwf	??i2_delay& (0+255),c
 26168  005DF4  0E98               	movlw	152
 26169  005DF6                     i2u1547_47:
 26170  005DF6  2EE8               	decfsz	wreg,f,c
 26171  005DF8  D7FE               	bra	i2u1547_47
 26172  005DFA  2E03               	decfsz	??i2_delay& (0+255),f,c
 26173  005DFC  D7FC               	bra	i2u1547_47
 26174  005DFE  0004               	clrwdt		;# 
 26175  005E00                     i2l1477:
 26176  005E00  0601               	decf	i2delay@x,f,c
 26177  005E02  A0D8               	btfss	status,0,c
 26178  005E04  0602               	decf	i2delay@x+1,f,c
 26179  005E06  2801               	incf	i2delay@x,w,c
 26180  005E08  E1F3               	bnz	i2l6477
 26181  005E0A  2802               	incf	i2delay@x+1,w,c
 26182  005E0C  B4D8               	btfsc	status,2,c
 26183  005E0E  0012               	return	
 26184  005E10  D7EF               	goto	i2l1478
 26185  005E12                     __end_ofi2_delay:
 26186                           	opt stack 0
 26187                           tosu	equ	0xFFF
 26188                           tosh	equ	0xFFE
 26189                           tosl	equ	0xFFD
 26190                           pclatu	equ	0xFFB
 26191                           pclath	equ	0xFFA
 26192                           tblptru	equ	0xFF8
 26193                           tblptrh	equ	0xFF7
 26194                           tblptrl	equ	0xFF6
 26195                           tablat	equ	0xFF5
 26196                           prodh	equ	0xFF4
 26197                           prodl	equ	0xFF3
 26198                           intcon	equ	0xFF2
 26199                           intcon2	equ	0xFF1
 26200                           intcon3	equ	0xFF0
 26201                           indf0	equ	0xFEF
 26202                           postinc0	equ	0xFEE
 26203                           fsr0h	equ	0xFEA
 26204                           fsr0l	equ	0xFE9
 26205                           wreg	equ	0xFE8
 26206                           indf1	equ	0xFE7
 26207                           postdec1	equ	0xFE5
 26208                           fsr1h	equ	0xFE2
 26209                           fsr1l	equ	0xFE1
 26210                           indf2	equ	0xFDF
 26211                           postinc2	equ	0xFDE
 26212                           postdec2	equ	0xFDD
 26213                           fsr2h	equ	0xFDA
 26214                           fsr2l	equ	0xFD9
 26215                           status	equ	0xFD8
 26216                           
 26217 ;; *************** function _readButtons *****************
 26218 ;; Defined at:
 26219 ;;		line 19 in file "src/Teclado.h"
 26220 ;; Parameters:    Size  Location     Type
 26221 ;;		None
 26222 ;; Auto vars:     Size  Location     Type
 26223 ;;		None
 26224 ;; Return value:  Size  Location     Type
 26225 ;;                  1    wreg      void 
 26226 ;; Registers used:
 26227 ;;		wreg, status,2, status,0, cstack
 26228 ;; Tracked objects:
 26229 ;;		On entry : 0/0
 26230 ;;		On exit  : 0/0
 26231 ;;		Unchanged: 0/0
 26232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26233 ;;      Params:         0       0       0       0       0       0       0       0       0
 26234 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26236 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26237 ;;Total ram usage:        0 bytes
 26238 ;; Hardware stack levels used:    1
 26239 ;; Hardware stack levels required when called:    2
 26240 ;; This function calls:
 26241 ;;		i2_I2C_Read
 26242 ;;		i2_I2C_Start
 26243 ;;		i2_I2C_Stop
 26244 ;;		i2_I2C_Write
 26245 ;; This function is called by:
 26246 ;;		_TIMER0
 26247 ;; This function uses a non-reentrant model
 26248 ;;
 26249                           
 26250                           	psect	text70
 26251  005D7A                     __ptext70:
 26252                           	opt stack 0
 26253  005D7A                     _readButtons:
 26254                           	opt stack 22
 26255                           
 26256                           ;Teclado.h: 20: I2C_Start();
 26257                           
 26258                           ;incstack = 0
 26259  005D7A  EC8C  F02F         	call	i2_I2C_Start	;wreg free
 26260                           
 26261                           ;Teclado.h: 21: I2C_Write(0x4F);
 26262  005D7E  0E00               	movlw	0
 26263  005D80  6E03               	movwf	i2I2C_Write@d+1,c
 26264  005D82  0E4F               	movlw	79
 26265  005D84  6E02               	movwf	i2I2C_Write@d,c
 26266  005D86  EC77  F02F         	call	i2_I2C_Write	;wreg free
 26267                           
 26268                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 26269  005D8A  0E00               	movlw	0
 26270  005D8C  6E03               	movwf	i2I2C_Read@a+1,c
 26271  005D8E  0E00               	movlw	0
 26272  005D90  6E02               	movwf	i2I2C_Read@a,c
 26273  005D92  EC7D  F02E         	call	i2_I2C_Read	;wreg free
 26274  005D96  5002               	movf	?i2_I2C_Read,w,c
 26275  005D98  0AFF               	xorlw	255
 26276  005D9A  6E44               	movwf	_bt_flag,c
 26277                           
 26278                           ;Teclado.h: 23: I2C_Stop();
 26279  005D9C  EC88  F02F         	call	i2_I2C_Stop	;wreg free
 26280  005DA0  0012               	return		;funcret
 26281  005DA2                     __end_of_readButtons:
 26282                           	opt stack 0
 26283                           tosu	equ	0xFFF
 26284                           tosh	equ	0xFFE
 26285                           tosl	equ	0xFFD
 26286                           pclatu	equ	0xFFB
 26287                           pclath	equ	0xFFA
 26288                           tblptru	equ	0xFF8
 26289                           tblptrh	equ	0xFF7
 26290                           tblptrl	equ	0xFF6
 26291                           tablat	equ	0xFF5
 26292                           prodh	equ	0xFF4
 26293                           prodl	equ	0xFF3
 26294                           intcon	equ	0xFF2
 26295                           intcon2	equ	0xFF1
 26296                           intcon3	equ	0xFF0
 26297                           indf0	equ	0xFEF
 26298                           postinc0	equ	0xFEE
 26299                           fsr0h	equ	0xFEA
 26300                           fsr0l	equ	0xFE9
 26301                           wreg	equ	0xFE8
 26302                           indf1	equ	0xFE7
 26303                           postdec1	equ	0xFE5
 26304                           fsr1h	equ	0xFE2
 26305                           fsr1l	equ	0xFE1
 26306                           indf2	equ	0xFDF
 26307                           postinc2	equ	0xFDE
 26308                           postdec2	equ	0xFDD
 26309                           fsr2h	equ	0xFDA
 26310                           fsr2l	equ	0xFD9
 26311                           status	equ	0xFD8
 26312                           
 26313 ;; *************** function i2_I2C_Write *****************
 26314 ;; Defined at:
 26315 ;;		line 41 in file "src/I2C.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;  d               2    1[COMRAM] unsigned int 
 26318 ;; Auto vars:     Size  Location     Type
 26319 ;;		None
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  1    wreg      void 
 26322 ;; Registers used:
 26323 ;;		wreg, status,2, status,0, cstack
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 0/0
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26329 ;;      Params:         2       0       0       0       0       0       0       0       0
 26330 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26332 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26333 ;;Total ram usage:        2 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; Hardware stack levels required when called:    1
 26336 ;; This function calls:
 26337 ;;		i2_I2C_Wait
 26338 ;; This function is called by:
 26339 ;;		_readButtons
 26340 ;;		i2_writeEEPROM_ext
 26341 ;; This function uses a non-reentrant model
 26342 ;;
 26343                           
 26344                           	psect	text71
 26345  005EEE                     __ptext71:
 26346                           	opt stack 0
 26347  005EEE                     i2_I2C_Write:
 26348                           	opt stack 20
 26349                           
 26350                           ;I2C.c: 42: I2C_Wait();
 26351                           
 26352                           ;incstack = 0
 26353  005EEE  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26354                           
 26355                           ;I2C.c: 43: SSPBUF = d;
 26356  005EF2  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 26357  005EF6  0012               	return		;funcret
 26358  005EF8                     __end_ofi2_I2C_Write:
 26359                           	opt stack 0
 26360                           tosu	equ	0xFFF
 26361                           tosh	equ	0xFFE
 26362                           tosl	equ	0xFFD
 26363                           pclatu	equ	0xFFB
 26364                           pclath	equ	0xFFA
 26365                           tblptru	equ	0xFF8
 26366                           tblptrh	equ	0xFF7
 26367                           tblptrl	equ	0xFF6
 26368                           tablat	equ	0xFF5
 26369                           prodh	equ	0xFF4
 26370                           prodl	equ	0xFF3
 26371                           intcon	equ	0xFF2
 26372                           intcon2	equ	0xFF1
 26373                           intcon3	equ	0xFF0
 26374                           indf0	equ	0xFEF
 26375                           postinc0	equ	0xFEE
 26376                           fsr0h	equ	0xFEA
 26377                           fsr0l	equ	0xFE9
 26378                           wreg	equ	0xFE8
 26379                           indf1	equ	0xFE7
 26380                           postdec1	equ	0xFE5
 26381                           fsr1h	equ	0xFE2
 26382                           fsr1l	equ	0xFE1
 26383                           indf2	equ	0xFDF
 26384                           postinc2	equ	0xFDE
 26385                           postdec2	equ	0xFDD
 26386                           fsr2h	equ	0xFDA
 26387                           fsr2l	equ	0xFD9
 26388                           status	equ	0xFD8
 26389                           
 26390 ;; *************** function i2_I2C_Stop *****************
 26391 ;; Defined at:
 26392 ;;		line 35 in file "src/I2C.c"
 26393 ;; Parameters:    Size  Location     Type
 26394 ;;		None
 26395 ;; Auto vars:     Size  Location     Type
 26396 ;;		None
 26397 ;; Return value:  Size  Location     Type
 26398 ;;                  1    wreg      void 
 26399 ;; Registers used:
 26400 ;;		wreg, status,2, status,0, cstack
 26401 ;; Tracked objects:
 26402 ;;		On entry : 0/0
 26403 ;;		On exit  : 0/0
 26404 ;;		Unchanged: 0/0
 26405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26406 ;;      Params:         0       0       0       0       0       0       0       0       0
 26407 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26409 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26410 ;;Total ram usage:        0 bytes
 26411 ;; Hardware stack levels used:    1
 26412 ;; Hardware stack levels required when called:    1
 26413 ;; This function calls:
 26414 ;;		i2_I2C_Wait
 26415 ;; This function is called by:
 26416 ;;		_readButtons
 26417 ;;		i2_writeEEPROM_ext
 26418 ;; This function uses a non-reentrant model
 26419 ;;
 26420                           
 26421                           	psect	text72
 26422  005F10                     __ptext72:
 26423                           	opt stack 0
 26424  005F10                     i2_I2C_Stop:
 26425                           	opt stack 20
 26426                           
 26427                           ;I2C.c: 36: I2C_Wait();
 26428                           
 26429                           ;incstack = 0
 26430  005F10  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26431                           
 26432                           ;I2C.c: 37: PEN = 1;
 26433  005F14  84C5               	bsf	4037,2,c	;volatile
 26434  005F16  0012               	return		;funcret
 26435  005F18                     __end_ofi2_I2C_Stop:
 26436                           	opt stack 0
 26437                           tosu	equ	0xFFF
 26438                           tosh	equ	0xFFE
 26439                           tosl	equ	0xFFD
 26440                           pclatu	equ	0xFFB
 26441                           pclath	equ	0xFFA
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           intcon2	equ	0xFF1
 26450                           intcon3	equ	0xFF0
 26451                           indf0	equ	0xFEF
 26452                           postinc0	equ	0xFEE
 26453                           fsr0h	equ	0xFEA
 26454                           fsr0l	equ	0xFE9
 26455                           wreg	equ	0xFE8
 26456                           indf1	equ	0xFE7
 26457                           postdec1	equ	0xFE5
 26458                           fsr1h	equ	0xFE2
 26459                           fsr1l	equ	0xFE1
 26460                           indf2	equ	0xFDF
 26461                           postinc2	equ	0xFDE
 26462                           postdec2	equ	0xFDD
 26463                           fsr2h	equ	0xFDA
 26464                           fsr2l	equ	0xFD9
 26465                           status	equ	0xFD8
 26466                           
 26467 ;; *************** function i2_I2C_Start *****************
 26468 ;; Defined at:
 26469 ;;		line 25 in file "src/I2C.c"
 26470 ;; Parameters:    Size  Location     Type
 26471 ;;		None
 26472 ;; Auto vars:     Size  Location     Type
 26473 ;;		None
 26474 ;; Return value:  Size  Location     Type
 26475 ;;                  1    wreg      void 
 26476 ;; Registers used:
 26477 ;;		wreg, status,2, status,0, cstack
 26478 ;; Tracked objects:
 26479 ;;		On entry : 0/0
 26480 ;;		On exit  : 0/0
 26481 ;;		Unchanged: 0/0
 26482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26483 ;;      Params:         0       0       0       0       0       0       0       0       0
 26484 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26486 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26487 ;;Total ram usage:        0 bytes
 26488 ;; Hardware stack levels used:    1
 26489 ;; Hardware stack levels required when called:    1
 26490 ;; This function calls:
 26491 ;;		i2_I2C_Wait
 26492 ;; This function is called by:
 26493 ;;		_readButtons
 26494 ;;		i2_writeEEPROM_ext
 26495 ;; This function uses a non-reentrant model
 26496 ;;
 26497                           
 26498                           	psect	text73
 26499  005F18                     __ptext73:
 26500                           	opt stack 0
 26501  005F18                     i2_I2C_Start:
 26502                           	opt stack 20
 26503                           
 26504                           ;I2C.c: 26: I2C_Wait();
 26505                           
 26506                           ;incstack = 0
 26507  005F18  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26508                           
 26509                           ;I2C.c: 27: SEN = 1;
 26510  005F1C  80C5               	bsf	4037,0,c	;volatile
 26511  005F1E  0012               	return		;funcret
 26512  005F20                     __end_ofi2_I2C_Start:
 26513                           	opt stack 0
 26514                           tosu	equ	0xFFF
 26515                           tosh	equ	0xFFE
 26516                           tosl	equ	0xFFD
 26517                           pclatu	equ	0xFFB
 26518                           pclath	equ	0xFFA
 26519                           tblptru	equ	0xFF8
 26520                           tblptrh	equ	0xFF7
 26521                           tblptrl	equ	0xFF6
 26522                           tablat	equ	0xFF5
 26523                           prodh	equ	0xFF4
 26524                           prodl	equ	0xFF3
 26525                           intcon	equ	0xFF2
 26526                           intcon2	equ	0xFF1
 26527                           intcon3	equ	0xFF0
 26528                           indf0	equ	0xFEF
 26529                           postinc0	equ	0xFEE
 26530                           fsr0h	equ	0xFEA
 26531                           fsr0l	equ	0xFE9
 26532                           wreg	equ	0xFE8
 26533                           indf1	equ	0xFE7
 26534                           postdec1	equ	0xFE5
 26535                           fsr1h	equ	0xFE2
 26536                           fsr1l	equ	0xFE1
 26537                           indf2	equ	0xFDF
 26538                           postinc2	equ	0xFDE
 26539                           postdec2	equ	0xFDD
 26540                           fsr2h	equ	0xFDA
 26541                           fsr2l	equ	0xFD9
 26542                           status	equ	0xFD8
 26543                           
 26544 ;; *************** function i2_I2C_Read *****************
 26545 ;; Defined at:
 26546 ;;		line 46 in file "src/I2C.c"
 26547 ;; Parameters:    Size  Location     Type
 26548 ;;  a               2    1[COMRAM] unsigned short 
 26549 ;; Auto vars:     Size  Location     Type
 26550 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 26551 ;; Return value:  Size  Location     Type
 26552 ;;                  2    1[COMRAM] unsigned short 
 26553 ;; Registers used:
 26554 ;;		wreg, status,2, status,0, cstack
 26555 ;; Tracked objects:
 26556 ;;		On entry : 0/0
 26557 ;;		On exit  : 0/0
 26558 ;;		Unchanged: 0/0
 26559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26560 ;;      Params:         2       0       0       0       0       0       0       0       0
 26561 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26562 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26563 ;;      Totals:         4       0       0       0       0       0       0       0       0
 26564 ;;Total ram usage:        4 bytes
 26565 ;; Hardware stack levels used:    1
 26566 ;; Hardware stack levels required when called:    1
 26567 ;; This function calls:
 26568 ;;		i2_I2C_Wait
 26569 ;; This function is called by:
 26570 ;;		_readButtons
 26571 ;; This function uses a non-reentrant model
 26572 ;;
 26573                           
 26574                           	psect	text74
 26575  005CFA                     __ptext74:
 26576                           	opt stack 0
 26577  005CFA                     i2_I2C_Read:
 26578                           	opt stack 22
 26579                           
 26580                           ;I2C.c: 47: unsigned short temp;
 26581                           ;I2C.c: 48: I2C_Wait();
 26582                           
 26583                           ;incstack = 0
 26584  005CFA  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26585                           
 26586                           ;I2C.c: 49: RCEN = 1;
 26587  005CFE  86C5               	bsf	4037,3,c	;volatile
 26588                           
 26589                           ;I2C.c: 50: I2C_Wait();
 26590  005D00  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26591                           
 26592                           ;I2C.c: 51: temp = SSPBUF;
 26593  005D04  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 26594  005D08  6A05               	clrf	i2I2C_Read@temp+1,c
 26595                           
 26596                           ;I2C.c: 52: I2C_Wait();
 26597  005D0A  EC5B  F02F         	call	i2_I2C_Wait	;wreg free
 26598                           
 26599                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 26600  005D0E  5002               	movf	i2I2C_Read@a,w,c
 26601  005D10  1003               	iorwf	i2I2C_Read@a+1,w,c
 26602  005D12  A4D8               	btfss	status,2,c
 26603  005D14  D002               	goto	i2u1254_40
 26604  005D16  8AC5               	bsf	4037,5,c	;volatile
 26605  005D18  D001               	goto	i2u1255_45
 26606  005D1A                     i2u1254_40:
 26607  005D1A  9AC5               	bcf	4037,5,c	;volatile
 26608  005D1C                     i2u1255_45:
 26609                           
 26610                           ;I2C.c: 54: ACKEN = 1;
 26611  005D1C  88C5               	bsf	4037,4,c	;volatile
 26612                           
 26613                           ;I2C.c: 55: return temp;
 26614  005D1E  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 26615  005D22  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 26616  005D26  0012               	return	
 26617  005D28                     __end_ofi2_I2C_Read:
 26618                           	opt stack 0
 26619                           tosu	equ	0xFFF
 26620                           tosh	equ	0xFFE
 26621                           tosl	equ	0xFFD
 26622                           pclatu	equ	0xFFB
 26623                           pclath	equ	0xFFA
 26624                           tblptru	equ	0xFF8
 26625                           tblptrh	equ	0xFF7
 26626                           tblptrl	equ	0xFF6
 26627                           tablat	equ	0xFF5
 26628                           prodh	equ	0xFF4
 26629                           prodl	equ	0xFF3
 26630                           intcon	equ	0xFF2
 26631                           intcon2	equ	0xFF1
 26632                           intcon3	equ	0xFF0
 26633                           indf0	equ	0xFEF
 26634                           postinc0	equ	0xFEE
 26635                           fsr0h	equ	0xFEA
 26636                           fsr0l	equ	0xFE9
 26637                           wreg	equ	0xFE8
 26638                           indf1	equ	0xFE7
 26639                           postdec1	equ	0xFE5
 26640                           fsr1h	equ	0xFE2
 26641                           fsr1l	equ	0xFE1
 26642                           indf2	equ	0xFDF
 26643                           postinc2	equ	0xFDE
 26644                           postdec2	equ	0xFDD
 26645                           fsr2h	equ	0xFDA
 26646                           fsr2l	equ	0xFD9
 26647                           status	equ	0xFD8
 26648                           
 26649 ;; *************** function i2_I2C_Wait *****************
 26650 ;; Defined at:
 26651 ;;		line 21 in file "src/I2C.c"
 26652 ;; Parameters:    Size  Location     Type
 26653 ;;		None
 26654 ;; Auto vars:     Size  Location     Type
 26655 ;;		None
 26656 ;; Return value:  Size  Location     Type
 26657 ;;                  1    wreg      void 
 26658 ;; Registers used:
 26659 ;;		wreg, status,2, status,0
 26660 ;; Tracked objects:
 26661 ;;		On entry : 0/0
 26662 ;;		On exit  : 0/0
 26663 ;;		Unchanged: 0/0
 26664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26665 ;;      Params:         0       0       0       0       0       0       0       0       0
 26666 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26667 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26668 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26669 ;;Total ram usage:        1 bytes
 26670 ;; Hardware stack levels used:    1
 26671 ;; This function calls:
 26672 ;;		Nothing
 26673 ;; This function is called by:
 26674 ;;		i2_I2C_Start
 26675 ;;		i2_I2C_Stop
 26676 ;;		i2_I2C_Write
 26677 ;;		i2_I2C_Read
 26678 ;; This function uses a non-reentrant model
 26679 ;;
 26680                           
 26681                           	psect	text75
 26682  005EB6                     __ptext75:
 26683                           	opt stack 0
 26684  005EB6                     i2_I2C_Wait:
 26685                           	opt stack 20
 26686                           
 26687                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 26688                           
 26689                           ;incstack = 0
 26690  005EB6  B4C7               	btfsc	4039,2,c	;volatile
 26691  005EB8  D7FE               	goto	i2_I2C_Wait
 26692  005EBA  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 26693  005EBE  0E1F               	movlw	31
 26694  005EC0  1601               	andwf	??i2_I2C_Wait,f,c
 26695  005EC2  B4D8               	btfsc	status,2,c
 26696  005EC4  0012               	return	
 26697  005EC6  D7F7               	goto	i2_I2C_Wait
 26698  005EC8                     __end_ofi2_I2C_Wait:
 26699                           	opt stack 0
 26700                           tosu	equ	0xFFF
 26701                           tosh	equ	0xFFE
 26702                           tosl	equ	0xFFD
 26703                           pclatu	equ	0xFFB
 26704                           pclath	equ	0xFFA
 26705                           tblptru	equ	0xFF8
 26706                           tblptrh	equ	0xFF7
 26707                           tblptrl	equ	0xFF6
 26708                           tablat	equ	0xFF5
 26709                           prodh	equ	0xFF4
 26710                           prodl	equ	0xFF3
 26711                           intcon	equ	0xFF2
 26712                           intcon2	equ	0xFF1
 26713                           intcon3	equ	0xFF0
 26714                           indf0	equ	0xFEF
 26715                           postinc0	equ	0xFEE
 26716                           fsr0h	equ	0xFEA
 26717                           fsr0l	equ	0xFE9
 26718                           wreg	equ	0xFE8
 26719                           indf1	equ	0xFE7
 26720                           postdec1	equ	0xFE5
 26721                           fsr1h	equ	0xFE2
 26722                           fsr1l	equ	0xFE1
 26723                           indf2	equ	0xFDF
 26724                           postinc2	equ	0xFDE
 26725                           postdec2	equ	0xFDD
 26726                           fsr2h	equ	0xFDA
 26727                           fsr2l	equ	0xFD9
 26728                           status	equ	0xFD8
 26729                           tosu	equ	0xFFF
 26730                           tosh	equ	0xFFE
 26731                           tosl	equ	0xFFD
 26732                           pclatu	equ	0xFFB
 26733                           pclath	equ	0xFFA
 26734                           tblptru	equ	0xFF8
 26735                           tblptrh	equ	0xFF7
 26736                           tblptrl	equ	0xFF6
 26737                           tablat	equ	0xFF5
 26738                           prodh	equ	0xFF4
 26739                           prodl	equ	0xFF3
 26740                           intcon	equ	0xFF2
 26741                           intcon2	equ	0xFF1
 26742                           intcon3	equ	0xFF0
 26743                           indf0	equ	0xFEF
 26744                           postinc0	equ	0xFEE
 26745                           fsr0h	equ	0xFEA
 26746                           fsr0l	equ	0xFE9
 26747                           wreg	equ	0xFE8
 26748                           indf1	equ	0xFE7
 26749                           postdec1	equ	0xFE5
 26750                           fsr1h	equ	0xFE2
 26751                           fsr1l	equ	0xFE1
 26752                           indf2	equ	0xFDF
 26753                           postinc2	equ	0xFDE
 26754                           postdec2	equ	0xFDD
 26755                           fsr2h	equ	0xFDA
 26756                           fsr2l	equ	0xFD9
 26757                           status	equ	0xFD8
 26758                           
 26759                           	psect	text76
 26760  000000                     __ptext76:
 26761                           	opt stack 0
 26762                           tosu	equ	0xFFF
 26763                           tosh	equ	0xFFE
 26764                           tosl	equ	0xFFD
 26765                           pclatu	equ	0xFFB
 26766                           pclath	equ	0xFFA
 26767                           tblptru	equ	0xFF8
 26768                           tblptrh	equ	0xFF7
 26769                           tblptrl	equ	0xFF6
 26770                           tablat	equ	0xFF5
 26771                           prodh	equ	0xFF4
 26772                           prodl	equ	0xFF3
 26773                           intcon	equ	0xFF2
 26774                           intcon2	equ	0xFF1
 26775                           intcon3	equ	0xFF0
 26776                           indf0	equ	0xFEF
 26777                           postinc0	equ	0xFEE
 26778                           fsr0h	equ	0xFEA
 26779                           fsr0l	equ	0xFE9
 26780                           wreg	equ	0xFE8
 26781                           indf1	equ	0xFE7
 26782                           postdec1	equ	0xFE5
 26783                           fsr1h	equ	0xFE2
 26784                           fsr1l	equ	0xFE1
 26785                           indf2	equ	0xFDF
 26786                           postinc2	equ	0xFDE
 26787                           postdec2	equ	0xFDD
 26788                           fsr2h	equ	0xFDA
 26789                           fsr2l	equ	0xFD9
 26790                           status	equ	0xFD8
 26791                           
 26792                           	psect	rparam
 26793  0000                     tosu	equ	0xFFF
 26794                           tosh	equ	0xFFE
 26795                           tosl	equ	0xFFD
 26796                           pclatu	equ	0xFFB
 26797                           pclath	equ	0xFFA
 26798                           tblptru	equ	0xFF8
 26799                           tblptrh	equ	0xFF7
 26800                           tblptrl	equ	0xFF6
 26801                           tablat	equ	0xFF5
 26802                           prodh	equ	0xFF4
 26803                           prodl	equ	0xFF3
 26804                           intcon	equ	0xFF2
 26805                           intcon2	equ	0xFF1
 26806                           intcon3	equ	0xFF0
 26807                           indf0	equ	0xFEF
 26808                           postinc0	equ	0xFEE
 26809                           fsr0h	equ	0xFEA
 26810                           fsr0l	equ	0xFE9
 26811                           wreg	equ	0xFE8
 26812                           indf1	equ	0xFE7
 26813                           postdec1	equ	0xFE5
 26814                           fsr1h	equ	0xFE2
 26815                           fsr1l	equ	0xFE1
 26816                           indf2	equ	0xFDF
 26817                           postinc2	equ	0xFDE
 26818                           postdec2	equ	0xFDD
 26819                           fsr2h	equ	0xFDA
 26820                           fsr2l	equ	0xFD9
 26821                           status	equ	0xFD8
 26822                           
 26823                           	psect	temp
 26824  000051                     btemp:
 26825                           	opt stack 0
 26826  000051                     	ds	1
 26827  0000                     int$flags	set	btemp
 26828  0000                     wtemp6	set	btemp+1
 26829                           tosu	equ	0xFFF
 26830                           tosh	equ	0xFFE
 26831                           tosl	equ	0xFFD
 26832                           pclatu	equ	0xFFB
 26833                           pclath	equ	0xFFA
 26834                           tblptru	equ	0xFF8
 26835                           tblptrh	equ	0xFF7
 26836                           tblptrl	equ	0xFF6
 26837                           tablat	equ	0xFF5
 26838                           prodh	equ	0xFF4
 26839                           prodl	equ	0xFF3
 26840                           intcon	equ	0xFF2
 26841                           intcon2	equ	0xFF1
 26842                           intcon3	equ	0xFF0
 26843                           indf0	equ	0xFEF
 26844                           postinc0	equ	0xFEE
 26845                           fsr0h	equ	0xFEA
 26846                           fsr0l	equ	0xFE9
 26847                           wreg	equ	0xFE8
 26848                           indf1	equ	0xFE7
 26849                           postdec1	equ	0xFE5
 26850                           fsr1h	equ	0xFE2
 26851                           fsr1l	equ	0xFE1
 26852                           indf2	equ	0xFDF
 26853                           postinc2	equ	0xFDE
 26854                           postdec2	equ	0xFDD
 26855                           fsr2h	equ	0xFDA
 26856                           fsr2l	equ	0xFD9
 26857                           status	equ	0xFD8


Data Sizes:
    Strings     2126
    Constant    66
    Data        30
    BSS         319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      80
    BANK0           160    137     160
    BANK1           256    150     245
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_57(CODE[3]), STR_43(CODE[14]), STR_42(CODE[3]), STR_41(CODE[3]), 
		 -> STR_34(CODE[14]), STR_25(CODE[14]), STR_24(CODE[21]), STR_23(CODE[17]), 
		 -> STR_22(CODE[20]), STR_11(CODE[3]), STR_10(CODE[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), filtroStr@aux(BANK1[60]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[189]), 
		 -> STR_55(CODE[19]), STR_53(CODE[62]), STR_50(CODE[15]), STR_49(CODE[21]), 
		 -> STR_46(CODE[14]), STR_44(CODE[14]), STR_33(CODE[16]), STR_32(CODE[704]), 
		 -> STR_31(CODE[45]), STR_29(CODE[21]), STR_20(CODE[22]), STR_18(CODE[22]), 
		 -> STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_112(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> STR_91(CODE[10]), STR_90(CODE[7]), STR_88(CODE[11]), STR_87(CODE[8]), 
		 -> STR_85(CODE[11]), STR_84(CODE[7]), STR_72(CODE[12]), STR_58(CODE[12]), 
		 -> enviaDadosWifi@AUX(BANK0[15]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), senha(BANK2[15]), 
		 -> STR_38(CODE[2]), ssid(BANK2[15]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), filtroStr@aux(BANK1[60]), 
		 -> filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), STR_9(CODE[3]), STR_8(CODE[5]), 
		 -> STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[189]), 
		 -> STR_57(CODE[3]), STR_55(CODE[19]), STR_53(CODE[62]), STR_50(CODE[15]), 
		 -> STR_49(CODE[21]), STR_46(CODE[14]), STR_44(CODE[14]), STR_43(CODE[14]), 
		 -> STR_42(CODE[3]), STR_41(CODE[3]), STR_34(CODE[14]), STR_33(CODE[16]), 
		 -> STR_32(CODE[704]), STR_31(CODE[45]), STR_29(CODE[21]), STR_25(CODE[14]), 
		 -> STR_24(CODE[21]), STR_23(CODE[17]), STR_22(CODE[20]), STR_20(CODE[22]), 
		 -> STR_18(CODE[22]), STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), 

    S1734__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1734__prbuf$ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    main$1659	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_91(CODE[10]), STR_90(CODE[7]), 

    main$1654	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_88(CODE[11]), STR_87(CODE[8]), 

    main$1649	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_85(CODE[11]), STR_84(CODE[7]), 

    filtroStr@strdest	PTR unsigned char  size(2) Largest target is 15
		 -> senha(BANK2[15]), ssid(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@fim	PTR unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@inicio	PTR unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[7]), STR_37(CODE[6]), 

    filtroStr@p	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    filtroStr@str	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    getMac@var	PTR unsigned char  size(2) Largest target is 24
		 -> wifi_MAC(BANK2[24]), 

    getMac@mac	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(BANK1[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(BANK0[1]), wifi_habilita_alteracao(BANK1[2]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(BANK0[1]), t_flap_ligado(BANK0[1]), h_buzzer(BANK0[1]), 
		 -> h_modo_seguranca(BANK0[1]), h_venotinha(BANK0[1]), h_flap(BANK1[1]), h_abafador(BANK0[1]), 
		 -> wifi_SENHA(BANK1[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(BANK0[1]), buzzer(BANK0[1]), 
		 -> fornalha(BANK0[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_enviaDadosWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _getMac->_strstr
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarConfigWifi->_printf
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _printf->__doprnt
    _limpaBuffer->_memset
    _filtroStr->_sprintf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _strcpy->_strtok
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    _alterarConfigWifi->_filtroStr

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  156477
                                            119 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
                  _alterarConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11829
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18905
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      20    20      0   26426
                                             99 BANK0     20    20      0
                             ___wmul
                              _delay
                             _getMac
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _getMac                                               9     5      4    1177
                                             19 BANK0      9     5      4
                             _strlen
                             _strstr (ARG)
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarConfigWifi                                    1     1      0   50616
                                             99 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                          _filtroStr
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2570
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    4864
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _limpaBuffer                                          0     0      0    1562
                              _delay
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1238
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _filtroStr                                          163   155      8   20466
                                             49 BANK0     13     5      8
                                              0 BANK1    150   150      0
                            _sprintf
                             _strcpy
                             _strlen
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    1926
                                             13 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               4     0      4    5505
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     622
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4     544
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     369
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               7     3      4     227
                                             17 BANK0      7     3      4
                             _strtok (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   10620
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3292
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1331
                                             29 COMRAM    19    19      0
                        _readButtons
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _filtroStr
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strcpy
         _strtok (ARG)
           _strcspn
             _strchr
           _strspn
             _strchr
       _strlen
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _getMac
       _strlen
       _strstr (ARG)
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     96      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AD      20        0.0%
DATA                 0      0     2AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Oct 22 22:29:14 2019

                 i2_setRangeValor 52D8                 setRangeValor@_aux 006E  
               setRangeValor@_max 0068           __size_of_readEEPROM_ext 0052  
               setRangeValor@_min 0067                __size_of_I2C_Start 0008  
             tabelaUmidade@_clima 0062                __size_of_I2C_Write 000A  
                              _GO 007E11                setRangeValor@_acao 006D  
              _tipo_modo_trabalho 00F6                       __CFG_BOR$ON 000000  
             ___wmul@multiplicand 0062                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                    ___ftadd@exp1 0086                      ___ftadd@exp2 0085  
                    ___ftadd@sign 0084                       __CFG_WDT$ON 000000  
                             l213 5E48                               l301 1674  
                             l230 5CC0                               l231 5CC8  
                             l311 16BA                               l303 1682  
                             l400 1912                               l225 5CAA  
                             l321 1702                               l313 16C8  
                             l305 1690                               l226 5CAC  
                             l242 4F84                               l402 1932  
                             l227 5CB4                               l243 4EF4  
                             l323 1722                               l315 16D6  
                             l307 169E                               l228 5CB6  
                             l260 4E9A                               l404 1956  
                             l229 5CBE                               l245 4F18  
                             l325 1746                               l317 16E4  
                             l309 16AC                               l246 4F3C  
                             l270 50AE                               l510 1C44  
                             l502 1C14                               l247 4F60  
                             l255 5CDE                               l280 5C32  
                             l281 5C1C                               l273 50BE  
                             l361 1834                               l506 1C2C  
                             l442 1A50                               l426 19E6  
                             l275 50EC                               l267 5098  
                             l292 5E6A                               l428 1A06  
                             l269 50A2                               l517 25F8  
                             l541 1D40                               l445 1A66  
                             l630 260E                               l518 1C92  
                             l631 1F32                               l527 1CE0  
                             l383 189C                               l359 1814  
                             l800 243C                               l632 1F48  
                             l296 1C86                               l472 1B24  
                             l625 1F1C                               l553 1D96  
                             l529 1D00                               l297 1C5C  
                             l810 248C                               l802 244C  
                             l642 1FA2                               l634 1F58  
                             l482 1B6C                               l474 1B3C  
                             l466 1AF0                               l298 1652  
                             l563 1DCC                               l547 1D74  
                             l299 1666                               l900 59EA  
                             l820 24DC                               l812 249C  
                             l804 245C                               l740 2222  
                             l644 1FC8                               l492 1BC0  
                             l901 59F4                               l902 59FE  
                             l830 252C                               l822 24EC  
                             l814 24AC                               l806 246C  
                             l750 228A                               l670 2096  
                             l662 2056                               l654 2006  
                             l646 1FD8                               l638 1F72  
                             l486 1B90                               l478 1B54  
                             l910 47D6                               l840 257C  
                             l832 253C                               l824 24FC  
                             l816 24BC                               l808 247C  
                             l760 22E6                               l752 22AE  
                             l680 20D4                               l664 2066  
                             l656 2016                               l496 1BE4  
                             l488 1BA8                               l920 4832  
                             l912 47DE                               l745 223E  
                             l913 4800                               l850 25E2  
                             l842 258C                               l834 254C  
                             l826 250C                               l818 24CC  
                             l770 234C                               l762 22F6  
                             l746 2254                               l666 2076  
                             l658 2026                               l498 1BFC  
                             l906 4878                               l930 485A  
                             l922 4824                               l579 1E20  
                             l915 47F4                               l907 47C0  
                             l940 5220                               l844 259C  
                             l836 255C                               l828 251C  
                             l780 239C                               l772 235C  
                             l764 2306                               l748 2264  
                             l676 20BA                               l668 2086  
                             l924 482C                               l908 47E4  
                             l941 51E0                               l925 484E  
                             l917 47FC                               l870 467E  
                             l934 5212                               l846 25AC  
                             l838 256C                               l790 23EC  
                             l782 23AC                               l774 236C  
                             l766 2316                               l758 22D6  
                             l686 20F8                               l918 488C  
                             l943 520A                               l935 51BA  
                             l927 4842                               l919 480C  
                             l872 4688                               l848 25D2  
                             l792 23FC                               l784 23BC  
                             l776 237C                               l768 2326  
                             l688 2108                               l881 4702  
                             l873 4692                               l937 51DA  
                             l929 484A                               l890 4768  
                             l874 469C                               l946 5230  
                             l794 240C                               l786 23CC  
                             l778 238C                               l883 471C  
                             l875 46A6                               l972 44C2  
                             l892 477E                               l868 46CC  
                             l796 241C                               l788 23DC  
                             l981 45EE                               l965 44C6  
                             l869 46B0                               l990 3646  
                             l966 438C                               l878 4736  
                             l798 242C                               l967 43D4  
                             l879 46E8                               l976 460A  
                             l992 3662                               l888 4752  
                             l977 45AC                               l897 5A08  
                             l969 442E                               l994 3688  
                             l986 3636                               l898 59DE  
                             l979 45E6                               l995 36A0  
                             l989 3A8C                               l997 36C6  
                             l998 36DE                      __CFG_CPB$OFF 000000  
                             _PEN 007E2A                      __CFG_CPD$OFF 000000  
                             _SEN 007E28                               _cbf 0043  
                             _hor 0046                               _min 0047  
                             _sec 0048                       ?i2_I2C_Read 0002  
                     ?i2_I2C_Wait 0001                       ?i2_I2C_Stop 0001  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      ?_atualizaLCD 0068  
                    __CFG_FOSC$HS 000000              __size_of_I2C_Restart 0008  
                    __CFG_LVP$OFF 000000                      ___ftdiv@cntr 0090  
                    ___ftdiv@sign 0095                              l1000 3704  
                            l1001 371C                              l1010 384A  
                            l1011 3862                              l1003 3742  
                            l1004 375A                              l1013 3888  
                            l1014 38F0                              l1006 3784  
                            l1030 3024                              l1031 2C04  
                            l1024 3A84                              l1040 2CF4  
                            l1017 3A32                              l1033 2C20  
                            l1050 2DEC                              l1042 2D14  
                            l2003 5952                              l1019 3A60  
                            l1051 2E48                              l1035 2C46  
                            l1027 2BE8                              l2004 594A  
                            l1060 301E                              l1052 2E1A  
                            l1044 2D70                              l1036 2C5E  
                            l1300 04DA                              l2013 5A7C  
                            l1053 2E46                              l1045 2D88  
                            l1301 04F2                              l2014 5A74  
                            l1150 54D0                              l1062 30F6  
                            l1038 2CB6                              l1310 05BC  
                            l1302 0502                              l2007 5972  
                            l1151 54E6                              l1063 308A  
                            l1055 2F50                              l1047 2DAE  
                            l1039 2CF0                              l1311 0632  
                            l1303 052A                              l2008 597C  
                            l1152 551E                              l1048 2DC6  
                            l1224 3506                              l1232 3252  
                            l1400 0F38                              l1312 0604  
                            l2017 5A94                              l1065 30A2  
                            l1057 2FA8                              l1241 3398  
                            l1401 0F66                              l1305 063E  
                            l2018 5A9E                              l1170 3CEA  
                            l1162 3BF6                              l1058 2FC0  
                            l1234 3260                              l1226 3134  
                            l1410 106E                              l1322 0700  
                            l1306 0554                              l2027 5C88  
                            l1147 54B2                              l1171 3C9C  
                            l1067 30EE                              l1219 52B2  
                            l1235 338C                              l1403 0F90  
                            l1315 0638                              l1307 0592  
                            l2212 48AC                              l2028 5C76  
                            l1180 3CF0                              l1156 3B4A  
                            l1252 3522                              l1244 347A  
                            l1236 32A8                              l1228 313C  
                            l1412 1098                              l1404 0FBE  
                            l1316 0A60                              l1340 09A4  
                            l1332 0778                              l1324 0710  
                            l2213 48BE                              l1149 54C4  
                            l1181 3D04                              l1173 3CAA  
                            l1157 3B32                              l1245 34A8  
                            l1229 3158                              l1421 11AC  
                            l1413 10CC                              l1341 09AA  
                            l1317 0650                              l1174 3CAE  
                            l1158 3B46                              l1254 35AE  
                            l1238 335E                              l1430 12B4  
                            l1422 11DA                              l1406 0FE8  
                            l1350 0AB8                              l1342 0A16  
                            l2215 4914                              l1191 3DC8  
                            l1183 3D16                              l1167 3C48  
                            l1247 34DE                              l1431 12E2  
                            l1415 10F6                              l1407 1016  
                            l1343 0E0A                              l1335 07B4  
                            l1319 067C                              l1271 024E  
                            l2240 5766                              l2216 4986  
                            l1176 3CE0                              l1424 1204  
                            l1416 112A                              l1360 0C46  
                            l1352 0AE2                              l1336 07E2  
                            l1328 0744                              l1280 030C  
                            l2217 498E                              l1193 3E0E  
                            l1185 3DA0                              l1169 3C68  
                            l1249 34EA                              l1441 14B2  
                            l1433 130C                              l1425 1232  
                            l1409 1040                              l1337 086C  
                            l1281 033C                              l1273 027A  
                            l2170 581E                              l1450 1492  
                            l1434 133A                              l1418 1154  
                            l1346 0D90                              l1370 0CEE  
                            l1362 0C70                              l1354 0B1C  
                            l1338 08F4                              l1195 3E58  
                            l1451 14A2                              l1427 125C  
                            l1419 1182                              l1347 0A80  
                            l1339 098C                              l1540 2618  
                            l1196 3E70                              l1188 3DA2  
                            l1460 1514                              l1444 1470  
                            l1436 1364                              l1428 128A  
                            l1348 0DD6                              l1380 0D8A  
                            l1356 0B4A                              l1284 0A1E  
                            l1276 02B6                              l1541 2688  
                            l1197 3EB2                              l1189 3DB6  
                            l1461 1542                              l1445 1418  
                            l1437 13DA                              l1381 0DE6  
                            l1357 0BB0                              l1349 0A84  
                            l1293 0412                              l1285 038A  
                            l1542 265C                              l2182 5884  
                            l1446 1482                              l1438 13EA  
                            l1390 0E2A                              l1382 0DF6  
                            l1374 0D2A                              l1366 0CB2  
                            l1286 03C2                              l1278 0304  
                            l2183 58AE                              l2175 58EC  
                            l2255 4E0C                              l2247 55BC  
                            l1199 3EFC                              l1455 15CC  
                            l1463 156C                              l1447 1420  
                            l1391 0E5E                              l1359 0C12  
                            l1287 03E4                              l1552 2958  
                            l2176 58E6                              l2256 4D5A  
                            l2248 55B4                              l1464 159A  
                            l1456 14BC                              l1376 0D46  
                            l1553 2716                              l1545 26B4  
                            l2169 5828                              l2185 58CA  
                            l2257 4E02                              l1457 14EA  
                            l1449 146A                              l1385 1404  
                            l1393 13CA                              l1297 0454  
                            l1289 03F6                              l1562 27B4  
                            l1554 2750                              l2186 58BA  
                            l2266 5538                              l1810 4FC2  
                            l1466 15C4                              l1394 0E88  
                            l1378 0D66                              l1547 2922  
                            l1571 28EC                              l1563 27EE  
                            l1555 2760                              l2267 5530  
                            l1467 15F4                              l1459 15E4  
                            l1395 0EB6                              l1572 2910  
                            l1564 2818                              l1556 275A  
                            l1812 5000                              l1468 1604  
                            l1573 2992                              l2197 5164  
                            l1477 5D3E                              l1813 4FEA  
                            l1469 1616                              l1389 136C  
                            l1397 0EE0                              l1590 2B7C  
                            l1582 2A4A                              l2198 5100  
                            l1478 5D2A                              l1398 0F0E  
                            l1591 2BA6                              l1583 2A74  
                            l1567 282C                              l1559 27AA  
                            l2199 513C                              l1815 5028  
                            l1911 4A3E                              l1568 288C  
                            l1816 501E                              l1840 421E  
                            l1920 4A7E                              l1912 4A2E  
                            l1577 29DC                              l1569 28DA  
                            l1809 4FCC                              l1586 2ACA  
                            l1578 2A00                              l1587 2AF4  
                            l1579 2A08                              l1924 5E2C  
                            l1844 4248                              l1589 2AFA  
                            l1917 4A62                              l1909 49C6  
                            l1950 56E0                              l1854 42A4  
                            l1918 4A56                              l1951 56D4  
                            l1863 42E2                              l1855 429A  
                            l1864 42D8                              l1849 42AE  
                            l1873 4C9A                              l1881 5436  
                            l7001 1A76                              l1954 5714  
                            l1866 4306                              l1882 5466  
                            l1890 4AE2                              l1955 5722  
                            l1867 4322                              l1875 4CC2  
                            l1891 4B14                              l1868 4352  
                            l1876 4D00                              l1892 4B24  
                            l1877 4D26                              l1894 4B3C  
                            l1895 4B4C                              l1888 4ABA  
                            l6331 27B4                              l6147 5492  
                            l7043 1AF0                              l6341 282C  
                            l6167 5ECC                              l7055 1B24  
                            l7161 1D00                              l7137 1CA2  
                            l6443 4D5A                              l7155 1CE0  
                            l6543 5CD6                              l6375 2996  
                            l8303 50A6                              l7079 1B90  
                            l6561 5C76                              l9105 3150  
                            l7097 1BE4                              l6555 5D2A  
                            l7435 2056                              l7621 22AE  
                            l7605 2254                              l7357 1F1C  
                            l7615 228A                              l7391 1FA2  
                            l7199 1D74                              l6577 58BA  
                            l9145 3390                              l9129 32A0  
                            l7369 1F48                              l6921 1932  
                            l6729 1666                              l6915 1912  
                            l9181 351A                              l7397 1FC8  
                            l6845 1834                              l8295 5090  
                            l6927 1956                              l6839 1814  
                            l6697 4E92                              l7817 25D2  
                            l7593 2222                              l6881 18AC  
                            l6785 1746                              l9353 0246  
                            l7659 234C                              l6963 19E6  
                            l6779 1722                              _ADON 007E10  
                            l9365 0272                              l8647 3A2A  
                            l9199 35A6                              l6969 1A06  
                            l8659 3A58                              STR_1 7EDF  
                            STR_2 7EBD                              STR_3 7ED4  
                            STR_4 7F15                              STR_5 7FE7  
                            STR_6 7FC8                              STR_7 7F98  
                            STR_8 7FE2                              STR_9 7FF3  
                            _RCIF 007CF5                              _RCEN 007E2B  
                            u8120 29C2                              u8060 2882  
                            u8028 27D8                              u8300 4DF0  
                            u9100 1824                              u8070 28C4  
                            u8160 2A10                              u8320 5558  
                            u8250 2BB0                              u8058 2850  
                            u9210 189A                              u8067 2878  
                            u8059 2884                              u8307 4DE6  
                            u8260 2BCA                              u8228 2AB4  
                            u8340 5586                              u9300 1902  
                            u8077 28BA                              u8190 2A84  
                            u8270 4D7A                              u8510 518E  
                            u8350 559E                              u8327 554E  
                            u7800 5A80                              u8248 2B66  
                            u8600 5848                              u8520 5194  
                            u8360 55DC                              u9320 1922  
                            u9080 1804                              u8610 5870  
                            u8290 4DB6                              u8347 557C  
                            u8188 2A34                              u7820 5754  
                            u8380 560A                              u9340 1942  
                            u8277 4D70                              u8517 5184  
                            u8390 5622                              u8550 48FC  
                            u8607 583E                              u8295 4DB0  
                            u8367 55D2                              u7840 5792  
                            u8640 4FB4                              u8800 169A  
                            u8617 5864                              u8297 4DA6  
                            u7770 5956                              u8570 4956  
                            u8730 5BFC                              u8810 16A8  
                            u7827 574A                              u8387 5600  
                            u9460 19D2                              u8900 1732  
                            u8820 16B6                              u8557 48F2  
                            u8590 4980                              u9470 19E2  
                            u8830 16C4                              u7847 5788  
                            u7880 590C                              u8680 5032  
                            u9800 1B7C                              u9720 1B14  
                            u9560 1A4C                              u9480 19F6  
                            u8840 16D2                              u8760 1662  
                            u8577 494C                              u8745 5BFE  
                            u9810 1B8C                              u9570 1A64  
                            u8850 16E0                              u8770 1670  
                            u7980 278C                              u7948 2646  
                            u8597 4974                              u7990 2792  
                            u9910 1C10                              u9830 1BA4  
                            u9750 1B38                              u8790 168C  
                            u7887 5902                              u9680 1AE0  
                            u8880 1712                              u9930 1C28  
                            u9850 1BBC                              u9770 1B50  
                            u7987 2782                              u9860 1BD0  
                            u9950 1C40                              u9870 1BE0  
                            u9790 1B68                              u9960 1C58  
                            u9890 1BF8                              _RSEN 007E29  
                 _f_wifi_processo 0196                              __led 0050  
               ?_Lcd_Write_String 0064                              __sec 0049  
                            _fase 00EC                              _main 0012  
                            _leds 0045                      ___ftpack@arg 0060  
                            _menu 00FB                      ___ftpack@exp 0063  
                            _temp 00FD                  __end_of_I2C_Read 5C0A  
                            _umid 00FC                              fsr0h 000FEA  
                            _ssid 02A1                              fsr1h 000FE2  
                            indf0 000FEF                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0051  
                __end_of_I2C_Wait 5EB6                  __end_of_I2C_Stop 5F08  
                    ?i2_I2C_Start 0001                              prodh 000FF4  
                            prodl 000FF3                      ?i2_I2C_Write 0002  
                 __end_ofi2_delay 5E12                              start 000E  
              ??_Lcd_Write_String 0066                     __CFG_IESO$OFF 000000  
                filtroStr@strdest 0097                   __end_of_Lcd_Cmd 5DEE  
                   __CFG_MCLRE$ON 000000                      ___ftmul@cntr 0079  
                    ___param_bank 000000                      ___ftmul@sign 007A  
                    ___fttol@exp1 00A4                      ___fttol@lval 00A0  
                ?_I2C_Master_Init 006D                     __CFG_PLLDIV$1 000000  
                    ?_readButtons 0001                    __CFG_CCP2MX$ON 000000  
                           ?_main 0001                             _ACKEN 007E2C  
                           _ACKDT 007E2D                   __end_of___ftadd 4378  
                           STR_10 7F26                             STR_11 7F26  
                           STR_12 7E51                             STR_20 7BD2  
                           STR_21 7FF6                             STR_13 7FF6  
                           STR_30 7C78                             STR_14 7E43  
                           STR_22 7CCA                             STR_15 7FF6  
                           STR_23 7D84                             STR_31 7B6C  
                           STR_40 7FF9                             STR_24 7C28  
                           STR_16 7B99                             STR_32 77B1  
                           STR_17 7FF6                             STR_41 7F26  
                           STR_25 7E89                             STR_33 7DEA  
                           STR_42 7F26                             STR_26 7FCE  
                           STR_34 7E7B                             STR_50 7DFA  
                           STR_18 7BBC                             STR_19 7FF6  
                           STR_51 7FFB                             STR_35 7FD3  
                           STR_27 7FBB                             STR_43 7E6D  
                           STR_52 7FFD                             STR_60 7FEB  
                           STR_36 7FAD                             STR_28 7F6B  
                           STR_44 7E35                             STR_45 7FF6  
                           STR_61 7FD8                             STR_37 7FC2  
                           STR_29 7C13                             STR_53 7B2E  
                           STR_54 7FF6                             STR_38 7FF9  
                           STR_70 7E97                             STR_62 7E5F  
                           STR_46 7E27                             STR_63 7FF6  
                           STR_47 7FF6                             STR_71 7F26  
                           STR_39 7F8A                             STR_55 7CDE  
                           STR_72 7EA5                             STR_56 7C78  
                           STR_48 7FDD                             STR_64 7F91  
                           STR_80 7E09                             STR_57 7F26  
                           STR_81 7F50                             STR_65 7EC9  
                           STR_73 7EB1                             STR_49 7BFE  
                           STR_66 7FEF                             STR_90 7FA6  
                           STR_82 7F1F                             STR_58 7EA5  
                           STR_74 7E18                             STR_67 7FEF  
                           STR_83 7F59                             STR_91 7F0B  
                           STR_75 7C3D                             STR_59 7A71  
                           STR_84 7F9F                             STR_68 7F47  
                           STR_92 7C8E                             STR_76 7BE8  
                           STR_77 7F33                             STR_85 7EEA  
                           STR_69 7CB6                             STR_93 7C7A  
                           STR_86 7F29                             STR_94 7CA2  
                           STR_78 7C52                             STR_87 7F73  
                           STR_95 7DA6                             STR_79 7D2A  
                           STR_88 7EF5                             STR_96 7DB7  
                           STR_89 7F00                             STR_97 7DC8  
                           STR_98 7DD9                             STR_99 7D3C  
                 __end_of___ftdiv 4D58                   __end_of___lldiv 5734  
                           u10020 1CD0                             u10040 1CF0  
                           u10140 1D64                             u11200 225E  
                           u12010 5296                             u11210 2274  
                           u12004 5286                             u11300 2300  
                           u11220 2284                   __end_of___ftmul 4B86  
                           u12005 5282                             u11310 2310  
                           u11230 229A                             u11150 2212  
                           u12120 423A                             u11400 23A6  
                           u11320 2320                             _T0CON 000FD5  
                           u12034 52A6                             u11410 23B6  
                           u11330 2336                             u10610 1F6C  
                           u12051 41DC                             u12035 52A2  
                           u12220 42EA                             u12028 529A  
                           u11500 2446                             u11420 23C6  
                           u11340 2346                             u11180 223C  
                           u10540 1F0C                             u12061 41F0  
                           u13030 3A22                             u13110 2C82  
                           u12150 4278                             u11510 2456  
                           u11430 23D6                             u11350 2356  
                           u11190 224E                             u10630 1F8E  
                           u12311 4AA2                             u13120 2CA8  
                           u13112 2C84                             u11600 24E6  
                           u11520 2466                             u11440 23E6  
                           u11360 2366                             u11280 22E0  
                           u10720 2010                             u12401 49AA  
                           u13050 3A54                             u13122 2CAA  
                           u12090 4210                             u11610 24F6  
                           u11530 2476                             u11450 23F6  
                           u11290 22F0                             u10650 1FB2  
                           u10570 1F30                             u12331 4ACA  
                           u13220 2F74                             u12420 49E4  
                           u11700 2586                             u11620 2506  
                           u11540 2486                             u10660 1FC2  
                           u10580 1F42                             u12261 4C82  
                 __end_of___fttol 4A90                             u13070 3A82  
                           u13230 2F9A                             u13222 2F76  
                           u13150 2D38                             u12190 42B6  
                           u11710 2596                             u11630 2516  
                           u11550 2496                             u11470 2416  
                           u11390 2396                             u10750 2040  
                           u10590 1F52                             u11800 440A  
                           u13232 2F9C                             u13160 2D5E  
                           u13152 2D3A                             u11720 25A6  
                           u11640 2526                             u11560 24A6  
                           u11480 2426                             u10760 2050  
                           u12281 4CAA                             u12425 49DC  
                           u13250 2FE4                             u13162 2D60  
                           u14210 34D0                             u11730 25BC  
                           u11650 2536                             u11570 24B6  
                           u11490 2436                             u10850 20CE  
                           u12620 50F8                             u13260 300A  
                           u13252 2FE6                             u12460 4A68  
                           u11740 25CC                             u11660 2546  
                           u11580 24C6                             u13262 300C  
                           u14230 3560                             u11750 25DC  
                           u11670 2556                             u11590 24D6  
                           u11807 4400                             u11840 446A  
                           u14160 341C                             u11760 25F2  
                           u11680 2566                             u10880 20F2  
                  _filtroStr$1335 018E                             u12490 56E4  
                           u12570 5060                             u11770 43C0  
                           u14250 35EC                             u14090 31DC  
                           u11690 2576                             u10890 2102  
                           u14340 026E                             u11950 5500  
                           u11870 44BC                             u11847 4460  
                           u14360 029A                             u14265 57D4  
                           u11777 43B6                             u11980 5276  
                           u11877 44B2                             u13750 3BAE  
                           u14630 0A78                             u15407 5B4A  
                           u11975 551A                             u13735 3B42  
                           u11976 551C                             u11968 5504  
                           u15417 5B5E                             u13737 3B44  
                           u15427 5646                             u13780 3BF2  
                           u14740 0C94                             u15437 565E  
                           u12990 3838                             u13950 3D80  
                           u11998 527A                             u15447 5676  
                           u13695 3AFC                             u13960 3D8C  
                           u14760 0CD0                             u15457 5DE0  
                           u13697 3AFE                             u15377 5266  
                           u15467 5808                             u15387 5078  
                           u14860 0E1A                             u14780 0D0C  
                           u15397 5D32                             u13966 3D8E  
                 __end_of___lwdiv 5986                   __end_of___lwmod 5AA8  
                           i2l940 5354                             i2l941 5314  
                           i2l934 5346                             i2l943 533E  
                           i2l935 52EE                             i2l937 530E  
                           i2l946 5364                             _RCREG 000FAE  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _SPBRG 000FAF                      ?_limpaBuffer 0001  
                   __CFG_USBDIV$1 000000                   __end_of__doprnt 2BD6  
         __size_of_Lcd_Set_Cursor 00B4                             _TXREG 000FAD  
                 _writeEEPROM_ext 5AA8                     __CFG_PWRT$OFF 000000  
                 __end_of_btPress 5E6E                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
              __size_of_UART_Init 001C                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 __end_of_readADC 52D8                    __CFG_EBTRB$OFF 000000  
                           _delay 5D28                             _blink 5C0A  
                           __temp 0221                             _clima 00EB  
                           __umid 0200                   __end_of_dpowers 77B1  
                           _line1 01DA                             _line2 01C5  
                           _line3 01B0                             _line4 019B  
                 __end_of_isdigit 5E34                             _senha 0292  
                   ___ftpack@sign 0064          _contador_fase_automatica 0278  
                           _timer 3F16                             _putch 5EC8  
                           main@i 00E8                 __end_of_I2C_Start 5F10  
                  __pbitbssCOMRAM 0278                 __end_of_I2C_Write 5EEE  
                           pclath 000FFA             __end_of_setRangeValor 523E  
                           tablat 000FF5             setRangeValor@_var_ajt 0065  
                           status 000FD8           __end_ofi2_setRangeValor 5372  
                           wtemp6 0052                   __end_of_sprintf 5A64  
                  setUmidade@_umd 0079                   __end_of_strcspn 562C  
                 __end_of_strncmp 4E28                   __end_of_strncpy 58DC  
                  __CFG_ICPRT$OFF 000000                  atualizaLCD@line1 0068  
                atualizaLCD@line2 006A                  atualizaLCD@line3 006C  
                atualizaLCD@line4 006E             i2writeEEPROM_ext@data 0004  
                  __CFG_PBADEN$ON 000000                  __end_of_Lcd_Init 56B0  
                __end_of_Lcd_Port 5CCC               __size_ofi2_I2C_Read 002E  
      __size_of_alterarConfigWifi 04CC               __size_ofi2_I2C_Wait 0012  
                 __initialization 5372               __size_ofi2_I2C_Stop 0008  
                    __end_of_main 1644                  _ajuste_parametro 0198  
                          ??_main 00D7                     ___fttol@sign1 009F  
                    i2I2C_Write@d 0002               _enviaDadosWifi$2490 00D4  
              __size_of_Lcd_Clear 000E                     __activetblptr 000002  
                  _enviaDadosWifi 2BD6                         I2C_Read@a 0061  
              readEEPROM_ext@data 0066                            ?_delay 0060  
                          ?_blink 0060                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          STR_100 7D4E                            STR_101 7D60  
                          STR_102 7F3D                            STR_110 7CF1  
                          STR_103 7F7B                            STR_111 7D72  
                          STR_112 7F83                            STR_104 7F62  
                          STR_105 7FB4                            STR_106 7D95  
                          _ADRESH 000FC4                            STR_107 7C66  
                          STR_108 7D04                            STR_109 7D17  
                          _ADRESL 000FC3                            ?_timer 0001  
                __end_of_acaoFlap 5524                            ?_putch 0001  
                __end_of___ftpack 5052                         ??i2_delay 0003  
                          _INT2IF 007F81                            i2l1100 3F3A  
                          i2l1110 3F8A                            i2l1102 3F4A  
                          i2l1112 3F92                            i2l1104 3F52  
                          i2l1113 3FA0                            i2l1122 3FF6  
                          i2l1114 3FAE                            i2l1106 3F6C  
                          i2l1131 40E0                            i2l1140 41BA  
                          i2l1124 4004                            i2l1108 3F7A  
                          i2l1117 3FCE                            i2l1142 41BE  
                          i2l1134 4140                            i2l1126 401A  
                          i2l1119 3FD6                            i2l1128 4028  
                          i2l1137 417E                            i2l1261 4BE2  
                          i2l1263 4C10                            i2l1264 4C1A  
                          i2l1265 4C24                            i2l1098 3F2C  
                          i2l1477 5E00                            i2l1478 5DF0  
                          _INTCON 000FF2                            i2l6477 5DF0  
                          i2l8823 3F6C                            i2l8809 3F2C  
                          i2l8861 3FF6                            i2l8867 401A  
                __end_of___lwtoft 5DC8                         ??_Lcd_Cmd 0061  
                          _TIMER0 0008                            _TMR0IF 007F92  
         __size_of_Lcd_Write_Char 003E                            _SSPADD 000FC8  
                          _SSPBUF 000FC9                      filtroStr@fim 0093  
                    filtroStr@aux 0152                      filtroStr@str 0095  
                    atualizaLCD@i 0070                    __CFG_XINST$OFF 000000  
               __end_of_UART_Init 5E8A                      readADC@canal 0068  
                          ___ftge 5404                    _readEEPROM_ext 5986  
                          ___wmul 5D52                         ??___ftadd 0081  
                  __CFG_STVREN$ON 000000                  __end_of_controle 3F16  
                       ??___ftdiv 008D                            _h_flap 01F4  
                       ??___lldiv 0068                         ??___ftmul 0072  
                          _getMac 4378                         ??___fttol 009A  
                          _blinkk 027A                         ??___lwdiv 0064  
                       ??___lwmod 006B           __end_of_writeEEPROM_ext 5AEA  
                       ??__doprnt 0072                            _memset 5C6C  
                          delay@x 0060                            _buzzer 00FA  
                          clear_0 53CA                            clear_1 53D6  
                          clear_2 53E2                            clear_3 53F0  
                          _setLed 5E34                            blink@i 0064  
                       ??_btPress 0060      _t_controle_religar_ventoinha 0035  
                    __doprnt@flag 0077                            _printf 5B68  
                    __doprnt@prec 0076            __end_of_enviaDadosWifi 3108  
                          _strchr 5734                            _strcpy 5814  
                          _strlen 58DC                            _strtok 489A  
                          _strspn 5524                            _strstr 50FE  
           ___ftmul@f3_as_product 0076                         ??_readADC 0062  
                    __pdataCOMRAM 0050                         ??_isdigit 0060  
                       ?_I2C_Read 0061                         ?_I2C_Wait 0001  
                       ?_I2C_Stop 0001                      acaoFlap@acao 0067  
                    __mediumconst 776E                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0060                         ??_sprintf 008B  
            __size_of_atualizaLCD 00C6                   setUmidade@_clim 0078  
                       ??_strcspn 006A                         ??_strncmp 006C  
                       ??_strncpy 0066                   Lcd_Set_Cursor@a 0064  
                 Lcd_Set_Cursor@b 0063                   Lcd_Set_Cursor@y 0066  
                 Lcd_Set_Cursor@z 0065                        __acao_flap 0042  
                      __accesstop 0060           __end_of__initialization 53F6  
                      ___ftadd@f1 007B                        ___ftadd@f2 007E  
                ?i2_setRangeValor 0006                        ___ftge@ff1 0060  
                      ___ftge@ff2 0063      __size_of_criaCaracteresCGRAM 00AC  
               __end_of_Lcd_Clear 5EE4                  _h_modo_seguranca 00F1  
                   ___rparam_used 000001                        ___ftdiv@f1 0087  
                      ___ftdiv@f2 008A                        ___ftdiv@f3 0091  
          __end_of_readEEPROM_ext 59D8           _h_subir_temp_automatica 00ED  
                 _getSensors$1521 00AB                   _getSensors$1523 00A5  
                 _getSensors$1525 00A8                        ___ftmul@f1 006C  
                      ___ftmul@f2 006F                   _getSensors$2491 00B0  
            __size_ofi2_I2C_Start 0008                        ___fttol@f1 0096  
            __size_ofi2_I2C_Write 000A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 5F20                      __pidataBANK2 5E8A  
                   __end_of_delay 5D52                     __end_of_blink 5C3C  
                   __end_of_timer 41CA                     __end_of_putch 5ED6  
              __size_of_faseAtual 013E            __size_of_tabelaUmidade 0FD2  
                      ___lwtoft@c 0069                   ?_enviaDadosWifi 0001  
            __size_of_readButtons 0028                    _Lcd_Set_Cursor 4EEE  
                    ??i2_I2C_Read 0004                        ??_I2C_Read 0063  
                    ??i2_I2C_Wait 0001                        ??_I2C_Wait 0060  
                    ??i2_I2C_Stop 0002                        ??_I2C_Stop 0061  
            __size_of_limpaBuffer 0040                         ?_Lcd_Init 0001  
                         ??_delay 0062                         ?_Lcd_Port 0001  
                      _h_abafador 00EF                        __doprnt@ap 0070  
                         ??_blink 0064                        __doprnt@cp 007C  
                      __doprnt@pb 006C             writeEEPROM_ext@adress 0064  
                         ??_timer 0011                           ??_putch 0060  
              __size_of_filtroStr 016E           i2setRangeValor@_var_ajt 0006  
                      __pbssBANK0 00E9                        __pbssBANK1 0196  
                      __pbssBANK2 0200                           ?_TIMER0 0001  
             writeEEPROM_ext@data 0063                   ?_readEEPROM_ext 0001  
                         TIMER0@c 0030                __end_ofi2_I2C_Read 5D28  
                    I2C_Read@temp 0063                __end_ofi2_I2C_Wait 5EC8  
                         ?___ftge 0060                __end_ofi2_I2C_Stop 5F18  
                      _climaAtual 59D8                           ?___wmul 0060  
                         ?_getMac 0073                           ?_memset 0060  
                ?_writeEEPROM_ext 0063                           ?_setLed 0060  
       __size_of_Lcd_Write_String 002E                         ?_acaoFlap 0062  
                       ?___ftpack 0060            __end_of_Lcd_Set_Cursor 4FA2  
                      I2C_Write@d 0061                           ?_printf 0081  
                      _getSensors 3108                           ?_strchr 0060  
                         ?_strcpy 0071                           ?_strlen 0060  
                       ?___lwtoft 0069                           ?_strtok 006D  
                         ?_strspn 0066                           ?_strstr 006F  
                   ??_I2C_Restart 0061                   __CFG_WDTPS$1024 000000  
                      ??_Lcd_Init 0063                        ??_Lcd_Port 0060  
                         _SSPCON1 000FC6                           _SSPCON2 000FC5  
                         _SSPSTAT 000FC7                           i2_delay 5DEE  
                   filtroStr@_str 0100                         ?_controle 0001  
                   _tabelaUmidade 1644                   __CFG_VREGEN$OFF 000000  
               __end_of_faseAtual 4794                    _Lcd_Write_Char 5B2A  
          acaoFlap@tempo_aguardar 0064                           _Lcd_Cmd 5DC8  
                 __size_of_TIMER0 4C68                         _I2C_Start 5F08  
                       _I2C_Write 5EE4                           __Hparam 0000  
                         __Lparam 0000                alterarConfigWifi@i 00C3  
                 __size_of___ftge 0092                           ___ftadd 41CA  
                         ___ftdiv 4C70                           ___lldiv 56B0  
                 __size_of___wmul 0028                           ___ftmul 4A90  
                         ___fttol 4998                           ___lwdiv 5932  
                         ___lwmod 5A64              i2setRangeValor@_acao 000E  
                 __size_of_getMac 0170                 __end_of_filtroStr 4656  
                         __doprnt 2616                           __pcinit 5372  
                      ??_acaoFlap 0066                        ??___ftpack 0065  
                 __size_of_memset 0030                           _btPress 5E52  
                         __ramtop 0800                   ?_Lcd_Set_Cursor 0063  
                 __size_of_setLed 001E                           _bt_flag 0044  
                         __ptext0 0012                           __ptext1 5C3C  
                         __ptext2 4794                           __ptext3 1644  
                         __ptext4 51A0                           __ptext5 5986  
                         __ptext6 5EF8                           __ptext7 5BD8  
                         __ptext8 3108                           __ptext9 523E  
         _wifi_habilita_alteracao 01F1                    _t_wifi_restart 0197  
                 __size_of_printf 0038                        ??___lwtoft 006C  
                 __size_of_strchr 0070                           _readADC 523E  
                 __size_of_strcpy 0066                   __size_of_strlen 0056  
                 __size_of_strtok 00FE                   __size_of_strspn 0084  
                 __size_of_strstr 00A2                           _dpowers 77A7  
                         _isdigit 5E12         _t_controle_modo_seguranca 0033  
                         getMac@i 007B                           getMac@j 0079  
        __size_of_I2C_Master_Init 0070                           _tempajt 00EA  
                   _t_flap_ligado 00F5                           _umidajt 00E9  
                         _sprintf 5A20                     __doprnt@width 007E  
             __end_of_I2C_Restart 5F00                           _strcspn 55A8  
          __end_of_Lcd_Write_Char 5B68                           _strncmp 4D58  
                  __pintcode_body 4B86                           _strncpy 587A  
            end_of_initialization 53F6                    ?_tabelaUmidade 0060  
                      ??_controle 0068                           memset@c 0062  
                         memset@n 0064                           memset@p 0066  
                   __Lmediumconst 776E                           int_func 4B86  
                      _timer$1417 0018                        _timer$1418 001A  
                      _timer$1419 001C                        _setUmidade 4794  
                      blink@start 0062                        ?_I2C_Start 0001  
                       i2u1254_40 5D1A                         i2u1334_40 3FA8  
                       i2u1255_45 5D1C                         i2u1335_45 3FAA  
                      ?_I2C_Write 0061                         i2u1547_47 5DF6  
                    _bufferSerial 0242                   ___lldiv@divisor 0064  
                 ___lldiv@counter 006C                         _RCSTAbits 000FAB  
                         printf@f 0081          criaCaracteresCGRAM@F3896 776F  
                I2C_Master_Init@c 006D                           postdec1 000FE5  
                         postdec2 000FDD                       ?_climaAtual 0060  
                         postinc0 000FEE                           postinc2 000FDE  
                       Lcd_Port@a 0060           setRangeValor@end_eeprom 0069  
                      _wifi_SENHA 01EF                           strlen@s 0060  
                       _UART_Init 5E6E                  setUmidade@_clima 006C  
                         strspn@i 006B                         _PORTAbits 000F80  
          __size_of_setRangeValor 009E                         _PORTBbits 000F81  
                     ?_getSensors 0001                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _PORTEbits 000F84  
             _criaCaracteresCGRAM 5052                        _updateLeds 5C3C  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96           i2writeEEPROM_ext@adress 0005  
               __size_of_I2C_Read 0032                 tabelaUmidade@_umd 0067  
               tabelaUmidade@_tmp 0060                 __size_of_I2C_Wait 0014  
               __size_of_I2C_Stop 0008                        _trava_fase 00F8  
                _t_flap_intervalo 00F4                   ?_Lcd_Write_Char 0001  
               Lcd_Write_String@a 0064                 Lcd_Write_String@i 0066  
            _t_controle_fim_fases 0040                       ___ftdiv@exp 0094  
            ?_criaCaracteresCGRAM 0001                         _TXSTAbits 000FAC  
                 filtroStr@inicio 0091                    __end_of_TIMER0 4C70  
            criaCaracteresCGRAM@i 00A3              criaCaracteresCGRAM@j 00A2  
            criaCaracteresCGRAM@k 00A1         tabelaUmidade@_tipo_sensor 0064  
                     ___ftmul@exp 0075                         _Lcd_Clear 5ED6  
                ??_enviaDadosWifi 00C3                     _t_leitura_adc 003C  
                  __end_of___ftge 5496                    i2I2C_Read@temp 0004  
                  __end_of___wmul 5D7A                        filtroStr@i 0195  
                    _md_seguranca 0279                        filtroStr@p 0193  
                      filtroStr@x 0192                        filtroStr@y 0190  
                _Lcd_Write_String 5CCC                        ?_UART_Init 0001  
                   __pidataCOMRAM 5F25                    __end_of_getMac 44E8  
                  __end_of_memset 5C9C                    __end_of_setLed 5E52  
                  __end_of_printf 5BA0                       _I2C_Restart 5EF8  
                  __end_of_strchr 57A4                   _setUmidade$1300 0075  
                  __end_of_strcpy 587A                    __end_of_strlen 5932  
                 _setUmidade$1297 006F                   _setUmidade$1298 0071  
                 _setUmidade$1299 0073                    __end_of_strtok 4998  
                  __end_of_strspn 55A8                    __end_of_strstr 51A0  
                   ??_atualizaLCD 0070               start_initialization 5372  
      _t_controle_temp_automatica 003D                       i2I2C_Read@a 0002  
                 ??_tabelaUmidade 0065               __size_of_climaAtual 0048  
               __size_of_Lcd_Init 0084                 __size_of_Lcd_Port 0030  
                ??_readEEPROM_ext 0065                 ??_I2C_Master_Init 0071  
                        ??_TIMER0 001E                     _setRangeValor 51A0  
           ??_criaCaracteresCGRAM 0064                       ?_setUmidade 0068  
                   ??i2_I2C_Start 0002                       ??_I2C_Start 0061  
                   ??i2_I2C_Write 0004               __size_of_getSensors 0518  
                     ??_I2C_Write 0063         _t_controle_religar_buzzer 0037  
                      ?_Lcd_Clear 0001                          ??___ftge 0066  
                        ??___wmul 0064          __size_ofi2_setRangeValor 009A  
                        ??_getMac 0077                       __doprnt@len 007A  
                     __doprnt@val 0078                       __pdataBANK0 00FB  
                     __pdataBANK2 02B0                  __CFG_LPT1OSC$OFF 000000  
                   ??_readButtons 0006                   Lcd_Write_Char@a 0063  
                        ??_memset 0066                   Lcd_Write_Char@y 0062  
                        ??_setLed 0061                          ??_printf 00BD  
               faseAtual@_tempajt 0062                          ??_strchr 0064  
                        ??_strcpy 0075                          ??_strlen 0062  
                        ??_strtok 0071                          ??_strspn 006A  
                        ??_strstr 0073                     ??_limpaBuffer 0068  
               __size_of_acaoFlap 008E                 __size_of___ftpack 00B0  
                     __pbssCOMRAM 0031                       ?_updateLeds 0001  
               __size_of___lwtoft 0026                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                 _t_temp_automatica 00F3  
                    _isdigit$1991 0061                  _t_buzzer_religar 00FF  
                        ?i2_delay 0001                    ?_setRangeValor 0065  
             __end_of_atualizaLCD 4EEE            _senha_desbloqueio_func 01F3  
                        ?_Lcd_Cmd 0001                         __doprnt@c 0080  
                       __doprnt@f 006E                        setLed@acao 0060  
               __size_of_controle 042A          _criaCaracteresCGRAM$1229 009F  
                       _faseAtual 4656                         _main$1633 00DA  
                       _main$1642 00E0                         _main$1634 00DC  
                       _main$1637 00DE                         _main$1654 00E4  
                       _main$1649 00E2                         _main$1659 00E6  
                       _main$2492 00D8                  ___lwdiv@dividend 0060  
                ??_Lcd_Set_Cursor 0064                         __pintcode 0008  
                   __pmediumconst 776E                          ?___ftadd 007B  
                        ?___ftdiv 0087               __end_ofi2_I2C_Start 5F20  
                        ?___lldiv 0060                          ?___ftmul 006C  
                        ?___fttol 0096               __end_ofi2_I2C_Write 5EF8  
                        ?___lwdiv 0060                          ?___lwmod 0067  
                        ?__doprnt 006C               _tipo_sensor_umidade 00F7  
                     ??_UART_Init 0060              readEEPROM_ext@adress 0065  
                        ?_btPress 0001                          ?_readADC 0060  
                       _filtroStr 44E8                         _media_adc 003B  
             __size_of_setUmidade 0106                          ?_isdigit 0001  
                        _I2C_Read 5BD8                          _I2C_Wait 5EA2  
                        _I2C_Stop 5F00               __end_of_readButtons 5DA2  
           acaoFlap@tempo_ativado 0062          __size_of_writeEEPROM_ext 0042  
                ___lwdiv@quotient 0064                    __size_of_delay 002A  
                  __size_of_blink 0032               i2setRangeValor@_aux 000F  
             i2setRangeValor@_max 0009               i2setRangeValor@_min 0008  
                        ?_sprintf 0081                          ?_strcspn 0066  
                        ?_strncmp 0066                          ?_strncpy 0060  
             __end_of_limpaBuffer 5B2A                    __size_of_timer 02B4  
                  __size_of_putch 000E                    ___wmul@product 0064  
                       btPress@bt 0060                          _LATAbits 000F89  
                        _LATBbits 000F8A                          _LATCbits 000F8B  
                        _LATDbits 000F8C                          _LATEbits 000F8D  
                     strncpy@from 0062                         _opcaomenu 0199  
                        _PIE1bits 000F9D                       strncpy@size 0064  
                       getMac@mac 0073                         getMac@men 007A  
                       getMac@var 0075                         blink@line 0060  
                 enviaDadosWifi@i 00D6                       _h_venotinha 00F0  
                      ?_faseAtual 0060                          Lcd_Cmd@a 0062  
                        _PIR1bits 000F9E               __size_of_updateLeds 0030  
                     ??_Lcd_Clear 0063                      ??_climaAtual 0062  
                    ??_getSensors 00A5                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0060                        ?_filtroStr 0091  
               ??i2_setRangeValor 000B                    filtroStr@count 0191  
                ??_Lcd_Write_Char 0061                          i2delay@x 0001  
                     _atualizaLCD 4E28                          _Lcd_Init 562C  
               i2_writeEEPROM_ext 5BA0                          _Lcd_Port 5C9C  
                 ??_setRangeValor 006A                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 5386  
                       copy_data1 53A6                ?i2_writeEEPROM_ext 0004  
              __end_of_climaAtual 5A20                      setUmidade@tp 006E  
        __end_of_Lcd_Write_String 5CFA                   _f_falta_energia 00FE  
                __size_ofi2_delay 0024                  __size_of_Lcd_Cmd 0026  
                     i2_I2C_Start 5F18                       i2_I2C_Write 5EEE  
              __end_of_getSensors 3620               ??i2_writeEEPROM_ext 0005  
                        __Hrparam 0000                          __Lrparam 0000  
                __size_of___ftadd 01AE                  __size_of___ftdiv 00E8  
                __size_of___lldiv 0084                  __size_of___ftmul 00F6  
                __size_of___fttol 00F8                  __size_of___lwdiv 0054  
                __size_of___lwmod 0044                       _readButtons 5D7A  
                        _acaoFlap 5496                          ___ftpack 4FA2  
                __size_of__doprnt 05C0                    readADC@digital 0066  
             Lcd_Write_Char@tempp 0061                  __size_of_btPress 001C  
                        ___lwtoft 5DA2                      ?_I2C_Restart 0001  
                        _base_sec 004A                       _limpaBuffer 5AEA  
                  getSensors@auxx 00AD                   _I2C_Master_Init 57A4  
                __size_of_readADC 009A         __end_ofi2_writeEEPROM_ext 5BD8  
                       setLed@led 0061                  __size_of_isdigit 0022  
                 ___lwdiv@divisor 0062                   ___lwdiv@counter 0066  
                        _h_buzzer 00EE                          __ptext10 5DA2  
                        __ptext11 4998                          __ptext20 5052  
                        __ptext12 4A90                          __ptext21 3AEC  
                        __ptext13 5404                          __ptext30 5F00  
                        __ptext22 5496                          __ptext14 4C70  
                        __ptext31 5F08                          __ptext23 5E34  
                        __ptext15 41CA                          __ptext40 55A8  
                        __ptext32 5EA2                          __ptext24 59D8  
                        __ptext16 4FA2                          __ptext41 50FE  
                        __ptext33 5B68                          __ptext25 5E52  
                        __ptext17 4656                          __ptext50 5E12  
                        __ptext42 4D58                          __ptext34 5AEA  
                        __ptext26 5C0A                          __ptext18 2BD6  
                        __ptext51 5D52                          __ptext43 58DC  
                        __ptext35 5C6C                          __ptext27 3620  
                        __ptext19 4378                          __ptext60 5ED6  
                        __ptext52 5A64                          __ptext44 5734  
                        __ptext36 5D28                          __ptext28 5AA8  
                        __ptext61 5DC8                          __ptext53 5932  
                        __ptext45 587A                          __ptext37 44E8  
                        __ptext29 5EE4                          __ptext70 5D7A  
                        __ptext62 5C9C                          __ptext54 4E28  
                        __ptext46 5814                          __ptext38 489A  
                        __ptext71 5EEE                          __ptext63 57A4  
                        __ptext55 5CCC                          __ptext47 5A20  
                        __ptext39 5524                          __ptext72 5F10  
                        __ptext64 56B0                          __ptext56 5B2A  
                        __ptext48 2616                          __ptext73 5F18  
                        __ptext57 4EEE                          __ptext49 5EC8  
                        __ptext74 5CFA                          __ptext66 3F16  
                        __ptext58 5E6E                          __ptext75 5EB6  
                        __ptext67 52D8                          __ptext59 562C  
                        __ptext76 0000                          __ptext68 5BA0  
                        __ptext69 5DEE                          _lcd_rfsh 004B  
       i2setRangeValor@end_eeprom 000A                  __size_of_sprintf 0044  
          _f_buzzer_falta_energia 0041                  __size_of_strcspn 0084  
                __size_of_strncmp 00D0                          _controle 3AEC  
                __size_of_strncpy 0062                        strcpy@from 0073  
               ??_writeEEPROM_ext 0064                          _fornalha 00F9  
                   __size_of_main 1632                      ??_setUmidade 006E  
                     _t_fim_fase1 004E                       _t_fim_fase2 004D  
                     _t_fim_fase3 004C                        strncmp@len 006A  
                     ??_faseAtual 0064                          blink@end 0063  
                  _wifi_conectado 019A                          _wifi_MAC 02B0  
                     faseAtual@tp 0065                          int$flags 0051  
           __CFG_CPUDIV$OSC1_PLL2 000000                       ??_filtroStr 0099  
  _t_religar_ventoinha_automatica 00F2                        _INTCONbits 000FF2  
                      i2_I2C_Read 5CFA                        i2_I2C_Wait 5EB6  
                      i2_I2C_Stop 5F10                      ??_updateLeds 0063  
              __end_of_setUmidade 489A                   faseAtual@_fasee 0064  
                        isdigit@c 0062                          memset@p1 0060  
     __end_of_criaCaracteresCGRAM 50FE                 enviaDadosWifi@AUX 00C5  
           __end_of_tabelaUmidade 2616                          intlevel2 0000  
                       sprintf@ap 008B                         sprintf@pb 008D  
__end_ofcriaCaracteresCGRAM@F3896 77A7                     getSensors@aux 00B4  
                       sprintf@wh 0081                   faseAtual@tmpajt 0066  
                       strchr@chr 0062                  ___lwmod@dividend 0067  
                       strchr@ptr 0060                  ___lldiv@dividend 0060  
                     climaAtual@c 0062                         strcspn@s1 0066  
                       strcspn@s2 0068                         strncmp@s1 0066  
                       strncmp@s2 0068                         strncpy@cp 0066  
                       strncpy@to 0060      criaCaracteresCGRAM@character 0067  
              __end_of_updateLeds 5C6C                          printf@ap 00BD  
                        printf@pb 00BF                 _alterarConfigWifi 3620  
               _t_controle_buzzer 003F           __end_of_I2C_Master_Init 5814  
              Lcd_Set_Cursor@temp 0067                ?_alterarConfigWifi 0001  
              setUmidade@_tempajt 006A                    faseAtual@_fase 0060  
                        sprintf@f 0083                  ___lldiv@quotient 0068  
                 ___lwmod@divisor 0069                          strcpy@cp 0076  
      __size_ofi2_writeEEPROM_ext 0038                          strlen@cp 0064  
                        strcpy@to 0071                   ___lwmod@counter 006B  
                        strcspn@i 006B           __size_of_enviaDadosWifi 0532  
             ??_alterarConfigWifi 00C3                          strtok@s1 006D  
                        strtok@s2 006F                          strspn@s1 0066  
                        strspn@s2 0068                          strtok@sp 0031  
                _t_controle_blink 003E                          strstr@s1 006F  
                        strstr@s2 0071                 setUmidade@_umdajt 0068  
               setUmidade@_tmpajt 0077                       getSensors@i 00B3  
                 _t_controle_flap 0039         __end_of_alterarConfigWifi 3AEC  
