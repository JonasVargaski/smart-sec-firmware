

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Jul 15 09:21:43 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 1.44
   100                           ; Generated 14/09/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F4550 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataCOMRAM
   135  005CEA                     __pidataCOMRAM:
   136                           	opt stack 0
   137                           
   138                           ;initializer for __led
   139  005CEA  01                 	db	1
   140                           
   141                           ;initializer for _umid
   142  005CEB  64                 	db	100
   143                           
   144                           ;initializer for _f_falta_energia
   145  005CEC  01                 	db	1
   146                           
   147                           	psect	idataBANK0
   148  005CED                     __pidataBANK0:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _menu
   152  005CED  0F                 	db	15
   153                           
   154                           ;initializer for _temp
   155  005CEE  63                 	db	99
   156                           
   157                           ;initializer for _t_buzzer_religar
   158  005CEF  01                 	db	1
   159                           
   160                           	psect	idataBANK1
   161  005CA2                     __pidataBANK1:
   162                           	opt stack 0
   163                           
   164                           ;initializer for _wifi_MAC
   165  005CA2  3F                 	db	63
   166  005CA3  00                 	db	0
   167  005CA4  00                 	db	0
   168  005CA5  00                 	db	0
   169  005CA6  00                 	db	0
   170  005CA7  00                 	db	0
   171  005CA8  00                 	db	0
   172  005CA9  00                 	db	0
   173  005CAA  00                 	db	0
   174  005CAB  00                 	db	0
   175  005CAC  00                 	db	0
   176  005CAD  00                 	db	0
   177                           
   178                           	psect	mediumconst
   179  007816                     __pmediumconst:
   180                           	opt stack 0
   181  007816  00                 	db	0
   182  007817                     criaCaracteresCGRAM@F3900:
   183                           	opt stack 0
   184  007817  0E                 	db	14
   185  007818  11                 	db	17
   186  007819  11                 	db	17
   187  00781A  1F                 	db	31
   188  00781B  1B                 	db	27
   189  00781C  1B                 	db	27
   190  00781D  1F                 	db	31
   191  00781E  1F                 	db	31
   192  00781F  01                 	db	1
   193  007820  03                 	db	3
   194  007821  07                 	db	7
   195  007822  1D                 	db	29
   196  007823  1D                 	db	29
   197  007824  07                 	db	7
   198  007825  03                 	db	3
   199  007826  01                 	db	1
   200  007827  04                 	db	4
   201  007828  04                 	db	4
   202  007829  0E                 	db	14
   203  00782A  0E                 	db	14
   204  00782B  1F                 	db	31
   205  00782C  1D                 	db	29
   206  00782D  1B                 	db	27
   207  00782E  0E                 	db	14
   208  00782F  04                 	db	4
   209  007830  0A                 	db	10
   210  007831  0A                 	db	10
   211  007832  0A                 	db	10
   212  007833  0E                 	db	14
   213  007834  1F                 	db	31
   214  007835  1F                 	db	31
   215  007836  0E                 	db	14
   216  007837  00                 	db	0
   217  007838  0E                 	db	14
   218  007839  11                 	db	17
   219  00783A  04                 	db	4
   220  00783B  0A                 	db	10
   221  00783C  00                 	db	0
   222  00783D  04                 	db	4
   223  00783E  00                 	db	0
   224  00783F  00                 	db	0
   225  007840  00                 	db	0
   226  007841  00                 	db	0
   227  007842  00                 	db	0
   228  007843  00                 	db	0
   229  007844  00                 	db	0
   230  007845  00                 	db	0
   231  007846  00                 	db	0
   232  007847  00                 	db	0
   233  007848  00                 	db	0
   234  007849  00                 	db	0
   235  00784A  00                 	db	0
   236  00784B  00                 	db	0
   237  00784C  00                 	db	0
   238  00784D  00                 	db	0
   239  00784E  00                 	db	0
   240  00784F                     __end_ofcriaCaracteresCGRAM@F3900:
   241                           	opt stack 0
   242  00784F                     _dpowers:
   243                           	opt stack 0
   244  00784F  0001               	dw	1
   245  007851  000A               	dw	10
   246  007853  0064               	dw	100
   247  007855  03E8               	dw	1000
   248  007857  2710               	dw	10000
   249  007859                     __end_of_dpowers:
   250                           	opt stack 0
   251  0000                     _SSPBUF	set	4041
   252  0000                     _SSPSTAT	set	4039
   253  0000                     _SSPADD	set	4040
   254  0000                     _SSPCON2	set	4037
   255  0000                     _SSPCON1	set	4038
   256  0000                     _ADCON2	set	4032
   257  0000                     _ADCON1	set	4033
   258  0000                     _INTCON	set	4082
   259  0000                     _T0CON	set	4053
   260  0000                     _INTCON3bits	set	4080
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _TRISBbits	set	3987
   263  0000                     _PORTEbits	set	3972
   264  0000                     _PORTCbits	set	3970
   265  0000                     _PORTAbits	set	3968
   266  0000                     _TRISEbits	set	3990
   267  0000                     _TRISAbits	set	3986
   268  0000                     _RCREG	set	4014
   269  0000                     _TMR0L	set	4054
   270  0000                     _TMR0H	set	4055
   271  0000                     _ADCON0bits	set	4034
   272  0000                     _ADCON0	set	4034
   273  0000                     _ADRESL	set	4035
   274  0000                     _ADRESH	set	4036
   275  0000                     _TXREG	set	4013
   276  0000                     _PIE1bits	set	3997
   277  0000                     _PIR1bits	set	3998
   278  0000                     _INTCONbits	set	4082
   279  0000                     _SPBRG	set	4015
   280  0000                     _RCSTAbits	set	4011
   281  0000                     _TXSTAbits	set	4012
   282  0000                     _TRISCbits	set	3988
   283  0000                     _LATDbits	set	3980
   284  0000                     _LATEbits	set	3981
   285  0000                     _LATBbits	set	3978
   286  0000                     _LATCbits	set	3979
   287  0000                     _LATAbits	set	3977
   288  0000                     _PORTBbits	set	3969
   289  0000                     _PORTDbits	set	3971
   290  0000                     _TRISDbits	set	3989
   291  0000                     _ACKEN	set	32300
   292  0000                     _ACKDT	set	32301
   293  0000                     _RCEN	set	32299
   294  0000                     _PEN	set	32298
   295  0000                     _RSEN	set	32297
   296  0000                     _SEN	set	32296
   297  0000                     _INT2IF	set	32641
   298  0000                     _RCIF	set	31989
   299  0000                     _TMR0IF	set	32658
   300  0000                     _GO	set	32273
   301  0000                     _ADON	set	32272
   302  007859                     STR_36:
   303  007859  3C                 	db	60	;'<'
   304  00785A  68                 	db	104	;'h'
   305  00785B  74                 	db	116	;'t'
   306  00785C  6D                 	db	109	;'m'
   307  00785D  6C                 	db	108	;'l'
   308  00785E  3E                 	db	62	;'>'
   309  00785F  3C                 	db	60	;'<'
   310  007860  73                 	db	115	;'s'
   311  007861  74                 	db	116	;'t'
   312  007862  79                 	db	121	;'y'
   313  007863  6C                 	db	108	;'l'
   314  007864  65                 	db	101	;'e'
   315  007865  3E                 	db	62	;'>'
   316  007866  64                 	db	100	;'d'
   317  007867  69                 	db	105	;'i'
   318  007868  76                 	db	118	;'v'
   319  007869  7B                 	db	123
   320  00786A  6D                 	db	109	;'m'
   321  00786B  61                 	db	97	;'a'
   322  00786C  72                 	db	114	;'r'
   323  00786D  67                 	db	103	;'g'
   324  00786E  69                 	db	105	;'i'
   325  00786F  6E                 	db	110	;'n'
   326  007870  3A                 	db	58	;':'
   327  007871  32                 	db	50	;'2'
   328  007872  35                 	db	53	;'5'
   329  007873  70                 	db	112	;'p'
   330  007874  78                 	db	120	;'x'
   331  007875  20                 	db	32
   332  007876  61                 	db	97	;'a'
   333  007877  75                 	db	117	;'u'
   334  007878  74                 	db	116	;'t'
   335  007879  6F                 	db	111	;'o'
   336  00787A  3B                 	db	59	;';'
   337  00787B  6D                 	db	109	;'m'
   338  00787C  61                 	db	97	;'a'
   339  00787D  78                 	db	120	;'x'
   340  00787E  2D                 	db	45
   341  00787F  77                 	db	119	;'w'
   342  007880  69                 	db	105	;'i'
   343  007881  64                 	db	100	;'d'
   344  007882  74                 	db	116	;'t'
   345  007883  68                 	db	104	;'h'
   346  007884  3A                 	db	58	;':'
   347  007885  33                 	db	51	;'3'
   348  007886  35                 	db	53	;'5'
   349  007887  30                 	db	48	;'0'
   350  007888  70                 	db	112	;'p'
   351  007889  78                 	db	120	;'x'
   352  00788A  3B                 	db	59	;';'
   353  00788B  64                 	db	100	;'d'
   354  00788C  69                 	db	105	;'i'
   355  00788D  73                 	db	115	;'s'
   356  00788E  70                 	db	112	;'p'
   357  00788F  6C                 	db	108	;'l'
   358  007890  61                 	db	97	;'a'
   359  007891  79                 	db	121	;'y'
   360  007892  3A                 	db	58	;':'
   361  007893  66                 	db	102	;'f'
   362  007894  6C                 	db	108	;'l'
   363  007895  65                 	db	101	;'e'
   364  007896  78                 	db	120	;'x'
   365  007897  3B                 	db	59	;';'
   366  007898  66                 	db	102	;'f'
   367  007899  6C                 	db	108	;'l'
   368  00789A  65                 	db	101	;'e'
   369  00789B  78                 	db	120	;'x'
   370  00789C  2D                 	db	45
   371  00789D  64                 	db	100	;'d'
   372  00789E  69                 	db	105	;'i'
   373  00789F  72                 	db	114	;'r'
   374  0078A0  65                 	db	101	;'e'
   375  0078A1  63                 	db	99	;'c'
   376  0078A2  74                 	db	116	;'t'
   377  0078A3  69                 	db	105	;'i'
   378  0078A4  6F                 	db	111	;'o'
   379  0078A5  6E                 	db	110	;'n'
   380  0078A6  3A                 	db	58	;':'
   381  0078A7  63                 	db	99	;'c'
   382  0078A8  6F                 	db	111	;'o'
   383  0078A9  6C                 	db	108	;'l'
   384  0078AA  75                 	db	117	;'u'
   385  0078AB  6D                 	db	109	;'m'
   386  0078AC  6E                 	db	110	;'n'
   387  0078AD  3B                 	db	59	;';'
   388  0078AE  7D                 	db	125
   389  0078AF  69                 	db	105	;'i'
   390  0078B0  6E                 	db	110	;'n'
   391  0078B1  70                 	db	112	;'p'
   392  0078B2  75                 	db	117	;'u'
   393  0078B3  74                 	db	116	;'t'
   394  0078B4  2C                 	db	44
   395  0078B5  62                 	db	98	;'b'
   396  0078B6  75                 	db	117	;'u'
   397  0078B7  74                 	db	116	;'t'
   398  0078B8  74                 	db	116	;'t'
   399  0078B9  6F                 	db	111	;'o'
   400  0078BA  6E                 	db	110	;'n'
   401  0078BB  7B                 	db	123
   402  0078BC  70                 	db	112	;'p'
   403  0078BD  61                 	db	97	;'a'
   404  0078BE  64                 	db	100	;'d'
   405  0078BF  64                 	db	100	;'d'
   406  0078C0  69                 	db	105	;'i'
   407  0078C1  6E                 	db	110	;'n'
   408  0078C2  67                 	db	103	;'g'
   409  0078C3  3A                 	db	58	;':'
   410  0078C4  37                 	db	55	;'7'
   411  0078C5  70                 	db	112	;'p'
   412  0078C6  78                 	db	120	;'x'
   413  0078C7  3B                 	db	59	;';'
   414  0078C8  6D                 	db	109	;'m'
   415  0078C9  61                 	db	97	;'a'
   416  0078CA  72                 	db	114	;'r'
   417  0078CB  67                 	db	103	;'g'
   418  0078CC  69                 	db	105	;'i'
   419  0078CD  6E                 	db	110	;'n'
   420  0078CE  2D                 	db	45
   421  0078CF  62                 	db	98	;'b'
   422  0078D0  6F                 	db	111	;'o'
   423  0078D1  74                 	db	116	;'t'
   424  0078D2  74                 	db	116	;'t'
   425  0078D3  6F                 	db	111	;'o'
   426  0078D4  6D                 	db	109	;'m'
   427  0078D5  3A                 	db	58	;':'
   428  0078D6  32                 	db	50	;'2'
   429  0078D7  35                 	db	53	;'5'
   430  0078D8  70                 	db	112	;'p'
   431  0078D9  78                 	db	120	;'x'
   432  0078DA  3B                 	db	59	;';'
   433  0078DB  62                 	db	98	;'b'
   434  0078DC  6F                 	db	111	;'o'
   435  0078DD  72                 	db	114	;'r'
   436  0078DE  64                 	db	100	;'d'
   437  0078DF  65                 	db	101	;'e'
   438  0078E0  72                 	db	114	;'r'
   439  0078E1  3A                 	db	58	;':'
   440  0078E2  31                 	db	49	;'1'
   441  0078E3  70                 	db	112	;'p'
   442  0078E4  78                 	db	120	;'x'
   443  0078E5  20                 	db	32
   444  0078E6  73                 	db	115	;'s'
   445  0078E7  6F                 	db	111	;'o'
   446  0078E8  6C                 	db	108	;'l'
   447  0078E9  69                 	db	105	;'i'
   448  0078EA  64                 	db	100	;'d'
   449  0078EB  20                 	db	32
   450  0078EC  23                 	db	35
   451  0078ED  38                 	db	56	;'8'
   452  0078EE  38                 	db	56	;'8'
   453  0078EF  38                 	db	56	;'8'
   454  0078F0  3B                 	db	59	;';'
   455  0078F1  62                 	db	98	;'b'
   456  0078F2  6F                 	db	111	;'o'
   457  0078F3  72                 	db	114	;'r'
   458  0078F4  64                 	db	100	;'d'
   459  0078F5  65                 	db	101	;'e'
   460  0078F6  72                 	db	114	;'r'
   461  0078F7  2D                 	db	45
   462  0078F8  72                 	db	114	;'r'
   463  0078F9  61                 	db	97	;'a'
   464  0078FA  64                 	db	100	;'d'
   465  0078FB  69                 	db	105	;'i'
   466  0078FC  75                 	db	117	;'u'
   467  0078FD  73                 	db	115	;'s'
   468  0078FE  3A                 	db	58	;':'
   469  0078FF  33                 	db	51	;'3'
   470  007900  70                 	db	112	;'p'
   471  007901  78                 	db	120	;'x'
   472  007902  3B                 	db	59	;';'
   473  007903  7D                 	db	125
   474  007904  3C                 	db	60	;'<'
   475  007905  2F                 	db	47
   476  007906  73                 	db	115	;'s'
   477  007907  74                 	db	116	;'t'
   478  007908  79                 	db	121	;'y'
   479  007909  6C                 	db	108	;'l'
   480  00790A  65                 	db	101	;'e'
   481  00790B  3E                 	db	62	;'>'
   482  00790C  3C                 	db	60	;'<'
   483  00790D  62                 	db	98	;'b'
   484  00790E  6F                 	db	111	;'o'
   485  00790F  64                 	db	100	;'d'
   486  007910  79                 	db	121	;'y'
   487  007911  3E                 	db	62	;'>'
   488  007912  3C                 	db	60	;'<'
   489  007913  64                 	db	100	;'d'
   490  007914  69                 	db	105	;'i'
   491  007915  76                 	db	118	;'v'
   492  007916  3E                 	db	62	;'>'
   493  007917  20                 	db	32
   494  007918  3C                 	db	60	;'<'
   495  007919  68                 	db	104	;'h'
   496  00791A  32                 	db	50	;'2'
   497  00791B  3E                 	db	62	;'>'
   498  00791C  43                 	db	67	;'C'
   499  00791D  6F                 	db	111	;'o'
   500  00791E  6E                 	db	110	;'n'
   501  00791F  66                 	db	102	;'f'
   502  007920  69                 	db	105	;'i'
   503  007921  67                 	db	103	;'g'
   504  007922  75                 	db	117	;'u'
   505  007923  72                 	db	114	;'r'
   506  007924  61                 	db	97	;'a'
   507  007925  E7                 	db	-25
   508  007926  E3                 	db	-29
   509  007927  6F                 	db	111	;'o'
   510  007928  20                 	db	32
   511  007929  57                 	db	87	;'W'
   512  00792A  69                 	db	105	;'i'
   513  00792B  66                 	db	102	;'f'
   514  00792C  69                 	db	105	;'i'
   515  00792D  3C                 	db	60	;'<'
   516  00792E  2F                 	db	47
   517  00792F  68                 	db	104	;'h'
   518  007930  32                 	db	50	;'2'
   519  007931  3E                 	db	62	;'>'
   520  007932  20                 	db	32
   521  007933  53                 	db	83	;'S'
   522  007934  53                 	db	83	;'S'
   523  007935  49                 	db	73	;'I'
   524  007936  44                 	db	68	;'D'
   525  007937  3A                 	db	58	;':'
   526  007938  20                 	db	32
   527  007939  3C                 	db	60	;'<'
   528  00793A  69                 	db	105	;'i'
   529  00793B  6E                 	db	110	;'n'
   530  00793C  70                 	db	112	;'p'
   531  00793D  75                 	db	117	;'u'
   532  00793E  74                 	db	116	;'t'
   533  00793F  20                 	db	32
   534  007940  69                 	db	105	;'i'
   535  007941  64                 	db	100	;'d'
   536  007942  3D                 	db	61	;'='
   537  007943  27                 	db	39
   538  007944  73                 	db	115	;'s'
   539  007945  27                 	db	39
   540  007946  20                 	db	32
   541  007947  76                 	db	118	;'v'
   542  007948  61                 	db	97	;'a'
   543  007949  6C                 	db	108	;'l'
   544  00794A  75                 	db	117	;'u'
   545  00794B  65                 	db	101	;'e'
   546  00794C  3D                 	db	61	;'='
   547  00794D  27                 	db	39
   548  00794E  25                 	db	37
   549  00794F  73                 	db	115	;'s'
   550  007950  27                 	db	39
   551  007951  3E                 	db	62	;'>'
   552  007952  20                 	db	32
   553  007953  53                 	db	83	;'S'
   554  007954  65                 	db	101	;'e'
   555  007955  6E                 	db	110	;'n'
   556  007956  68                 	db	104	;'h'
   557  007957  61                 	db	97	;'a'
   558  007958  3A                 	db	58	;':'
   559  007959  20                 	db	32
   560  00795A  3C                 	db	60	;'<'
   561  00795B  69                 	db	105	;'i'
   562  00795C  6E                 	db	110	;'n'
   563  00795D  70                 	db	112	;'p'
   564  00795E  75                 	db	117	;'u'
   565  00795F  74                 	db	116	;'t'
   566  007960  20                 	db	32
   567  007961  69                 	db	105	;'i'
   568  007962  64                 	db	100	;'d'
   569  007963  3D                 	db	61	;'='
   570  007964  27                 	db	39
   571  007965  70                 	db	112	;'p'
   572  007966  27                 	db	39
   573  007967  20                 	db	32
   574  007968  76                 	db	118	;'v'
   575  007969  61                 	db	97	;'a'
   576  00796A  6C                 	db	108	;'l'
   577  00796B  75                 	db	117	;'u'
   578  00796C  65                 	db	101	;'e'
   579  00796D  3D                 	db	61	;'='
   580  00796E  27                 	db	39
   581  00796F  25                 	db	37
   582  007970  73                 	db	115	;'s'
   583  007971  27                 	db	39
   584  007972  3E                 	db	62	;'>'
   585  007973  20                 	db	32
   586  007974  3C                 	db	60	;'<'
   587  007975  62                 	db	98	;'b'
   588  007976  75                 	db	117	;'u'
   589  007977  74                 	db	116	;'t'
   590  007978  74                 	db	116	;'t'
   591  007979  6F                 	db	111	;'o'
   592  00797A  6E                 	db	110	;'n'
   593  00797B  20                 	db	32
   594  00797C  6F                 	db	111	;'o'
   595  00797D  6E                 	db	110	;'n'
   596  00797E  63                 	db	99	;'c'
   597  00797F  6C                 	db	108	;'l'
   598  007980  69                 	db	105	;'i'
   599  007981  63                 	db	99	;'c'
   600  007982  6B                 	db	107	;'k'
   601  007983  3D                 	db	61	;'='
   602  007984  27                 	db	39
   603  007985  73                 	db	115	;'s'
   604  007986  28                 	db	40
   605  007987  29                 	db	41
   606  007988  27                 	db	39
   607  007989  3E                 	db	62	;'>'
   608  00798A  43                 	db	67	;'C'
   609  00798B  6F                 	db	111	;'o'
   610  00798C  6E                 	db	110	;'n'
   611  00798D  66                 	db	102	;'f'
   612  00798E  69                 	db	105	;'i'
   613  00798F  72                 	db	114	;'r'
   614  007990  6D                 	db	109	;'m'
   615  007991  61                 	db	97	;'a'
   616  007992  72                 	db	114	;'r'
   617  007993  3C                 	db	60	;'<'
   618  007994  2F                 	db	47
   619  007995  62                 	db	98	;'b'
   620  007996  75                 	db	117	;'u'
   621  007997  74                 	db	116	;'t'
   622  007998  74                 	db	116	;'t'
   623  007999  6F                 	db	111	;'o'
   624  00799A  6E                 	db	110	;'n'
   625  00799B  3E                 	db	62	;'>'
   626  00799C  20                 	db	32
   627  00799D  53                 	db	83	;'S'
   628  00799E  65                 	db	101	;'e'
   629  00799F  72                 	db	114	;'r'
   630  0079A0  76                 	db	118	;'v'
   631  0079A1  69                 	db	105	;'i'
   632  0079A2  64                 	db	100	;'d'
   633  0079A3  6F                 	db	111	;'o'
   634  0079A4  72                 	db	114	;'r'
   635  0079A5  3A                 	db	58	;':'
   636  0079A6  20                 	db	32
   637  0079A7  3C                 	db	60	;'<'
   638  0079A8  69                 	db	105	;'i'
   639  0079A9  6E                 	db	110	;'n'
   640  0079AA  70                 	db	112	;'p'
   641  0079AB  75                 	db	117	;'u'
   642  0079AC  74                 	db	116	;'t'
   643  0079AD  20                 	db	32
   644  0079AE  69                 	db	105	;'i'
   645  0079AF  64                 	db	100	;'d'
   646  0079B0  3D                 	db	61	;'='
   647  0079B1  27                 	db	39
   648  0079B2  74                 	db	116	;'t'
   649  0079B3  27                 	db	39
   650  0079B4  20                 	db	32
   651  0079B5  76                 	db	118	;'v'
   652  0079B6  61                 	db	97	;'a'
   653  0079B7  6C                 	db	108	;'l'
   654  0079B8  75                 	db	117	;'u'
   655  0079B9  65                 	db	101	;'e'
   656  0079BA  3D                 	db	61	;'='
   657  0079BB  27                 	db	39
   658  0079BC  25                 	db	37
   659  0079BD  73                 	db	115	;'s'
   660  0079BE  3A                 	db	58	;':'
   661  0079BF  25                 	db	37
   662  0079C0  73                 	db	115	;'s'
   663  0079C1  27                 	db	39
   664  0079C2  3E                 	db	62	;'>'
   665  0079C3  3C                 	db	60	;'<'
   666  0079C4  2F                 	db	47
   667  0079C5  64                 	db	100	;'d'
   668  0079C6  69                 	db	105	;'i'
   669  0079C7  76                 	db	118	;'v'
   670  0079C8  3E                 	db	62	;'>'
   671  0079C9  3C                 	db	60	;'<'
   672  0079CA  2F                 	db	47
   673  0079CB  62                 	db	98	;'b'
   674  0079CC  6F                 	db	111	;'o'
   675  0079CD  64                 	db	100	;'d'
   676  0079CE  79                 	db	121	;'y'
   677  0079CF  3E                 	db	62	;'>'
   678  0079D0  3C                 	db	60	;'<'
   679  0079D1  2F                 	db	47
   680  0079D2  68                 	db	104	;'h'
   681  0079D3  74                 	db	116	;'t'
   682  0079D4  6D                 	db	109	;'m'
   683  0079D5  6C                 	db	108	;'l'
   684  0079D6  3E                 	db	62	;'>'
   685  0079D7  3C                 	db	60	;'<'
   686  0079D8  73                 	db	115	;'s'
   687  0079D9  63                 	db	99	;'c'
   688  0079DA  72                 	db	114	;'r'
   689  0079DB  69                 	db	105	;'i'
   690  0079DC  70                 	db	112	;'p'
   691  0079DD  74                 	db	116	;'t'
   692  0079DE  3E                 	db	62	;'>'
   693  0079DF  66                 	db	102	;'f'
   694  0079E0  75                 	db	117	;'u'
   695  0079E1  6E                 	db	110	;'n'
   696  0079E2  63                 	db	99	;'c'
   697  0079E3  74                 	db	116	;'t'
   698  0079E4  69                 	db	105	;'i'
   699  0079E5  6F                 	db	111	;'o'
   700  0079E6  6E                 	db	110	;'n'
   701  0079E7  20                 	db	32
   702  0079E8  73                 	db	115	;'s'
   703  0079E9  28                 	db	40
   704  0079EA  29                 	db	41
   705  0079EB  7B                 	db	123
   706  0079EC  63                 	db	99	;'c'
   707  0079ED  6F                 	db	111	;'o'
   708  0079EE  6E                 	db	110	;'n'
   709  0079EF  73                 	db	115	;'s'
   710  0079F0  74                 	db	116	;'t'
   711  0079F1  20                 	db	32
   712  0079F2  67                 	db	103	;'g'
   713  0079F3  3D                 	db	61	;'='
   714  0079F4  69                 	db	105	;'i'
   715  0079F5  3D                 	db	61	;'='
   716  0079F6  3E                 	db	62	;'>'
   717  0079F7  64                 	db	100	;'d'
   718  0079F8  6F                 	db	111	;'o'
   719  0079F9  63                 	db	99	;'c'
   720  0079FA  75                 	db	117	;'u'
   721  0079FB  6D                 	db	109	;'m'
   722  0079FC  65                 	db	101	;'e'
   723  0079FD  6E                 	db	110	;'n'
   724  0079FE  74                 	db	116	;'t'
   725  0079FF  2E                 	db	46
   726  007A00  71                 	db	113	;'q'
   727  007A01  75                 	db	117	;'u'
   728  007A02  65                 	db	101	;'e'
   729  007A03  72                 	db	114	;'r'
   730  007A04  79                 	db	121	;'y'
   731  007A05  53                 	db	83	;'S'
   732  007A06  65                 	db	101	;'e'
   733  007A07  6C                 	db	108	;'l'
   734  007A08  65                 	db	101	;'e'
   735  007A09  63                 	db	99	;'c'
   736  007A0A  74                 	db	116	;'t'
   737  007A0B  6F                 	db	111	;'o'
   738  007A0C  72                 	db	114	;'r'
   739  007A0D  28                 	db	40
   740  007A0E  27                 	db	39
   741  007A0F  23                 	db	35
   742  007A10  27                 	db	39
   743  007A11  20                 	db	32
   744  007A12  2B                 	db	43
   745  007A13  20                 	db	32
   746  007A14  69                 	db	105	;'i'
   747  007A15  29                 	db	41
   748  007A16  2E                 	db	46
   749  007A17  76                 	db	118	;'v'
   750  007A18  61                 	db	97	;'a'
   751  007A19  6C                 	db	108	;'l'
   752  007A1A  75                 	db	117	;'u'
   753  007A1B  65                 	db	101	;'e'
   754  007A1C  3B                 	db	59	;';'
   755  007A1D  6C                 	db	108	;'l'
   756  007A1E  65                 	db	101	;'e'
   757  007A1F  74                 	db	116	;'t'
   758  007A20  20                 	db	32
   759  007A21  73                 	db	115	;'s'
   760  007A22  76                 	db	118	;'v'
   761  007A23  3D                 	db	61	;'='
   762  007A24  67                 	db	103	;'g'
   763  007A25  28                 	db	40
   764  007A26  27                 	db	39
   765  007A27  74                 	db	116	;'t'
   766  007A28  27                 	db	39
   767  007A29  29                 	db	41
   768  007A2A  2E                 	db	46
   769  007A2B  73                 	db	115	;'s'
   770  007A2C  70                 	db	112	;'p'
   771  007A2D  6C                 	db	108	;'l'
   772  007A2E  69                 	db	105	;'i'
   773  007A2F  74                 	db	116	;'t'
   774  007A30  28                 	db	40
   775  007A31  27                 	db	39
   776  007A32  3A                 	db	58	;':'
   777  007A33  27                 	db	39
   778  007A34  29                 	db	41
   779  007A35  3B                 	db	59	;';'
   780  007A36  66                 	db	102	;'f'
   781  007A37  65                 	db	101	;'e'
   782  007A38  74                 	db	116	;'t'
   783  007A39  63                 	db	99	;'c'
   784  007A3A  68                 	db	104	;'h'
   785  007A3B  28                 	db	40
   786  007A3C  27                 	db	39
   787  007A3D  2F                 	db	47
   788  007A3E  27                 	db	39
   789  007A3F  2C                 	db	44
   790  007A40  7B                 	db	123
   791  007A41  6D                 	db	109	;'m'
   792  007A42  65                 	db	101	;'e'
   793  007A43  74                 	db	116	;'t'
   794  007A44  68                 	db	104	;'h'
   795  007A45  6F                 	db	111	;'o'
   796  007A46  64                 	db	100	;'d'
   797  007A47  3A                 	db	58	;':'
   798  007A48  27                 	db	39
   799  007A49  70                 	db	112	;'p'
   800  007A4A  6F                 	db	111	;'o'
   801  007A4B  73                 	db	115	;'s'
   802  007A4C  74                 	db	116	;'t'
   803  007A4D  27                 	db	39
   804  007A4E  2C                 	db	44
   805  007A4F  62                 	db	98	;'b'
   806  007A50  6F                 	db	111	;'o'
   807  007A51  64                 	db	100	;'d'
   808  007A52  79                 	db	121	;'y'
   809  007A53  3A                 	db	58	;':'
   810  007A54  4A                 	db	74	;'J'
   811  007A55  53                 	db	83	;'S'
   812  007A56  4F                 	db	79	;'O'
   813  007A57  4E                 	db	78	;'N'
   814  007A58  2E                 	db	46
   815  007A59  73                 	db	115	;'s'
   816  007A5A  74                 	db	116	;'t'
   817  007A5B  72                 	db	114	;'r'
   818  007A5C  69                 	db	105	;'i'
   819  007A5D  6E                 	db	110	;'n'
   820  007A5E  67                 	db	103	;'g'
   821  007A5F  69                 	db	105	;'i'
   822  007A60  66                 	db	102	;'f'
   823  007A61  79                 	db	121	;'y'
   824  007A62  28                 	db	40
   825  007A63  7B                 	db	123
   826  007A64  27                 	db	39
   827  007A65  24                 	db	36
   828  007A66  23                 	db	35
   829  007A67  27                 	db	39
   830  007A68  3A                 	db	58	;':'
   831  007A69  27                 	db	39
   832  007A6A  27                 	db	39
   833  007A6B  2C                 	db	44
   834  007A6C  73                 	db	115	;'s'
   835  007A6D  73                 	db	115	;'s'
   836  007A6E  3A                 	db	58	;':'
   837  007A6F  67                 	db	103	;'g'
   838  007A70  28                 	db	40
   839  007A71  27                 	db	39
   840  007A72  73                 	db	115	;'s'
   841  007A73  27                 	db	39
   842  007A74  29                 	db	41
   843  007A75  2C                 	db	44
   844  007A76  70                 	db	112	;'p'
   845  007A77  77                 	db	119	;'w'
   846  007A78  3A                 	db	58	;':'
   847  007A79  67                 	db	103	;'g'
   848  007A7A  28                 	db	40
   849  007A7B  27                 	db	39
   850  007A7C  70                 	db	112	;'p'
   851  007A7D  27                 	db	39
   852  007A7E  29                 	db	41
   853  007A7F  2C                 	db	44
   854  007A80  73                 	db	115	;'s'
   855  007A81  76                 	db	118	;'v'
   856  007A82  3A                 	db	58	;':'
   857  007A83  73                 	db	115	;'s'
   858  007A84  76                 	db	118	;'v'
   859  007A85  5B                 	db	91	;'['
   860  007A86  30                 	db	48	;'0'
   861  007A87  5D                 	db	93	;']'
   862  007A88  2C                 	db	44
   863  007A89  70                 	db	112	;'p'
   864  007A8A  74                 	db	116	;'t'
   865  007A8B  3A                 	db	58	;':'
   866  007A8C  73                 	db	115	;'s'
   867  007A8D  76                 	db	118	;'v'
   868  007A8E  5B                 	db	91	;'['
   869  007A8F  31                 	db	49	;'1'
   870  007A90  5D                 	db	93	;']'
   871  007A91  2C                 	db	44
   872  007A92  27                 	db	39
   873  007A93  27                 	db	39
   874  007A94  3A                 	db	58	;':'
   875  007A95  27                 	db	39
   876  007A96  23                 	db	35
   877  007A97  24                 	db	36
   878  007A98  27                 	db	39
   879  007A99  7D                 	db	125
   880  007A9A  29                 	db	41
   881  007A9B  7D                 	db	125
   882  007A9C  29                 	db	41
   883  007A9D  7D                 	db	125
   884  007A9E  3C                 	db	60	;'<'
   885  007A9F  2F                 	db	47
   886  007AA0  73                 	db	115	;'s'
   887  007AA1  63                 	db	99	;'c'
   888  007AA2  72                 	db	114	;'r'
   889  007AA3  69                 	db	105	;'i'
   890  007AA4  70                 	db	112	;'p'
   891  007AA5  74                 	db	116	;'t'
   892  007AA6  3E                 	db	62	;'>'
   893  007AA7  0D                 	db	13
   894  007AA8  0A                 	db	10
   895  007AA9  0D                 	db	13
   896  007AAA  0A                 	db	10
   897  007AAB  5C                 	db	92	;'\'
   898  007AAC  30                 	db	48	;'0'
   899  007AAD  00                 	db	0
   900  007AAE                     STR_71:
   901  007AAE  47                 	db	71	;'G'
   902  007AAF  45                 	db	69	;'E'
   903  007AB0  54                 	db	84	;'T'
   904  007AB1  20                 	db	32
   905  007AB2  2F                 	db	47
   906  007AB3  64                 	db	100	;'d'
   907  007AB4  65                 	db	101	;'e'
   908  007AB5  76                 	db	118	;'v'
   909  007AB6  69                 	db	105	;'i'
   910  007AB7  63                 	db	99	;'c'
   911  007AB8  65                 	db	101	;'e'
   912  007AB9  2F                 	db	47
   913  007ABA  69                 	db	105	;'i'
   914  007ABB  6E                 	db	110	;'n'
   915  007ABC  74                 	db	116	;'t'
   916  007ABD  65                 	db	101	;'e'
   917  007ABE  67                 	db	103	;'g'
   918  007ABF  72                 	db	114	;'r'
   919  007AC0  61                 	db	97	;'a'
   920  007AC1  74                 	db	116	;'t'
   921  007AC2  69                 	db	105	;'i'
   922  007AC3  6F                 	db	111	;'o'
   923  007AC4  6E                 	db	110	;'n'
   924  007AC5  3F                 	db	63	;'?'
   925  007AC6  69                 	db	105	;'i'
   926  007AC7  3D                 	db	61	;'='
   927  007AC8  25                 	db	37
   928  007AC9  64                 	db	100	;'d'
   929  007ACA  7C                 	db	124
   930  007ACB  25                 	db	37
   931  007ACC  64                 	db	100	;'d'
   932  007ACD  7C                 	db	124
   933  007ACE  25                 	db	37
   934  007ACF  64                 	db	100	;'d'
   935  007AD0  7C                 	db	124
   936  007AD1  25                 	db	37
   937  007AD2  64                 	db	100	;'d'
   938  007AD3  7C                 	db	124
   939  007AD4  25                 	db	37
   940  007AD5  64                 	db	100	;'d'
   941  007AD6  7C                 	db	124
   942  007AD7  25                 	db	37
   943  007AD8  64                 	db	100	;'d'
   944  007AD9  7C                 	db	124
   945  007ADA  25                 	db	37
   946  007ADB  64                 	db	100	;'d'
   947  007ADC  7C                 	db	124
   948  007ADD  25                 	db	37
   949  007ADE  64                 	db	100	;'d'
   950  007ADF  7C                 	db	124
   951  007AE0  25                 	db	37
   952  007AE1  64                 	db	100	;'d'
   953  007AE2  7C                 	db	124
   954  007AE3  25                 	db	37
   955  007AE4  64                 	db	100	;'d'
   956  007AE5  7C                 	db	124
   957  007AE6  25                 	db	37
   958  007AE7  64                 	db	100	;'d'
   959  007AE8  7C                 	db	124
   960  007AE9  25                 	db	37
   961  007AEA  73                 	db	115	;'s'
   962  007AEB  7C                 	db	124
   963  007AEC  25                 	db	37
   964  007AED  64                 	db	100	;'d'
   965  007AEE  7C                 	db	124
   966  007AEF  25                 	db	37
   967  007AF0  73                 	db	115	;'s'
   968  007AF1  7C                 	db	124
   969  007AF2  25                 	db	37
   970  007AF3  64                 	db	100	;'d'
   971  007AF4  26                 	db	38
   972  007AF5  70                 	db	112	;'p'
   973  007AF6  3D                 	db	61	;'='
   974  007AF7  25                 	db	37
   975  007AF8  64                 	db	100	;'d'
   976  007AF9  7C                 	db	124
   977  007AFA  25                 	db	37
   978  007AFB  64                 	db	100	;'d'
   979  007AFC  7C                 	db	124
   980  007AFD  25                 	db	37
   981  007AFE  64                 	db	100	;'d'
   982  007AFF  7C                 	db	124
   983  007B00  25                 	db	37
   984  007B01  64                 	db	100	;'d'
   985  007B02  7C                 	db	124
   986  007B03  25                 	db	37
   987  007B04  64                 	db	100	;'d'
   988  007B05  7C                 	db	124
   989  007B06  25                 	db	37
   990  007B07  64                 	db	100	;'d'
   991  007B08  7C                 	db	124
   992  007B09  25                 	db	37
   993  007B0A  64                 	db	100	;'d'
   994  007B0B  7C                 	db	124
   995  007B0C  25                 	db	37
   996  007B0D  64                 	db	100	;'d'
   997  007B0E  7C                 	db	124
   998  007B0F  25                 	db	37
   999  007B10  64                 	db	100	;'d'
  1000  007B11  7C                 	db	124
  1001  007B12  25                 	db	37
  1002  007B13  64                 	db	100	;'d'
  1003  007B14  7C                 	db	124
  1004  007B15  25                 	db	37
  1005  007B16  64                 	db	100	;'d'
  1006  007B17  7C                 	db	124
  1007  007B18  25                 	db	37
  1008  007B19  64                 	db	100	;'d'
  1009  007B1A  7C                 	db	124
  1010  007B1B  25                 	db	37
  1011  007B1C  64                 	db	100	;'d'
  1012  007B1D  7C                 	db	124
  1013  007B1E  25                 	db	37
  1014  007B1F  64                 	db	100	;'d'
  1015  007B20  26                 	db	38
  1016  007B21  6B                 	db	107	;'k'
  1017  007B22  3D                 	db	61	;'='
  1018  007B23  31                 	db	49	;'1'
  1019  007B24  7A                 	db	122	;'z'
  1020  007B25  34                 	db	52	;'4'
  1021  007B26  64                 	db	100	;'d'
  1022  007B27  66                 	db	102	;'f'
  1023  007B28  36                 	db	54	;'6'
  1024  007B29  38                 	db	56	;'8'
  1025  007B2A  69                 	db	105	;'i'
  1026  007B2B  77                 	db	119	;'w'
  1027  007B2C  31                 	db	49	;'1'
  1028  007B2D  66                 	db	102	;'f'
  1029  007B2E  70                 	db	112	;'p'
  1030  007B2F  35                 	db	53	;'5'
  1031  007B30  20                 	db	32
  1032  007B31  48                 	db	72	;'H'
  1033  007B32  54                 	db	84	;'T'
  1034  007B33  54                 	db	84	;'T'
  1035  007B34  50                 	db	80	;'P'
  1036  007B35  2F                 	db	47
  1037  007B36  31                 	db	49	;'1'
  1038  007B37  2E                 	db	46
  1039  007B38  31                 	db	49	;'1'
  1040  007B39  0D                 	db	13
  1041  007B3A  0A                 	db	10
  1042  007B3B  48                 	db	72	;'H'
  1043  007B3C  6F                 	db	111	;'o'
  1044  007B3D  73                 	db	115	;'s'
  1045  007B3E  74                 	db	116	;'t'
  1046  007B3F  3A                 	db	58	;':'
  1047  007B40  20                 	db	32
  1048  007B41  31                 	db	49	;'1'
  1049  007B42  38                 	db	56	;'8'
  1050  007B43  2E                 	db	46
  1051  007B44  32                 	db	50	;'2'
  1052  007B45  32                 	db	50	;'2'
  1053  007B46  38                 	db	56	;'8'
  1054  007B47  2E                 	db	46
  1055  007B48  31                 	db	49	;'1'
  1056  007B49  35                 	db	53	;'5'
  1057  007B4A  34                 	db	52	;'4'
  1058  007B4B  2E                 	db	46
  1059  007B4C  32                 	db	50	;'2'
  1060  007B4D  34                 	db	52	;'4'
  1061  007B4E  38                 	db	56	;'8'
  1062  007B4F  0D                 	db	13
  1063  007B50  0A                 	db	10
  1064  007B51  0D                 	db	13
  1065  007B52  0A                 	db	10
  1066  007B53  5C                 	db	92	;'\'
  1067  007B54  30                 	db	48	;'0'
  1068  007B55  00                 	db	0
  1069  007B56                     STR_35:
  1070  007B56  48                 	db	72	;'H'
  1071  007B57  54                 	db	84	;'T'
  1072  007B58  54                 	db	84	;'T'
  1073  007B59  50                 	db	80	;'P'
  1074  007B5A  20                 	db	32
  1075  007B5B  31                 	db	49	;'1'
  1076  007B5C  2E                 	db	46
  1077  007B5D  31                 	db	49	;'1'
  1078  007B5E  2F                 	db	47
  1079  007B5F  32                 	db	50	;'2'
  1080  007B60  30                 	db	48	;'0'
  1081  007B61  30                 	db	48	;'0'
  1082  007B62  20                 	db	32
  1083  007B63  4F                 	db	79	;'O'
  1084  007B64  4B                 	db	75	;'K'
  1085  007B65  0D                 	db	13
  1086  007B66  0A                 	db	10
  1087  007B67  43                 	db	67	;'C'
  1088  007B68  6F                 	db	111	;'o'
  1089  007B69  6E                 	db	110	;'n'
  1090  007B6A  74                 	db	116	;'t'
  1091  007B6B  65                 	db	101	;'e'
  1092  007B6C  6E                 	db	110	;'n'
  1093  007B6D  74                 	db	116	;'t'
  1094  007B6E  2D                 	db	45
  1095  007B6F  74                 	db	116	;'t'
  1096  007B70  79                 	db	121	;'y'
  1097  007B71  70                 	db	112	;'p'
  1098  007B72  65                 	db	101	;'e'
  1099  007B73  3A                 	db	58	;':'
  1100  007B74  20                 	db	32
  1101  007B75  74                 	db	116	;'t'
  1102  007B76  65                 	db	101	;'e'
  1103  007B77  78                 	db	120	;'x'
  1104  007B78  74                 	db	116	;'t'
  1105  007B79  2F                 	db	47
  1106  007B7A  68                 	db	104	;'h'
  1107  007B7B  74                 	db	116	;'t'
  1108  007B7C  6D                 	db	109	;'m'
  1109  007B7D  6C                 	db	108	;'l'
  1110  007B7E  0D                 	db	13
  1111  007B7F  0A                 	db	10
  1112  007B80  0D                 	db	13
  1113  007B81  0A                 	db	10
  1114  007B82  00                 	db	0
  1115  007B83                     STR_17:
  1116  007B83  41                 	db	65	;'A'
  1117  007B84  54                 	db	84	;'T'
  1118  007B85  2B                 	db	43
  1119  007B86  43                 	db	67	;'C'
  1120  007B87  57                 	db	87	;'W'
  1121  007B88  53                 	db	83	;'S'
  1122  007B89  41                 	db	65	;'A'
  1123  007B8A  50                 	db	80	;'P'
  1124  007B8B  3D                 	db	61	;'='
  1125  007B8C  22                 	db	34
  1126  007B8D  43                 	db	67	;'C'
  1127  007B8E  4F                 	db	79	;'O'
  1128  007B8F  4E                 	db	78	;'N'
  1129  007B90  54                 	db	84	;'T'
  1130  007B91  52                 	db	82	;'R'
  1131  007B92  4F                 	db	79	;'O'
  1132  007B93  4C                 	db	76	;'L'
  1133  007B94  41                 	db	65	;'A'
  1134  007B95  44                 	db	68	;'D'
  1135  007B96  4F                 	db	79	;'O'
  1136  007B97  52                 	db	82	;'R'
  1137  007B98  22                 	db	34
  1138  007B99  2C                 	db	44
  1139  007B9A  22                 	db	34
  1140  007B9B  22                 	db	34
  1141  007B9C  2C                 	db	44
  1142  007B9D  31                 	db	49	;'1'
  1143  007B9E  31                 	db	49	;'1'
  1144  007B9F  2C                 	db	44
  1145  007BA0  30                 	db	48	;'0'
  1146  007BA1  2C                 	db	44
  1147  007BA2  34                 	db	52	;'4'
  1148  007BA3  0D                 	db	13
  1149  007BA4  0A                 	db	10
  1150  007BA5  00                 	db	0
  1151  007BA6                     STR_63:
  1152  007BA6  41                 	db	65	;'A'
  1153  007BA7  54                 	db	84	;'T'
  1154  007BA8  2B                 	db	43
  1155  007BA9  43                 	db	67	;'C'
  1156  007BAA  49                 	db	73	;'I'
  1157  007BAB  50                 	db	80	;'P'
  1158  007BAC  53                 	db	83	;'S'
  1159  007BAD  54                 	db	84	;'T'
  1160  007BAE  41                 	db	65	;'A'
  1161  007BAF  52                 	db	82	;'R'
  1162  007BB0  54                 	db	84	;'T'
  1163  007BB1  3D                 	db	61	;'='
  1164  007BB2  22                 	db	34
  1165  007BB3  54                 	db	84	;'T'
  1166  007BB4  43                 	db	67	;'C'
  1167  007BB5  50                 	db	80	;'P'
  1168  007BB6  22                 	db	34
  1169  007BB7  2C                 	db	44
  1170  007BB8  22                 	db	34
  1171  007BB9  25                 	db	37
  1172  007BBA  73                 	db	115	;'s'
  1173  007BBB  22                 	db	34
  1174  007BBC  2C                 	db	44
  1175  007BBD  25                 	db	37
  1176  007BBE  64                 	db	100	;'d'
  1177  007BBF  0D                 	db	13
  1178  007BC0  0A                 	db	10
  1179  007BC1  00                 	db	0
  1180  007BC2                     STR_20:
  1181  007BC2  41                 	db	65	;'A'
  1182  007BC3  54                 	db	84	;'T'
  1183  007BC4  2B                 	db	43
  1184  007BC5  43                 	db	67	;'C'
  1185  007BC6  49                 	db	73	;'I'
  1186  007BC7  50                 	db	80	;'P'
  1187  007BC8  41                 	db	65	;'A'
  1188  007BC9  50                 	db	80	;'P'
  1189  007BCA  3D                 	db	61	;'='
  1190  007BCB  22                 	db	34
  1191  007BCC  31                 	db	49	;'1'
  1192  007BCD  30                 	db	48	;'0'
  1193  007BCE  2E                 	db	46
  1194  007BCF  31                 	db	49	;'1'
  1195  007BD0  2E                 	db	46
  1196  007BD1  31                 	db	49	;'1'
  1197  007BD2  2E                 	db	46
  1198  007BD3  31                 	db	49	;'1'
  1199  007BD4  22                 	db	34
  1200  007BD5  0D                 	db	13
  1201  007BD6  0A                 	db	10
  1202  007BD7  00                 	db	0
  1203  007BD8                     STR_91:
  1204  007BD8  55                 	db	85	;'U'
  1205  007BD9  4D                 	db	77	;'M'
  1206  007BDA  49                 	db	73	;'I'
  1207  007BDB  44                 	db	68	;'D'
  1208  007BDC  20                 	db	32
  1209  007BDD  20                 	db	32
  1210  007BDE  7C                 	db	124
  1211  007BDF  20                 	db	32
  1212  007BE0  20                 	db	32
  1213  007BE1  25                 	db	37
  1214  007BE2  33                 	db	51	;'3'
  1215  007BE3  64                 	db	100	;'d'
  1216  007BE4  20                 	db	32
  1217  007BE5  7C                 	db	124
  1218  007BE6  20                 	db	32
  1219  007BE7  25                 	db	37
  1220  007BE8  33                 	db	51	;'3'
  1221  007BE9  64                 	db	100	;'d'
  1222  007BEA  20                 	db	32
  1223  007BEB  25                 	db	37
  1224  007BEC  63                 	db	99	;'c'
  1225  007BED  00                 	db	0
  1226  007BEE                     STR_57:
  1227  007BEE  41                 	db	65	;'A'
  1228  007BEF  54                 	db	84	;'T'
  1229  007BF0  2B                 	db	43
  1230  007BF1  43                 	db	67	;'C'
  1231  007BF2  57                 	db	87	;'W'
  1232  007BF3  4A                 	db	74	;'J'
  1233  007BF4  41                 	db	65	;'A'
  1234  007BF5  50                 	db	80	;'P'
  1235  007BF6  3D                 	db	61	;'='
  1236  007BF7  22                 	db	34
  1237  007BF8  25                 	db	37
  1238  007BF9  73                 	db	115	;'s'
  1239  007BFA  22                 	db	34
  1240  007BFB  2C                 	db	44
  1241  007BFC  22                 	db	34
  1242  007BFD  25                 	db	37
  1243  007BFE  73                 	db	115	;'s'
  1244  007BFF  22                 	db	34
  1245  007C00  0D                 	db	13
  1246  007C01  0A                 	db	10
  1247  007C02  00                 	db	0
  1248  007C03                     STR_32:
  1249  007C03  41                 	db	65	;'A'
  1250  007C04  54                 	db	84	;'T'
  1251  007C05  2B                 	db	43
  1252  007C06  43                 	db	67	;'C'
  1253  007C07  49                 	db	73	;'I'
  1254  007C08  50                 	db	80	;'P'
  1255  007C09  53                 	db	83	;'S'
  1256  007C0A  45                 	db	69	;'E'
  1257  007C0B  4E                 	db	78	;'N'
  1258  007C0C  44                 	db	68	;'D'
  1259  007C0D  45                 	db	69	;'E'
  1260  007C0E  58                 	db	88	;'X'
  1261  007C0F  3D                 	db	61	;'='
  1262  007C10  30                 	db	48	;'0'
  1263  007C11  2C                 	db	44
  1264  007C12  38                 	db	56	;'8'
  1265  007C13  30                 	db	48	;'0'
  1266  007C14  30                 	db	48	;'0'
  1267  007C15  0D                 	db	13
  1268  007C16  0A                 	db	10
  1269  007C17  00                 	db	0
  1270  007C18                     STR_28:
  1271  007C18  63                 	db	99	;'c'
  1272  007C19  6F                 	db	111	;'o'
  1273  007C1A  6E                 	db	110	;'n'
  1274  007C1B  66                 	db	102	;'f'
  1275  007C1C  69                 	db	105	;'i'
  1276  007C1D  67                 	db	103	;'g'
  1277  007C1E  75                 	db	117	;'u'
  1278  007C1F  72                 	db	114	;'r'
  1279  007C20  61                 	db	97	;'a'
  1280  007C21  72                 	db	114	;'r'
  1281  007C22  20                 	db	32
  1282  007C23  6F                 	db	111	;'o'
  1283  007C24  20                 	db	32
  1284  007C25  57                 	db	87	;'W'
  1285  007C26  49                 	db	73	;'I'
  1286  007C27  46                 	db	70	;'F'
  1287  007C28  49                 	db	73	;'I'
  1288  007C29  2E                 	db	46
  1289  007C2A  2E                 	db	46
  1290  007C2B  2E                 	db	46
  1291  007C2C  00                 	db	0
  1292  007C2D                     STR_90:
  1293  007C2D  54                 	db	84	;'T'
  1294  007C2E  45                 	db	69	;'E'
  1295  007C2F  4D                 	db	77	;'M'
  1296  007C30  50                 	db	80	;'P'
  1297  007C31  20                 	db	32
  1298  007C32  20                 	db	32
  1299  007C33  7C                 	db	124
  1300  007C34  20                 	db	32
  1301  007C35  20                 	db	32
  1302  007C36  25                 	db	37
  1303  007C37  33                 	db	51	;'3'
  1304  007C38  64                 	db	100	;'d'
  1305  007C39  20                 	db	32
  1306  007C3A  7C                 	db	124
  1307  007C3B  20                 	db	32
  1308  007C3C  25                 	db	37
  1309  007C3D  33                 	db	51	;'3'
  1310  007C3E  64                 	db	100	;'d'
  1311  007C3F  20                 	db	32
  1312  007C40  46                 	db	70	;'F'
  1313  007C41  00                 	db	0
  1314  007C42                     STR_23:
  1315  007C42  41                 	db	65	;'A'
  1316  007C43  54                 	db	84	;'T'
  1317  007C44  2B                 	db	43
  1318  007C45  43                 	db	67	;'C'
  1319  007C46  49                 	db	73	;'I'
  1320  007C47  50                 	db	80	;'P'
  1321  007C48  53                 	db	83	;'S'
  1322  007C49  45                 	db	69	;'E'
  1323  007C4A  52                 	db	82	;'R'
  1324  007C4B  56                 	db	86	;'V'
  1325  007C4C  45                 	db	69	;'E'
  1326  007C4D  52                 	db	82	;'R'
  1327  007C4E  3D                 	db	61	;'='
  1328  007C4F  31                 	db	49	;'1'
  1329  007C50  2C                 	db	44
  1330  007C51  38                 	db	56	;'8'
  1331  007C52  30                 	db	48	;'0'
  1332  007C53  0D                 	db	13
  1333  007C54  0A                 	db	10
  1334  007C55  00                 	db	0
  1335  007C56                     STR_93:
  1336  007C56  20                 	db	32
  1337  007C57  2A                 	db	42
  1338  007C58  46                 	db	70	;'F'
  1339  007C59  41                 	db	65	;'A'
  1340  007C5A  4C                 	db	76	;'L'
  1341  007C5B  54                 	db	84	;'T'
  1342  007C5C  41                 	db	65	;'A'
  1343  007C5D  20                 	db	32
  1344  007C5E  44                 	db	68	;'D'
  1345  007C5F  45                 	db	69	;'E'
  1346  007C60  20                 	db	32
  1347  007C61  45                 	db	69	;'E'
  1348  007C62  4E                 	db	78	;'N'
  1349  007C63  45                 	db	69	;'E'
  1350  007C64  52                 	db	82	;'R'
  1351  007C65  47                 	db	71	;'G'
  1352  007C66  49                 	db	73	;'I'
  1353  007C67  41                 	db	65	;'A'
  1354  007C68  2A                 	db	42
  1355  007C69  00                 	db	0
  1356  007C6A                     STR_122:
  1357  007C6A  43                 	db	67	;'C'
  1358  007C6B  4F                 	db	79	;'O'
  1359  007C6C  4E                 	db	78	;'N'
  1360  007C6D  46                 	db	70	;'F'
  1361  007C6E  49                 	db	73	;'I'
  1362  007C6F  47                 	db	71	;'G'
  1363  007C70  55                 	db	85	;'U'
  1364  007C71  52                 	db	82	;'R'
  1365  007C72  41                 	db	65	;'A'
  1366  007C73  52                 	db	82	;'R'
  1367  007C74  20                 	db	32
  1368  007C75  20                 	db	32
  1369  007C76  20                 	db	32
  1370  007C77  20                 	db	32
  1371  007C78  20                 	db	32
  1372  007C79  20                 	db	32
  1373  007C7A  20                 	db	32
  1374  007C7B  3E                 	db	62	;'>'
  1375  007C7C  3E                 	db	62	;'>'
  1376  007C7D  00                 	db	0
  1377  007C7E                     STR_108:
  1378  007C7E  43                 	db	67	;'C'
  1379  007C7F  4F                 	db	79	;'O'
  1380  007C80  4E                 	db	78	;'N'
  1381  007C81  46                 	db	70	;'F'
  1382  007C82  49                 	db	73	;'I'
  1383  007C83  47                 	db	71	;'G'
  1384  007C84  20                 	db	32
  1385  007C85  57                 	db	87	;'W'
  1386  007C86  49                 	db	73	;'I'
  1387  007C87  46                 	db	70	;'F'
  1388  007C88  49                 	db	73	;'I'
  1389  007C89  20                 	db	32
  1390  007C8A  20                 	db	32
  1391  007C8B  20                 	db	32
  1392  007C8C  20                 	db	32
  1393  007C8D  20                 	db	32
  1394  007C8E  20                 	db	32
  1395  007C8F  3E                 	db	62	;'>'
  1396  007C90  3E                 	db	62	;'>'
  1397  007C91  00                 	db	0
  1398  007C92                     STR_107:
  1399  007C92  54                 	db	84	;'T'
  1400  007C93  45                 	db	69	;'E'
  1401  007C94  4D                 	db	77	;'M'
  1402  007C95  50                 	db	80	;'P'
  1403  007C96  4F                 	db	79	;'O'
  1404  007C97  20                 	db	32
  1405  007C98  46                 	db	70	;'F'
  1406  007C99  49                 	db	73	;'I'
  1407  007C9A  4D                 	db	77	;'M'
  1408  007C9B  20                 	db	32
  1409  007C9C  46                 	db	70	;'F'
  1410  007C9D  41                 	db	65	;'A'
  1411  007C9E  53                 	db	83	;'S'
  1412  007C9F  45                 	db	69	;'E'
  1413  007CA0  20                 	db	32
  1414  007CA1  20                 	db	32
  1415  007CA2  20                 	db	32
  1416  007CA3  3E                 	db	62	;'>'
  1417  007CA4  3E                 	db	62	;'>'
  1418  007CA5  00                 	db	0
  1419  007CA6                     STR_109:
  1420  007CA6  43                 	db	67	;'C'
  1421  007CA7  4F                 	db	79	;'O'
  1422  007CA8  4E                 	db	78	;'N'
  1423  007CA9  46                 	db	70	;'F'
  1424  007CAA  49                 	db	73	;'I'
  1425  007CAB  47                 	db	71	;'G'
  1426  007CAC  20                 	db	32
  1427  007CAD  41                 	db	65	;'A'
  1428  007CAE  56                 	db	86	;'V'
  1429  007CAF  41                 	db	65	;'A'
  1430  007CB0  4E                 	db	78	;'N'
  1431  007CB1  43                 	db	67	;'C'
  1432  007CB2  41                 	db	65	;'A'
  1433  007CB3  44                 	db	68	;'D'
  1434  007CB4  41                 	db	65	;'A'
  1435  007CB5  53                 	db	83	;'S'
  1436  007CB6  20                 	db	32
  1437  007CB7  3E                 	db	62	;'>'
  1438  007CB8  3E                 	db	62	;'>'
  1439  007CB9  00                 	db	0
  1440  007CBA                     STR_84:
  1441  007CBA  20                 	db	32
  1442  007CBB  54                 	db	84	;'T'
  1443  007CBC  45                 	db	69	;'E'
  1444  007CBD  43                 	db	67	;'C'
  1445  007CBE  48                 	db	72	;'H'
  1446  007CBF  4E                 	db	78	;'N'
  1447  007CC0  4F                 	db	79	;'O'
  1448  007CC1  57                 	db	87	;'W'
  1449  007CC2  20                 	db	32
  1450  007CC3  54                 	db	84	;'T'
  1451  007CC4  65                 	db	101	;'e'
  1452  007CC5  63                 	db	99	;'c'
  1453  007CC6  6E                 	db	110	;'n'
  1454  007CC7  6F                 	db	111	;'o'
  1455  007CC8  6C                 	db	108	;'l'
  1456  007CC9  6F                 	db	111	;'o'
  1457  007CCA  67                 	db	103	;'g'
  1458  007CCB  69                 	db	105	;'i'
  1459  007CCC  61                 	db	97	;'a'
  1460  007CCD  00                 	db	0
  1461  007CCE                     STR_26:
  1462  007CCE  43                 	db	67	;'C'
  1463  007CCF  6F                 	db	111	;'o'
  1464  007CD0  6E                 	db	110	;'n'
  1465  007CD1  65                 	db	101	;'e'
  1466  007CD2  63                 	db	99	;'c'
  1467  007CD3  74                 	db	116	;'t'
  1468  007CD4  65                 	db	101	;'e'
  1469  007CD5  2D                 	db	45
  1470  007CD6  73                 	db	115	;'s'
  1471  007CD7  65                 	db	101	;'e'
  1472  007CD8  20                 	db	32
  1473  007CD9  61                 	db	97	;'a'
  1474  007CDA  20                 	db	32
  1475  007CDB  72                 	db	114	;'r'
  1476  007CDC  65                 	db	101	;'e'
  1477  007CDD  64                 	db	100	;'d'
  1478  007CDE  65                 	db	101	;'e'
  1479  007CDF  20                 	db	32
  1480  007CE0  65                 	db	101	;'e'
  1481  007CE1  00                 	db	0
  1482  007CE2                     STR_66:
  1483  007CE2  41                 	db	65	;'A'
  1484  007CE3  54                 	db	84	;'T'
  1485  007CE4  2B                 	db	43
  1486  007CE5  43                 	db	67	;'C'
  1487  007CE6  49                 	db	73	;'I'
  1488  007CE7  50                 	db	80	;'P'
  1489  007CE8  53                 	db	83	;'S'
  1490  007CE9  45                 	db	69	;'E'
  1491  007CEA  4E                 	db	78	;'N'
  1492  007CEB  44                 	db	68	;'D'
  1493  007CEC  45                 	db	69	;'E'
  1494  007CED  58                 	db	88	;'X'
  1495  007CEE  3D                 	db	61	;'='
  1496  007CEF  32                 	db	50	;'2'
  1497  007CF0  36                 	db	54	;'6'
  1498  007CF1  30                 	db	48	;'0'
  1499  007CF2  0D                 	db	13
  1500  007CF3  0A                 	db	10
  1501  007CF4  00                 	db	0
  1502  007CF5                     STR_125:
  1503  007CF5  53                 	db	83	;'S'
  1504  007CF6  65                 	db	101	;'e'
  1505  007CF7  63                 	db	99	;'c'
  1506  007CF8  2E                 	db	46
  1507  007CF9  20                 	db	32
  1508  007CFA  46                 	db	70	;'F'
  1509  007CFB  6F                 	db	111	;'o'
  1510  007CFC  6C                 	db	108	;'l'
  1511  007CFD  68                 	db	104	;'h'
  1512  007CFE  61                 	db	97	;'a'
  1513  007CFF  20                 	db	32
  1514  007D00  3A                 	db	58	;':'
  1515  007D01  20                 	db	32
  1516  007D02  25                 	db	37
  1517  007D03  64                 	db	100	;'d'
  1518  007D04  20                 	db	32
  1519  007D05  68                 	db	104	;'h'
  1520  007D06  72                 	db	114	;'r'
  1521  007D07  00                 	db	0
  1522  007D08                     STR_123:
  1523  007D08  41                 	db	65	;'A'
  1524  007D09  6D                 	db	109	;'m'
  1525  007D0A  61                 	db	97	;'a'
  1526  007D0B  72                 	db	114	;'r'
  1527  007D0C  65                 	db	101	;'e'
  1528  007D0D  6C                 	db	108	;'l'
  1529  007D0E  61                 	db	97	;'a'
  1530  007D0F  63                 	db	99	;'c'
  1531  007D10  61                 	db	97	;'a'
  1532  007D11  6F                 	db	111	;'o'
  1533  007D12  20                 	db	32
  1534  007D13  3A                 	db	58	;':'
  1535  007D14  20                 	db	32
  1536  007D15  25                 	db	37
  1537  007D16  64                 	db	100	;'d'
  1538  007D17  20                 	db	32
  1539  007D18  68                 	db	104	;'h'
  1540  007D19  72                 	db	114	;'r'
  1541  007D1A  00                 	db	0
  1542  007D1B                     STR_124:
  1543  007D1B  4D                 	db	77	;'M'
  1544  007D1C  75                 	db	117	;'u'
  1545  007D1D  72                 	db	114	;'r'
  1546  007D1E  63                 	db	99	;'c'
  1547  007D1F  68                 	db	104	;'h'
  1548  007D20  61                 	db	97	;'a'
  1549  007D21  6D                 	db	109	;'m'
  1550  007D22  65                 	db	101	;'e'
  1551  007D23  6E                 	db	110	;'n'
  1552  007D24  74                 	db	116	;'t'
  1553  007D25  6F                 	db	111	;'o'
  1554  007D26  3A                 	db	58	;':'
  1555  007D27  20                 	db	32
  1556  007D28  25                 	db	37
  1557  007D29  64                 	db	100	;'d'
  1558  007D2A  20                 	db	32
  1559  007D2B  68                 	db	104	;'h'
  1560  007D2C  72                 	db	114	;'r'
  1561  007D2D  00                 	db	0
  1562  007D2E                     STR_48:
  1563  007D2E  4F                 	db	79	;'O'
  1564  007D2F  4B                 	db	75	;'K'
  1565  007D30  20                 	db	32
  1566  007D31  72                 	db	114	;'r'
  1567  007D32  65                 	db	101	;'e'
  1568  007D33  69                 	db	105	;'i'
  1569  007D34  6E                 	db	110	;'n'
  1570  007D35  69                 	db	105	;'i'
  1571  007D36  63                 	db	99	;'c'
  1572  007D37  69                 	db	105	;'i'
  1573  007D38  61                 	db	97	;'a'
  1574  007D39  6E                 	db	110	;'n'
  1575  007D3A  64                 	db	100	;'d'
  1576  007D3B  6F                 	db	111	;'o'
  1577  007D3C  2E                 	db	46
  1578  007D3D  2E                 	db	46
  1579  007D3E  2E                 	db	46
  1580  007D3F  00                 	db	0
  1581  007D40                     STR_94:
  1582  007D40  54                 	db	84	;'T'
  1583  007D41  45                 	db	69	;'E'
  1584  007D42  4D                 	db	77	;'M'
  1585  007D43  50                 	db	80	;'P'
  1586  007D44  45                 	db	69	;'E'
  1587  007D45  52                 	db	82	;'R'
  1588  007D46  41                 	db	65	;'A'
  1589  007D47  54                 	db	84	;'T'
  1590  007D48  55                 	db	85	;'U'
  1591  007D49  52                 	db	82	;'R'
  1592  007D4A  41                 	db	65	;'A'
  1593  007D4B  3A                 	db	58	;':'
  1594  007D4C  20                 	db	32
  1595  007D4D  25                 	db	37
  1596  007D4E  64                 	db	100	;'d'
  1597  007D4F  20                 	db	32
  1598  007D50  46                 	db	70	;'F'
  1599  007D51  00                 	db	0
  1600  007D52                     STR_114:
  1601  007D52  50                 	db	80	;'P'
  1602  007D53  39                 	db	57	;'9'
  1603  007D54  20                 	db	32
  1604  007D55  3A                 	db	58	;':'
  1605  007D56  25                 	db	37
  1606  007D57  34                 	db	52	;'4'
  1607  007D58  64                 	db	100	;'d'
  1608  007D59  20                 	db	32
  1609  007D5A  7C                 	db	124
  1610  007D5B  20                 	db	32
  1611  007D5C  50                 	db	80	;'P'
  1612  007D5D  31                 	db	49	;'1'
  1613  007D5E  33                 	db	51	;'3'
  1614  007D5F  3A                 	db	58	;':'
  1615  007D60  25                 	db	37
  1616  007D61  34                 	db	52	;'4'
  1617  007D62  64                 	db	100	;'d'
  1618  007D63  00                 	db	0
  1619  007D64                     STR_115:
  1620  007D64  50                 	db	80	;'P'
  1621  007D65  31                 	db	49	;'1'
  1622  007D66  30                 	db	48	;'0'
  1623  007D67  3A                 	db	58	;':'
  1624  007D68  25                 	db	37
  1625  007D69  34                 	db	52	;'4'
  1626  007D6A  64                 	db	100	;'d'
  1627  007D6B  20                 	db	32
  1628  007D6C  7C                 	db	124
  1629  007D6D  20                 	db	32
  1630  007D6E  50                 	db	80	;'P'
  1631  007D6F  31                 	db	49	;'1'
  1632  007D70  34                 	db	52	;'4'
  1633  007D71  3A                 	db	58	;':'
  1634  007D72  25                 	db	37
  1635  007D73  34                 	db	52	;'4'
  1636  007D74  64                 	db	100	;'d'
  1637  007D75  00                 	db	0
  1638  007D76                     STR_116:
  1639  007D76  50                 	db	80	;'P'
  1640  007D77  31                 	db	49	;'1'
  1641  007D78  31                 	db	49	;'1'
  1642  007D79  3A                 	db	58	;':'
  1643  007D7A  25                 	db	37
  1644  007D7B  34                 	db	52	;'4'
  1645  007D7C  64                 	db	100	;'d'
  1646  007D7D  20                 	db	32
  1647  007D7E  7C                 	db	124
  1648  007D7F  20                 	db	32
  1649  007D80  50                 	db	80	;'P'
  1650  007D81  31                 	db	49	;'1'
  1651  007D82  35                 	db	53	;'5'
  1652  007D83  3A                 	db	58	;':'
  1653  007D84  25                 	db	37
  1654  007D85  34                 	db	52	;'4'
  1655  007D86  64                 	db	100	;'d'
  1656  007D87  00                 	db	0
  1657  007D88                     STR_126:
  1658  007D88  2A                 	db	42
  1659  007D89  30                 	db	48	;'0'
  1660  007D8A  20                 	db	32
  1661  007D8B  6E                 	db	110	;'n'
  1662  007D8C  61                 	db	97	;'a'
  1663  007D8D  6F                 	db	111	;'o'
  1664  007D8E  20                 	db	32
  1665  007D8F  70                 	db	112	;'p'
  1666  007D90  61                 	db	97	;'a'
  1667  007D91  73                 	db	115	;'s'
  1668  007D92  73                 	db	115	;'s'
  1669  007D93  61                 	db	97	;'a'
  1670  007D94  20                 	db	32
  1671  007D95  66                 	db	102	;'f'
  1672  007D96  61                 	db	97	;'a'
  1673  007D97  73                 	db	115	;'s'
  1674  007D98  65                 	db	101	;'e'
  1675  007D99  00                 	db	0
  1676  007D9A                     STR_27:
  1677  007D9A  61                 	db	97	;'a'
  1678  007D9B  63                 	db	99	;'c'
  1679  007D9C  65                 	db	101	;'e'
  1680  007D9D  73                 	db	115	;'s'
  1681  007D9E  73                 	db	115	;'s'
  1682  007D9F  65                 	db	101	;'e'
  1683  007DA0  20                 	db	32
  1684  007DA1  6F                 	db	111	;'o'
  1685  007DA2  20                 	db	32
  1686  007DA3  49                 	db	73	;'I'
  1687  007DA4  50                 	db	80	;'P'
  1688  007DA5  20                 	db	32
  1689  007DA6  70                 	db	112	;'p'
  1690  007DA7  61                 	db	97	;'a'
  1691  007DA8  72                 	db	114	;'r'
  1692  007DA9  61                 	db	97	;'a'
  1693  007DAA  00                 	db	0
  1694  007DAB                     STR_110:
  1695  007DAB  50                 	db	80	;'P'
  1696  007DAC  31                 	db	49	;'1'
  1697  007DAD  3A                 	db	58	;':'
  1698  007DAE  25                 	db	37
  1699  007DAF  34                 	db	52	;'4'
  1700  007DB0  64                 	db	100	;'d'
  1701  007DB1  20                 	db	32
  1702  007DB2  7C                 	db	124
  1703  007DB3  20                 	db	32
  1704  007DB4  20                 	db	32
  1705  007DB5  50                 	db	80	;'P'
  1706  007DB6  35                 	db	53	;'5'
  1707  007DB7  3A                 	db	58	;':'
  1708  007DB8  25                 	db	37
  1709  007DB9  34                 	db	52	;'4'
  1710  007DBA  64                 	db	100	;'d'
  1711  007DBB  00                 	db	0
  1712  007DBC                     STR_111:
  1713  007DBC  50                 	db	80	;'P'
  1714  007DBD  32                 	db	50	;'2'
  1715  007DBE  3A                 	db	58	;':'
  1716  007DBF  25                 	db	37
  1717  007DC0  34                 	db	52	;'4'
  1718  007DC1  64                 	db	100	;'d'
  1719  007DC2  20                 	db	32
  1720  007DC3  7C                 	db	124
  1721  007DC4  20                 	db	32
  1722  007DC5  20                 	db	32
  1723  007DC6  50                 	db	80	;'P'
  1724  007DC7  36                 	db	54	;'6'
  1725  007DC8  3A                 	db	58	;':'
  1726  007DC9  25                 	db	37
  1727  007DCA  34                 	db	52	;'4'
  1728  007DCB  64                 	db	100	;'d'
  1729  007DCC  00                 	db	0
  1730  007DCD                     STR_112:
  1731  007DCD  50                 	db	80	;'P'
  1732  007DCE  33                 	db	51	;'3'
  1733  007DCF  3A                 	db	58	;':'
  1734  007DD0  25                 	db	37
  1735  007DD1  34                 	db	52	;'4'
  1736  007DD2  64                 	db	100	;'d'
  1737  007DD3  20                 	db	32
  1738  007DD4  7C                 	db	124
  1739  007DD5  20                 	db	32
  1740  007DD6  20                 	db	32
  1741  007DD7  50                 	db	80	;'P'
  1742  007DD8  37                 	db	55	;'7'
  1743  007DD9  3A                 	db	58	;':'
  1744  007DDA  25                 	db	37
  1745  007DDB  34                 	db	52	;'4'
  1746  007DDC  64                 	db	100	;'d'
  1747  007DDD  00                 	db	0
  1748  007DDE                     STR_113:
  1749  007DDE  50                 	db	80	;'P'
  1750  007DDF  34                 	db	52	;'4'
  1751  007DE0  3A                 	db	58	;':'
  1752  007DE1  25                 	db	37
  1753  007DE2  34                 	db	52	;'4'
  1754  007DE3  64                 	db	100	;'d'
  1755  007DE4  20                 	db	32
  1756  007DE5  7C                 	db	124
  1757  007DE6  20                 	db	32
  1758  007DE7  20                 	db	32
  1759  007DE8  50                 	db	80	;'P'
  1760  007DE9  38                 	db	56	;'8'
  1761  007DEA  3A                 	db	58	;':'
  1762  007DEB  25                 	db	37
  1763  007DEC  34                 	db	52	;'4'
  1764  007DED  64                 	db	100	;'d'
  1765  007DEE  00                 	db	0
  1766  007DEF                     STR_37:
  1767  007DEF  41                 	db	65	;'A'
  1768  007DF0  54                 	db	84	;'T'
  1769  007DF1  2B                 	db	43
  1770  007DF2  43                 	db	67	;'C'
  1771  007DF3  49                 	db	73	;'I'
  1772  007DF4  50                 	db	80	;'P'
  1773  007DF5  43                 	db	67	;'C'
  1774  007DF6  4C                 	db	76	;'L'
  1775  007DF7  4F                 	db	79	;'O'
  1776  007DF8  53                 	db	83	;'S'
  1777  007DF9  45                 	db	69	;'E'
  1778  007DFA  3D                 	db	61	;'='
  1779  007DFB  30                 	db	48	;'0'
  1780  007DFC  0D                 	db	13
  1781  007DFD  0A                 	db	10
  1782  007DFE  00                 	db	0
  1783  007DFF                     STR_59:
  1784  007DFF  41                 	db	65	;'A'
  1785  007E00  54                 	db	84	;'T'
  1786  007E01  2B                 	db	43
  1787  007E02  43                 	db	67	;'C'
  1788  007E03  49                 	db	73	;'I'
  1789  007E04  50                 	db	80	;'P'
  1790  007E05  53                 	db	83	;'S'
  1791  007E06  54                 	db	84	;'T'
  1792  007E07  41                 	db	65	;'A'
  1793  007E08  54                 	db	84	;'T'
  1794  007E09  55                 	db	85	;'U'
  1795  007E0A  53                 	db	83	;'S'
  1796  007E0B  0D                 	db	13
  1797  007E0C  0A                 	db	10
  1798  007E0D  00                 	db	0
  1799  007E0E                     STR_95:
  1800  007E0E  55                 	db	85	;'U'
  1801  007E0F  4D                 	db	77	;'M'
  1802  007E10  49                 	db	73	;'I'
  1803  007E11  44                 	db	68	;'D'
  1804  007E12  41                 	db	65	;'A'
  1805  007E13  44                 	db	68	;'D'
  1806  007E14  45                 	db	69	;'E'
  1807  007E15  3A                 	db	58	;':'
  1808  007E16  20                 	db	32
  1809  007E17  25                 	db	37
  1810  007E18  64                 	db	100	;'d'
  1811  007E19  20                 	db	32
  1812  007E1A  25                 	db	37
  1813  007E1B  63                 	db	99	;'c'
  1814  007E1C  00                 	db	0
  1815  007E1D                     STR_89:
  1816  007E1D  7C                 	db	124
  1817  007E1E  53                 	db	83	;'S'
  1818  007E1F  65                 	db	101	;'e'
  1819  007E20  6E                 	db	110	;'n'
  1820  007E21  73                 	db	115	;'s'
  1821  007E22  6F                 	db	111	;'o'
  1822  007E23  72                 	db	114	;'r'
  1823  007E24  7C                 	db	124
  1824  007E25  41                 	db	65	;'A'
  1825  007E26  6A                 	db	106	;'j'
  1826  007E27  75                 	db	117	;'u'
  1827  007E28  73                 	db	115	;'s'
  1828  007E29  74                 	db	116	;'t'
  1829  007E2A  65                 	db	101	;'e'
  1830  007E2B  00                 	db	0
  1831  007E2C                     STR_53:
  1832  007E2C  41                 	db	65	;'A'
  1833  007E2D  54                 	db	84	;'T'
  1834  007E2E  2B                 	db	43
  1835  007E2F  43                 	db	67	;'C'
  1836  007E30  49                 	db	73	;'I'
  1837  007E31  50                 	db	80	;'P'
  1838  007E32  4D                 	db	77	;'M'
  1839  007E33  55                 	db	85	;'U'
  1840  007E34  58                 	db	88	;'X'
  1841  007E35  3D                 	db	61	;'='
  1842  007E36  30                 	db	48	;'0'
  1843  007E37  0D                 	db	13
  1844  007E38  0A                 	db	10
  1845  007E39  00                 	db	0
  1846  007E3A                     STR_50:
  1847  007E3A  41                 	db	65	;'A'
  1848  007E3B  54                 	db	84	;'T'
  1849  007E3C  2B                 	db	43
  1850  007E3D  43                 	db	67	;'C'
  1851  007E3E  57                 	db	87	;'W'
  1852  007E3F  4D                 	db	77	;'M'
  1853  007E40  4F                 	db	79	;'O'
  1854  007E41  44                 	db	68	;'D'
  1855  007E42  45                 	db	69	;'E'
  1856  007E43  3D                 	db	61	;'='
  1857  007E44  31                 	db	49	;'1'
  1858  007E45  0D                 	db	13
  1859  007E46  0A                 	db	10
  1860  007E47  00                 	db	0
  1861  007E48                     STR_14:
  1862  007E48  41                 	db	65	;'A'
  1863  007E49  54                 	db	84	;'T'
  1864  007E4A  2B                 	db	43
  1865  007E4B  43                 	db	67	;'C'
  1866  007E4C  49                 	db	73	;'I'
  1867  007E4D  50                 	db	80	;'P'
  1868  007E4E  4D                 	db	77	;'M'
  1869  007E4F  55                 	db	85	;'U'
  1870  007E50  58                 	db	88	;'X'
  1871  007E51  3D                 	db	61	;'='
  1872  007E52  31                 	db	49	;'1'
  1873  007E53  0D                 	db	13
  1874  007E54  0A                 	db	10
  1875  007E55  00                 	db	0
  1876  007E56                     STR_11:
  1877  007E56  41                 	db	65	;'A'
  1878  007E57  54                 	db	84	;'T'
  1879  007E58  2B                 	db	43
  1880  007E59  43                 	db	67	;'C'
  1881  007E5A  57                 	db	87	;'W'
  1882  007E5B  4D                 	db	77	;'M'
  1883  007E5C  4F                 	db	79	;'O'
  1884  007E5D  44                 	db	68	;'D'
  1885  007E5E  45                 	db	69	;'E'
  1886  007E5F  3D                 	db	61	;'='
  1887  007E60  32                 	db	50	;'2'
  1888  007E61  0D                 	db	13
  1889  007E62  0A                 	db	10
  1890  007E63  00                 	db	0
  1891  007E64                     STR_74:
  1892  007E64  41                 	db	65	;'A'
  1893  007E65  54                 	db	84	;'T'
  1894  007E66  2B                 	db	43
  1895  007E67  43                 	db	67	;'C'
  1896  007E68  49                 	db	73	;'I'
  1897  007E69  50                 	db	80	;'P'
  1898  007E6A  43                 	db	67	;'C'
  1899  007E6B  4C                 	db	76	;'L'
  1900  007E6C  4F                 	db	79	;'O'
  1901  007E6D  53                 	db	83	;'S'
  1902  007E6E  45                 	db	69	;'E'
  1903  007E6F  0D                 	db	13
  1904  007E70  0A                 	db	10
  1905  007E71  00                 	db	0
  1906  007E72                     STR_39:
  1907  007E72  41                 	db	65	;'A'
  1908  007E73  67                 	db	103	;'g'
  1909  007E74  75                 	db	117	;'u'
  1910  007E75  61                 	db	97	;'a'
  1911  007E76  72                 	db	114	;'r'
  1912  007E77  64                 	db	100	;'d'
  1913  007E78  61                 	db	97	;'a'
  1914  007E79  6E                 	db	110	;'n'
  1915  007E7A  64                 	db	100	;'d'
  1916  007E7B  6F                 	db	111	;'o'
  1917  007E7C  2E                 	db	46
  1918  007E7D  2E                 	db	46
  1919  007E7E  2E                 	db	46
  1920  007E7F  00                 	db	0
  1921  007E80                     STR_85:
  1922  007E80  56                 	db	86	;'V'
  1923  007E81  65                 	db	101	;'e'
  1924  007E82  72                 	db	114	;'r'
  1925  007E83  73                 	db	115	;'s'
  1926  007E84  61                 	db	97	;'a'
  1927  007E85  6F                 	db	111	;'o'
  1928  007E86  20                 	db	32
  1929  007E87  53                 	db	83	;'S'
  1930  007E88  6F                 	db	111	;'o'
  1931  007E89  66                 	db	102	;'f'
  1932  007E8A  74                 	db	116	;'t'
  1933  007E8B  2E                 	db	46
  1934  007E8C  3A                 	db	58	;':'
  1935  007E8D  00                 	db	0
  1936  007E8E                     STR_70:
  1937  007E8E  4A                 	db	74	;'J'
  1938  007E8F  75                 	db	117	;'u'
  1939  007E90  6C                 	db	108	;'l'
  1940  007E91  20                 	db	32
  1941  007E92  31                 	db	49	;'1'
  1942  007E93  35                 	db	53	;'5'
  1943  007E94  20                 	db	32
  1944  007E95  32                 	db	50	;'2'
  1945  007E96  30                 	db	48	;'0'
  1946  007E97  32                 	db	50	;'2'
  1947  007E98  30                 	db	48	;'0'
  1948  007E99  00                 	db	0
  1949  007E9A                     STR_88:
  1950  007E9A  45                 	db	69	;'E'
  1951  007E9B  52                 	db	82	;'R'
  1952  007E9C  52                 	db	82	;'R'
  1953  007E9D  4F                 	db	79	;'O'
  1954  007E9E  20                 	db	32
  1955  007E9F  45                 	db	69	;'E'
  1956  007EA0  45                 	db	69	;'E'
  1957  007EA1  50                 	db	80	;'P'
  1958  007EA2  52                 	db	82	;'R'
  1959  007EA3  4F                 	db	79	;'O'
  1960  007EA4  4D                 	db	77	;'M'
  1961  007EA5  00                 	db	0
  1962  007EA6                     STR_2:
  1963  007EA6  4D                 	db	77	;'M'
  1964  007EA7  75                 	db	117	;'u'
  1965  007EA8  72                 	db	114	;'r'
  1966  007EA9  63                 	db	99	;'c'
  1967  007EAA  68                 	db	104	;'h'
  1968  007EAB  61                 	db	97	;'a'
  1969  007EAC  6D                 	db	109	;'m'
  1970  007EAD  65                 	db	101	;'e'
  1971  007EAE  6E                 	db	110	;'n'
  1972  007EAF  74                 	db	116	;'t'
  1973  007EB0  6F                 	db	111	;'o'
  1974  007EB1  00                 	db	0
  1975  007EB2                     STR_81:
  1976  007EB2  41                 	db	65	;'A'
  1977  007EB3  54                 	db	84	;'T'
  1978  007EB4  2B                 	db	43
  1979  007EB5  43                 	db	67	;'C'
  1980  007EB6  49                 	db	73	;'I'
  1981  007EB7  46                 	db	70	;'F'
  1982  007EB8  53                 	db	83	;'S'
  1983  007EB9  52                 	db	82	;'R'
  1984  007EBA  0D                 	db	13
  1985  007EBB  0A                 	db	10
  1986  007EBC  00                 	db	0
  1987  007EBD                     STR_3:
  1988  007EBD  53                 	db	83	;'S'
  1989  007EBE  65                 	db	101	;'e'
  1990  007EBF  63                 	db	99	;'c'
  1991  007EC0  2E                 	db	46
  1992  007EC1  20                 	db	32
  1993  007EC2  46                 	db	70	;'F'
  1994  007EC3  6F                 	db	111	;'o'
  1995  007EC4  6C                 	db	108	;'l'
  1996  007EC5  68                 	db	104	;'h'
  1997  007EC6  61                 	db	97	;'a'
  1998  007EC7  00                 	db	0
  1999  007EC8                     STR_1:
  2000  007EC8  41                 	db	65	;'A'
  2001  007EC9  6D                 	db	109	;'m'
  2002  007ECA  61                 	db	97	;'a'
  2003  007ECB  72                 	db	114	;'r'
  2004  007ECC  65                 	db	101	;'e'
  2005  007ECD  6C                 	db	108	;'l'
  2006  007ECE  61                 	db	97	;'a'
  2007  007ECF  63                 	db	99	;'c'
  2008  007ED0  61                 	db	97	;'a'
  2009  007ED1  6F                 	db	111	;'o'
  2010  007ED2  00                 	db	0
  2011  007ED3                     STR_100:
  2012  007ED3  41                 	db	65	;'A'
  2013  007ED4  75                 	db	117	;'u'
  2014  007ED5  74                 	db	116	;'t'
  2015  007ED6  6F                 	db	111	;'o'
  2016  007ED7  6D                 	db	109	;'m'
  2017  007ED8  61                 	db	97	;'a'
  2018  007ED9  74                 	db	116	;'t'
  2019  007EDA  69                 	db	105	;'i'
  2020  007EDB  63                 	db	99	;'c'
  2021  007EDC  6F                 	db	111	;'o'
  2022  007EDD  00                 	db	0
  2023  007EDE                     STR_103:
  2024  007EDE  44                 	db	68	;'D'
  2025  007EDF  65                 	db	101	;'e'
  2026  007EE0  73                 	db	115	;'s'
  2027  007EE1  74                 	db	116	;'t'
  2028  007EE2  72                 	db	114	;'r'
  2029  007EE3  61                 	db	97	;'a'
  2030  007EE4  76                 	db	118	;'v'
  2031  007EE5  61                 	db	97	;'a'
  2032  007EE6  64                 	db	100	;'d'
  2033  007EE7  6F                 	db	111	;'o'
  2034  007EE8  00                 	db	0
  2035  007EE9                     STR_104:
  2036  007EE9  41                 	db	65	;'A'
  2037  007EEA  4C                 	db	76	;'L'
  2038  007EEB  41                 	db	65	;'A'
  2039  007EEC  52                 	db	82	;'R'
  2040  007EED  4D                 	db	77	;'M'
  2041  007EEE  45                 	db	69	;'E'
  2042  007EEF  3A                 	db	58	;':'
  2043  007EF0  20                 	db	32
  2044  007EF1  25                 	db	37
  2045  007EF2  73                 	db	115	;'s'
  2046  007EF3  00                 	db	0
  2047  007EF4                     STR_106:
  2048  007EF4  44                 	db	68	;'D'
  2049  007EF5  65                 	db	101	;'e'
  2050  007EF6  73                 	db	115	;'s'
  2051  007EF7  6C                 	db	108	;'l'
  2052  007EF8  69                 	db	105	;'i'
  2053  007EF9  67                 	db	103	;'g'
  2054  007EFA  61                 	db	97	;'a'
  2055  007EFB  64                 	db	100	;'d'
  2056  007EFC  6F                 	db	111	;'o'
  2057  007EFD  00                 	db	0
  2058  007EFE                     STR_4:
  2059  007EFE  53                 	db	83	;'S'
  2060  007EFF  65                 	db	101	;'e'
  2061  007F00  63                 	db	99	;'c'
  2062  007F01  2E                 	db	46
  2063  007F02  20                 	db	32
  2064  007F03  54                 	db	84	;'T'
  2065  007F04  61                 	db	97	;'a'
  2066  007F05  6C                 	db	108	;'l'
  2067  007F06  6F                 	db	111	;'o'
  2068  007F07  00                 	db	0
  2069  007F08                     STR_97:
  2070  007F08  43                 	db	67	;'C'
  2071  007F09  4C                 	db	76	;'L'
  2072  007F0A  49                 	db	73	;'I'
  2073  007F0B  4D                 	db	77	;'M'
  2074  007F0C  41                 	db	65	;'A'
  2075  007F0D  3A                 	db	58	;':'
  2076  007F0E  20                 	db	32
  2077  007F0F  25                 	db	37
  2078  007F10  73                 	db	115	;'s'
  2079  007F11  00                 	db	0
  2080  007F12                     STR_101:
  2081  007F12  54                 	db	84	;'T'
  2082  007F13  52                 	db	82	;'R'
  2083  007F14  41                 	db	65	;'A'
  2084  007F15  56                 	db	86	;'V'
  2085  007F16  41                 	db	65	;'A'
  2086  007F17  3A                 	db	58	;':'
  2087  007F18  20                 	db	32
  2088  007F19  25                 	db	37
  2089  007F1A  73                 	db	115	;'s'
  2090  007F1B  00                 	db	0
  2091  007F1C                     STR_92:
  2092  007F1C  46                 	db	70	;'F'
  2093  007F1D  61                 	db	97	;'a'
  2094  007F1E  73                 	db	115	;'s'
  2095  007F1F  65                 	db	101	;'e'
  2096  007F20  20                 	db	32
  2097  007F21  7E                 	db	126
  2098  007F22  20                 	db	32
  2099  007F23  25                 	db	37
  2100  007F24  73                 	db	115	;'s'
  2101  007F25  00                 	db	0
  2102  007F26                     STR_117:
  2103  007F26  50                 	db	80	;'P'
  2104  007F27  31                 	db	49	;'1'
  2105  007F28  32                 	db	50	;'2'
  2106  007F29  3A                 	db	58	;':'
  2107  007F2A  25                 	db	37
  2108  007F2B  34                 	db	52	;'4'
  2109  007F2C  64                 	db	100	;'d'
  2110  007F2D  20                 	db	32
  2111  007F2E  7C                 	db	124
  2112  007F2F  00                 	db	0
  2113  007F30                     STR_83:
  2114  007F30  41                 	db	65	;'A'
  2115  007F31  54                 	db	84	;'T'
  2116  007F32  2B                 	db	43
  2117  007F33  52                 	db	82	;'R'
  2118  007F34  53                 	db	83	;'S'
  2119  007F35  54                 	db	84	;'T'
  2120  007F36  0D                 	db	13
  2121  007F37  0A                 	db	10
  2122  007F38  00                 	db	0
  2123  007F39                     STR_29:
  2124  007F39  31                 	db	49	;'1'
  2125  007F3A  30                 	db	48	;'0'
  2126  007F3B  2E                 	db	46
  2127  007F3C  31                 	db	49	;'1'
  2128  007F3D  2E                 	db	46
  2129  007F3E  31                 	db	49	;'1'
  2130  007F3F  2E                 	db	46
  2131  007F40  31                 	db	49	;'1'
  2132  007F41  00                 	db	0
  2133  007F42                     STR_121:
  2134  007F42  41                 	db	65	;'A'
  2135  007F43  55                 	db	85	;'U'
  2136  007F44  54                 	db	84	;'T'
  2137  007F45  48                 	db	72	;'H'
  2138  007F46  3A                 	db	58	;':'
  2139  007F47  20                 	db	32
  2140  007F48  25                 	db	37
  2141  007F49  64                 	db	100	;'d'
  2142  007F4A  00                 	db	0
  2143  007F4B                     STR_96:
  2144  007F4B  46                 	db	70	;'F'
  2145  007F4C  41                 	db	65	;'A'
  2146  007F4D  53                 	db	83	;'S'
  2147  007F4E  45                 	db	69	;'E'
  2148  007F4F  3A                 	db	58	;':'
  2149  007F50  20                 	db	32
  2150  007F51  25                 	db	37
  2151  007F52  73                 	db	115	;'s'
  2152  007F53  00                 	db	0
  2153  007F54                     STR_98:
  2154  007F54  4D                 	db	77	;'M'
  2155  007F55  4F                 	db	79	;'O'
  2156  007F56  44                 	db	68	;'D'
  2157  007F57  4F                 	db	79	;'O'
  2158  007F58  3A                 	db	58	;':'
  2159  007F59  20                 	db	32
  2160  007F5A  25                 	db	37
  2161  007F5B  73                 	db	115	;'s'
  2162  007F5C  00                 	db	0
  2163  007F5D                     STR_102:
  2164  007F5D  54                 	db	84	;'T'
  2165  007F5E  72                 	db	114	;'r'
  2166  007F5F  61                 	db	97	;'a'
  2167  007F60  76                 	db	118	;'v'
  2168  007F61  61                 	db	97	;'a'
  2169  007F62  64                 	db	100	;'d'
  2170  007F63  6F                 	db	111	;'o'
  2171  007F64  00                 	db	0
  2172  007F65                     STR_118:
  2173  007F65  53                 	db	83	;'S'
  2174  007F66  49                 	db	73	;'I'
  2175  007F67  44                 	db	68	;'D'
  2176  007F68  3A                 	db	58	;':'
  2177  007F69  20                 	db	32
  2178  007F6A  25                 	db	37
  2179  007F6B  73                 	db	115	;'s'
  2180  007F6C  00                 	db	0
  2181  007F6D                     STR_119:
  2182  007F6D  50                 	db	80	;'P'
  2183  007F6E  53                 	db	83	;'S'
  2184  007F6F  57                 	db	87	;'W'
  2185  007F70  3A                 	db	58	;':'
  2186  007F71  20                 	db	32
  2187  007F72  25                 	db	37
  2188  007F73  73                 	db	115	;'s'
  2189  007F74  00                 	db	0
  2190  007F75                     STR_137:
  2191  007F75  28                 	db	40
  2192  007F76  6E                 	db	110	;'n'
  2193  007F77  75                 	db	117	;'u'
  2194  007F78  6C                 	db	108	;'l'
  2195  007F79  6C                 	db	108	;'l'
  2196  007F7A  29                 	db	41
  2197  007F7B  00                 	db	0
  2198  007F7C                     STR_130:
  2199  007F7C  22                 	db	34
  2200  007F7D  25                 	db	37
  2201  007F7E  73                 	db	115	;'s'
  2202  007F7F  22                 	db	34
  2203  007F80  3A                 	db	58	;':'
  2204  007F81  22                 	db	34
  2205  007F82  00                 	db	0
  2206  007F83                     STR_77:
  2207  007F83  53                 	db	83	;'S'
  2208  007F84  54                 	db	84	;'T'
  2209  007F85  41                 	db	65	;'A'
  2210  007F86  4D                 	db	77	;'M'
  2211  007F87  41                 	db	65	;'A'
  2212  007F88  43                 	db	67	;'C'
  2213  007F89  00                 	db	0
  2214  007F8A                     STR_76:
  2215  007F8A  43                 	db	67	;'C'
  2216  007F8B  4C                 	db	76	;'L'
  2217  007F8C  4F                 	db	79	;'O'
  2218  007F8D  53                 	db	83	;'S'
  2219  007F8E  45                 	db	69	;'E'
  2220  007F8F  44                 	db	68	;'D'
  2221  007F90  00                 	db	0
  2222  007F91                     STR_7:
  2223  007F91  4E                 	db	78	;'N'
  2224  007F92  6F                 	db	111	;'o'
  2225  007F93  72                 	db	114	;'r'
  2226  007F94  6D                 	db	109	;'m'
  2227  007F95  61                 	db	97	;'a'
  2228  007F96  6C                 	db	108	;'l'
  2229  007F97  00                 	db	0
  2230  007F98                     STR_99:
  2231  007F98  4D                 	db	77	;'M'
  2232  007F99  61                 	db	97	;'a'
  2233  007F9A  6E                 	db	110	;'n'
  2234  007F9B  75                 	db	117	;'u'
  2235  007F9C  61                 	db	97	;'a'
  2236  007F9D  6C                 	db	108	;'l'
  2237  007F9E  00                 	db	0
  2238  007F9F                     STR_105:
  2239  007F9F  4C                 	db	76	;'L'
  2240  007FA0  69                 	db	105	;'i'
  2241  007FA1  67                 	db	103	;'g'
  2242  007FA2  61                 	db	97	;'a'
  2243  007FA3  64                 	db	100	;'d'
  2244  007FA4  6F                 	db	111	;'o'
  2245  007FA5  00                 	db	0
  2246  007FA6                     STR_120:
  2247  007FA6  4E                 	db	78	;'N'
  2248  007FA7  53                 	db	83	;'S'
  2249  007FA8  3A                 	db	58	;':'
  2250  007FA9  20                 	db	32
  2251  007FAA  25                 	db	37
  2252  007FAB  73                 	db	115	;'s'
  2253  007FAC  00                 	db	0
  2254  007FAD                     STR_25:
  2255  007FAD  41                 	db	65	;'A'
  2256  007FAE  63                 	db	99	;'c'
  2257  007FAF  63                 	db	99	;'c'
  2258  007FB0  65                 	db	101	;'e'
  2259  007FB1  70                 	db	112	;'p'
  2260  007FB2  74                 	db	116	;'t'
  2261  007FB3  00                 	db	0
  2262  007FB4  22                 	db	34
  2263  007FB5  25                 	db	37
  2264  007FB6  73                 	db	115	;'s'
  2265  007FB7  22                 	db	34
  2266  007FB8  3A                 	db	58	;':'
  2267  007FB9  00                 	db	0
  2268  007FBA                     STR_6:
  2269  007FBA  55                 	db	85	;'U'
  2270  007FBB  6D                 	db	109	;'m'
  2271  007FBC  69                 	db	105	;'i'
  2272  007FBD  64                 	db	100	;'d'
  2273  007FBE  6F                 	db	111	;'o'
  2274  007FBF  00                 	db	0
  2275  007FC0                     STR_47:
  2276  007FC0  25                 	db	37
  2277  007FC1  73                 	db	115	;'s'
  2278  007FC2  3A                 	db	58	;':'
  2279  007FC3  25                 	db	37
  2280  007FC4  73                 	db	115	;'s'
  2281  007FC5  00                 	db	0
  2282  007FC6                     STR_128:
  2283  007FC6  25                 	db	37
  2284  007FC7  73                 	db	115	;'s'
  2285  007FC8  25                 	db	37
  2286  007FC9  63                 	db	99	;'c'
  2287  007FCA  00                 	db	0
  2288  007FCB                     STR_72:
  2289  007FCB  73                 	db	115	;'s'
  2290  007FCC  61                 	db	97	;'a'
  2291  007FCD  76                 	db	118	;'v'
  2292  007FCE  65                 	db	101	;'e'
  2293  007FCF  00                 	db	0
  2294  007FD0                     STR_55:
  2295  007FD0  6C                 	db	108	;'l'
  2296  007FD1  69                 	db	105	;'i'
  2297  007FD2  6E                 	db	110	;'n'
  2298  007FD3  6B                 	db	107	;'k'
  2299  007FD4  00                 	db	0
  2300  007FD5                     STR_8:
  2301  007FD5  53                 	db	83	;'S'
  2302  007FD6  65                 	db	101	;'e'
  2303  007FD7  63                 	db	99	;'c'
  2304  007FD8  6F                 	db	111	;'o'
  2305  007FD9  00                 	db	0
  2306  007FDA                     STR_5:
  2307  007FDA  2D                 	db	45
  2308  007FDB  20                 	db	32
  2309  007FDC  2D                 	db	45
  2310  007FDD  00                 	db	0
  2311  007FDE                     STR_68:
  2312  007FDE  32                 	db	50	;'2'
  2313  007FDF  30                 	db	48	;'0'
  2314  007FE0  30                 	db	48	;'0'
  2315  007FE1  00                 	db	0
  2316  007FE2                     STR_10:
  2317  007FE2  41                 	db	65	;'A'
  2318  007FE3  4C                 	db	76	;'L'
  2319  007FE4  4C                 	db	76	;'L'
  2320  007FE5  00                 	db	0
  2321  007FE6                     STR_38:
  2322  007FE6  24                 	db	36
  2323  007FE7  23                 	db	35
  2324  007FE8  00                 	db	0
  2325  007FE9                     STR_40:
  2326  007FE9  23                 	db	35
  2327  007FEA  24                 	db	36
  2328  007FEB  00                 	db	0
  2329  007FEC                     STR_9:
  2330  007FEC  2D                 	db	45
  2331  007FED  2D                 	db	45
  2332  007FEE  00                 	db	0
  2333  007FEF                     STR_12:
  2334  007FEF  4F                 	db	79	;'O'
  2335  007FF0  4B                 	db	75	;'K'
  2336  007FF1  00                 	db	0
  2337  007FF2                     STR_41:
  2338  007FF2  73                 	db	115	;'s'
  2339  007FF3  73                 	db	115	;'s'
  2340  007FF4  00                 	db	0
  2341  007FF5                     STR_43:
  2342  007FF5  73                 	db	115	;'s'
  2343  007FF6  76                 	db	118	;'v'
  2344  007FF7  00                 	db	0
  2345  007FF8                     STR_42:
  2346  007FF8  70                 	db	112	;'p'
  2347  007FF9  77                 	db	119	;'w'
  2348  007FFA  00                 	db	0
  2349  007FFB                     STR_60:
  2350  007FFB  32                 	db	50	;'2'
  2351  007FFC  00                 	db	0
  2352  007FFD                     STR_61:
  2353  007FFD  34                 	db	52	;'4'
  2354  007FFE  00                 	db	0
  2355  0000                     
  2356                           ; #config settings
  2357  007FFF  00                 	db	0	; dummy byte at the end
  2358  0000                     
  2359                           	psect	cinit
  2360  0050C4                     __pcinit:
  2361                           	opt stack 0
  2362  0050C4                     start_initialization:
  2363                           	opt stack 0
  2364  0050C4                     __initialization:
  2365                           	opt stack 0
  2366                           
  2367                           ; Initialize objects allocated to BANK1 (12 bytes)
  2368                           ; load TBLPTR registers with __pidataBANK1
  2369  0050C4  0EA2               	movlw	low __pidataBANK1
  2370  0050C6  6EF6               	movwf	tblptrl,c
  2371  0050C8  0E5C               	movlw	high __pidataBANK1
  2372  0050CA  6EF7               	movwf	tblptrh,c
  2373  0050CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2374  0050CE  6EF8               	movwf	tblptru,c
  2375  0050D0  EE01  F0E6         	lfsr	0,__pdataBANK1
  2376  0050D4  EE10 F00C          	lfsr	1,12
  2377  0050D8                     copy_data0:
  2378  0050D8  0009               	tblrd		*+
  2379  0050DA  CFF5 FFEE          	movff	tablat,postinc0
  2380  0050DE  50E5               	movf	postdec1,w,c
  2381  0050E0  50E1               	movf	fsr1l,w,c
  2382  0050E2  E1FA               	bnz	copy_data0
  2383                           
  2384                           ; Initialize objects allocated to BANK0 (3 bytes)
  2385                           ; load TBLPTR registers with __pidataBANK0
  2386  0050E4  0EED               	movlw	low __pidataBANK0
  2387  0050E6  6EF6               	movwf	tblptrl,c
  2388  0050E8  0E5C               	movlw	high __pidataBANK0
  2389  0050EA  6EF7               	movwf	tblptrh,c
  2390  0050EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2391  0050EE  6EF8               	movwf	tblptru,c
  2392  0050F0  0009               	tblrd		*+	;fetch initializer
  2393  0050F2  CFF5 F0FD          	movff	tablat,__pdataBANK0
  2394  0050F6  0009               	tblrd		*+	;fetch initializer
  2395  0050F8  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  2396  0050FC  0009               	tblrd		*+	;fetch initializer
  2397  0050FE  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
  2398                           
  2399                           ; Initialize objects allocated to COMRAM (3 bytes)
  2400                           ; load TBLPTR registers with __pidataCOMRAM
  2401  005102  0EEA               	movlw	low __pidataCOMRAM
  2402  005104  6EF6               	movwf	tblptrl,c
  2403  005106  0E5C               	movlw	high __pidataCOMRAM
  2404  005108  6EF7               	movwf	tblptrh,c
  2405  00510A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2406  00510C  6EF8               	movwf	tblptru,c
  2407  00510E  0009               	tblrd		*+	;fetch initializer
  2408  005110  CFF5 F05C          	movff	tablat,__pdataCOMRAM
  2409  005114  0009               	tblrd		*+	;fetch initializer
  2410  005116  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
  2411  00511A  0009               	tblrd		*+	;fetch initializer
  2412  00511C  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
  2413                           
  2414                           ; Clear objects allocated to BANK2 (205 bytes)
  2415  005120  EE02  F000         	lfsr	0,__pbssBANK2
  2416  005124  0ECD               	movlw	205
  2417  005126                     clear_0:
  2418  005126  6AEE               	clrf	postinc0,c
  2419  005128  06E8               	decf	wreg,f,c
  2420  00512A  E1FD               	bnz	clear_0
  2421                           
  2422                           ; Clear objects allocated to BANK1 (230 bytes)
  2423  00512C  EE01  F000         	lfsr	0,__pbssBANK1
  2424  005130  0EE6               	movlw	230
  2425  005132                     clear_1:
  2426  005132  6AEE               	clrf	postinc0,c
  2427  005134  06E8               	decf	wreg,f,c
  2428  005136  E1FD               	bnz	clear_1
  2429                           
  2430                           ; Clear objects allocated to BANK0 (10 bytes)
  2431  005138  EE00  F0F3         	lfsr	0,__pbssBANK0
  2432  00513C  0E0A               	movlw	10
  2433  00513E                     clear_2:
  2434  00513E  6AEE               	clrf	postinc0,c
  2435  005140  06E8               	decf	wreg,f,c
  2436  005142  E1FD               	bnz	clear_2
  2437                           
  2438                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2439  005144  6A5B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2440                           
  2441                           ; Clear objects allocated to COMRAM (42 bytes)
  2442  005146  EE00  F031         	lfsr	0,__pbssCOMRAM
  2443  00514A  0E2A               	movlw	42
  2444  00514C                     clear_3:
  2445  00514C  6AEE               	clrf	postinc0,c
  2446  00514E  06E8               	decf	wreg,f,c
  2447  005150  E1FD               	bnz	clear_3
  2448  005152                     end_of_initialization:
  2449                           	opt stack 0
  2450  005152                     __end_of__initialization:
  2451                           	opt stack 0
  2452  005152  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2453  005154  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2454  005156  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2455  005158  6EF8               	movwf	tblptru,c
  2456  00515A  0100               	movlb	0
  2457  00515C  EF09  F000         	goto	_main	;jump to C main() function
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1l	equ	0xFE1
  2466                           
  2467                           	psect	bitbssCOMRAM
  2468  0002D8                     __pbitbssCOMRAM:
  2469                           	opt stack 0
  2470  0002D8                     _contador_fase_automatica:
  2471                           	opt stack 0
  2472  0002D8                     	ds	1
  2473  0002D9                     _md_seguranca:
  2474                           	opt stack 0
  2475  0002D9                     	ds	1
  2476  0002DA                     _blinkk:
  2477                           	opt stack 0
  2478  0002DA                     	ds	1
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1l	equ	0xFE1
  2487                           
  2488                           	psect	bssCOMRAM
  2489  000031                     __pbssCOMRAM:
  2490                           	opt stack 0
  2491  000031                     _t_controle_religar_buzzer:
  2492                           	opt stack 0
  2493  000031                     	ds	2
  2494  000033                     _t_controle_flap:
  2495                           	opt stack 0
  2496  000033                     	ds	2
  2497  000035                     _media_adc:
  2498                           	opt stack 0
  2499  000035                     	ds	1
  2500  000036                     _t_leitura_adc:
  2501                           	opt stack 0
  2502  000036                     	ds	1
  2503  000037                     _t_controle_temp_automatica:
  2504                           	opt stack 0
  2505  000037                     	ds	1
  2506  000038                     _t_controle_blink:
  2507                           	opt stack 0
  2508  000038                     	ds	1
  2509  000039                     _t_controle_buzzer:
  2510                           	opt stack 0
  2511  000039                     	ds	1
  2512  00003A                     _t_controle_fim_fases:
  2513                           	opt stack 0
  2514  00003A                     	ds	1
  2515  00003B                     _f_buzzer_falta_energia:
  2516                           	opt stack 0
  2517  00003B                     	ds	1
  2518  00003C                     __acao_flap:
  2519                           	opt stack 0
  2520  00003C                     	ds	1
  2521  00003D                     _f_wifi_processo:
  2522                           	opt stack 0
  2523  00003D                     	ds	1
  2524  00003E                     _t_wifi_restart:
  2525                           	opt stack 0
  2526  00003E                     	ds	1
  2527  00003F                     __BF_current:
  2528                           	opt stack 0
  2529  00003F                     	ds	1
  2530  000040                     __BF_i_count:
  2531                           	opt stack 0
  2532  000040                     	ds	1
  2533  000041                     __BF_enable_receive:
  2534                           	opt stack 0
  2535  000041                     	ds	1
  2536  000042                     _bt_flag:
  2537                           	opt stack 0
  2538  000042                     	ds	1
  2539  000043                     _leds:
  2540                           	opt stack 0
  2541  000043                     	ds	1
  2542  000044                     _ajuste_parametro:
  2543                           	opt stack 0
  2544  000044                     	ds	1
  2545  000045                     _opcaomenu:
  2546                           	opt stack 0
  2547  000045                     	ds	1
  2548  000046                     _hor:
  2549                           	opt stack 0
  2550  000046                     	ds	1
  2551  000047                     _min:
  2552                           	opt stack 0
  2553  000047                     	ds	1
  2554  000048                     _sec:
  2555                           	opt stack 0
  2556  000048                     	ds	1
  2557  000049                     _wifi_conectado:
  2558                           	opt stack 0
  2559  000049                     	ds	1
  2560  00004A                     _base_sec:
  2561                           	opt stack 0
  2562  00004A                     	ds	1
  2563  00004B                     _wifi_SENHA:
  2564                           	opt stack 0
  2565  00004B                     	ds	2
  2566  00004D                     _senha_desbloqueio_func:
  2567                           	opt stack 0
  2568  00004D                     	ds	1
  2569  00004E                     _wifi_habilita_alteracao:
  2570                           	opt stack 0
  2571  00004E                     	ds	1
  2572  00004F                     _h_subir_temp_automatica:
  2573                           	opt stack 0
  2574  00004F                     	ds	1
  2575  000050                     _h_buzzer:
  2576                           	opt stack 0
  2577  000050                     	ds	1
  2578  000051                     _h_flap:
  2579                           	opt stack 0
  2580  000051                     	ds	1
  2581  000052                     _h_abafador:
  2582                           	opt stack 0
  2583  000052                     	ds	1
  2584  000053                     _h_venotinha:
  2585                           	opt stack 0
  2586  000053                     	ds	1
  2587  000054                     _t_flap_intervalo:
  2588                           	opt stack 0
  2589  000054                     	ds	1
  2590  000055                     _t_flap_ligado:
  2591                           	opt stack 0
  2592  000055                     	ds	1
  2593  000056                     _t_fim_fase3:
  2594                           	opt stack 0
  2595  000056                     	ds	1
  2596  000057                     _t_fim_fase2:
  2597                           	opt stack 0
  2598  000057                     	ds	1
  2599  000058                     _t_fim_fase1:
  2600                           	opt stack 0
  2601  000058                     	ds	1
  2602  000059                     _tipo_modo_trabalho:
  2603                           	opt stack 0
  2604  000059                     	ds	1
  2605  00005A                     _fornalha:
  2606                           	opt stack 0
  2607  00005A                     	ds	1
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           fsr1l	equ	0xFE1
  2616                           
  2617                           	psect	dataCOMRAM
  2618  00005C                     __pdataCOMRAM:
  2619                           	opt stack 0
  2620  00005C                     __led:
  2621                           	opt stack 0
  2622  00005C                     	ds	1
  2623  00005D                     _umid:
  2624                           	opt stack 0
  2625  00005D                     	ds	1
  2626  00005E                     _f_falta_energia:
  2627                           	opt stack 0
  2628  00005E                     	ds	1
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           
  2638                           	psect	bssBANK0
  2639  0000F3                     __pbssBANK0:
  2640                           	opt stack 0
  2641  0000F3                     _umidajt:
  2642                           	opt stack 0
  2643  0000F3                     	ds	1
  2644  0000F4                     _tempajt:
  2645                           	opt stack 0
  2646  0000F4                     	ds	1
  2647  0000F5                     _clima:
  2648                           	opt stack 0
  2649  0000F5                     	ds	1
  2650  0000F6                     _fase:
  2651                           	opt stack 0
  2652  0000F6                     	ds	1
  2653  0000F7                     _h_modo_seguranca:
  2654                           	opt stack 0
  2655  0000F7                     	ds	1
  2656  0000F8                     _t_religar_ventoinha_automatica:
  2657                           	opt stack 0
  2658  0000F8                     	ds	1
  2659  0000F9                     _t_temp_automatica:
  2660                           	opt stack 0
  2661  0000F9                     	ds	1
  2662  0000FA                     _tipo_sensor_umidade:
  2663                           	opt stack 0
  2664  0000FA                     	ds	1
  2665  0000FB                     _trava_fase:
  2666                           	opt stack 0
  2667  0000FB                     	ds	1
  2668  0000FC                     _buzzer:
  2669                           	opt stack 0
  2670  0000FC                     	ds	1
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           postdec1	equ	0xFE5
  2678                           fsr1l	equ	0xFE1
  2679                           
  2680                           	psect	dataBANK0
  2681  0000FD                     __pdataBANK0:
  2682                           	opt stack 0
  2683  0000FD                     _menu:
  2684                           	opt stack 0
  2685  0000FD                     	ds	1
  2686  0000FE                     _temp:
  2687                           	opt stack 0
  2688  0000FE                     	ds	1
  2689  0000FF                     _t_buzzer_religar:
  2690                           	opt stack 0
  2691  0000FF                     	ds	1
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           postdec1	equ	0xFE5
  2699                           fsr1l	equ	0xFE1
  2700                           
  2701                           	psect	bssBANK1
  2702  000100                     __pbssBANK1:
  2703                           	opt stack 0
  2704  000100                     __umid:
  2705                           	opt stack 0
  2706  000100                     	ds	33
  2707  000121                     __temp:
  2708                           	opt stack 0
  2709  000121                     	ds	33
  2710  000142                     getIntJSON@F274:
  2711                           	opt stack 0
  2712  000142                     	ds	10
  2713  00014C                     _t_controle_modo_seguranca:
  2714                           	opt stack 0
  2715  00014C                     	ds	2
  2716  00014E                     _t_controle_religar_ventoinha:
  2717                           	opt stack 0
  2718  00014E                     	ds	2
  2719  000150                     __sec:
  2720                           	opt stack 0
  2721  000150                     	ds	1
  2722  000151                     _lcd_rfsh:
  2723                           	opt stack 0
  2724  000151                     	ds	1
  2725  000152                     _line4:
  2726                           	opt stack 0
  2727  000152                     	ds	21
  2728  000167                     _line3:
  2729                           	opt stack 0
  2730  000167                     	ds	21
  2731  00017C                     _line2:
  2732                           	opt stack 0
  2733  00017C                     	ds	21
  2734  000191                     _line1:
  2735                           	opt stack 0
  2736  000191                     	ds	21
  2737  0001A6                     _ipServer:
  2738                           	opt stack 0
  2739  0001A6                     	ds	20
  2740  0001BA                     _senha:
  2741                           	opt stack 0
  2742  0001BA                     	ds	15
  2743  0001C9                     _ssid:
  2744                           	opt stack 0
  2745  0001C9                     	ds	15
  2746  0001D8                     __BF_start:
  2747                           	opt stack 0
  2748  0001D8                     	ds	10
  2749  0001E2                     _portServer:
  2750                           	opt stack 0
  2751  0001E2                     	ds	4
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           
  2761                           	psect	dataBANK1
  2762  0001E6                     __pdataBANK1:
  2763                           	opt stack 0
  2764  0001E6                     _wifi_MAC:
  2765                           	opt stack 0
  2766  0001E6                     	ds	12
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1l	equ	0xFE1
  2775                           
  2776                           	psect	bssBANK2
  2777  000200                     __pbssBANK2:
  2778                           	opt stack 0
  2779  000200                     getStringJSON@F288:
  2780                           	opt stack 0
  2781  000200                     	ds	25
  2782  000219                     getStringJSON@F292:
  2783                           	opt stack 0
  2784  000219                     	ds	20
  2785  00022D                     getStringJSON@F290:
  2786                           	opt stack 0
  2787  00022D                     	ds	20
  2788  000241                     getIntJSON@F278:
  2789                           	opt stack 0
  2790  000241                     	ds	20
  2791  000255                     getIntJSON@F276:
  2792                           	opt stack 0
  2793  000255                     	ds	20
  2794  000269                     _bufferSerial:
  2795                           	opt stack 0
  2796  000269                     	ds	100
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           postdec1	equ	0xFE5
  2804                           fsr1l	equ	0xFE1
  2805                           
  2806                           	psect	cstackBANK0
  2807  000060                     __pcstackBANK0:
  2808                           	opt stack 0
  2809  000060                     ??_isdigit:
  2810  000060                     ??_I2C_Wait:
  2811  000060                     ?_strlen:
  2812                           	opt stack 0
  2813  000060                     ?_faseAtual:
  2814                           	opt stack 0
  2815  000060                     ?_climaAtual:
  2816                           	opt stack 0
  2817  000060                     ?_strchr:
  2818                           	opt stack 0
  2819  000060                     ?_tabelaUmidade:
  2820                           	opt stack 0
  2821  000060                     ?_readADC:
  2822                           	opt stack 0
  2823  000060                     ?___wmul:
  2824                           	opt stack 0
  2825  000060                     ?___lwdiv:
  2826                           	opt stack 0
  2827  000060                     ?___ftpack:
  2828                           	opt stack 0
  2829  000060                     ?___lldiv:
  2830                           	opt stack 0
  2831  000060                     setLed@acao:
  2832                           	opt stack 0
  2833  000060                     Lcd_Port@a:
  2834                           	opt stack 0
  2835  000060                     btPress@bt:
  2836                           	opt stack 0
  2837  000060                     putch@c:
  2838                           	opt stack 0
  2839  000060                     blink@line:
  2840                           	opt stack 0
  2841  000060                     tabelaUmidade@_tmp:
  2842                           	opt stack 0
  2843  000060                     faseAtual@_fase:
  2844                           	opt stack 0
  2845  000060                     delay@x:
  2846                           	opt stack 0
  2847  000060                     ___wmul@multiplier:
  2848                           	opt stack 0
  2849  000060                     ___lwdiv@dividend:
  2850                           	opt stack 0
  2851  000060                     memset@p1:
  2852                           	opt stack 0
  2853  000060                     strlen@s:
  2854                           	opt stack 0
  2855  000060                     strchr@ptr:
  2856                           	opt stack 0
  2857  000060                     ___ftpack@arg:
  2858                           	opt stack 0
  2859  000060                     ___ftge@ff1:
  2860                           	opt stack 0
  2861  000060                     ___lldiv@dividend:
  2862                           	opt stack 0
  2863                           
  2864                           ; 4 bytes @ 0x0
  2865  000060                     	ds	1
  2866  000061                     ??_Lcd_Cmd:
  2867  000061                     ?_I2C_Read:
  2868                           	opt stack 0
  2869  000061                     setLed@led:
  2870                           	opt stack 0
  2871  000061                     Lcd_Write_Char@tempp:
  2872                           	opt stack 0
  2873  000061                     _isdigit$2058:
  2874                           	opt stack 0
  2875  000061                     I2C_Write@d:
  2876                           	opt stack 0
  2877  000061                     I2C_Read@a:
  2878                           	opt stack 0
  2879                           
  2880                           ; 2 bytes @ 0x1
  2881  000061                     	ds	1
  2882  000062                     ??_delay:
  2883  000062                     ??_strlen:
  2884  000062                     ??_readADC:
  2885  000062                     Lcd_Cmd@a:
  2886                           	opt stack 0
  2887  000062                     Lcd_Write_Char@y:
  2888                           	opt stack 0
  2889  000062                     blink@start:
  2890                           	opt stack 0
  2891  000062                     climaAtual@c:
  2892                           	opt stack 0
  2893  000062                     isdigit@c:
  2894                           	opt stack 0
  2895  000062                     tabelaUmidade@_clima:
  2896                           	opt stack 0
  2897  000062                     faseAtual@_tempajt:
  2898                           	opt stack 0
  2899  000062                     acaoFlap@tempo_ativado:
  2900                           	opt stack 0
  2901  000062                     ___wmul@multiplicand:
  2902                           	opt stack 0
  2903  000062                     ___lwdiv@divisor:
  2904                           	opt stack 0
  2905  000062                     memset@c:
  2906                           	opt stack 0
  2907  000062                     strchr@chr:
  2908                           	opt stack 0
  2909                           
  2910                           ; 2 bytes @ 0x2
  2911  000062                     	ds	1
  2912  000063                     ??_Lcd_Init:
  2913  000063                     Lcd_Set_Cursor@b:
  2914                           	opt stack 0
  2915  000063                     Lcd_Write_Char@a:
  2916                           	opt stack 0
  2917  000063                     blink@end:
  2918                           	opt stack 0
  2919  000063                     writeEEPROM_ext@data:
  2920                           	opt stack 0
  2921  000063                     ___ftpack@exp:
  2922                           	opt stack 0
  2923  000063                     I2C_Read@temp:
  2924                           	opt stack 0
  2925  000063                     ___ftge@ff2:
  2926                           	opt stack 0
  2927                           
  2928                           ; 3 bytes @ 0x3
  2929  000063                     	ds	1
  2930  000064                     ??_strchr:
  2931  000064                     ??_criaCaracteresCGRAM:
  2932  000064                     Lcd_Set_Cursor@a:
  2933                           	opt stack 0
  2934  000064                     blink@i:
  2935                           	opt stack 0
  2936  000064                     tabelaUmidade@_tipo_sensor:
  2937                           	opt stack 0
  2938  000064                     writeEEPROM_ext@adress:
  2939                           	opt stack 0
  2940  000064                     faseAtual@_fasee:
  2941                           	opt stack 0
  2942  000064                     ___ftpack@sign:
  2943                           	opt stack 0
  2944  000064                     Lcd_Write_String@a:
  2945                           	opt stack 0
  2946  000064                     acaoFlap@tempo_aguardar:
  2947                           	opt stack 0
  2948  000064                     ___wmul@product:
  2949                           	opt stack 0
  2950  000064                     ___lwdiv@quotient:
  2951                           	opt stack 0
  2952  000064                     memset@n:
  2953                           	opt stack 0
  2954  000064                     strlen@cp:
  2955                           	opt stack 0
  2956  000064                     ___lldiv@divisor:
  2957                           	opt stack 0
  2958                           
  2959                           ; 4 bytes @ 0x4
  2960  000064                     	ds	1
  2961  000065                     ??___ftpack:
  2962  000065                     ??_tabelaUmidade:
  2963  000065                     Lcd_Set_Cursor@z:
  2964                           	opt stack 0
  2965  000065                     readEEPROM_ext@adress:
  2966                           	opt stack 0
  2967  000065                     faseAtual@tp:
  2968                           	opt stack 0
  2969  000065                     setRangeValor@_var_ajt:
  2970                           	opt stack 0
  2971                           
  2972                           ; 2 bytes @ 0x5
  2973  000065                     	ds	1
  2974  000066                     ??_acaoFlap:
  2975  000066                     ??___ftge:
  2976  000066                     ?_strncmp:
  2977                           	opt stack 0
  2978  000066                     Lcd_Set_Cursor@y:
  2979                           	opt stack 0
  2980  000066                     Lcd_Write_String@i:
  2981                           	opt stack 0
  2982  000066                     readEEPROM_ext@data:
  2983                           	opt stack 0
  2984  000066                     faseAtual@tmpajt:
  2985                           	opt stack 0
  2986  000066                     ___lwdiv@counter:
  2987                           	opt stack 0
  2988  000066                     readADC@digital:
  2989                           	opt stack 0
  2990  000066                     memset@p:
  2991                           	opt stack 0
  2992  000066                     strncmp@s1:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x6
  2996  000066                     	ds	1
  2997  000067                     ?___lwmod:
  2998                           	opt stack 0
  2999  000067                     Lcd_Set_Cursor@temp:
  3000                           	opt stack 0
  3001  000067                     tabelaUmidade@_umd:
  3002                           	opt stack 0
  3003  000067                     setRangeValor@_min:
  3004                           	opt stack 0
  3005  000067                     acaoFlap@acao:
  3006                           	opt stack 0
  3007  000067                     ___lwmod@dividend:
  3008                           	opt stack 0
  3009  000067                     criaCaracteresCGRAM@character:
  3010                           	opt stack 0
  3011                           
  3012                           ; 56 bytes @ 0x7
  3013  000067                     	ds	1
  3014  000068                     ??_controle:
  3015  000068                     setRangeValor@_max:
  3016                           	opt stack 0
  3017  000068                     readADC@canal:
  3018                           	opt stack 0
  3019  000068                     atualizaLCD@line1:
  3020                           	opt stack 0
  3021  000068                     setUmidade@_umdajt:
  3022                           	opt stack 0
  3023  000068                     strncmp@s2:
  3024                           	opt stack 0
  3025  000068                     ___lldiv@quotient:
  3026                           	opt stack 0
  3027                           
  3028                           ; 4 bytes @ 0x8
  3029  000068                     	ds	1
  3030  000069                     ?___lwtoft:
  3031                           	opt stack 0
  3032  000069                     setRangeValor@end_eeprom:
  3033                           	opt stack 0
  3034  000069                     ___lwmod@divisor:
  3035                           	opt stack 0
  3036  000069                     ___lwtoft@c:
  3037                           	opt stack 0
  3038                           
  3039                           ; 2 bytes @ 0x9
  3040  000069                     	ds	1
  3041  00006A                     ??_setRangeValor:
  3042  00006A                     atualizaLCD@line2:
  3043                           	opt stack 0
  3044  00006A                     setUmidade@_tempajt:
  3045                           	opt stack 0
  3046  00006A                     strncmp@len:
  3047                           	opt stack 0
  3048                           
  3049                           ; 2 bytes @ 0xA
  3050  00006A                     	ds	1
  3051  00006B                     ___lwmod@counter:
  3052                           	opt stack 0
  3053                           
  3054                           ; 1 bytes @ 0xB
  3055  00006B                     	ds	1
  3056  00006C                     ??_strncmp:
  3057  00006C                     ?__doprnt:
  3058                           	opt stack 0
  3059  00006C                     ?___ftmul:
  3060                           	opt stack 0
  3061  00006C                     ___lldiv@counter:
  3062                           	opt stack 0
  3063  00006C                     atualizaLCD@line3:
  3064                           	opt stack 0
  3065  00006C                     setUmidade@_clima:
  3066                           	opt stack 0
  3067  00006C                     __doprnt@pb:
  3068                           	opt stack 0
  3069  00006C                     ___ftmul@f1:
  3070                           	opt stack 0
  3071                           
  3072                           ; 3 bytes @ 0xC
  3073  00006C                     	ds	1
  3074  00006D                     setRangeValor@_acao:
  3075                           	opt stack 0
  3076  00006D                     I2C_Master_Init@c:
  3077                           	opt stack 0
  3078                           
  3079                           ; 4 bytes @ 0xD
  3080  00006D                     	ds	1
  3081  00006E                     setUmidade@tp:
  3082                           	opt stack 0
  3083  00006E                     atualizaLCD@line4:
  3084                           	opt stack 0
  3085  00006E                     setRangeValor@_aux:
  3086                           	opt stack 0
  3087  00006E                     __doprnt@f:
  3088                           	opt stack 0
  3089                           
  3090                           ; 2 bytes @ 0xE
  3091  00006E                     	ds	1
  3092  00006F                     ?_strstr:
  3093                           	opt stack 0
  3094  00006F                     _setUmidade$1297:
  3095                           	opt stack 0
  3096  00006F                     strstr@s1:
  3097                           	opt stack 0
  3098  00006F                     ___ftmul@f2:
  3099                           	opt stack 0
  3100                           
  3101                           ; 3 bytes @ 0xF
  3102  00006F                     	ds	1
  3103  000070                     atualizaLCD@i:
  3104                           	opt stack 0
  3105  000070                     __doprnt@ap:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x10
  3109  000070                     	ds	1
  3110  000071                     ??_I2C_Master_Init:
  3111  000071                     _setUmidade$1298:
  3112                           	opt stack 0
  3113  000071                     strstr@s2:
  3114                           	opt stack 0
  3115                           
  3116                           ; 2 bytes @ 0x11
  3117  000071                     	ds	1
  3118  000072                     ??___ftmul:
  3119  000072                     ??__doprnt:
  3120                           
  3121                           ; 1 bytes @ 0x12
  3122  000072                     	ds	1
  3123  000073                     ??_strstr:
  3124  000073                     _setUmidade$1299:
  3125                           	opt stack 0
  3126                           
  3127                           ; 2 bytes @ 0x13
  3128  000073                     	ds	1
  3129  000074                     findBufferSerial@key:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x14
  3133  000074                     	ds	1
  3134  000075                     ___ftmul@exp:
  3135                           	opt stack 0
  3136  000075                     _setUmidade$1300:
  3137                           	opt stack 0
  3138                           
  3139                           ; 2 bytes @ 0x15
  3140  000075                     	ds	1
  3141  000076                     __doprnt@prec:
  3142                           	opt stack 0
  3143  000076                     ___ftmul@f3_as_product:
  3144                           	opt stack 0
  3145                           
  3146                           ; 3 bytes @ 0x16
  3147  000076                     	ds	1
  3148  000077                     setUmidade@_tmpajt:
  3149                           	opt stack 0
  3150  000077                     __doprnt@flag:
  3151                           	opt stack 0
  3152                           
  3153                           ; 1 bytes @ 0x17
  3154  000077                     	ds	1
  3155  000078                     setUmidade@_clim:
  3156                           	opt stack 0
  3157  000078                     __doprnt@val:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x18
  3161  000078                     	ds	1
  3162  000079                     setUmidade@_umd:
  3163                           	opt stack 0
  3164  000079                     ___ftmul@cntr:
  3165                           	opt stack 0
  3166                           
  3167                           ; 1 bytes @ 0x19
  3168  000079                     	ds	1
  3169  00007A                     ___ftmul@sign:
  3170                           	opt stack 0
  3171  00007A                     __doprnt@len:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x1A
  3175  00007A                     	ds	1
  3176  00007B                     ?___ftadd:
  3177                           	opt stack 0
  3178  00007B                     ___ftadd@f1:
  3179                           	opt stack 0
  3180                           
  3181                           ; 3 bytes @ 0x1B
  3182  00007B                     	ds	1
  3183  00007C                     __doprnt@cp:
  3184                           	opt stack 0
  3185                           
  3186                           ; 2 bytes @ 0x1C
  3187  00007C                     	ds	2
  3188  00007E                     __doprnt@width:
  3189                           	opt stack 0
  3190  00007E                     ___ftadd@f2:
  3191                           	opt stack 0
  3192                           
  3193                           ; 3 bytes @ 0x1E
  3194  00007E                     	ds	2
  3195  000080                     __doprnt@c:
  3196                           	opt stack 0
  3197                           
  3198                           ; 1 bytes @ 0x20
  3199  000080                     	ds	1
  3200  000081                     ??___ftadd:
  3201  000081                     ?_printf:
  3202                           	opt stack 0
  3203  000081                     ?_sprintf:
  3204                           	opt stack 0
  3205  000081                     printf@f:
  3206                           	opt stack 0
  3207  000081                     sprintf@wh:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x21
  3211  000081                     	ds	2
  3212  000083                     sprintf@f:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x23
  3216  000083                     	ds	1
  3217  000084                     ___ftadd@sign:
  3218                           	opt stack 0
  3219                           
  3220                           ; 1 bytes @ 0x24
  3221  000084                     	ds	1
  3222  000085                     ___ftadd@exp2:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x25
  3226  000085                     	ds	1
  3227  000086                     ___ftadd@exp1:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x26
  3231  000086                     	ds	1
  3232  000087                     ?___ftdiv:
  3233                           	opt stack 0
  3234  000087                     ___ftdiv@f1:
  3235                           	opt stack 0
  3236                           
  3237                           ; 3 bytes @ 0x27
  3238  000087                     	ds	3
  3239  00008A                     ___ftdiv@f2:
  3240                           	opt stack 0
  3241                           
  3242                           ; 3 bytes @ 0x2A
  3243  00008A                     	ds	1
  3244  00008B                     sprintf@ap:
  3245                           	opt stack 0
  3246                           
  3247                           ; 2 bytes @ 0x2B
  3248  00008B                     	ds	2
  3249  00008D                     ??___ftdiv:
  3250  00008D                     sprintf@pb:
  3251                           	opt stack 0
  3252                           
  3253                           ; 4 bytes @ 0x2D
  3254  00008D                     	ds	3
  3255  000090                     ___ftdiv@cntr:
  3256                           	opt stack 0
  3257                           
  3258                           ; 1 bytes @ 0x30
  3259  000090                     	ds	1
  3260  000091                     getStringJSON@buff:
  3261                           	opt stack 0
  3262  000091                     setKeyStartReceiveSerial@start:
  3263                           	opt stack 0
  3264  000091                     ___ftdiv@f3:
  3265                           	opt stack 0
  3266                           
  3267                           ; 3 bytes @ 0x31
  3268  000091                     	ds	2
  3269  000093                     getStringJSON@key:
  3270                           	opt stack 0
  3271                           
  3272                           ; 2 bytes @ 0x33
  3273  000093                     	ds	1
  3274  000094                     ___ftdiv@exp:
  3275                           	opt stack 0
  3276                           
  3277                           ; 1 bytes @ 0x34
  3278  000094                     	ds	1
  3279  000095                     ___ftdiv@sign:
  3280                           	opt stack 0
  3281  000095                     getStringJSON@ret:
  3282                           	opt stack 0
  3283                           
  3284                           ; 2 bytes @ 0x35
  3285  000095                     	ds	1
  3286  000096                     ?___fttol:
  3287                           	opt stack 0
  3288  000096                     ___fttol@f1:
  3289                           	opt stack 0
  3290                           
  3291                           ; 3 bytes @ 0x36
  3292  000096                     	ds	1
  3293  000097                     ??_getStringJSON:
  3294                           
  3295                           ; 1 bytes @ 0x37
  3296  000097                     	ds	2
  3297  000099                     getStringJSON@res:
  3298                           	opt stack 0
  3299                           
  3300                           ; 25 bytes @ 0x39
  3301  000099                     	ds	1
  3302  00009A                     ??___fttol:
  3303                           
  3304                           ; 1 bytes @ 0x3A
  3305  00009A                     	ds	5
  3306  00009F                     ___fttol@sign1:
  3307                           	opt stack 0
  3308  00009F                     _criaCaracteresCGRAM$1229:
  3309                           	opt stack 0
  3310                           
  3311                           ; 2 bytes @ 0x3F
  3312  00009F                     	ds	1
  3313  0000A0                     ___fttol@lval:
  3314                           	opt stack 0
  3315                           
  3316                           ; 4 bytes @ 0x40
  3317  0000A0                     	ds	1
  3318  0000A1                     criaCaracteresCGRAM@k:
  3319                           	opt stack 0
  3320                           
  3321                           ; 1 bytes @ 0x41
  3322  0000A1                     	ds	1
  3323  0000A2                     criaCaracteresCGRAM@j:
  3324                           	opt stack 0
  3325                           
  3326                           ; 1 bytes @ 0x42
  3327  0000A2                     	ds	1
  3328  0000A3                     criaCaracteresCGRAM@i:
  3329                           	opt stack 0
  3330                           
  3331                           ; 1 bytes @ 0x43
  3332  0000A3                     	ds	1
  3333  0000A4                     ___fttol@exp1:
  3334                           	opt stack 0
  3335                           
  3336                           ; 1 bytes @ 0x44
  3337  0000A4                     	ds	1
  3338  0000A5                     _getSensors$1519:
  3339                           	opt stack 0
  3340                           
  3341                           ; 3 bytes @ 0x45
  3342  0000A5                     	ds	3
  3343  0000A8                     _getSensors$1521:
  3344                           	opt stack 0
  3345                           
  3346                           ; 3 bytes @ 0x48
  3347  0000A8                     	ds	3
  3348  0000AB                     _getSensors$1517:
  3349                           	opt stack 0
  3350                           
  3351                           ; 2 bytes @ 0x4B
  3352  0000AB                     	ds	2
  3353  0000AD                     getSensors@auxx:
  3354                           	opt stack 0
  3355                           
  3356                           ; 3 bytes @ 0x4D
  3357  0000AD                     	ds	3
  3358  0000B0                     _getSensors$2520:
  3359                           	opt stack 0
  3360                           
  3361                           ; 3 bytes @ 0x50
  3362  0000B0                     	ds	2
  3363  0000B2                     getStringJSON@expected:
  3364                           	opt stack 0
  3365                           
  3366                           ; 20 bytes @ 0x52
  3367  0000B2                     	ds	1
  3368  0000B3                     getSensors@i:
  3369                           	opt stack 0
  3370                           
  3371                           ; 1 bytes @ 0x53
  3372  0000B3                     	ds	1
  3373  0000B4                     getSensors@aux:
  3374                           	opt stack 0
  3375                           
  3376                           ; 3 bytes @ 0x54
  3377  0000B4                     	ds	9
  3378  0000BD                     printf@ap:
  3379                           	opt stack 0
  3380                           
  3381                           ; 2 bytes @ 0x5D
  3382  0000BD                     	ds	2
  3383  0000BF                     printf@pb:
  3384                           	opt stack 0
  3385                           
  3386                           ; 4 bytes @ 0x5F
  3387  0000BF                     	ds	4
  3388  0000C3                     ??_enviaDadosWifi:
  3389                           
  3390                           ; 1 bytes @ 0x63
  3391  0000C3                     	ds	2
  3392  0000C5                     enviaDadosWifi@AUX:
  3393                           	opt stack 0
  3394                           
  3395                           ; 15 bytes @ 0x65
  3396  0000C5                     	ds	1
  3397  0000C6                     getStringJSON@attr:
  3398                           	opt stack 0
  3399                           
  3400                           ; 20 bytes @ 0x66
  3401  0000C6                     	ds	14
  3402  0000D4                     _enviaDadosWifi$2519:
  3403                           	opt stack 0
  3404                           
  3405                           ; 2 bytes @ 0x74
  3406  0000D4                     	ds	2
  3407  0000D6                     enviaDadosWifi@j:
  3408                           	opt stack 0
  3409                           
  3410                           ; 1 bytes @ 0x76
  3411  0000D6                     	ds	1
  3412  0000D7                     enviaDadosWifi@men:
  3413                           	opt stack 0
  3414                           
  3415                           ; 1 bytes @ 0x77
  3416  0000D7                     	ds	1
  3417  0000D8                     enviaDadosWifi@i:
  3418                           	opt stack 0
  3419                           
  3420                           ; 1 bytes @ 0x78
  3421  0000D8                     	ds	1
  3422  0000D9                     enviaDadosWifi@i_1396:
  3423                           	opt stack 0
  3424                           
  3425                           ; 1 bytes @ 0x79
  3426  0000D9                     	ds	1
  3427  0000DA                     getStringJSON@isValid:
  3428                           	opt stack 0
  3429                           
  3430                           ; 1 bytes @ 0x7A
  3431  0000DA                     	ds	1
  3432  0000DB                     getStringJSON@j:
  3433                           	opt stack 0
  3434                           
  3435                           ; 2 bytes @ 0x7B
  3436  0000DB                     	ds	2
  3437  0000DD                     getStringJSON@find:
  3438                           	opt stack 0
  3439                           
  3440                           ; 1 bytes @ 0x7D
  3441  0000DD                     	ds	1
  3442  0000DE                     getStringJSON@i:
  3443                           	opt stack 0
  3444                           
  3445                           ; 2 bytes @ 0x7E
  3446  0000DE                     	ds	2
  3447  0000E0                     alterarDadosConexaoConfigWifi@i:
  3448                           	opt stack 0
  3449                           
  3450                           ; 1 bytes @ 0x80
  3451  0000E0                     	ds	1
  3452  0000E1                     ??_main:
  3453                           
  3454                           ; 1 bytes @ 0x81
  3455  0000E1                     	ds	1
  3456  0000E2                     _main$2521:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x82
  3460  0000E2                     	ds	2
  3461  0000E4                     _main$1629:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x84
  3465  0000E4                     	ds	2
  3466  0000E6                     _main$1630:
  3467                           	opt stack 0
  3468                           
  3469                           ; 2 bytes @ 0x86
  3470  0000E6                     	ds	2
  3471  0000E8                     _main$1633:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x88
  3475  0000E8                     	ds	2
  3476  0000EA                     _main$1638:
  3477                           	opt stack 0
  3478                           
  3479                           ; 2 bytes @ 0x8A
  3480  0000EA                     	ds	2
  3481  0000EC                     _main$1645:
  3482                           	opt stack 0
  3483                           
  3484                           ; 2 bytes @ 0x8C
  3485  0000EC                     	ds	2
  3486  0000EE                     _main$1650:
  3487                           	opt stack 0
  3488                           
  3489                           ; 2 bytes @ 0x8E
  3490  0000EE                     	ds	2
  3491  0000F0                     _main$1655:
  3492                           	opt stack 0
  3493                           
  3494                           ; 2 bytes @ 0x90
  3495  0000F0                     	ds	2
  3496  0000F2                     main@i:
  3497                           	opt stack 0
  3498                           
  3499                           ; 1 bytes @ 0x92
  3500  0000F2                     	ds	1
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           postinc0	equ	0xFEE
  3506                           wreg	equ	0xFE8
  3507                           postdec1	equ	0xFE5
  3508                           fsr1l	equ	0xFE1
  3509                           
  3510                           	psect	cstackCOMRAM
  3511  000001                     __pcstackCOMRAM:
  3512                           	opt stack 0
  3513  000001                     ??i2_I2C_Wait:
  3514  000001                     ?i2_strlen:
  3515                           	opt stack 0
  3516  000001                     i2delay@x:
  3517                           	opt stack 0
  3518  000001                     i2strlen@s:
  3519                           	opt stack 0
  3520                           
  3521                           ; 2 bytes @ 0x0
  3522  000001                     	ds	1
  3523  000002                     ?i2_I2C_Read:
  3524                           	opt stack 0
  3525  000002                     i2I2C_Write@d:
  3526                           	opt stack 0
  3527  000002                     i2I2C_Read@a:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x1
  3531  000002                     	ds	1
  3532  000003                     ??i2_delay:
  3533  000003                     ??i2_strlen:
  3534                           
  3535                           ; 1 bytes @ 0x2
  3536  000003                     	ds	1
  3537  000004                     i2writeEEPROM_ext@data:
  3538                           	opt stack 0
  3539  000004                     i2I2C_Read@temp:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x3
  3543  000004                     	ds	1
  3544  000005                     i2writeEEPROM_ext@adress:
  3545                           	opt stack 0
  3546  000005                     i2strlen@cp:
  3547                           	opt stack 0
  3548                           
  3549                           ; 2 bytes @ 0x4
  3550  000005                     	ds	1
  3551  000006                     i2setRangeValor@_var_ajt:
  3552                           	opt stack 0
  3553                           
  3554                           ; 2 bytes @ 0x5
  3555  000006                     	ds	1
  3556  000007                     ??_receiveByteSerial:
  3557                           
  3558                           ; 1 bytes @ 0x6
  3559  000007                     	ds	1
  3560  000008                     i2setRangeValor@_min:
  3561                           	opt stack 0
  3562                           
  3563                           ; 1 bytes @ 0x7
  3564  000008                     	ds	1
  3565  000009                     receiveByteSerial@byte:
  3566                           	opt stack 0
  3567  000009                     i2setRangeValor@_max:
  3568                           	opt stack 0
  3569                           
  3570                           ; 1 bytes @ 0x8
  3571  000009                     	ds	1
  3572  00000A                     i2setRangeValor@end_eeprom:
  3573                           	opt stack 0
  3574                           
  3575                           ; 1 bytes @ 0x9
  3576  00000A                     	ds	1
  3577  00000B                     ??i2_setRangeValor:
  3578                           
  3579                           ; 1 bytes @ 0xA
  3580  00000B                     	ds	3
  3581  00000E                     i2setRangeValor@_acao:
  3582                           	opt stack 0
  3583                           
  3584                           ; 1 bytes @ 0xD
  3585  00000E                     	ds	1
  3586  00000F                     i2setRangeValor@_aux:
  3587                           	opt stack 0
  3588                           
  3589                           ; 2 bytes @ 0xE
  3590  00000F                     	ds	2
  3591  000011                     ??_timer:
  3592                           
  3593                           ; 1 bytes @ 0x10
  3594  000011                     	ds	7
  3595  000018                     _timer$1413:
  3596                           	opt stack 0
  3597                           
  3598                           ; 2 bytes @ 0x17
  3599  000018                     	ds	2
  3600  00001A                     _timer$1414:
  3601                           	opt stack 0
  3602                           
  3603                           ; 2 bytes @ 0x19
  3604  00001A                     	ds	2
  3605  00001C                     _timer$1415:
  3606                           	opt stack 0
  3607                           
  3608                           ; 2 bytes @ 0x1B
  3609  00001C                     	ds	2
  3610  00001E                     ??_TIMER0:
  3611                           
  3612                           ; 1 bytes @ 0x1D
  3613  00001E                     	ds	18
  3614  000030                     TIMER0@c:
  3615                           	opt stack 0
  3616                           
  3617                           ; 1 bytes @ 0x2F
  3618  000030                     	ds	1
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           postdec1	equ	0xFE5
  3626                           fsr1l	equ	0xFE1
  3627                           
  3628 ;;
  3629 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3630 ;;
  3631 ;; *************** function _main *****************
  3632 ;; Defined at:
  3633 ;;		line 33 in file "src/main.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  i               1  146[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3649 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3650 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3651 ;;Total ram usage:       18 bytes
  3652 ;; Hardware stack levels required when called:   11
  3653 ;; This function calls:
  3654 ;;		_I2C_Master_Init
  3655 ;;		_Lcd_Clear
  3656 ;;		_Lcd_Init
  3657 ;;		_UART_Init
  3658 ;;		___wmul
  3659 ;;		_alterarDadosConexaoConfigWifi
  3660 ;;		_atualizaLCD
  3661 ;;		_blink
  3662 ;;		_btPress
  3663 ;;		_climaAtual
  3664 ;;		_controle
  3665 ;;		_criaCaracteresCGRAM
  3666 ;;		_delay
  3667 ;;		_enviaDadosWifi
  3668 ;;		_faseAtual
  3669 ;;		_getSensors
  3670 ;;		_printf
  3671 ;;		_readEEPROM_ext
  3672 ;;		_setRangeValor
  3673 ;;		_setUmidade
  3674 ;;		_sprintf
  3675 ;;		_updateLeds
  3676 ;;		_writeEEPROM_ext
  3677 ;; This function is called by:
  3678 ;;		Startup code after reset
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text0
  3683  000012                     __ptext0:
  3684                           	opt stack 0
  3685  000012                     _main:
  3686                           	opt stack 20
  3687                           
  3688                           ;main.c: 36: TRISAbits.RA5 = 0;
  3689                           
  3690                           ;incstack = 0
  3691  000012  9A92               	bcf	3986,5,c	;volatile
  3692                           
  3693                           ;main.c: 37: TRISCbits.RC2 = 0;
  3694  000014  9494               	bcf	3988,2,c	;volatile
  3695                           
  3696                           ;main.c: 38: TRISEbits.RE0 = 0;
  3697  000016  9096               	bcf	3990,0,c	;volatile
  3698                           
  3699                           ;main.c: 39: TRISDbits.RD0 = 0;
  3700  000018  9095               	bcf	3989,0,c	;volatile
  3701                           
  3702                           ;main.c: 40: TRISCbits.RC1 = 0;
  3703  00001A  9294               	bcf	3988,1,c	;volatile
  3704                           
  3705                           ;main.c: 41: TRISDbits.RD1 = 0;
  3706  00001C  9295               	bcf	3989,1,c	;volatile
  3707                           
  3708                           ;main.c: 42: TRISCbits.RC0 = 1;
  3709  00001E  8094               	bsf	3988,0,c	;volatile
  3710                           
  3711                           ;main.c: 44: PORTAbits.RA5 = 0;
  3712  000020  9A80               	bcf	3968,5,c	;volatile
  3713                           
  3714                           ;main.c: 45: PORTCbits.RC2 = 0;
  3715  000022  9482               	bcf	3970,2,c	;volatile
  3716                           
  3717                           ;main.c: 46: PORTEbits.RE0 = 0;
  3718  000024  9084               	bcf	3972,0,c	;volatile
  3719                           
  3720                           ;main.c: 47: PORTDbits.RD0 = 0;
  3721  000026  9083               	bcf	3971,0,c	;volatile
  3722                           
  3723                           ;main.c: 48: PORTCbits.RC1 = 0;
  3724  000028  9282               	bcf	3970,1,c	;volatile
  3725                           
  3726                           ;main.c: 49: PORTDbits.RD1 = 0;
  3727  00002A  9283               	bcf	3971,1,c	;volatile
  3728                           
  3729                           ;main.c: 53: TRISAbits.RA4 = 0;
  3730  00002C  9892               	bcf	3986,4,c	;volatile
  3731                           
  3732                           ;main.c: 54: LATAbits.LATA4 = 0;
  3733  00002E  9889               	bcf	3977,4,c	;volatile
  3734                           
  3735                           ;main.c: 58: TRISBbits.RB5 = 0;
  3736  000030  9A93               	bcf	3987,5,c	;volatile
  3737                           
  3738                           ;main.c: 59: LATBbits.LATB5 = 0;
  3739  000032  9A8A               	bcf	3978,5,c	;volatile
  3740                           
  3741                           ;main.c: 63: TRISBbits.RB2 = 1;
  3742  000034  8493               	bsf	3987,2,c	;volatile
  3743                           
  3744                           ;main.c: 64: INTCON2bits.INTEDG2 = 0;
  3745  000036  98F1               	bcf	intcon2,4,c	;volatile
  3746                           
  3747                           ;main.c: 65: INTCON2bits.RBIP = 0;
  3748  000038  90F1               	bcf	intcon2,0,c	;volatile
  3749                           
  3750                           ;main.c: 66: INTCON3bits.INT2IE = 1;
  3751  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3752                           
  3753                           ;main.c: 69: TRISAbits.RA0 = 1;
  3754  00003C  8092               	bsf	3986,0,c	;volatile
  3755                           
  3756                           ;main.c: 70: PORTAbits.AN0 = 0;
  3757  00003E  9080               	bcf	3968,0,c	;volatile
  3758                           
  3759                           ;main.c: 71: TRISAbits.RA1 = 1;
  3760  000040  8292               	bsf	3986,1,c	;volatile
  3761                           
  3762                           ;main.c: 72: PORTAbits.AN1 = 0;
  3763  000042  9280               	bcf	3968,1,c	;volatile
  3764                           
  3765                           ;main.c: 73: TRISAbits.RA2 = 1;
  3766  000044  8492               	bsf	3986,2,c	;volatile
  3767                           
  3768                           ;main.c: 74: PORTAbits.AN2 = 0;
  3769  000046  9480               	bcf	3968,2,c	;volatile
  3770                           
  3771                           ;main.c: 79: T0CON = 0x81;
  3772  000048  0E81               	movlw	129
  3773  00004A  6ED5               	movwf	4053,c	;volatile
  3774                           
  3775                           ;main.c: 80: INTCON = 0xE4;
  3776  00004C  0EE4               	movlw	228
  3777  00004E  6EF2               	movwf	intcon,c	;volatile
  3778                           
  3779                           ;main.c: 83: ADCON0 = 0x01;
  3780  000050  0E01               	movlw	1
  3781  000052  6EC2               	movwf	4034,c	;volatile
  3782                           
  3783                           ;main.c: 84: ADCON1 = 0x0C;
  3784  000054  0E0C               	movlw	12
  3785  000056  6EC1               	movwf	4033,c	;volatile
  3786                           
  3787                           ;main.c: 85: ADCON2 = 0xB5;
  3788  000058  0EB5               	movlw	181
  3789  00005A  6EC0               	movwf	4032,c	;volatile
  3790                           
  3791                           ;main.c: 88: UART_Init();
  3792  00005C  EC22  F02E         	call	_UART_Init	;wreg free
  3793                           
  3794                           ;main.c: 89: printf("AT+RST\r\n");
  3795  000060  0E30               	movlw	low STR_83
  3796  000062  0100               	movlb	0	; () banked
  3797  000064  6F81               	movwf	printf@f& (0+255),b
  3798  000066  0E7F               	movlw	high STR_83
  3799  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3800  00006A  EC8B  F02C         	call	_printf	;wreg free
  3801                           
  3802                           ;main.c: 90: delay(200);
  3803  00006E  0E00               	movlw	0
  3804  000070  0100               	movlb	0	; () banked
  3805  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3806  000074  0EC8               	movlw	200
  3807  000076  6F60               	movwf	delay@x& (0+255),b
  3808  000078  EC6B  F02D         	call	_delay	;wreg free
  3809                           
  3810                           ;main.c: 92: Lcd_Init();
  3811  00007C  ECDA  F029         	call	_Lcd_Init	;wreg free
  3812                           
  3813                           ;main.c: 93: Lcd_Clear();
  3814  000080  EC4A  F02E         	call	_Lcd_Clear	;wreg free
  3815                           
  3816                           ;main.c: 94: criaCaracteresCGRAM();
  3817  000084  ECBD  F027         	call	_criaCaracteresCGRAM	;wreg free
  3818                           
  3819                           ;main.c: 95: I2C_Master_Init(1000000);
  3820  000088  0E40               	movlw	64
  3821  00008A  0100               	movlb	0	; () banked
  3822  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3823  00008E  0E42               	movlw	66
  3824  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3825  000092  0E0F               	movlw	15
  3826  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3827  000096  0E00               	movlw	0
  3828  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3829  00009A  EC96  F02A         	call	_I2C_Master_Init	;wreg free
  3830                           
  3831                           ;main.c: 96: delay(150);
  3832  00009E  0E00               	movlw	0
  3833  0000A0  0100               	movlb	0	; () banked
  3834  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3835  0000A4  0E96               	movlw	150
  3836  0000A6  6F60               	movwf	delay@x& (0+255),b
  3837  0000A8  EC6B  F02D         	call	_delay	;wreg free
  3838                           
  3839                           ;main.c: 99: sprintf(line1, " TECHNOW Tecnologia");
  3840  0000AC  0E91               	movlw	low _line1
  3841  0000AE  0100               	movlb	0	; () banked
  3842  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3843  0000B2  0E01               	movlw	high _line1
  3844  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3845  0000B6  0EBA               	movlw	low STR_84
  3846  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3847  0000BA  0E7C               	movlw	high STR_84
  3848  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3849  0000BE  EC07  F02C         	call	_sprintf	;wreg free
  3850                           
  3851                           ;main.c: 100: sprintf(line3, "Versao Soft.:");
  3852  0000C2  0E67               	movlw	low _line3
  3853  0000C4  0100               	movlb	0	; () banked
  3854  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3855  0000C8  0E01               	movlw	high _line3
  3856  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3857  0000CC  0E80               	movlw	low STR_85
  3858  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  3859  0000D0  0E7E               	movlw	high STR_85
  3860  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3861  0000D4  EC07  F02C         	call	_sprintf	;wreg free
  3862                           
  3863                           ;main.c: 101: sprintf(&line4[9], "%s", "Jul 15 2020");
  3864  0000D8  0E5B               	movlw	low (_line4+9)
  3865  0000DA  0100               	movlb	0	; () banked
  3866  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  3867  0000DE  0E01               	movlw	high (_line4+9)
  3868  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3869  0000E2  0E0F               	movlw	low (STR_97+7)
  3870  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  3871  0000E6  0E7F               	movlw	high (STR_97+7)
  3872  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3873  0000EA  0E8E               	movlw	low STR_70
  3874  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  3875  0000EE  0E7E               	movlw	high STR_70
  3876  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  3877  0000F2  EC07  F02C         	call	_sprintf	;wreg free
  3878                           
  3879                           ;main.c: 102: atualizaLCD(line1, line2, line3, line4);
  3880  0000F6  0E91               	movlw	low _line1
  3881  0000F8  0100               	movlb	0	; () banked
  3882  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  3883  0000FC  0E01               	movlw	high _line1
  3884  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  3885  000100  0E7C               	movlw	low _line2
  3886  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  3887  000104  0E01               	movlw	high _line2
  3888  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  3889  000108  0E67               	movlw	low _line3
  3890  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  3891  00010C  0E01               	movlw	high _line3
  3892  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  3893  000110  0E52               	movlw	low _line4
  3894  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  3895  000114  0E01               	movlw	high _line4
  3896  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  3897  000118  ECEA  F025         	call	_atualizaLCD	;wreg free
  3898                           
  3899                           ;main.c: 103: delay(300);
  3900  00011C  0E01               	movlw	1
  3901  00011E  0100               	movlb	0	; () banked
  3902  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  3903  000122  0E2C               	movlw	44
  3904  000124  6F60               	movwf	delay@x& (0+255),b
  3905  000126  EC6B  F02D         	call	_delay	;wreg free
  3906                           
  3907                           ;main.c: 104: LATBbits.LATB5 = 1;
  3908  00012A  8A8A               	bsf	3978,5,c	;volatile
  3909                           
  3910                           ;main.c: 105: delay(2450);
  3911  00012C  0E09               	movlw	9
  3912  00012E  0100               	movlb	0	; () banked
  3913  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  3914  000132  0E92               	movlw	146
  3915  000134  6F60               	movwf	delay@x& (0+255),b
  3916  000136  EC6B  F02D         	call	_delay	;wreg free
  3917                           
  3918                           ;main.c: 107: tempajt = readEEPROM_ext(1);
  3919  00013A  0E01               	movlw	1
  3920  00013C  EC91  F02B         	call	_readEEPROM_ext
  3921  000140  0100               	movlb	0	; () banked
  3922  000142  6FF4               	movwf	_tempajt& (0+255),b
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 108: umidajt = readEEPROM_ext(2);
  3926  000144  0E02               	movlw	2
  3927  000146  EC91  F02B         	call	_readEEPROM_ext
  3928  00014A  0100               	movlb	0	; () banked
  3929  00014C  6FF3               	movwf	_umidajt& (0+255),b
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;main.c: 109: trava_fase = readEEPROM_ext(3);
  3933  00014E  0E03               	movlw	3
  3934  000150  EC91  F02B         	call	_readEEPROM_ext
  3935  000154  0100               	movlb	0	; () banked
  3936  000156  6FFB               	movwf	_trava_fase& (0+255),b
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;main.c: 110: fase = readEEPROM_ext(4);
  3940  000158  0E04               	movlw	4
  3941  00015A  EC91  F02B         	call	_readEEPROM_ext
  3942  00015E  0100               	movlb	0	; () banked
  3943  000160  6FF6               	movwf	_fase& (0+255),b
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;main.c: 111: clima = readEEPROM_ext(5);
  3947  000162  0E05               	movlw	5
  3948  000164  EC91  F02B         	call	_readEEPROM_ext
  3949  000168  0100               	movlb	0	; () banked
  3950  00016A  6FF5               	movwf	_clima& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;main.c: 112: tipo_modo_trabalho = readEEPROM_ext(6);
  3954  00016C  0E06               	movlw	6
  3955  00016E  EC91  F02B         	call	_readEEPROM_ext
  3956  000172  6E59               	movwf	_tipo_modo_trabalho,c
  3957                           
  3958                           ;main.c: 113: tipo_sensor_umidade = readEEPROM_ext(7);
  3959  000174  0E07               	movlw	7
  3960  000176  EC91  F02B         	call	_readEEPROM_ext
  3961  00017A  0100               	movlb	0	; () banked
  3962  00017C  6FFA               	movwf	_tipo_sensor_umidade& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;main.c: 114: t_fim_fase1 = readEEPROM_ext(8);
  3966  00017E  0E08               	movlw	8
  3967  000180  EC91  F02B         	call	_readEEPROM_ext
  3968  000184  6E58               	movwf	_t_fim_fase1,c
  3969                           
  3970                           ;main.c: 115: t_fim_fase2 = readEEPROM_ext(9);
  3971  000186  0E09               	movlw	9
  3972  000188  EC91  F02B         	call	_readEEPROM_ext
  3973  00018C  6E57               	movwf	_t_fim_fase2,c
  3974                           
  3975                           ;main.c: 116: t_fim_fase3 = readEEPROM_ext(10);
  3976  00018E  0E0A               	movlw	10
  3977  000190  EC91  F02B         	call	_readEEPROM_ext
  3978  000194  6E56               	movwf	_t_fim_fase3,c
  3979                           
  3980                           ;main.c: 117: h_venotinha = readEEPROM_ext(11);
  3981  000196  0E0B               	movlw	11
  3982  000198  EC91  F02B         	call	_readEEPROM_ext
  3983  00019C  6E53               	movwf	_h_venotinha,c
  3984                           
  3985                           ;main.c: 118: h_abafador = readEEPROM_ext(12);
  3986  00019E  0E0C               	movlw	12
  3987  0001A0  EC91  F02B         	call	_readEEPROM_ext
  3988  0001A4  6E52               	movwf	_h_abafador,c
  3989                           
  3990                           ;main.c: 119: h_flap = readEEPROM_ext(13);
  3991  0001A6  0E0D               	movlw	13
  3992  0001A8  EC91  F02B         	call	_readEEPROM_ext
  3993  0001AC  6E51               	movwf	_h_flap,c
  3994                           
  3995                           ;main.c: 120: buzzer = readEEPROM_ext(14);
  3996  0001AE  0E0E               	movlw	14
  3997  0001B0  EC91  F02B         	call	_readEEPROM_ext
  3998  0001B4  0100               	movlb	0	; () banked
  3999  0001B6  6FFC               	movwf	_buzzer& (0+255),b
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;main.c: 121: fornalha = readEEPROM_ext(15);
  4003  0001B8  0E0F               	movlw	15
  4004  0001BA  EC91  F02B         	call	_readEEPROM_ext
  4005  0001BE  6E5A               	movwf	_fornalha,c
  4006                           
  4007                           ;main.c: 122: h_modo_seguranca = readEEPROM_ext(16);
  4008  0001C0  0E10               	movlw	16
  4009  0001C2  EC91  F02B         	call	_readEEPROM_ext
  4010  0001C6  0100               	movlb	0	; () banked
  4011  0001C8  6FF7               	movwf	_h_modo_seguranca& (0+255),b
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;main.c: 123: h_buzzer = readEEPROM_ext(17);
  4015  0001CA  0E11               	movlw	17
  4016  0001CC  EC91  F02B         	call	_readEEPROM_ext
  4017  0001D0  6E50               	movwf	_h_buzzer,c
  4018                           
  4019                           ;main.c: 124: t_flap_ligado = readEEPROM_ext(18);
  4020  0001D2  0E12               	movlw	18
  4021  0001D4  EC91  F02B         	call	_readEEPROM_ext
  4022  0001D8  6E55               	movwf	_t_flap_ligado,c
  4023                           
  4024                           ;main.c: 125: t_flap_intervalo = readEEPROM_ext(20);
  4025  0001DA  0E14               	movlw	20
  4026  0001DC  EC91  F02B         	call	_readEEPROM_ext
  4027  0001E0  6E54               	movwf	_t_flap_intervalo,c
  4028                           
  4029                           ;main.c: 126: t_buzzer_religar = readEEPROM_ext(21);
  4030  0001E2  0E15               	movlw	21
  4031  0001E4  EC91  F02B         	call	_readEEPROM_ext
  4032  0001E8  0100               	movlb	0	; () banked
  4033  0001EA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 127: t_temp_automatica = readEEPROM_ext(22);
  4037  0001EC  0E16               	movlw	22
  4038  0001EE  EC91  F02B         	call	_readEEPROM_ext
  4039  0001F2  0100               	movlb	0	; () banked
  4040  0001F4  6FF9               	movwf	_t_temp_automatica& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 128: wifi_habilita_alteracao = readEEPROM_ext(23);
  4044  0001F6  0E17               	movlw	23
  4045  0001F8  EC91  F02B         	call	_readEEPROM_ext
  4046  0001FC  6E4E               	movwf	_wifi_habilita_alteracao,c
  4047                           
  4048                           ;main.c: 129: wifi_SENHA = readEEPROM_ext(25);
  4049  0001FE  0E19               	movlw	25
  4050  000200  EC91  F02B         	call	_readEEPROM_ext
  4051  000204  0100               	movlb	0	; () banked
  4052  000206  6FE1               	movwf	??_main& (0+255),b
  4053  000208  51E1               	movf	??_main& (0+255),w,b
  4054  00020A  6E4B               	movwf	_wifi_SENHA,c
  4055  00020C  6A4C               	clrf	_wifi_SENHA+1,c
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;main.c: 130: h_subir_temp_automatica = readEEPROM_ext(27);
  4059  00020E  0E1B               	movlw	27
  4060  000210  EC91  F02B         	call	_readEEPROM_ext
  4061  000214  6E4F               	movwf	_h_subir_temp_automatica,c
  4062                           
  4063                           ;main.c: 131: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4064  000216  0E1C               	movlw	28
  4065  000218  EC91  F02B         	call	_readEEPROM_ext
  4066  00021C  0100               	movlb	0	; () banked
  4067  00021E  6FF8               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 133: char i = 0;
  4071  000220  0E00               	movlw	0
  4072  000222  6FF2               	movwf	main@i& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;main.c: 134: for (i = 0; i < 15; i++) {
  4076  000224  0E00               	movlw	0
  4077  000226  6FF2               	movwf	main@i& (0+255),b
  4078  000228                     l9443:
  4079                           
  4080                           ; BSR set to: 0
  4081  000228  0E0E               	movlw	14
  4082  00022A  65F2               	cpfsgt	main@i& (0+255),b
  4083  00022C  D001               	goto	l1274
  4084  00022E  D010               	goto	u14280
  4085  000230                     l1274:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;main.c: 135: ssid[i] = (char) readEEPROM_ext(40 + i);
  4089                           
  4090                           ; BSR set to: 0
  4091  000230  51F2               	movf	main@i& (0+255),w,b
  4092  000232  0D01               	mullw	1
  4093  000234  0EC9               	movlw	low _ssid
  4094  000236  24F3               	addwf	prodl,w,c
  4095  000238  6ED9               	movwf	fsr2l,c
  4096  00023A  0E01               	movlw	high _ssid
  4097  00023C  20F4               	addwfc	prodh,w,c
  4098  00023E  6EDA               	movwf	fsr2h,c
  4099  000240  51F2               	movf	main@i& (0+255),w,b
  4100  000242  0F28               	addlw	40
  4101  000244  EC91  F02B         	call	_readEEPROM_ext
  4102  000248  6EDF               	movwf	indf2,c
  4103  00024A  0100               	movlb	0	; () banked
  4104  00024C  2BF2               	incf	main@i& (0+255),f,b
  4105  00024E  D7EC               	goto	l9443
  4106  000250                     u14280:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;main.c: 136: }
  4110                           ;main.c: 137: for (i = 0; i < 15; i++) {
  4111                           
  4112                           ; BSR set to: 0
  4113  000250  0E00               	movlw	0
  4114  000252  6FF2               	movwf	main@i& (0+255),b
  4115  000254                     l9455:
  4116                           
  4117                           ; BSR set to: 0
  4118  000254  0E0E               	movlw	14
  4119  000256  65F2               	cpfsgt	main@i& (0+255),b
  4120  000258  D001               	goto	l1276
  4121  00025A  D010               	goto	u14300
  4122  00025C                     l1276:
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;main.c: 138: senha[i] = (char) readEEPROM_ext(60 + i);
  4126                           
  4127                           ; BSR set to: 0
  4128  00025C  51F2               	movf	main@i& (0+255),w,b
  4129  00025E  0D01               	mullw	1
  4130  000260  0EBA               	movlw	low _senha
  4131  000262  24F3               	addwf	prodl,w,c
  4132  000264  6ED9               	movwf	fsr2l,c
  4133  000266  0E01               	movlw	high _senha
  4134  000268  20F4               	addwfc	prodh,w,c
  4135  00026A  6EDA               	movwf	fsr2h,c
  4136  00026C  51F2               	movf	main@i& (0+255),w,b
  4137  00026E  0F3C               	addlw	60
  4138  000270  EC91  F02B         	call	_readEEPROM_ext
  4139  000274  6EDF               	movwf	indf2,c
  4140  000276  0100               	movlb	0	; () banked
  4141  000278  2BF2               	incf	main@i& (0+255),f,b
  4142  00027A  D7EC               	goto	l9455
  4143  00027C                     u14300:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;main.c: 139: }
  4147                           ;main.c: 140: for (i = 0; i < 20; i++) {
  4148                           
  4149                           ; BSR set to: 0
  4150  00027C  0E00               	movlw	0
  4151  00027E  6FF2               	movwf	main@i& (0+255),b
  4152  000280                     l9467:
  4153                           
  4154                           ; BSR set to: 0
  4155  000280  0E13               	movlw	19
  4156  000282  65F2               	cpfsgt	main@i& (0+255),b
  4157  000284  D001               	goto	l1278
  4158  000286  D010               	goto	u14320
  4159  000288                     l1278:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;main.c: 141: ipServer[i] = (char) readEEPROM_ext(80 + i);
  4163                           
  4164                           ; BSR set to: 0
  4165  000288  51F2               	movf	main@i& (0+255),w,b
  4166  00028A  0D01               	mullw	1
  4167  00028C  0EA6               	movlw	low _ipServer
  4168  00028E  24F3               	addwf	prodl,w,c
  4169  000290  6ED9               	movwf	fsr2l,c
  4170  000292  0E01               	movlw	high _ipServer
  4171  000294  20F4               	addwfc	prodh,w,c
  4172  000296  6EDA               	movwf	fsr2h,c
  4173  000298  51F2               	movf	main@i& (0+255),w,b
  4174  00029A  0F50               	addlw	80
  4175  00029C  EC91  F02B         	call	_readEEPROM_ext
  4176  0002A0  6EDF               	movwf	indf2,c
  4177  0002A2  0100               	movlb	0	; () banked
  4178  0002A4  2BF2               	incf	main@i& (0+255),f,b
  4179  0002A6  D7EC               	goto	l9467
  4180  0002A8                     u14320:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;main.c: 142: }
  4184                           ;main.c: 143: for (i = 0; i < 4; i++) {
  4185                           
  4186                           ; BSR set to: 0
  4187  0002A8  0E00               	movlw	0
  4188  0002AA  6FF2               	movwf	main@i& (0+255),b
  4189  0002AC                     l9479:
  4190                           
  4191                           ; BSR set to: 0
  4192  0002AC  0E03               	movlw	3
  4193  0002AE  65F2               	cpfsgt	main@i& (0+255),b
  4194  0002B0  D001               	goto	l1280
  4195  0002B2  D010               	goto	u14340
  4196  0002B4                     l1280:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;main.c: 144: portServer[i] = (char) readEEPROM_ext(105 + i);
  4200                           
  4201                           ; BSR set to: 0
  4202  0002B4  51F2               	movf	main@i& (0+255),w,b
  4203  0002B6  0D01               	mullw	1
  4204  0002B8  0EE2               	movlw	low _portServer
  4205  0002BA  24F3               	addwf	prodl,w,c
  4206  0002BC  6ED9               	movwf	fsr2l,c
  4207  0002BE  0E01               	movlw	high _portServer
  4208  0002C0  20F4               	addwfc	prodh,w,c
  4209  0002C2  6EDA               	movwf	fsr2h,c
  4210  0002C4  51F2               	movf	main@i& (0+255),w,b
  4211  0002C6  0F69               	addlw	105
  4212  0002C8  EC91  F02B         	call	_readEEPROM_ext
  4213  0002CC  6EDF               	movwf	indf2,c
  4214  0002CE  0100               	movlb	0	; () banked
  4215  0002D0  2BF2               	incf	main@i& (0+255),f,b
  4216  0002D2  D7EC               	goto	l9479
  4217  0002D4                     u14340:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 145: }
  4221                           ;main.c: 147: i = readEEPROM_ext(30);
  4222                           
  4223                           ; BSR set to: 0
  4224  0002D4  0E1E               	movlw	30
  4225  0002D6  EC91  F02B         	call	_readEEPROM_ext
  4226  0002DA  0100               	movlb	0	; () banked
  4227  0002DC  6FF2               	movwf	main@i& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;main.c: 148: if (i != 187) {
  4231  0002DE  0EBB               	movlw	187
  4232  0002E0  19F2               	xorwf	main@i& (0+255),w,b
  4233  0002E2  B4D8               	btfsc	status,2,c
  4234  0002E4  D02C               	goto	l1285
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;main.c: 149: writeEEPROM_ext(30, 187);
  4238  0002E6  0EBB               	movlw	187
  4239  0002E8  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4240  0002EA  0E1E               	movlw	30
  4241  0002EC  EC4B  F02C         	call	_writeEEPROM_ext
  4242  0002F0                     l1283:
  4243  0002F0  0004               	clrwdt		;# 
  4244                           
  4245                           ;main.c: 152: sprintf(line4, "ERRO EEPROM");
  4246  0002F2  0E52               	movlw	low _line4
  4247  0002F4  0100               	movlb	0	; () banked
  4248  0002F6  6F81               	movwf	sprintf@wh& (0+255),b
  4249  0002F8  0E01               	movlw	high _line4
  4250  0002FA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4251  0002FC  0E9A               	movlw	low STR_88
  4252  0002FE  6F83               	movwf	sprintf@f& (0+255),b
  4253  000300  0E7E               	movlw	high STR_88
  4254  000302  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4255  000304  EC07  F02C         	call	_sprintf	;wreg free
  4256                           
  4257                           ;main.c: 153: atualizaLCD(line1, line2, line3, line4);
  4258  000308  0E91               	movlw	low _line1
  4259  00030A  0100               	movlb	0	; () banked
  4260  00030C  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4261  00030E  0E01               	movlw	high _line1
  4262  000310  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4263  000312  0E7C               	movlw	low _line2
  4264  000314  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4265  000316  0E01               	movlw	high _line2
  4266  000318  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4267  00031A  0E67               	movlw	low _line3
  4268  00031C  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4269  00031E  0E01               	movlw	high _line3
  4270  000320  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4271  000322  0E52               	movlw	low _line4
  4272  000324  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4273  000326  0E01               	movlw	high _line4
  4274  000328  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4275  00032A  ECEA  F025         	call	_atualizaLCD	;wreg free
  4276                           
  4277                           ;main.c: 154: delay(3000);
  4278  00032E  0E0B               	movlw	11
  4279  000330  0100               	movlb	0	; () banked
  4280  000332  6F61               	movwf	(delay@x+1)& (0+255),b
  4281  000334  0EB8               	movlw	184
  4282  000336  6F60               	movwf	delay@x& (0+255),b
  4283  000338  EC6B  F02D         	call	_delay	;wreg free
  4284  00033C  D7D9               	goto	l1283
  4285  00033E                     l1285:
  4286                           
  4287                           ;main.c: 165: if (RCSTAbits.OERR) {
  4288                           
  4289                           ;main.c: 155: }
  4290                           ;main.c: 156: }
  4291                           ;main.c: 158: while (1) {
  4292  00033E  A2AB               	btfss	4011,1,c	;volatile
  4293  000340  D002               	goto	l1287
  4294                           
  4295                           ;main.c: 166: RCSTAbits.CREN = 0;
  4296  000342  98AB               	bcf	4011,4,c	;volatile
  4297                           
  4298                           ;main.c: 167: RCSTAbits.CREN = 1;
  4299  000344  88AB               	bsf	4011,4,c	;volatile
  4300  000346                     l1287:
  4301  000346  0004               	clrwdt		;# 
  4302                           
  4303                           ;main.c: 171: getSensors();
  4304  000348  EC31  F01B         	call	_getSensors	;wreg free
  4305                           
  4306                           ;main.c: 172: controle();
  4307  00034C  ECBD  F01D         	call	_controle	;wreg free
  4308                           
  4309                           ;main.c: 175: if (tipo_modo_trabalho == 1) {
  4310  000350  0459               	decf	_tipo_modo_trabalho,w,c
  4311  000352  A4D8               	btfss	status,2,c
  4312  000354  D010               	goto	l1288
  4313                           
  4314                           ;main.c: 176: setUmidade('A', &umidajt, &tempajt, &clima);
  4315  000356  0EF3               	movlw	low _umidajt
  4316  000358  0100               	movlb	0	; () banked
  4317  00035A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4318  00035C  0E00               	movlw	high _umidajt
  4319  00035E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4320  000360  0EF4               	movlw	low _tempajt
  4321  000362  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4322  000364  0E00               	movlw	high _tempajt
  4323  000366  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4324  000368  0EF5               	movlw	low _clima
  4325  00036A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4326  00036C  0E00               	movlw	high _clima
  4327  00036E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4328  000370  0E41               	movlw	65
  4329  000372  EC80  F023         	call	_setUmidade
  4330  000376                     l1288:
  4331                           
  4332                           ;main.c: 177: }
  4333                           ;main.c: 179: faseAtual('F', &fase, &tempajt);
  4334  000376  0EF6               	movlw	low _fase
  4335  000378  0100               	movlb	0	; () banked
  4336  00037A  6F60               	movwf	faseAtual@_fase& (0+255),b
  4337  00037C  0E00               	movlw	high _fase
  4338  00037E  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4339  000380  0EF4               	movlw	low _tempajt
  4340  000382  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4341  000384  0E00               	movlw	high _tempajt
  4342  000386  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4343  000388  0E46               	movlw	70
  4344  00038A  ECE1  F022         	call	_faseAtual
  4345                           
  4346                           ;main.c: 181: if (menu != 10) {
  4347  00038E  0E0A               	movlw	10
  4348  000390  0100               	movlb	0	; () banked
  4349  000392  19FD               	xorwf	_menu& (0+255),w,b
  4350  000394  A4D8               	btfss	status,2,c
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 182: enviaDadosWifi();
  4354  000396  ECE3  F015         	call	_enviaDadosWifi	;wreg free
  4355                           
  4356                           ;main.c: 183: }
  4357                           ;main.c: 187: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4358  00039A  0E04               	movlw	4
  4359  00039C  EC14  F02E         	call	_btPress
  4360  0003A0  0900               	iorlw	0
  4361  0003A2  B4D8               	btfsc	status,2,c
  4362  0003A4  D351               	goto	l1291
  4363  0003A6  0E5A               	movlw	low _fornalha
  4364  0003A8  0100               	movlb	0	; () banked
  4365  0003AA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4366  0003AC  0E00               	movlw	high _fornalha
  4367  0003AE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4368  0003B0  0E00               	movlw	0
  4369  0003B2  6F67               	movwf	setRangeValor@_min& (0+255),b
  4370  0003B4  0E01               	movlw	1
  4371  0003B6  6F68               	movwf	setRangeValor@_max& (0+255),b
  4372  0003B8  0E0F               	movlw	15
  4373  0003BA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4374  0003BC  0E2B               	movlw	43
  4375  0003BE  EC13  F028         	call	_setRangeValor
  4376                           
  4377                           ;main.c: 189: switch (menu) {
  4378  0003C2  D342               	goto	l1291
  4379  0003C4                     
  4380                           ;main.c: 191: sprintf(&line1[6], "|Sensor|Ajuste");
  4381  0003C4  0E97               	movlw	low (_line1+6)
  4382  0003C6  0100               	movlb	0	; () banked
  4383  0003C8  6F81               	movwf	sprintf@wh& (0+255),b
  4384  0003CA  0E01               	movlw	high (_line1+6)
  4385  0003CC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4386  0003CE  0E1D               	movlw	low STR_89
  4387  0003D0  6F83               	movwf	sprintf@f& (0+255),b
  4388  0003D2  0E7E               	movlw	high STR_89
  4389  0003D4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4390  0003D6  EC07  F02C         	call	_sprintf	;wreg free
  4391                           
  4392                           ;main.c: 192: line1[0] = 0x02;
  4393  0003DA  0E02               	movlw	2
  4394  0003DC  0101               	movlb	1	; () banked
  4395  0003DE  6F91               	movwf	_line1& (0+255),b
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;main.c: 193: if (!buzzer) blink(line1, 1, 2);
  4399  0003E0  0100               	movlb	0	; () banked
  4400  0003E2  51FC               	movf	_buzzer& (0+255),w,b
  4401  0003E4  A4D8               	btfss	status,2,c
  4402  0003E6  D00A               	goto	l1293
  4403                           
  4404                           ; BSR set to: 0
  4405  0003E8  0E91               	movlw	low _line1
  4406  0003EA  6F60               	movwf	blink@line& (0+255),b
  4407  0003EC  0E01               	movlw	high _line1
  4408  0003EE  6F61               	movwf	(blink@line+1)& (0+255),b
  4409  0003F0  0E01               	movlw	1
  4410  0003F2  6F62               	movwf	blink@start& (0+255),b
  4411  0003F4  0E02               	movlw	2
  4412  0003F6  6F63               	movwf	blink@end& (0+255),b
  4413  0003F8  ECDC  F02C         	call	_blink	;wreg free
  4414  0003FC                     l1293:
  4415                           
  4416                           ;main.c: 194: line1[2] = 'F';
  4417  0003FC  0E46               	movlw	70
  4418  0003FE  0101               	movlb	1	; () banked
  4419  000400  6F93               	movwf	(_line1+2)& (0+255),b
  4420                           
  4421                           ; BSR set to: 1
  4422                           ;main.c: 195: if (!fornalha) blink(line1, 2, 3);
  4423  000402  505A               	movf	_fornalha,w,c
  4424  000404  A4D8               	btfss	status,2,c
  4425  000406  D00B               	goto	l1294
  4426                           
  4427                           ; BSR set to: 1
  4428  000408  0E91               	movlw	low _line1
  4429  00040A  0100               	movlb	0	; () banked
  4430  00040C  6F60               	movwf	blink@line& (0+255),b
  4431  00040E  0E01               	movlw	high _line1
  4432  000410  6F61               	movwf	(blink@line+1)& (0+255),b
  4433  000412  0E02               	movlw	2
  4434  000414  6F62               	movwf	blink@start& (0+255),b
  4435  000416  0E03               	movlw	3
  4436  000418  6F63               	movwf	blink@end& (0+255),b
  4437  00041A  ECDC  F02C         	call	_blink	;wreg free
  4438  00041E                     l1294:
  4439                           
  4440                           ;main.c: 196: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4441  00041E  5049               	movf	_wifi_conectado,w,c
  4442  000420  A4D8               	btfss	status,2,c
  4443  000422  D005               	goto	l1296
  4444  000424  0E00               	movlw	0
  4445  000426  0100               	movlb	0	; () banked
  4446  000428  6FE5               	movwf	(_main$1629+1)& (0+255),b
  4447  00042A  0E20               	movlw	32
  4448  00042C  D004               	goto	L1
  4449  00042E                     l1296:
  4450                           
  4451                           ; BSR set to: 0
  4452  00042E  0E00               	movlw	0
  4453  000430  0100               	movlb	0	; () banked
  4454  000432  6FE5               	movwf	(_main$1629+1)& (0+255),b
  4455  000434  0E05               	movlw	5
  4456  000436                     L1:
  4457  000436  6FE4               	movwf	_main$1629& (0+255),b
  4458                           
  4459                           ; BSR set to: 0
  4460                           
  4461                           ; BSR set to: 0
  4462  000438  C0E4  F195         	movff	_main$1629,_line1+4
  4463                           
  4464                           ;main.c: 197: line1[5] = (trava_fase) ? 0x01 : ' ';
  4465  00043C  51FB               	movf	_trava_fase& (0+255),w,b
  4466  00043E  A4D8               	btfss	status,2,c
  4467  000440  D004               	goto	l1300
  4468                           
  4469                           ; BSR set to: 0
  4470  000442  0E00               	movlw	0
  4471  000444  6FE7               	movwf	(_main$1630+1)& (0+255),b
  4472  000446  0E20               	movlw	32
  4473  000448  D003               	goto	L2
  4474  00044A                     l1300:
  4475                           
  4476                           ; BSR set to: 0
  4477                           
  4478                           ; BSR set to: 0
  4479  00044A  0E00               	movlw	0
  4480  00044C  6FE7               	movwf	(_main$1630+1)& (0+255),b
  4481  00044E  0E01               	movlw	1
  4482  000450                     L2:
  4483  000450  6FE6               	movwf	_main$1630& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           
  4487                           ; BSR set to: 0
  4488  000452  C0E6  F196         	movff	_main$1630,_line1+5
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;main.c: 198: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4492  000456  0E7C               	movlw	low _line2
  4493  000458  6F81               	movwf	sprintf@wh& (0+255),b
  4494  00045A  0E01               	movlw	high _line2
  4495  00045C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4496  00045E  0E2D               	movlw	low STR_90
  4497  000460  6F83               	movwf	sprintf@f& (0+255),b
  4498  000462  0E7C               	movlw	high STR_90
  4499  000464  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4500  000466  C0FE  F085         	movff	_temp,?_sprintf+4
  4501  00046A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4502  00046C  C0F4  F087         	movff	_tempajt,?_sprintf+6
  4503  000470  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4504  000472  EC07  F02C         	call	_sprintf	;wreg free
  4505                           
  4506                           ;main.c: 199: line2[5] = 0x04;
  4507  000476  0E04               	movlw	4
  4508  000478  0101               	movlb	1	; () banked
  4509  00047A  6F81               	movwf	(_line2+5)& (0+255),b
  4510                           
  4511                           ; BSR set to: 1
  4512                           ;main.c: 200: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4513  00047C  0100               	movlb	0	; () banked
  4514  00047E  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4515  000480  A4D8               	btfss	status,2,c
  4516  000482  D004               	goto	l1304
  4517                           
  4518                           ; BSR set to: 0
  4519  000484  0E00               	movlw	0
  4520  000486  6FE9               	movwf	(_main$1633+1)& (0+255),b
  4521  000488  0E46               	movlw	70
  4522  00048A  D003               	goto	L3
  4523  00048C                     l1304:
  4524                           
  4525                           ; BSR set to: 0
  4526                           
  4527                           ; BSR set to: 0
  4528  00048C  0E00               	movlw	0
  4529  00048E  6FE9               	movwf	(_main$1633+1)& (0+255),b
  4530  000490  0E25               	movlw	37
  4531  000492                     L3:
  4532  000492  6FE8               	movwf	_main$1633& (0+255),b
  4533                           
  4534                           ; BSR set to: 0
  4535                           
  4536                           ; BSR set to: 0
  4537  000494  0E67               	movlw	low _line3
  4538  000496  6F81               	movwf	sprintf@wh& (0+255),b
  4539  000498  0E01               	movlw	high _line3
  4540  00049A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4541  00049C  0ED8               	movlw	low STR_91
  4542  00049E  6F83               	movwf	sprintf@f& (0+255),b
  4543  0004A0  0E7B               	movlw	high STR_91
  4544  0004A2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4545  0004A4  C05D  F085         	movff	_umid,?_sprintf+4
  4546  0004A8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4547  0004AA  C0F3  F087         	movff	_umidajt,?_sprintf+6
  4548  0004AE  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4549  0004B0  C0E8  F089         	movff	_main$1633,?_sprintf+8
  4550  0004B4  C0E9  F08A         	movff	_main$1633+1,?_sprintf+9
  4551  0004B8  EC07  F02C         	call	_sprintf	;wreg free
  4552                           
  4553                           ;main.c: 201: line3[5] = 0x03;
  4554  0004BC  0E03               	movlw	3
  4555  0004BE  0101               	movlb	1	; () banked
  4556  0004C0  6F6C               	movwf	(_line3+5)& (0+255),b
  4557                           
  4558                           ;main.c: 202: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4559  0004C2  0E52               	movlw	low _line4
  4560  0004C4  0100               	movlb	0	; () banked
  4561  0004C6  6F81               	movwf	sprintf@wh& (0+255),b
  4562  0004C8  0E01               	movlw	high _line4
  4563  0004CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4564  0004CC  0E1C               	movlw	low STR_92
  4565  0004CE  6F83               	movwf	sprintf@f& (0+255),b
  4566  0004D0  0E7F               	movlw	high STR_92
  4567  0004D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4568  0004D4  0EF6               	movlw	low _fase
  4569  0004D6  6F60               	movwf	faseAtual@_fase& (0+255),b
  4570  0004D8  0E00               	movlw	high _fase
  4571  0004DA  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4572  0004DC  0EF4               	movlw	low _tempajt
  4573  0004DE  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4574  0004E0  0E00               	movlw	high _tempajt
  4575  0004E2  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4576  0004E4  0E3F               	movlw	63
  4577  0004E6  ECE1  F022         	call	_faseAtual
  4578  0004EA  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4579  0004EE  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4580  0004F2  EC07  F02C         	call	_sprintf	;wreg free
  4581                           
  4582                           ;main.c: 203: if (!f_falta_energia) {
  4583  0004F6  505E               	movf	_f_falta_energia,w,c
  4584  0004F8  A4D8               	btfss	status,2,c
  4585  0004FA  D00B               	goto	l1307
  4586                           
  4587                           ;main.c: 204: sprintf(line4, " *FALTA DE ENERGIA*");
  4588  0004FC  0E52               	movlw	low _line4
  4589  0004FE  0100               	movlb	0	; () banked
  4590  000500  6F81               	movwf	sprintf@wh& (0+255),b
  4591  000502  0E01               	movlw	high _line4
  4592  000504  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4593  000506  0E56               	movlw	low STR_93
  4594  000508  6F83               	movwf	sprintf@f& (0+255),b
  4595  00050A  0E7C               	movlw	high STR_93
  4596  00050C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4597  00050E  EC07  F02C         	call	_sprintf	;wreg free
  4598  000512                     l1307:
  4599                           
  4600                           ;main.c: 205: };
  4601                           ;main.c: 207: if (btPress(8)) {
  4602  000512  0E08               	movlw	8
  4603  000514  EC14  F02E         	call	_btPress
  4604  000518  0900               	iorlw	0
  4605  00051A  B4D8               	btfsc	status,2,c
  4606  00051C  D005               	goto	l1308
  4607                           
  4608                           ;main.c: 208: menu = 1;
  4609  00051E  0E01               	movlw	1
  4610  000520  0100               	movlb	0	; () banked
  4611  000522  6FFD               	movwf	_menu& (0+255),b
  4612                           
  4613                           ;main.c: 209: opcaomenu = 1;
  4614  000524  0E01               	movlw	1
  4615  000526  6E45               	movwf	_opcaomenu,c
  4616  000528                     l1308:
  4617                           
  4618                           ;main.c: 210: }
  4619                           ;main.c: 211: if (btPress(2)) {
  4620                           
  4621                           ; BSR set to: 0
  4622  000528  0E02               	movlw	2
  4623  00052A  EC14  F02E         	call	_btPress
  4624  00052E  0900               	iorlw	0
  4625  000530  A4D8               	btfss	status,2,c
  4626                           
  4627                           ;main.c: 212: ajuste_parametro++;
  4628  000532  2A44               	incf	_ajuste_parametro,f,c
  4629                           
  4630                           ;main.c: 213: }
  4631                           ;main.c: 214: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4632  000534  0E01               	movlw	1
  4633  000536  EC14  F02E         	call	_btPress
  4634  00053A  0900               	iorlw	0
  4635  00053C  B4D8               	btfsc	status,2,c
  4636  00053E  D00E               	goto	l1310
  4637  000540  0EFC               	movlw	low _buzzer
  4638  000542  0100               	movlb	0	; () banked
  4639  000544  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4640  000546  0E00               	movlw	high _buzzer
  4641  000548  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4642  00054A  0E01               	movlw	1
  4643  00054C  6F67               	movwf	setRangeValor@_min& (0+255),b
  4644  00054E  0E01               	movlw	1
  4645  000550  6F68               	movwf	setRangeValor@_max& (0+255),b
  4646  000552  0E0E               	movlw	14
  4647  000554  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4648  000556  0E2B               	movlw	43
  4649  000558  EC13  F028         	call	_setRangeValor
  4650  00055C                     l1310:
  4651                           
  4652                           ;main.c: 215: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4653  00055C  0E10               	movlw	16
  4654  00055E  EC14  F02E         	call	_btPress
  4655  000562  0900               	iorlw	0
  4656  000564  B4D8               	btfsc	status,2,c
  4657  000566  D081               	goto	l1312
  4658  000568  0EFC               	movlw	low _buzzer
  4659  00056A  0100               	movlb	0	; () banked
  4660  00056C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4661  00056E  0E00               	movlw	high _buzzer
  4662  000570  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4663  000572  0E00               	movlw	0
  4664  000574  6F67               	movwf	setRangeValor@_min& (0+255),b
  4665  000576  0E00               	movlw	0
  4666  000578  6F68               	movwf	setRangeValor@_max& (0+255),b
  4667  00057A  0E0E               	movlw	14
  4668  00057C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4669  00057E  0E2B               	movlw	43
  4670  000580  EC13  F028         	call	_setRangeValor
  4671                           
  4672                           ;main.c: 218: switch (ajuste_parametro) {
  4673  000584  D072               	goto	l1312
  4674  000586                     
  4675                           ;main.c: 220: blink(line2, 15, 20);
  4676  000586  0E7C               	movlw	low _line2
  4677  000588  0100               	movlb	0	; () banked
  4678  00058A  6F60               	movwf	blink@line& (0+255),b
  4679  00058C  0E01               	movlw	high _line2
  4680  00058E  6F61               	movwf	(blink@line+1)& (0+255),b
  4681  000590  0E0F               	movlw	15
  4682  000592  6F62               	movwf	blink@start& (0+255),b
  4683  000594  0E14               	movlw	20
  4684  000596  6F63               	movwf	blink@end& (0+255),b
  4685  000598  ECDC  F02C         	call	_blink	;wreg free
  4686                           
  4687                           ;main.c: 221: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4688  00059C  0E40               	movlw	64
  4689  00059E  EC14  F02E         	call	_btPress
  4690  0005A2  0900               	iorlw	0
  4691  0005A4  B4D8               	btfsc	status,2,c
  4692  0005A6  D00E               	goto	l1314
  4693  0005A8  0EF4               	movlw	low _tempajt
  4694  0005AA  0100               	movlb	0	; () banked
  4695  0005AC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4696  0005AE  0E00               	movlw	high _tempajt
  4697  0005B0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4698  0005B2  0E55               	movlw	85
  4699  0005B4  6F67               	movwf	setRangeValor@_min& (0+255),b
  4700  0005B6  0EA0               	movlw	160
  4701  0005B8  6F68               	movwf	setRangeValor@_max& (0+255),b
  4702  0005BA  0E01               	movlw	1
  4703  0005BC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4704  0005BE  0E2B               	movlw	43
  4705  0005C0  EC13  F028         	call	_setRangeValor
  4706  0005C4                     l1314:
  4707                           
  4708                           ;main.c: 222: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4709  0005C4  0E20               	movlw	32
  4710  0005C6  EC14  F02E         	call	_btPress
  4711  0005CA  0900               	iorlw	0
  4712  0005CC  B4D8               	btfsc	status,2,c
  4713  0005CE  D25D               	goto	l1323
  4714  0005D0  0EF4               	movlw	low _tempajt
  4715  0005D2  0100               	movlb	0	; () banked
  4716  0005D4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4717  0005D6  0E00               	movlw	high _tempajt
  4718  0005D8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4719  0005DA  0E55               	movlw	85
  4720  0005DC  6F67               	movwf	setRangeValor@_min& (0+255),b
  4721  0005DE  0EA0               	movlw	160
  4722  0005E0  6F68               	movwf	setRangeValor@_max& (0+255),b
  4723  0005E2  0E01               	movlw	1
  4724  0005E4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4725  0005E6  0E2D               	movlw	45
  4726  0005E8  EC13  F028         	call	_setRangeValor
  4727                           
  4728                           ;main.c: 223: break;
  4729  0005EC  D24E               	goto	l1323
  4730  0005EE                     
  4731                           ;main.c: 225: if (tipo_modo_trabalho == 0) {
  4732  0005EE  5059               	movf	_tipo_modo_trabalho,w,c
  4733  0005F0  A4D8               	btfss	status,2,c
  4734  0005F2  D038               	goto	l1318
  4735                           
  4736                           ;main.c: 226: blink(line3, 15, 20);
  4737  0005F4  0E67               	movlw	low _line3
  4738  0005F6  0100               	movlb	0	; () banked
  4739  0005F8  6F60               	movwf	blink@line& (0+255),b
  4740  0005FA  0E01               	movlw	high _line3
  4741  0005FC  6F61               	movwf	(blink@line+1)& (0+255),b
  4742  0005FE  0E0F               	movlw	15
  4743  000600  6F62               	movwf	blink@start& (0+255),b
  4744  000602  0E14               	movlw	20
  4745  000604  6F63               	movwf	blink@end& (0+255),b
  4746  000606  ECDC  F02C         	call	_blink	;wreg free
  4747                           
  4748                           ;main.c: 227: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4749  00060A  0E40               	movlw	64
  4750  00060C  EC14  F02E         	call	_btPress
  4751  000610  0900               	iorlw	0
  4752  000612  B4D8               	btfsc	status,2,c
  4753  000614  D010               	goto	l1319
  4754  000616  0EF3               	movlw	low _umidajt
  4755  000618  0100               	movlb	0	; () banked
  4756  00061A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4757  00061C  0E00               	movlw	high _umidajt
  4758  00061E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4759  000620  0EF4               	movlw	low _tempajt
  4760  000622  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4761  000624  0E00               	movlw	high _tempajt
  4762  000626  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4763  000628  0EF5               	movlw	low _clima
  4764  00062A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4765  00062C  0E00               	movlw	high _clima
  4766  00062E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4767  000630  0E2B               	movlw	43
  4768  000632  EC80  F023         	call	_setUmidade
  4769  000636                     l1319:
  4770                           
  4771                           ;main.c: 228: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4772  000636  0E20               	movlw	32
  4773  000638  EC14  F02E         	call	_btPress
  4774  00063C  0900               	iorlw	0
  4775  00063E  B4D8               	btfsc	status,2,c
  4776  000640  D224               	goto	l1323
  4777  000642  0EF3               	movlw	low _umidajt
  4778  000644  0100               	movlb	0	; () banked
  4779  000646  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4780  000648  0E00               	movlw	high _umidajt
  4781  00064A  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4782  00064C  0EF4               	movlw	low _tempajt
  4783  00064E  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4784  000650  0E00               	movlw	high _tempajt
  4785  000652  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4786  000654  0EF5               	movlw	low _clima
  4787  000656  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4788  000658  0E00               	movlw	high _clima
  4789  00065A  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4790  00065C  0E2D               	movlw	45
  4791  00065E  EC80  F023         	call	_setUmidade
  4792                           
  4793                           ;main.c: 229: } else {
  4794  000662  D213               	goto	l1323
  4795  000664                     l1318:
  4796                           
  4797                           ;main.c: 234: ajuste_parametro = 0;
  4798                           
  4799                           ;main.c: 233: default:
  4800                           
  4801                           ;main.c: 231: }
  4802                           ;main.c: 232: break;
  4803                           
  4804                           ;main.c: 230: ajuste_parametro = 0;
  4805  000664  0E00               	movlw	0
  4806  000666  6E44               	movwf	_ajuste_parametro,c
  4807                           
  4808                           ;main.c: 235: }
  4809  000668  D210               	goto	l1323
  4810  00066A                     l1312:
  4811  00066A  5044               	movf	_ajuste_parametro,w,c
  4812                           
  4813                           ; Switch size 1, requested type "space"
  4814                           ; Number of cases is 2, Range of values is 1 to 2
  4815                           ; switch strategies available:
  4816                           ; Name         Instructions Cycles
  4817                           ; simple_byte            7     4 (average)
  4818                           ;	Chosen strategy is simple_byte
  4819  00066C  0A01               	xorlw	1	; case 1
  4820  00066E  B4D8               	btfsc	status,2,c
  4821  000670  D78A               	goto	l1313
  4822  000672  0A03               	xorlw	3	; case 2
  4823  000674  B4D8               	btfsc	status,2,c
  4824  000676  D7BB               	goto	l1317
  4825  000678  D7F5               	goto	l1318
  4826  00067A                     
  4827                           ;main.c: 238: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4828  00067A  0E92               	movlw	low (_line1+1)
  4829  00067C  0100               	movlb	0	; () banked
  4830  00067E  6F81               	movwf	sprintf@wh& (0+255),b
  4831  000680  0E01               	movlw	high (_line1+1)
  4832  000682  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4833  000684  0E40               	movlw	low STR_94
  4834  000686  6F83               	movwf	sprintf@f& (0+255),b
  4835  000688  0E7D               	movlw	high STR_94
  4836  00068A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4837  00068C  C0F4  F085         	movff	_tempajt,?_sprintf+4
  4838  000690  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4839  000692  EC07  F02C         	call	_sprintf	;wreg free
  4840                           
  4841                           ;main.c: 239: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4842  000696  0100               	movlb	0	; () banked
  4843  000698  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4844  00069A  A4D8               	btfss	status,2,c
  4845  00069C  D004               	goto	l1326
  4846                           
  4847                           ; BSR set to: 0
  4848  00069E  0E00               	movlw	0
  4849  0006A0  6FEB               	movwf	(_main$1638+1)& (0+255),b
  4850  0006A2  0E46               	movlw	70
  4851  0006A4  D003               	goto	L4
  4852  0006A6                     l1326:
  4853                           
  4854                           ; BSR set to: 0
  4855                           
  4856                           ; BSR set to: 0
  4857  0006A6  0E00               	movlw	0
  4858  0006A8  6FEB               	movwf	(_main$1638+1)& (0+255),b
  4859  0006AA  0E25               	movlw	37
  4860  0006AC                     L4:
  4861  0006AC  6FEA               	movwf	_main$1638& (0+255),b
  4862                           
  4863                           ; BSR set to: 0
  4864                           
  4865                           ; BSR set to: 0
  4866  0006AE  0E7D               	movlw	low (_line2+1)
  4867  0006B0  6F81               	movwf	sprintf@wh& (0+255),b
  4868  0006B2  0E01               	movlw	high (_line2+1)
  4869  0006B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4870  0006B6  0E0E               	movlw	low STR_95
  4871  0006B8  6F83               	movwf	sprintf@f& (0+255),b
  4872  0006BA  0E7E               	movlw	high STR_95
  4873  0006BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4874  0006BE  C0F3  F085         	movff	_umidajt,?_sprintf+4
  4875  0006C2  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4876  0006C4  C0EA  F087         	movff	_main$1638,?_sprintf+6
  4877  0006C8  C0EB  F088         	movff	_main$1638+1,?_sprintf+7
  4878  0006CC  EC07  F02C         	call	_sprintf	;wreg free
  4879                           
  4880                           ;main.c: 240: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4881  0006D0  0E68               	movlw	low (_line3+1)
  4882  0006D2  0100               	movlb	0	; () banked
  4883  0006D4  6F81               	movwf	sprintf@wh& (0+255),b
  4884  0006D6  0E01               	movlw	high (_line3+1)
  4885  0006D8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4886  0006DA  0E4B               	movlw	low STR_96
  4887  0006DC  6F83               	movwf	sprintf@f& (0+255),b
  4888  0006DE  0E7F               	movlw	high STR_96
  4889  0006E0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4890  0006E2  0EF6               	movlw	low _fase
  4891  0006E4  6F60               	movwf	faseAtual@_fase& (0+255),b
  4892  0006E6  0E00               	movlw	high _fase
  4893  0006E8  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4894  0006EA  0EF4               	movlw	low _tempajt
  4895  0006EC  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4896  0006EE  0E00               	movlw	high _tempajt
  4897  0006F0  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4898  0006F2  0E3F               	movlw	63
  4899  0006F4  ECE1  F022         	call	_faseAtual
  4900  0006F8  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4901  0006FC  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4902  000700  EC07  F02C         	call	_sprintf	;wreg free
  4903                           
  4904                           ;main.c: 241: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  4905  000704  0E53               	movlw	low (_line4+1)
  4906  000706  0100               	movlb	0	; () banked
  4907  000708  6F81               	movwf	sprintf@wh& (0+255),b
  4908  00070A  0E01               	movlw	high (_line4+1)
  4909  00070C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4910  00070E  0E08               	movlw	low STR_97
  4911  000710  6F83               	movwf	sprintf@f& (0+255),b
  4912  000712  0E7F               	movlw	high STR_97
  4913  000714  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4914  000716  51F5               	movf	_clima& (0+255),w,b
  4915  000718  ECE3  F02B         	call	_climaAtual
  4916  00071C  C060  F085         	movff	?_climaAtual,?_sprintf+4
  4917  000720  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  4918  000724  EC07  F02C         	call	_sprintf	;wreg free
  4919                           
  4920                           ;main.c: 242: break;
  4921  000728  D1B0               	goto	l1323
  4922  00072A                     
  4923                           ;main.c: 244: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  4924  00072A  5059               	movf	_tipo_modo_trabalho,w,c
  4925  00072C  B4D8               	btfsc	status,2,c
  4926  00072E  D005               	goto	l1331
  4927  000730  0ED3               	movlw	low STR_100
  4928  000732  0100               	movlb	0	; () banked
  4929  000734  6FEC               	movwf	_main$1645& (0+255),b
  4930  000736  0E7E               	movlw	high STR_100
  4931  000738  D004               	goto	L5
  4932  00073A                     l1331:
  4933                           
  4934                           ; BSR set to: 0
  4935  00073A  0E98               	movlw	low STR_99
  4936  00073C  0100               	movlb	0	; () banked
  4937  00073E  6FEC               	movwf	_main$1645& (0+255),b
  4938  000740  0E7F               	movlw	high STR_99
  4939  000742                     L5:
  4940  000742  6FED               	movwf	(_main$1645+1)& (0+255),b
  4941                           
  4942                           ; BSR set to: 0
  4943                           
  4944                           ; BSR set to: 0
  4945  000744  0E92               	movlw	low (_line1+1)
  4946  000746  6F81               	movwf	sprintf@wh& (0+255),b
  4947  000748  0E01               	movlw	high (_line1+1)
  4948  00074A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4949  00074C  0E54               	movlw	low STR_98
  4950  00074E  6F83               	movwf	sprintf@f& (0+255),b
  4951  000750  0E7F               	movlw	high STR_98
  4952  000752  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4953  000754  C0EC  F085         	movff	_main$1645,?_sprintf+4
  4954  000758  C0ED  F086         	movff	_main$1645+1,?_sprintf+5
  4955  00075C  EC07  F02C         	call	_sprintf	;wreg free
  4956                           
  4957                           ;main.c: 245: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  4958  000760  0100               	movlb	0	; () banked
  4959  000762  51FB               	movf	_trava_fase& (0+255),w,b
  4960  000764  A4D8               	btfss	status,2,c
  4961  000766  D004               	goto	l1335
  4962                           
  4963                           ; BSR set to: 0
  4964  000768  0EDE               	movlw	low STR_103
  4965  00076A  6FEE               	movwf	_main$1650& (0+255),b
  4966  00076C  0E7E               	movlw	high STR_103
  4967  00076E  D003               	goto	L6
  4968  000770                     l1335:
  4969                           
  4970                           ; BSR set to: 0
  4971                           
  4972                           ; BSR set to: 0
  4973  000770  0E5D               	movlw	low STR_102
  4974  000772  6FEE               	movwf	_main$1650& (0+255),b
  4975  000774  0E7F               	movlw	high STR_102
  4976  000776                     L6:
  4977  000776  6FEF               	movwf	(_main$1650+1)& (0+255),b
  4978                           
  4979                           ; BSR set to: 0
  4980                           
  4981                           ; BSR set to: 0
  4982  000778  0E7D               	movlw	low (_line2+1)
  4983  00077A  6F81               	movwf	sprintf@wh& (0+255),b
  4984  00077C  0E01               	movlw	high (_line2+1)
  4985  00077E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4986  000780  0E12               	movlw	low STR_101
  4987  000782  6F83               	movwf	sprintf@f& (0+255),b
  4988  000784  0E7F               	movlw	high STR_101
  4989  000786  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4990  000788  C0EE  F085         	movff	_main$1650,?_sprintf+4
  4991  00078C  C0EF  F086         	movff	_main$1650+1,?_sprintf+5
  4992  000790  EC07  F02C         	call	_sprintf	;wreg free
  4993                           
  4994                           ;main.c: 246: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  4995  000794  0100               	movlb	0	; () banked
  4996  000796  51FC               	movf	_buzzer& (0+255),w,b
  4997  000798  A4D8               	btfss	status,2,c
  4998  00079A  D004               	goto	l1339
  4999                           
  5000                           ; BSR set to: 0
  5001  00079C  0EF4               	movlw	low STR_106
  5002  00079E  6FF0               	movwf	_main$1655& (0+255),b
  5003  0007A0  0E7E               	movlw	high STR_106
  5004  0007A2  D003               	goto	L7
  5005  0007A4                     l1339:
  5006                           
  5007                           ; BSR set to: 0
  5008                           
  5009                           ; BSR set to: 0
  5010  0007A4  0E9F               	movlw	low STR_105
  5011  0007A6  6FF0               	movwf	_main$1655& (0+255),b
  5012  0007A8  0E7F               	movlw	high STR_105
  5013  0007AA                     L7:
  5014  0007AA  6FF1               	movwf	(_main$1655+1)& (0+255),b
  5015                           
  5016                           ; BSR set to: 0
  5017                           
  5018                           ; BSR set to: 0
  5019  0007AC  0E68               	movlw	low (_line3+1)
  5020  0007AE  6F81               	movwf	sprintf@wh& (0+255),b
  5021  0007B0  0E01               	movlw	high (_line3+1)
  5022  0007B2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5023  0007B4  0EE9               	movlw	low STR_104
  5024  0007B6  6F83               	movwf	sprintf@f& (0+255),b
  5025  0007B8  0E7E               	movlw	high STR_104
  5026  0007BA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5027  0007BC  C0F0  F085         	movff	_main$1655,?_sprintf+4
  5028  0007C0  C0F1  F086         	movff	_main$1655+1,?_sprintf+5
  5029  0007C4  EC07  F02C         	call	_sprintf	;wreg free
  5030                           
  5031                           ;main.c: 247: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  5032  0007C8  0E53               	movlw	low (_line4+1)
  5033  0007CA  0100               	movlb	0	; () banked
  5034  0007CC  6F81               	movwf	sprintf@wh& (0+255),b
  5035  0007CE  0E01               	movlw	high (_line4+1)
  5036  0007D0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5037  0007D2  0E92               	movlw	low STR_107
  5038  0007D4  6F83               	movwf	sprintf@f& (0+255),b
  5039  0007D6  0E7C               	movlw	high STR_107
  5040  0007D8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5041  0007DA  EC07  F02C         	call	_sprintf	;wreg free
  5042                           
  5043                           ;main.c: 248: break;
  5044  0007DE  D155               	goto	l1323
  5045  0007E0                     
  5046                           ;main.c: 250: sprintf(&line1[1], "CONFIG WIFI      >>");
  5047  0007E0  0E92               	movlw	low (_line1+1)
  5048  0007E2  0100               	movlb	0	; () banked
  5049  0007E4  6F81               	movwf	sprintf@wh& (0+255),b
  5050  0007E6  0E01               	movlw	high (_line1+1)
  5051  0007E8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5052  0007EA  0E7E               	movlw	low STR_108
  5053  0007EC  6F83               	movwf	sprintf@f& (0+255),b
  5054  0007EE  0E7C               	movlw	high STR_108
  5055  0007F0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5056  0007F2  EC07  F02C         	call	_sprintf	;wreg free
  5057                           
  5058                           ;main.c: 251: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5059  0007F6  0E7D               	movlw	low (_line2+1)
  5060  0007F8  0100               	movlb	0	; () banked
  5061  0007FA  6F81               	movwf	sprintf@wh& (0+255),b
  5062  0007FC  0E01               	movlw	high (_line2+1)
  5063  0007FE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5064  000800  0EA6               	movlw	low STR_109
  5065  000802  6F83               	movwf	sprintf@f& (0+255),b
  5066  000804  0E7C               	movlw	high STR_109
  5067  000806  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5068  000808  EC07  F02C         	call	_sprintf	;wreg free
  5069                           
  5070                           ;main.c: 252: break;
  5071  00080C  D13E               	goto	l1323
  5072  00080E                     
  5073                           ;main.c: 254: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5074  00080E  0E92               	movlw	low (_line1+1)
  5075  000810  0100               	movlb	0	; () banked
  5076  000812  6F81               	movwf	sprintf@wh& (0+255),b
  5077  000814  0E01               	movlw	high (_line1+1)
  5078  000816  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5079  000818  0EAB               	movlw	low STR_110
  5080  00081A  6F83               	movwf	sprintf@f& (0+255),b
  5081  00081C  0E7D               	movlw	high STR_110
  5082  00081E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5083  000820  C04D  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5084  000824  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5085  000826  C053  F087         	movff	_h_venotinha,?_sprintf+6
  5086  00082A  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5087  00082C  EC07  F02C         	call	_sprintf	;wreg free
  5088                           
  5089                           ;main.c: 255: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5090  000830  0E7D               	movlw	low (_line2+1)
  5091  000832  0100               	movlb	0	; () banked
  5092  000834  6F81               	movwf	sprintf@wh& (0+255),b
  5093  000836  0E01               	movlw	high (_line2+1)
  5094  000838  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5095  00083A  0EBC               	movlw	low STR_111
  5096  00083C  6F83               	movwf	sprintf@f& (0+255),b
  5097  00083E  0E7D               	movlw	high STR_111
  5098  000840  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5099  000842  C0FA  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5100  000846  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5101  000848  C0F7  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5102  00084C  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5103  00084E  EC07  F02C         	call	_sprintf	;wreg free
  5104                           
  5105                           ;main.c: 256: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5106  000852  0E68               	movlw	low (_line3+1)
  5107  000854  0100               	movlb	0	; () banked
  5108  000856  6F81               	movwf	sprintf@wh& (0+255),b
  5109  000858  0E01               	movlw	high (_line3+1)
  5110  00085A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5111  00085C  0ECD               	movlw	low STR_112
  5112  00085E  6F83               	movwf	sprintf@f& (0+255),b
  5113  000860  0E7D               	movlw	high STR_112
  5114  000862  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5115  000864  C052  F085         	movff	_h_abafador,?_sprintf+4
  5116  000868  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5117  00086A  C050  F087         	movff	_h_buzzer,?_sprintf+6
  5118  00086E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5119  000870  EC07  F02C         	call	_sprintf	;wreg free
  5120                           
  5121                           ;main.c: 257: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5122  000874  0E53               	movlw	low (_line4+1)
  5123  000876  0100               	movlb	0	; () banked
  5124  000878  6F81               	movwf	sprintf@wh& (0+255),b
  5125  00087A  0E01               	movlw	high (_line4+1)
  5126  00087C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5127  00087E  0EDE               	movlw	low STR_113
  5128  000880  6F83               	movwf	sprintf@f& (0+255),b
  5129  000882  0E7D               	movlw	high STR_113
  5130  000884  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5131  000886  C051  F085         	movff	_h_flap,?_sprintf+4
  5132  00088A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5133  00088C  C055  F087         	movff	_t_flap_ligado,?_sprintf+6
  5134  000890  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5135  000892  EC07  F02C         	call	_sprintf	;wreg free
  5136                           
  5137                           ;main.c: 258: break;
  5138  000896  D0F9               	goto	l1323
  5139  000898                     
  5140                           ;main.c: 260: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5141  000898  0E92               	movlw	low (_line1+1)
  5142  00089A  0100               	movlb	0	; () banked
  5143  00089C  6F81               	movwf	sprintf@wh& (0+255),b
  5144  00089E  0E01               	movlw	high (_line1+1)
  5145  0008A0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5146  0008A2  0E52               	movlw	low STR_114
  5147  0008A4  6F83               	movwf	sprintf@f& (0+255),b
  5148  0008A6  0E7D               	movlw	high STR_114
  5149  0008A8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5150  0008AA  C054  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5151  0008AE  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5152  0008B0  C04B  F087         	movff	_wifi_SENHA,?_sprintf+6
  5153  0008B4  C04C  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5154  0008B8  EC07  F02C         	call	_sprintf	;wreg free
  5155                           
  5156                           ;main.c: 261: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5157  0008BC  0E7D               	movlw	low (_line2+1)
  5158  0008BE  0100               	movlb	0	; () banked
  5159  0008C0  6F81               	movwf	sprintf@wh& (0+255),b
  5160  0008C2  0E01               	movlw	high (_line2+1)
  5161  0008C4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5162  0008C6  0E64               	movlw	low STR_115
  5163  0008C8  6F83               	movwf	sprintf@f& (0+255),b
  5164  0008CA  0E7D               	movlw	high STR_115
  5165  0008CC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5166  0008CE  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5167  0008D2  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5168  0008D4  C04F  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5169  0008D8  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5170  0008DA  EC07  F02C         	call	_sprintf	;wreg free
  5171                           
  5172                           ;main.c: 262: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5173  0008DE  0E68               	movlw	low (_line3+1)
  5174  0008E0  0100               	movlb	0	; () banked
  5175  0008E2  6F81               	movwf	sprintf@wh& (0+255),b
  5176  0008E4  0E01               	movlw	high (_line3+1)
  5177  0008E6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5178  0008E8  0E76               	movlw	low STR_116
  5179  0008EA  6F83               	movwf	sprintf@f& (0+255),b
  5180  0008EC  0E7D               	movlw	high STR_116
  5181  0008EE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5182  0008F0  C0F9  F085         	movff	_t_temp_automatica,?_sprintf+4
  5183  0008F4  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5184  0008F6  C0F8  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5185  0008FA  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5186  0008FC  EC07  F02C         	call	_sprintf	;wreg free
  5187                           
  5188                           ;main.c: 263: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5189  000900  0E53               	movlw	low (_line4+1)
  5190  000902  0100               	movlb	0	; () banked
  5191  000904  6F81               	movwf	sprintf@wh& (0+255),b
  5192  000906  0E01               	movlw	high (_line4+1)
  5193  000908  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5194  00090A  0E26               	movlw	low STR_117
  5195  00090C  6F83               	movwf	sprintf@f& (0+255),b
  5196  00090E  0E7F               	movlw	high STR_117
  5197  000910  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5198  000912  C04E  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5199  000916  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5200  000918  EC07  F02C         	call	_sprintf	;wreg free
  5201                           
  5202                           ;main.c: 264: break;
  5203  00091C  D0B6               	goto	l1323
  5204  00091E                     
  5205                           ;main.c: 266: sprintf(line1, "SID: %s", ssid);
  5206  00091E  0E91               	movlw	low _line1
  5207  000920  0100               	movlb	0	; () banked
  5208  000922  6F81               	movwf	sprintf@wh& (0+255),b
  5209  000924  0E01               	movlw	high _line1
  5210  000926  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5211  000928  0E65               	movlw	low STR_118
  5212  00092A  6F83               	movwf	sprintf@f& (0+255),b
  5213  00092C  0E7F               	movlw	high STR_118
  5214  00092E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5215  000930  0EC9               	movlw	low _ssid
  5216  000932  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5217  000934  0E01               	movlw	high _ssid
  5218  000936  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5219  000938  EC07  F02C         	call	_sprintf	;wreg free
  5220                           
  5221                           ;main.c: 267: sprintf(line2, "PSW: %s", senha);
  5222  00093C  0E7C               	movlw	low _line2
  5223  00093E  0100               	movlb	0	; () banked
  5224  000940  6F81               	movwf	sprintf@wh& (0+255),b
  5225  000942  0E01               	movlw	high _line2
  5226  000944  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5227  000946  0E6D               	movlw	low STR_119
  5228  000948  6F83               	movwf	sprintf@f& (0+255),b
  5229  00094A  0E7F               	movlw	high STR_119
  5230  00094C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5231  00094E  0EBA               	movlw	low _senha
  5232  000950  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5233  000952  0E01               	movlw	high _senha
  5234  000954  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5235  000956  EC07  F02C         	call	_sprintf	;wreg free
  5236                           
  5237                           ;main.c: 268: sprintf(line3, "NS: %s", wifi_MAC);
  5238  00095A  0E67               	movlw	low _line3
  5239  00095C  0100               	movlb	0	; () banked
  5240  00095E  6F81               	movwf	sprintf@wh& (0+255),b
  5241  000960  0E01               	movlw	high _line3
  5242  000962  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5243  000964  0EA6               	movlw	low STR_120
  5244  000966  6F83               	movwf	sprintf@f& (0+255),b
  5245  000968  0E7F               	movlw	high STR_120
  5246  00096A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5247  00096C  0EE6               	movlw	low _wifi_MAC
  5248  00096E  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5249  000970  0E01               	movlw	high _wifi_MAC
  5250  000972  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5251  000974  EC07  F02C         	call	_sprintf	;wreg free
  5252                           
  5253                           ;main.c: 269: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5254  000978  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5255  00097C  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5256  000980  0E00               	movlw	0
  5257  000982  0100               	movlb	0	; () banked
  5258  000984  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5259  000986  0E27               	movlw	39
  5260  000988  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5261  00098A  EC80  F02D         	call	___wmul	;wreg free
  5262  00098E  C060  F0E2         	movff	?___wmul,_main$2521
  5263  000992  C061  F0E3         	movff	?___wmul+1,_main$2521+1
  5264                           
  5265                           ;main.c: 269: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5266  000996  0E52               	movlw	low _line4
  5267  000998  0100               	movlb	0	; () banked
  5268  00099A  6F81               	movwf	sprintf@wh& (0+255),b
  5269  00099C  0E01               	movlw	high _line4
  5270  00099E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5271  0009A0  0E42               	movlw	low STR_121
  5272  0009A2  6F83               	movwf	sprintf@f& (0+255),b
  5273  0009A4  0E7F               	movlw	high STR_121
  5274  0009A6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5275  0009A8  C0E2  F085         	movff	_main$2521,?_sprintf+4
  5276  0009AC  C0E3  F086         	movff	_main$2521+1,?_sprintf+5
  5277  0009B0  EC07  F02C         	call	_sprintf	;wreg free
  5278                           
  5279                           ;main.c: 270: break;
  5280  0009B4  D06A               	goto	l1323
  5281  0009B6                     
  5282                           ;main.c: 272: sprintf(&line1[1], "CONFIGURAR       >>");
  5283  0009B6  0E92               	movlw	low (_line1+1)
  5284  0009B8  0100               	movlb	0	; () banked
  5285  0009BA  6F81               	movwf	sprintf@wh& (0+255),b
  5286  0009BC  0E01               	movlw	high (_line1+1)
  5287  0009BE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5288  0009C0  0E6A               	movlw	low STR_122
  5289  0009C2  6F83               	movwf	sprintf@f& (0+255),b
  5290  0009C4  0E7C               	movlw	high STR_122
  5291  0009C6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5292  0009C8  EC07  F02C         	call	_sprintf	;wreg free
  5293                           
  5294                           ;main.c: 273: break;
  5295  0009CC  D05E               	goto	l1323
  5296  0009CE                     
  5297                           ;main.c: 275: alterarDadosConexaoConfigWifi();
  5298  0009CE  EC9D  F018         	call	_alterarDadosConexaoConfigWifi	;wreg free
  5299                           
  5300                           ;main.c: 276: break;
  5301  0009D2  D05B               	goto	l1323
  5302  0009D4                     
  5303                           ;main.c: 278: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5304  0009D4  0E92               	movlw	low (_line1+1)
  5305  0009D6  0100               	movlb	0	; () banked
  5306  0009D8  6F81               	movwf	sprintf@wh& (0+255),b
  5307  0009DA  0E01               	movlw	high (_line1+1)
  5308  0009DC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5309  0009DE  0E08               	movlw	low STR_123
  5310  0009E0  6F83               	movwf	sprintf@f& (0+255),b
  5311  0009E2  0E7D               	movlw	high STR_123
  5312  0009E4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5313  0009E6  C058  F085         	movff	_t_fim_fase1,?_sprintf+4
  5314  0009EA  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5315  0009EC  EC07  F02C         	call	_sprintf	;wreg free
  5316                           
  5317                           ;main.c: 279: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5318  0009F0  0E7D               	movlw	low (_line2+1)
  5319  0009F2  0100               	movlb	0	; () banked
  5320  0009F4  6F81               	movwf	sprintf@wh& (0+255),b
  5321  0009F6  0E01               	movlw	high (_line2+1)
  5322  0009F8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5323  0009FA  0E1B               	movlw	low STR_124
  5324  0009FC  6F83               	movwf	sprintf@f& (0+255),b
  5325  0009FE  0E7D               	movlw	high STR_124
  5326  000A00  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5327  000A02  C057  F085         	movff	_t_fim_fase2,?_sprintf+4
  5328  000A06  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5329  000A08  EC07  F02C         	call	_sprintf	;wreg free
  5330                           
  5331                           ;main.c: 280: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5332  000A0C  0E68               	movlw	low (_line3+1)
  5333  000A0E  0100               	movlb	0	; () banked
  5334  000A10  6F81               	movwf	sprintf@wh& (0+255),b
  5335  000A12  0E01               	movlw	high (_line3+1)
  5336  000A14  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5337  000A16  0EF5               	movlw	low STR_125
  5338  000A18  6F83               	movwf	sprintf@f& (0+255),b
  5339  000A1A  0E7C               	movlw	high STR_125
  5340  000A1C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5341  000A1E  C056  F085         	movff	_t_fim_fase3,?_sprintf+4
  5342  000A22  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5343  000A24  EC07  F02C         	call	_sprintf	;wreg free
  5344                           
  5345                           ;main.c: 281: sprintf(line4, "*0 nao passa fase");
  5346  000A28  0E52               	movlw	low _line4
  5347  000A2A  0100               	movlb	0	; () banked
  5348  000A2C  6F81               	movwf	sprintf@wh& (0+255),b
  5349  000A2E  0E01               	movlw	high _line4
  5350  000A30  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5351  000A32  0E88               	movlw	low STR_126
  5352  000A34  6F83               	movwf	sprintf@f& (0+255),b
  5353  000A36  0E7D               	movlw	high STR_126
  5354  000A38  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5355  000A3A  EC07  F02C         	call	_sprintf	;wreg free
  5356                           
  5357                           ;main.c: 282: break;
  5358  000A3E  D025               	goto	l1323
  5359  000A40  0E00               	movlw	0
  5360  000A42  0100               	movlb	0	; () banked
  5361  000A44  6FFD               	movwf	_menu& (0+255),b
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 285: }
  5365                           
  5366                           ;main.c: 284: break;
  5367  000A46  D021               	goto	l1323
  5368  000A48                     l1291:
  5369                           
  5370                           ; BSR set to: 0
  5371  000A48  0100               	movlb	0	; () banked
  5372  000A4A  51FD               	movf	_menu& (0+255),w,b
  5373                           
  5374                           ; Switch size 1, requested type "space"
  5375                           ; Number of cases is 10, Range of values is 0 to 11
  5376                           ; switch strategies available:
  5377                           ; Name         Instructions Cycles
  5378                           ; simple_byte           31    16 (average)
  5379                           ;	Chosen strategy is simple_byte
  5380  000A4C  0A00               	xorlw	0	; case 0
  5381  000A4E  B4D8               	btfsc	status,2,c
  5382  000A50  D4B9               	goto	l1292
  5383  000A52  0A01               	xorlw	1	; case 1
  5384  000A54  B4D8               	btfsc	status,2,c
  5385  000A56  D611               	goto	l1324
  5386  000A58  0A03               	xorlw	3	; case 2
  5387  000A5A  B4D8               	btfsc	status,2,c
  5388  000A5C  D666               	goto	l1329
  5389  000A5E  0A01               	xorlw	1	; case 3
  5390  000A60  B4D8               	btfsc	status,2,c
  5391  000A62  D6BE               	goto	l1342
  5392  000A64  0A06               	xorlw	6	; case 5
  5393  000A66  B4D8               	btfsc	status,2,c
  5394  000A68  D6D2               	goto	l1343
  5395  000A6A  0A03               	xorlw	3	; case 6
  5396  000A6C  B4D8               	btfsc	status,2,c
  5397  000A6E  D714               	goto	l1344
  5398  000A70  0A0E               	xorlw	14	; case 8
  5399  000A72  B4D8               	btfsc	status,2,c
  5400  000A74  D754               	goto	l1345
  5401  000A76  0A01               	xorlw	1	; case 9
  5402  000A78  B4D8               	btfsc	status,2,c
  5403  000A7A  D79D               	goto	l1346
  5404  000A7C  0A03               	xorlw	3	; case 10
  5405  000A7E  B4D8               	btfsc	status,2,c
  5406  000A80  D7A6               	goto	l1347
  5407  000A82  0A01               	xorlw	1	; case 11
  5408  000A84  B4D8               	btfsc	status,2,c
  5409  000A86  D7A6               	goto	l1348
  5410  000A88  D7DB               	goto	l1349
  5411  000A8A                     l1323:
  5412                           
  5413                           ;main.c: 289: if (menu == 1 | menu == 2 | menu == 3) {
  5414                           
  5415                           ; BSR set to: 0
  5416  000A8A  0100               	movlb	0	; () banked
  5417  000A8C  05FD               	decf	_menu& (0+255),w,b
  5418  000A8E  B4D8               	btfsc	status,2,c
  5419  000A90  D008               	goto	u14610
  5420                           
  5421                           ; BSR set to: 0
  5422  000A92  0E02               	movlw	2
  5423  000A94  19FD               	xorwf	_menu& (0+255),w,b
  5424  000A96  B4D8               	btfsc	status,2,c
  5425  000A98  D004               	goto	u14610
  5426                           
  5427                           ; BSR set to: 0
  5428  000A9A  0E03               	movlw	3
  5429  000A9C  19FD               	xorwf	_menu& (0+255),w,b
  5430  000A9E  A4D8               	btfss	status,2,c
  5431  000AA0  D1C0               	goto	l1350
  5432  000AA2                     u14610:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;main.c: 290: ajuste_parametro = 0;
  5436                           
  5437                           ; BSR set to: 0
  5438  000AA2  0E00               	movlw	0
  5439  000AA4  6E44               	movwf	_ajuste_parametro,c
  5440                           
  5441                           ;main.c: 292: switch (opcaomenu) {
  5442  000AA6  D186               	goto	l1353
  5443  000AA8                     
  5444                           ;main.c: 294: opcaomenu = 10;
  5445                           
  5446                           ; BSR set to: 0
  5447  000AA8  0E0A               	movlw	10
  5448  000AAA  D180               	goto	L8
  5449  000AAC                     
  5450                           ;main.c: 297: menu = 1;
  5451  000AAC  0E01               	movlw	1
  5452  000AAE  0100               	movlb	0	; () banked
  5453  000AB0  6FFD               	movwf	_menu& (0+255),b
  5454                           
  5455                           ;main.c: 298: line1[0] = '>';
  5456  000AB2  0E3E               	movlw	62
  5457  000AB4  0101               	movlb	1	; () banked
  5458  000AB6  6F91               	movwf	_line1& (0+255),b
  5459                           
  5460                           ; BSR set to: 1
  5461                           ;main.c: 299: if (btPress(64)) setRangeValor('+', &tempajt, 60, 160, 1);
  5462  000AB8  0E40               	movlw	64
  5463  000ABA  EC14  F02E         	call	_btPress
  5464  000ABE  0900               	iorlw	0
  5465  000AC0  B4D8               	btfsc	status,2,c
  5466  000AC2  D00E               	goto	l1357
  5467  000AC4  0EF4               	movlw	low _tempajt
  5468  000AC6  0100               	movlb	0	; () banked
  5469  000AC8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5470  000ACA  0E00               	movlw	high _tempajt
  5471  000ACC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5472  000ACE  0E3C               	movlw	60
  5473  000AD0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5474  000AD2  0EA0               	movlw	160
  5475  000AD4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5476  000AD6  0E01               	movlw	1
  5477  000AD8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5478  000ADA  0E2B               	movlw	43
  5479  000ADC  EC13  F028         	call	_setRangeValor
  5480  000AE0                     l1357:
  5481                           
  5482                           ;main.c: 300: if (btPress(32)) setRangeValor('-', &tempajt, 60, 160, 1);
  5483  000AE0  0E20               	movlw	32
  5484  000AE2  EC14  F02E         	call	_btPress
  5485  000AE6  0900               	iorlw	0
  5486  000AE8  B4D8               	btfsc	status,2,c
  5487  000AEA  D187               	goto	l1355
  5488  000AEC  0EF4               	movlw	low _tempajt
  5489  000AEE  0100               	movlb	0	; () banked
  5490  000AF0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5491  000AF2  0E00               	movlw	high _tempajt
  5492  000AF4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5493  000AF6  0E3C               	movlw	60
  5494  000AF8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5495  000AFA  0EA0               	movlw	160
  5496  000AFC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5497  000AFE  0E01               	movlw	1
  5498  000B00  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5499  000B02  0E2D               	movlw	45
  5500  000B04  EC13  F028         	call	_setRangeValor
  5501                           
  5502                           ;main.c: 301: break;
  5503  000B08  D178               	goto	l1355
  5504  000B0A                     
  5505                           ;main.c: 303: line2[0] = '>';
  5506  000B0A  0E3E               	movlw	62
  5507  000B0C  0101               	movlb	1	; () banked
  5508  000B0E  6F7C               	movwf	_line2& (0+255),b
  5509                           
  5510                           ;main.c: 304: if (tipo_modo_trabalho == 0) {
  5511  000B10  5059               	movf	_tipo_modo_trabalho,w,c
  5512  000B12  A4D8               	btfss	status,2,c
  5513  000B14  D172               	goto	l1355
  5514                           
  5515                           ; BSR set to: 1
  5516                           ;main.c: 305: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5517  000B16  0E40               	movlw	64
  5518  000B18  EC14  F02E         	call	_btPress
  5519  000B1C  0900               	iorlw	0
  5520  000B1E  B4D8               	btfsc	status,2,c
  5521  000B20  D010               	goto	l1361
  5522  000B22  0EF3               	movlw	low _umidajt
  5523  000B24  0100               	movlb	0	; () banked
  5524  000B26  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5525  000B28  0E00               	movlw	high _umidajt
  5526  000B2A  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5527  000B2C  0EF4               	movlw	low _tempajt
  5528  000B2E  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5529  000B30  0E00               	movlw	high _tempajt
  5530  000B32  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5531  000B34  0EF5               	movlw	low _clima
  5532  000B36  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5533  000B38  0E00               	movlw	high _clima
  5534  000B3A  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5535  000B3C  0E2B               	movlw	43
  5536  000B3E  EC80  F023         	call	_setUmidade
  5537  000B42                     l1361:
  5538                           
  5539                           ;main.c: 306: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5540  000B42  0E20               	movlw	32
  5541  000B44  EC14  F02E         	call	_btPress
  5542  000B48  0900               	iorlw	0
  5543  000B4A  B4D8               	btfsc	status,2,c
  5544  000B4C  D156               	goto	l1355
  5545  000B4E  0EF3               	movlw	low _umidajt
  5546  000B50  0100               	movlb	0	; () banked
  5547  000B52  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5548  000B54  0E00               	movlw	high _umidajt
  5549  000B56  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5550  000B58  0EF4               	movlw	low _tempajt
  5551  000B5A  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5552  000B5C  0E00               	movlw	high _tempajt
  5553  000B5E  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5554  000B60  0EF5               	movlw	low _clima
  5555  000B62  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5556  000B64  0E00               	movlw	high _clima
  5557  000B66  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5558  000B68  0E2D               	movlw	45
  5559  000B6A  EC80  F023         	call	_setUmidade
  5560                           
  5561                           ;main.c: 307: }
  5562                           ;main.c: 308: break;
  5563  000B6E  D145               	goto	l1355
  5564  000B70                     
  5565                           ;main.c: 310: line3[0] = '>';
  5566  000B70  0E3E               	movlw	62
  5567  000B72  0101               	movlb	1	; () banked
  5568  000B74  6F67               	movwf	_line3& (0+255),b
  5569                           
  5570                           ; BSR set to: 1
  5571                           ;main.c: 311: if (btPress(64)) {
  5572  000B76  0E40               	movlw	64
  5573  000B78  EC14  F02E         	call	_btPress
  5574  000B7C  0900               	iorlw	0
  5575  000B7E  B4D8               	btfsc	status,2,c
  5576  000B80  D02A               	goto	l1364
  5577                           
  5578                           ;main.c: 312: setRangeValor('+', &fase, 1, 4, 4);
  5579  000B82  0EF6               	movlw	low _fase
  5580  000B84  0100               	movlb	0	; () banked
  5581  000B86  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5582  000B88  0E00               	movlw	high _fase
  5583  000B8A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5584  000B8C  0E01               	movlw	1
  5585  000B8E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5586  000B90  0E04               	movlw	4
  5587  000B92  6F68               	movwf	setRangeValor@_max& (0+255),b
  5588  000B94  0E04               	movlw	4
  5589  000B96  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5590  000B98  0E2B               	movlw	43
  5591  000B9A  EC13  F028         	call	_setRangeValor
  5592                           
  5593                           ;main.c: 313: faseAtual('A', &fase, &tempajt);
  5594  000B9E  0EF6               	movlw	low _fase
  5595  000BA0  0100               	movlb	0	; () banked
  5596  000BA2  6F60               	movwf	faseAtual@_fase& (0+255),b
  5597  000BA4  0E00               	movlw	high _fase
  5598  000BA6  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5599  000BA8  0EF4               	movlw	low _tempajt
  5600  000BAA  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5601  000BAC  0E00               	movlw	high _tempajt
  5602  000BAE  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5603  000BB0  0E41               	movlw	65
  5604  000BB2  ECE1  F022         	call	_faseAtual
  5605                           
  5606                           ;main.c: 314: setUmidade('A', &umidajt, &tempajt, &clima);
  5607  000BB6  0EF3               	movlw	low _umidajt
  5608  000BB8  0100               	movlb	0	; () banked
  5609  000BBA  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5610  000BBC  0E00               	movlw	high _umidajt
  5611  000BBE  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5612  000BC0  0EF4               	movlw	low _tempajt
  5613  000BC2  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5614  000BC4  0E00               	movlw	high _tempajt
  5615  000BC6  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5616  000BC8  0EF5               	movlw	low _clima
  5617  000BCA  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5618  000BCC  0E00               	movlw	high _clima
  5619  000BCE  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5620  000BD0  0E41               	movlw	65
  5621  000BD2  EC80  F023         	call	_setUmidade
  5622  000BD6                     l1364:
  5623                           
  5624                           ;main.c: 315: }
  5625                           ;main.c: 316: if (btPress(32)) {
  5626  000BD6  0E20               	movlw	32
  5627  000BD8  EC14  F02E         	call	_btPress
  5628  000BDC  0900               	iorlw	0
  5629  000BDE  B4D8               	btfsc	status,2,c
  5630  000BE0  D10C               	goto	l1355
  5631                           
  5632                           ;main.c: 317: setRangeValor('-', &fase, 1, 4, 4);
  5633  000BE2  0EF6               	movlw	low _fase
  5634  000BE4  0100               	movlb	0	; () banked
  5635  000BE6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5636  000BE8  0E00               	movlw	high _fase
  5637  000BEA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5638  000BEC  0E01               	movlw	1
  5639  000BEE  6F67               	movwf	setRangeValor@_min& (0+255),b
  5640  000BF0  0E04               	movlw	4
  5641  000BF2  6F68               	movwf	setRangeValor@_max& (0+255),b
  5642  000BF4  0E04               	movlw	4
  5643  000BF6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5644  000BF8  0E2D               	movlw	45
  5645  000BFA  EC13  F028         	call	_setRangeValor
  5646                           
  5647                           ;main.c: 318: faseAtual('A', &fase, &tempajt);
  5648  000BFE  0EF6               	movlw	low _fase
  5649  000C00  0100               	movlb	0	; () banked
  5650  000C02  6F60               	movwf	faseAtual@_fase& (0+255),b
  5651  000C04  0E00               	movlw	high _fase
  5652  000C06  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5653  000C08  0EF4               	movlw	low _tempajt
  5654  000C0A  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5655  000C0C  0E00               	movlw	high _tempajt
  5656  000C0E  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5657  000C10  0E41               	movlw	65
  5658  000C12  ECE1  F022         	call	_faseAtual
  5659                           
  5660                           ;main.c: 319: setUmidade('A', &umidajt, &tempajt, &clima);
  5661  000C16  0EF3               	movlw	low _umidajt
  5662  000C18  0100               	movlb	0	; () banked
  5663  000C1A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5664  000C1C  0E00               	movlw	high _umidajt
  5665  000C1E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5666  000C20  0EF4               	movlw	low _tempajt
  5667  000C22  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5668  000C24  0E00               	movlw	high _tempajt
  5669  000C26  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5670  000C28  0EF5               	movlw	low _clima
  5671  000C2A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5672  000C2C  0E00               	movlw	high _clima
  5673  000C2E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5674  000C30  0E41               	movlw	65
  5675  000C32  EC80  F023         	call	_setUmidade
  5676                           
  5677                           ;main.c: 320: }
  5678                           ;main.c: 321: break;
  5679  000C36  D0E1               	goto	l1355
  5680  000C38                     
  5681                           ;main.c: 323: menu = 1;
  5682  000C38  0E01               	movlw	1
  5683  000C3A  0100               	movlb	0	; () banked
  5684  000C3C  6FFD               	movwf	_menu& (0+255),b
  5685                           
  5686                           ;main.c: 324: line4[0] = '>';
  5687  000C3E  0E3E               	movlw	62
  5688  000C40  0101               	movlb	1	; () banked
  5689  000C42  6F52               	movwf	_line4& (0+255),b
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;main.c: 325: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5693  000C44  0E40               	movlw	64
  5694  000C46  EC14  F02E         	call	_btPress
  5695  000C4A  0900               	iorlw	0
  5696  000C4C  B4D8               	btfsc	status,2,c
  5697  000C4E  D00E               	goto	l1367
  5698  000C50  0EF5               	movlw	low _clima
  5699  000C52  0100               	movlb	0	; () banked
  5700  000C54  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5701  000C56  0E00               	movlw	high _clima
  5702  000C58  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5703  000C5A  0E01               	movlw	1
  5704  000C5C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5705  000C5E  0E03               	movlw	3
  5706  000C60  6F68               	movwf	setRangeValor@_max& (0+255),b
  5707  000C62  0E05               	movlw	5
  5708  000C64  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5709  000C66  0E2B               	movlw	43
  5710  000C68  EC13  F028         	call	_setRangeValor
  5711  000C6C                     l1367:
  5712                           
  5713                           ;main.c: 326: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5714  000C6C  0E20               	movlw	32
  5715  000C6E  EC14  F02E         	call	_btPress
  5716  000C72  0900               	iorlw	0
  5717  000C74  B4D8               	btfsc	status,2,c
  5718  000C76  D0C1               	goto	l1355
  5719  000C78  0EF5               	movlw	low _clima
  5720  000C7A  0100               	movlb	0	; () banked
  5721  000C7C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5722  000C7E  0E00               	movlw	high _clima
  5723  000C80  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5724  000C82  0E01               	movlw	1
  5725  000C84  6F67               	movwf	setRangeValor@_min& (0+255),b
  5726  000C86  0E03               	movlw	3
  5727  000C88  6F68               	movwf	setRangeValor@_max& (0+255),b
  5728  000C8A  0E05               	movlw	5
  5729  000C8C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5730  000C8E  0E2D               	movlw	45
  5731  000C90  EC13  F028         	call	_setRangeValor
  5732                           
  5733                           ;main.c: 327: break;
  5734  000C94  D0B2               	goto	l1355
  5735  000C96                     
  5736                           ;main.c: 329: menu = 2;
  5737  000C96  0E02               	movlw	2
  5738  000C98  0100               	movlb	0	; () banked
  5739  000C9A  6FFD               	movwf	_menu& (0+255),b
  5740                           
  5741                           ;main.c: 330: line1[0] = '>';
  5742  000C9C  0E3E               	movlw	62
  5743  000C9E  0101               	movlb	1	; () banked
  5744  000CA0  6F91               	movwf	_line1& (0+255),b
  5745                           
  5746                           ; BSR set to: 1
  5747                           ;main.c: 331: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5748  000CA2  0E40               	movlw	64
  5749  000CA4  EC14  F02E         	call	_btPress
  5750  000CA8  0900               	iorlw	0
  5751  000CAA  A4D8               	btfss	status,2,c
  5752  000CAC  D006               	goto	u14720
  5753  000CAE  0E20               	movlw	32
  5754  000CB0  EC14  F02E         	call	_btPress
  5755  000CB4  0900               	iorlw	0
  5756  000CB6  B4D8               	btfsc	status,2,c
  5757  000CB8  D0A0               	goto	l1355
  5758  000CBA                     u14720:
  5759  000CBA  0E59               	movlw	low _tipo_modo_trabalho
  5760  000CBC  0100               	movlb	0	; () banked
  5761  000CBE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5762  000CC0  0E00               	movlw	high _tipo_modo_trabalho
  5763  000CC2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5764  000CC4  0E00               	movlw	0
  5765  000CC6  6F67               	movwf	setRangeValor@_min& (0+255),b
  5766  000CC8  0E01               	movlw	1
  5767  000CCA  6F68               	movwf	setRangeValor@_max& (0+255),b
  5768  000CCC  0E06               	movlw	6
  5769  000CCE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5770  000CD0  0E2B               	movlw	43
  5771  000CD2  EC13  F028         	call	_setRangeValor
  5772                           
  5773                           ;main.c: 332: break;
  5774  000CD6  D091               	goto	l1355
  5775  000CD8                     
  5776                           ;main.c: 334: line2[0] = '>';
  5777  000CD8  0E3E               	movlw	62
  5778  000CDA  0101               	movlb	1	; () banked
  5779  000CDC  6F7C               	movwf	_line2& (0+255),b
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;main.c: 335: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5783  000CDE  0E40               	movlw	64
  5784  000CE0  EC14  F02E         	call	_btPress
  5785  000CE4  0900               	iorlw	0
  5786  000CE6  A4D8               	btfss	status,2,c
  5787  000CE8  D006               	goto	u14740
  5788  000CEA  0E20               	movlw	32
  5789  000CEC  EC14  F02E         	call	_btPress
  5790  000CF0  0900               	iorlw	0
  5791  000CF2  B4D8               	btfsc	status,2,c
  5792  000CF4  D082               	goto	l1355
  5793  000CF6                     u14740:
  5794  000CF6  0EFB               	movlw	low _trava_fase
  5795  000CF8  0100               	movlb	0	; () banked
  5796  000CFA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5797  000CFC  0E00               	movlw	high _trava_fase
  5798  000CFE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5799  000D00  0E00               	movlw	0
  5800  000D02  6F67               	movwf	setRangeValor@_min& (0+255),b
  5801  000D04  0E01               	movlw	1
  5802  000D06  6F68               	movwf	setRangeValor@_max& (0+255),b
  5803  000D08  0E03               	movlw	3
  5804  000D0A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5805  000D0C  0E2B               	movlw	43
  5806  000D0E  EC13  F028         	call	_setRangeValor
  5807                           
  5808                           ;main.c: 336: break;
  5809  000D12  D073               	goto	l1355
  5810  000D14                     
  5811                           ;main.c: 338: line3[0] = '>';
  5812  000D14  0E3E               	movlw	62
  5813  000D16  0101               	movlb	1	; () banked
  5814  000D18  6F67               	movwf	_line3& (0+255),b
  5815                           
  5816                           ; BSR set to: 1
  5817                           ;main.c: 339: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5818  000D1A  0E40               	movlw	64
  5819  000D1C  EC14  F02E         	call	_btPress
  5820  000D20  0900               	iorlw	0
  5821  000D22  A4D8               	btfss	status,2,c
  5822  000D24  D006               	goto	u14760
  5823  000D26  0E20               	movlw	32
  5824  000D28  EC14  F02E         	call	_btPress
  5825  000D2C  0900               	iorlw	0
  5826  000D2E  B4D8               	btfsc	status,2,c
  5827  000D30  D064               	goto	l1355
  5828  000D32                     u14760:
  5829  000D32  0EFC               	movlw	low _buzzer
  5830  000D34  0100               	movlb	0	; () banked
  5831  000D36  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5832  000D38  0E00               	movlw	high _buzzer
  5833  000D3A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5834  000D3C  0E00               	movlw	0
  5835  000D3E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5836  000D40  0E01               	movlw	1
  5837  000D42  6F68               	movwf	setRangeValor@_max& (0+255),b
  5838  000D44  0E0E               	movlw	14
  5839  000D46  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5840  000D48  0E2B               	movlw	43
  5841  000D4A  EC13  F028         	call	_setRangeValor
  5842                           
  5843                           ;main.c: 340: break;
  5844  000D4E  D055               	goto	l1355
  5845  000D50                     
  5846                           ;main.c: 342: menu = 2;
  5847  000D50  0E02               	movlw	2
  5848  000D52  0100               	movlb	0	; () banked
  5849  000D54  6FFD               	movwf	_menu& (0+255),b
  5850                           
  5851                           ;main.c: 343: line4[0] = '>';
  5852  000D56  0E3E               	movlw	62
  5853  000D58  0101               	movlb	1	; () banked
  5854  000D5A  6F52               	movwf	_line4& (0+255),b
  5855                           
  5856                           ; BSR set to: 1
  5857                           ;main.c: 344: if (btPress(2)) menu = 11;
  5858  000D5C  0E02               	movlw	2
  5859  000D5E  EC14  F02E         	call	_btPress
  5860  000D62  0900               	iorlw	0
  5861  000D64  B4D8               	btfsc	status,2,c
  5862  000D66  D049               	goto	l1355
  5863  000D68  0E0B               	movlw	11
  5864  000D6A  D00D               	goto	L9
  5865  000D6C                     
  5866                           ;main.c: 347: menu = 3;
  5867                           
  5868                           ; BSR set to: 0
  5869  000D6C  0E03               	movlw	3
  5870  000D6E  0100               	movlb	0	; () banked
  5871  000D70  6FFD               	movwf	_menu& (0+255),b
  5872                           
  5873                           ;main.c: 348: line1[0] = '>';
  5874  000D72  0E3E               	movlw	62
  5875  000D74  0101               	movlb	1	; () banked
  5876  000D76  6F91               	movwf	_line1& (0+255),b
  5877                           
  5878                           ; BSR set to: 1
  5879                           ;main.c: 349: if (btPress(2)) menu = 8;
  5880  000D78  0E02               	movlw	2
  5881  000D7A  EC14  F02E         	call	_btPress
  5882  000D7E  0900               	iorlw	0
  5883  000D80  B4D8               	btfsc	status,2,c
  5884  000D82  D03B               	goto	l1355
  5885  000D84  0E08               	movlw	8
  5886  000D86                     L9:
  5887  000D86  0100               	movlb	0	; () banked
  5888  000D88  6FFD               	movwf	_menu& (0+255),b
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;main.c: 350: break;
  5892  000D8A  D037               	goto	l1355
  5893  000D8C                     
  5894                           ;main.c: 352: menu = 3;
  5895                           
  5896                           ; BSR set to: 0
  5897  000D8C  0E03               	movlw	3
  5898  000D8E  0100               	movlb	0	; () banked
  5899  000D90  6FFD               	movwf	_menu& (0+255),b
  5900                           
  5901                           ;main.c: 353: line2[0] = '>';
  5902  000D92  0E3E               	movlw	62
  5903  000D94  0101               	movlb	1	; () banked
  5904  000D96  6F7C               	movwf	_line2& (0+255),b
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;main.c: 354: if (btPress(2)) {
  5908  000D98  0E02               	movlw	2
  5909  000D9A  EC14  F02E         	call	_btPress
  5910  000D9E  0900               	iorlw	0
  5911  000DA0  B4D8               	btfsc	status,2,c
  5912  000DA2  D02B               	goto	l1355
  5913                           
  5914                           ;main.c: 355: menu = 5;
  5915  000DA4  0E05               	movlw	5
  5916  000DA6  0100               	movlb	0	; () banked
  5917  000DA8  6FFD               	movwf	_menu& (0+255),b
  5918  000DAA  D002               	goto	l1387
  5919  000DAC                     L8:
  5920  000DAC  6E45               	movwf	_opcaomenu,c
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;main.c: 357: }
  5924                           ;main.c: 358: break;
  5925  000DAE  D025               	goto	l1355
  5926  000DB0                     l1387:
  5927                           
  5928                           ;main.c: 360: opcaomenu = 1;
  5929                           
  5930                           ; BSR set to: 0
  5931  000DB0  0E01               	movlw	1
  5932  000DB2  D7FC               	goto	L8
  5933  000DB4                     l1353:
  5934  000DB4  5045               	movf	_opcaomenu,w,c
  5935                           
  5936                           ; Switch size 1, requested type "space"
  5937                           ; Number of cases is 11, Range of values is 0 to 10
  5938                           ; switch strategies available:
  5939                           ; Name         Instructions Cycles
  5940                           ; simple_byte           34    18 (average)
  5941                           ;	Chosen strategy is simple_byte
  5942  000DB6  0A00               	xorlw	0	; case 0
  5943  000DB8  B4D8               	btfsc	status,2,c
  5944  000DBA  D676               	goto	l1354
  5945  000DBC  0A01               	xorlw	1	; case 1
  5946  000DBE  B4D8               	btfsc	status,2,c
  5947  000DC0  D675               	goto	l1356
  5948  000DC2  0A03               	xorlw	3	; case 2
  5949  000DC4  B4D8               	btfsc	status,2,c
  5950  000DC6  D6A1               	goto	l1359
  5951  000DC8  0A01               	xorlw	1	; case 3
  5952  000DCA  B4D8               	btfsc	status,2,c
  5953  000DCC  D6D1               	goto	l1363
  5954  000DCE  0A07               	xorlw	7	; case 4
  5955  000DD0  B4D8               	btfsc	status,2,c
  5956  000DD2  D732               	goto	l1366
  5957  000DD4  0A01               	xorlw	1	; case 5
  5958  000DD6  B4D8               	btfsc	status,2,c
  5959  000DD8  D75E               	goto	l1369
  5960  000DDA  0A03               	xorlw	3	; case 6
  5961  000DDC  B4D8               	btfsc	status,2,c
  5962  000DDE  D77C               	goto	l1373
  5963  000DE0  0A01               	xorlw	1	; case 7
  5964  000DE2  B4D8               	btfsc	status,2,c
  5965  000DE4  D797               	goto	l1377
  5966  000DE6  0A0F               	xorlw	15	; case 8
  5967  000DE8  B4D8               	btfsc	status,2,c
  5968  000DEA  D7B2               	goto	l1381
  5969  000DEC  0A01               	xorlw	1	; case 9
  5970  000DEE  B4D8               	btfsc	status,2,c
  5971  000DF0  D7BD               	goto	l1383
  5972  000DF2  0A03               	xorlw	3	; case 10
  5973  000DF4  B4D8               	btfsc	status,2,c
  5974  000DF6  D7CA               	goto	l1385
  5975  000DF8  D7DB               	goto	l1387
  5976  000DFA                     l1355:
  5977                           
  5978                           ;main.c: 364: if (btPress(16)) opcaomenu++;
  5979  000DFA  0E10               	movlw	16
  5980  000DFC  EC14  F02E         	call	_btPress
  5981  000E00  0900               	iorlw	0
  5982  000E02  A4D8               	btfss	status,2,c
  5983  000E04  2A45               	incf	_opcaomenu,f,c
  5984                           
  5985                           ;main.c: 365: if (btPress(1)) opcaomenu--;
  5986  000E06  0E01               	movlw	1
  5987  000E08  EC14  F02E         	call	_btPress
  5988  000E0C  0900               	iorlw	0
  5989  000E0E  A4D8               	btfss	status,2,c
  5990  000E10  0645               	decf	_opcaomenu,f,c
  5991                           
  5992                           ;main.c: 366: if (btPress(8)) menu = 0;
  5993  000E12  0E08               	movlw	8
  5994  000E14  EC14  F02E         	call	_btPress
  5995  000E18  0900               	iorlw	0
  5996  000E1A  B4D8               	btfsc	status,2,c
  5997  000E1C  D3F4               	goto	l1476
  5998  000E1E  0E00               	movlw	0
  5999  000E20  D3F0               	goto	L11
  6000  000E22                     l1350:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;main.c: 371: if (menu == 5 | menu == 6) {
  6004                           
  6005                           ; BSR set to: 0
  6006  000E22  0E05               	movlw	5
  6007  000E24  19FD               	xorwf	_menu& (0+255),w,b
  6008  000E26  B4D8               	btfsc	status,2,c
  6009  000E28  D004               	goto	u14840
  6010                           
  6011                           ; BSR set to: 0
  6012  000E2A  0E06               	movlw	6
  6013  000E2C  19FD               	xorwf	_menu& (0+255),w,b
  6014  000E2E  A4D8               	btfss	status,2,c
  6015  000E30  D2EE               	goto	l1392
  6016  000E32                     u14840:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;main.c: 372: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  6020                           
  6021                           ; BSR set to: 0
  6022  000E32  0E30               	movlw	48
  6023  000E34  184D               	xorwf	_senha_desbloqueio_func,w,c
  6024  000E36  B4D8               	btfsc	status,2,c
  6025  000E38  D2A3               	goto	l1396
  6026                           
  6027                           ; BSR set to: 0
  6028  000E3A  0E01               	movlw	1
  6029  000E3C  6E45               	movwf	_opcaomenu,c
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;main.c: 373: switch (opcaomenu) {
  6033  000E3E  D2A0               	goto	l1396
  6034  000E40                     
  6035                           ;main.c: 375: menu = 5;
  6036                           
  6037                           ; BSR set to: 0
  6038  000E40  0E05               	movlw	5
  6039  000E42  0100               	movlb	0	; () banked
  6040  000E44  6FFD               	movwf	_menu& (0+255),b
  6041                           
  6042                           ;main.c: 376: line1[0] = '>';
  6043  000E46  0E3E               	movlw	62
  6044  000E48  0101               	movlb	1	; () banked
  6045  000E4A  6F91               	movwf	_line1& (0+255),b
  6046                           
  6047                           ; BSR set to: 1
  6048                           ;main.c: 377: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6049  000E4C  0E40               	movlw	64
  6050  000E4E  EC14  F02E         	call	_btPress
  6051  000E52  0900               	iorlw	0
  6052  000E54  B4D8               	btfsc	status,2,c
  6053  000E56  D00E               	goto	l1398
  6054  000E58  0E4D               	movlw	low _senha_desbloqueio_func
  6055  000E5A  0100               	movlb	0	; () banked
  6056  000E5C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6057  000E5E  0E00               	movlw	high _senha_desbloqueio_func
  6058  000E60  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6059  000E62  0E00               	movlw	0
  6060  000E64  6F67               	movwf	setRangeValor@_min& (0+255),b
  6061  000E66  0E32               	movlw	50
  6062  000E68  6F68               	movwf	setRangeValor@_max& (0+255),b
  6063  000E6A  0E00               	movlw	0
  6064  000E6C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6065  000E6E  0E2B               	movlw	43
  6066  000E70  EC13  F028         	call	_setRangeValor
  6067  000E74                     l1398:
  6068                           
  6069                           ;main.c: 378: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6070  000E74  0E20               	movlw	32
  6071  000E76  EC14  F02E         	call	_btPress
  6072  000E7A  0900               	iorlw	0
  6073  000E7C  B4D8               	btfsc	status,2,c
  6074  000E7E  D2AF               	goto	l1400
  6075  000E80  0E4D               	movlw	low _senha_desbloqueio_func
  6076  000E82  0100               	movlb	0	; () banked
  6077  000E84  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6078  000E86  0E00               	movlw	high _senha_desbloqueio_func
  6079  000E88  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6080  000E8A  0E00               	movlw	0
  6081  000E8C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6082  000E8E  0E32               	movlw	50
  6083  000E90  6F68               	movwf	setRangeValor@_max& (0+255),b
  6084  000E92  0E00               	movlw	0
  6085  000E94  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6086  000E96  0E2D               	movlw	45
  6087  000E98  EC13  F028         	call	_setRangeValor
  6088                           
  6089                           ;main.c: 379: break;
  6090  000E9C  D2A0               	goto	l1400
  6091  000E9E                     
  6092                           ;main.c: 381: line2[0] = '>';
  6093  000E9E  0E3E               	movlw	62
  6094  000EA0  0101               	movlb	1	; () banked
  6095  000EA2  6F7C               	movwf	_line2& (0+255),b
  6096                           
  6097                           ; BSR set to: 1
  6098                           ;main.c: 382: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6099  000EA4  0E40               	movlw	64
  6100  000EA6  EC14  F02E         	call	_btPress
  6101  000EAA  0900               	iorlw	0
  6102  000EAC  B4D8               	btfsc	status,2,c
  6103  000EAE  D00E               	goto	l1402
  6104  000EB0  0EFA               	movlw	low _tipo_sensor_umidade
  6105  000EB2  0100               	movlb	0	; () banked
  6106  000EB4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6107  000EB6  0E00               	movlw	high _tipo_sensor_umidade
  6108  000EB8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6109  000EBA  0E00               	movlw	0
  6110  000EBC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6111  000EBE  0E01               	movlw	1
  6112  000EC0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6113  000EC2  0E07               	movlw	7
  6114  000EC4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6115  000EC6  0E2B               	movlw	43
  6116  000EC8  EC13  F028         	call	_setRangeValor
  6117  000ECC                     l1402:
  6118                           
  6119                           ;main.c: 383: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6120  000ECC  0E20               	movlw	32
  6121  000ECE  EC14  F02E         	call	_btPress
  6122  000ED2  0900               	iorlw	0
  6123  000ED4  B4D8               	btfsc	status,2,c
  6124  000ED6  D283               	goto	l1400
  6125  000ED8  0EFA               	movlw	low _tipo_sensor_umidade
  6126  000EDA  0100               	movlb	0	; () banked
  6127  000EDC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6128  000EDE  0E00               	movlw	high _tipo_sensor_umidade
  6129  000EE0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6130  000EE2  0E00               	movlw	0
  6131  000EE4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6132  000EE6  0E01               	movlw	1
  6133  000EE8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6134  000EEA  0E07               	movlw	7
  6135  000EEC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6136  000EEE  0E2D               	movlw	45
  6137  000EF0  EC13  F028         	call	_setRangeValor
  6138                           
  6139                           ;main.c: 384: break;
  6140  000EF4  D274               	goto	l1400
  6141  000EF6                     
  6142                           ;main.c: 386: line3[0] = '>';
  6143  000EF6  0E3E               	movlw	62
  6144  000EF8  0101               	movlb	1	; () banked
  6145  000EFA  6F67               	movwf	_line3& (0+255),b
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;main.c: 387: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6149  000EFC  0E40               	movlw	64
  6150  000EFE  EC14  F02E         	call	_btPress
  6151  000F02  0900               	iorlw	0
  6152  000F04  B4D8               	btfsc	status,2,c
  6153  000F06  D00E               	goto	l1405
  6154  000F08  0E52               	movlw	low _h_abafador
  6155  000F0A  0100               	movlb	0	; () banked
  6156  000F0C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6157  000F0E  0E00               	movlw	high _h_abafador
  6158  000F10  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6159  000F12  0E01               	movlw	1
  6160  000F14  6F67               	movwf	setRangeValor@_min& (0+255),b
  6161  000F16  0E0A               	movlw	10
  6162  000F18  6F68               	movwf	setRangeValor@_max& (0+255),b
  6163  000F1A  0E0C               	movlw	12
  6164  000F1C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6165  000F1E  0E2B               	movlw	43
  6166  000F20  EC13  F028         	call	_setRangeValor
  6167  000F24                     l1405:
  6168                           
  6169                           ;main.c: 388: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6170  000F24  0E20               	movlw	32
  6171  000F26  EC14  F02E         	call	_btPress
  6172  000F2A  0900               	iorlw	0
  6173  000F2C  B4D8               	btfsc	status,2,c
  6174  000F2E  D257               	goto	l1400
  6175  000F30  0E52               	movlw	low _h_abafador
  6176  000F32  0100               	movlb	0	; () banked
  6177  000F34  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6178  000F36  0E00               	movlw	high _h_abafador
  6179  000F38  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6180  000F3A  0E01               	movlw	1
  6181  000F3C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6182  000F3E  0E0A               	movlw	10
  6183  000F40  6F68               	movwf	setRangeValor@_max& (0+255),b
  6184  000F42  0E0C               	movlw	12
  6185  000F44  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6186  000F46  0E2D               	movlw	45
  6187  000F48  EC13  F028         	call	_setRangeValor
  6188                           
  6189                           ;main.c: 389: break;
  6190  000F4C  D248               	goto	l1400
  6191  000F4E                     
  6192                           ;main.c: 391: line4[0] = '>';
  6193  000F4E  0E3E               	movlw	62
  6194  000F50  0101               	movlb	1	; () banked
  6195  000F52  6F52               	movwf	_line4& (0+255),b
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;main.c: 392: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6199  000F54  0E40               	movlw	64
  6200  000F56  EC14  F02E         	call	_btPress
  6201  000F5A  0900               	iorlw	0
  6202  000F5C  B4D8               	btfsc	status,2,c
  6203  000F5E  D00E               	goto	l1408
  6204  000F60  0E51               	movlw	low _h_flap
  6205  000F62  0100               	movlb	0	; () banked
  6206  000F64  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6207  000F66  0E00               	movlw	high _h_flap
  6208  000F68  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6209  000F6A  0E01               	movlw	1
  6210  000F6C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6211  000F6E  0E0A               	movlw	10
  6212  000F70  6F68               	movwf	setRangeValor@_max& (0+255),b
  6213  000F72  0E0D               	movlw	13
  6214  000F74  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6215  000F76  0E2B               	movlw	43
  6216  000F78  EC13  F028         	call	_setRangeValor
  6217  000F7C                     l1408:
  6218                           
  6219                           ;main.c: 393: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6220  000F7C  0E20               	movlw	32
  6221  000F7E  EC14  F02E         	call	_btPress
  6222  000F82  0900               	iorlw	0
  6223  000F84  B4D8               	btfsc	status,2,c
  6224  000F86  D22B               	goto	l1400
  6225  000F88  0E51               	movlw	low _h_flap
  6226  000F8A  0100               	movlb	0	; () banked
  6227  000F8C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6228  000F8E  0E00               	movlw	high _h_flap
  6229  000F90  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6230  000F92  0E01               	movlw	1
  6231  000F94  6F67               	movwf	setRangeValor@_min& (0+255),b
  6232  000F96  0E0A               	movlw	10
  6233  000F98  6F68               	movwf	setRangeValor@_max& (0+255),b
  6234  000F9A  0E0D               	movlw	13
  6235  000F9C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6236  000F9E  0E2D               	movlw	45
  6237  000FA0  EC13  F028         	call	_setRangeValor
  6238                           
  6239                           ;main.c: 394: break;
  6240  000FA4  D21C               	goto	l1400
  6241  000FA6                     
  6242                           ;main.c: 396: line1[11] = '>';
  6243  000FA6  0E3E               	movlw	62
  6244  000FA8  0101               	movlb	1	; () banked
  6245  000FAA  6F9C               	movwf	(_line1+11)& (0+255),b
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;main.c: 397: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6249  000FAC  0E40               	movlw	64
  6250  000FAE  EC14  F02E         	call	_btPress
  6251  000FB2  0900               	iorlw	0
  6252  000FB4  B4D8               	btfsc	status,2,c
  6253  000FB6  D00E               	goto	l1411
  6254  000FB8  0E53               	movlw	low _h_venotinha
  6255  000FBA  0100               	movlb	0	; () banked
  6256  000FBC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6257  000FBE  0E00               	movlw	high _h_venotinha
  6258  000FC0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6259  000FC2  0E01               	movlw	1
  6260  000FC4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6261  000FC6  0E0A               	movlw	10
  6262  000FC8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6263  000FCA  0E0B               	movlw	11
  6264  000FCC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6265  000FCE  0E2B               	movlw	43
  6266  000FD0  EC13  F028         	call	_setRangeValor
  6267  000FD4                     l1411:
  6268                           
  6269                           ;main.c: 398: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6270  000FD4  0E20               	movlw	32
  6271  000FD6  EC14  F02E         	call	_btPress
  6272  000FDA  0900               	iorlw	0
  6273  000FDC  B4D8               	btfsc	status,2,c
  6274  000FDE  D1FF               	goto	l1400
  6275  000FE0  0E53               	movlw	low _h_venotinha
  6276  000FE2  0100               	movlb	0	; () banked
  6277  000FE4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6278  000FE6  0E00               	movlw	high _h_venotinha
  6279  000FE8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6280  000FEA  0E01               	movlw	1
  6281  000FEC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6282  000FEE  0E0A               	movlw	10
  6283  000FF0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6284  000FF2  0E0B               	movlw	11
  6285  000FF4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6286  000FF6  0E2D               	movlw	45
  6287  000FF8  EC13  F028         	call	_setRangeValor
  6288                           
  6289                           ;main.c: 399: break;
  6290  000FFC  D1F0               	goto	l1400
  6291  000FFE                     
  6292                           ;main.c: 401: line2[11] = '>';
  6293  000FFE  0E3E               	movlw	62
  6294  001000  0101               	movlb	1	; () banked
  6295  001002  6F87               	movwf	(_line2+11)& (0+255),b
  6296                           
  6297                           ; BSR set to: 1
  6298                           ;main.c: 402: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6299  001004  0E40               	movlw	64
  6300  001006  EC14  F02E         	call	_btPress
  6301  00100A  0900               	iorlw	0
  6302  00100C  B4D8               	btfsc	status,2,c
  6303  00100E  D00E               	goto	l1414
  6304  001010  0EF7               	movlw	low _h_modo_seguranca
  6305  001012  0100               	movlb	0	; () banked
  6306  001014  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6307  001016  0E00               	movlw	high _h_modo_seguranca
  6308  001018  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6309  00101A  0E00               	movlw	0
  6310  00101C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6311  00101E  0E0F               	movlw	15
  6312  001020  6F68               	movwf	setRangeValor@_max& (0+255),b
  6313  001022  0E10               	movlw	16
  6314  001024  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6315  001026  0E2B               	movlw	43
  6316  001028  EC13  F028         	call	_setRangeValor
  6317  00102C                     l1414:
  6318                           
  6319                           ;main.c: 403: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6320  00102C  0E20               	movlw	32
  6321  00102E  EC14  F02E         	call	_btPress
  6322  001032  0900               	iorlw	0
  6323  001034  B4D8               	btfsc	status,2,c
  6324  001036  D1D3               	goto	l1400
  6325  001038  0EF7               	movlw	low _h_modo_seguranca
  6326  00103A  0100               	movlb	0	; () banked
  6327  00103C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6328  00103E  0E00               	movlw	high _h_modo_seguranca
  6329  001040  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6330  001042  0E00               	movlw	0
  6331  001044  6F67               	movwf	setRangeValor@_min& (0+255),b
  6332  001046  0E0F               	movlw	15
  6333  001048  6F68               	movwf	setRangeValor@_max& (0+255),b
  6334  00104A  0E10               	movlw	16
  6335  00104C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6336  00104E  0E2D               	movlw	45
  6337  001050  EC13  F028         	call	_setRangeValor
  6338                           
  6339                           ;main.c: 404: break;
  6340  001054  D1C4               	goto	l1400
  6341  001056                     
  6342                           ;main.c: 406: line3[11] = '>';
  6343  001056  0E3E               	movlw	62
  6344  001058  0101               	movlb	1	; () banked
  6345  00105A  6F72               	movwf	(_line3+11)& (0+255),b
  6346                           
  6347                           ; BSR set to: 1
  6348                           ;main.c: 407: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6349  00105C  0E40               	movlw	64
  6350  00105E  EC14  F02E         	call	_btPress
  6351  001062  0900               	iorlw	0
  6352  001064  B4D8               	btfsc	status,2,c
  6353  001066  D00E               	goto	l1417
  6354  001068  0E50               	movlw	low _h_buzzer
  6355  00106A  0100               	movlb	0	; () banked
  6356  00106C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6357  00106E  0E00               	movlw	high _h_buzzer
  6358  001070  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6359  001072  0E01               	movlw	1
  6360  001074  6F67               	movwf	setRangeValor@_min& (0+255),b
  6361  001076  0E0F               	movlw	15
  6362  001078  6F68               	movwf	setRangeValor@_max& (0+255),b
  6363  00107A  0E11               	movlw	17
  6364  00107C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6365  00107E  0E2B               	movlw	43
  6366  001080  EC13  F028         	call	_setRangeValor
  6367  001084                     l1417:
  6368                           
  6369                           ;main.c: 408: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6370  001084  0E20               	movlw	32
  6371  001086  EC14  F02E         	call	_btPress
  6372  00108A  0900               	iorlw	0
  6373  00108C  B4D8               	btfsc	status,2,c
  6374  00108E  D1A7               	goto	l1400
  6375  001090  0E50               	movlw	low _h_buzzer
  6376  001092  0100               	movlb	0	; () banked
  6377  001094  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6378  001096  0E00               	movlw	high _h_buzzer
  6379  001098  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6380  00109A  0E01               	movlw	1
  6381  00109C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6382  00109E  0E0F               	movlw	15
  6383  0010A0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6384  0010A2  0E11               	movlw	17
  6385  0010A4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6386  0010A6  0E2D               	movlw	45
  6387  0010A8  EC13  F028         	call	_setRangeValor
  6388                           
  6389                           ;main.c: 409: break;
  6390  0010AC  D198               	goto	l1400
  6391  0010AE                     
  6392                           ;main.c: 411: menu = 5;
  6393  0010AE  0E05               	movlw	5
  6394  0010B0  0100               	movlb	0	; () banked
  6395  0010B2  6FFD               	movwf	_menu& (0+255),b
  6396                           
  6397                           ;main.c: 412: line4[11] = '>';
  6398  0010B4  0E3E               	movlw	62
  6399  0010B6  0101               	movlb	1	; () banked
  6400  0010B8  6F5D               	movwf	(_line4+11)& (0+255),b
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;main.c: 413: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6404  0010BA  0E40               	movlw	64
  6405  0010BC  EC14  F02E         	call	_btPress
  6406  0010C0  0900               	iorlw	0
  6407  0010C2  B4D8               	btfsc	status,2,c
  6408  0010C4  D00E               	goto	l1420
  6409  0010C6  0E55               	movlw	low _t_flap_ligado
  6410  0010C8  0100               	movlb	0	; () banked
  6411  0010CA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6412  0010CC  0E00               	movlw	high _t_flap_ligado
  6413  0010CE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6414  0010D0  0E01               	movlw	1
  6415  0010D2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6416  0010D4  0EFA               	movlw	250
  6417  0010D6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6418  0010D8  0E12               	movlw	18
  6419  0010DA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6420  0010DC  0E2B               	movlw	43
  6421  0010DE  EC13  F028         	call	_setRangeValor
  6422  0010E2                     l1420:
  6423                           
  6424                           ;main.c: 414: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6425  0010E2  0E20               	movlw	32
  6426  0010E4  EC14  F02E         	call	_btPress
  6427  0010E8  0900               	iorlw	0
  6428  0010EA  B4D8               	btfsc	status,2,c
  6429  0010EC  D178               	goto	l1400
  6430  0010EE  0E55               	movlw	low _t_flap_ligado
  6431  0010F0  0100               	movlb	0	; () banked
  6432  0010F2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6433  0010F4  0E00               	movlw	high _t_flap_ligado
  6434  0010F6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6435  0010F8  0E01               	movlw	1
  6436  0010FA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6437  0010FC  0EFA               	movlw	250
  6438  0010FE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6439  001100  0E12               	movlw	18
  6440  001102  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6441  001104  0E2D               	movlw	45
  6442  001106  EC13  F028         	call	_setRangeValor
  6443                           
  6444                           ;main.c: 415: break;
  6445  00110A  D169               	goto	l1400
  6446  00110C                     
  6447                           ;main.c: 417: menu = 6;
  6448  00110C  0E06               	movlw	6
  6449  00110E  0100               	movlb	0	; () banked
  6450  001110  6FFD               	movwf	_menu& (0+255),b
  6451                           
  6452                           ;main.c: 418: line1[0] = '>';
  6453  001112  0E3E               	movlw	62
  6454  001114  0101               	movlb	1	; () banked
  6455  001116  6F91               	movwf	_line1& (0+255),b
  6456                           
  6457                           ; BSR set to: 1
  6458                           ;main.c: 419: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6459  001118  0E40               	movlw	64
  6460  00111A  EC14  F02E         	call	_btPress
  6461  00111E  0900               	iorlw	0
  6462  001120  B4D8               	btfsc	status,2,c
  6463  001122  D00E               	goto	l1423
  6464  001124  0E54               	movlw	low _t_flap_intervalo
  6465  001126  0100               	movlb	0	; () banked
  6466  001128  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6467  00112A  0E00               	movlw	high _t_flap_intervalo
  6468  00112C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6469  00112E  0E00               	movlw	0
  6470  001130  6F67               	movwf	setRangeValor@_min& (0+255),b
  6471  001132  0EFA               	movlw	250
  6472  001134  6F68               	movwf	setRangeValor@_max& (0+255),b
  6473  001136  0E14               	movlw	20
  6474  001138  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6475  00113A  0E2B               	movlw	43
  6476  00113C  EC13  F028         	call	_setRangeValor
  6477  001140                     l1423:
  6478                           
  6479                           ;main.c: 420: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6480  001140  0E20               	movlw	32
  6481  001142  EC14  F02E         	call	_btPress
  6482  001146  0900               	iorlw	0
  6483  001148  B4D8               	btfsc	status,2,c
  6484  00114A  D149               	goto	l1400
  6485  00114C  0E54               	movlw	low _t_flap_intervalo
  6486  00114E  0100               	movlb	0	; () banked
  6487  001150  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6488  001152  0E00               	movlw	high _t_flap_intervalo
  6489  001154  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6490  001156  0E00               	movlw	0
  6491  001158  6F67               	movwf	setRangeValor@_min& (0+255),b
  6492  00115A  0EFA               	movlw	250
  6493  00115C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6494  00115E  0E14               	movlw	20
  6495  001160  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6496  001162  0E2D               	movlw	45
  6497  001164  EC13  F028         	call	_setRangeValor
  6498                           
  6499                           ;main.c: 421: break;
  6500  001168  D13A               	goto	l1400
  6501  00116A                     
  6502                           ;main.c: 423: line2[0] = '>';
  6503  00116A  0E3E               	movlw	62
  6504  00116C  0101               	movlb	1	; () banked
  6505  00116E  6F7C               	movwf	_line2& (0+255),b
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;main.c: 424: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6509  001170  0E40               	movlw	64
  6510  001172  EC14  F02E         	call	_btPress
  6511  001176  0900               	iorlw	0
  6512  001178  B4D8               	btfsc	status,2,c
  6513  00117A  D00E               	goto	l1426
  6514  00117C  0EFF               	movlw	low _t_buzzer_religar
  6515  00117E  0100               	movlb	0	; () banked
  6516  001180  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6517  001182  0E00               	movlw	high _t_buzzer_religar
  6518  001184  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6519  001186  0E00               	movlw	0
  6520  001188  6F67               	movwf	setRangeValor@_min& (0+255),b
  6521  00118A  0E1E               	movlw	30
  6522  00118C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6523  00118E  0E15               	movlw	21
  6524  001190  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6525  001192  0E2B               	movlw	43
  6526  001194  EC13  F028         	call	_setRangeValor
  6527  001198                     l1426:
  6528                           
  6529                           ;main.c: 425: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6530  001198  0E20               	movlw	32
  6531  00119A  EC14  F02E         	call	_btPress
  6532  00119E  0900               	iorlw	0
  6533  0011A0  B4D8               	btfsc	status,2,c
  6534  0011A2  D11D               	goto	l1400
  6535  0011A4  0EFF               	movlw	low _t_buzzer_religar
  6536  0011A6  0100               	movlb	0	; () banked
  6537  0011A8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6538  0011AA  0E00               	movlw	high _t_buzzer_religar
  6539  0011AC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6540  0011AE  0E00               	movlw	0
  6541  0011B0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6542  0011B2  0E1E               	movlw	30
  6543  0011B4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6544  0011B6  0E15               	movlw	21
  6545  0011B8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6546  0011BA  0E2D               	movlw	45
  6547  0011BC  EC13  F028         	call	_setRangeValor
  6548                           
  6549                           ;main.c: 426: break;
  6550  0011C0  D10E               	goto	l1400
  6551  0011C2                     
  6552                           ;main.c: 428: line3[0] = '>';
  6553  0011C2  0E3E               	movlw	62
  6554  0011C4  0101               	movlb	1	; () banked
  6555  0011C6  6F67               	movwf	_line3& (0+255),b
  6556                           
  6557                           ; BSR set to: 1
  6558                           ;main.c: 429: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6559  0011C8  0E40               	movlw	64
  6560  0011CA  EC14  F02E         	call	_btPress
  6561  0011CE  0900               	iorlw	0
  6562  0011D0  B4D8               	btfsc	status,2,c
  6563  0011D2  D00E               	goto	l1429
  6564  0011D4  0EF9               	movlw	low _t_temp_automatica
  6565  0011D6  0100               	movlb	0	; () banked
  6566  0011D8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6567  0011DA  0E00               	movlw	high _t_temp_automatica
  6568  0011DC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6569  0011DE  0E00               	movlw	0
  6570  0011E0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6571  0011E2  0EFA               	movlw	250
  6572  0011E4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6573  0011E6  0E16               	movlw	22
  6574  0011E8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6575  0011EA  0E2B               	movlw	43
  6576  0011EC  EC13  F028         	call	_setRangeValor
  6577  0011F0                     l1429:
  6578                           
  6579                           ;main.c: 430: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6580  0011F0  0E20               	movlw	32
  6581  0011F2  EC14  F02E         	call	_btPress
  6582  0011F6  0900               	iorlw	0
  6583  0011F8  B4D8               	btfsc	status,2,c
  6584  0011FA  D0F1               	goto	l1400
  6585  0011FC  0EF9               	movlw	low _t_temp_automatica
  6586  0011FE  0100               	movlb	0	; () banked
  6587  001200  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6588  001202  0E00               	movlw	high _t_temp_automatica
  6589  001204  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6590  001206  0E00               	movlw	0
  6591  001208  6F67               	movwf	setRangeValor@_min& (0+255),b
  6592  00120A  0EFA               	movlw	250
  6593  00120C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6594  00120E  0E16               	movlw	22
  6595  001210  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6596  001212  0E2D               	movlw	45
  6597  001214  EC13  F028         	call	_setRangeValor
  6598                           
  6599                           ;main.c: 431: break;
  6600  001218  D0E2               	goto	l1400
  6601  00121A                     
  6602                           ;main.c: 433: line4[0] = '>';
  6603  00121A  0E3E               	movlw	62
  6604  00121C  0101               	movlb	1	; () banked
  6605  00121E  6F52               	movwf	_line4& (0+255),b
  6606                           
  6607                           ; BSR set to: 1
  6608                           ;main.c: 434: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6609  001220  0E40               	movlw	64
  6610  001222  EC14  F02E         	call	_btPress
  6611  001226  0900               	iorlw	0
  6612  001228  B4D8               	btfsc	status,2,c
  6613  00122A  D00E               	goto	l1432
  6614  00122C  0E4E               	movlw	low _wifi_habilita_alteracao
  6615  00122E  0100               	movlb	0	; () banked
  6616  001230  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6617  001232  0E00               	movlw	high _wifi_habilita_alteracao
  6618  001234  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6619  001236  0E00               	movlw	0
  6620  001238  6F67               	movwf	setRangeValor@_min& (0+255),b
  6621  00123A  0E01               	movlw	1
  6622  00123C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6623  00123E  0E17               	movlw	23
  6624  001240  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6625  001242  0E2B               	movlw	43
  6626  001244  EC13  F028         	call	_setRangeValor
  6627  001248                     l1432:
  6628                           
  6629                           ;main.c: 435: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6630  001248  0E20               	movlw	32
  6631  00124A  EC14  F02E         	call	_btPress
  6632  00124E  0900               	iorlw	0
  6633  001250  B4D8               	btfsc	status,2,c
  6634  001252  D0C5               	goto	l1400
  6635  001254  0E4E               	movlw	low _wifi_habilita_alteracao
  6636  001256  0100               	movlb	0	; () banked
  6637  001258  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6638  00125A  0E00               	movlw	high _wifi_habilita_alteracao
  6639  00125C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6640  00125E  0E00               	movlw	0
  6641  001260  6F67               	movwf	setRangeValor@_min& (0+255),b
  6642  001262  0E01               	movlw	1
  6643  001264  6F68               	movwf	setRangeValor@_max& (0+255),b
  6644  001266  0E17               	movlw	23
  6645  001268  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6646  00126A  0E2D               	movlw	45
  6647  00126C  EC13  F028         	call	_setRangeValor
  6648                           
  6649                           ;main.c: 436: break;
  6650  001270  D0B6               	goto	l1400
  6651  001272                     
  6652                           ;main.c: 438: line1[11] = '>';
  6653  001272  0E3E               	movlw	62
  6654  001274  0101               	movlb	1	; () banked
  6655  001276  6F9C               	movwf	(_line1+11)& (0+255),b
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;main.c: 439: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6659  001278  0E40               	movlw	64
  6660  00127A  EC14  F02E         	call	_btPress
  6661  00127E  0900               	iorlw	0
  6662  001280  B4D8               	btfsc	status,2,c
  6663  001282  D00E               	goto	l1435
  6664  001284  0E4B               	movlw	low _wifi_SENHA
  6665  001286  0100               	movlb	0	; () banked
  6666  001288  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6667  00128A  0E00               	movlw	high _wifi_SENHA
  6668  00128C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6669  00128E  0E01               	movlw	1
  6670  001290  6F67               	movwf	setRangeValor@_min& (0+255),b
  6671  001292  0EFA               	movlw	250
  6672  001294  6F68               	movwf	setRangeValor@_max& (0+255),b
  6673  001296  0E19               	movlw	25
  6674  001298  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6675  00129A  0E2B               	movlw	43
  6676  00129C  EC13  F028         	call	_setRangeValor
  6677  0012A0                     l1435:
  6678                           
  6679                           ;main.c: 440: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6680  0012A0  0E20               	movlw	32
  6681  0012A2  EC14  F02E         	call	_btPress
  6682  0012A6  0900               	iorlw	0
  6683  0012A8  B4D8               	btfsc	status,2,c
  6684  0012AA  D099               	goto	l1400
  6685  0012AC  0E4B               	movlw	low _wifi_SENHA
  6686  0012AE  0100               	movlb	0	; () banked
  6687  0012B0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6688  0012B2  0E00               	movlw	high _wifi_SENHA
  6689  0012B4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6690  0012B6  0E01               	movlw	1
  6691  0012B8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6692  0012BA  0EFA               	movlw	250
  6693  0012BC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6694  0012BE  0E19               	movlw	25
  6695  0012C0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6696  0012C2  0E2D               	movlw	45
  6697  0012C4  EC13  F028         	call	_setRangeValor
  6698                           
  6699                           ;main.c: 441: break;
  6700  0012C8  D08A               	goto	l1400
  6701  0012CA                     
  6702                           ;main.c: 443: line2[11] = '>';
  6703  0012CA  0E3E               	movlw	62
  6704  0012CC  0101               	movlb	1	; () banked
  6705  0012CE  6F87               	movwf	(_line2+11)& (0+255),b
  6706                           
  6707                           ; BSR set to: 1
  6708                           ;main.c: 444: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6709  0012D0  0E40               	movlw	64
  6710  0012D2  EC14  F02E         	call	_btPress
  6711  0012D6  0900               	iorlw	0
  6712  0012D8  B4D8               	btfsc	status,2,c
  6713  0012DA  D00E               	goto	l1438
  6714  0012DC  0E4F               	movlw	low _h_subir_temp_automatica
  6715  0012DE  0100               	movlb	0	; () banked
  6716  0012E0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6717  0012E2  0E00               	movlw	high _h_subir_temp_automatica
  6718  0012E4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6719  0012E6  0E00               	movlw	0
  6720  0012E8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6721  0012EA  0E0F               	movlw	15
  6722  0012EC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6723  0012EE  0E1B               	movlw	27
  6724  0012F0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6725  0012F2  0E2B               	movlw	43
  6726  0012F4  EC13  F028         	call	_setRangeValor
  6727  0012F8                     l1438:
  6728                           
  6729                           ;main.c: 445: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6730  0012F8  0E20               	movlw	32
  6731  0012FA  EC14  F02E         	call	_btPress
  6732  0012FE  0900               	iorlw	0
  6733  001300  B4D8               	btfsc	status,2,c
  6734  001302  D06D               	goto	l1400
  6735  001304  0E4F               	movlw	low _h_subir_temp_automatica
  6736  001306  0100               	movlb	0	; () banked
  6737  001308  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6738  00130A  0E00               	movlw	high _h_subir_temp_automatica
  6739  00130C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6740  00130E  0E00               	movlw	0
  6741  001310  6F67               	movwf	setRangeValor@_min& (0+255),b
  6742  001312  0E0F               	movlw	15
  6743  001314  6F68               	movwf	setRangeValor@_max& (0+255),b
  6744  001316  0E1B               	movlw	27
  6745  001318  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6746  00131A  0E2D               	movlw	45
  6747  00131C  EC13  F028         	call	_setRangeValor
  6748                           
  6749                           ;main.c: 446: break;
  6750  001320  D05E               	goto	l1400
  6751  001322                     
  6752                           ;main.c: 448: line3[11] = '>';
  6753  001322  0E3E               	movlw	62
  6754  001324  0101               	movlb	1	; () banked
  6755  001326  6F72               	movwf	(_line3+11)& (0+255),b
  6756                           
  6757                           ; BSR set to: 1
  6758                           ;main.c: 449: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6759  001328  0E40               	movlw	64
  6760  00132A  EC14  F02E         	call	_btPress
  6761  00132E  0900               	iorlw	0
  6762  001330  B4D8               	btfsc	status,2,c
  6763  001332  D00E               	goto	l1441
  6764  001334  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6765  001336  0100               	movlb	0	; () banked
  6766  001338  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6767  00133A  0E00               	movlw	high _t_religar_ventoinha_automatica
  6768  00133C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6769  00133E  0E00               	movlw	0
  6770  001340  6F67               	movwf	setRangeValor@_min& (0+255),b
  6771  001342  0E3C               	movlw	60
  6772  001344  6F68               	movwf	setRangeValor@_max& (0+255),b
  6773  001346  0E1C               	movlw	28
  6774  001348  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6775  00134A  0E2B               	movlw	43
  6776  00134C  EC13  F028         	call	_setRangeValor
  6777  001350                     l1441:
  6778                           
  6779                           ;main.c: 450: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6780  001350  0E20               	movlw	32
  6781  001352  EC14  F02E         	call	_btPress
  6782  001356  0900               	iorlw	0
  6783  001358  B4D8               	btfsc	status,2,c
  6784  00135A  D041               	goto	l1400
  6785  00135C  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6786  00135E  0100               	movlb	0	; () banked
  6787  001360  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6788  001362  0E00               	movlw	high _t_religar_ventoinha_automatica
  6789  001364  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6790  001366  0E00               	movlw	0
  6791  001368  6F67               	movwf	setRangeValor@_min& (0+255),b
  6792  00136A  0E3C               	movlw	60
  6793  00136C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6794  00136E  0E1C               	movlw	28
  6795  001370  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6796  001372  0E2D               	movlw	45
  6797  001374  EC13  F028         	call	_setRangeValor
  6798                           
  6799                           ;main.c: 451: break;
  6800  001378  D032               	goto	l1400
  6801  00137A  0E01               	movlw	1
  6802  00137C  6E45               	movwf	_opcaomenu,c
  6803                           
  6804                           ;main.c: 453: }
  6805  00137E  D02F               	goto	l1400
  6806  001380                     l1396:
  6807  001380  5045               	movf	_opcaomenu,w,c
  6808                           
  6809                           ; Switch size 1, requested type "space"
  6810                           ; Number of cases is 15, Range of values is 1 to 15
  6811                           ; switch strategies available:
  6812                           ; Name         Instructions Cycles
  6813                           ; simple_byte           46    24 (average)
  6814                           ;	Chosen strategy is simple_byte
  6815  001382  0A01               	xorlw	1	; case 1
  6816  001384  B4D8               	btfsc	status,2,c
  6817  001386  D55C               	goto	l1397
  6818  001388  0A03               	xorlw	3	; case 2
  6819  00138A  B4D8               	btfsc	status,2,c
  6820  00138C  D588               	goto	l1401
  6821  00138E  0A01               	xorlw	1	; case 3
  6822  001390  B4D8               	btfsc	status,2,c
  6823  001392  D5B1               	goto	l1404
  6824  001394  0A07               	xorlw	7	; case 4
  6825  001396  B4D8               	btfsc	status,2,c
  6826  001398  D5DA               	goto	l1407
  6827  00139A  0A01               	xorlw	1	; case 5
  6828  00139C  B4D8               	btfsc	status,2,c
  6829  00139E  D603               	goto	l1410
  6830  0013A0  0A03               	xorlw	3	; case 6
  6831  0013A2  B4D8               	btfsc	status,2,c
  6832  0013A4  D62C               	goto	l1413
  6833  0013A6  0A01               	xorlw	1	; case 7
  6834  0013A8  B4D8               	btfsc	status,2,c
  6835  0013AA  D655               	goto	l1416
  6836  0013AC  0A0F               	xorlw	15	; case 8
  6837  0013AE  B4D8               	btfsc	status,2,c
  6838  0013B0  D67E               	goto	l1419
  6839  0013B2  0A01               	xorlw	1	; case 9
  6840  0013B4  B4D8               	btfsc	status,2,c
  6841  0013B6  D6AA               	goto	l1422
  6842  0013B8  0A03               	xorlw	3	; case 10
  6843  0013BA  B4D8               	btfsc	status,2,c
  6844  0013BC  D6D6               	goto	l1425
  6845  0013BE  0A01               	xorlw	1	; case 11
  6846  0013C0  B4D8               	btfsc	status,2,c
  6847  0013C2  D6FF               	goto	l1428
  6848  0013C4  0A07               	xorlw	7	; case 12
  6849  0013C6  B4D8               	btfsc	status,2,c
  6850  0013C8  D728               	goto	l1431
  6851  0013CA  0A01               	xorlw	1	; case 13
  6852  0013CC  B4D8               	btfsc	status,2,c
  6853  0013CE  D751               	goto	l1434
  6854  0013D0  0A03               	xorlw	3	; case 14
  6855  0013D2  B4D8               	btfsc	status,2,c
  6856  0013D4  D77A               	goto	l1437
  6857  0013D6  0A01               	xorlw	1	; case 15
  6858  0013D8  B4D8               	btfsc	status,2,c
  6859  0013DA  D7A3               	goto	l1440
  6860  0013DC  D7CE               	goto	l1443
  6861  0013DE                     l1400:
  6862                           
  6863                           ;main.c: 454: if (btPress(16)) opcaomenu++;
  6864  0013DE  0E10               	movlw	16
  6865  0013E0  EC14  F02E         	call	_btPress
  6866  0013E4  0900               	iorlw	0
  6867  0013E6  A4D8               	btfss	status,2,c
  6868  0013E8  2A45               	incf	_opcaomenu,f,c
  6869                           
  6870                           ;main.c: 455: if (btPress(1)) opcaomenu--;
  6871  0013EA  0E01               	movlw	1
  6872  0013EC  EC14  F02E         	call	_btPress
  6873  0013F0  0900               	iorlw	0
  6874  0013F2  A4D8               	btfss	status,2,c
  6875  0013F4  0645               	decf	_opcaomenu,f,c
  6876                           
  6877                           ;main.c: 456: if (btPress(8)) {
  6878  0013F6  0E08               	movlw	8
  6879  0013F8  EC14  F02E         	call	_btPress
  6880  0013FC  0900               	iorlw	0
  6881  0013FE  B4D8               	btfsc	status,2,c
  6882  001400  D102               	goto	l1476
  6883                           
  6884                           ;main.c: 457: menu = 0;
  6885  001402  0E00               	movlw	0
  6886  001404  0100               	movlb	0	; () banked
  6887  001406  6FFD               	movwf	_menu& (0+255),b
  6888                           
  6889                           ;main.c: 458: senha_desbloqueio_func = 0;
  6890  001408  0E00               	movlw	0
  6891  00140A  6E4D               	movwf	_senha_desbloqueio_func,c
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;main.c: 459: }
  6895                           ;main.c: 460: } else
  6896  00140C  D0FC               	goto	l1476
  6897  00140E                     l1392:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;main.c: 464: if (menu == 8 || menu == 9) {
  6901                           
  6902                           ; BSR set to: 0
  6903  00140E  0E08               	movlw	8
  6904  001410  19FD               	xorwf	_menu& (0+255),w,b
  6905  001412  B4D8               	btfsc	status,2,c
  6906  001414  D030               	goto	l1451
  6907                           
  6908                           ; BSR set to: 0
  6909  001416  0E09               	movlw	9
  6910  001418  19FD               	xorwf	_menu& (0+255),w,b
  6911  00141A  B4D8               	btfsc	status,2,c
  6912  00141C  D02C               	goto	l1451
  6913  00141E  D047               	goto	l1448
  6914  001420                     
  6915                           ;main.c: 467: menu = 8;
  6916                           
  6917                           ; BSR set to: 0
  6918  001420  0E08               	movlw	8
  6919  001422  0100               	movlb	0	; () banked
  6920  001424  6FFD               	movwf	_menu& (0+255),b
  6921                           
  6922                           ;main.c: 468: break;
  6923  001426  D02F               	goto	l1453
  6924  001428                     
  6925                           ;main.c: 470: menu = 9;
  6926                           
  6927                           ; BSR set to: 0
  6928  001428  0E09               	movlw	9
  6929  00142A  0100               	movlb	0	; () banked
  6930  00142C  6FFD               	movwf	_menu& (0+255),b
  6931                           
  6932                           ;main.c: 471: line1[0] = '>';
  6933  00142E  0E3E               	movlw	62
  6934  001430  0101               	movlb	1	; () banked
  6935  001432  6F91               	movwf	_line1& (0+255),b
  6936                           
  6937                           ; BSR set to: 1
  6938                           ;main.c: 472: if (btPress(2)) {
  6939  001434  0E02               	movlw	2
  6940  001436  EC14  F02E         	call	_btPress
  6941  00143A  0900               	iorlw	0
  6942  00143C  B4D8               	btfsc	status,2,c
  6943  00143E  D023               	goto	l1453
  6944                           
  6945                           ;main.c: 473: LATAbits.LATA4 = 1;
  6946  001440  8889               	bsf	3977,4,c	;volatile
  6947                           
  6948                           ;main.c: 474: delay(100);
  6949  001442  0E00               	movlw	0
  6950  001444  0100               	movlb	0	; () banked
  6951  001446  6F61               	movwf	(delay@x+1)& (0+255),b
  6952  001448  0E64               	movlw	100
  6953  00144A  6F60               	movwf	delay@x& (0+255),b
  6954  00144C  EC6B  F02D         	call	_delay	;wreg free
  6955                           
  6956                           ;main.c: 475: LATAbits.LATA4 = 0;
  6957  001450  9889               	bcf	3977,4,c	;volatile
  6958                           
  6959                           ;main.c: 476: delay(800);
  6960  001452  0E03               	movlw	3
  6961  001454  0100               	movlb	0	; () banked
  6962  001456  6F61               	movwf	(delay@x+1)& (0+255),b
  6963  001458  0E20               	movlw	32
  6964  00145A  6F60               	movwf	delay@x& (0+255),b
  6965  00145C  EC6B  F02D         	call	_delay	;wreg free
  6966                           
  6967                           ;main.c: 477: menu = 10;
  6968  001460  0E0A               	movlw	10
  6969  001462  0100               	movlb	0	; () banked
  6970  001464  6FFD               	movwf	_menu& (0+255),b
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;main.c: 478: f_wifi_processo = 0;
  6974  001466  0E00               	movlw	0
  6975  001468  6E3D               	movwf	_f_wifi_processo,c
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;main.c: 479: t_wifi_restart = 15;
  6979  00146A  0E0F               	movlw	15
  6980  00146C  6E3E               	movwf	_t_wifi_restart,c
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;main.c: 480: }
  6984                           ;main.c: 481: break;
  6985  00146E  D00B               	goto	l1453
  6986  001470                     
  6987                           ;main.c: 483: opcaomenu = 1;
  6988                           
  6989                           ; BSR set to: 0
  6990  001470  0E01               	movlw	1
  6991  001472  6E45               	movwf	_opcaomenu,c
  6992                           
  6993                           ;main.c: 486: }
  6994                           
  6995                           ;main.c: 485: break;
  6996  001474  D008               	goto	l1453
  6997  001476                     l1451:
  6998  001476  5045               	movf	_opcaomenu,w,c
  6999                           
  7000                           ; Switch size 1, requested type "space"
  7001                           ; Number of cases is 2, Range of values is 1 to 2
  7002                           ; switch strategies available:
  7003                           ; Name         Instructions Cycles
  7004                           ; simple_byte            7     4 (average)
  7005                           ;	Chosen strategy is simple_byte
  7006  001478  0A01               	xorlw	1	; case 1
  7007  00147A  B4D8               	btfsc	status,2,c
  7008  00147C  D7D1               	goto	l1452
  7009  00147E  0A03               	xorlw	3	; case 2
  7010  001480  B4D8               	btfsc	status,2,c
  7011  001482  D7D2               	goto	l1454
  7012  001484  D7F5               	goto	l1456
  7013  001486                     l1453:
  7014                           
  7015                           ;main.c: 487: if (btPress(16)) opcaomenu++;
  7016  001486  0E10               	movlw	16
  7017  001488  EC14  F02E         	call	_btPress
  7018  00148C  0900               	iorlw	0
  7019  00148E  A4D8               	btfss	status,2,c
  7020  001490  2A45               	incf	_opcaomenu,f,c
  7021                           
  7022                           ;main.c: 488: if (btPress(1)) opcaomenu--;
  7023  001492  0E01               	movlw	1
  7024  001494  EC14  F02E         	call	_btPress
  7025  001498  0900               	iorlw	0
  7026  00149A  A4D8               	btfss	status,2,c
  7027  00149C  0645               	decf	_opcaomenu,f,c
  7028                           
  7029                           ;main.c: 489: if (btPress(8)) {
  7030  00149E  0E08               	movlw	8
  7031  0014A0  EC14  F02E         	call	_btPress
  7032  0014A4  0900               	iorlw	0
  7033  0014A6  B4D8               	btfsc	status,2,c
  7034  0014A8  D0AE               	goto	l1476
  7035                           
  7036                           ;main.c: 490: menu = 3;
  7037  0014AA  0E03               	movlw	3
  7038  0014AC  D0AA               	goto	L11
  7039  0014AE                     l1448:
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;main.c: 496: if (menu == 11) {
  7043                           
  7044                           ; BSR set to: 0
  7045  0014AE  0E0B               	movlw	11
  7046  0014B0  19FD               	xorwf	_menu& (0+255),w,b
  7047  0014B2  B4D8               	btfsc	status,2,c
  7048  0014B4  D088               	goto	l1462
  7049  0014B6  D0A7               	goto	l1476
  7050  0014B8                     
  7051                           ;main.c: 499: line1[0] = '>';
  7052                           
  7053                           ; BSR set to: 0
  7054  0014B8  0E3E               	movlw	62
  7055  0014BA  0101               	movlb	1	; () banked
  7056  0014BC  6F91               	movwf	_line1& (0+255),b
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;main.c: 500: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7060  0014BE  0E40               	movlw	64
  7061  0014C0  EC14  F02E         	call	_btPress
  7062  0014C4  0900               	iorlw	0
  7063  0014C6  B4D8               	btfsc	status,2,c
  7064  0014C8  D00E               	goto	l1464
  7065  0014CA  0E58               	movlw	low _t_fim_fase1
  7066  0014CC  0100               	movlb	0	; () banked
  7067  0014CE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7068  0014D0  0E00               	movlw	high _t_fim_fase1
  7069  0014D2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7070  0014D4  0E00               	movlw	0
  7071  0014D6  6F67               	movwf	setRangeValor@_min& (0+255),b
  7072  0014D8  0E1E               	movlw	30
  7073  0014DA  6F68               	movwf	setRangeValor@_max& (0+255),b
  7074  0014DC  0E08               	movlw	8
  7075  0014DE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7076  0014E0  0E2B               	movlw	43
  7077  0014E2  EC13  F028         	call	_setRangeValor
  7078  0014E6                     l1464:
  7079                           
  7080                           ;main.c: 501: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7081  0014E6  0E20               	movlw	32
  7082  0014E8  EC14  F02E         	call	_btPress
  7083  0014EC  0900               	iorlw	0
  7084  0014EE  B4D8               	btfsc	status,2,c
  7085  0014F0  D075               	goto	l1466
  7086  0014F2  0E58               	movlw	low _t_fim_fase1
  7087  0014F4  0100               	movlb	0	; () banked
  7088  0014F6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7089  0014F8  0E00               	movlw	high _t_fim_fase1
  7090  0014FA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7091  0014FC  0E00               	movlw	0
  7092  0014FE  6F67               	movwf	setRangeValor@_min& (0+255),b
  7093  001500  0E1E               	movlw	30
  7094  001502  6F68               	movwf	setRangeValor@_max& (0+255),b
  7095  001504  0E08               	movlw	8
  7096  001506  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7097  001508  0E2D               	movlw	45
  7098  00150A  EC13  F028         	call	_setRangeValor
  7099                           
  7100                           ;main.c: 502: break;
  7101  00150E  D066               	goto	l1466
  7102  001510                     
  7103                           ;main.c: 504: line2[0] = '>';
  7104  001510  0E3E               	movlw	62
  7105  001512  0101               	movlb	1	; () banked
  7106  001514  6F7C               	movwf	_line2& (0+255),b
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;main.c: 505: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7110  001516  0E40               	movlw	64
  7111  001518  EC14  F02E         	call	_btPress
  7112  00151C  0900               	iorlw	0
  7113  00151E  B4D8               	btfsc	status,2,c
  7114  001520  D00E               	goto	l1468
  7115  001522  0E57               	movlw	low _t_fim_fase2
  7116  001524  0100               	movlb	0	; () banked
  7117  001526  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7118  001528  0E00               	movlw	high _t_fim_fase2
  7119  00152A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7120  00152C  0E00               	movlw	0
  7121  00152E  6F67               	movwf	setRangeValor@_min& (0+255),b
  7122  001530  0E1E               	movlw	30
  7123  001532  6F68               	movwf	setRangeValor@_max& (0+255),b
  7124  001534  0E09               	movlw	9
  7125  001536  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7126  001538  0E2B               	movlw	43
  7127  00153A  EC13  F028         	call	_setRangeValor
  7128  00153E                     l1468:
  7129                           
  7130                           ;main.c: 506: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7131  00153E  0E20               	movlw	32
  7132  001540  EC14  F02E         	call	_btPress
  7133  001544  0900               	iorlw	0
  7134  001546  B4D8               	btfsc	status,2,c
  7135  001548  D049               	goto	l1466
  7136  00154A  0E57               	movlw	low _t_fim_fase2
  7137  00154C  0100               	movlb	0	; () banked
  7138  00154E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7139  001550  0E00               	movlw	high _t_fim_fase2
  7140  001552  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7141  001554  0E00               	movlw	0
  7142  001556  6F67               	movwf	setRangeValor@_min& (0+255),b
  7143  001558  0E1E               	movlw	30
  7144  00155A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7145  00155C  0E09               	movlw	9
  7146  00155E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7147  001560  0E2D               	movlw	45
  7148  001562  EC13  F028         	call	_setRangeValor
  7149                           
  7150                           ;main.c: 507: break;
  7151  001566  D03A               	goto	l1466
  7152  001568                     
  7153                           ;main.c: 509: line3[0] = '>';
  7154  001568  0E3E               	movlw	62
  7155  00156A  0101               	movlb	1	; () banked
  7156  00156C  6F67               	movwf	_line3& (0+255),b
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;main.c: 510: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7160  00156E  0E40               	movlw	64
  7161  001570  EC14  F02E         	call	_btPress
  7162  001574  0900               	iorlw	0
  7163  001576  B4D8               	btfsc	status,2,c
  7164  001578  D00E               	goto	l1471
  7165  00157A  0E56               	movlw	low _t_fim_fase3
  7166  00157C  0100               	movlb	0	; () banked
  7167  00157E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7168  001580  0E00               	movlw	high _t_fim_fase3
  7169  001582  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7170  001584  0E00               	movlw	0
  7171  001586  6F67               	movwf	setRangeValor@_min& (0+255),b
  7172  001588  0E1E               	movlw	30
  7173  00158A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7174  00158C  0E0A               	movlw	10
  7175  00158E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7176  001590  0E2B               	movlw	43
  7177  001592  EC13  F028         	call	_setRangeValor
  7178  001596                     l1471:
  7179                           
  7180                           ;main.c: 511: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7181  001596  0E20               	movlw	32
  7182  001598  EC14  F02E         	call	_btPress
  7183  00159C  0900               	iorlw	0
  7184  00159E  B4D8               	btfsc	status,2,c
  7185  0015A0  D01D               	goto	l1466
  7186  0015A2  0E56               	movlw	low _t_fim_fase3
  7187  0015A4  0100               	movlb	0	; () banked
  7188  0015A6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7189  0015A8  0E00               	movlw	high _t_fim_fase3
  7190  0015AA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7191  0015AC  0E00               	movlw	0
  7192  0015AE  6F67               	movwf	setRangeValor@_min& (0+255),b
  7193  0015B0  0E1E               	movlw	30
  7194  0015B2  6F68               	movwf	setRangeValor@_max& (0+255),b
  7195  0015B4  0E0A               	movlw	10
  7196  0015B6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7197  0015B8  0E2D               	movlw	45
  7198  0015BA  EC13  F028         	call	_setRangeValor
  7199                           
  7200                           ;main.c: 512: break;
  7201  0015BE  D00E               	goto	l1466
  7202  0015C0  0E01               	movlw	1
  7203  0015C2  6E45               	movwf	_opcaomenu,c
  7204                           
  7205                           ;main.c: 514: }
  7206  0015C4  D00B               	goto	l1466
  7207  0015C6                     l1462:
  7208  0015C6  5045               	movf	_opcaomenu,w,c
  7209                           
  7210                           ; Switch size 1, requested type "space"
  7211                           ; Number of cases is 3, Range of values is 1 to 3
  7212                           ; switch strategies available:
  7213                           ; Name         Instructions Cycles
  7214                           ; simple_byte           10     6 (average)
  7215                           ;	Chosen strategy is simple_byte
  7216  0015C8  0A01               	xorlw	1	; case 1
  7217  0015CA  B4D8               	btfsc	status,2,c
  7218  0015CC  D775               	goto	l1463
  7219  0015CE  0A03               	xorlw	3	; case 2
  7220  0015D0  B4D8               	btfsc	status,2,c
  7221  0015D2  D79E               	goto	l1467
  7222  0015D4  0A01               	xorlw	1	; case 3
  7223  0015D6  B4D8               	btfsc	status,2,c
  7224  0015D8  D7C7               	goto	l1470
  7225  0015DA  D7F2               	goto	l1473
  7226  0015DC                     l1466:
  7227                           
  7228                           ;main.c: 515: if (btPress(16)) opcaomenu++;
  7229  0015DC  0E10               	movlw	16
  7230  0015DE  EC14  F02E         	call	_btPress
  7231  0015E2  0900               	iorlw	0
  7232  0015E4  A4D8               	btfss	status,2,c
  7233  0015E6  2A45               	incf	_opcaomenu,f,c
  7234                           
  7235                           ;main.c: 516: if (btPress(1)) opcaomenu--;
  7236  0015E8  0E01               	movlw	1
  7237  0015EA  EC14  F02E         	call	_btPress
  7238  0015EE  0900               	iorlw	0
  7239  0015F0  A4D8               	btfss	status,2,c
  7240  0015F2  0645               	decf	_opcaomenu,f,c
  7241                           
  7242                           ;main.c: 517: if (btPress(8)) {
  7243  0015F4  0E08               	movlw	8
  7244  0015F6  EC14  F02E         	call	_btPress
  7245  0015FA  0900               	iorlw	0
  7246  0015FC  B4D8               	btfsc	status,2,c
  7247  0015FE  D003               	goto	l1476
  7248                           
  7249                           ;main.c: 518: menu = 2;
  7250  001600  0E02               	movlw	2
  7251  001602                     L11:
  7252  001602  0100               	movlb	0	; () banked
  7253  001604  6FFD               	movwf	_menu& (0+255),b
  7254  001606                     l1476:
  7255                           
  7256                           ;main.c: 519: }
  7257                           ;main.c: 520: }
  7258                           ;main.c: 521: updateLeds();
  7259                           
  7260                           ; BSR set to: 0
  7261                           
  7262                           ; BSR set to: 0
  7263                           
  7264                           ; BSR set to: 0
  7265                           
  7266                           ; BSR set to: 0
  7267                           
  7268                           ; BSR set to: 0
  7269  001606  ECF5  F02C         	call	_updateLeds	;wreg free
  7270                           
  7271                           ;main.c: 522: atualizaLCD(line1, line2, line3, line4);
  7272  00160A  0E91               	movlw	low _line1
  7273  00160C  0100               	movlb	0	; () banked
  7274  00160E  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7275  001610  0E01               	movlw	high _line1
  7276  001612  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7277  001614  0E7C               	movlw	low _line2
  7278  001616  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7279  001618  0E01               	movlw	high _line2
  7280  00161A  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7281  00161C  0E67               	movlw	low _line3
  7282  00161E  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7283  001620  0E01               	movlw	high _line3
  7284  001622  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7285  001624  0E52               	movlw	low _line4
  7286  001626  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7287  001628  0E01               	movlw	high _line4
  7288  00162A  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7289  00162C  ECEA  F025         	call	_atualizaLCD	;wreg free
  7290  001630  EF9F  F001         	goto	l1285
  7291  001634                     __end_of_main:
  7292                           	opt stack 0
  7293                           tblptru	equ	0xFF8
  7294                           tblptrh	equ	0xFF7
  7295                           tblptrl	equ	0xFF6
  7296                           tablat	equ	0xFF5
  7297                           prodh	equ	0xFF4
  7298                           prodl	equ	0xFF3
  7299                           intcon	equ	0xFF2
  7300                           intcon2	equ	0xFF1
  7301                           intcon3	equ	0xFF0
  7302                           postinc0	equ	0xFEE
  7303                           wreg	equ	0xFE8
  7304                           postdec1	equ	0xFE5
  7305                           fsr1l	equ	0xFE1
  7306                           indf2	equ	0xFDF
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function _updateLeds *****************
  7312 ;; Defined at:
  7313 ;;		line 27 in file "src/Led_display.h"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0
  7328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7330 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7331 ;;Total ram usage:        0 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    8
  7334 ;; This function calls:
  7335 ;;		_I2C_Start
  7336 ;;		_I2C_Stop
  7337 ;;		_I2C_Write
  7338 ;; This function is called by:
  7339 ;;		_main
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text1
  7344  0059EA                     __ptext1:
  7345                           	opt stack 0
  7346  0059EA                     _updateLeds:
  7347                           	opt stack 22
  7348                           
  7349                           ;Led_display.h: 29: if (_led != leds) {
  7350                           
  7351                           ;incstack = 0
  7352  0059EA  5043               	movf	_leds,w,c
  7353  0059EC  185C               	xorwf	__led,w,c
  7354  0059EE  B4D8               	btfsc	status,2,c
  7355  0059F0  0012               	return	
  7356                           
  7357                           ;Led_display.h: 30: I2C_Start();
  7358  0059F2  EC69  F02E         	call	_I2C_Start	;wreg free
  7359                           
  7360                           ;Led_display.h: 31: I2C_Write(0x46);
  7361  0059F6  0E00               	movlw	0
  7362  0059F8  0100               	movlb	0	; () banked
  7363  0059FA  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7364  0059FC  0E46               	movlw	70
  7365  0059FE  6F61               	movwf	I2C_Write@d& (0+255),b
  7366  005A00  EC57  F02E         	call	_I2C_Write	;wreg free
  7367                           
  7368                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7369  005A04  C043  F061         	movff	_leds,I2C_Write@d
  7370  005A08  0100               	movlb	0	; () banked
  7371  005A0A  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7372  005A0C  EC57  F02E         	call	_I2C_Write	;wreg free
  7373                           
  7374                           ;Led_display.h: 33: I2C_Stop();
  7375  005A10  EC65  F02E         	call	_I2C_Stop	;wreg free
  7376                           
  7377                           ;Led_display.h: 34: _led = leds;
  7378  005A14  C043  F05C         	movff	_leds,__led
  7379  005A18  0012               	return	
  7380  005A1A                     __end_of_updateLeds:
  7381                           	opt stack 0
  7382                           tblptru	equ	0xFF8
  7383                           tblptrh	equ	0xFF7
  7384                           tblptrl	equ	0xFF6
  7385                           tablat	equ	0xFF5
  7386                           prodh	equ	0xFF4
  7387                           prodl	equ	0xFF3
  7388                           intcon	equ	0xFF2
  7389                           intcon2	equ	0xFF1
  7390                           intcon3	equ	0xFF0
  7391                           postinc0	equ	0xFEE
  7392                           wreg	equ	0xFE8
  7393                           postdec1	equ	0xFE5
  7394                           fsr1l	equ	0xFE1
  7395                           indf2	equ	0xFDF
  7396                           fsr2h	equ	0xFDA
  7397                           fsr2l	equ	0xFD9
  7398                           status	equ	0xFD8
  7399                           
  7400 ;; *************** function _setUmidade *****************
  7401 ;; Defined at:
  7402 ;;		line 44 in file "src/FuncoesControlador.h"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  tp              1    wreg     unsigned char 
  7405 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7406 ;;		 -> umidajt(1), 
  7407 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7408 ;;		 -> tempajt(1), 
  7409 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7410 ;;		 -> clima(1), 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  tp              1   14[BANK0 ] unsigned char 
  7413 ;;  _umd            1   25[BANK0 ] unsigned char 
  7414 ;;  _clim           1   24[BANK0 ] unsigned char 
  7415 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7425 ;;      Params:         0       6       0       0       0       0       0       0       0
  7426 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7428 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7429 ;;Total ram usage:       18 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    9
  7432 ;; This function calls:
  7433 ;;		_tabelaUmidade
  7434 ;;		_writeEEPROM_ext
  7435 ;; This function is called by:
  7436 ;;		_main
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text2
  7441  004700                     __ptext2:
  7442                           	opt stack 0
  7443  004700                     _setUmidade:
  7444                           	opt stack 21
  7445                           
  7446                           ;incstack = 0
  7447                           ;setUmidade@tp stored from wreg
  7448  004700  0100               	movlb	0	; () banked
  7449  004702  6F6E               	movwf	setUmidade@tp& (0+255),b
  7450                           
  7451                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7452  004704  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7453  004708  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7454  00470C  50DF               	movf	indf2,w,c
  7455  00470E  0100               	movlb	0	; () banked
  7456  004710  6F79               	movwf	setUmidade@_umd& (0+255),b
  7457                           
  7458                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7459  004712  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7460  004716  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7461  00471A  50DF               	movf	indf2,w,c
  7462  00471C  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7463                           
  7464                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7465  00471E  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7466  004722  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7467  004726  50DF               	movf	indf2,w,c
  7468  004728  6F78               	movwf	setUmidade@_clim& (0+255),b
  7469                           
  7470                           ;FuncoesControlador.h: 49: switch (tp) {
  7471  00472A  D05C               	goto	l914
  7472  00472C                     
  7473                           ; BSR set to: 0
  7474                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7475                           
  7476                           ; BSR set to: 0
  7477  00472C  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7478  00472E  A4D8               	btfss	status,2,c
  7479  004730  D00F               	goto	l916
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7483  004732  0E64               	movlw	100
  7484  004734  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7485  004736  D005               	goto	l918
  7486                           
  7487                           ; BSR set to: 0
  7488  004738  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7489  00473A  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7490  00473E  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7491  004740  D004               	goto	l920
  7492  004742                     l918:
  7493                           
  7494                           ; BSR set to: 0
  7495                           
  7496                           ; BSR set to: 0
  7497  004742  0E00               	movlw	0
  7498  004744  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7499  004746  0E0A               	movlw	10
  7500  004748  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7501  00474A                     l920:
  7502                           
  7503                           ; BSR set to: 0
  7504                           
  7505                           ; BSR set to: 0
  7506  00474A  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7507                           
  7508                           ;FuncoesControlador.h: 53: } else {
  7509  00474E  D00E               	goto	l921
  7510  004750                     l916:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 60 : ++_umd;
  7514                           
  7515                           ; BSR set to: 0
  7516  004750  0E78               	movlw	120
  7517  004752  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7518  004754  D005               	goto	l923
  7519                           
  7520                           ; BSR set to: 0
  7521  004756  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7522  004758  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7523  00475C  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7524  00475E  D004               	goto	l925
  7525  004760                     l923:
  7526                           
  7527                           ; BSR set to: 0
  7528                           
  7529                           ; BSR set to: 0
  7530  004760  0E00               	movlw	0
  7531  004762  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7532  004764  0E3C               	movlw	60
  7533  004766  6F71               	movwf	_setUmidade$1298& (0+255),b
  7534  004768                     l925:
  7535                           
  7536                           ; BSR set to: 0
  7537                           
  7538                           ; BSR set to: 0
  7539  004768  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7540  00476C                     l921:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;FuncoesControlador.h: 55: }
  7544                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7545                           
  7546                           ; BSR set to: 0
  7547  00476C  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7548  004770  0E02               	movlw	2
  7549  004772  EC4B  F02C         	call	_writeEEPROM_ext
  7550                           
  7551                           ;FuncoesControlador.h: 58: break;
  7552  004776  D040               	goto	l926
  7553  004778                     
  7554                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7555  004778  0100               	movlb	0	; () banked
  7556  00477A  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7557  00477C  A4D8               	btfss	status,2,c
  7558  00477E  D00F               	goto	l928
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7562  004780  0E0A               	movlw	10
  7563  004782  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7564  004784  D005               	goto	l930
  7565                           
  7566                           ; BSR set to: 0
  7567  004786  0779               	decf	setUmidade@_umd& (0+255),f,b
  7568  004788  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7569  00478C  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7570  00478E  D004               	goto	l932
  7571  004790                     l930:
  7572                           
  7573                           ; BSR set to: 0
  7574                           
  7575                           ; BSR set to: 0
  7576  004790  0E00               	movlw	0
  7577  004792  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7578  004794  0E64               	movlw	100
  7579  004796  6F73               	movwf	_setUmidade$1299& (0+255),b
  7580  004798                     l932:
  7581                           
  7582                           ; BSR set to: 0
  7583                           
  7584                           ; BSR set to: 0
  7585  004798  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7586                           
  7587                           ;FuncoesControlador.h: 62: } else {
  7588  00479C  D00E               	goto	l933
  7589  00479E                     l928:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;FuncoesControlador.h: 63: _umd = (_umd <= 60) ? 120 : --_umd;
  7593                           
  7594                           ; BSR set to: 0
  7595  00479E  0E3C               	movlw	60
  7596  0047A0  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7597  0047A2  D005               	goto	l935
  7598                           
  7599                           ; BSR set to: 0
  7600  0047A4  0779               	decf	setUmidade@_umd& (0+255),f,b
  7601  0047A6  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7602  0047AA  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7603  0047AC  D004               	goto	l937
  7604  0047AE                     l935:
  7605                           
  7606                           ; BSR set to: 0
  7607                           
  7608                           ; BSR set to: 0
  7609  0047AE  0E00               	movlw	0
  7610  0047B0  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7611  0047B2  0E78               	movlw	120
  7612  0047B4  6F75               	movwf	_setUmidade$1300& (0+255),b
  7613  0047B6                     l937:
  7614                           
  7615                           ; BSR set to: 0
  7616                           
  7617                           ; BSR set to: 0
  7618  0047B6  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7619  0047BA                     l933:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;FuncoesControlador.h: 64: }
  7623                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7624                           
  7625                           ; BSR set to: 0
  7626  0047BA  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7627  0047BE  0E02               	movlw	2
  7628  0047C0  EC4B  F02C         	call	_writeEEPROM_ext
  7629                           
  7630                           ;FuncoesControlador.h: 67: break;
  7631  0047C4  D019               	goto	l926
  7632  0047C6                     
  7633                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7634  0047C6  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7635  0047CA  0100               	movlb	0	; () banked
  7636  0047CC  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7637  0047CE  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7638  0047D2  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7639  0047D4  C0FA  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7640  0047D8  EC1A  F00B         	call	_tabelaUmidade	;wreg free
  7641  0047DC  0100               	movlb	0	; () banked
  7642  0047DE  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7643  0047E0  6F79               	movwf	setUmidade@_umd& (0+255),b
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;FuncoesControlador.h: 71: }
  7647                           
  7648                           ;FuncoesControlador.h: 70: break;
  7649  0047E2  D00A               	goto	l926
  7650  0047E4                     l914:
  7651                           
  7652                           ; BSR set to: 0
  7653                           
  7654                           ; BSR set to: 0
  7655  0047E4  516E               	movf	setUmidade@tp& (0+255),w,b
  7656                           
  7657                           ; Switch size 1, requested type "space"
  7658                           ; Number of cases is 3, Range of values is 43 to 65
  7659                           ; switch strategies available:
  7660                           ; Name         Instructions Cycles
  7661                           ; simple_byte           10     6 (average)
  7662                           ;	Chosen strategy is simple_byte
  7663  0047E6  0A2B               	xorlw	43	; case 43
  7664  0047E8  B4D8               	btfsc	status,2,c
  7665  0047EA  D7A0               	goto	l915
  7666  0047EC  0A06               	xorlw	6	; case 45
  7667  0047EE  B4D8               	btfsc	status,2,c
  7668  0047F0  D7C3               	goto	l927
  7669  0047F2  0A6C               	xorlw	108	; case 65
  7670  0047F4  B4D8               	btfsc	status,2,c
  7671  0047F6  D7E7               	goto	l938
  7672  0047F8                     l926:
  7673                           
  7674                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7675                           
  7676                           ; BSR set to: 0
  7677  0047F8  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7678  0047FC  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7679  004800  C079  FFDF         	movff	setUmidade@_umd,indf2
  7680  004804  0012               	return		;funcret
  7681  004806                     __end_of_setUmidade:
  7682                           	opt stack 0
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           intcon	equ	0xFF2
  7690                           intcon2	equ	0xFF1
  7691                           intcon3	equ	0xFF0
  7692                           postinc0	equ	0xFEE
  7693                           wreg	equ	0xFE8
  7694                           postdec1	equ	0xFE5
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           fsr2h	equ	0xFDA
  7698                           fsr2l	equ	0xFD9
  7699                           status	equ	0xFD8
  7700                           
  7701 ;; *************** function _tabelaUmidade *****************
  7702 ;; Defined at:
  7703 ;;		line 4 in file "src/TabelasUmidade.h"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  _tmp            2    0[BANK0 ] int 
  7706 ;;  _clima          2    2[BANK0 ] int 
  7707 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  _umd            1    7[BANK0 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2    0[BANK0 ] unsigned int 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7719 ;;      Params:         0       5       0       0       0       0       0       0       0
  7720 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7721 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7722 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7723 ;;Total ram usage:        8 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    6
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_setUmidade
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text3
  7734  001634                     __ptext3:
  7735                           	opt stack 0
  7736  001634                     _tabelaUmidade:
  7737                           	opt stack 23
  7738                           
  7739                           ;TabelasUmidade.h: 5: char _umd = 0;
  7740                           
  7741                           ;incstack = 0
  7742  001634  0E00               	movlw	0
  7743  001636  0100               	movlb	0	; () banked
  7744  001638  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7745                           
  7746                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7747  00163A  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7748  00163C  B4D8               	btfsc	status,2,c
  7749  00163E  D306               	goto	l305
  7750  001640  D31A               	goto	l304
  7751  001642                     
  7752                           ; BSR set to: 0
  7753                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7754                           
  7755                           ; BSR set to: 0
  7756  001642  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7757  001644  D006               	goto	u8630
  7758  001646  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7759  001648  E106               	bnz	l6775
  7760  00164A  0E5B               	movlw	91
  7761  00164C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7762  00164E  B0D8               	btfsc	status,0,c
  7763  001650  D002               	goto	l307
  7764  001652                     u8630:
  7765                           
  7766                           ; BSR set to: 0
  7767  001652  0E55               	movlw	85
  7768  001654  D04B               	goto	L22
  7769  001656                     l307:
  7770  001656                     l6775:
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;TabelasUmidade.h: 10: else
  7774                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7775  001656  0E5B               	movlw	91
  7776  001658  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7777  00165A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7778  00165C  A4D8               	btfss	status,2,c
  7779  00165E  D002               	goto	l309
  7780  001660                     u8640:
  7781                           
  7782                           ; BSR set to: 0
  7783  001660  0E56               	movlw	86
  7784  001662  D044               	goto	L22
  7785  001664                     l309:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;TabelasUmidade.h: 12: else
  7789                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7790                           
  7791                           ; BSR set to: 0
  7792  001664  0E5C               	movlw	92
  7793  001666  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7794  001668  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7795  00166A  A4D8               	btfss	status,2,c
  7796  00166C  D002               	goto	l311
  7797                           
  7798                           ; BSR set to: 0
  7799  00166E  0E57               	movlw	87
  7800  001670  D03D               	goto	L22
  7801  001672                     l311:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;TabelasUmidade.h: 14: else
  7805                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7806                           
  7807                           ; BSR set to: 0
  7808  001672  0E5D               	movlw	93
  7809  001674  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7810  001676  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7811  001678  A4D8               	btfss	status,2,c
  7812  00167A  D002               	goto	l313
  7813  00167C                     u8660:
  7814                           
  7815                           ; BSR set to: 0
  7816  00167C  0E58               	movlw	88
  7817  00167E  D036               	goto	L22
  7818  001680                     l313:
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;TabelasUmidade.h: 16: else
  7822                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  7823                           
  7824                           ; BSR set to: 0
  7825  001680  0E5E               	movlw	94
  7826  001682  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7827  001684  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7828  001686  A4D8               	btfss	status,2,c
  7829  001688  D002               	goto	l315
  7830  00168A                     u8670:
  7831                           
  7832                           ; BSR set to: 0
  7833  00168A  0E59               	movlw	89
  7834  00168C  D02F               	goto	L22
  7835  00168E                     l315:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;TabelasUmidade.h: 18: else
  7839                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  7840                           
  7841                           ; BSR set to: 0
  7842  00168E  0E5F               	movlw	95
  7843  001690  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7844  001692  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7845  001694  A4D8               	btfss	status,2,c
  7846  001696  D002               	goto	l317
  7847  001698                     u8680:
  7848                           
  7849                           ; BSR set to: 0
  7850  001698  0E5A               	movlw	90
  7851  00169A  D028               	goto	L22
  7852  00169C                     l317:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;TabelasUmidade.h: 20: else
  7856                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  7857                           
  7858                           ; BSR set to: 0
  7859  00169C  0E60               	movlw	96
  7860  00169E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7861  0016A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7862  0016A2  A4D8               	btfss	status,2,c
  7863  0016A4  D002               	goto	l319
  7864  0016A6                     u8690:
  7865                           
  7866                           ; BSR set to: 0
  7867  0016A6  0E5B               	movlw	91
  7868  0016A8  D021               	goto	L22
  7869  0016AA                     l319:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;TabelasUmidade.h: 22: else
  7873                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  7874                           
  7875                           ; BSR set to: 0
  7876  0016AA  0E61               	movlw	97
  7877  0016AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7878  0016AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7879  0016B0  A4D8               	btfss	status,2,c
  7880  0016B2  D002               	goto	l321
  7881  0016B4                     u8700:
  7882                           
  7883                           ; BSR set to: 0
  7884  0016B4  0E5C               	movlw	92
  7885  0016B6  D01A               	goto	L22
  7886  0016B8                     l321:
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;TabelasUmidade.h: 24: else
  7890                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  7891                           
  7892                           ; BSR set to: 0
  7893  0016B8  0E62               	movlw	98
  7894  0016BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7895  0016BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7896  0016BE  A4D8               	btfss	status,2,c
  7897  0016C0  D002               	goto	l323
  7898  0016C2                     u8710:
  7899                           
  7900                           ; BSR set to: 0
  7901  0016C2  0E5D               	movlw	93
  7902  0016C4  D013               	goto	L22
  7903  0016C6                     l323:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;TabelasUmidade.h: 26: else
  7907                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  7908                           
  7909                           ; BSR set to: 0
  7910  0016C6  0E63               	movlw	99
  7911  0016C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7912  0016CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7913  0016CC  A4D8               	btfss	status,2,c
  7914  0016CE  D002               	goto	l325
  7915  0016D0                     u8720:
  7916                           
  7917                           ; BSR set to: 0
  7918  0016D0  0E5E               	movlw	94
  7919  0016D2  D00C               	goto	L22
  7920  0016D4                     l325:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;TabelasUmidade.h: 28: else
  7924                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  7925                           
  7926                           ; BSR set to: 0
  7927  0016D4  0E64               	movlw	100
  7928  0016D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7929  0016D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7930  0016DA  B4D8               	btfsc	status,2,c
  7931  0016DC  EFAE  F00F         	goto	u10480
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;TabelasUmidade.h: 30: else
  7935                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  7936                           
  7937                           ; BSR set to: 0
  7938                           
  7939                           ; BSR set to: 0
  7940  0016E0  0E65               	movlw	101
  7941  0016E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7942  0016E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7943  0016E6  A4D8               	btfss	status,2,c
  7944  0016E8  D004               	goto	l329
  7945  0016EA  D7F2               	goto	u8720
  7946  0016EC                     L22:
  7947  0016EC  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7948  0016EE  EFFF  F012         	goto	l638
  7949  0016F2                     l329:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;TabelasUmidade.h: 32: else
  7953                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  7954                           
  7955                           ; BSR set to: 0
  7956  0016F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7957  0016F4  D00E               	goto	l331
  7958  0016F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7959  0016F8  E104               	bnz	u8750
  7960  0016FA  0E66               	movlw	102
  7961  0016FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7962  0016FE  A0D8               	btfss	status,0,c
  7963  001700  D008               	goto	l331
  7964  001702                     u8750:
  7965                           
  7966                           ; BSR set to: 0
  7967  001702  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7968  001704  D7E5               	goto	u8720
  7969  001706  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7970  001708  E104               	bnz	l6825
  7971  00170A  0E6C               	movlw	108
  7972  00170C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7973  00170E  A0D8               	btfss	status,0,c
  7974  001710  D7DF               	goto	u8720
  7975  001712                     l331:
  7976  001712                     l6825:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;TabelasUmidade.h: 34: else
  7980                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  7981  001712  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7982  001714  D010               	goto	l333
  7983  001716  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7984  001718  E104               	bnz	u8770
  7985  00171A  0E6C               	movlw	108
  7986  00171C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7987  00171E  A0D8               	btfss	status,0,c
  7988  001720  D00A               	goto	l333
  7989  001722                     u8770:
  7990                           
  7991                           ; BSR set to: 0
  7992  001722  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7993  001724  EFAE  F00F         	goto	u10480
  7994  001728  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7995  00172A  E105               	bnz	l6831
  7996  00172C  0E77               	movlw	119
  7997  00172E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7998  001730  A0D8               	btfss	status,0,c
  7999  001732  EFAE  F00F         	goto	u10480
  8000  001736                     l333:
  8001  001736                     l6831:
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;TabelasUmidade.h: 36: else
  8005                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  8006  001736  0E77               	movlw	119
  8007  001738  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8008  00173A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8009  00173C  B4D8               	btfsc	status,2,c
  8010  00173E  EFA1  F00F         	goto	u10460
  8011                           
  8012                           ; BSR set to: 0
  8013  001742  0E78               	movlw	120
  8014  001744  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8015  001746  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8016  001748  B4D8               	btfsc	status,2,c
  8017                           
  8018                           ; BSR set to: 0
  8019  00174A  D3FB               	goto	u10460
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;TabelasUmidade.h: 38: else
  8023                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  8024                           
  8025                           ; BSR set to: 0
  8026                           
  8027                           ; BSR set to: 0
  8028  00174C  0E79               	movlw	121
  8029  00174E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8030  001750  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8031  001752  B4D8               	btfsc	status,2,c
  8032  001754  D3EE               	goto	u10450
  8033                           
  8034                           ; BSR set to: 0
  8035  001756  0E7A               	movlw	122
  8036  001758  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8037  00175A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8038  00175C  B4D8               	btfsc	status,2,c
  8039                           
  8040                           ; BSR set to: 0
  8041  00175E  D3E9               	goto	u10450
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;TabelasUmidade.h: 40: else
  8045                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8046                           
  8047                           ; BSR set to: 0
  8048                           
  8049                           ; BSR set to: 0
  8050  001760  0E7B               	movlw	123
  8051  001762  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8052  001764  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8053  001766  B4D8               	btfsc	status,2,c
  8054  001768  EF3A  F011         	goto	u11090
  8055                           
  8056                           ; BSR set to: 0
  8057  00176C  0E7C               	movlw	124
  8058  00176E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8059  001770  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8060  001772  B4D8               	btfsc	status,2,c
  8061                           
  8062                           ; BSR set to: 0
  8063  001774  EF3A  F011         	goto	u11090
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;TabelasUmidade.h: 42: else
  8067                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8068                           
  8069                           ; BSR set to: 0
  8070                           
  8071                           ; BSR set to: 0
  8072  001778  0E7D               	movlw	125
  8073  00177A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8074  00177C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8075  00177E  B4D8               	btfsc	status,2,c
  8076  001780  EF27  F011         	goto	u11070
  8077                           
  8078                           ; BSR set to: 0
  8079  001784  0E7E               	movlw	126
  8080  001786  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8081  001788  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8082  00178A  B4D8               	btfsc	status,2,c
  8083                           
  8084                           ; BSR set to: 0
  8085  00178C  EF27  F011         	goto	u11070
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;TabelasUmidade.h: 44: else
  8089                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8090                           
  8091                           ; BSR set to: 0
  8092                           
  8093                           ; BSR set to: 0
  8094  001790  0E7F               	movlw	127
  8095  001792  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8096  001794  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8097  001796  B4D8               	btfsc	status,2,c
  8098  001798  EF1F  F011         	goto	u11060
  8099                           
  8100                           ; BSR set to: 0
  8101  00179C  0E80               	movlw	128
  8102  00179E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8103  0017A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8104  0017A2  B4D8               	btfsc	status,2,c
  8105                           
  8106                           ; BSR set to: 0
  8107  0017A4  EF1F  F011         	goto	u11060
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;TabelasUmidade.h: 46: else
  8111                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8112                           
  8113                           ; BSR set to: 0
  8114                           
  8115                           ; BSR set to: 0
  8116  0017A8  0E81               	movlw	129
  8117  0017AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8118  0017AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8119  0017AE  B4D8               	btfsc	status,2,c
  8120  0017B0  D1BB               	goto	u9620
  8121                           
  8122                           ; BSR set to: 0
  8123  0017B2  0E82               	movlw	130
  8124  0017B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8125  0017B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8126  0017B8  B4D8               	btfsc	status,2,c
  8127                           
  8128                           ; BSR set to: 0
  8129  0017BA  D1B6               	goto	u9620
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;TabelasUmidade.h: 48: else
  8133                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8134                           
  8135                           ; BSR set to: 0
  8136                           
  8137                           ; BSR set to: 0
  8138  0017BC  0E83               	movlw	131
  8139  0017BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8140  0017C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8141  0017C2  B4D8               	btfsc	status,2,c
  8142  0017C4  D1BD               	goto	u9640
  8143                           
  8144                           ; BSR set to: 0
  8145  0017C6  0E84               	movlw	132
  8146  0017C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8147  0017CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8148  0017CC  B4D8               	btfsc	status,2,c
  8149                           
  8150                           ; BSR set to: 0
  8151  0017CE  D1B8               	goto	u9640
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;TabelasUmidade.h: 50: else
  8155                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8156                           
  8157                           ; BSR set to: 0
  8158                           
  8159                           ; BSR set to: 0
  8160  0017D0  0E85               	movlw	133
  8161  0017D2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8162  0017D4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8163  0017D6  B4D8               	btfsc	status,2,c
  8164  0017D8  D1BF               	goto	u9660
  8165                           
  8166                           ; BSR set to: 0
  8167  0017DA  0E86               	movlw	134
  8168  0017DC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8169  0017DE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8170  0017E0  B4D8               	btfsc	status,2,c
  8171                           
  8172                           ; BSR set to: 0
  8173  0017E2  D1BA               	goto	u9660
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;TabelasUmidade.h: 52: else
  8177                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8178                           
  8179                           ; BSR set to: 0
  8180                           
  8181                           ; BSR set to: 0
  8182  0017E4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8183  0017E6  D00E               	goto	l367
  8184  0017E8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8185  0017EA  E104               	bnz	u8950
  8186  0017EC  0E87               	movlw	135
  8187  0017EE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8188  0017F0  A0D8               	btfss	status,0,c
  8189  0017F2  D008               	goto	l367
  8190  0017F4                     u8950:
  8191                           
  8192                           ; BSR set to: 0
  8193  0017F4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8194  0017F6  D0ED               	goto	u9340
  8195  0017F8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8196  0017FA  E104               	bnz	l6885
  8197  0017FC  0E93               	movlw	147
  8198  0017FE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8199  001800  A0D8               	btfss	status,0,c
  8200  001802  D0E7               	goto	u9340
  8201  001804                     l367:
  8202  001804                     l6885:
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;TabelasUmidade.h: 54: else
  8206                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8207  001804  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8208  001806  D00E               	goto	l369
  8209  001808  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8210  00180A  E104               	bnz	u8970
  8211  00180C  0E93               	movlw	147
  8212  00180E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8213  001810  A0D8               	btfss	status,0,c
  8214  001812  D008               	goto	l369
  8215  001814                     u8970:
  8216                           
  8217                           ; BSR set to: 0
  8218  001814  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8219  001816  D1B2               	goto	u9680
  8220  001818  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8221  00181A  E104               	bnz	l6891
  8222  00181C  0E97               	movlw	151
  8223  00181E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8224  001820  A0D8               	btfss	status,0,c
  8225  001822  D1AC               	goto	u9680
  8226  001824                     l369:
  8227  001824                     l6891:
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;TabelasUmidade.h: 56: else
  8231                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8232  001824  0E97               	movlw	151
  8233  001826  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8234  001828  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8235  00182A  B4D8               	btfsc	status,2,c
  8236  00182C  D1B3               	goto	u9700
  8237                           
  8238                           ; BSR set to: 0
  8239  00182E  0E98               	movlw	152
  8240  001830  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8241  001832  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8242  001834  B4D8               	btfsc	status,2,c
  8243                           
  8244                           ; BSR set to: 0
  8245  001836  D1AE               	goto	u9700
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;TabelasUmidade.h: 58: else
  8249                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8250                           
  8251                           ; BSR set to: 0
  8252                           
  8253                           ; BSR set to: 0
  8254  001838  0E99               	movlw	153
  8255  00183A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8256  00183C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8257  00183E  B4D8               	btfsc	status,2,c
  8258  001840  D1B5               	goto	u9720
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;TabelasUmidade.h: 60: else
  8262                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8263                           
  8264                           ; BSR set to: 0
  8265                           
  8266                           ; BSR set to: 0
  8267  001842  0E9A               	movlw	154
  8268  001844  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8269  001846  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8270  001848  B4D8               	btfsc	status,2,c
  8271  00184A  D1C2               	goto	u9740
  8272                           
  8273                           ; BSR set to: 0
  8274  00184C  0E9B               	movlw	155
  8275  00184E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8276  001850  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8277  001852  B4D8               	btfsc	status,2,c
  8278                           
  8279                           ; BSR set to: 0
  8280  001854  D1BD               	goto	u9740
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;TabelasUmidade.h: 62: else
  8284                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8285                           
  8286                           ; BSR set to: 0
  8287                           
  8288                           ; BSR set to: 0
  8289  001856  0E9C               	movlw	156
  8290  001858  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8291  00185A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8292  00185C  B4D8               	btfsc	status,2,c
  8293  00185E  D1C4               	goto	u9760
  8294                           
  8295                           ; BSR set to: 0
  8296  001860  0E9D               	movlw	157
  8297  001862  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8298  001864  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8299  001866  B4D8               	btfsc	status,2,c
  8300                           
  8301                           ; BSR set to: 0
  8302  001868  D1BF               	goto	u9760
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;TabelasUmidade.h: 64: else
  8306                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8307                           
  8308                           ; BSR set to: 0
  8309                           
  8310                           ; BSR set to: 0
  8311  00186A  0E9E               	movlw	158
  8312  00186C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8313  00186E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8314  001870  B4D8               	btfsc	status,2,c
  8315  001872  D0E4               	goto	u9430
  8316                           
  8317                           ; BSR set to: 0
  8318  001874  0E9F               	movlw	159
  8319  001876  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8320  001878  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8321  00187A  B4D8               	btfsc	status,2,c
  8322                           
  8323                           ; BSR set to: 0
  8324  00187C  D0DF               	goto	u9430
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;TabelasUmidade.h: 66: else
  8328                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8329                           
  8330                           ; BSR set to: 0
  8331                           
  8332                           ; BSR set to: 0
  8333  00187E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8334  001880  EFFF  F012         	goto	l638
  8335  001884  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8336  001886  E101               	bnz	u9080
  8337  001888  D0E0               	goto	L23
  8338  00188A                     u9080:
  8339  00188A  D1C6               	goto	u9800
  8340  00188C                     
  8341                           ; BSR set to: 0
  8342                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8343                           
  8344                           ; BSR set to: 0
  8345  00188C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8346  00188E  D6F6               	goto	u8660
  8347  001890  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8348  001892  E104               	bnz	l6927
  8349  001894  0E5B               	movlw	91
  8350  001896  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8351  001898  A0D8               	btfss	status,0,c
  8352  00189A  D6F0               	goto	u8660
  8353  00189C                     l6927:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;TabelasUmidade.h: 72: else
  8357                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8358  00189C  0E5B               	movlw	91
  8359  00189E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8360  0018A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8361  0018A2  B4D8               	btfsc	status,2,c
  8362  0018A4  D6F2               	goto	u8670
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;TabelasUmidade.h: 74: else
  8366                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8367                           
  8368                           ; BSR set to: 0
  8369                           
  8370                           ; BSR set to: 0
  8371  0018A6  0E5C               	movlw	92
  8372  0018A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8373  0018AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8374  0018AC  B4D8               	btfsc	status,2,c
  8375  0018AE  D6F4               	goto	u8680
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;TabelasUmidade.h: 76: else
  8379                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8380                           
  8381                           ; BSR set to: 0
  8382                           
  8383                           ; BSR set to: 0
  8384  0018B0  0E5D               	movlw	93
  8385  0018B2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8386  0018B4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8387  0018B6  B4D8               	btfsc	status,2,c
  8388  0018B8  D6F6               	goto	u8690
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;TabelasUmidade.h: 78: else
  8392                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8393                           
  8394                           ; BSR set to: 0
  8395                           
  8396                           ; BSR set to: 0
  8397  0018BA  0E5E               	movlw	94
  8398  0018BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8399  0018BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8400  0018C0  B4D8               	btfsc	status,2,c
  8401  0018C2  D6F8               	goto	u8700
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;TabelasUmidade.h: 80: else
  8405                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8406                           
  8407                           ; BSR set to: 0
  8408                           
  8409                           ; BSR set to: 0
  8410  0018C4  0E5F               	movlw	95
  8411  0018C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8412  0018C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8413  0018CA  B4D8               	btfsc	status,2,c
  8414  0018CC  D6FA               	goto	u8710
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;TabelasUmidade.h: 82: else
  8418                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8419                           
  8420                           ; BSR set to: 0
  8421                           
  8422                           ; BSR set to: 0
  8423  0018CE  0E60               	movlw	96
  8424  0018D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8425  0018D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8426  0018D4  B4D8               	btfsc	status,2,c
  8427  0018D6  D6FC               	goto	u8720
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;TabelasUmidade.h: 84: else
  8431                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8432                           
  8433                           ; BSR set to: 0
  8434                           
  8435                           ; BSR set to: 0
  8436  0018D8  0E61               	movlw	97
  8437  0018DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8438  0018DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8439  0018DE  B4D8               	btfsc	status,2,c
  8440  0018E0  D33D               	goto	u10480
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;TabelasUmidade.h: 86: else
  8444                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8445                           
  8446                           ; BSR set to: 0
  8447                           
  8448                           ; BSR set to: 0
  8449  0018E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8450  0018E4  D00E               	goto	l408
  8451  0018E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8452  0018E8  E104               	bnz	u9170
  8453  0018EA  0E62               	movlw	98
  8454  0018EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8455  0018EE  A0D8               	btfss	status,0,c
  8456  0018F0  D008               	goto	l408
  8457  0018F2                     u9170:
  8458                           
  8459                           ; BSR set to: 0
  8460  0018F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8461  0018F4  D326               	goto	u10460
  8462  0018F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8463  0018F8  E104               	bnz	l6961
  8464  0018FA  0E65               	movlw	101
  8465  0018FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8466  0018FE  A0D8               	btfss	status,0,c
  8467  001900  D320               	goto	u10460
  8468  001902                     l408:
  8469  001902                     l6961:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;TabelasUmidade.h: 88: else
  8473                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8474  001902  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8475  001904  D00E               	goto	l410
  8476  001906  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8477  001908  E104               	bnz	u9190
  8478  00190A  0E65               	movlw	101
  8479  00190C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8480  00190E  A0D8               	btfss	status,0,c
  8481  001910  D008               	goto	l410
  8482  001912                     u9190:
  8483                           
  8484                           ; BSR set to: 0
  8485  001912  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8486  001914  D30E               	goto	u10450
  8487  001916  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8488  001918  E104               	bnz	l6967
  8489  00191A  0E78               	movlw	120
  8490  00191C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8491  00191E  A0D8               	btfss	status,0,c
  8492  001920  D308               	goto	u10450
  8493  001922                     l410:
  8494  001922                     l6967:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;TabelasUmidade.h: 90: else
  8498                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8499  001922  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8500  001924  D010               	goto	l412
  8501  001926  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8502  001928  E104               	bnz	u9210
  8503  00192A  0E78               	movlw	120
  8504  00192C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8505  00192E  A0D8               	btfss	status,0,c
  8506  001930  D00A               	goto	l412
  8507  001932                     u9210:
  8508                           
  8509                           ; BSR set to: 0
  8510  001932  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8511  001934  EF3A  F011         	goto	u11090
  8512  001938  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8513  00193A  E105               	bnz	l6973
  8514  00193C  0E7B               	movlw	123
  8515  00193E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8516  001940  A0D8               	btfss	status,0,c
  8517  001942  EF3A  F011         	goto	u11090
  8518  001946                     l412:
  8519  001946                     l6973:
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;TabelasUmidade.h: 92: else
  8523                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8524  001946  0E7B               	movlw	123
  8525  001948  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8526  00194A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8527  00194C  B4D8               	btfsc	status,2,c
  8528  00194E  EF27  F011         	goto	u11070
  8529                           
  8530                           ; BSR set to: 0
  8531  001952  0E7C               	movlw	124
  8532  001954  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8533  001956  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8534  001958  B4D8               	btfsc	status,2,c
  8535                           
  8536                           ; BSR set to: 0
  8537  00195A  EF27  F011         	goto	u11070
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;TabelasUmidade.h: 94: else
  8541                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8542                           
  8543                           ; BSR set to: 0
  8544                           
  8545                           ; BSR set to: 0
  8546  00195E  0E7D               	movlw	125
  8547  001960  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8548  001962  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8549  001964  B4D8               	btfsc	status,2,c
  8550  001966  EF1F  F011         	goto	u11060
  8551                           
  8552                           ; BSR set to: 0
  8553  00196A  0E7E               	movlw	126
  8554  00196C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8555  00196E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8556  001970  B4D8               	btfsc	status,2,c
  8557                           
  8558                           ; BSR set to: 0
  8559  001972  EF1F  F011         	goto	u11060
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;TabelasUmidade.h: 96: else
  8563                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ; BSR set to: 0
  8568  001976  0E7F               	movlw	127
  8569  001978  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8570  00197A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8571  00197C  B4D8               	btfsc	status,2,c
  8572  00197E  D0D4               	goto	u9620
  8573                           
  8574                           ; BSR set to: 0
  8575  001980  0E80               	movlw	128
  8576  001982  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8577  001984  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8578  001986  B4D8               	btfsc	status,2,c
  8579                           
  8580                           ; BSR set to: 0
  8581  001988  D0CF               	goto	u9620
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;TabelasUmidade.h: 98: else
  8585                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8586                           
  8587                           ; BSR set to: 0
  8588                           
  8589                           ; BSR set to: 0
  8590  00198A  0E81               	movlw	129
  8591  00198C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8592  00198E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8593  001990  B4D8               	btfsc	status,2,c
  8594  001992  D0D6               	goto	u9640
  8595                           
  8596                           ; BSR set to: 0
  8597  001994  0E82               	movlw	130
  8598  001996  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8599  001998  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8600  00199A  B4D8               	btfsc	status,2,c
  8601                           
  8602                           ; BSR set to: 0
  8603  00199C  D0D1               	goto	u9640
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;TabelasUmidade.h: 100: else
  8607                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8608                           
  8609                           ; BSR set to: 0
  8610                           
  8611                           ; BSR set to: 0
  8612  00199E  0E83               	movlw	131
  8613  0019A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8614  0019A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8615  0019A4  B4D8               	btfsc	status,2,c
  8616  0019A6  D0D8               	goto	u9660
  8617                           
  8618                           ; BSR set to: 0
  8619  0019A8  0E84               	movlw	132
  8620  0019AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8621  0019AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8622  0019AE  B4D8               	btfsc	status,2,c
  8623                           
  8624                           ; BSR set to: 0
  8625  0019B0  D0D3               	goto	u9660
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;TabelasUmidade.h: 102: else
  8629                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8630                           
  8631                           ; BSR set to: 0
  8632                           
  8633                           ; BSR set to: 0
  8634  0019B2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8635  0019B4  D010               	goto	l434
  8636  0019B6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8637  0019B8  E104               	bnz	u9330
  8638  0019BA  0E85               	movlw	133
  8639  0019BC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8640  0019BE  A0D8               	btfss	status,0,c
  8641  0019C0  D00A               	goto	l434
  8642  0019C2                     u9330:
  8643                           
  8644                           ; BSR set to: 0
  8645  0019C2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8646  0019C4  D006               	goto	u9340
  8647  0019C6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8648  0019C8  E106               	bnz	l7009
  8649  0019CA  0E95               	movlw	149
  8650  0019CC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8651  0019CE  B0D8               	btfsc	status,0,c
  8652  0019D0  D002               	goto	l434
  8653  0019D2                     u9340:
  8654                           
  8655                           ; BSR set to: 0
  8656  0019D2  0E68               	movlw	104
  8657  0019D4  D68B               	goto	L22
  8658  0019D6                     l434:
  8659  0019D6                     l7009:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;TabelasUmidade.h: 104: else
  8663                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8664  0019D6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8665  0019D8  D00E               	goto	l436
  8666  0019DA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8667  0019DC  E104               	bnz	u9350
  8668  0019DE  0E95               	movlw	149
  8669  0019E0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8670  0019E2  A0D8               	btfss	status,0,c
  8671  0019E4  D008               	goto	l436
  8672  0019E6                     u9350:
  8673                           
  8674                           ; BSR set to: 0
  8675  0019E6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8676  0019E8  D0C9               	goto	u9680
  8677  0019EA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8678  0019EC  E104               	bnz	l7015
  8679  0019EE  0E99               	movlw	153
  8680  0019F0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8681  0019F2  A0D8               	btfss	status,0,c
  8682  0019F4  D0C3               	goto	u9680
  8683  0019F6                     l436:
  8684  0019F6                     l7015:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;TabelasUmidade.h: 106: else
  8688                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8689  0019F6  0E99               	movlw	153
  8690  0019F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8691  0019FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8692  0019FC  B4D8               	btfsc	status,2,c
  8693  0019FE  D0CA               	goto	u9700
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;TabelasUmidade.h: 108: else
  8697                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8698                           
  8699                           ; BSR set to: 0
  8700                           
  8701                           ; BSR set to: 0
  8702  001A00  0E9A               	movlw	154
  8703  001A02  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8704  001A04  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8705  001A06  B4D8               	btfsc	status,2,c
  8706  001A08  D0D1               	goto	u9720
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;TabelasUmidade.h: 110: else
  8710                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8711                           
  8712                           ; BSR set to: 0
  8713                           
  8714                           ; BSR set to: 0
  8715  001A0A  0E9B               	movlw	155
  8716  001A0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8717  001A0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8718  001A10  B4D8               	btfsc	status,2,c
  8719  001A12  D0DE               	goto	u9740
  8720                           
  8721                           ; BSR set to: 0
  8722  001A14  0E9C               	movlw	156
  8723  001A16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8724  001A18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8725  001A1A  B4D8               	btfsc	status,2,c
  8726                           
  8727                           ; BSR set to: 0
  8728  001A1C  D0D9               	goto	u9740
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;TabelasUmidade.h: 112: else
  8732                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8733                           
  8734                           ; BSR set to: 0
  8735                           
  8736                           ; BSR set to: 0
  8737  001A1E  0E9D               	movlw	157
  8738  001A20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8739  001A22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8740  001A24  B4D8               	btfsc	status,2,c
  8741  001A26  D0E0               	goto	u9760
  8742                           
  8743                           ; BSR set to: 0
  8744  001A28  0E9E               	movlw	158
  8745  001A2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8746  001A2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8747  001A2E  B4D8               	btfsc	status,2,c
  8748                           
  8749                           ; BSR set to: 0
  8750  001A30  D0DB               	goto	u9760
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;TabelasUmidade.h: 114: else
  8754                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8755                           
  8756                           ; BSR set to: 0
  8757                           
  8758                           ; BSR set to: 0
  8759  001A32  0E9F               	movlw	159
  8760  001A34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8761  001A36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8762  001A38  A4D8               	btfss	status,2,c
  8763  001A3A  D002               	goto	l450
  8764  001A3C                     u9430:
  8765                           
  8766                           ; BSR set to: 0
  8767  001A3C  0E6E               	movlw	110
  8768  001A3E  D656               	goto	L22
  8769  001A40                     l450:
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;TabelasUmidade.h: 116: else
  8773                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8774                           
  8775                           ; BSR set to: 0
  8776  001A40  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8777  001A42  EFFF  F012         	goto	l638
  8778  001A46  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8779  001A48  E105               	bnz	u9440
  8780  001A4A                     L23:
  8781  001A4A  0EA0               	movlw	160
  8782  001A4C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8783  001A4E  A0D8               	btfss	status,0,c
  8784  001A50  EFFF  F012         	goto	l638
  8785  001A54                     u9440:
  8786  001A54  D0E1               	goto	u9800
  8787  001A56                     
  8788                           ; BSR set to: 0
  8789                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8790                           
  8791                           ; BSR set to: 0
  8792  001A56  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8793  001A58  D61F               	goto	u8680
  8794  001A5A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8795  001A5C  E104               	bnz	l7047
  8796  001A5E  0E5B               	movlw	91
  8797  001A60  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8798  001A62  A0D8               	btfss	status,0,c
  8799  001A64  D619               	goto	u8680
  8800  001A66                     l7047:
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;TabelasUmidade.h: 122: else
  8804                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8805  001A66  0E5B               	movlw	91
  8806  001A68  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8807  001A6A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8808  001A6C  B4D8               	btfsc	status,2,c
  8809  001A6E  D61B               	goto	u8690
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;TabelasUmidade.h: 124: else
  8813                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  8814                           
  8815                           ; BSR set to: 0
  8816                           
  8817                           ; BSR set to: 0
  8818  001A70  0E5C               	movlw	92
  8819  001A72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8820  001A74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8821  001A76  B4D8               	btfsc	status,2,c
  8822  001A78  D61D               	goto	u8700
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;TabelasUmidade.h: 126: else
  8826                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  8827                           
  8828                           ; BSR set to: 0
  8829                           
  8830                           ; BSR set to: 0
  8831  001A7A  0E5D               	movlw	93
  8832  001A7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8833  001A7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8834  001A80  B4D8               	btfsc	status,2,c
  8835  001A82  D61F               	goto	u8710
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;TabelasUmidade.h: 128: else
  8839                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  8840                           
  8841                           ; BSR set to: 0
  8842                           
  8843                           ; BSR set to: 0
  8844  001A84  0E5E               	movlw	94
  8845  001A86  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8846  001A88  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8847  001A8A  B4D8               	btfsc	status,2,c
  8848  001A8C  D621               	goto	u8720
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;TabelasUmidade.h: 130: else
  8852                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  8853                           
  8854                           ; BSR set to: 0
  8855                           
  8856                           ; BSR set to: 0
  8857  001A8E  0E5F               	movlw	95
  8858  001A90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8859  001A92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8860  001A94  B4D8               	btfsc	status,2,c
  8861  001A96  D262               	goto	u10480
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;TabelasUmidade.h: 132: else
  8865                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  8866                           
  8867                           ; BSR set to: 0
  8868                           
  8869                           ; BSR set to: 0
  8870  001A98  0E60               	movlw	96
  8871  001A9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8872  001A9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8873  001A9E  B4D8               	btfsc	status,2,c
  8874  001AA0  D25D               	goto	u10480
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;TabelasUmidade.h: 134: else
  8878                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  8879                           
  8880                           ; BSR set to: 0
  8881                           
  8882                           ; BSR set to: 0
  8883  001AA2  0E61               	movlw	97
  8884  001AA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8885  001AA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8886  001AA8  B4D8               	btfsc	status,2,c
  8887  001AAA  D24B               	goto	u10460
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;TabelasUmidade.h: 136: else
  8891                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  8892                           
  8893                           ; BSR set to: 0
  8894                           
  8895                           ; BSR set to: 0
  8896  001AAC  0E62               	movlw	98
  8897  001AAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8898  001AB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8899  001AB2  B4D8               	btfsc	status,2,c
  8900  001AB4  D246               	goto	u10460
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;TabelasUmidade.h: 138: else
  8904                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  8905                           
  8906                           ; BSR set to: 0
  8907                           
  8908                           ; BSR set to: 0
  8909  001AB6  0E63               	movlw	99
  8910  001AB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8911  001ABA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8912  001ABC  B4D8               	btfsc	status,2,c
  8913  001ABE  D239               	goto	u10450
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;TabelasUmidade.h: 140: else
  8917                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  8918                           
  8919                           ; BSR set to: 0
  8920                           
  8921                           ; BSR set to: 0
  8922  001AC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8923  001AC2  D00E               	goto	l474
  8924  001AC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8925  001AC6  E104               	bnz	u9550
  8926  001AC8  0E64               	movlw	100
  8927  001ACA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8928  001ACC  A0D8               	btfss	status,0,c
  8929  001ACE  D008               	goto	l474
  8930  001AD0                     u9550:
  8931                           
  8932                           ; BSR set to: 0
  8933  001AD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8934  001AD2  D3D0               	goto	u11090
  8935  001AD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8936  001AD6  E104               	bnz	l7089
  8937  001AD8  0E68               	movlw	104
  8938  001ADA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8939  001ADC  A0D8               	btfss	status,0,c
  8940  001ADE  D3CA               	goto	u11090
  8941  001AE0                     l474:
  8942  001AE0                     l7089:
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;TabelasUmidade.h: 142: else
  8946                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  8947  001AE0  0E68               	movlw	104
  8948  001AE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8949  001AE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8950  001AE6  B4D8               	btfsc	status,2,c
  8951  001AE8  D3B2               	goto	u11070
  8952                           
  8953                           ; BSR set to: 0
  8954  001AEA  0E69               	movlw	105
  8955  001AEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8956  001AEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8957  001AF0  B4D8               	btfsc	status,2,c
  8958                           
  8959                           ; BSR set to: 0
  8960  001AF2  D3AD               	goto	u11070
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;TabelasUmidade.h: 144: else
  8964                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  8965                           
  8966                           ; BSR set to: 0
  8967                           
  8968                           ; BSR set to: 0
  8969  001AF4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8970  001AF6  D00E               	goto	l480
  8971  001AF8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8972  001AFA  E104               	bnz	u9590
  8973  001AFC  0E6A               	movlw	106
  8974  001AFE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8975  001B00  A0D8               	btfss	status,0,c
  8976  001B02  D008               	goto	l480
  8977  001B04                     u9590:
  8978                           
  8979                           ; BSR set to: 0
  8980  001B04  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8981  001B06  D39B               	goto	u11060
  8982  001B08  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8983  001B0A  E104               	bnz	l7101
  8984  001B0C  0E7B               	movlw	123
  8985  001B0E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8986  001B10  A0D8               	btfss	status,0,c
  8987  001B12  D395               	goto	u11060
  8988  001B14                     l480:
  8989  001B14                     l7101:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;TabelasUmidade.h: 146: else
  8993                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  8994  001B14  0E7B               	movlw	123
  8995  001B16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8996  001B18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8997  001B1A  B4D8               	btfsc	status,2,c
  8998  001B1C  D005               	goto	u9620
  8999                           
  9000                           ; BSR set to: 0
  9001  001B1E  0E7C               	movlw	124
  9002  001B20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9003  001B22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9004  001B24  A4D8               	btfss	status,2,c
  9005  001B26  D002               	goto	l482
  9006  001B28                     u9620:
  9007                           
  9008                           ; BSR set to: 0
  9009                           
  9010                           ; BSR set to: 0
  9011  001B28  0E65               	movlw	101
  9012  001B2A  D5E0               	goto	L22
  9013  001B2C                     l482:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;TabelasUmidade.h: 148: else
  9017                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  9018                           
  9019                           ; BSR set to: 0
  9020  001B2C  0E7D               	movlw	125
  9021  001B2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9022  001B30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9023  001B32  B4D8               	btfsc	status,2,c
  9024  001B34  D005               	goto	u9640
  9025                           
  9026                           ; BSR set to: 0
  9027  001B36  0E7E               	movlw	126
  9028  001B38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9029  001B3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9030  001B3C  A4D8               	btfss	status,2,c
  9031  001B3E  D002               	goto	l486
  9032  001B40                     u9640:
  9033                           
  9034                           ; BSR set to: 0
  9035                           
  9036                           ; BSR set to: 0
  9037  001B40  0E66               	movlw	102
  9038  001B42  D5D4               	goto	L22
  9039  001B44                     l486:
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;TabelasUmidade.h: 150: else
  9043                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9044                           
  9045                           ; BSR set to: 0
  9046  001B44  0E7F               	movlw	127
  9047  001B46  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9048  001B48  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9049  001B4A  B4D8               	btfsc	status,2,c
  9050  001B4C  D005               	goto	u9660
  9051                           
  9052                           ; BSR set to: 0
  9053  001B4E  0E80               	movlw	128
  9054  001B50  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9055  001B52  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9056  001B54  A4D8               	btfss	status,2,c
  9057  001B56  D002               	goto	l490
  9058  001B58                     u9660:
  9059                           
  9060                           ; BSR set to: 0
  9061                           
  9062                           ; BSR set to: 0
  9063  001B58  0E67               	movlw	103
  9064  001B5A  D5C8               	goto	L22
  9065  001B5C                     l490:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;TabelasUmidade.h: 152: else
  9069                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9070                           
  9071                           ; BSR set to: 0
  9072  001B5C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9073  001B5E  D010               	goto	l494
  9074  001B60  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9075  001B62  E104               	bnz	u9670
  9076  001B64  0E81               	movlw	129
  9077  001B66  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9078  001B68  A0D8               	btfss	status,0,c
  9079  001B6A  D00A               	goto	l494
  9080  001B6C                     u9670:
  9081                           
  9082                           ; BSR set to: 0
  9083  001B6C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9084  001B6E  D006               	goto	u9680
  9085  001B70  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9086  001B72  E106               	bnz	l7125
  9087  001B74  0E8B               	movlw	139
  9088  001B76  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9089  001B78  B0D8               	btfsc	status,0,c
  9090  001B7A  D002               	goto	l494
  9091  001B7C                     u9680:
  9092                           
  9093                           ; BSR set to: 0
  9094  001B7C  0E69               	movlw	105
  9095  001B7E  D5B6               	goto	L22
  9096  001B80                     l494:
  9097  001B80                     l7125:
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;TabelasUmidade.h: 154: else
  9101                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9102  001B80  0E8B               	movlw	139
  9103  001B82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9104  001B84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9105  001B86  B4D8               	btfsc	status,2,c
  9106  001B88  D005               	goto	u9700
  9107                           
  9108                           ; BSR set to: 0
  9109  001B8A  0E8C               	movlw	140
  9110  001B8C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9111  001B8E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9112  001B90  A4D8               	btfss	status,2,c
  9113  001B92  D002               	goto	l496
  9114  001B94                     u9700:
  9115                           
  9116                           ; BSR set to: 0
  9117                           
  9118                           ; BSR set to: 0
  9119  001B94  0E6A               	movlw	106
  9120  001B96  D5AA               	goto	L22
  9121  001B98                     l496:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;TabelasUmidade.h: 156: else
  9125                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9126                           
  9127                           ; BSR set to: 0
  9128  001B98  0E8D               	movlw	141
  9129  001B9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9130  001B9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9131  001B9E  B4D8               	btfsc	status,2,c
  9132  001BA0  D005               	goto	u9720
  9133                           
  9134                           ; BSR set to: 0
  9135  001BA2  0E92               	movlw	146
  9136  001BA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9137  001BA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9138  001BA8  A4D8               	btfss	status,2,c
  9139  001BAA  D002               	goto	l500
  9140  001BAC                     u9720:
  9141                           
  9142                           ; BSR set to: 0
  9143                           
  9144                           ; BSR set to: 0
  9145  001BAC  0E6B               	movlw	107
  9146  001BAE  D59E               	goto	L22
  9147  001BB0                     l500:
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;TabelasUmidade.h: 158: else
  9151                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9152                           
  9153                           ; BSR set to: 0
  9154  001BB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9155  001BB2  D010               	goto	l504
  9156  001BB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9157  001BB6  E104               	bnz	u9730
  9158  001BB8  0E93               	movlw	147
  9159  001BBA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9160  001BBC  A0D8               	btfss	status,0,c
  9161  001BBE  D00A               	goto	l504
  9162  001BC0                     u9730:
  9163                           
  9164                           ; BSR set to: 0
  9165  001BC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9166  001BC2  D006               	goto	u9740
  9167  001BC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9168  001BC6  E106               	bnz	l7143
  9169  001BC8  0E98               	movlw	152
  9170  001BCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9171  001BCC  B0D8               	btfsc	status,0,c
  9172  001BCE  D002               	goto	l504
  9173  001BD0                     u9740:
  9174                           
  9175                           ; BSR set to: 0
  9176  001BD0  0E6C               	movlw	108
  9177  001BD2  D58C               	goto	L22
  9178  001BD4                     l504:
  9179  001BD4                     l7143:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;TabelasUmidade.h: 160: else
  9183                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9184  001BD4  0E99               	movlw	153
  9185  001BD6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9186  001BD8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9187  001BDA  B4D8               	btfsc	status,2,c
  9188  001BDC  D005               	goto	u9760
  9189                           
  9190                           ; BSR set to: 0
  9191  001BDE  0E98               	movlw	152
  9192  001BE0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9193  001BE2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9194  001BE4  A4D8               	btfss	status,2,c
  9195  001BE6  D002               	goto	l506
  9196  001BE8                     u9760:
  9197                           
  9198                           ; BSR set to: 0
  9199                           
  9200                           ; BSR set to: 0
  9201  001BE8  0E6D               	movlw	109
  9202  001BEA  D580               	goto	L22
  9203  001BEC                     l506:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;TabelasUmidade.h: 162: else
  9207                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9208                           
  9209                           ; BSR set to: 0
  9210  001BEC  0E9B               	movlw	155
  9211  001BEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9212  001BF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9213  001BF2  B4D8               	btfsc	status,2,c
  9214  001BF4  D005               	goto	u9780
  9215                           
  9216                           ; BSR set to: 0
  9217  001BF6  0E9A               	movlw	154
  9218  001BF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9219  001BFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9220  001BFC  A4D8               	btfss	status,2,c
  9221  001BFE  D002               	goto	l510
  9222  001C00                     u9780:
  9223                           
  9224                           ; BSR set to: 0
  9225                           
  9226                           ; BSR set to: 0
  9227  001C00  0E6F               	movlw	111
  9228  001C02  D574               	goto	L22
  9229  001C04                     l510:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;TabelasUmidade.h: 164: else
  9233                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9234                           
  9235                           ; BSR set to: 0
  9236  001C04  0E9D               	movlw	157
  9237  001C06  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9238  001C08  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9239  001C0A  B4D8               	btfsc	status,2,c
  9240  001C0C  D005               	goto	u9800
  9241                           
  9242                           ; BSR set to: 0
  9243  001C0E  0E9C               	movlw	156
  9244  001C10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9245  001C12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9246  001C14  A4D8               	btfss	status,2,c
  9247  001C16  D002               	goto	l514
  9248  001C18                     u9800:
  9249                           
  9250                           ; BSR set to: 0
  9251                           
  9252                           ; BSR set to: 0
  9253  001C18  0E70               	movlw	112
  9254  001C1A  D568               	goto	L22
  9255  001C1C                     l514:
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;TabelasUmidade.h: 166: else
  9259                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9260                           
  9261                           ; BSR set to: 0
  9262  001C1C  0E9F               	movlw	159
  9263  001C1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9264  001C20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9265  001C22  B4D8               	btfsc	status,2,c
  9266  001C24  D005               	goto	u9820
  9267                           
  9268                           ; BSR set to: 0
  9269  001C26  0E9E               	movlw	158
  9270  001C28  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9271  001C2A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9272  001C2C  A4D8               	btfss	status,2,c
  9273  001C2E  D002               	goto	l518
  9274  001C30                     u9820:
  9275                           
  9276                           ; BSR set to: 0
  9277                           
  9278                           ; BSR set to: 0
  9279  001C30  0E71               	movlw	113
  9280  001C32  D55C               	goto	L22
  9281  001C34                     l518:
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;TabelasUmidade.h: 168: else
  9285                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9286                           
  9287                           ; BSR set to: 0
  9288  001C34  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9289  001C36  EFFF  F012         	goto	l638
  9290  001C3A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9291  001C3C  E105               	bnz	u9830
  9292  001C3E  0EA0               	movlw	160
  9293  001C40  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9294  001C42  A0D8               	btfss	status,0,c
  9295  001C44  EFFF  F012         	goto	l638
  9296  001C48                     u9830:
  9297                           
  9298                           ; BSR set to: 0
  9299  001C48  0E73               	movlw	115
  9300  001C4A  D550               	goto	L22
  9301  001C4C                     l305:
  9302                           
  9303                           ; BSR set to: 0
  9304                           
  9305                           ; BSR set to: 0
  9306  001C4C  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9307  001C50  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9308                           
  9309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9310                           ; Switch size 1, requested type "space"
  9311                           ; Number of cases is 1, Range of values is 0 to 0
  9312                           ; switch strategies available:
  9313                           ; Name         Instructions Cycles
  9314                           ; simple_byte            4     3 (average)
  9315                           ;	Chosen strategy is simple_byte
  9316  001C54  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9317  001C56  0A00               	xorlw	0	; case 0
  9318  001C58  A4D8               	btfss	status,2,c
  9319  001C5A  EFFF  F012         	goto	l638
  9320                           
  9321                           ; BSR set to: 0
  9322                           ; Switch size 1, requested type "space"
  9323                           ; Number of cases is 3, Range of values is 1 to 3
  9324                           ; switch strategies available:
  9325                           ; Name         Instructions Cycles
  9326                           ; simple_byte           10     6 (average)
  9327                           ;	Chosen strategy is simple_byte
  9328  001C5E  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9329  001C60  0A01               	xorlw	1	; case 1
  9330  001C62  B4D8               	btfsc	status,2,c
  9331  001C64  D4EE               	goto	l306
  9332  001C66  0A03               	xorlw	3	; case 2
  9333  001C68  B4D8               	btfsc	status,2,c
  9334  001C6A  D610               	goto	l391
  9335  001C6C  0A01               	xorlw	1	; case 3
  9336  001C6E  B4D8               	btfsc	status,2,c
  9337  001C70  D6F2               	goto	l453
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9341  001C72  EFFF  F012         	goto	l638
  9342  001C76                     l304:
  9343                           
  9344                           ; BSR set to: 0
  9345                           
  9346                           ; BSR set to: 0
  9347  001C76  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9348  001C78  B4D8               	btfsc	status,2,c
  9349  001C7A  EFF4  F012         	goto	l525
  9350  001C7E  EFFF  F012         	goto	l638
  9351  001C82                     
  9352                           ; BSR set to: 0
  9353                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9354                           
  9355                           ; BSR set to: 0
  9356  001C82  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9357  001C84  D517               	goto	u8700
  9358  001C86  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9359  001C88  E104               	bnz	l7183
  9360  001C8A  0E5B               	movlw	91
  9361  001C8C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9362  001C8E  A0D8               	btfss	status,0,c
  9363  001C90  D511               	goto	u8700
  9364  001C92                     l7183:
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;TabelasUmidade.h: 176: else
  9368                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9369  001C92  0E5B               	movlw	91
  9370  001C94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9371  001C96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9372  001C98  B4D8               	btfsc	status,2,c
  9373  001C9A  D50C               	goto	u8700
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;TabelasUmidade.h: 178: else
  9377                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9378                           
  9379                           ; BSR set to: 0
  9380                           
  9381                           ; BSR set to: 0
  9382  001C9C  0E5C               	movlw	92
  9383  001C9E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9384  001CA0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9385  001CA2  B4D8               	btfsc	status,2,c
  9386  001CA4  D4F9               	goto	u8680
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;TabelasUmidade.h: 180: else
  9390                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9391                           
  9392                           ; BSR set to: 0
  9393                           
  9394                           ; BSR set to: 0
  9395  001CA6  0E5D               	movlw	93
  9396  001CA8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9397  001CAA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9398  001CAC  B4D8               	btfsc	status,2,c
  9399  001CAE  D4ED               	goto	u8670
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;TabelasUmidade.h: 182: else
  9403                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9404                           
  9405                           ; BSR set to: 0
  9406                           
  9407                           ; BSR set to: 0
  9408  001CB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9409  001CB2  D00E               	goto	l535
  9410  001CB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9411  001CB6  E104               	bnz	u9890
  9412  001CB8  0E5E               	movlw	94
  9413  001CBA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9414  001CBC  A0D8               	btfss	status,0,c
  9415  001CBE  D008               	goto	l535
  9416  001CC0                     u9890:
  9417                           
  9418                           ; BSR set to: 0
  9419  001CC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9420  001CC2  D4DC               	goto	u8660
  9421  001CC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9422  001CC6  E104               	bnz	l7201
  9423  001CC8  0E65               	movlw	101
  9424  001CCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9425  001CCC  A0D8               	btfss	status,0,c
  9426  001CCE  D4D6               	goto	u8660
  9427  001CD0                     l535:
  9428  001CD0                     l7201:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;TabelasUmidade.h: 184: else
  9432                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9433  001CD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9434  001CD2  D00E               	goto	l537
  9435  001CD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9436  001CD6  E104               	bnz	u9910
  9437  001CD8  0E65               	movlw	101
  9438  001CDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9439  001CDC  A0D8               	btfss	status,0,c
  9440  001CDE  D008               	goto	l537
  9441  001CE0                     u9910:
  9442                           
  9443                           ; BSR set to: 0
  9444  001CE0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9445  001CE2  D2FE               	goto	u11160
  9446  001CE4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9447  001CE6  E104               	bnz	l7207
  9448  001CE8  0E67               	movlw	103
  9449  001CEA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9450  001CEC  A0D8               	btfss	status,0,c
  9451  001CEE  D2F8               	goto	u11160
  9452  001CF0                     l537:
  9453  001CF0                     l7207:
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;TabelasUmidade.h: 186: else
  9457                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9458  001CF0  0E67               	movlw	103
  9459  001CF2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9460  001CF4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9461  001CF6  B4D8               	btfsc	status,2,c
  9462  001CF8  D303               	goto	u11180
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;TabelasUmidade.h: 188: else
  9466                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9467                           
  9468                           ; BSR set to: 0
  9469                           
  9470                           ; BSR set to: 0
  9471  001CFA  0E68               	movlw	104
  9472  001CFC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9473  001CFE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9474  001D00  B4D8               	btfsc	status,2,c
  9475  001D02  D306               	goto	u11190
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;TabelasUmidade.h: 190: else
  9479                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9480                           
  9481                           ; BSR set to: 0
  9482                           
  9483                           ; BSR set to: 0
  9484  001D04  0E69               	movlw	105
  9485  001D06  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9486  001D08  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9487  001D0A  B4D8               	btfsc	status,2,c
  9488  001D0C  D179               	goto	u10590
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;TabelasUmidade.h: 192: else
  9492                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9493                           
  9494                           ; BSR set to: 0
  9495                           
  9496                           ; BSR set to: 0
  9497  001D0E  0E6A               	movlw	106
  9498  001D10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9499  001D12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9500  001D14  B4D8               	btfsc	status,2,c
  9501  001D16  D30F               	goto	u11210
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;TabelasUmidade.h: 194: else
  9505                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9506                           
  9507                           ; BSR set to: 0
  9508                           
  9509                           ; BSR set to: 0
  9510  001D18  0E6B               	movlw	107
  9511  001D1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9512  001D1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9513  001D1E  B4D8               	btfsc	status,2,c
  9514  001D20  D312               	goto	u11220
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;TabelasUmidade.h: 196: else
  9518                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9519                           
  9520                           ; BSR set to: 0
  9521                           
  9522                           ; BSR set to: 0
  9523  001D22  0E6C               	movlw	108
  9524  001D24  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9525  001D26  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9526  001D28  A4D8               	btfss	status,2,c
  9527  001D2A  D002               	goto	l549
  9528                           
  9529                           ; BSR set to: 0
  9530  001D2C  0E43               	movlw	67
  9531  001D2E  D4DE               	goto	L22
  9532  001D30                     l549:
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;TabelasUmidade.h: 198: else
  9536                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9537                           
  9538                           ; BSR set to: 0
  9539  001D30  0E6D               	movlw	109
  9540  001D32  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9541  001D34  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9542  001D36  B4D8               	btfsc	status,2,c
  9543  001D38  D30E               	goto	u11230
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;TabelasUmidade.h: 200: else
  9547                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9548                           
  9549                           ; BSR set to: 0
  9550                           
  9551                           ; BSR set to: 0
  9552  001D3A  0E6E               	movlw	110
  9553  001D3C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9554  001D3E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9555  001D40  B4D8               	btfsc	status,2,c
  9556  001D42  D17E               	goto	u10630
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;TabelasUmidade.h: 202: else
  9560                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9561                           
  9562                           ; BSR set to: 0
  9563                           
  9564                           ; BSR set to: 0
  9565  001D44  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9566  001D46  D00E               	goto	l555
  9567  001D48  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9568  001D4A  E104               	bnz	u10010
  9569  001D4C  0E6F               	movlw	111
  9570  001D4E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9571  001D50  A0D8               	btfss	status,0,c
  9572  001D52  D008               	goto	l555
  9573  001D54                     u10010:
  9574                           
  9575                           ; BSR set to: 0
  9576  001D54  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9577  001D56  D317               	goto	u11260
  9578  001D58  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9579  001D5A  E104               	bnz	l7245
  9580  001D5C  0E73               	movlw	115
  9581  001D5E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9582  001D60  A0D8               	btfss	status,0,c
  9583  001D62  D311               	goto	u11260
  9584  001D64                     l555:
  9585  001D64                     l7245:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;TabelasUmidade.h: 204: else
  9589                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9590  001D64  0E73               	movlw	115
  9591  001D66  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9592  001D68  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9593  001D6A  B4D8               	btfsc	status,2,c
  9594  001D6C  D314               	goto	u11270
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;TabelasUmidade.h: 206: else
  9598                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9599                           
  9600                           ; BSR set to: 0
  9601                           
  9602                           ; BSR set to: 0
  9603  001D6E  0E74               	movlw	116
  9604  001D70  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9605  001D72  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9606  001D74  B4D8               	btfsc	status,2,c
  9607  001D76  D317               	goto	u11280
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;TabelasUmidade.h: 208: else
  9611                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9612                           
  9613                           ; BSR set to: 0
  9614                           
  9615                           ; BSR set to: 0
  9616  001D78  0E75               	movlw	117
  9617  001D7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9618  001D7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9619  001D7E  A4D8               	btfss	status,2,c
  9620  001D80  D002               	goto	l561
  9621                           
  9622                           ; BSR set to: 0
  9623  001D82  0E36               	movlw	54
  9624  001D84  D4B3               	goto	L22
  9625  001D86                     l561:
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;TabelasUmidade.h: 210: else
  9629                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9630                           
  9631                           ; BSR set to: 0
  9632  001D86  0E76               	movlw	118
  9633  001D88  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9634  001D8A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9635  001D8C  B4D8               	btfsc	status,2,c
  9636  001D8E  D323               	goto	u11310
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;TabelasUmidade.h: 212: else
  9640                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9641                           
  9642                           ; BSR set to: 0
  9643                           
  9644                           ; BSR set to: 0
  9645  001D90  0E77               	movlw	119
  9646  001D92  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9647  001D94  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9648  001D96  B4D8               	btfsc	status,2,c
  9649  001D98  D326               	goto	u11320
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;TabelasUmidade.h: 214: else
  9653                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9654                           
  9655                           ; BSR set to: 0
  9656                           
  9657                           ; BSR set to: 0
  9658  001D9A  0E78               	movlw	120
  9659  001D9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9660  001D9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9661  001DA0  B4D8               	btfsc	status,2,c
  9662  001DA2  D18D               	goto	u10720
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;TabelasUmidade.h: 216: else
  9666                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9667                           
  9668                           ; BSR set to: 0
  9669                           
  9670                           ; BSR set to: 0
  9671  001DA4  0E79               	movlw	121
  9672  001DA6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9673  001DA8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9674  001DAA  B4D8               	btfsc	status,2,c
  9675  001DAC  D32C               	goto	u11340
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;TabelasUmidade.h: 218: else
  9679                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9680                           
  9681                           ; BSR set to: 0
  9682                           
  9683                           ; BSR set to: 0
  9684  001DAE  0E7A               	movlw	122
  9685  001DB0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9686  001DB2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9687  001DB4  A4D8               	btfss	status,2,c
  9688  001DB6  D002               	goto	l571
  9689                           
  9690                           ; BSR set to: 0
  9691  001DB8  0E2E               	movlw	46
  9692  001DBA  D498               	goto	L22
  9693  001DBC                     l571:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;TabelasUmidade.h: 220: else
  9697                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9698                           
  9699                           ; BSR set to: 0
  9700  001DBC  0E7B               	movlw	123
  9701  001DBE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9702  001DC0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9703  001DC2  B4D8               	btfsc	status,2,c
  9704  001DC4  D328               	goto	u11350
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;TabelasUmidade.h: 222: else
  9708                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9709                           
  9710                           ; BSR set to: 0
  9711                           
  9712                           ; BSR set to: 0
  9713  001DC6  0E7C               	movlw	124
  9714  001DC8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9715  001DCA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9716  001DCC  B4D8               	btfsc	status,2,c
  9717  001DCE  D189               	goto	u10750
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;TabelasUmidade.h: 224: else
  9721                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9722                           
  9723                           ; BSR set to: 0
  9724                           
  9725                           ; BSR set to: 0
  9726  001DD0  0E7D               	movlw	125
  9727  001DD2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9728  001DD4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9729  001DD6  B4D8               	btfsc	status,2,c
  9730  001DD8  D326               	goto	u11360
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;TabelasUmidade.h: 226: else
  9734                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9735                           
  9736                           ; BSR set to: 0
  9737                           
  9738                           ; BSR set to: 0
  9739  001DDA  0E7E               	movlw	126
  9740  001DDC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9741  001DDE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9742  001DE0  B4D8               	btfsc	status,2,c
  9743  001DE2  D187               	goto	u10760
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;TabelasUmidade.h: 228: else
  9747                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9748                           
  9749                           ; BSR set to: 0
  9750                           
  9751                           ; BSR set to: 0
  9752  001DE4  0E7F               	movlw	127
  9753  001DE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9754  001DE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9755  001DEA  B4D8               	btfsc	status,2,c
  9756  001DEC  D32C               	goto	u11380
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;TabelasUmidade.h: 230: else
  9760                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9761                           
  9762                           ; BSR set to: 0
  9763                           
  9764                           ; BSR set to: 0
  9765  001DEE  0E80               	movlw	128
  9766  001DF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9767  001DF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9768  001DF4  B4D8               	btfsc	status,2,c
  9769  001DF6  D327               	goto	u11380
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;TabelasUmidade.h: 232: else
  9773                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9774                           
  9775                           ; BSR set to: 0
  9776                           
  9777                           ; BSR set to: 0
  9778  001DF8  0E81               	movlw	129
  9779  001DFA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9780  001DFC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9781  001DFE  B4D8               	btfsc	status,2,c
  9782  001E00  D32A               	goto	u11390
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;TabelasUmidade.h: 234: else
  9786                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9787                           
  9788                           ; BSR set to: 0
  9789                           
  9790                           ; BSR set to: 0
  9791  001E02  0E82               	movlw	130
  9792  001E04  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9793  001E06  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9794  001E08  A4D8               	btfss	status,2,c
  9795  001E0A  D002               	goto	l587
  9796                           
  9797                           ; BSR set to: 0
  9798  001E0C  0E26               	movlw	38
  9799  001E0E  D46E               	goto	L22
  9800  001E10                     l587:
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;TabelasUmidade.h: 236: else
  9804                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9805                           
  9806                           ; BSR set to: 0
  9807  001E10  0E83               	movlw	131
  9808  001E12  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9809  001E14  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9810  001E16  B4D8               	btfsc	status,2,c
  9811  001E18  D326               	goto	u11400
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;TabelasUmidade.h: 238: else
  9815                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
  9816                           
  9817                           ; BSR set to: 0
  9818                           
  9819                           ; BSR set to: 0
  9820  001E1A  0E84               	movlw	132
  9821  001E1C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9822  001E1E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9823  001E20  B4D8               	btfsc	status,2,c
  9824  001E22  D329               	goto	u11410
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;TabelasUmidade.h: 240: else
  9828                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
  9829                           
  9830                           ; BSR set to: 0
  9831                           
  9832                           ; BSR set to: 0
  9833  001E24  0E85               	movlw	133
  9834  001E26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9835  001E28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9836  001E2A  B4D8               	btfsc	status,2,c
  9837  001E2C  D324               	goto	u11410
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;TabelasUmidade.h: 242: else
  9841                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
  9842                           
  9843                           ; BSR set to: 0
  9844                           
  9845                           ; BSR set to: 0
  9846  001E2E  0E86               	movlw	134
  9847  001E30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9848  001E32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9849  001E34  B4D8               	btfsc	status,2,c
  9850  001E36  D31F               	goto	u11410
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;TabelasUmidade.h: 244: else
  9854                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
  9855                           
  9856                           ; BSR set to: 0
  9857                           
  9858                           ; BSR set to: 0
  9859  001E38  0E87               	movlw	135
  9860  001E3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9861  001E3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9862  001E3E  B4D8               	btfsc	status,2,c
  9863  001E40  D322               	goto	u11420
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;TabelasUmidade.h: 246: else
  9867                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
  9868                           
  9869                           ; BSR set to: 0
  9870                           
  9871                           ; BSR set to: 0
  9872  001E42  0E88               	movlw	136
  9873  001E44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9874  001E46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9875  001E48  B4D8               	btfsc	status,2,c
  9876  001E4A  D325               	goto	u11430
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;TabelasUmidade.h: 248: else
  9880                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
  9881                           
  9882                           ; BSR set to: 0
  9883                           
  9884                           ; BSR set to: 0
  9885  001E4C  0E89               	movlw	137
  9886  001E4E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9887  001E50  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9888  001E52  B4D8               	btfsc	status,2,c
  9889  001E54  D328               	goto	u11440
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;TabelasUmidade.h: 250: else
  9893                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
  9894                           
  9895                           ; BSR set to: 0
  9896                           
  9897                           ; BSR set to: 0
  9898  001E56  0E8A               	movlw	138
  9899  001E58  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9900  001E5A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9901  001E5C  B4D8               	btfsc	status,2,c
  9902  001E5E  D32B               	goto	u11450
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;TabelasUmidade.h: 252: else
  9906                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
  9907                           
  9908                           ; BSR set to: 0
  9909                           
  9910                           ; BSR set to: 0
  9911  001E60  0E8B               	movlw	139
  9912  001E62  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9913  001E64  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9914  001E66  B4D8               	btfsc	status,2,c
  9915  001E68  D32E               	goto	u11460
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;TabelasUmidade.h: 254: else
  9919                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
  9920                           
  9921                           ; BSR set to: 0
  9922                           
  9923                           ; BSR set to: 0
  9924  001E6A  0E8C               	movlw	140
  9925  001E6C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9926  001E6E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9927  001E70  B4D8               	btfsc	status,2,c
  9928  001E72  D331               	goto	u11470
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;TabelasUmidade.h: 256: else
  9932                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
  9933                           
  9934                           ; BSR set to: 0
  9935                           
  9936                           ; BSR set to: 0
  9937  001E74  0E8D               	movlw	141
  9938  001E76  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9939  001E78  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9940  001E7A  B4D8               	btfsc	status,2,c
  9941  001E7C  D334               	goto	u11480
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;TabelasUmidade.h: 258: else
  9945                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
  9946                           
  9947                           ; BSR set to: 0
  9948                           
  9949                           ; BSR set to: 0
  9950  001E7E  0E8E               	movlw	142
  9951  001E80  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9952  001E82  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9953  001E84  B4D8               	btfsc	status,2,c
  9954  001E86  D337               	goto	u11490
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;TabelasUmidade.h: 260: else
  9958                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
  9959                           
  9960                           ; BSR set to: 0
  9961                           
  9962                           ; BSR set to: 0
  9963  001E88  0E8F               	movlw	143
  9964  001E8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9965  001E8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9966  001E8E  B4D8               	btfsc	status,2,c
  9967  001E90  D33A               	goto	u11500
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;TabelasUmidade.h: 262: else
  9971                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
  9972                           
  9973                           ; BSR set to: 0
  9974                           
  9975                           ; BSR set to: 0
  9976  001E92  0E90               	movlw	144
  9977  001E94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9978  001E96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9979  001E98  B4D8               	btfsc	status,2,c
  9980  001E9A  D33D               	goto	u11510
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;TabelasUmidade.h: 264: else
  9984                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
  9985                           
  9986                           ; BSR set to: 0
  9987                           
  9988                           ; BSR set to: 0
  9989  001E9C  0E91               	movlw	145
  9990  001E9E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9991  001EA0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9992  001EA2  B4D8               	btfsc	status,2,c
  9993  001EA4  D340               	goto	u11520
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;TabelasUmidade.h: 266: else
  9997                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
  9998                           
  9999                           ; BSR set to: 0
 10000                           
 10001                           ; BSR set to: 0
 10002  001EA6  0E92               	movlw	146
 10003  001EA8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10004  001EAA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10005  001EAC  B4D8               	btfsc	status,2,c
 10006  001EAE  D343               	goto	u11530
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;TabelasUmidade.h: 268: else
 10010                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
 10011                           
 10012                           ; BSR set to: 0
 10013                           
 10014                           ; BSR set to: 0
 10015  001EB0  0E93               	movlw	147
 10016  001EB2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10017  001EB4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10018  001EB6  B4D8               	btfsc	status,2,c
 10019  001EB8  D346               	goto	u11540
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;TabelasUmidade.h: 270: else
 10023                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
 10024                           
 10025                           ; BSR set to: 0
 10026                           
 10027                           ; BSR set to: 0
 10028  001EBA  0E94               	movlw	148
 10029  001EBC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10030  001EBE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10031  001EC0  B4D8               	btfsc	status,2,c
 10032  001EC2  D349               	goto	u11550
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;TabelasUmidade.h: 272: else
 10036                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
 10037                           
 10038                           ; BSR set to: 0
 10039                           
 10040                           ; BSR set to: 0
 10041  001EC4  0E95               	movlw	149
 10042  001EC6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10043  001EC8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10044  001ECA  B4D8               	btfsc	status,2,c
 10045  001ECC  D34C               	goto	u11560
 10046                           
 10047                           ; BSR set to: 0
 10048                           ;TabelasUmidade.h: 274: else
 10049                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10050                           
 10051                           ; BSR set to: 0
 10052                           
 10053                           ; BSR set to: 0
 10054  001ECE  0E96               	movlw	150
 10055  001ED0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10056  001ED2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10057  001ED4  B4D8               	btfsc	status,2,c
 10058  001ED6  D34F               	goto	u11570
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;TabelasUmidade.h: 276: else
 10062                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10063                           
 10064                           ; BSR set to: 0
 10065                           
 10066                           ; BSR set to: 0
 10067  001ED8  0E97               	movlw	151
 10068  001EDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10069  001EDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10070  001EDE  B4D8               	btfsc	status,2,c
 10071  001EE0  D352               	goto	u11580
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;TabelasUmidade.h: 278: else
 10075                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10076                           
 10077                           ; BSR set to: 0
 10078                           
 10079                           ; BSR set to: 0
 10080  001EE2  0E98               	movlw	152
 10081  001EE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10082  001EE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10083  001EE8  B4D8               	btfsc	status,2,c
 10084  001EEA  D355               	goto	u11590
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;TabelasUmidade.h: 280: else
 10088                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10089                           
 10090                           ; BSR set to: 0
 10091                           
 10092                           ; BSR set to: 0
 10093  001EEC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10094  001EEE  D00E               	goto	l633
 10095  001EF0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10096  001EF2  E104               	bnz	u10410
 10097  001EF4  0E99               	movlw	153
 10098  001EF6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10099  001EF8  A0D8               	btfss	status,0,c
 10100  001EFA  D008               	goto	l633
 10101  001EFC                     u10410:
 10102                           
 10103                           ; BSR set to: 0
 10104  001EFC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10105  001EFE  D35E               	goto	u11610
 10106  001F00  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10107  001F02  E104               	bnz	l7403
 10108  001F04  0E9D               	movlw	157
 10109  001F06  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10110  001F08  A0D8               	btfss	status,0,c
 10111  001F0A  D358               	goto	u11610
 10112  001F0C                     l633:
 10113  001F0C                     l7403:
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;TabelasUmidade.h: 282: else
 10117                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10118  001F0C  0E9D               	movlw	157
 10119  001F0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10120  001F10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10121  001F12  B4D8               	btfsc	status,2,c
 10122  001F14  D35B               	goto	u11620
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;TabelasUmidade.h: 284: else
 10126                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10127                           
 10128                           ; BSR set to: 0
 10129                           
 10130                           ; BSR set to: 0
 10131  001F16  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10132  001F18  D372               	goto	l638
 10133  001F1A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10134  001F1C  E101               	bnz	u10440
 10135  001F1E  D182               	goto	L24
 10136  001F20                     u10440:
 10137  001F20  D360               	goto	u11630
 10138  001F22                     
 10139                           ; BSR set to: 0
 10140                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10141                           
 10142                           ; BSR set to: 0
 10143  001F22  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10144  001F24  D006               	goto	u10450
 10145  001F26  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10146  001F28  E107               	bnz	l7415
 10147  001F2A  0E5B               	movlw	91
 10148  001F2C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10149  001F2E  B0D8               	btfsc	status,0,c
 10150  001F30  D003               	goto	l640
 10151  001F32                     u10450:
 10152                           
 10153                           ; BSR set to: 0
 10154  001F32  0E61               	movlw	97
 10155  001F34  EF76  F00B         	goto	L22
 10156  001F38                     l640:
 10157  001F38                     l7415:
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;TabelasUmidade.h: 289: else
 10161                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10162  001F38  0E5B               	movlw	91
 10163  001F3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10164  001F3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10165  001F3E  A4D8               	btfss	status,2,c
 10166  001F40  D003               	goto	l642
 10167  001F42                     u10460:
 10168                           
 10169                           ; BSR set to: 0
 10170  001F42  0E60               	movlw	96
 10171  001F44  EF76  F00B         	goto	L22
 10172  001F48                     l642:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;TabelasUmidade.h: 291: else
 10176                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10177                           
 10178                           ; BSR set to: 0
 10179  001F48  0E5C               	movlw	92
 10180  001F4A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10181  001F4C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10182  001F4E  B4D8               	btfsc	status,2,c
 10183  001F50  D005               	goto	u10480
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;TabelasUmidade.h: 293: else
 10187                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10188                           
 10189                           ; BSR set to: 0
 10190                           
 10191                           ; BSR set to: 0
 10192  001F52  0E5C               	movlw	92
 10193  001F54  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10194  001F56  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10195  001F58  A4D8               	btfss	status,2,c
 10196  001F5A  D003               	goto	l646
 10197  001F5C                     u10480:
 10198                           
 10199                           ; BSR set to: 0
 10200  001F5C  0E5F               	movlw	95
 10201  001F5E  EF76  F00B         	goto	L22
 10202  001F62                     l646:
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;TabelasUmidade.h: 295: else
 10206                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10207                           
 10208                           ; BSR set to: 0
 10209  001F62  0E5D               	movlw	93
 10210  001F64  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10211  001F66  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10212  001F68  B4D8               	btfsc	status,2,c
 10213  001F6A  EF68  F00B         	goto	u8720
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;TabelasUmidade.h: 297: else
 10217                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10218                           
 10219                           ; BSR set to: 0
 10220                           
 10221                           ; BSR set to: 0
 10222  001F6E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10223  001F70  D010               	goto	l650
 10224  001F72  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10225  001F74  E104               	bnz	u10500
 10226  001F76  0E5E               	movlw	94
 10227  001F78  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10228  001F7A  A0D8               	btfss	status,0,c
 10229  001F7C  D00A               	goto	l650
 10230  001F7E                     u10500:
 10231                           
 10232                           ; BSR set to: 0
 10233  001F7E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10234  001F80  EF61  F00B         	goto	u8710
 10235  001F84  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10236  001F86  E105               	bnz	l7437
 10237  001F88  0E65               	movlw	101
 10238  001F8A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10239  001F8C  A0D8               	btfss	status,0,c
 10240  001F8E  EF61  F00B         	goto	u8710
 10241  001F92                     l650:
 10242  001F92                     l7437:
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;TabelasUmidade.h: 299: else
 10246                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10247  001F92  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10248  001F94  D011               	goto	l652
 10249  001F96  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10250  001F98  E104               	bnz	u10520
 10251  001F9A  0E65               	movlw	101
 10252  001F9C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10253  001F9E  A0D8               	btfss	status,0,c
 10254  001FA0  D00B               	goto	l652
 10255  001FA2                     u10520:
 10256                           
 10257                           ; BSR set to: 0
 10258  001FA2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10259  001FA4  D006               	goto	u10530
 10260  001FA6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10261  001FA8  E107               	bnz	l7443
 10262  001FAA  0E67               	movlw	103
 10263  001FAC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10264  001FAE  B0D8               	btfsc	status,0,c
 10265  001FB0  D003               	goto	l652
 10266  001FB2                     u10530:
 10267                           
 10268                           ; BSR set to: 0
 10269  001FB2  0E53               	movlw	83
 10270  001FB4  EF76  F00B         	goto	L22
 10271  001FB8                     l652:
 10272  001FB8                     l7443:
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;TabelasUmidade.h: 301: else
 10276                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10277  001FB8  0E67               	movlw	103
 10278  001FBA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10279  001FBC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10280  001FBE  A4D8               	btfss	status,2,c
 10281  001FC0  D003               	goto	l654
 10282                           
 10283                           ; BSR set to: 0
 10284  001FC2  0E51               	movlw	81
 10285  001FC4  EF76  F00B         	goto	L22
 10286  001FC8                     l654:
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;TabelasUmidade.h: 303: else
 10290                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10291                           
 10292                           ; BSR set to: 0
 10293  001FC8  0E68               	movlw	104
 10294  001FCA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10295  001FCC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10296  001FCE  B4D8               	btfsc	status,2,c
 10297  001FD0  D17F               	goto	u11150
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;TabelasUmidade.h: 305: else
 10301                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10302                           
 10303                           ; BSR set to: 0
 10304                           
 10305                           ; BSR set to: 0
 10306  001FD2  0E69               	movlw	105
 10307  001FD4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10308  001FD6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10309  001FD8  B4D8               	btfsc	status,2,c
 10310  001FDA  D18A               	goto	u11170
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;TabelasUmidade.h: 307: else
 10314                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10315                           
 10316                           ; BSR set to: 0
 10317                           
 10318                           ; BSR set to: 0
 10319  001FDC  0E6A               	movlw	106
 10320  001FDE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10321  001FE0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10322  001FE2  B4D8               	btfsc	status,2,c
 10323  001FE4  D195               	goto	u11190
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;TabelasUmidade.h: 309: else
 10327                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10328                           
 10329                           ; BSR set to: 0
 10330                           
 10331                           ; BSR set to: 0
 10332  001FE6  0E6B               	movlw	107
 10333  001FE8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10334  001FEA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10335  001FEC  A4D8               	btfss	status,2,c
 10336  001FEE  D003               	goto	l662
 10337                           
 10338                           ; BSR set to: 0
 10339  001FF0  0E49               	movlw	73
 10340  001FF2  EF76  F00B         	goto	L22
 10341  001FF6                     l662:
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;TabelasUmidade.h: 311: else
 10345                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10346                           
 10347                           ; BSR set to: 0
 10348  001FF6  0E6C               	movlw	108
 10349  001FF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10350  001FFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10351  001FFC  A4D8               	btfss	status,2,c
 10352  001FFE  D003               	goto	l664
 10353  002000                     u10590:
 10354                           
 10355                           ; BSR set to: 0
 10356  002000  0E48               	movlw	72
 10357  002002  EF76  F00B         	goto	L22
 10358  002006                     l664:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;TabelasUmidade.h: 313: else
 10362                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10363                           
 10364                           ; BSR set to: 0
 10365  002006  0E6D               	movlw	109
 10366  002008  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10367  00200A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10368  00200C  A4D8               	btfss	status,2,c
 10369  00200E  D003               	goto	l666
 10370                           
 10371                           ; BSR set to: 0
 10372  002010  0E47               	movlw	71
 10373  002012  EF76  F00B         	goto	L22
 10374  002016                     l666:
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;TabelasUmidade.h: 315: else
 10378                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10379                           
 10380                           ; BSR set to: 0
 10381  002016  0E6E               	movlw	110
 10382  002018  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10383  00201A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10384  00201C  B4D8               	btfsc	status,2,c
 10385  00201E  D18B               	goto	u11210
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;TabelasUmidade.h: 317: else
 10389                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10390                           
 10391                           ; BSR set to: 0
 10392                           
 10393                           ; BSR set to: 0
 10394  002020  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10395  002022  D011               	goto	l670
 10396  002024  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10397  002026  E104               	bnz	u10620
 10398  002028  0E6F               	movlw	111
 10399  00202A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10400  00202C  A0D8               	btfss	status,0,c
 10401  00202E  D00B               	goto	l670
 10402  002030                     u10620:
 10403                           
 10404                           ; BSR set to: 0
 10405  002030  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10406  002032  D006               	goto	u10630
 10407  002034  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10408  002036  E107               	bnz	l7481
 10409  002038  0E73               	movlw	115
 10410  00203A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10411  00203C  B0D8               	btfsc	status,0,c
 10412  00203E  D003               	goto	l670
 10413  002040                     u10630:
 10414                           
 10415                           ; BSR set to: 0
 10416  002040  0E41               	movlw	65
 10417  002042  EF76  F00B         	goto	L22
 10418  002046                     l670:
 10419  002046                     l7481:
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;TabelasUmidade.h: 319: else
 10423                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10424  002046  0E73               	movlw	115
 10425  002048  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10426  00204A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10427  00204C  A4D8               	btfss	status,2,c
 10428  00204E  D003               	goto	l672
 10429                           
 10430                           ; BSR set to: 0
 10431  002050  0E3F               	movlw	63
 10432  002052  EF76  F00B         	goto	L22
 10433  002056                     l672:
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;TabelasUmidade.h: 321: else
 10437                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10438                           
 10439                           ; BSR set to: 0
 10440  002056  0E74               	movlw	116
 10441  002058  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10442  00205A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10443  00205C  A4D8               	btfss	status,2,c
 10444  00205E  D003               	goto	l674
 10445                           
 10446                           ; BSR set to: 0
 10447  002060  0E3D               	movlw	61
 10448  002062  EF76  F00B         	goto	L22
 10449  002066                     l674:
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;TabelasUmidade.h: 323: else
 10453                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10454                           
 10455                           ; BSR set to: 0
 10456  002066  0E75               	movlw	117
 10457  002068  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10458  00206A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10459  00206C  A4D8               	btfss	status,2,c
 10460  00206E  D003               	goto	l676
 10461                           
 10462                           ; BSR set to: 0
 10463  002070  0E3B               	movlw	59
 10464  002072  EF76  F00B         	goto	L22
 10465  002076                     l676:
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;TabelasUmidade.h: 325: else
 10469                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10470                           
 10471                           ; BSR set to: 0
 10472  002076  0E76               	movlw	118
 10473  002078  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10474  00207A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10475  00207C  A4D8               	btfss	status,2,c
 10476  00207E  D003               	goto	l678
 10477                           
 10478                           ; BSR set to: 0
 10479  002080  0E39               	movlw	57
 10480  002082  EF76  F00B         	goto	L22
 10481  002086                     l678:
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;TabelasUmidade.h: 327: else
 10485                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10486                           
 10487                           ; BSR set to: 0
 10488  002086  0E77               	movlw	119
 10489  002088  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10490  00208A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10491  00208C  B4D8               	btfsc	status,2,c
 10492  00208E  D193               	goto	u11290
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;TabelasUmidade.h: 329: else
 10496                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10497                           
 10498                           ; BSR set to: 0
 10499                           
 10500                           ; BSR set to: 0
 10501  002090  0E78               	movlw	120
 10502  002092  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10503  002094  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10504  002096  B4D8               	btfsc	status,2,c
 10505  002098  D196               	goto	u11300
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;TabelasUmidade.h: 331: else
 10509                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10510                           
 10511                           ; BSR set to: 0
 10512                           
 10513                           ; BSR set to: 0
 10514  00209A  0E79               	movlw	121
 10515  00209C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10516  00209E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10517  0020A0  A4D8               	btfss	status,2,c
 10518  0020A2  D003               	goto	l684
 10519                           
 10520                           ; BSR set to: 0
 10521  0020A4  0E33               	movlw	51
 10522  0020A6  EF76  F00B         	goto	L22
 10523  0020AA                     l684:
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;TabelasUmidade.h: 333: else
 10527                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10528                           
 10529                           ; BSR set to: 0
 10530  0020AA  0E7A               	movlw	122
 10531  0020AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10532  0020AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10533  0020B0  B4D8               	btfsc	status,2,c
 10534  0020B2  D199               	goto	u11320
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;TabelasUmidade.h: 335: else
 10538                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10539                           
 10540                           ; BSR set to: 0
 10541                           
 10542                           ; BSR set to: 0
 10543  0020B4  0E7B               	movlw	123
 10544  0020B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10545  0020B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10546  0020BA  A4D8               	btfss	status,2,c
 10547  0020BC  D003               	goto	l688
 10548  0020BE                     u10720:
 10549                           
 10550                           ; BSR set to: 0
 10551  0020BE  0E30               	movlw	48
 10552  0020C0  EF76  F00B         	goto	L22
 10553  0020C4                     l688:
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;TabelasUmidade.h: 337: else
 10557                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10558                           
 10559                           ; BSR set to: 0
 10560  0020C4  0E7C               	movlw	124
 10561  0020C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10562  0020C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10563  0020CA  B4D8               	btfsc	status,2,c
 10564  0020CC  D19C               	goto	u11340
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;TabelasUmidade.h: 339: else
 10568                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10569                           
 10570                           ; BSR set to: 0
 10571                           
 10572                           ; BSR set to: 0
 10573  0020CE  0E7D               	movlw	125
 10574  0020D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10575  0020D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10576  0020D4  B4D8               	btfsc	status,2,c
 10577  0020D6  D19F               	goto	u11350
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;TabelasUmidade.h: 341: else
 10581                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10582                           
 10583                           ; BSR set to: 0
 10584                           
 10585                           ; BSR set to: 0
 10586  0020D8  0E7E               	movlw	126
 10587  0020DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10588  0020DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10589  0020DE  A4D8               	btfss	status,2,c
 10590  0020E0  D003               	goto	l694
 10591  0020E2                     u10750:
 10592                           
 10593                           ; BSR set to: 0
 10594  0020E2  0E2C               	movlw	44
 10595  0020E4  EF76  F00B         	goto	L22
 10596  0020E8                     l694:
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;TabelasUmidade.h: 343: else
 10600                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10601                           
 10602                           ; BSR set to: 0
 10603  0020E8  0E7F               	movlw	127
 10604  0020EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10605  0020EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10606  0020EE  A4D8               	btfss	status,2,c
 10607  0020F0  D003               	goto	l696
 10608  0020F2                     u10760:
 10609                           
 10610                           ; BSR set to: 0
 10611  0020F2  0E2A               	movlw	42
 10612  0020F4  EF76  F00B         	goto	L22
 10613  0020F8                     l696:
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;TabelasUmidade.h: 345: else
 10617                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10618                           
 10619                           ; BSR set to: 0
 10620  0020F8  0E80               	movlw	128
 10621  0020FA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10622  0020FC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10623  0020FE  B4D8               	btfsc	status,2,c
 10624  002100  D19A               	goto	u11370
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;TabelasUmidade.h: 347: else
 10628                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10629                           
 10630                           ; BSR set to: 0
 10631                           
 10632                           ; BSR set to: 0
 10633  002102  0E81               	movlw	129
 10634  002104  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10635  002106  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10636  002108  B4D8               	btfsc	status,2,c
 10637  00210A  D195               	goto	u11370
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;TabelasUmidade.h: 349: else
 10641                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10642                           
 10643                           ; BSR set to: 0
 10644                           
 10645                           ; BSR set to: 0
 10646  00210C  0E82               	movlw	130
 10647  00210E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10648  002110  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10649  002112  B4D8               	btfsc	status,2,c
 10650  002114  D198               	goto	u11380
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;TabelasUmidade.h: 351: else
 10654                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10655                           
 10656                           ; BSR set to: 0
 10657                           
 10658                           ; BSR set to: 0
 10659  002116  0E83               	movlw	131
 10660  002118  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10661  00211A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10662  00211C  B4D8               	btfsc	status,2,c
 10663  00211E  D193               	goto	u11380
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;TabelasUmidade.h: 353: else
 10667                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10668                           
 10669                           ; BSR set to: 0
 10670                           
 10671                           ; BSR set to: 0
 10672  002120  0E84               	movlw	132
 10673  002122  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10674  002124  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10675  002126  B4D8               	btfsc	status,2,c
 10676  002128  D196               	goto	u11390
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;TabelasUmidade.h: 355: else
 10680                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10681                           
 10682                           ; BSR set to: 0
 10683                           
 10684                           ; BSR set to: 0
 10685  00212A  0E85               	movlw	133
 10686  00212C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10687  00212E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10688  002130  B4D8               	btfsc	status,2,c
 10689  002132  D191               	goto	u11390
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;TabelasUmidade.h: 357: else
 10693                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10694                           
 10695                           ; BSR set to: 0
 10696                           
 10697                           ; BSR set to: 0
 10698  002134  0E86               	movlw	134
 10699  002136  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10700  002138  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10701  00213A  B4D8               	btfsc	status,2,c
 10702  00213C  D19C               	goto	u11410
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;TabelasUmidade.h: 359: else
 10706                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10707                           
 10708                           ; BSR set to: 0
 10709                           
 10710                           ; BSR set to: 0
 10711  00213E  0E87               	movlw	135
 10712  002140  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10713  002142  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10714  002144  B4D8               	btfsc	status,2,c
 10715  002146  D19F               	goto	u11420
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;TabelasUmidade.h: 361: else
 10719                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10720                           
 10721                           ; BSR set to: 0
 10722                           
 10723                           ; BSR set to: 0
 10724  002148  0E88               	movlw	136
 10725  00214A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10726  00214C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10727  00214E  B4D8               	btfsc	status,2,c
 10728  002150  D1A2               	goto	u11430
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;TabelasUmidade.h: 363: else
 10732                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10733                           
 10734                           ; BSR set to: 0
 10735                           
 10736                           ; BSR set to: 0
 10737  002152  0E89               	movlw	137
 10738  002154  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10739  002156  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10740  002158  B4D8               	btfsc	status,2,c
 10741  00215A  D1A5               	goto	u11440
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;TabelasUmidade.h: 365: else
 10745                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10746                           
 10747                           ; BSR set to: 0
 10748                           
 10749                           ; BSR set to: 0
 10750  00215C  0E8A               	movlw	138
 10751  00215E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10752  002160  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10753  002162  B4D8               	btfsc	status,2,c
 10754  002164  D1A8               	goto	u11450
 10755                           
 10756                           ; BSR set to: 0
 10757                           ;TabelasUmidade.h: 367: else
 10758                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10759                           
 10760                           ; BSR set to: 0
 10761                           
 10762                           ; BSR set to: 0
 10763  002166  0E8B               	movlw	139
 10764  002168  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10765  00216A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10766  00216C  B4D8               	btfsc	status,2,c
 10767  00216E  D1AB               	goto	u11460
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;TabelasUmidade.h: 369: else
 10771                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10772                           
 10773                           ; BSR set to: 0
 10774                           
 10775                           ; BSR set to: 0
 10776  002170  0E8C               	movlw	140
 10777  002172  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10778  002174  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10779  002176  B4D8               	btfsc	status,2,c
 10780  002178  D1AE               	goto	u11470
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;TabelasUmidade.h: 371: else
 10784                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10785                           
 10786                           ; BSR set to: 0
 10787                           
 10788                           ; BSR set to: 0
 10789  00217A  0E8D               	movlw	141
 10790  00217C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10791  00217E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10792  002180  B4D8               	btfsc	status,2,c
 10793  002182  D1B1               	goto	u11480
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;TabelasUmidade.h: 373: else
 10797                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10798                           
 10799                           ; BSR set to: 0
 10800                           
 10801                           ; BSR set to: 0
 10802  002184  0E8E               	movlw	142
 10803  002186  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10804  002188  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10805  00218A  B4D8               	btfsc	status,2,c
 10806  00218C  D1B4               	goto	u11490
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;TabelasUmidade.h: 375: else
 10810                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 10811                           
 10812                           ; BSR set to: 0
 10813                           
 10814                           ; BSR set to: 0
 10815  00218E  0E8F               	movlw	143
 10816  002190  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10817  002192  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10818  002194  B4D8               	btfsc	status,2,c
 10819  002196  D1B7               	goto	u11500
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;TabelasUmidade.h: 377: else
 10823                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 10824                           
 10825                           ; BSR set to: 0
 10826                           
 10827                           ; BSR set to: 0
 10828  002198  0E90               	movlw	144
 10829  00219A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10830  00219C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10831  00219E  B4D8               	btfsc	status,2,c
 10832  0021A0  D1BA               	goto	u11510
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;TabelasUmidade.h: 379: else
 10836                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 10837                           
 10838                           ; BSR set to: 0
 10839                           
 10840                           ; BSR set to: 0
 10841  0021A2  0E91               	movlw	145
 10842  0021A4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10843  0021A6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10844  0021A8  B4D8               	btfsc	status,2,c
 10845  0021AA  D1BD               	goto	u11520
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;TabelasUmidade.h: 381: else
 10849                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 10850                           
 10851                           ; BSR set to: 0
 10852                           
 10853                           ; BSR set to: 0
 10854  0021AC  0E92               	movlw	146
 10855  0021AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10856  0021B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10857  0021B2  B4D8               	btfsc	status,2,c
 10858  0021B4  D1C0               	goto	u11530
 10859                           
 10860                           ; BSR set to: 0
 10861                           ;TabelasUmidade.h: 383: else
 10862                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 10863                           
 10864                           ; BSR set to: 0
 10865                           
 10866                           ; BSR set to: 0
 10867  0021B6  0E93               	movlw	147
 10868  0021B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10869  0021BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10870  0021BC  B4D8               	btfsc	status,2,c
 10871  0021BE  D1C3               	goto	u11540
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;TabelasUmidade.h: 385: else
 10875                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 10876                           
 10877                           ; BSR set to: 0
 10878                           
 10879                           ; BSR set to: 0
 10880  0021C0  0E94               	movlw	148
 10881  0021C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10882  0021C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10883  0021C6  B4D8               	btfsc	status,2,c
 10884  0021C8  D1C6               	goto	u11550
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;TabelasUmidade.h: 387: else
 10888                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 10889                           
 10890                           ; BSR set to: 0
 10891                           
 10892                           ; BSR set to: 0
 10893  0021CA  0E95               	movlw	149
 10894  0021CC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10895  0021CE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10896  0021D0  B4D8               	btfsc	status,2,c
 10897  0021D2  D1C9               	goto	u11560
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;TabelasUmidade.h: 389: else
 10901                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 10902                           
 10903                           ; BSR set to: 0
 10904                           
 10905                           ; BSR set to: 0
 10906  0021D4  0E96               	movlw	150
 10907  0021D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10908  0021D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10909  0021DA  B4D8               	btfsc	status,2,c
 10910  0021DC  D1CC               	goto	u11570
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;TabelasUmidade.h: 391: else
 10914                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 10915                           
 10916                           ; BSR set to: 0
 10917                           
 10918                           ; BSR set to: 0
 10919  0021DE  0E97               	movlw	151
 10920  0021E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10921  0021E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10922  0021E4  B4D8               	btfsc	status,2,c
 10923  0021E6  D1CF               	goto	u11580
 10924                           
 10925                           ; BSR set to: 0
 10926                           ;TabelasUmidade.h: 393: else
 10927                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 10928                           
 10929                           ; BSR set to: 0
 10930                           
 10931                           ; BSR set to: 0
 10932  0021E8  0E98               	movlw	152
 10933  0021EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10934  0021EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10935  0021EE  B4D8               	btfsc	status,2,c
 10936  0021F0  D1D2               	goto	u11590
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;TabelasUmidade.h: 395: else
 10940                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10941                           
 10942                           ; BSR set to: 0
 10943                           
 10944                           ; BSR set to: 0
 10945  0021F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10946  0021F4  D00E               	goto	l748
 10947  0021F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10948  0021F8  E104               	bnz	u11020
 10949  0021FA  0E99               	movlw	153
 10950  0021FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10951  0021FE  A0D8               	btfss	status,0,c
 10952  002200  D008               	goto	l748
 10953  002202                     u11020:
 10954                           
 10955                           ; BSR set to: 0
 10956  002202  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10957  002204  D1DB               	goto	u11610
 10958  002206  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10959  002208  E104               	bnz	l7639
 10960  00220A  0E9D               	movlw	157
 10961  00220C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10962  00220E  A0D8               	btfss	status,0,c
 10963  002210  D1D5               	goto	u11610
 10964  002212                     l748:
 10965  002212                     l7639:
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;TabelasUmidade.h: 397: else
 10969                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 10970  002212  0E9D               	movlw	157
 10971  002214  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10972  002216  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10973  002218  B4D8               	btfsc	status,2,c
 10974  00221A  D1D8               	goto	u11620
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;TabelasUmidade.h: 399: else
 10978                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 10979                           
 10980                           ; BSR set to: 0
 10981                           
 10982                           ; BSR set to: 0
 10983  00221C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10984  00221E  D1EF               	goto	l638
 10985  002220  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10986  002222  E104               	bnz	u11050
 10987  002224                     L24:
 10988  002224  0E9E               	movlw	158
 10989  002226  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10990  002228  A0D8               	btfss	status,0,c
 10991  00222A  D1E9               	goto	l638
 10992  00222C                     u11050:
 10993  00222C  D1DA               	goto	u11630
 10994  00222E                     
 10995                           ; BSR set to: 0
 10996                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 10997                           
 10998                           ; BSR set to: 0
 10999  00222E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11000  002230  D006               	goto	u11060
 11001  002232  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11002  002234  E107               	bnz	l7651
 11003  002236  0E5D               	movlw	93
 11004  002238  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11005  00223A  B0D8               	btfsc	status,0,c
 11006  00223C  D003               	goto	l754
 11007  00223E                     u11060:
 11008                           
 11009                           ; BSR set to: 0
 11010  00223E  0E64               	movlw	100
 11011  002240  EF76  F00B         	goto	L22
 11012  002244                     l754:
 11013  002244                     l7651:
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;TabelasUmidade.h: 404: else
 11017                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 11018  002244  0E5D               	movlw	93
 11019  002246  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11020  002248  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11021  00224A  A4D8               	btfss	status,2,c
 11022  00224C  D003               	goto	l756
 11023  00224E                     u11070:
 11024                           
 11025                           ; BSR set to: 0
 11026  00224E  0E63               	movlw	99
 11027  002250  EF76  F00B         	goto	L22
 11028  002254                     l756:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;TabelasUmidade.h: 406: else
 11032                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 11033                           
 11034                           ; BSR set to: 0
 11035  002254  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11036  002256  D011               	goto	l758
 11037  002258  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11038  00225A  E104               	bnz	u11080
 11039  00225C  0E5E               	movlw	94
 11040  00225E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11041  002260  A0D8               	btfss	status,0,c
 11042  002262  D00B               	goto	l758
 11043  002264                     u11080:
 11044                           
 11045                           ; BSR set to: 0
 11046  002264  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11047  002266  D006               	goto	u11090
 11048  002268  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11049  00226A  E107               	bnz	l7661
 11050  00226C  0E65               	movlw	101
 11051  00226E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11052  002270  B0D8               	btfsc	status,0,c
 11053  002272  D003               	goto	l758
 11054  002274                     u11090:
 11055                           
 11056                           ; BSR set to: 0
 11057  002274  0E62               	movlw	98
 11058  002276  EF76  F00B         	goto	L22
 11059  00227A                     l758:
 11060  00227A                     l7661:
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;TabelasUmidade.h: 408: else
 11064                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11065  00227A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11066  00227C  D010               	goto	l760
 11067  00227E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11068  002280  E104               	bnz	u11100
 11069  002282  0E65               	movlw	101
 11070  002284  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11071  002286  A0D8               	btfss	status,0,c
 11072  002288  D00A               	goto	l760
 11073  00228A                     u11100:
 11074                           
 11075                           ; BSR set to: 0
 11076  00228A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11077  00228C  EF3E  F00B         	goto	u8660
 11078  002290  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11079  002292  E105               	bnz	l7667
 11080  002294  0E67               	movlw	103
 11081  002296  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11082  002298  A0D8               	btfss	status,0,c
 11083  00229A  EF3E  F00B         	goto	u8660
 11084  00229E                     l760:
 11085  00229E                     l7667:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;TabelasUmidade.h: 410: else
 11089                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11090  00229E  0E67               	movlw	103
 11091  0022A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11092  0022A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11093  0022A4  B4D8               	btfsc	status,2,c
 11094  0022A6  EF30  F00B         	goto	u8640
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;TabelasUmidade.h: 412: else
 11098                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11099                           
 11100                           ; BSR set to: 0
 11101                           
 11102                           ; BSR set to: 0
 11103  0022AA  0E68               	movlw	104
 11104  0022AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11105  0022AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11106  0022B0  B4D8               	btfsc	status,2,c
 11107  0022B2  EF29  F00B         	goto	u8630
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;TabelasUmidade.h: 414: else
 11111                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11112                           
 11113                           ; BSR set to: 0
 11114                           
 11115                           ; BSR set to: 0
 11116  0022B6  0E69               	movlw	105
 11117  0022B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11118  0022BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11119  0022BC  A4D8               	btfss	status,2,c
 11120  0022BE  D003               	goto	l766
 11121                           
 11122                           ; BSR set to: 0
 11123  0022C0  0E52               	movlw	82
 11124  0022C2  EF76  F00B         	goto	L22
 11125  0022C6                     l766:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;TabelasUmidade.h: 416: else
 11129                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11130                           
 11131                           ; BSR set to: 0
 11132  0022C6  0E6A               	movlw	106
 11133  0022C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11134  0022CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11135  0022CC  A4D8               	btfss	status,2,c
 11136  0022CE  D003               	goto	l768
 11137  0022D0                     u11150:
 11138                           
 11139                           ; BSR set to: 0
 11140  0022D0  0E50               	movlw	80
 11141  0022D2  EF76  F00B         	goto	L22
 11142  0022D6                     l768:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;TabelasUmidade.h: 418: else
 11146                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11147                           
 11148                           ; BSR set to: 0
 11149  0022D6  0E6B               	movlw	107
 11150  0022D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11151  0022DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11152  0022DC  A4D8               	btfss	status,2,c
 11153  0022DE  D003               	goto	l770
 11154  0022E0                     u11160:
 11155                           
 11156                           ; BSR set to: 0
 11157  0022E0  0E4E               	movlw	78
 11158  0022E2  EF76  F00B         	goto	L22
 11159  0022E6                     l770:
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;TabelasUmidade.h: 420: else
 11163                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11164                           
 11165                           ; BSR set to: 0
 11166  0022E6  0E6C               	movlw	108
 11167  0022E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11168  0022EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11169  0022EC  A4D8               	btfss	status,2,c
 11170  0022EE  D003               	goto	l772
 11171  0022F0                     u11170:
 11172                           
 11173                           ; BSR set to: 0
 11174  0022F0  0E4D               	movlw	77
 11175  0022F2  EF76  F00B         	goto	L22
 11176  0022F6                     l772:
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;TabelasUmidade.h: 422: else
 11180                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11181                           
 11182                           ; BSR set to: 0
 11183  0022F6  0E6D               	movlw	109
 11184  0022F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11185  0022FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11186  0022FC  A4D8               	btfss	status,2,c
 11187  0022FE  D003               	goto	l774
 11188  002300                     u11180:
 11189                           
 11190                           ; BSR set to: 0
 11191  002300  0E4C               	movlw	76
 11192  002302  EF76  F00B         	goto	L22
 11193  002306                     l774:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;TabelasUmidade.h: 424: else
 11197                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11198                           
 11199                           ; BSR set to: 0
 11200  002306  0E6E               	movlw	110
 11201  002308  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11202  00230A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11203  00230C  A4D8               	btfss	status,2,c
 11204  00230E  D003               	goto	l776
 11205  002310                     u11190:
 11206                           
 11207                           ; BSR set to: 0
 11208  002310  0E4B               	movlw	75
 11209  002312  EF76  F00B         	goto	L22
 11210  002316                     l776:
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;TabelasUmidade.h: 426: else
 11214                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11215                           
 11216                           ; BSR set to: 0
 11217  002316  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11218  002318  D011               	goto	l778
 11219  00231A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11220  00231C  E104               	bnz	u11200
 11221  00231E  0E6F               	movlw	111
 11222  002320  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11223  002322  A0D8               	btfss	status,0,c
 11224  002324  D00B               	goto	l778
 11225  002326                     u11200:
 11226                           
 11227                           ; BSR set to: 0
 11228  002326  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11229  002328  D006               	goto	u11210
 11230  00232A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11231  00232C  E107               	bnz	l7705
 11232  00232E  0E73               	movlw	115
 11233  002330  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11234  002332  B0D8               	btfsc	status,0,c
 11235  002334  D003               	goto	l778
 11236  002336                     u11210:
 11237                           
 11238                           ; BSR set to: 0
 11239  002336  0E46               	movlw	70
 11240  002338  EF76  F00B         	goto	L22
 11241  00233C                     l778:
 11242  00233C                     l7705:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;TabelasUmidade.h: 428: else
 11246                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11247  00233C  0E73               	movlw	115
 11248  00233E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11249  002340  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11250  002342  A4D8               	btfss	status,2,c
 11251  002344  D003               	goto	l780
 11252  002346                     u11220:
 11253                           
 11254                           ; BSR set to: 0
 11255  002346  0E44               	movlw	68
 11256  002348  EF76  F00B         	goto	L22
 11257  00234C                     l780:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;TabelasUmidade.h: 430: else
 11261                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11262                           
 11263                           ; BSR set to: 0
 11264  00234C  0E74               	movlw	116
 11265  00234E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11266  002350  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11267  002352  A4D8               	btfss	status,2,c
 11268  002354  D003               	goto	l782
 11269  002356                     u11230:
 11270                           
 11271                           ; BSR set to: 0
 11272  002356  0E42               	movlw	66
 11273  002358  EF76  F00B         	goto	L22
 11274  00235C                     l782:
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;TabelasUmidade.h: 432: else
 11278                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11279                           
 11280                           ; BSR set to: 0
 11281  00235C  0E75               	movlw	117
 11282  00235E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11283  002360  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11284  002362  A4D8               	btfss	status,2,c
 11285  002364  D003               	goto	l784
 11286                           
 11287                           ; BSR set to: 0
 11288  002366  0E40               	movlw	64
 11289  002368  EF76  F00B         	goto	L22
 11290  00236C                     l784:
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;TabelasUmidade.h: 434: else
 11294                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11295                           
 11296                           ; BSR set to: 0
 11297  00236C  0E76               	movlw	118
 11298  00236E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11299  002370  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11300  002372  A4D8               	btfss	status,2,c
 11301  002374  D003               	goto	l786
 11302                           
 11303                           ; BSR set to: 0
 11304  002376  0E3E               	movlw	62
 11305  002378  EF76  F00B         	goto	L22
 11306  00237C                     l786:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;TabelasUmidade.h: 436: else
 11310                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11311                           
 11312                           ; BSR set to: 0
 11313  00237C  0E77               	movlw	119
 11314  00237E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11315  002380  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11316  002382  A4D8               	btfss	status,2,c
 11317  002384  D003               	goto	l788
 11318  002386                     u11260:
 11319                           
 11320                           ; BSR set to: 0
 11321  002386  0E3C               	movlw	60
 11322  002388  EF76  F00B         	goto	L22
 11323  00238C                     l788:
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;TabelasUmidade.h: 438: else
 11327                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11328                           
 11329                           ; BSR set to: 0
 11330  00238C  0E78               	movlw	120
 11331  00238E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11332  002390  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11333  002392  A4D8               	btfss	status,2,c
 11334  002394  D003               	goto	l790
 11335  002396                     u11270:
 11336                           
 11337                           ; BSR set to: 0
 11338  002396  0E3A               	movlw	58
 11339  002398  EF76  F00B         	goto	L22
 11340  00239C                     l790:
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;TabelasUmidade.h: 440: else
 11344                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11345                           
 11346                           ; BSR set to: 0
 11347  00239C  0E79               	movlw	121
 11348  00239E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11349  0023A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11350  0023A2  A4D8               	btfss	status,2,c
 11351  0023A4  D003               	goto	l792
 11352  0023A6                     u11280:
 11353                           
 11354                           ; BSR set to: 0
 11355  0023A6  0E38               	movlw	56
 11356  0023A8  EF76  F00B         	goto	L22
 11357  0023AC                     l792:
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;TabelasUmidade.h: 442: else
 11361                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11362                           
 11363                           ; BSR set to: 0
 11364  0023AC  0E7A               	movlw	122
 11365  0023AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11366  0023B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11367  0023B2  A4D8               	btfss	status,2,c
 11368  0023B4  D003               	goto	l794
 11369  0023B6                     u11290:
 11370                           
 11371                           ; BSR set to: 0
 11372  0023B6  0E37               	movlw	55
 11373  0023B8  EF76  F00B         	goto	L22
 11374  0023BC                     l794:
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;TabelasUmidade.h: 444: else
 11378                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11379                           
 11380                           ; BSR set to: 0
 11381  0023BC  0E7B               	movlw	123
 11382  0023BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11383  0023C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11384  0023C2  A4D8               	btfss	status,2,c
 11385  0023C4  D003               	goto	l796
 11386  0023C6                     u11300:
 11387                           
 11388                           ; BSR set to: 0
 11389  0023C6  0E35               	movlw	53
 11390  0023C8  EF76  F00B         	goto	L22
 11391  0023CC                     l796:
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;TabelasUmidade.h: 446: else
 11395                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11396                           
 11397                           ; BSR set to: 0
 11398  0023CC  0E7C               	movlw	124
 11399  0023CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11400  0023D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11401  0023D2  A4D8               	btfss	status,2,c
 11402  0023D4  D003               	goto	l798
 11403  0023D6                     u11310:
 11404                           
 11405                           ; BSR set to: 0
 11406  0023D6  0E34               	movlw	52
 11407  0023D8  EF76  F00B         	goto	L22
 11408  0023DC                     l798:
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;TabelasUmidade.h: 448: else
 11412                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11413                           
 11414                           ; BSR set to: 0
 11415  0023DC  0E7D               	movlw	125
 11416  0023DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11417  0023E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11418  0023E2  A4D8               	btfss	status,2,c
 11419  0023E4  D003               	goto	l800
 11420  0023E6                     u11320:
 11421                           
 11422                           ; BSR set to: 0
 11423  0023E6  0E32               	movlw	50
 11424  0023E8  EF76  F00B         	goto	L22
 11425  0023EC                     l800:
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;TabelasUmidade.h: 450: else
 11429                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11430                           
 11431                           ; BSR set to: 0
 11432  0023EC  0E7E               	movlw	126
 11433  0023EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11434  0023F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11435  0023F2  A4D8               	btfss	status,2,c
 11436  0023F4  D003               	goto	l802
 11437                           
 11438                           ; BSR set to: 0
 11439  0023F6  0E31               	movlw	49
 11440  0023F8  EF76  F00B         	goto	L22
 11441  0023FC                     l802:
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;TabelasUmidade.h: 452: else
 11445                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11446                           
 11447                           ; BSR set to: 0
 11448  0023FC  0E7F               	movlw	127
 11449  0023FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11450  002400  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11451  002402  A4D8               	btfss	status,2,c
 11452  002404  D003               	goto	l804
 11453  002406                     u11340:
 11454                           
 11455                           ; BSR set to: 0
 11456  002406  0E2F               	movlw	47
 11457  002408  EF76  F00B         	goto	L22
 11458  00240C                     l804:
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;TabelasUmidade.h: 454: else
 11462                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11463                           
 11464                           ; BSR set to: 0
 11465  00240C  0E80               	movlw	128
 11466  00240E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11467  002410  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11468  002412  A4D8               	btfss	status,2,c
 11469  002414  D003               	goto	l806
 11470  002416                     u11350:
 11471                           
 11472                           ; BSR set to: 0
 11473  002416  0E2D               	movlw	45
 11474  002418  EF76  F00B         	goto	L22
 11475  00241C                     l806:
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;TabelasUmidade.h: 456: else
 11479                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11480                           
 11481                           ; BSR set to: 0
 11482  00241C  0E81               	movlw	129
 11483  00241E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11484  002420  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11485  002422  A4D8               	btfss	status,2,c
 11486  002424  D003               	goto	l808
 11487  002426                     u11360:
 11488                           
 11489                           ; BSR set to: 0
 11490  002426  0E2B               	movlw	43
 11491  002428  EF76  F00B         	goto	L22
 11492  00242C                     l808:
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;TabelasUmidade.h: 458: else
 11496                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11497                           
 11498                           ; BSR set to: 0
 11499  00242C  0E82               	movlw	130
 11500  00242E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11501  002430  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11502  002432  A4D8               	btfss	status,2,c
 11503  002434  D003               	goto	l810
 11504  002436                     u11370:
 11505                           
 11506                           ; BSR set to: 0
 11507  002436  0E29               	movlw	41
 11508  002438  EF76  F00B         	goto	L22
 11509  00243C                     l810:
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;TabelasUmidade.h: 460: else
 11513                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11514                           
 11515                           ; BSR set to: 0
 11516  00243C  0E83               	movlw	131
 11517  00243E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11518  002440  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11519  002442  A4D8               	btfss	status,2,c
 11520  002444  D003               	goto	l812
 11521  002446                     u11380:
 11522                           
 11523                           ; BSR set to: 0
 11524  002446  0E28               	movlw	40
 11525  002448  EF76  F00B         	goto	L22
 11526  00244C                     l812:
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;TabelasUmidade.h: 462: else
 11530                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11531                           
 11532                           ; BSR set to: 0
 11533  00244C  0E84               	movlw	132
 11534  00244E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11535  002450  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11536  002452  A4D8               	btfss	status,2,c
 11537  002454  D003               	goto	l814
 11538  002456                     u11390:
 11539                           
 11540                           ; BSR set to: 0
 11541  002456  0E27               	movlw	39
 11542  002458  EF76  F00B         	goto	L22
 11543  00245C                     l814:
 11544                           
 11545                           ; BSR set to: 0
 11546                           ;TabelasUmidade.h: 464: else
 11547                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11548                           
 11549                           ; BSR set to: 0
 11550  00245C  0E85               	movlw	133
 11551  00245E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11552  002460  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11553  002462  A4D8               	btfss	status,2,c
 11554  002464  D003               	goto	l816
 11555  002466                     u11400:
 11556                           
 11557                           ; BSR set to: 0
 11558  002466  0E25               	movlw	37
 11559  002468  EF76  F00B         	goto	L22
 11560  00246C                     l816:
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;TabelasUmidade.h: 466: else
 11564                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11565                           
 11566                           ; BSR set to: 0
 11567  00246C  0E86               	movlw	134
 11568  00246E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11569  002470  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11570  002472  A4D8               	btfss	status,2,c
 11571  002474  D003               	goto	l818
 11572  002476                     u11410:
 11573                           
 11574                           ; BSR set to: 0
 11575  002476  0E24               	movlw	36
 11576  002478  EF76  F00B         	goto	L22
 11577  00247C                     l818:
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;TabelasUmidade.h: 468: else
 11581                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11582                           
 11583                           ; BSR set to: 0
 11584  00247C  0E87               	movlw	135
 11585  00247E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11586  002480  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11587  002482  A4D8               	btfss	status,2,c
 11588  002484  D003               	goto	l820
 11589  002486                     u11420:
 11590                           
 11591                           ; BSR set to: 0
 11592  002486  0E23               	movlw	35
 11593  002488  EF76  F00B         	goto	L22
 11594  00248C                     l820:
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;TabelasUmidade.h: 470: else
 11598                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11599                           
 11600                           ; BSR set to: 0
 11601  00248C  0E88               	movlw	136
 11602  00248E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11603  002490  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11604  002492  A4D8               	btfss	status,2,c
 11605  002494  D003               	goto	l822
 11606  002496                     u11430:
 11607                           
 11608                           ; BSR set to: 0
 11609  002496  0E22               	movlw	34
 11610  002498  EF76  F00B         	goto	L22
 11611  00249C                     l822:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;TabelasUmidade.h: 472: else
 11615                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11616                           
 11617                           ; BSR set to: 0
 11618  00249C  0E89               	movlw	137
 11619  00249E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11620  0024A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11621  0024A2  A4D8               	btfss	status,2,c
 11622  0024A4  D003               	goto	l824
 11623  0024A6                     u11440:
 11624                           
 11625                           ; BSR set to: 0
 11626  0024A6  0E21               	movlw	33
 11627  0024A8  EF76  F00B         	goto	L22
 11628  0024AC                     l824:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;TabelasUmidade.h: 474: else
 11632                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11633                           
 11634                           ; BSR set to: 0
 11635  0024AC  0E8A               	movlw	138
 11636  0024AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11637  0024B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11638  0024B2  A4D8               	btfss	status,2,c
 11639  0024B4  D003               	goto	l826
 11640  0024B6                     u11450:
 11641                           
 11642                           ; BSR set to: 0
 11643  0024B6  0E20               	movlw	32
 11644  0024B8  EF76  F00B         	goto	L22
 11645  0024BC                     l826:
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;TabelasUmidade.h: 476: else
 11649                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11650                           
 11651                           ; BSR set to: 0
 11652  0024BC  0E8B               	movlw	139
 11653  0024BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11654  0024C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11655  0024C2  A4D8               	btfss	status,2,c
 11656  0024C4  D003               	goto	l828
 11657  0024C6                     u11460:
 11658                           
 11659                           ; BSR set to: 0
 11660  0024C6  0E1F               	movlw	31
 11661  0024C8  EF76  F00B         	goto	L22
 11662  0024CC                     l828:
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;TabelasUmidade.h: 478: else
 11666                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11667                           
 11668                           ; BSR set to: 0
 11669  0024CC  0E8C               	movlw	140
 11670  0024CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11671  0024D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11672  0024D2  A4D8               	btfss	status,2,c
 11673  0024D4  D003               	goto	l830
 11674  0024D6                     u11470:
 11675                           
 11676                           ; BSR set to: 0
 11677  0024D6  0E1E               	movlw	30
 11678  0024D8  EF76  F00B         	goto	L22
 11679  0024DC                     l830:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;TabelasUmidade.h: 480: else
 11683                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11684                           
 11685                           ; BSR set to: 0
 11686  0024DC  0E8D               	movlw	141
 11687  0024DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11688  0024E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11689  0024E2  A4D8               	btfss	status,2,c
 11690  0024E4  D003               	goto	l832
 11691  0024E6                     u11480:
 11692                           
 11693                           ; BSR set to: 0
 11694  0024E6  0E1D               	movlw	29
 11695  0024E8  EF76  F00B         	goto	L22
 11696  0024EC                     l832:
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;TabelasUmidade.h: 482: else
 11700                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11701                           
 11702                           ; BSR set to: 0
 11703  0024EC  0E8E               	movlw	142
 11704  0024EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11705  0024F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11706  0024F2  A4D8               	btfss	status,2,c
 11707  0024F4  D003               	goto	l834
 11708  0024F6                     u11490:
 11709                           
 11710                           ; BSR set to: 0
 11711  0024F6  0E1C               	movlw	28
 11712  0024F8  EF76  F00B         	goto	L22
 11713  0024FC                     l834:
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;TabelasUmidade.h: 484: else
 11717                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11718                           
 11719                           ; BSR set to: 0
 11720  0024FC  0E8F               	movlw	143
 11721  0024FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11722  002500  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11723  002502  A4D8               	btfss	status,2,c
 11724  002504  D003               	goto	l836
 11725  002506                     u11500:
 11726                           
 11727                           ; BSR set to: 0
 11728  002506  0E1B               	movlw	27
 11729  002508  EF76  F00B         	goto	L22
 11730  00250C                     l836:
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;TabelasUmidade.h: 486: else
 11734                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11735                           
 11736                           ; BSR set to: 0
 11737  00250C  0E90               	movlw	144
 11738  00250E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11739  002510  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11740  002512  A4D8               	btfss	status,2,c
 11741  002514  D003               	goto	l838
 11742  002516                     u11510:
 11743                           
 11744                           ; BSR set to: 0
 11745  002516  0E1A               	movlw	26
 11746  002518  EF76  F00B         	goto	L22
 11747  00251C                     l838:
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;TabelasUmidade.h: 488: else
 11751                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11752                           
 11753                           ; BSR set to: 0
 11754  00251C  0E91               	movlw	145
 11755  00251E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11756  002520  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11757  002522  A4D8               	btfss	status,2,c
 11758  002524  D003               	goto	l840
 11759  002526                     u11520:
 11760                           
 11761                           ; BSR set to: 0
 11762  002526  0E19               	movlw	25
 11763  002528  EF76  F00B         	goto	L22
 11764  00252C                     l840:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;TabelasUmidade.h: 490: else
 11768                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11769                           
 11770                           ; BSR set to: 0
 11771  00252C  0E92               	movlw	146
 11772  00252E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11773  002530  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11774  002532  A4D8               	btfss	status,2,c
 11775  002534  D003               	goto	l842
 11776  002536                     u11530:
 11777                           
 11778                           ; BSR set to: 0
 11779  002536  0E18               	movlw	24
 11780  002538  EF76  F00B         	goto	L22
 11781  00253C                     l842:
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;TabelasUmidade.h: 492: else
 11785                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11786                           
 11787                           ; BSR set to: 0
 11788  00253C  0E93               	movlw	147
 11789  00253E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11790  002540  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11791  002542  A4D8               	btfss	status,2,c
 11792  002544  D003               	goto	l844
 11793  002546                     u11540:
 11794                           
 11795                           ; BSR set to: 0
 11796  002546  0E17               	movlw	23
 11797  002548  EF76  F00B         	goto	L22
 11798  00254C                     l844:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;TabelasUmidade.h: 494: else
 11802                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11803                           
 11804                           ; BSR set to: 0
 11805  00254C  0E94               	movlw	148
 11806  00254E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11807  002550  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11808  002552  A4D8               	btfss	status,2,c
 11809  002554  D003               	goto	l846
 11810  002556                     u11550:
 11811                           
 11812                           ; BSR set to: 0
 11813  002556  0E16               	movlw	22
 11814  002558  EF76  F00B         	goto	L22
 11815  00255C                     l846:
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;TabelasUmidade.h: 496: else
 11819                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 11820                           
 11821                           ; BSR set to: 0
 11822  00255C  0E95               	movlw	149
 11823  00255E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11824  002560  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11825  002562  A4D8               	btfss	status,2,c
 11826  002564  D003               	goto	l848
 11827  002566                     u11560:
 11828                           
 11829                           ; BSR set to: 0
 11830  002566  0E15               	movlw	21
 11831  002568  EF76  F00B         	goto	L22
 11832  00256C                     l848:
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;TabelasUmidade.h: 498: else
 11836                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 11837                           
 11838                           ; BSR set to: 0
 11839  00256C  0E96               	movlw	150
 11840  00256E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11841  002570  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11842  002572  A4D8               	btfss	status,2,c
 11843  002574  D003               	goto	l850
 11844  002576                     u11570:
 11845                           
 11846                           ; BSR set to: 0
 11847  002576  0E14               	movlw	20
 11848  002578  EF76  F00B         	goto	L22
 11849  00257C                     l850:
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;TabelasUmidade.h: 500: else
 11853                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 11854                           
 11855                           ; BSR set to: 0
 11856  00257C  0E97               	movlw	151
 11857  00257E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11858  002580  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11859  002582  A4D8               	btfss	status,2,c
 11860  002584  D003               	goto	l852
 11861  002586                     u11580:
 11862                           
 11863                           ; BSR set to: 0
 11864  002586  0E13               	movlw	19
 11865  002588  EF76  F00B         	goto	L22
 11866  00258C                     l852:
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;TabelasUmidade.h: 502: else
 11870                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 11871                           
 11872                           ; BSR set to: 0
 11873  00258C  0E98               	movlw	152
 11874  00258E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11875  002590  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11876  002592  A4D8               	btfss	status,2,c
 11877  002594  D003               	goto	l854
 11878  002596                     u11590:
 11879                           
 11880                           ; BSR set to: 0
 11881  002596  0E12               	movlw	18
 11882  002598  EF76  F00B         	goto	L22
 11883  00259C                     l854:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;TabelasUmidade.h: 504: else
 11887                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11888                           
 11889                           ; BSR set to: 0
 11890  00259C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11891  00259E  D011               	goto	l856
 11892  0025A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11893  0025A2  E104               	bnz	u11600
 11894  0025A4  0E99               	movlw	153
 11895  0025A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11896  0025A8  A0D8               	btfss	status,0,c
 11897  0025AA  D00B               	goto	l856
 11898  0025AC                     u11600:
 11899                           
 11900                           ; BSR set to: 0
 11901  0025AC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11902  0025AE  D006               	goto	u11610
 11903  0025B0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11904  0025B2  E107               	bnz	l7863
 11905  0025B4  0E9D               	movlw	157
 11906  0025B6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11907  0025B8  B0D8               	btfsc	status,0,c
 11908  0025BA  D003               	goto	l856
 11909  0025BC                     u11610:
 11910                           
 11911                           ; BSR set to: 0
 11912  0025BC  0E11               	movlw	17
 11913  0025BE  EF76  F00B         	goto	L22
 11914  0025C2                     l856:
 11915  0025C2                     l7863:
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;TabelasUmidade.h: 506: else
 11919                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 11920  0025C2  0E9D               	movlw	157
 11921  0025C4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11922  0025C6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11923  0025C8  A4D8               	btfss	status,2,c
 11924  0025CA  D003               	goto	l858
 11925  0025CC                     u11620:
 11926                           
 11927                           ; BSR set to: 0
 11928  0025CC  0E10               	movlw	16
 11929  0025CE  EF76  F00B         	goto	L22
 11930  0025D2                     l858:
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;TabelasUmidade.h: 508: else
 11934                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 11935                           
 11936                           ; BSR set to: 0
 11937  0025D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11938  0025D4  D014               	goto	l638
 11939  0025D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11940  0025D8  E104               	bnz	u11630
 11941  0025DA  0E9E               	movlw	158
 11942  0025DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11943  0025DE  A0D8               	btfss	status,0,c
 11944  0025E0  D00E               	goto	l638
 11945  0025E2                     u11630:
 11946                           
 11947                           ; BSR set to: 0
 11948  0025E2  0E0F               	movlw	15
 11949  0025E4  EF76  F00B         	goto	L22
 11950  0025E8                     l525:
 11951                           
 11952                           ; BSR set to: 0
 11953                           
 11954                           ; BSR set to: 0
 11955  0025E8  51F5               	movf	_clima& (0+255),w,b
 11956                           
 11957                           ; Switch size 1, requested type "space"
 11958                           ; Number of cases is 3, Range of values is 1 to 3
 11959                           ; switch strategies available:
 11960                           ; Name         Instructions Cycles
 11961                           ; simple_byte           10     6 (average)
 11962                           ;	Chosen strategy is simple_byte
 11963  0025EA  0A01               	xorlw	1	; case 1
 11964  0025EC  B4D8               	btfsc	status,2,c
 11965  0025EE  EF41  F00E         	goto	l526
 11966  0025F2  0A03               	xorlw	3	; case 2
 11967  0025F4  B4D8               	btfsc	status,2,c
 11968  0025F6  D495               	goto	l639
 11969  0025F8  0A01               	xorlw	1	; case 3
 11970  0025FA  B4D8               	btfsc	status,2,c
 11971  0025FC  D618               	goto	l753
 11972  0025FE                     l638:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;TabelasUmidade.h: 512: }
 11976                           ;TabelasUmidade.h: 513: return _umd;
 11977                           
 11978                           ; BSR set to: 0
 11979                           
 11980                           ; BSR set to: 0
 11981  0025FE  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 11982  002602  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 11983                           
 11984                           ; BSR set to: 0
 11985  002604  0012               	return		;funcret
 11986  002606                     __end_of_tabelaUmidade:
 11987                           	opt stack 0
 11988                           tblptru	equ	0xFF8
 11989                           tblptrh	equ	0xFF7
 11990                           tblptrl	equ	0xFF6
 11991                           tablat	equ	0xFF5
 11992                           prodh	equ	0xFF4
 11993                           prodl	equ	0xFF3
 11994                           intcon	equ	0xFF2
 11995                           intcon2	equ	0xFF1
 11996                           intcon3	equ	0xFF0
 11997                           postinc0	equ	0xFEE
 11998                           wreg	equ	0xFE8
 11999                           postdec1	equ	0xFE5
 12000                           fsr1l	equ	0xFE1
 12001                           indf2	equ	0xFDF
 12002                           fsr2h	equ	0xFDA
 12003                           fsr2l	equ	0xFD9
 12004                           status	equ	0xFD8
 12005                           
 12006 ;; *************** function _setRangeValor *****************
 12007 ;; Defined at:
 12008 ;;		line 76 in file "src/FuncoesControlador.h"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  _acao           1    wreg     unsigned char 
 12011 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 12012 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 12013 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 12014 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 12015 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 12016 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 12017 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 12018 ;;		 -> clima(1), 
 12019 ;;  _min            1    7[BANK0 ] unsigned char 
 12020 ;;  _max            1    8[BANK0 ] unsigned char 
 12021 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;  _acao           1   13[BANK0 ] unsigned char 
 12024 ;;  _aux            2   14[BANK0 ] int 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12034 ;;      Params:         0       5       0       0       0       0       0       0       0
 12035 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12036 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12037 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12038 ;;Total ram usage:       11 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    9
 12041 ;; This function calls:
 12042 ;;		_writeEEPROM_ext
 12043 ;; This function is called by:
 12044 ;;		_main
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text4
 12049  005026                     __ptext4:
 12050                           	opt stack 0
 12051  005026                     _setRangeValor:
 12052                           	opt stack 21
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;incstack = 0
 12056                           ;setRangeValor@_acao stored from wreg
 12057  005026  0100               	movlb	0	; () banked
 12058  005028  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12059                           
 12060                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12061  00502A  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12062  00502E  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12063  005032  50DF               	movf	indf2,w,c
 12064  005034  0100               	movlb	0	; () banked
 12065  005036  6F6A               	movwf	??_setRangeValor& (0+255),b
 12066  005038  516A               	movf	??_setRangeValor& (0+255),w,b
 12067  00503A  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12068  00503C  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12069                           
 12070                           ;FuncoesControlador.h: 78: switch (_acao) {
 12071  00503E  D02C               	goto	l942
 12072  005040                     
 12073                           ; BSR set to: 0
 12074                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12075                           
 12076                           ; BSR set to: 0
 12077  005040  5168               	movf	setRangeValor@_max& (0+255),w,b
 12078  005042  6F6A               	movwf	??_setRangeValor& (0+255),b
 12079  005044  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12080  005046  516A               	movf	??_setRangeValor& (0+255),w,b
 12081  005048  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12082  00504A  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12083  00504C  0A80               	xorlw	128
 12084  00504E  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12085  005050  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12086  005052  0A80               	xorlw	128
 12087  005054  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12088  005056  B0D8               	btfsc	status,0,c
 12089  005058  D003               	goto	l945
 12090                           
 12091                           ; BSR set to: 0
 12092  00505A  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12093  00505C  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12094  00505E  D013               	goto	L25
 12095  005060                     l945:
 12096                           
 12097                           ; BSR set to: 0
 12098  005060  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12099  005064  D017               	goto	L26
 12100  005066                     
 12101                           ; BSR set to: 0
 12102                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12103                           
 12104                           ; BSR set to: 0
 12105  005066  5167               	movf	setRangeValor@_min& (0+255),w,b
 12106  005068  6F6A               	movwf	??_setRangeValor& (0+255),b
 12107  00506A  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12108  00506C  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12109  00506E  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12110  005070  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12111  005072  0A80               	xorlw	128
 12112  005074  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12113  005076  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12114  005078  0A80               	xorlw	128
 12115  00507A  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12116  00507C  B0D8               	btfsc	status,0,c
 12117  00507E  D008               	goto	l951
 12118                           
 12119                           ; BSR set to: 0
 12120  005080  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12121  005082  A0D8               	btfss	status,0,c
 12122  005084  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12123  005086                     L25:
 12124  005086  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12125  00508A  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12126  00508E  D00B               	goto	l948
 12127  005090                     l951:
 12128                           
 12129                           ; BSR set to: 0
 12130  005090  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12131  005094                     L26:
 12132  005094  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;FuncoesControlador.h: 85: }
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;FuncoesControlador.h: 84: break;
 12139  005096  D007               	goto	l948
 12140  005098                     l942:
 12141                           
 12142                           ; BSR set to: 0
 12143                           
 12144                           ; BSR set to: 0
 12145  005098  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12146                           
 12147                           ; Switch size 1, requested type "space"
 12148                           ; Number of cases is 2, Range of values is 43 to 45
 12149                           ; switch strategies available:
 12150                           ; Name         Instructions Cycles
 12151                           ; simple_byte            7     4 (average)
 12152                           ;	Chosen strategy is simple_byte
 12153  00509A  0A2B               	xorlw	43	; case 43
 12154  00509C  B4D8               	btfsc	status,2,c
 12155  00509E  D7D0               	goto	l943
 12156  0050A0  0A06               	xorlw	6	; case 45
 12157  0050A2  B4D8               	btfsc	status,2,c
 12158  0050A4  D7E0               	goto	l949
 12159  0050A6                     l948:
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12163                           
 12164                           ; BSR set to: 0
 12165  0050A6  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12166  0050A8  B4D8               	btfsc	status,2,c
 12167  0050AA  D005               	goto	l954
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12171  0050AC  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12172  0050B0  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12173  0050B2  EC4B  F02C         	call	_writeEEPROM_ext
 12174  0050B6                     l954:
 12175                           
 12176                           ;FuncoesControlador.h: 88: }
 12177                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12178  0050B6  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12179  0050BA  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12180  0050BE  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12181  0050C2  0012               	return		;funcret
 12182  0050C4                     __end_of_setRangeValor:
 12183                           	opt stack 0
 12184                           tblptru	equ	0xFF8
 12185                           tblptrh	equ	0xFF7
 12186                           tblptrl	equ	0xFF6
 12187                           tablat	equ	0xFF5
 12188                           prodh	equ	0xFF4
 12189                           prodl	equ	0xFF3
 12190                           intcon	equ	0xFF2
 12191                           intcon2	equ	0xFF1
 12192                           intcon3	equ	0xFF0
 12193                           postinc0	equ	0xFEE
 12194                           wreg	equ	0xFE8
 12195                           postdec1	equ	0xFE5
 12196                           fsr1l	equ	0xFE1
 12197                           indf2	equ	0xFDF
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function _readEEPROM_ext *****************
 12203 ;; Defined at:
 12204 ;;		line 26 in file "src/Eeprom_ext.h"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  adress          1    wreg     unsigned char 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  adress          1    5[BANK0 ] unsigned char 
 12209 ;;  data            1    6[BANK0 ] unsigned char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      unsigned char 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12219 ;;      Params:         0       0       0       0       0       0       0       0       0
 12220 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12222 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12223 ;;Total ram usage:        2 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    8
 12226 ;; This function calls:
 12227 ;;		_I2C_Read
 12228 ;;		_I2C_Restart
 12229 ;;		_I2C_Start
 12230 ;;		_I2C_Stop
 12231 ;;		_I2C_Write
 12232 ;; This function is called by:
 12233 ;;		_main
 12234 ;;		_readEEPROM16_ext
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           	psect	text5
 12239  005722                     __ptext5:
 12240                           	opt stack 0
 12241  005722                     _readEEPROM_ext:
 12242                           	opt stack 22
 12243                           
 12244                           ;incstack = 0
 12245                           ;readEEPROM_ext@adress stored from wreg
 12246  005722  0100               	movlb	0	; () banked
 12247  005724  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12248                           
 12249                           ;Eeprom_ext.h: 27: I2C_Start();
 12250  005726  EC69  F02E         	call	_I2C_Start	;wreg free
 12251                           
 12252                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12253  00572A  0E00               	movlw	0
 12254  00572C  0100               	movlb	0	; () banked
 12255  00572E  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12256  005730  0EA0               	movlw	160
 12257  005732  6F61               	movwf	I2C_Write@d& (0+255),b
 12258  005734  EC57  F02E         	call	_I2C_Write	;wreg free
 12259                           
 12260                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12261  005738  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12262  00573C  0100               	movlb	0	; () banked
 12263  00573E  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12264  005740  EC57  F02E         	call	_I2C_Write	;wreg free
 12265                           
 12266                           ;Eeprom_ext.h: 31: I2C_Restart();
 12267  005744  EC61  F02E         	call	_I2C_Restart	;wreg free
 12268                           
 12269                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12270  005748  0E00               	movlw	0
 12271  00574A  0100               	movlb	0	; () banked
 12272  00574C  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12273  00574E  0EA1               	movlw	161
 12274  005750  6F61               	movwf	I2C_Write@d& (0+255),b
 12275  005752  EC57  F02E         	call	_I2C_Write	;wreg free
 12276                           
 12277                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12278  005756  0E00               	movlw	0
 12279  005758  0100               	movlb	0	; () banked
 12280  00575A  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12281  00575C  0E00               	movlw	0
 12282  00575E  6F61               	movwf	I2C_Read@a& (0+255),b
 12283  005760  ECC3  F02C         	call	_I2C_Read	;wreg free
 12284  005764  0100               	movlb	0	; () banked
 12285  005766  5161               	movf	?_I2C_Read& (0+255),w,b
 12286  005768  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12287                           
 12288                           ;Eeprom_ext.h: 34: I2C_Stop();
 12289  00576A  EC65  F02E         	call	_I2C_Stop	;wreg free
 12290                           
 12291                           ;Eeprom_ext.h: 35: return data;
 12292  00576E  0100               	movlb	0	; () banked
 12293  005770  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12294  005772  0012               	return	
 12295  005774                     __end_of_readEEPROM_ext:
 12296                           	opt stack 0
 12297                           tblptru	equ	0xFF8
 12298                           tblptrh	equ	0xFF7
 12299                           tblptrl	equ	0xFF6
 12300                           tablat	equ	0xFF5
 12301                           prodh	equ	0xFF4
 12302                           prodl	equ	0xFF3
 12303                           intcon	equ	0xFF2
 12304                           intcon2	equ	0xFF1
 12305                           intcon3	equ	0xFF0
 12306                           postinc0	equ	0xFEE
 12307                           wreg	equ	0xFE8
 12308                           postdec1	equ	0xFE5
 12309                           fsr1l	equ	0xFE1
 12310                           indf2	equ	0xFDF
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function _I2C_Restart *****************
 12316 ;; Defined at:
 12317 ;;		line 30 in file "src/I2C.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, status,2, status,0, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12334 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12335 ;;Total ram usage:        0 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    7
 12338 ;; This function calls:
 12339 ;;		_I2C_Wait
 12340 ;; This function is called by:
 12341 ;;		_readEEPROM_ext
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           	psect	text6
 12346  005CC2                     __ptext6:
 12347                           	opt stack 0
 12348  005CC2                     _I2C_Restart:
 12349                           	opt stack 22
 12350                           
 12351                           ;I2C.c: 31: I2C_Wait();
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;incstack = 0
 12355  005CC2  EC30  F02E         	call	_I2C_Wait	;wreg free
 12356                           
 12357                           ;I2C.c: 32: RSEN = 1;
 12358  005CC6  82C5               	bsf	4037,1,c	;volatile
 12359  005CC8  0012               	return		;funcret
 12360  005CCA                     __end_of_I2C_Restart:
 12361                           	opt stack 0
 12362                           tblptru	equ	0xFF8
 12363                           tblptrh	equ	0xFF7
 12364                           tblptrl	equ	0xFF6
 12365                           tablat	equ	0xFF5
 12366                           prodh	equ	0xFF4
 12367                           prodl	equ	0xFF3
 12368                           intcon	equ	0xFF2
 12369                           intcon2	equ	0xFF1
 12370                           intcon3	equ	0xFF0
 12371                           postinc0	equ	0xFEE
 12372                           wreg	equ	0xFE8
 12373                           postdec1	equ	0xFE5
 12374                           fsr1l	equ	0xFE1
 12375                           indf2	equ	0xFDF
 12376                           fsr2h	equ	0xFDA
 12377                           fsr2l	equ	0xFD9
 12378                           status	equ	0xFD8
 12379                           
 12380 ;; *************** function _I2C_Read *****************
 12381 ;; Defined at:
 12382 ;;		line 46 in file "src/I2C.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  a               2    1[BANK0 ] unsigned short 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  temp            2    3[BANK0 ] unsigned short 
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  2    1[BANK0 ] unsigned short 
 12389 ;; Registers used:
 12390 ;;		wreg, status,2, status,0, cstack
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12396 ;;      Params:         0       2       0       0       0       0       0       0       0
 12397 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12399 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12400 ;;Total ram usage:        4 bytes
 12401 ;; Hardware stack levels used:    1
 12402 ;; Hardware stack levels required when called:    7
 12403 ;; This function calls:
 12404 ;;		_I2C_Wait
 12405 ;; This function is called by:
 12406 ;;		_readEEPROM_ext
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text7
 12411  005986                     __ptext7:
 12412                           	opt stack 0
 12413  005986                     _I2C_Read:
 12414                           	opt stack 22
 12415                           
 12416                           ;I2C.c: 47: unsigned short temp;
 12417                           ;I2C.c: 48: I2C_Wait();
 12418                           
 12419                           ;incstack = 0
 12420  005986  EC30  F02E         	call	_I2C_Wait	;wreg free
 12421                           
 12422                           ;I2C.c: 49: RCEN = 1;
 12423  00598A  86C5               	bsf	4037,3,c	;volatile
 12424                           
 12425                           ;I2C.c: 50: I2C_Wait();
 12426  00598C  EC30  F02E         	call	_I2C_Wait	;wreg free
 12427                           
 12428                           ;I2C.c: 51: temp = SSPBUF;
 12429  005990  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12430  005994  0100               	movlb	0	; () banked
 12431  005996  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12432                           
 12433                           ;I2C.c: 52: I2C_Wait();
 12434  005998  EC30  F02E         	call	_I2C_Wait	;wreg free
 12435                           
 12436                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12437  00599C  0100               	movlb	0	; () banked
 12438  00599E  5161               	movf	I2C_Read@a& (0+255),w,b
 12439  0059A0  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12440  0059A2  A4D8               	btfss	status,2,c
 12441  0059A4  D002               	goto	u8600
 12442  0059A6  8AC5               	bsf	4037,5,c	;volatile
 12443  0059A8  D001               	goto	u8615
 12444  0059AA                     u8600:
 12445  0059AA  9AC5               	bcf	4037,5,c	;volatile
 12446  0059AC                     u8615:
 12447                           
 12448                           ;I2C.c: 54: ACKEN = 1;
 12449  0059AC  88C5               	bsf	4037,4,c	;volatile
 12450                           
 12451                           ;I2C.c: 55: return temp;
 12452  0059AE  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12453  0059B2  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12454  0059B6  0012               	return	
 12455  0059B8                     __end_of_I2C_Read:
 12456                           	opt stack 0
 12457                           tblptru	equ	0xFF8
 12458                           tblptrh	equ	0xFF7
 12459                           tblptrl	equ	0xFF6
 12460                           tablat	equ	0xFF5
 12461                           prodh	equ	0xFF4
 12462                           prodl	equ	0xFF3
 12463                           intcon	equ	0xFF2
 12464                           intcon2	equ	0xFF1
 12465                           intcon3	equ	0xFF0
 12466                           postinc0	equ	0xFEE
 12467                           wreg	equ	0xFE8
 12468                           postdec1	equ	0xFE5
 12469                           fsr1l	equ	0xFE1
 12470                           indf2	equ	0xFDF
 12471                           fsr2h	equ	0xFDA
 12472                           fsr2l	equ	0xFD9
 12473                           status	equ	0xFD8
 12474                           
 12475 ;; *************** function _getSensors *****************
 12476 ;; Defined at:
 12477 ;;		line 22 in file "src/ADC.h"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  auxx            3   77[BANK0 ] float 
 12482 ;;  aux             3   84[BANK0 ] float 
 12483 ;;  i               1   83[BANK0 ] unsigned char 
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  2  1228[None  ] int 
 12486 ;; Registers used:
 12487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/0
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0
 12494 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12496 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12497 ;;Total ram usage:       18 bytes
 12498 ;; Hardware stack levels used:    1
 12499 ;; Hardware stack levels required when called:    8
 12500 ;; This function calls:
 12501 ;;		___ftadd
 12502 ;;		___ftdiv
 12503 ;;		___ftge
 12504 ;;		___ftmul
 12505 ;;		___fttol
 12506 ;;		___lwtoft
 12507 ;;		_readADC
 12508 ;; This function is called by:
 12509 ;;		_main
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text8
 12514  003662                     __ptext8:
 12515                           	opt stack 0
 12516  003662                     _getSensors:
 12517                           	opt stack 22
 12518                           
 12519                           ;ADC.h: 23: unsigned char i = 0;
 12520                           
 12521                           ;incstack = 0
 12522  003662  0E00               	movlw	0
 12523  003664  0100               	movlb	0	; () banked
 12524  003666  6FB3               	movwf	getSensors@i& (0+255),b
 12525                           
 12526                           ;ADC.h: 24: float aux = 0;
 12527  003668  0E00               	movlw	0
 12528  00366A  6FB4               	movwf	getSensors@aux& (0+255),b
 12529  00366C  0E00               	movlw	0
 12530  00366E  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12531  003670  0E00               	movlw	0
 12532  003672  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12533                           
 12534                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12535  003674  5036               	movf	_t_leitura_adc,w,c
 12536  003676  A4D8               	btfss	status,2,c
 12537  003678  D1F3               	goto	l1229
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;ADC.h: 27: t_leitura_adc = 10;
 12541  00367A  0E0A               	movlw	10
 12542  00367C  6E36               	movwf	_t_leitura_adc,c
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12546  00367E  0E0A               	movlw	10
 12547  003680  6035               	cpfslt	_media_adc,c
 12548  003682  D005               	goto	l1231
 12549                           
 12550                           ; BSR set to: 0
 12551  003684  2A35               	incf	_media_adc,f,c
 12552  003686  C035  F0AB         	movff	_media_adc,_getSensors$1517
 12553  00368A  6BAC               	clrf	(_getSensors$1517+1)& (0+255),b
 12554  00368C  D004               	goto	l1233
 12555  00368E                     l1231:
 12556                           
 12557                           ; BSR set to: 0
 12558                           
 12559                           ; BSR set to: 0
 12560  00368E  0E00               	movlw	0
 12561  003690  6FAC               	movwf	(_getSensors$1517+1)& (0+255),b
 12562  003692  0E00               	movlw	0
 12563  003694  6FAB               	movwf	_getSensors$1517& (0+255),b
 12564  003696                     l1233:
 12565                           
 12566                           ; BSR set to: 0
 12567                           
 12568                           ; BSR set to: 0
 12569  003696  C0AB  F035         	movff	_getSensors$1517,_media_adc
 12570                           
 12571                           ;ADC.h: 31: aux = 0;
 12572  00369A  0E00               	movlw	0
 12573  00369C  6FB4               	movwf	getSensors@aux& (0+255),b
 12574  00369E  0E00               	movlw	0
 12575  0036A0  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12576  0036A2  0E00               	movlw	0
 12577  0036A4  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12578                           
 12579                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12580  0036A6  0E00               	movlw	0
 12581  0036A8  6FB3               	movwf	getSensors@i& (0+255),b
 12582  0036AA                     l9185:
 12583                           
 12584                           ; BSR set to: 0
 12585  0036AA  0E0B               	movlw	11
 12586  0036AC  65B3               	cpfsgt	getSensors@i& (0+255),b
 12587  0036AE  D001               	goto	l1234
 12588  0036B0  D042               	goto	u14020
 12589  0036B2                     l1234:
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12593                           
 12594                           ; BSR set to: 0
 12595  0036B2  0E00               	movlw	0
 12596  0036B4  6F7E               	movwf	___ftadd@f2& (0+255),b
 12597  0036B6  0E00               	movlw	0
 12598  0036B8  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12599  0036BA  0E42               	movlw	66
 12600  0036BC  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12601  0036BE  0E00               	movlw	0
 12602  0036C0  6F6F               	movwf	___ftmul@f2& (0+255),b
 12603  0036C2  0E61               	movlw	97
 12604  0036C4  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12605  0036C6  0E3F               	movlw	63
 12606  0036C8  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12607  0036CA  0E00               	movlw	0
 12608  0036CC  ECB0  F028         	call	_readADC
 12609  0036D0  C060  F069         	movff	?_readADC,___lwtoft@c
 12610  0036D4  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12611  0036D8  ECBC  F02D         	call	___lwtoft	;wreg free
 12612  0036DC  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12613  0036E0  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12614  0036E4  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12615  0036E8  ECFB  F024         	call	___ftmul	;wreg free
 12616  0036EC  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12617  0036F0  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12618  0036F4  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12619  0036F8  EC0A  F022         	call	___ftadd	;wreg free
 12620  0036FC  C07B  F0B0         	movff	?___ftadd,_getSensors$2520
 12621  003700  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2520+1
 12622  003704  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2520+2
 12623                           
 12624                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12625  003708  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12626  00370C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12627  003710  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12628  003714  C0B0  F07E         	movff	_getSensors$2520,___ftadd@f2
 12629  003718  C0B1  F07F         	movff	_getSensors$2520+1,___ftadd@f2+1
 12630  00371C  C0B2  F080         	movff	_getSensors$2520+2,___ftadd@f2+2
 12631  003720  EC0A  F022         	call	___ftadd	;wreg free
 12632  003724  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12633  003728  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12634  00372C  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12635  003730  0100               	movlb	0	; () banked
 12636  003732  2BB3               	incf	getSensors@i& (0+255),f,b
 12637  003734  D7BA               	goto	l9185
 12638  003736                     u14020:
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;ADC.h: 34: }
 12642                           ;ADC.h: 35: aux = (aux / 12);
 12643                           
 12644                           ; BSR set to: 0
 12645  003736  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12646  00373A  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12647  00373E  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12648  003742  0E00               	movlw	0
 12649  003744  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12650  003746  0E40               	movlw	64
 12651  003748  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12652  00374A  0E41               	movlw	65
 12653  00374C  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12654  00374E  EC76  F025         	call	___ftdiv	;wreg free
 12655  003752  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12656  003756  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12657  00375A  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12658                           
 12659                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12660  00375E  0E00               	movlw	0
 12661  003760  0100               	movlb	0	; () banked
 12662  003762  6F60               	movwf	___ftge@ff1& (0+255),b
 12663  003764  0E14               	movlw	20
 12664  003766  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12665  003768  0E42               	movlw	66
 12666  00376A  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12667  00376C  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12668  003770  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12669  003774  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12670  003778  EC4A  F029         	call	___ftge	;wreg free
 12671  00377C  0100               	movlb	0	; () banked
 12672  00377E  B0D8               	btfsc	status,0,c
 12673  003780  D015               	goto	l1237
 12674                           
 12675                           ; BSR set to: 0
 12676  003782  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12677  003786  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12678  00378A  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12679  00378E  0E00               	movlw	0
 12680  003790  6F7E               	movwf	___ftadd@f2& (0+255),b
 12681  003792  0E80               	movlw	128
 12682  003794  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12683  003796  0E3F               	movlw	63
 12684  003798  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12685  00379A  EC0A  F022         	call	___ftadd	;wreg free
 12686  00379E  C07B  F0A5         	movff	?___ftadd,_getSensors$1519
 12687  0037A2  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1519+1
 12688  0037A6  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1519+2
 12689  0037AA  D007               	goto	l1239
 12690  0037AC                     l1237:
 12691  0037AC  0E00               	movlw	0
 12692  0037AE  0100               	movlb	0	; () banked
 12693  0037B0  6FA5               	movwf	_getSensors$1519& (0+255),b
 12694  0037B2  0E00               	movlw	0
 12695  0037B4  6FA6               	movwf	(_getSensors$1519+1)& (0+255),b
 12696  0037B6  0E00               	movlw	0
 12697  0037B8  6FA7               	movwf	(_getSensors$1519+2)& (0+255),b
 12698  0037BA                     l1239:
 12699                           
 12700                           ; BSR set to: 0
 12701  0037BA  5035               	movf	_media_adc,w,c
 12702  0037BC  0D03               	mullw	3
 12703  0037BE  0E21               	movlw	low __temp
 12704  0037C0  24F3               	addwf	prodl,w,c
 12705  0037C2  6ED9               	movwf	fsr2l,c
 12706  0037C4  0E01               	movlw	high __temp
 12707  0037C6  20F4               	addwfc	prodh,w,c
 12708  0037C8  6EDA               	movwf	fsr2h,c
 12709  0037CA  C0A5  FFDE         	movff	_getSensors$1519,postinc2
 12710  0037CE  C0A6  FFDE         	movff	_getSensors$1519+1,postinc2
 12711  0037D2  C0A7  FFDE         	movff	_getSensors$1519+2,postinc2
 12712                           
 12713                           ;ADC.h: 40: aux = 0;
 12714  0037D6  0E00               	movlw	0
 12715  0037D8  0100               	movlb	0	; () banked
 12716  0037DA  6FB4               	movwf	getSensors@aux& (0+255),b
 12717  0037DC  0E00               	movlw	0
 12718  0037DE  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12719  0037E0  0E00               	movlw	0
 12720  0037E2  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12724  0037E4  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12725  0037E6  A4D8               	btfss	status,2,c
 12726  0037E8  D07E               	goto	l1240
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;ADC.h: 42: float auxx = 0;
 12730  0037EA  0E00               	movlw	0
 12731  0037EC  6FAD               	movwf	getSensors@auxx& (0+255),b
 12732  0037EE  0E00               	movlw	0
 12733  0037F0  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12734  0037F2  0E00               	movlw	0
 12735  0037F4  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12736                           
 12737                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12738  0037F6  0E00               	movlw	0
 12739  0037F8  6FB3               	movwf	getSensors@i& (0+255),b
 12740  0037FA                     l9209:
 12741                           
 12742                           ; BSR set to: 0
 12743  0037FA  0E0B               	movlw	11
 12744  0037FC  65B3               	cpfsgt	getSensors@i& (0+255),b
 12745  0037FE  D001               	goto	l1241
 12746  003800  D0BA               	goto	u14090
 12747  003802                     l1241:
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12751                           
 12752                           ; BSR set to: 0
 12753  003802  0E75               	movlw	117
 12754  003804  6F7E               	movwf	___ftadd@f2& (0+255),b
 12755  003806  0E53               	movlw	83
 12756  003808  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12757  00380A  0EBF               	movlw	191
 12758  00380C  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12759  00380E  0E00               	movlw	0
 12760  003810  6F6F               	movwf	___ftmul@f2& (0+255),b
 12761  003812  0EA0               	movlw	160
 12762  003814  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12763  003816  0E3B               	movlw	59
 12764  003818  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12765  00381A  0E01               	movlw	1
 12766  00381C  ECB0  F028         	call	_readADC
 12767  003820  C060  F069         	movff	?_readADC,___lwtoft@c
 12768  003824  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12769  003828  ECBC  F02D         	call	___lwtoft	;wreg free
 12770  00382C  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12771  003830  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12772  003834  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12773  003838  ECFB  F024         	call	___ftmul	;wreg free
 12774  00383C  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12775  003840  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12776  003844  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12777  003848  EC0A  F022         	call	___ftadd	;wreg free
 12778  00384C  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12779  003850  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12780  003854  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12781  003858  0E06               	movlw	6
 12782  00385A  0100               	movlb	0	; () banked
 12783  00385C  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12784  00385E  0E01               	movlw	1
 12785  003860  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12786  003862  0E3D               	movlw	61
 12787  003864  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12788  003866  EC76  F025         	call	___ftdiv	;wreg free
 12789  00386A  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12790  00386E  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12791  003872  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12792                           
 12793                           ;ADC.h: 45: if (auxx < 10) {
 12794  003876  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12795  00387A  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12796  00387E  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12797  003882  0E00               	movlw	0
 12798  003884  0100               	movlb	0	; () banked
 12799  003886  6F63               	movwf	___ftge@ff2& (0+255),b
 12800  003888  0E20               	movlw	32
 12801  00388A  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12802  00388C  0E41               	movlw	65
 12803  00388E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12804  003890  EC4A  F029         	call	___ftge	;wreg free
 12805  003894  0100               	movlb	0	; () banked
 12806  003896  B0D8               	btfsc	status,0,c
 12807  003898  D00F               	goto	l1243
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;ADC.h: 46: aux += 0;
 12811  00389A  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12812  00389E  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12813  0038A2  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12814  0038A6  0E00               	movlw	0
 12815  0038A8  6F7E               	movwf	___ftadd@f2& (0+255),b
 12816  0038AA  0E00               	movlw	0
 12817  0038AC  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12818  0038AE  0E00               	movlw	0
 12819  0038B0  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12820  0038B2  EC0A  F022         	call	___ftadd	;wreg free
 12821  0038B6  D00E               	goto	L27
 12822  0038B8                     l1243:
 12823                           
 12824                           ;ADC.h: 48: aux += auxx;
 12825  0038B8  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12826  0038BC  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12827  0038C0  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12828  0038C4  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 12829  0038C8  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 12830  0038CC  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 12831  0038D0  EC0A  F022         	call	___ftadd	;wreg free
 12832  0038D4                     L27:
 12833  0038D4  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12834  0038D8  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12835  0038DC  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12836  0038E0  0100               	movlb	0	; () banked
 12837  0038E2  2BB3               	incf	getSensors@i& (0+255),f,b
 12838  0038E4  D78A               	goto	l9209
 12839  0038E6                     l1240:
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 12843                           
 12844                           ; BSR set to: 0
 12845  0038E6  0E00               	movlw	0
 12846  0038E8  6FB3               	movwf	getSensors@i& (0+255),b
 12847  0038EA                     l9225:
 12848                           
 12849                           ; BSR set to: 0
 12850  0038EA  0E0B               	movlw	11
 12851  0038EC  65B3               	cpfsgt	getSensors@i& (0+255),b
 12852  0038EE  D001               	goto	l1246
 12853  0038F0  D042               	goto	u14090
 12854  0038F2                     l1246:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12858                           
 12859                           ; BSR set to: 0
 12860  0038F2  0E00               	movlw	0
 12861  0038F4  6F7E               	movwf	___ftadd@f2& (0+255),b
 12862  0038F6  0E00               	movlw	0
 12863  0038F8  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12864  0038FA  0E42               	movlw	66
 12865  0038FC  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12866  0038FE  0E00               	movlw	0
 12867  003900  6F6F               	movwf	___ftmul@f2& (0+255),b
 12868  003902  0E61               	movlw	97
 12869  003904  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12870  003906  0E3F               	movlw	63
 12871  003908  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12872  00390A  0E02               	movlw	2
 12873  00390C  ECB0  F028         	call	_readADC
 12874  003910  C060  F069         	movff	?_readADC,___lwtoft@c
 12875  003914  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12876  003918  ECBC  F02D         	call	___lwtoft	;wreg free
 12877  00391C  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12878  003920  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12879  003924  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12880  003928  ECFB  F024         	call	___ftmul	;wreg free
 12881  00392C  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12882  003930  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12883  003934  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12884  003938  EC0A  F022         	call	___ftadd	;wreg free
 12885  00393C  C07B  F0B0         	movff	?___ftadd,_getSensors$2520
 12886  003940  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2520+1
 12887  003944  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2520+2
 12888                           
 12889                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12890  003948  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12891  00394C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12892  003950  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12893  003954  C0B0  F07E         	movff	_getSensors$2520,___ftadd@f2
 12894  003958  C0B1  F07F         	movff	_getSensors$2520+1,___ftadd@f2+1
 12895  00395C  C0B2  F080         	movff	_getSensors$2520+2,___ftadd@f2+2
 12896  003960  EC0A  F022         	call	___ftadd	;wreg free
 12897  003964  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12898  003968  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12899  00396C  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12900  003970  0100               	movlb	0	; () banked
 12901  003972  2BB3               	incf	getSensors@i& (0+255),f,b
 12902  003974  D7BA               	goto	l9225
 12903  003976                     u14090:
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;ADC.h: 54: }
 12907                           ;ADC.h: 55: }
 12908                           ;ADC.h: 57: aux = (aux / 12);
 12909                           
 12910                           ; BSR set to: 0
 12911                           
 12912                           ; BSR set to: 0
 12913  003976  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12914  00397A  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12915  00397E  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12916  003982  0E00               	movlw	0
 12917  003984  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12918  003986  0E40               	movlw	64
 12919  003988  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12920  00398A  0E41               	movlw	65
 12921  00398C  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12922  00398E  EC76  F025         	call	___ftdiv	;wreg free
 12923  003992  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12924  003996  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12925  00399A  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12926                           
 12927                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 12928  00399E  0100               	movlb	0	; () banked
 12929  0039A0  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12930  0039A2  A4D8               	btfss	status,2,c
 12931  0039A4  D02E               	goto	l1250
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;ADC.h: 59: if (aux > 100) aux = 100;
 12935  0039A6  0E00               	movlw	0
 12936  0039A8  6F60               	movwf	___ftge@ff1& (0+255),b
 12937  0039AA  0EC8               	movlw	200
 12938  0039AC  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12939  0039AE  0E42               	movlw	66
 12940  0039B0  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12941  0039B2  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12942  0039B6  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12943  0039BA  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12944  0039BE  EC4A  F029         	call	___ftge	;wreg free
 12945  0039C2  0100               	movlb	0	; () banked
 12946  0039C4  B0D8               	btfsc	status,0,c
 12947  0039C6  D006               	goto	l1249
 12948                           
 12949                           ; BSR set to: 0
 12950  0039C8  0E00               	movlw	0
 12951  0039CA  6FB4               	movwf	getSensors@aux& (0+255),b
 12952  0039CC  0EC8               	movlw	200
 12953  0039CE  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12954  0039D0  0E42               	movlw	66
 12955  0039D2  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12956  0039D4                     l1249:
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;ADC.h: 60: if (aux < 10) aux = 0;
 12960                           
 12961                           ; BSR set to: 0
 12962  0039D4  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12963  0039D8  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12964  0039DC  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12965  0039E0  0E00               	movlw	0
 12966  0039E2  6F63               	movwf	___ftge@ff2& (0+255),b
 12967  0039E4  0E20               	movlw	32
 12968  0039E6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12969  0039E8  0E41               	movlw	65
 12970  0039EA  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12971  0039EC  EC4A  F029         	call	___ftge	;wreg free
 12972  0039F0  0100               	movlb	0	; () banked
 12973  0039F2  B0D8               	btfsc	status,0,c
 12974  0039F4  D006               	goto	l1250
 12975                           
 12976                           ; BSR set to: 0
 12977  0039F6  0E00               	movlw	0
 12978  0039F8  6FB4               	movwf	getSensors@aux& (0+255),b
 12979  0039FA  0E00               	movlw	0
 12980  0039FC  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12981  0039FE  0E00               	movlw	0
 12982  003A00  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12983  003A02                     l1250:
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;ADC.h: 61: }
 12987                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 12988                           
 12989                           ; BSR set to: 0
 12990                           
 12991                           ; BSR set to: 0
 12992  003A02  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12993  003A06  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12994  003A0A  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12995  003A0E  0E00               	movlw	0
 12996  003A10  6F63               	movwf	___ftge@ff2& (0+255),b
 12997  003A12  0E20               	movlw	32
 12998  003A14  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12999  003A16  0E42               	movlw	66
 13000  003A18  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13001  003A1A  EC4A  F029         	call	___ftge	;wreg free
 13002  003A1E  0100               	movlb	0	; () banked
 13003  003A20  B0D8               	btfsc	status,0,c
 13004  003A22  D003               	goto	u14140
 13005                           
 13006                           ; BSR set to: 0
 13007  003A24  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
 13008  003A26  B4D8               	btfsc	status,2,c
 13009  003A28  D007               	goto	l1252
 13010  003A2A                     u14140:
 13011                           
 13012                           ; BSR set to: 0
 13013  003A2A  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1521
 13014  003A2E  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1521+1
 13015  003A32  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1521+2
 13016  003A36  D006               	goto	l1254
 13017  003A38                     l1252:
 13018                           
 13019                           ; BSR set to: 0
 13020                           
 13021                           ; BSR set to: 0
 13022  003A38  0E00               	movlw	0
 13023  003A3A  6FA8               	movwf	_getSensors$1521& (0+255),b
 13024  003A3C  0E00               	movlw	0
 13025  003A3E  6FA9               	movwf	(_getSensors$1521+1)& (0+255),b
 13026  003A40  0E00               	movlw	0
 13027  003A42  6FAA               	movwf	(_getSensors$1521+2)& (0+255),b
 13028  003A44                     l1254:
 13029                           
 13030                           ; BSR set to: 0
 13031                           
 13032                           ; BSR set to: 0
 13033  003A44  5035               	movf	_media_adc,w,c
 13034  003A46  0D03               	mullw	3
 13035  003A48  0E00               	movlw	low __umid
 13036  003A4A  24F3               	addwf	prodl,w,c
 13037  003A4C  6ED9               	movwf	fsr2l,c
 13038  003A4E  0E01               	movlw	high __umid
 13039  003A50  20F4               	addwfc	prodh,w,c
 13040  003A52  6EDA               	movwf	fsr2h,c
 13041  003A54  C0A8  FFDE         	movff	_getSensors$1521,postinc2
 13042  003A58  C0A9  FFDE         	movff	_getSensors$1521+1,postinc2
 13043  003A5C  C0AA  FFDE         	movff	_getSensors$1521+2,postinc2
 13044  003A60                     l1229:
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;ADC.h: 63: }
 13048                           ;ADC.h: 67: i = 0;
 13049                           
 13050                           ; BSR set to: 0
 13051  003A60  0E00               	movlw	0
 13052  003A62  6FB3               	movwf	getSensors@i& (0+255),b
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;ADC.h: 68: aux = 0;
 13056  003A64  0E00               	movlw	0
 13057  003A66  6FB4               	movwf	getSensors@aux& (0+255),b
 13058  003A68  0E00               	movlw	0
 13059  003A6A  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13060  003A6C  0E00               	movlw	0
 13061  003A6E  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13065  003A70  0E00               	movlw	0
 13066  003A72  6FB3               	movwf	getSensors@i& (0+255),b
 13067  003A74                     l9261:
 13068                           
 13069                           ; BSR set to: 0
 13070  003A74  0E09               	movlw	9
 13071  003A76  65B3               	cpfsgt	getSensors@i& (0+255),b
 13072  003A78  D001               	goto	l1257
 13073  003A7A  D01F               	goto	u14160
 13074  003A7C                     l1257:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;ADC.h: 70: aux += _temp[i];
 13078                           
 13079                           ; BSR set to: 0
 13080  003A7C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13081  003A80  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13082  003A84  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13083  003A88  51B3               	movf	getSensors@i& (0+255),w,b
 13084  003A8A  0D03               	mullw	3
 13085  003A8C  0E21               	movlw	low __temp
 13086  003A8E  24F3               	addwf	prodl,w,c
 13087  003A90  6ED9               	movwf	fsr2l,c
 13088  003A92  0E01               	movlw	high __temp
 13089  003A94  20F4               	addwfc	prodh,w,c
 13090  003A96  6EDA               	movwf	fsr2h,c
 13091  003A98  CFDE F07E          	movff	postinc2,___ftadd@f2
 13092  003A9C  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13093  003AA0  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13094  003AA4  EC0A  F022         	call	___ftadd	;wreg free
 13095  003AA8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13096  003AAC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13097  003AB0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13098  003AB4  0100               	movlb	0	; () banked
 13099  003AB6  2BB3               	incf	getSensors@i& (0+255),f,b
 13100  003AB8  D7DD               	goto	l9261
 13101  003ABA                     u14160:
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;ADC.h: 71: }
 13105                           ;ADC.h: 72: temp = (aux / 10);
 13106                           
 13107                           ; BSR set to: 0
 13108  003ABA  0E00               	movlw	0
 13109  003ABC  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13110  003ABE  0E20               	movlw	32
 13111  003AC0  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13112  003AC2  0E41               	movlw	65
 13113  003AC4  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13114  003AC6  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13115  003ACA  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13116  003ACE  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13117  003AD2  EC76  F025         	call	___ftdiv	;wreg free
 13118  003AD6  C087  F096         	movff	?___ftdiv,___fttol@f1
 13119  003ADA  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13120  003ADE  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13121  003AE2  EC03  F024         	call	___fttol	;wreg free
 13122  003AE6  0100               	movlb	0	; () banked
 13123  003AE8  5196               	movf	?___fttol& (0+255),w,b
 13124  003AEA  6FFE               	movwf	_temp& (0+255),b
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;ADC.h: 76: i = 0;
 13128  003AEC  0E00               	movlw	0
 13129  003AEE  6FB3               	movwf	getSensors@i& (0+255),b
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;ADC.h: 77: aux = 0;
 13133  003AF0  0E00               	movlw	0
 13134  003AF2  6FB4               	movwf	getSensors@aux& (0+255),b
 13135  003AF4  0E00               	movlw	0
 13136  003AF6  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13137  003AF8  0E00               	movlw	0
 13138  003AFA  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13142  003AFC  0E00               	movlw	0
 13143  003AFE  6FB3               	movwf	getSensors@i& (0+255),b
 13144  003B00                     l9279:
 13145                           
 13146                           ; BSR set to: 0
 13147  003B00  0E09               	movlw	9
 13148  003B02  65B3               	cpfsgt	getSensors@i& (0+255),b
 13149  003B04  D001               	goto	l1259
 13150  003B06  D01F               	goto	u14180
 13151  003B08                     l1259:
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;ADC.h: 79: aux += _umid[i];
 13155                           
 13156                           ; BSR set to: 0
 13157  003B08  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13158  003B0C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13159  003B10  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13160  003B14  51B3               	movf	getSensors@i& (0+255),w,b
 13161  003B16  0D03               	mullw	3
 13162  003B18  0E00               	movlw	low __umid
 13163  003B1A  24F3               	addwf	prodl,w,c
 13164  003B1C  6ED9               	movwf	fsr2l,c
 13165  003B1E  0E01               	movlw	high __umid
 13166  003B20  20F4               	addwfc	prodh,w,c
 13167  003B22  6EDA               	movwf	fsr2h,c
 13168  003B24  CFDE F07E          	movff	postinc2,___ftadd@f2
 13169  003B28  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13170  003B2C  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13171  003B30  EC0A  F022         	call	___ftadd	;wreg free
 13172  003B34  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13173  003B38  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13174  003B3C  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13175  003B40  0100               	movlb	0	; () banked
 13176  003B42  2BB3               	incf	getSensors@i& (0+255),f,b
 13177  003B44  D7DD               	goto	l9279
 13178  003B46                     u14180:
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;ADC.h: 80: }
 13182                           ;ADC.h: 81: umid = (aux / 10);
 13183                           
 13184                           ; BSR set to: 0
 13185  003B46  0E00               	movlw	0
 13186  003B48  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13187  003B4A  0E20               	movlw	32
 13188  003B4C  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13189  003B4E  0E41               	movlw	65
 13190  003B50  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13191  003B52  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13192  003B56  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13193  003B5A  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13194  003B5E  EC76  F025         	call	___ftdiv	;wreg free
 13195  003B62  C087  F096         	movff	?___ftdiv,___fttol@f1
 13196  003B66  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13197  003B6A  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13198  003B6E  EC03  F024         	call	___fttol	;wreg free
 13199  003B72  0100               	movlb	0	; () banked
 13200  003B74  5196               	movf	?___fttol& (0+255),w,b
 13201  003B76  6E5D               	movwf	_umid,c
 13202                           
 13203                           ; BSR set to: 0
 13204  003B78  0012               	return		;funcret
 13205  003B7A                     __end_of_getSensors:
 13206                           	opt stack 0
 13207                           tblptru	equ	0xFF8
 13208                           tblptrh	equ	0xFF7
 13209                           tblptrl	equ	0xFF6
 13210                           tablat	equ	0xFF5
 13211                           prodh	equ	0xFF4
 13212                           prodl	equ	0xFF3
 13213                           intcon	equ	0xFF2
 13214                           intcon2	equ	0xFF1
 13215                           intcon3	equ	0xFF0
 13216                           postinc0	equ	0xFEE
 13217                           wreg	equ	0xFE8
 13218                           postdec1	equ	0xFE5
 13219                           fsr1l	equ	0xFE1
 13220                           indf2	equ	0xFDF
 13221                           postinc2	equ	0xFDE
 13222                           postdec2	equ	0xFDD
 13223                           fsr2h	equ	0xFDA
 13224                           fsr2l	equ	0xFD9
 13225                           status	equ	0xFD8
 13226                           
 13227 ;; *************** function _readADC *****************
 13228 ;; Defined at:
 13229 ;;		line 10 in file "src/ADC.h"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;  canal           1    wreg     unsigned char 
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;  canal           1    8[BANK0 ] unsigned char 
 13234 ;;  digital         2    6[BANK0 ] int 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  2    0[BANK0 ] unsigned int 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13244 ;;      Params:         0       2       0       0       0       0       0       0       0
 13245 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13246 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13247 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13248 ;;Total ram usage:        9 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:    6
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_getSensors
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text9
 13259  005160                     __ptext9:
 13260                           	opt stack 0
 13261  005160                     _readADC:
 13262                           	opt stack 23
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;incstack = 0
 13266                           ;readADC@canal stored from wreg
 13267  005160  0100               	movlb	0	; () banked
 13268  005162  6F68               	movwf	readADC@canal& (0+255),b
 13269                           
 13270                           ;ADC.h: 11: ADRESH = 0;
 13271  005164  0E00               	movlw	0
 13272  005166  6EC4               	movwf	4036,c	;volatile
 13273                           
 13274                           ;ADC.h: 12: ADRESL = 0;
 13275  005168  0E00               	movlw	0
 13276  00516A  6EC3               	movwf	4035,c	;volatile
 13277                           
 13278                           ;ADC.h: 13: int digital;
 13279                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13280  00516C  C068  F062         	movff	readADC@canal,??_readADC
 13281  005170  0100               	movlb	0	; () banked
 13282  005172  90D8               	bcf	status,0,c
 13283  005174  3762               	rlcf	??_readADC& (0+255),f,b
 13284  005176  90D8               	bcf	status,0,c
 13285  005178  3762               	rlcf	??_readADC& (0+255),f,b
 13286  00517A  0E3C               	movlw	60
 13287  00517C  1762               	andwf	??_readADC& (0+255),f,b
 13288  00517E  50C2               	movf	4034,w,c	;volatile
 13289  005180  0BC3               	andlw	195
 13290  005182  1162               	iorwf	??_readADC& (0+255),w,b
 13291  005184  6EC2               	movwf	4034,c	;volatile
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13295  005186  0E14               	movlw	20
 13296  005188                     u15537:
 13297  005188  2EE8               	decfsz	wreg,f,c
 13298  00518A  D7FE               	bra	u15537
 13299                           
 13300                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13301  00518C  A2C2               	btfss	4034,1,c	;volatile
 13302  00518E  D004               	goto	u11840
 13303  005190  0100               	movlb	0	; () banked
 13304  005192  6B62               	clrf	??_readADC& (0+255),b
 13305  005194  2B62               	incf	??_readADC& (0+255),f,b
 13306  005196  D002               	goto	u11858
 13307  005198                     u11840:
 13308  005198  0100               	movlb	0	; () banked
 13309  00519A  6B62               	clrf	??_readADC& (0+255),b
 13310  00519C                     u11858:
 13311  00519C  0E01               	movlw	1
 13312  00519E  6F63               	movwf	(??_readADC+1)& (0+255),b
 13313  0051A0  2B62               	incf	??_readADC& (0+255),f,b
 13314  0051A2  D002               	goto	u11864
 13315  0051A4                     u11865:
 13316  0051A4  90D8               	bcf	status,0,c
 13317  0051A6  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13318  0051A8                     u11864:
 13319  0051A8  2F62               	decfsz	??_readADC& (0+255),f,b
 13320  0051AA  D7FC               	goto	u11865
 13321  0051AC  A0C2               	btfss	4034,0,c	;volatile
 13322  0051AE  D004               	goto	u11870
 13323  0051B0  0100               	movlb	0	; () banked
 13324  0051B2  6B64               	clrf	(??_readADC+2)& (0+255),b
 13325  0051B4  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13326  0051B6  D002               	goto	u11888
 13327  0051B8                     u11870:
 13328  0051B8  0100               	movlb	0	; () banked
 13329  0051BA  6B64               	clrf	(??_readADC+2)& (0+255),b
 13330  0051BC                     u11888:
 13331  0051BC  0E01               	movlw	1
 13332  0051BE  6F65               	movwf	(??_readADC+3)& (0+255),b
 13333  0051C0  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13334  0051C2  D002               	goto	u11894
 13335  0051C4                     u11895:
 13336  0051C4  90D8               	bcf	status,0,c
 13337  0051C6  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13338  0051C8                     u11894:
 13339  0051C8  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13340  0051CA  D7FC               	goto	u11895
 13341  0051CC  0100               	movlb	0	; () banked
 13342  0051CE  5165               	movf	(??_readADC+3)& (0+255),w,b
 13343  0051D0  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13344  0051D2  12C2               	iorwf	4034,f,c	;volatile
 13345  0051D4                     
 13346                           ; BSR set to: 0
 13347  0051D4  B2C2               	btfsc	4034,1,c	;volatile
 13348  0051D6  D7FE               	goto	l1224
 13349                           
 13350                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13351  0051D8  50C3               	movf	4035,w,c	;volatile
 13352  0051DA  CFC4 F062          	movff	4036,??_readADC	;volatile
 13353  0051DE  0100               	movlb	0	; () banked
 13354  0051E0  6B63               	clrf	(??_readADC+1)& (0+255),b
 13355  0051E2  C062  F063         	movff	??_readADC,??_readADC+1
 13356  0051E6  6B62               	clrf	??_readADC& (0+255),b
 13357  0051E8  1162               	iorwf	??_readADC& (0+255),w,b
 13358  0051EA  6F66               	movwf	readADC@digital& (0+255),b
 13359  0051EC  5163               	movf	(??_readADC+1)& (0+255),w,b
 13360  0051EE  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;ADC.h: 19: return (digital);
 13364  0051F0  C066  F060         	movff	readADC@digital,?_readADC
 13365  0051F4  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13366  0051F8  0012               	return	
 13367  0051FA                     __end_of_readADC:
 13368                           	opt stack 0
 13369                           tblptru	equ	0xFF8
 13370                           tblptrh	equ	0xFF7
 13371                           tblptrl	equ	0xFF6
 13372                           tablat	equ	0xFF5
 13373                           prodh	equ	0xFF4
 13374                           prodl	equ	0xFF3
 13375                           intcon	equ	0xFF2
 13376                           intcon2	equ	0xFF1
 13377                           intcon3	equ	0xFF0
 13378                           postinc0	equ	0xFEE
 13379                           wreg	equ	0xFE8
 13380                           postdec1	equ	0xFE5
 13381                           fsr1l	equ	0xFE1
 13382                           indf2	equ	0xFDF
 13383                           postinc2	equ	0xFDE
 13384                           postdec2	equ	0xFDD
 13385                           fsr2h	equ	0xFDA
 13386                           fsr2l	equ	0xFD9
 13387                           status	equ	0xFD8
 13388                           
 13389 ;; *************** function ___lwtoft *****************
 13390 ;; Defined at:
 13391 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  c               2    9[BANK0 ] unsigned int 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  3    9[BANK0 ] float 
 13398 ;; Registers used:
 13399 ;;		wreg, status,2, status,0, cstack
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13405 ;;      Params:         0       3       0       0       0       0       0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13408 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13409 ;;Total ram usage:        3 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:    7
 13412 ;; This function calls:
 13413 ;;		___ftpack
 13414 ;; This function is called by:
 13415 ;;		_getSensors
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text10
 13420  005B78                     __ptext10:
 13421                           	opt stack 0
 13422  005B78                     ___lwtoft:
 13423                           	opt stack 22
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;incstack = 0
 13427  005B78  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13428  005B7C  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13429  005B80  0100               	movlb	0	; () banked
 13430  005B82  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13431  005B84  0E8E               	movlw	142
 13432  005B86  6F63               	movwf	___ftpack@exp& (0+255),b
 13433  005B88  0E00               	movlw	0
 13434  005B8A  6F64               	movwf	___ftpack@sign& (0+255),b
 13435  005B8C  EC65  F027         	call	___ftpack	;wreg free
 13436  005B90  C060  F069         	movff	?___ftpack,?___lwtoft
 13437  005B94  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13438  005B98  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13439  005B9C  0012               	return	
 13440  005B9E                     __end_of___lwtoft:
 13441                           	opt stack 0
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           intcon	equ	0xFF2
 13449                           intcon2	equ	0xFF1
 13450                           intcon3	equ	0xFF0
 13451                           postinc0	equ	0xFEE
 13452                           wreg	equ	0xFE8
 13453                           postdec1	equ	0xFE5
 13454                           fsr1l	equ	0xFE1
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           postdec2	equ	0xFDD
 13458                           fsr2h	equ	0xFDA
 13459                           fsr2l	equ	0xFD9
 13460                           status	equ	0xFD8
 13461                           
 13462 ;; *************** function ___fttol *****************
 13463 ;; Defined at:
 13464 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  f1              3   54[BANK0 ] float 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  lval            4   64[BANK0 ] unsigned long 
 13469 ;;  exp1            1   68[BANK0 ] unsigned char 
 13470 ;;  sign1           1   63[BANK0 ] unsigned char 
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  4   54[BANK0 ] long 
 13473 ;; Registers used:
 13474 ;;		wreg, status,2, status,0
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13480 ;;      Params:         0       4       0       0       0       0       0       0       0
 13481 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13482 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13483 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13484 ;;Total ram usage:       15 bytes
 13485 ;; Hardware stack levels used:    1
 13486 ;; Hardware stack levels required when called:    6
 13487 ;; This function calls:
 13488 ;;		Nothing
 13489 ;; This function is called by:
 13490 ;;		_getSensors
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text11
 13495  004806                     __ptext11:
 13496                           	opt stack 0
 13497  004806                     ___fttol:
 13498                           	opt stack 23
 13499                           
 13500                           ;incstack = 0
 13501  004806  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13502  00480A  0100               	movlb	0	; () banked
 13503  00480C  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13504  00480E  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13505  004810  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13506  004812  379A               	rlcf	??___fttol& (0+255),f,b
 13507  004814  E301               	bnc	u12261
 13508  004816  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13509  004818                     u12261:
 13510  004818  519A               	movf	??___fttol& (0+255),w,b
 13511  00481A  6FA4               	movwf	___fttol@exp1& (0+255),b
 13512  00481C  51A4               	movf	___fttol@exp1& (0+255),w,b
 13513  00481E  A4D8               	btfss	status,2,c
 13514  004820  D009               	goto	l2017
 13515                           
 13516                           ; BSR set to: 0
 13517  004822  0E00               	movlw	0
 13518  004824  6F96               	movwf	?___fttol& (0+255),b
 13519  004826  0E00               	movlw	0
 13520  004828  6F97               	movwf	(?___fttol+1)& (0+255),b
 13521  00482A  0E00               	movlw	0
 13522  00482C  6F98               	movwf	(?___fttol+2)& (0+255),b
 13523  00482E  0E00               	movlw	0
 13524  004830  6F99               	movwf	(?___fttol+3)& (0+255),b
 13525                           
 13526                           ; BSR set to: 0
 13527  004832  0012               	return	
 13528  004834                     l2017:
 13529                           
 13530                           ; BSR set to: 0
 13531                           
 13532                           ; BSR set to: 0
 13533  004834  0E17               	movlw	23
 13534  004836  6F9A               	movwf	??___fttol& (0+255),b
 13535  004838  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13536  00483C  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13537  004840  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13538  004844  299A               	incf	??___fttol& (0+255),w,b
 13539  004846  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13540  004848  D004               	goto	u12280
 13541  00484A                     u12285:
 13542  00484A  90D8               	bcf	status,0,c
 13543  00484C  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13544  00484E  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13545  004850  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13546  004852                     u12280:
 13547  004852  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13548  004854  D7FA               	goto	u12285
 13549  004856  0100               	movlb	0	; () banked
 13550  004858  519B               	movf	(??___fttol+1)& (0+255),w,b
 13551  00485A  6F9F               	movwf	___fttol@sign1& (0+255),b
 13552                           
 13553                           ; BSR set to: 0
 13554  00485C  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13555                           
 13556                           ; BSR set to: 0
 13557  00485E  0EFF               	movlw	255
 13558  004860  1796               	andwf	___fttol@f1& (0+255),f,b
 13559  004862  0EFF               	movlw	255
 13560  004864  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13561  004866  0E00               	movlw	0
 13562  004868  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13563                           
 13564                           ; BSR set to: 0
 13565  00486A  5196               	movf	___fttol@f1& (0+255),w,b
 13566  00486C  6FA0               	movwf	___fttol@lval& (0+255),b
 13567  00486E  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13568  004870  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13569  004872  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13570  004874  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13571  004876  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13572                           
 13573                           ; BSR set to: 0
 13574  004878  0E8E               	movlw	142
 13575  00487A  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13576                           
 13577                           ; BSR set to: 0
 13578  00487C  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13579  00487E  D016               	goto	l2019
 13580                           
 13581                           ; BSR set to: 0
 13582  004880  51A4               	movf	___fttol@exp1& (0+255),w,b
 13583  004882  0A80               	xorlw	128
 13584  004884  0F8F               	addlw	143
 13585  004886  B0D8               	btfsc	status,0,c
 13586  004888  D009               	goto	l2020
 13587                           
 13588                           ; BSR set to: 0
 13589  00488A  0E00               	movlw	0
 13590  00488C  6F96               	movwf	?___fttol& (0+255),b
 13591  00488E  0E00               	movlw	0
 13592  004890  6F97               	movwf	(?___fttol+1)& (0+255),b
 13593  004892  0E00               	movlw	0
 13594  004894  6F98               	movwf	(?___fttol+2)& (0+255),b
 13595  004896  0E00               	movlw	0
 13596  004898  6F99               	movwf	(?___fttol+3)& (0+255),b
 13597                           
 13598                           ; BSR set to: 0
 13599  00489A  0012               	return	
 13600  00489C                     l2020:
 13601                           
 13602                           ; BSR set to: 0
 13603                           
 13604                           ; BSR set to: 0
 13605                           
 13606                           ; BSR set to: 0
 13607  00489C  90D8               	bcf	status,0,c
 13608  00489E  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13609  0048A0  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13610  0048A2  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13611  0048A4  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13612                           
 13613                           ; BSR set to: 0
 13614  0048A6  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13615  0048A8  D7F9               	goto	l2020
 13616                           
 13617                           ; BSR set to: 0
 13618  0048AA  D015               	goto	u12320
 13619  0048AC                     l2019:
 13620                           
 13621                           ; BSR set to: 0
 13622                           
 13623                           ; BSR set to: 0
 13624  0048AC  0E17               	movlw	23
 13625  0048AE  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13626  0048B0  D00F               	goto	l2025
 13627                           
 13628                           ; BSR set to: 0
 13629  0048B2  0E00               	movlw	0
 13630  0048B4  6F96               	movwf	?___fttol& (0+255),b
 13631  0048B6  0E00               	movlw	0
 13632  0048B8  6F97               	movwf	(?___fttol+1)& (0+255),b
 13633  0048BA  0E00               	movlw	0
 13634  0048BC  6F98               	movwf	(?___fttol+2)& (0+255),b
 13635  0048BE  0E00               	movlw	0
 13636  0048C0  6F99               	movwf	(?___fttol+3)& (0+255),b
 13637                           
 13638                           ; BSR set to: 0
 13639  0048C2  0012               	return	
 13640  0048C4                     
 13641                           ; BSR set to: 0
 13642                           
 13643                           ; BSR set to: 0
 13644  0048C4  90D8               	bcf	status,0,c
 13645  0048C6  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13646  0048C8  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13647  0048CA  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13648  0048CC  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13649  0048CE  07A4               	decf	___fttol@exp1& (0+255),f,b
 13650  0048D0                     l2025:
 13651                           
 13652                           ; BSR set to: 0
 13653                           
 13654                           ; BSR set to: 0
 13655  0048D0  51A4               	movf	___fttol@exp1& (0+255),w,b
 13656  0048D2  A4D8               	btfss	status,2,c
 13657  0048D4  D7F7               	goto	l2026
 13658  0048D6                     u12320:
 13659                           
 13660                           ; BSR set to: 0
 13661                           
 13662                           ; BSR set to: 0
 13663                           
 13664                           ; BSR set to: 0
 13665  0048D6  519F               	movf	___fttol@sign1& (0+255),w,b
 13666  0048D8  B4D8               	btfsc	status,2,c
 13667  0048DA  D008               	goto	l2028
 13668                           
 13669                           ; BSR set to: 0
 13670  0048DC  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13671  0048DE  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13672  0048E0  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13673  0048E2  6DA0               	negf	___fttol@lval& (0+255),b
 13674  0048E4  0E00               	movlw	0
 13675  0048E6  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13676  0048E8  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13677  0048EA  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13678  0048EC                     l2028:
 13679                           
 13680                           ; BSR set to: 0
 13681                           
 13682                           ; BSR set to: 0
 13683  0048EC  C0A0  F096         	movff	___fttol@lval,?___fttol
 13684  0048F0  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13685  0048F4  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13686  0048F8  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13687  0048FC  0012               	return	
 13688  0048FE                     __end_of___fttol:
 13689                           	opt stack 0
 13690                           tblptru	equ	0xFF8
 13691                           tblptrh	equ	0xFF7
 13692                           tblptrl	equ	0xFF6
 13693                           tablat	equ	0xFF5
 13694                           prodh	equ	0xFF4
 13695                           prodl	equ	0xFF3
 13696                           intcon	equ	0xFF2
 13697                           intcon2	equ	0xFF1
 13698                           intcon3	equ	0xFF0
 13699                           postinc0	equ	0xFEE
 13700                           wreg	equ	0xFE8
 13701                           postdec1	equ	0xFE5
 13702                           fsr1l	equ	0xFE1
 13703                           indf2	equ	0xFDF
 13704                           postinc2	equ	0xFDE
 13705                           postdec2	equ	0xFDD
 13706                           fsr2h	equ	0xFDA
 13707                           fsr2l	equ	0xFD9
 13708                           status	equ	0xFD8
 13709                           
 13710 ;; *************** function ___ftmul *****************
 13711 ;; Defined at:
 13712 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  f1              3   12[BANK0 ] float 
 13715 ;;  f2              3   15[BANK0 ] float 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13718 ;;  sign            1   26[BANK0 ] unsigned char 
 13719 ;;  cntr            1   25[BANK0 ] unsigned char 
 13720 ;;  exp             1   21[BANK0 ] unsigned char 
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  3   12[BANK0 ] float 
 13723 ;; Registers used:
 13724 ;;		wreg, status,2, status,0, cstack
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13730 ;;      Params:         0       6       0       0       0       0       0       0       0
 13731 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13732 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13733 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13734 ;;Total ram usage:       15 bytes
 13735 ;; Hardware stack levels used:    1
 13736 ;; Hardware stack levels required when called:    7
 13737 ;; This function calls:
 13738 ;;		___ftpack
 13739 ;; This function is called by:
 13740 ;;		_getSensors
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text12
 13745  0049F6                     __ptext12:
 13746                           	opt stack 0
 13747  0049F6                     ___ftmul:
 13748                           	opt stack 22
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;incstack = 0
 13752  0049F6  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13753  0049FA  0100               	movlb	0	; () banked
 13754  0049FC  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13755  0049FE  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13756  004A00  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13757  004A02  3772               	rlcf	??___ftmul& (0+255),f,b
 13758  004A04  E301               	bnc	u12171
 13759  004A06  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13760  004A08                     u12171:
 13761  004A08  5172               	movf	??___ftmul& (0+255),w,b
 13762  004A0A  6F75               	movwf	___ftmul@exp& (0+255),b
 13763  004A0C  5175               	movf	___ftmul@exp& (0+255),w,b
 13764  004A0E  A4D8               	btfss	status,2,c
 13765  004A10  D007               	goto	l1996
 13766                           
 13767                           ; BSR set to: 0
 13768  004A12  0E00               	movlw	0
 13769  004A14  6F6C               	movwf	?___ftmul& (0+255),b
 13770  004A16  0E00               	movlw	0
 13771  004A18  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13772  004A1A  0E00               	movlw	0
 13773  004A1C  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13774                           
 13775                           ; BSR set to: 0
 13776  004A1E  0012               	return	
 13777  004A20                     l1996:
 13778                           
 13779                           ; BSR set to: 0
 13780                           
 13781                           ; BSR set to: 0
 13782  004A20  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13783  004A24  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13784  004A26  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13785  004A28  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13786  004A2A  3772               	rlcf	??___ftmul& (0+255),f,b
 13787  004A2C  E301               	bnc	u12191
 13788  004A2E  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13789  004A30                     u12191:
 13790  004A30  5172               	movf	??___ftmul& (0+255),w,b
 13791  004A32  6F7A               	movwf	___ftmul@sign& (0+255),b
 13792  004A34  517A               	movf	___ftmul@sign& (0+255),w,b
 13793  004A36  A4D8               	btfss	status,2,c
 13794  004A38  D007               	goto	l1998
 13795                           
 13796                           ; BSR set to: 0
 13797  004A3A  0E00               	movlw	0
 13798  004A3C  6F6C               	movwf	?___ftmul& (0+255),b
 13799  004A3E  0E00               	movlw	0
 13800  004A40  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13801  004A42  0E00               	movlw	0
 13802  004A44  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13803                           
 13804                           ; BSR set to: 0
 13805  004A46  0012               	return	
 13806  004A48                     l1998:
 13807                           
 13808                           ; BSR set to: 0
 13809                           
 13810                           ; BSR set to: 0
 13811  004A48  517A               	movf	___ftmul@sign& (0+255),w,b
 13812  004A4A  0F7B               	addlw	123
 13813  004A4C  2775               	addwf	___ftmul@exp& (0+255),f,b
 13814                           
 13815                           ; BSR set to: 0
 13816  004A4E  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 13817  004A52  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13818  004A54  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 13819  004A56  0E80               	movlw	128
 13820  004A58  177A               	andwf	___ftmul@sign& (0+255),f,b
 13821                           
 13822                           ; BSR set to: 0
 13823  004A5A  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13824                           
 13825                           ; BSR set to: 0
 13826  004A5C  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13827                           
 13828                           ; BSR set to: 0
 13829  004A5E  0EFF               	movlw	255
 13830  004A60  176F               	andwf	___ftmul@f2& (0+255),f,b
 13831  004A62  0EFF               	movlw	255
 13832  004A64  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13833  004A66  0E00               	movlw	0
 13834  004A68  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13835                           
 13836                           ; BSR set to: 0
 13837  004A6A  0E00               	movlw	0
 13838  004A6C  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 13839  004A6E  0E00               	movlw	0
 13840  004A70  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13841  004A72  0E00               	movlw	0
 13842  004A74  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13843                           
 13844                           ; BSR set to: 0
 13845  004A76  0E07               	movlw	7
 13846  004A78  6F79               	movwf	___ftmul@cntr& (0+255),b
 13847  004A7A                     
 13848                           ; BSR set to: 0
 13849                           
 13850                           ; BSR set to: 0
 13851  004A7A  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13852  004A7C  D006               	goto	l2000
 13853                           
 13854                           ; BSR set to: 0
 13855  004A7E  516F               	movf	___ftmul@f2& (0+255),w,b
 13856  004A80  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13857  004A82  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13858  004A84  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13859  004A86  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13860  004A88  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13861  004A8A                     l2000:
 13862                           
 13863                           ; BSR set to: 0
 13864                           
 13865                           ; BSR set to: 0
 13866  004A8A  90D8               	bcf	status,0,c
 13867  004A8C  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13868  004A8E  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13869  004A90  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13870  004A92  90D8               	bcf	status,0,c
 13871  004A94  376F               	rlcf	___ftmul@f2& (0+255),f,b
 13872  004A96  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13873  004A98  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13874                           
 13875                           ; BSR set to: 0
 13876  004A9A  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13877  004A9C  D7EE               	goto	l1999
 13878                           
 13879                           ; BSR set to: 0
 13880                           
 13881                           ; BSR set to: 0
 13882  004A9E  0E09               	movlw	9
 13883  004AA0  6F79               	movwf	___ftmul@cntr& (0+255),b
 13884  004AA2                     
 13885                           ; BSR set to: 0
 13886                           
 13887                           ; BSR set to: 0
 13888  004AA2  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13889  004AA4  D006               	goto	l2003
 13890                           
 13891                           ; BSR set to: 0
 13892  004AA6  516F               	movf	___ftmul@f2& (0+255),w,b
 13893  004AA8  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13894  004AAA  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13895  004AAC  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13896  004AAE  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13897  004AB0  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13898  004AB2                     l2003:
 13899                           
 13900                           ; BSR set to: 0
 13901                           
 13902                           ; BSR set to: 0
 13903  004AB2  90D8               	bcf	status,0,c
 13904  004AB4  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13905  004AB6  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13906  004AB8  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13907  004ABA  90D8               	bcf	status,0,c
 13908  004ABC  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13909  004ABE  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13910  004AC0  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13911                           
 13912                           ; BSR set to: 0
 13913  004AC2  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13914  004AC4  D7EE               	goto	l2002
 13915                           
 13916                           ; BSR set to: 0
 13917                           
 13918                           ; BSR set to: 0
 13919  004AC6  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13920  004ACA  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13921  004ACE  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13922  004AD2  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 13923  004AD6  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 13924  004ADA  EC65  F027         	call	___ftpack	;wreg free
 13925  004ADE  C060  F06C         	movff	?___ftpack,?___ftmul
 13926  004AE2  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 13927  004AE6  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 13928  004AEA  0012               	return	
 13929  004AEC                     __end_of___ftmul:
 13930                           	opt stack 0
 13931                           tblptru	equ	0xFF8
 13932                           tblptrh	equ	0xFF7
 13933                           tblptrl	equ	0xFF6
 13934                           tablat	equ	0xFF5
 13935                           prodh	equ	0xFF4
 13936                           prodl	equ	0xFF3
 13937                           intcon	equ	0xFF2
 13938                           intcon2	equ	0xFF1
 13939                           intcon3	equ	0xFF0
 13940                           postinc0	equ	0xFEE
 13941                           wreg	equ	0xFE8
 13942                           postdec1	equ	0xFE5
 13943                           fsr1l	equ	0xFE1
 13944                           indf2	equ	0xFDF
 13945                           postinc2	equ	0xFDE
 13946                           postdec2	equ	0xFDD
 13947                           fsr2h	equ	0xFDA
 13948                           fsr2l	equ	0xFD9
 13949                           status	equ	0xFD8
 13950                           
 13951 ;; *************** function ___ftge *****************
 13952 ;; Defined at:
 13953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;  ff1             3    0[BANK0 ] float 
 13956 ;;  ff2             3    3[BANK0 ] float 
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;		None
 13959 ;; Return value:  Size  Location     Type
 13960 ;;		None               void
 13961 ;; Registers used:
 13962 ;;		wreg, status,2, status,0
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13968 ;;      Params:         0       6       0       0       0       0       0       0       0
 13969 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13970 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13971 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13972 ;;Total ram usage:        9 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:    6
 13975 ;; This function calls:
 13976 ;;		Nothing
 13977 ;; This function is called by:
 13978 ;;		_getSensors
 13979 ;; This function uses a non-reentrant model
 13980 ;;
 13981                           
 13982                           	psect	text13
 13983  005294                     __ptext13:
 13984                           	opt stack 0
 13985  005294                     ___ftge:
 13986                           	opt stack 23
 13987                           
 13988                           ;incstack = 0
 13989  005294  0100               	movlb	0	; () banked
 13990  005296  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13991  005298  D016               	goto	l1989
 13992                           
 13993                           ; BSR set to: 0
 13994  00529A  C060  F066         	movff	___ftge@ff1,??___ftge
 13995  00529E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 13996  0052A2  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 13997  0052A6  1F66               	comf	??___ftge& (0+255),f,b
 13998  0052A8  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13999  0052AA  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14000  0052AC  2B66               	incf	??___ftge& (0+255),f,b
 14001  0052AE  0E00               	movlw	0
 14002  0052B0  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14003  0052B2  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14004  0052B4  0E00               	movlw	0
 14005  0052B6  2566               	addwf	??___ftge& (0+255),w,b
 14006  0052B8  6F60               	movwf	___ftge@ff1& (0+255),b
 14007  0052BA  0E00               	movlw	0
 14008  0052BC  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14009  0052BE  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14010  0052C0  0E80               	movlw	128
 14011  0052C2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14012  0052C4  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14013  0052C6                     l1989:
 14014                           
 14015                           ; BSR set to: 0
 14016                           
 14017                           ; BSR set to: 0
 14018  0052C6  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14019  0052C8  D016               	goto	l1990
 14020                           
 14021                           ; BSR set to: 0
 14022  0052CA  C063  F066         	movff	___ftge@ff2,??___ftge
 14023  0052CE  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14024  0052D2  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14025  0052D6  1F66               	comf	??___ftge& (0+255),f,b
 14026  0052D8  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14027  0052DA  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14028  0052DC  2B66               	incf	??___ftge& (0+255),f,b
 14029  0052DE  0E00               	movlw	0
 14030  0052E0  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14031  0052E2  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14032  0052E4  0E00               	movlw	0
 14033  0052E6  2566               	addwf	??___ftge& (0+255),w,b
 14034  0052E8  6F63               	movwf	___ftge@ff2& (0+255),b
 14035  0052EA  0E00               	movlw	0
 14036  0052EC  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14037  0052EE  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14038  0052F0  0E80               	movlw	128
 14039  0052F2  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14040  0052F4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14041  0052F6                     l1990:
 14042                           
 14043                           ; BSR set to: 0
 14044                           
 14045                           ; BSR set to: 0
 14046  0052F6  0E00               	movlw	0
 14047  0052F8  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14048  0052FA  0E00               	movlw	0
 14049  0052FC  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14050  0052FE  0E80               	movlw	128
 14051  005300  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14052                           
 14053                           ; BSR set to: 0
 14054  005302  0E00               	movlw	0
 14055  005304  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14056  005306  0E00               	movlw	0
 14057  005308  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14058  00530A  0E80               	movlw	128
 14059  00530C  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14060  00530E  5163               	movf	___ftge@ff2& (0+255),w,b
 14061  005310  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14062  005312  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14063  005314  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14064  005316  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14065  005318  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14066  00531A  B0D8               	btfsc	status,0,c
 14067  00531C  D002               	goto	l6259
 14068                           
 14069                           ; BSR set to: 0
 14070  00531E  90D8               	bcf	status,0,c
 14071  005320  0012               	return	
 14072  005322                     l6259:
 14073                           
 14074                           ; BSR set to: 0
 14075                           
 14076                           ; BSR set to: 0
 14077  005322  80D8               	bsf	status,0,c
 14078                           
 14079                           ; BSR set to: 0
 14080  005324  0012               	return	
 14081  005326                     __end_of___ftge:
 14082                           	opt stack 0
 14083                           tblptru	equ	0xFF8
 14084                           tblptrh	equ	0xFF7
 14085                           tblptrl	equ	0xFF6
 14086                           tablat	equ	0xFF5
 14087                           prodh	equ	0xFF4
 14088                           prodl	equ	0xFF3
 14089                           intcon	equ	0xFF2
 14090                           intcon2	equ	0xFF1
 14091                           intcon3	equ	0xFF0
 14092                           postinc0	equ	0xFEE
 14093                           wreg	equ	0xFE8
 14094                           postdec1	equ	0xFE5
 14095                           fsr1l	equ	0xFE1
 14096                           indf2	equ	0xFDF
 14097                           postinc2	equ	0xFDE
 14098                           postdec2	equ	0xFDD
 14099                           fsr2h	equ	0xFDA
 14100                           fsr2l	equ	0xFD9
 14101                           status	equ	0xFD8
 14102                           
 14103 ;; *************** function ___ftdiv *****************
 14104 ;; Defined at:
 14105 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14106 ;; Parameters:    Size  Location     Type
 14107 ;;  f1              3   39[BANK0 ] float 
 14108 ;;  f2              3   42[BANK0 ] float 
 14109 ;; Auto vars:     Size  Location     Type
 14110 ;;  f3              3   49[BANK0 ] float 
 14111 ;;  sign            1   53[BANK0 ] unsigned char 
 14112 ;;  exp             1   52[BANK0 ] unsigned char 
 14113 ;;  cntr            1   48[BANK0 ] unsigned char 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  3   39[BANK0 ] float 
 14116 ;; Registers used:
 14117 ;;		wreg, status,2, status,0, cstack
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14123 ;;      Params:         0       6       0       0       0       0       0       0       0
 14124 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14125 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14126 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14127 ;;Total ram usage:       15 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    7
 14130 ;; This function calls:
 14131 ;;		___ftpack
 14132 ;; This function is called by:
 14133 ;;		_getSensors
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text14
 14138  004AEC                     __ptext14:
 14139                           	opt stack 0
 14140  004AEC                     ___ftdiv:
 14141                           	opt stack 22
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;incstack = 0
 14145  004AEC  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14146  004AF0  0100               	movlb	0	; () banked
 14147  004AF2  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14148  004AF4  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14149  004AF6  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14150  004AF8  378D               	rlcf	??___ftdiv& (0+255),f,b
 14151  004AFA  E301               	bnc	u12121
 14152  004AFC  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14153  004AFE                     u12121:
 14154  004AFE  518D               	movf	??___ftdiv& (0+255),w,b
 14155  004B00  6F94               	movwf	___ftdiv@exp& (0+255),b
 14156  004B02  5194               	movf	___ftdiv@exp& (0+255),w,b
 14157  004B04  A4D8               	btfss	status,2,c
 14158  004B06  D007               	goto	l1981
 14159                           
 14160                           ; BSR set to: 0
 14161  004B08  0E00               	movlw	0
 14162  004B0A  6F87               	movwf	?___ftdiv& (0+255),b
 14163  004B0C  0E00               	movlw	0
 14164  004B0E  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14165  004B10  0E00               	movlw	0
 14166  004B12  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14167                           
 14168                           ; BSR set to: 0
 14169  004B14  0012               	return	
 14170  004B16                     l1981:
 14171                           
 14172                           ; BSR set to: 0
 14173                           
 14174                           ; BSR set to: 0
 14175  004B16  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14176  004B1A  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14177  004B1C  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14178  004B1E  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14179  004B20  378D               	rlcf	??___ftdiv& (0+255),f,b
 14180  004B22  E301               	bnc	u12141
 14181  004B24  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14182  004B26                     u12141:
 14183  004B26  518D               	movf	??___ftdiv& (0+255),w,b
 14184  004B28  6F95               	movwf	___ftdiv@sign& (0+255),b
 14185  004B2A  5195               	movf	___ftdiv@sign& (0+255),w,b
 14186  004B2C  A4D8               	btfss	status,2,c
 14187  004B2E  D007               	goto	l1983
 14188                           
 14189                           ; BSR set to: 0
 14190  004B30  0E00               	movlw	0
 14191  004B32  6F87               	movwf	?___ftdiv& (0+255),b
 14192  004B34  0E00               	movlw	0
 14193  004B36  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14194  004B38  0E00               	movlw	0
 14195  004B3A  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14196                           
 14197                           ; BSR set to: 0
 14198  004B3C  0012               	return	
 14199  004B3E                     l1983:
 14200                           
 14201                           ; BSR set to: 0
 14202                           
 14203                           ; BSR set to: 0
 14204  004B3E  0E00               	movlw	0
 14205  004B40  6F91               	movwf	___ftdiv@f3& (0+255),b
 14206  004B42  0E00               	movlw	0
 14207  004B44  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14208  004B46  0E00               	movlw	0
 14209  004B48  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14210                           
 14211                           ; BSR set to: 0
 14212  004B4A  5195               	movf	___ftdiv@sign& (0+255),w,b
 14213  004B4C  0F89               	addlw	137
 14214  004B4E  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14215                           
 14216                           ; BSR set to: 0
 14217  004B50  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14218                           
 14219                           ; BSR set to: 0
 14220  004B54  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14221  004B56  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14222                           
 14223                           ; BSR set to: 0
 14224  004B58  0E80               	movlw	128
 14225  004B5A  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14226                           
 14227                           ; BSR set to: 0
 14228  004B5C  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14229                           
 14230                           ; BSR set to: 0
 14231  004B5E  0EFF               	movlw	255
 14232  004B60  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14233  004B62  0EFF               	movlw	255
 14234  004B64  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14235  004B66  0E00               	movlw	0
 14236  004B68  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14237                           
 14238                           ; BSR set to: 0
 14239  004B6A  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14240                           
 14241                           ; BSR set to: 0
 14242  004B6C  0EFF               	movlw	255
 14243  004B6E  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14244  004B70  0EFF               	movlw	255
 14245  004B72  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14246  004B74  0E00               	movlw	0
 14247  004B76  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14248                           
 14249                           ; BSR set to: 0
 14250  004B78  0E18               	movlw	24
 14251  004B7A  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14252  004B7C                     
 14253                           ; BSR set to: 0
 14254                           
 14255                           ; BSR set to: 0
 14256  004B7C  90D8               	bcf	status,0,c
 14257  004B7E  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14258  004B80  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14259  004B82  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14260                           
 14261                           ; BSR set to: 0
 14262  004B84  518A               	movf	___ftdiv@f2& (0+255),w,b
 14263  004B86  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14264  004B88  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14265  004B8A  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14266  004B8C  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14267  004B8E  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14268  004B90  A0D8               	btfss	status,0,c
 14269  004B92  D007               	goto	l1985
 14270                           
 14271                           ; BSR set to: 0
 14272  004B94  518A               	movf	___ftdiv@f2& (0+255),w,b
 14273  004B96  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14274  004B98  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14275  004B9A  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14276  004B9C  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14277  004B9E  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14278                           
 14279                           ; BSR set to: 0
 14280  004BA0  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14281  004BA2                     l1985:
 14282                           
 14283                           ; BSR set to: 0
 14284  004BA2  90D8               	bcf	status,0,c
 14285  004BA4  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14286  004BA6  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14287  004BA8  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14288                           
 14289                           ; BSR set to: 0
 14290  004BAA  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14291  004BAC  D7E7               	goto	l1984
 14292                           
 14293                           ; BSR set to: 0
 14294                           
 14295                           ; BSR set to: 0
 14296  004BAE  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14297  004BB2  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14298  004BB6  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14299  004BBA  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14300  004BBE  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14301  004BC2  EC65  F027         	call	___ftpack	;wreg free
 14302  004BC6  C060  F087         	movff	?___ftpack,?___ftdiv
 14303  004BCA  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14304  004BCE  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14305  004BD2  0012               	return	
 14306  004BD4                     __end_of___ftdiv:
 14307                           	opt stack 0
 14308                           tblptru	equ	0xFF8
 14309                           tblptrh	equ	0xFF7
 14310                           tblptrl	equ	0xFF6
 14311                           tablat	equ	0xFF5
 14312                           prodh	equ	0xFF4
 14313                           prodl	equ	0xFF3
 14314                           intcon	equ	0xFF2
 14315                           intcon2	equ	0xFF1
 14316                           intcon3	equ	0xFF0
 14317                           postinc0	equ	0xFEE
 14318                           wreg	equ	0xFE8
 14319                           postdec1	equ	0xFE5
 14320                           fsr1l	equ	0xFE1
 14321                           indf2	equ	0xFDF
 14322                           postinc2	equ	0xFDE
 14323                           postdec2	equ	0xFDD
 14324                           fsr2h	equ	0xFDA
 14325                           fsr2l	equ	0xFD9
 14326                           status	equ	0xFD8
 14327                           
 14328 ;; *************** function ___ftadd *****************
 14329 ;; Defined at:
 14330 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  f1              3   27[BANK0 ] float 
 14333 ;;  f2              3   30[BANK0 ] float 
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;  exp1            1   38[BANK0 ] unsigned char 
 14336 ;;  exp2            1   37[BANK0 ] unsigned char 
 14337 ;;  sign            1   36[BANK0 ] unsigned char 
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  3   27[BANK0 ] float 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14347 ;;      Params:         0       6       0       0       0       0       0       0       0
 14348 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14349 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14350 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14351 ;;Total ram usage:       12 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    7
 14354 ;; This function calls:
 14355 ;;		___ftpack
 14356 ;; This function is called by:
 14357 ;;		_getSensors
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text15
 14362  004414                     __ptext15:
 14363                           	opt stack 0
 14364  004414                     ___ftadd:
 14365                           	opt stack 22
 14366                           
 14367                           ;incstack = 0
 14368  004414  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14369  004418  0100               	movlb	0	; () banked
 14370  00441A  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14371  00441C  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14372  00441E  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14373  004420  3781               	rlcf	??___ftadd& (0+255),f,b
 14374  004422  E301               	bnc	u11911
 14375  004424  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14376  004426                     u11911:
 14377  004426  5181               	movf	??___ftadd& (0+255),w,b
 14378  004428  6F86               	movwf	___ftadd@exp1& (0+255),b
 14379  00442A  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14380  00442E  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14381  004430  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14382  004432  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14383  004434  3781               	rlcf	??___ftadd& (0+255),f,b
 14384  004436  E301               	bnc	u11921
 14385  004438  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14386  00443A                     u11921:
 14387  00443A  5181               	movf	??___ftadd& (0+255),w,b
 14388  00443C  6F85               	movwf	___ftadd@exp2& (0+255),b
 14389                           
 14390                           ; BSR set to: 0
 14391  00443E  5186               	movf	___ftadd@exp1& (0+255),w,b
 14392  004440  B4D8               	btfsc	status,2,c
 14393  004442  D00B               	goto	u11950
 14394                           
 14395                           ; BSR set to: 0
 14396  004444  5185               	movf	___ftadd@exp2& (0+255),w,b
 14397  004446  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14398  004448  B0D8               	btfsc	status,0,c
 14399  00444A  D00E               	goto	l1948
 14400                           
 14401                           ; BSR set to: 0
 14402  00444C  5186               	movf	___ftadd@exp1& (0+255),w,b
 14403  00444E  0800               	sublw	0
 14404  004450  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14405  004452  6F81               	movwf	??___ftadd& (0+255),b
 14406  004454  0E18               	movlw	24
 14407  004456  6581               	cpfsgt	??___ftadd& (0+255),b
 14408  004458  D007               	goto	l1948
 14409  00445A                     u11950:
 14410                           
 14411                           ; BSR set to: 0
 14412  00445A  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14413  00445E  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14414  004462  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14415  004466  0012               	return	
 14416  004468                     l1948:
 14417                           
 14418                           ; BSR set to: 0
 14419                           
 14420                           ; BSR set to: 0
 14421  004468  5185               	movf	___ftadd@exp2& (0+255),w,b
 14422  00446A  B4D8               	btfsc	status,2,c
 14423  00446C  D00B               	goto	u11980
 14424                           
 14425                           ; BSR set to: 0
 14426  00446E  5186               	movf	___ftadd@exp1& (0+255),w,b
 14427  004470  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14428  004472  B0D8               	btfsc	status,0,c
 14429  004474  D00E               	goto	l1952
 14430                           
 14431                           ; BSR set to: 0
 14432  004476  5185               	movf	___ftadd@exp2& (0+255),w,b
 14433  004478  0800               	sublw	0
 14434  00447A  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14435  00447C  6F81               	movwf	??___ftadd& (0+255),b
 14436  00447E  0E18               	movlw	24
 14437  004480  6581               	cpfsgt	??___ftadd& (0+255),b
 14438  004482  D007               	goto	l1952
 14439  004484                     u11980:
 14440                           
 14441                           ; BSR set to: 0
 14442  004484  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14443  004488  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14444  00448C  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14445  004490  0012               	return	
 14446  004492                     l1952:
 14447                           
 14448                           ; BSR set to: 0
 14449                           
 14450                           ; BSR set to: 0
 14451  004492  0E06               	movlw	6
 14452  004494  6F84               	movwf	___ftadd@sign& (0+255),b
 14453                           
 14454                           ; BSR set to: 0
 14455  004496  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14456                           
 14457                           ; BSR set to: 0
 14458  004498  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14459                           
 14460                           ; BSR set to: 0
 14461                           
 14462                           ; BSR set to: 0
 14463  00449A  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14464                           
 14465                           ; BSR set to: 0
 14466  00449C  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14467                           
 14468                           ; BSR set to: 0
 14469  00449E  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14470                           
 14471                           ; BSR set to: 0
 14472  0044A0  0EFF               	movlw	255
 14473  0044A2  177B               	andwf	___ftadd@f1& (0+255),f,b
 14474  0044A4  0EFF               	movlw	255
 14475  0044A6  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14476  0044A8  0E00               	movlw	0
 14477  0044AA  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14478  0044AC  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14479                           
 14480                           ; BSR set to: 0
 14481  0044AE  0EFF               	movlw	255
 14482  0044B0  177E               	andwf	___ftadd@f2& (0+255),f,b
 14483  0044B2  0EFF               	movlw	255
 14484  0044B4  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14485  0044B6  0E00               	movlw	0
 14486  0044B8  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14487                           
 14488                           ; BSR set to: 0
 14489  0044BA  5185               	movf	___ftadd@exp2& (0+255),w,b
 14490  0044BC  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14491  0044BE  B0D8               	btfsc	status,0,c
 14492  0044C0  D01B               	goto	l1957
 14493  0044C2                     u12010:
 14494                           
 14495                           ; BSR set to: 0
 14496                           
 14497                           ; BSR set to: 0
 14498  0044C2  90D8               	bcf	status,0,c
 14499  0044C4  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14500  0044C6  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14501  0044C8  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14502  0044CA  0785               	decf	___ftadd@exp2& (0+255),f,b
 14503                           
 14504                           ; BSR set to: 0
 14505  0044CC  5186               	movf	___ftadd@exp1& (0+255),w,b
 14506  0044CE  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14507  0044D0  B4D8               	btfsc	status,2,c
 14508  0044D2  D00D               	goto	l1962
 14509                           
 14510                           ; BSR set to: 0
 14511  0044D4  0784               	decf	___ftadd@sign& (0+255),f,b
 14512  0044D6  C084  F081         	movff	___ftadd@sign,??___ftadd
 14513  0044DA  0E07               	movlw	7
 14514  0044DC  1781               	andwf	??___ftadd& (0+255),f,b
 14515  0044DE  B4D8               	btfsc	status,2,c
 14516  0044E0  D006               	goto	l1962
 14517  0044E2  D7EF               	goto	u12010
 14518  0044E4                     
 14519                           ; BSR set to: 0
 14520                           
 14521                           ; BSR set to: 0
 14522  0044E4  90D8               	bcf	status,0,c
 14523  0044E6  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14524  0044E8  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14525  0044EA  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14526  0044EC  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14527  0044EE                     l1962:
 14528                           
 14529                           ; BSR set to: 0
 14530                           
 14531                           ; BSR set to: 0
 14532  0044EE  5185               	movf	___ftadd@exp2& (0+255),w,b
 14533  0044F0  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14534  0044F2  B4D8               	btfsc	status,2,c
 14535  0044F4  D01F               	goto	u12080
 14536  0044F6  D7F6               	goto	l1963
 14537  0044F8                     l1957:
 14538                           
 14539                           ; BSR set to: 0
 14540                           
 14541                           ; BSR set to: 0
 14542  0044F8  5186               	movf	___ftadd@exp1& (0+255),w,b
 14543  0044FA  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14544  0044FC  B0D8               	btfsc	status,0,c
 14545  0044FE  D01A               	goto	u12080
 14546  004500                     u12050:
 14547                           
 14548                           ; BSR set to: 0
 14549                           
 14550                           ; BSR set to: 0
 14551  004500  90D8               	bcf	status,0,c
 14552  004502  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14553  004504  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14554  004506  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14555  004508  0786               	decf	___ftadd@exp1& (0+255),f,b
 14556                           
 14557                           ; BSR set to: 0
 14558  00450A  5186               	movf	___ftadd@exp1& (0+255),w,b
 14559  00450C  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14560  00450E  B4D8               	btfsc	status,2,c
 14561  004510  D00D               	goto	l1971
 14562                           
 14563                           ; BSR set to: 0
 14564  004512  0784               	decf	___ftadd@sign& (0+255),f,b
 14565  004514  C084  F081         	movff	___ftadd@sign,??___ftadd
 14566  004518  0E07               	movlw	7
 14567  00451A  1781               	andwf	??___ftadd& (0+255),f,b
 14568  00451C  B4D8               	btfsc	status,2,c
 14569  00451E  D006               	goto	l1971
 14570  004520  D7EF               	goto	u12050
 14571  004522                     
 14572                           ; BSR set to: 0
 14573                           
 14574                           ; BSR set to: 0
 14575  004522  90D8               	bcf	status,0,c
 14576  004524  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14577  004526  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14578  004528  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14579  00452A  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14580  00452C                     l1971:
 14581                           
 14582                           ; BSR set to: 0
 14583                           
 14584                           ; BSR set to: 0
 14585  00452C  5185               	movf	___ftadd@exp2& (0+255),w,b
 14586  00452E  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14587  004530  A4D8               	btfss	status,2,c
 14588  004532  D7F7               	goto	l1972
 14589  004534                     u12080:
 14590                           
 14591                           ; BSR set to: 0
 14592                           
 14593                           ; BSR set to: 0
 14594                           
 14595                           ; BSR set to: 0
 14596  004534  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14597  004536  D00C               	goto	l1974
 14598                           
 14599                           ; BSR set to: 0
 14600  004538  0EFF               	movlw	255
 14601  00453A  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14602  00453C  0EFF               	movlw	255
 14603  00453E  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14604  004540  0EFF               	movlw	255
 14605  004542  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14606  004544  0E01               	movlw	1
 14607  004546  277B               	addwf	___ftadd@f1& (0+255),f,b
 14608  004548  0E00               	movlw	0
 14609  00454A  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14610  00454C  0E00               	movlw	0
 14611  00454E  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14612  004550                     l1974:
 14613                           
 14614                           ; BSR set to: 0
 14615  004550  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14616  004552  D00C               	goto	l1975
 14617                           
 14618                           ; BSR set to: 0
 14619  004554  0EFF               	movlw	255
 14620  004556  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14621  004558  0EFF               	movlw	255
 14622  00455A  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14623  00455C  0EFF               	movlw	255
 14624  00455E  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14625  004560  0E01               	movlw	1
 14626  004562  277E               	addwf	___ftadd@f2& (0+255),f,b
 14627  004564  0E00               	movlw	0
 14628  004566  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14629  004568  0E00               	movlw	0
 14630  00456A  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14631  00456C                     l1975:
 14632                           
 14633                           ; BSR set to: 0
 14634                           
 14635                           ; BSR set to: 0
 14636  00456C  0E00               	movlw	0
 14637  00456E  6F84               	movwf	___ftadd@sign& (0+255),b
 14638                           
 14639                           ; BSR set to: 0
 14640  004570  517B               	movf	___ftadd@f1& (0+255),w,b
 14641  004572  277E               	addwf	___ftadd@f2& (0+255),f,b
 14642  004574  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14643  004576  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14644  004578  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14645  00457A  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14646                           
 14647                           ; BSR set to: 0
 14648  00457C  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14649  00457E  D00E               	goto	l1976
 14650                           
 14651                           ; BSR set to: 0
 14652  004580  0EFF               	movlw	255
 14653  004582  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14654  004584  0EFF               	movlw	255
 14655  004586  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14656  004588  0EFF               	movlw	255
 14657  00458A  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14658  00458C  0E01               	movlw	1
 14659  00458E  277E               	addwf	___ftadd@f2& (0+255),f,b
 14660  004590  0E00               	movlw	0
 14661  004592  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14662  004594  0E00               	movlw	0
 14663  004596  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14664                           
 14665                           ; BSR set to: 0
 14666  004598  0E01               	movlw	1
 14667  00459A  6F84               	movwf	___ftadd@sign& (0+255),b
 14668  00459C                     l1976:
 14669                           
 14670                           ; BSR set to: 0
 14671                           
 14672                           ; BSR set to: 0
 14673  00459C  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14674  0045A0  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14675  0045A4  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14676  0045A8  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14677  0045AC  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14678  0045B0  EC65  F027         	call	___ftpack	;wreg free
 14679  0045B4  C060  F07B         	movff	?___ftpack,?___ftadd
 14680  0045B8  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14681  0045BC  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14682  0045C0  0012               	return	
 14683  0045C2                     __end_of___ftadd:
 14684                           	opt stack 0
 14685                           tblptru	equ	0xFF8
 14686                           tblptrh	equ	0xFF7
 14687                           tblptrl	equ	0xFF6
 14688                           tablat	equ	0xFF5
 14689                           prodh	equ	0xFF4
 14690                           prodl	equ	0xFF3
 14691                           intcon	equ	0xFF2
 14692                           intcon2	equ	0xFF1
 14693                           intcon3	equ	0xFF0
 14694                           postinc0	equ	0xFEE
 14695                           wreg	equ	0xFE8
 14696                           postdec1	equ	0xFE5
 14697                           fsr1l	equ	0xFE1
 14698                           indf2	equ	0xFDF
 14699                           postinc2	equ	0xFDE
 14700                           postdec2	equ	0xFDD
 14701                           fsr2h	equ	0xFDA
 14702                           fsr2l	equ	0xFD9
 14703                           status	equ	0xFD8
 14704                           
 14705 ;; *************** function ___ftpack *****************
 14706 ;; Defined at:
 14707 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;  arg             3    0[BANK0 ] unsigned um
 14710 ;;  exp             1    3[BANK0 ] unsigned char 
 14711 ;;  sign            1    4[BANK0 ] unsigned char 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;		None
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  3    0[BANK0 ] float 
 14716 ;; Registers used:
 14717 ;;		wreg, status,2, status,0
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/0
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14723 ;;      Params:         0       5       0       0       0       0       0       0       0
 14724 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14725 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14726 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14727 ;;Total ram usage:        8 bytes
 14728 ;; Hardware stack levels used:    1
 14729 ;; Hardware stack levels required when called:    6
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		___ftadd
 14734 ;;		___ftdiv
 14735 ;;		___ftmul
 14736 ;;		___lwtoft
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           	psect	text16
 14741  004ECA                     __ptext16:
 14742                           	opt stack 0
 14743  004ECA                     ___ftpack:
 14744                           	opt stack 22
 14745                           
 14746                           ;incstack = 0
 14747  004ECA  0100               	movlb	0	; () banked
 14748  004ECC  5163               	movf	___ftpack@exp& (0+255),w,b
 14749  004ECE  B4D8               	btfsc	status,2,c
 14750  004ED0  D005               	goto	u8510
 14751                           
 14752                           ; BSR set to: 0
 14753  004ED2  5160               	movf	___ftpack@arg& (0+255),w,b
 14754  004ED4  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14755  004ED6  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14756  004ED8  A4D8               	btfss	status,2,c
 14757  004EDA  D00C               	goto	l1917
 14758  004EDC                     u8510:
 14759                           
 14760                           ; BSR set to: 0
 14761                           
 14762                           ; BSR set to: 0
 14763  004EDC  0E00               	movlw	0
 14764  004EDE  6F60               	movwf	?___ftpack& (0+255),b
 14765  004EE0  0E00               	movlw	0
 14766  004EE2  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14767  004EE4  0E00               	movlw	0
 14768  004EE6  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  004EE8  0012               	return	
 14772  004EEA                     
 14773                           ; BSR set to: 0
 14774                           
 14775                           ; BSR set to: 0
 14776  004EEA  2B63               	incf	___ftpack@exp& (0+255),f,b
 14777  004EEC  90D8               	bcf	status,0,c
 14778  004EEE  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14779  004EF0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14780  004EF2  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14781  004EF4                     l1917:
 14782                           
 14783                           ; BSR set to: 0
 14784                           
 14785                           ; BSR set to: 0
 14786  004EF4  0E00               	movlw	0
 14787  004EF6  1560               	andwf	___ftpack@arg& (0+255),w,b
 14788  004EF8  6F65               	movwf	??___ftpack& (0+255),b
 14789  004EFA  0E00               	movlw	0
 14790  004EFC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14791  004EFE  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14792  004F00  0EFE               	movlw	254
 14793  004F02  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14794  004F04  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14795  004F06  5165               	movf	??___ftpack& (0+255),w,b
 14796  004F08  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14797  004F0A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14798  004F0C  B4D8               	btfsc	status,2,c
 14799  004F0E  D00C               	goto	l1920
 14800  004F10  D7EC               	goto	l1918
 14801  004F12                     
 14802                           ; BSR set to: 0
 14803                           
 14804                           ; BSR set to: 0
 14805  004F12  2B63               	incf	___ftpack@exp& (0+255),f,b
 14806                           
 14807                           ; BSR set to: 0
 14808  004F14  0E01               	movlw	1
 14809  004F16  2760               	addwf	___ftpack@arg& (0+255),f,b
 14810  004F18  0E00               	movlw	0
 14811  004F1A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14812  004F1C  0E00               	movlw	0
 14813  004F1E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14814  004F20  90D8               	bcf	status,0,c
 14815  004F22  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14816  004F24  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14817  004F26  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14818  004F28                     l1920:
 14819                           
 14820                           ; BSR set to: 0
 14821                           
 14822                           ; BSR set to: 0
 14823  004F28  0E00               	movlw	0
 14824  004F2A  1560               	andwf	___ftpack@arg& (0+255),w,b
 14825  004F2C  6F65               	movwf	??___ftpack& (0+255),b
 14826  004F2E  0E00               	movlw	0
 14827  004F30  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14828  004F32  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14829  004F34  0EFF               	movlw	255
 14830  004F36  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14831  004F38  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14832  004F3A  5165               	movf	??___ftpack& (0+255),w,b
 14833  004F3C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14834  004F3E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14835  004F40  B4D8               	btfsc	status,2,c
 14836  004F42  D006               	goto	l1923
 14837  004F44  D7E6               	goto	l1921
 14838  004F46                     
 14839                           ; BSR set to: 0
 14840                           
 14841                           ; BSR set to: 0
 14842  004F46  0763               	decf	___ftpack@exp& (0+255),f,b
 14843  004F48  90D8               	bcf	status,0,c
 14844  004F4A  3760               	rlcf	___ftpack@arg& (0+255),f,b
 14845  004F4C  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14846  004F4E  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14847  004F50                     l1923:
 14848                           
 14849                           ; BSR set to: 0
 14850                           
 14851                           ; BSR set to: 0
 14852  004F50  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14853  004F52  D003               	goto	u8550
 14854                           
 14855                           ; BSR set to: 0
 14856  004F54  0E02               	movlw	2
 14857  004F56  6163               	cpfslt	___ftpack@exp& (0+255),b
 14858  004F58  D7F6               	goto	l1924
 14859  004F5A                     u8550:
 14860                           
 14861                           ; BSR set to: 0
 14862                           
 14863                           ; BSR set to: 0
 14864  004F5A  A163               	btfss	___ftpack@exp& (0+255),0,b
 14865                           
 14866                           ; BSR set to: 0
 14867  004F5C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14868                           
 14869                           ; BSR set to: 0
 14870                           
 14871                           ; BSR set to: 0
 14872  004F5E  90D8               	bcf	status,0,c
 14873  004F60  3363               	rrcf	___ftpack@exp& (0+255),f,b
 14874  004F62  5163               	movf	___ftpack@exp& (0+255),w,b
 14875  004F64  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14876                           
 14877                           ; BSR set to: 0
 14878  004F66  5164               	movf	___ftpack@sign& (0+255),w,b
 14879  004F68  A4D8               	btfss	status,2,c
 14880                           
 14881                           ; BSR set to: 0
 14882  004F6A  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14883                           
 14884                           ; BSR set to: 0
 14885                           
 14886                           ; BSR set to: 0
 14887  004F6C  C060  F060         	movff	___ftpack@arg,?___ftpack
 14888  004F70  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 14889  004F74  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 14890  004F78  0012               	return	
 14891  004F7A                     __end_of___ftpack:
 14892                           	opt stack 0
 14893                           tblptru	equ	0xFF8
 14894                           tblptrh	equ	0xFF7
 14895                           tblptrl	equ	0xFF6
 14896                           tablat	equ	0xFF5
 14897                           prodh	equ	0xFF4
 14898                           prodl	equ	0xFF3
 14899                           intcon	equ	0xFF2
 14900                           intcon2	equ	0xFF1
 14901                           intcon3	equ	0xFF0
 14902                           postinc0	equ	0xFEE
 14903                           wreg	equ	0xFE8
 14904                           postdec1	equ	0xFE5
 14905                           fsr1l	equ	0xFE1
 14906                           indf2	equ	0xFDF
 14907                           postinc2	equ	0xFDE
 14908                           postdec2	equ	0xFDD
 14909                           fsr2h	equ	0xFDA
 14910                           fsr2l	equ	0xFD9
 14911                           status	equ	0xFD8
 14912                           
 14913 ;; *************** function _faseAtual *****************
 14914 ;; Defined at:
 14915 ;;		line 8 in file "src/FuncoesControlador.h"
 14916 ;; Parameters:    Size  Location     Type
 14917 ;;  tp              1    wreg     unsigned char 
 14918 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 14919 ;;		 -> fase(1), 
 14920 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 14921 ;;		 -> tempajt(1), 
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;  tp              1    5[BANK0 ] unsigned char 
 14924 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 14925 ;;  _fasee          1    4[BANK0 ] unsigned char 
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  2    0[BANK0 ] PTR unsigned char 
 14928 ;; Registers used:
 14929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/0
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14935 ;;      Params:         0       4       0       0       0       0       0       0       0
 14936 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14938 ;;      Totals:         0       7       0       0       0       0       0       0       0
 14939 ;;Total ram usage:        7 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    6
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_main
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text17
 14950  0045C2                     __ptext17:
 14951                           	opt stack 0
 14952  0045C2                     _faseAtual:
 14953                           	opt stack 24
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;incstack = 0
 14957                           ;faseAtual@tp stored from wreg
 14958  0045C2  0100               	movlb	0	; () banked
 14959  0045C4  6F65               	movwf	faseAtual@tp& (0+255),b
 14960                           
 14961                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 14962  0045C6  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14963  0045CA  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14964  0045CE  50DF               	movf	indf2,w,c
 14965  0045D0  0100               	movlb	0	; () banked
 14966  0045D2  6F64               	movwf	faseAtual@_fasee& (0+255),b
 14967                           
 14968                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 14969  0045D4  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 14970  0045D8  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 14971  0045DC  50DF               	movf	indf2,w,c
 14972  0045DE  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 14973                           
 14974                           ; BSR set to: 0
 14975                           ;FuncoesControlador.h: 11: if (tp == '?') {
 14976  0045E0  0E3F               	movlw	63
 14977  0045E2  1965               	xorwf	faseAtual@tp& (0+255),w,b
 14978  0045E4  B4D8               	btfsc	status,2,c
 14979  0045E6  D01A               	goto	l877
 14980  0045E8  D027               	goto	l876
 14981  0045EA                     
 14982                           ; BSR set to: 0
 14983                           
 14984                           ; BSR set to: 0
 14985  0045EA  0EC8               	movlw	low STR_1
 14986  0045EC  6F60               	movwf	?_faseAtual& (0+255),b
 14987  0045EE  0E7E               	movlw	high STR_1
 14988  0045F0  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14989                           
 14990                           ; BSR set to: 0
 14991  0045F2  0012               	return	
 14992  0045F4                     
 14993                           ; BSR set to: 0
 14994                           
 14995                           ; BSR set to: 0
 14996  0045F4  0EA6               	movlw	low STR_2
 14997  0045F6  6F60               	movwf	?_faseAtual& (0+255),b
 14998  0045F8  0E7E               	movlw	high STR_2
 14999  0045FA  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15000                           
 15001                           ; BSR set to: 0
 15002  0045FC  0012               	return	
 15003  0045FE                     
 15004                           ; BSR set to: 0
 15005                           
 15006                           ; BSR set to: 0
 15007  0045FE  0EBD               	movlw	low STR_3
 15008  004600  6F60               	movwf	?_faseAtual& (0+255),b
 15009  004602  0E7E               	movlw	high STR_3
 15010  004604  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15011                           
 15012                           ; BSR set to: 0
 15013  004606  0012               	return	
 15014  004608                     
 15015                           ; BSR set to: 0
 15016                           
 15017                           ; BSR set to: 0
 15018  004608  0EFE               	movlw	low STR_4
 15019  00460A  6F60               	movwf	?_faseAtual& (0+255),b
 15020  00460C  0E7E               	movlw	high STR_4
 15021  00460E  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15022                           
 15023                           ; BSR set to: 0
 15024  004610  0012               	return	
 15025  004612                     
 15026                           ; BSR set to: 0
 15027                           
 15028                           ; BSR set to: 0
 15029  004612  0EDA               	movlw	low STR_5
 15030  004614  6F60               	movwf	?_faseAtual& (0+255),b
 15031  004616  0E7F               	movlw	high STR_5
 15032  004618  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;FuncoesControlador.h: 18: }
 15036                           
 15037                           ; BSR set to: 0
 15038  00461A  0012               	return	
 15039  00461C                     l877:
 15040                           
 15041                           ; BSR set to: 0
 15042                           
 15043                           ; BSR set to: 0
 15044  00461C  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15045                           
 15046                           ; Switch size 1, requested type "space"
 15047                           ; Number of cases is 4, Range of values is 1 to 4
 15048                           ; switch strategies available:
 15049                           ; Name         Instructions Cycles
 15050                           ; simple_byte           13     7 (average)
 15051                           ;	Chosen strategy is simple_byte
 15052  00461E  0A01               	xorlw	1	; case 1
 15053  004620  B4D8               	btfsc	status,2,c
 15054  004622  D7E3               	goto	l878
 15055  004624  0A03               	xorlw	3	; case 2
 15056  004626  B4D8               	btfsc	status,2,c
 15057  004628  D7E5               	goto	l880
 15058  00462A  0A01               	xorlw	1	; case 3
 15059  00462C  B4D8               	btfsc	status,2,c
 15060  00462E  D7E7               	goto	l881
 15061  004630  0A07               	xorlw	7	; case 4
 15062  004632  B4D8               	btfsc	status,2,c
 15063  004634  D7E9               	goto	l882
 15064  004636  D7ED               	goto	l883
 15065  004638                     l876:
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15069                           
 15070                           ; BSR set to: 0
 15071  004638  0E46               	movlw	70
 15072  00463A  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15073  00463C  A4D8               	btfss	status,2,c
 15074  00463E  D031               	goto	l886
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15078  004640  0E65               	movlw	101
 15079  004642  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15080  004644  D007               	goto	l887
 15081                           
 15082                           ; BSR set to: 0
 15083  004646  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15084  00464A  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15085  00464E  0E01               	movlw	1
 15086  004650  6EDF               	movwf	indf2,c
 15087  004652  0012               	return	
 15088  004654                     l887:
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15092                           
 15093                           ; BSR set to: 0
 15094  004654  0E64               	movlw	100
 15095  004656  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15096  004658  D00A               	goto	l889
 15097                           
 15098                           ; BSR set to: 0
 15099  00465A  0E6F               	movlw	111
 15100  00465C  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15101  00465E  D007               	goto	l889
 15102                           
 15103                           ; BSR set to: 0
 15104  004660  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15105  004664  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15106  004668  0E02               	movlw	2
 15107  00466A  6EDF               	movwf	indf2,c
 15108  00466C  0012               	return	
 15109  00466E                     l889:
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15113                           
 15114                           ; BSR set to: 0
 15115  00466E  0E6E               	movlw	110
 15116  004670  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15117  004672  D00A               	goto	l891
 15118                           
 15119                           ; BSR set to: 0
 15120  004674  0E86               	movlw	134
 15121  004676  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15122  004678  D007               	goto	l891
 15123                           
 15124                           ; BSR set to: 0
 15125  00467A  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15126  00467E  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15127  004682  0E03               	movlw	3
 15128  004684  6EDF               	movwf	indf2,c
 15129  004686  0012               	return	
 15130  004688                     l891:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15134                           
 15135                           ; BSR set to: 0
 15136  004688  0E85               	movlw	133
 15137  00468A  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15138  00468C  0012               	return	
 15139                           
 15140                           ; BSR set to: 0
 15141  00468E  0EA1               	movlw	161
 15142  004690  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15143  004692  0012               	return	
 15144                           
 15145                           ; BSR set to: 0
 15146  004694  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15147  004698  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15148  00469C  0E04               	movlw	4
 15149  00469E  6EDF               	movwf	indf2,c
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;FuncoesControlador.h: 25: } else
 15153                           
 15154                           ; BSR set to: 0
 15155                           
 15156                           ; BSR set to: 0
 15157                           
 15158                           ; BSR set to: 0
 15159  0046A0  0012               	return	
 15160  0046A2                     l886:
 15161                           
 15162                           ; BSR set to: 0
 15163                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15164                           
 15165                           ; BSR set to: 0
 15166  0046A2  0E41               	movlw	65
 15167  0046A4  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15168  0046A6  A4D8               	btfss	status,2,c
 15169  0046A8  0012               	return	
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15173  0046AA  05F6               	decf	_fase& (0+255),w,b
 15174  0046AC  A4D8               	btfss	status,2,c
 15175  0046AE  D007               	goto	l896
 15176                           
 15177                           ; BSR set to: 0
 15178  0046B0  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15179  0046B4  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15180  0046B8  0E55               	movlw	85
 15181  0046BA  6EDF               	movwf	indf2,c
 15182  0046BC  0012               	return	
 15183  0046BE                     l896:
 15184                           
 15185                           ; BSR set to: 0
 15186                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15187                           
 15188                           ; BSR set to: 0
 15189  0046BE  0E02               	movlw	2
 15190  0046C0  19F6               	xorwf	_fase& (0+255),w,b
 15191  0046C2  A4D8               	btfss	status,2,c
 15192  0046C4  D007               	goto	l898
 15193                           
 15194                           ; BSR set to: 0
 15195  0046C6  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15196  0046CA  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15197  0046CE  0E65               	movlw	101
 15198  0046D0  6EDF               	movwf	indf2,c
 15199  0046D2  0012               	return	
 15200  0046D4                     l898:
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15204                           
 15205                           ; BSR set to: 0
 15206  0046D4  0E03               	movlw	3
 15207  0046D6  19F6               	xorwf	_fase& (0+255),w,b
 15208  0046D8  A4D8               	btfss	status,2,c
 15209  0046DA  D007               	goto	l900
 15210                           
 15211                           ; BSR set to: 0
 15212  0046DC  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15213  0046E0  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15214  0046E4  0E6F               	movlw	111
 15215  0046E6  6EDF               	movwf	indf2,c
 15216  0046E8  0012               	return	
 15217  0046EA                     l900:
 15218                           
 15219                           ; BSR set to: 0
 15220                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15221                           
 15222                           ; BSR set to: 0
 15223  0046EA  0E04               	movlw	4
 15224  0046EC  19F6               	xorwf	_fase& (0+255),w,b
 15225  0046EE  A4D8               	btfss	status,2,c
 15226  0046F0  0012               	return	
 15227                           
 15228                           ; BSR set to: 0
 15229  0046F2  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15230  0046F6  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15231  0046FA  0E86               	movlw	134
 15232  0046FC  6EDF               	movwf	indf2,c
 15233                           
 15234                           ; BSR set to: 0
 15235                           
 15236                           ; BSR set to: 0
 15237                           
 15238                           ; BSR set to: 0
 15239                           
 15240                           ; BSR set to: 0
 15241                           
 15242                           ; BSR set to: 0
 15243                           
 15244                           ; BSR set to: 0
 15245  0046FE  0012               	return	
 15246  004700                     __end_of_faseAtual:
 15247                           	opt stack 0
 15248                           tblptru	equ	0xFF8
 15249                           tblptrh	equ	0xFF7
 15250                           tblptrl	equ	0xFF6
 15251                           tablat	equ	0xFF5
 15252                           prodh	equ	0xFF4
 15253                           prodl	equ	0xFF3
 15254                           intcon	equ	0xFF2
 15255                           intcon2	equ	0xFF1
 15256                           intcon3	equ	0xFF0
 15257                           postinc0	equ	0xFEE
 15258                           wreg	equ	0xFE8
 15259                           postdec1	equ	0xFE5
 15260                           fsr1l	equ	0xFE1
 15261                           indf2	equ	0xFDF
 15262                           postinc2	equ	0xFDE
 15263                           postdec2	equ	0xFDD
 15264                           fsr2h	equ	0xFDA
 15265                           fsr2l	equ	0xFD9
 15266                           status	equ	0xFD8
 15267                           
 15268 ;; *************** function _enviaDadosWifi *****************
 15269 ;; Defined at:
 15270 ;;		line 149 in file "src/conexaoWifi.h"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;		None
 15273 ;; Auto vars:     Size  Location     Type
 15274 ;;  i               1  121[BANK0 ] unsigned char 
 15275 ;;  men             1  119[BANK0 ] unsigned char 
 15276 ;;  j               1  118[BANK0 ] unsigned char 
 15277 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15278 ;;  i               1  120[BANK0 ] unsigned char 
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/0
 15285 ;;		On exit  : 0/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0
 15289 ;;      Locals:         0      21       0       0       0       0       0       0       0
 15290 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15291 ;;      Totals:         0      23       0       0       0       0       0       0       0
 15292 ;;Total ram usage:       23 bytes
 15293 ;; Hardware stack levels used:    1
 15294 ;; Hardware stack levels required when called:   10
 15295 ;; This function calls:
 15296 ;;		___wmul
 15297 ;;		_delay
 15298 ;;		_findBufferSerial
 15299 ;;		_printf
 15300 ;;		_setKeyStartReceiveSerial
 15301 ;;		_sprintf
 15302 ;;		_strlen
 15303 ;; This function is called by:
 15304 ;;		_main
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           	psect	text18
 15309  002BC6                     __ptext18:
 15310                           	opt stack 0
 15311  002BC6                     _enviaDadosWifi:
 15312                           	opt stack 20
 15313                           
 15314                           ;conexaoWifi.h: 150: if (t_wifi_restart == 0) {
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;incstack = 0
 15318  002BC6  503E               	movf	_t_wifi_restart,w,c
 15319  002BC8  A4D8               	btfss	status,2,c
 15320  002BCA  D005               	goto	l1015
 15321                           
 15322                           ;conexaoWifi.h: 151: f_wifi_processo = 0;
 15323  002BCC  0E00               	movlw	0
 15324  002BCE  6E3D               	movwf	_f_wifi_processo,c
 15325                           
 15326                           ;conexaoWifi.h: 152: t_wifi_restart = 10;
 15327  002BD0  0E0A               	movlw	10
 15328  002BD2  6E3E               	movwf	_t_wifi_restart,c
 15329                           
 15330                           ;conexaoWifi.h: 153: } else if (strlen(wifi_MAC) == 12) {
 15331  002BD4  0012               	return	
 15332  002BD6                     l1015:
 15333  002BD6  0EE6               	movlw	low _wifi_MAC
 15334  002BD8  0100               	movlb	0	; () banked
 15335  002BDA  6F60               	movwf	strlen@s& (0+255),b
 15336  002BDC  0E01               	movlw	high _wifi_MAC
 15337  002BDE  6F61               	movwf	(strlen@s+1)& (0+255),b
 15338  002BE0  EC3C  F02B         	call	_strlen	;wreg free
 15339  002BE4  0E0C               	movlw	12
 15340  002BE6  0100               	movlb	0	; () banked
 15341  002BE8  1960               	xorwf	?_strlen& (0+255),w,b
 15342  002BEA  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15343  002BEC  B4D8               	btfsc	status,2,c
 15344  002BEE  D1C0               	goto	l1018
 15345  002BF0  D296               	goto	l1056
 15346  002BF2                     
 15347                           ;conexaoWifi.h: 156: setKeyStartReceiveSerial("ALL");
 15348                           
 15349                           ; BSR set to: 0
 15350  002BF2  0EE2               	movlw	low STR_10
 15351  002BF4  0100               	movlb	0	; () banked
 15352  002BF6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15353  002BF8  0E7F               	movlw	high STR_10
 15354  002BFA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15355  002BFC  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15356                           
 15357                           ;conexaoWifi.h: 157: printf("AT+CWMODE=1\r\n");
 15358  002C00  0E3A               	movlw	low STR_50
 15359  002C02  0100               	movlb	0	; () banked
 15360  002C04  6F81               	movwf	printf@f& (0+255),b
 15361  002C06  0E7E               	movlw	high STR_50
 15362  002C08  6F82               	movwf	(printf@f+1)& (0+255),b
 15363  002C0A  EC8B  F02C         	call	_printf	;wreg free
 15364                           
 15365                           ;conexaoWifi.h: 158: wifi_conectado = 0;
 15366  002C0E  0E00               	movlw	0
 15367  002C10  6E49               	movwf	_wifi_conectado,c
 15368                           
 15369                           ;conexaoWifi.h: 159: f_wifi_processo++;
 15370  002C12  2A3D               	incf	_f_wifi_processo,f,c
 15371                           
 15372                           ;conexaoWifi.h: 160: break;
 15373  002C14  0012               	return	
 15374  002C16                     
 15375                           ;conexaoWifi.h: 162: if (findBufferSerial("OK")) {
 15376  002C16  0EEF               	movlw	low STR_12
 15377  002C18  0100               	movlb	0	; () banked
 15378  002C1A  6F74               	movwf	findBufferSerial@key& (0+255),b
 15379  002C1C  0E7F               	movlw	high STR_12
 15380  002C1E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15381  002C20  EC94  F02D         	call	_findBufferSerial	;wreg free
 15382  002C24  0900               	iorlw	0
 15383  002C26  B4D8               	btfsc	status,2,c
 15384  002C28  0012               	return	
 15385                           
 15386                           ;conexaoWifi.h: 163: f_wifi_processo++;
 15387  002C2A  2A3D               	incf	_f_wifi_processo,f,c
 15388                           
 15389                           ;conexaoWifi.h: 164: }
 15390                           ;conexaoWifi.h: 165: break;
 15391  002C2C  0012               	return	
 15392  002C2E                     
 15393                           ;conexaoWifi.h: 167: setKeyStartReceiveSerial("ALL");
 15394  002C2E  0EE2               	movlw	low STR_10
 15395  002C30  0100               	movlb	0	; () banked
 15396  002C32  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15397  002C34  0E7F               	movlw	high STR_10
 15398  002C36  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15399  002C38  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15400                           
 15401                           ;conexaoWifi.h: 168: printf("AT+CIPMUX=0\r\n");
 15402  002C3C  0E2C               	movlw	low STR_53
 15403  002C3E  0100               	movlb	0	; () banked
 15404  002C40  6F81               	movwf	printf@f& (0+255),b
 15405  002C42  0E7E               	movlw	high STR_53
 15406  002C44  6F82               	movwf	(printf@f+1)& (0+255),b
 15407  002C46  EC8B  F02C         	call	_printf	;wreg free
 15408                           
 15409                           ;conexaoWifi.h: 169: f_wifi_processo++;
 15410  002C4A  2A3D               	incf	_f_wifi_processo,f,c
 15411                           
 15412                           ;conexaoWifi.h: 170: break;
 15413  002C4C  0012               	return	
 15414  002C4E                     
 15415                           ;conexaoWifi.h: 172: if (findBufferSerial("OK") || findBufferSerial("link")) {
 15416  002C4E  0EEF               	movlw	low STR_12
 15417  002C50  0100               	movlb	0	; () banked
 15418  002C52  6F74               	movwf	findBufferSerial@key& (0+255),b
 15419  002C54  0E7F               	movlw	high STR_12
 15420  002C56  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15421  002C58  EC94  F02D         	call	_findBufferSerial	;wreg free
 15422  002C5C  0900               	iorlw	0
 15423  002C5E  A4D8               	btfss	status,2,c
 15424  002C60  D00A               	goto	u13010
 15425  002C62  0ED0               	movlw	low STR_55
 15426  002C64  0100               	movlb	0	; () banked
 15427  002C66  6F74               	movwf	findBufferSerial@key& (0+255),b
 15428  002C68  0E7F               	movlw	high STR_55
 15429  002C6A  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15430  002C6C  EC94  F02D         	call	_findBufferSerial	;wreg free
 15431  002C70  0900               	iorlw	0
 15432  002C72  B4D8               	btfsc	status,2,c
 15433  002C74  0012               	return	
 15434  002C76                     u13010:
 15435                           
 15436                           ;conexaoWifi.h: 173: f_wifi_processo++;
 15437  002C76  2A3D               	incf	_f_wifi_processo,f,c
 15438                           
 15439                           ;conexaoWifi.h: 174: }
 15440                           ;conexaoWifi.h: 175: break;
 15441  002C78  0012               	return	
 15442  002C7A                     
 15443                           ;conexaoWifi.h: 177: setKeyStartReceiveSerial("ALL");
 15444  002C7A  0EE2               	movlw	low STR_10
 15445  002C7C  0100               	movlb	0	; () banked
 15446  002C7E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15447  002C80  0E7F               	movlw	high STR_10
 15448  002C82  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15449  002C84  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15450                           
 15451                           ;conexaoWifi.h: 178: delay(10);
 15452  002C88  0E00               	movlw	0
 15453  002C8A  0100               	movlb	0	; () banked
 15454  002C8C  6F61               	movwf	(delay@x+1)& (0+255),b
 15455  002C8E  0E0A               	movlw	10
 15456  002C90  6F60               	movwf	delay@x& (0+255),b
 15457  002C92  EC6B  F02D         	call	_delay	;wreg free
 15458                           
 15459                           ;conexaoWifi.h: 179: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15460  002C96  0EEE               	movlw	low STR_57
 15461  002C98  0100               	movlb	0	; () banked
 15462  002C9A  6F81               	movwf	printf@f& (0+255),b
 15463  002C9C  0E7B               	movlw	high STR_57
 15464  002C9E  6F82               	movwf	(printf@f+1)& (0+255),b
 15465  002CA0  0EC9               	movlw	low _ssid
 15466  002CA2  6F83               	movwf	(?_printf+2)& (0+255),b
 15467  002CA4  0E01               	movlw	high _ssid
 15468  002CA6  6F84               	movwf	(?_printf+3)& (0+255),b
 15469  002CA8  0EBA               	movlw	low _senha
 15470  002CAA  6F85               	movwf	(?_printf+4)& (0+255),b
 15471  002CAC  0E01               	movlw	high _senha
 15472  002CAE  6F86               	movwf	(?_printf+5)& (0+255),b
 15473  002CB0  EC8B  F02C         	call	_printf	;wreg free
 15474                           
 15475                           ;conexaoWifi.h: 180: f_wifi_processo++;
 15476  002CB4  2A3D               	incf	_f_wifi_processo,f,c
 15477                           
 15478                           ;conexaoWifi.h: 181: t_wifi_restart = 35;
 15479  002CB6  0E23               	movlw	35
 15480  002CB8  6E3E               	movwf	_t_wifi_restart,c
 15481                           
 15482                           ;conexaoWifi.h: 182: break;
 15483  002CBA  0012               	return	
 15484  002CBC                     
 15485                           ;conexaoWifi.h: 185: f_wifi_processo++;
 15486  002CBC  2A3D               	incf	_f_wifi_processo,f,c
 15487                           
 15488                           ;conexaoWifi.h: 187: break;
 15489  002CBE  0012               	return	
 15490  002CC0                     
 15491                           ;conexaoWifi.h: 189: setKeyStartReceiveSerial("ALL");
 15492  002CC0  0EE2               	movlw	low STR_10
 15493  002CC2  0100               	movlb	0	; () banked
 15494  002CC4  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15495  002CC6  0E7F               	movlw	high STR_10
 15496  002CC8  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15497  002CCA  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15498                           
 15499                           ;conexaoWifi.h: 190: if (t_wifi_restart <= 15) {
 15500  002CCE  0E10               	movlw	16
 15501  002CD0  603E               	cpfslt	_t_wifi_restart,c
 15502  002CD2  0012               	return	
 15503                           
 15504                           ;conexaoWifi.h: 191: printf("AT+CIPSTATUS\r\n");
 15505  002CD4  0EFF               	movlw	low STR_59
 15506  002CD6  0100               	movlb	0	; () banked
 15507  002CD8  6F81               	movwf	printf@f& (0+255),b
 15508  002CDA  0E7D               	movlw	high STR_59
 15509  002CDC  6F82               	movwf	(printf@f+1)& (0+255),b
 15510  002CDE  EC8B  F02C         	call	_printf	;wreg free
 15511                           
 15512                           ;conexaoWifi.h: 192: f_wifi_processo++;
 15513  002CE2  2A3D               	incf	_f_wifi_processo,f,c
 15514                           
 15515                           ;conexaoWifi.h: 193: }
 15516                           ;conexaoWifi.h: 194: break;
 15517  002CE4  0012               	return	
 15518  002CE6                     
 15519                           ;conexaoWifi.h: 196: if (findBufferSerial("2") || findBufferSerial("4")) {
 15520  002CE6  0EFB               	movlw	low STR_60
 15521  002CE8  0100               	movlb	0	; () banked
 15522  002CEA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15523  002CEC  0E7F               	movlw	high STR_60
 15524  002CEE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15525  002CF0  EC94  F02D         	call	_findBufferSerial	;wreg free
 15526  002CF4  0900               	iorlw	0
 15527  002CF6  A4D8               	btfss	status,2,c
 15528  002CF8  D00A               	goto	u13040
 15529  002CFA  0EFD               	movlw	low STR_61
 15530  002CFC  0100               	movlb	0	; () banked
 15531  002CFE  6F74               	movwf	findBufferSerial@key& (0+255),b
 15532  002D00  0E7F               	movlw	high STR_61
 15533  002D02  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15534  002D04  EC94  F02D         	call	_findBufferSerial	;wreg free
 15535  002D08  0900               	iorlw	0
 15536  002D0A  B4D8               	btfsc	status,2,c
 15537  002D0C  0012               	return	
 15538  002D0E                     u13040:
 15539                           
 15540                           ;conexaoWifi.h: 197: wifi_conectado = 1;
 15541  002D0E  0E01               	movlw	1
 15542  002D10  6E49               	movwf	_wifi_conectado,c
 15543                           
 15544                           ;conexaoWifi.h: 198: f_wifi_processo++;
 15545  002D12  2A3D               	incf	_f_wifi_processo,f,c
 15546                           
 15547                           ;conexaoWifi.h: 199: }
 15548                           ;conexaoWifi.h: 200: break;
 15549  002D14  0012               	return	
 15550  002D16                     
 15551                           ;conexaoWifi.h: 202: setKeyStartReceiveSerial("ALL");
 15552  002D16  0EE2               	movlw	low STR_10
 15553  002D18  0100               	movlb	0	; () banked
 15554  002D1A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15555  002D1C  0E7F               	movlw	high STR_10
 15556  002D1E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15557  002D20  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15558                           
 15559                           ;conexaoWifi.h: 203: printf("AT+CIPSTART=\"TCP\",\"%s\",%d\r\n", ipServer, portServer);
 15560  002D24  0EA6               	movlw	low STR_63
 15561  002D26  0100               	movlb	0	; () banked
 15562  002D28  6F81               	movwf	printf@f& (0+255),b
 15563  002D2A  0E7B               	movlw	high STR_63
 15564  002D2C  6F82               	movwf	(printf@f+1)& (0+255),b
 15565  002D2E  0EA6               	movlw	low _ipServer
 15566  002D30  6F83               	movwf	(?_printf+2)& (0+255),b
 15567  002D32  0E01               	movlw	high _ipServer
 15568  002D34  6F84               	movwf	(?_printf+3)& (0+255),b
 15569  002D36  0EE2               	movlw	low _portServer
 15570  002D38  6F85               	movwf	(?_printf+4)& (0+255),b
 15571  002D3A  0E01               	movlw	high _portServer
 15572  002D3C  6F86               	movwf	(?_printf+5)& (0+255),b
 15573  002D3E  EC8B  F02C         	call	_printf	;wreg free
 15574                           
 15575                           ;conexaoWifi.h: 204: f_wifi_processo++;
 15576  002D42  2A3D               	incf	_f_wifi_processo,f,c
 15577                           
 15578                           ;conexaoWifi.h: 205: break;
 15579  002D44  0012               	return	
 15580  002D46                     
 15581                           ;conexaoWifi.h: 207: if (findBufferSerial("OK") != (0)) {
 15582  002D46  0EEF               	movlw	low STR_12
 15583  002D48  0100               	movlb	0	; () banked
 15584  002D4A  6F74               	movwf	findBufferSerial@key& (0+255),b
 15585  002D4C  0E7F               	movlw	high STR_12
 15586  002D4E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15587  002D50  EC94  F02D         	call	_findBufferSerial	;wreg free
 15588  002D54  0900               	iorlw	0
 15589  002D56  B4D8               	btfsc	status,2,c
 15590  002D58  0012               	return	
 15591                           
 15592                           ;conexaoWifi.h: 208: f_wifi_processo++;
 15593  002D5A  2A3D               	incf	_f_wifi_processo,f,c
 15594                           
 15595                           ;conexaoWifi.h: 209: }
 15596                           ;conexaoWifi.h: 210: break;
 15597  002D5C  0012               	return	
 15598  002D5E                     
 15599                           ;conexaoWifi.h: 212: setKeyStartReceiveSerial("ALL");
 15600  002D5E  0EE2               	movlw	low STR_10
 15601  002D60  0100               	movlb	0	; () banked
 15602  002D62  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15603  002D64  0E7F               	movlw	high STR_10
 15604  002D66  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15605  002D68  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15606                           
 15607                           ;conexaoWifi.h: 213: printf("AT+CIPSENDEX=260\r\n");
 15608  002D6C  0EE2               	movlw	low STR_66
 15609  002D6E  0100               	movlb	0	; () banked
 15610  002D70  6F81               	movwf	printf@f& (0+255),b
 15611  002D72  0E7C               	movlw	high STR_66
 15612  002D74  6F82               	movwf	(printf@f+1)& (0+255),b
 15613  002D76  EC8B  F02C         	call	_printf	;wreg free
 15614                           
 15615                           ;conexaoWifi.h: 214: f_wifi_processo++;
 15616  002D7A  2A3D               	incf	_f_wifi_processo,f,c
 15617                           
 15618                           ;conexaoWifi.h: 215: break;
 15619  002D7C  0012               	return	
 15620  002D7E                     
 15621                           ;conexaoWifi.h: 217: if (findBufferSerial(">")) {
 15622  002D7E  0E7C               	movlw	low (STR_122+18)
 15623  002D80  0100               	movlb	0	; () banked
 15624  002D82  6F74               	movwf	findBufferSerial@key& (0+255),b
 15625  002D84  0E7C               	movlw	high (STR_122+18)
 15626  002D86  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15627  002D88  EC94  F02D         	call	_findBufferSerial	;wreg free
 15628  002D8C  0900               	iorlw	0
 15629  002D8E  B4D8               	btfsc	status,2,c
 15630  002D90  0012               	return	
 15631                           
 15632                           ;conexaoWifi.h: 218: f_wifi_processo++;
 15633  002D92  2A3D               	incf	_f_wifi_processo,f,c
 15634                           
 15635                           ;conexaoWifi.h: 219: }
 15636                           ;conexaoWifi.h: 220: break;
 15637  002D94  0012               	return	
 15638  002D96                     
 15639                           ;conexaoWifi.h: 222: setKeyStartReceiveSerial("200");
 15640  002D96  0EDE               	movlw	low STR_68
 15641  002D98  0100               	movlb	0	; () banked
 15642  002D9A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15643  002D9C  0E7F               	movlw	high STR_68
 15644  002D9E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15645  002DA0  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15646                           
 15647                           ;conexaoWifi.h: 223: char i = 0;
 15648  002DA4  0E00               	movlw	0
 15649  002DA6  0100               	movlb	0	; () banked
 15650  002DA8  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15651                           
 15652                           ; BSR set to: 0
 15653                           ;conexaoWifi.h: 224: char AUX[15];
 15654                           ;conexaoWifi.h: 225: sprintf(AUX, "%s", "Jul 15 2020");
 15655  002DAA  0EC5               	movlw	low enviaDadosWifi@AUX
 15656  002DAC  6F81               	movwf	sprintf@wh& (0+255),b
 15657  002DAE  0E00               	movlw	high enviaDadosWifi@AUX
 15658  002DB0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15659  002DB2  0E0F               	movlw	low (STR_97+7)
 15660  002DB4  6F83               	movwf	sprintf@f& (0+255),b
 15661  002DB6  0E7F               	movlw	high (STR_97+7)
 15662  002DB8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15663  002DBA  0E8E               	movlw	low STR_70
 15664  002DBC  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15665  002DBE  0E7E               	movlw	high STR_70
 15666  002DC0  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15667  002DC2  EC07  F02C         	call	_sprintf	;wreg free
 15668                           
 15669                           ;conexaoWifi.h: 226: for (i = 0; i < strlen(AUX); i++) {
 15670  002DC6  0E00               	movlw	0
 15671  002DC8  0100               	movlb	0	; () banked
 15672  002DCA  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15673  002DCC  D017               	goto	l1043
 15674  002DCE                     
 15675                           ; BSR set to: 0
 15676                           ;conexaoWifi.h: 227: if (AUX[i] == ' ') AUX[i] = '-';
 15677                           
 15678                           ; BSR set to: 0
 15679  002DCE  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15680  002DD0  0D01               	mullw	1
 15681  002DD2  0EC5               	movlw	low enviaDadosWifi@AUX
 15682  002DD4  24F3               	addwf	prodl,w,c
 15683  002DD6  6ED9               	movwf	fsr2l,c
 15684  002DD8  0E00               	movlw	high enviaDadosWifi@AUX
 15685  002DDA  20F4               	addwfc	prodh,w,c
 15686  002DDC  6EDA               	movwf	fsr2h,c
 15687  002DDE  0E20               	movlw	32
 15688  002DE0  18DE               	xorwf	postinc2,w,c
 15689  002DE2  A4D8               	btfss	status,2,c
 15690  002DE4  D00A               	goto	l1045
 15691                           
 15692                           ; BSR set to: 0
 15693  002DE6  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15694  002DE8  0D01               	mullw	1
 15695  002DEA  0EC5               	movlw	low enviaDadosWifi@AUX
 15696  002DEC  24F3               	addwf	prodl,w,c
 15697  002DEE  6ED9               	movwf	fsr2l,c
 15698  002DF0  0E00               	movlw	high enviaDadosWifi@AUX
 15699  002DF2  20F4               	addwfc	prodh,w,c
 15700  002DF4  6EDA               	movwf	fsr2h,c
 15701  002DF6  0E2D               	movlw	45
 15702  002DF8  6EDF               	movwf	indf2,c
 15703  002DFA                     l1045:
 15704                           
 15705                           ; BSR set to: 0
 15706                           
 15707                           ; BSR set to: 0
 15708  002DFA  2BD8               	incf	enviaDadosWifi@i& (0+255),f,b
 15709  002DFC                     l1043:
 15710                           
 15711                           ; BSR set to: 0
 15712                           
 15713                           ; BSR set to: 0
 15714  002DFC  0EC5               	movlw	low enviaDadosWifi@AUX
 15715  002DFE  6F60               	movwf	strlen@s& (0+255),b
 15716  002E00  0E00               	movlw	high enviaDadosWifi@AUX
 15717  002E02  6F61               	movwf	(strlen@s+1)& (0+255),b
 15718  002E04  EC3C  F02B         	call	_strlen	;wreg free
 15719  002E08  0100               	movlb	0	; () banked
 15720  002E0A  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15721  002E0C  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15722  002E0E  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 15723  002E10  5160               	movf	?_strlen& (0+255),w,b
 15724  002E12  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 15725  002E14  5161               	movf	(?_strlen+1)& (0+255),w,b
 15726  002E16  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 15727  002E18  A0D8               	btfss	status,0,c
 15728  002E1A  D7D9               	goto	l1044
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;conexaoWifi.h: 228: }
 15732                           ;conexaoWifi.h: 230: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15733                           
 15734                           ; BSR set to: 0
 15735  002E1C  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
 15736  002E20  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 15737  002E24  0E00               	movlw	0
 15738  002E26  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15739  002E28  0E27               	movlw	39
 15740  002E2A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15741  002E2C  EC80  F02D         	call	___wmul	;wreg free
 15742  002E30  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2519
 15743  002E34  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2519+1
 15744                           
 15745                           ;conexaoWifi.h: 228: }
 15746                           ;conexaoWifi.h: 230: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15747  002E38  0EAE               	movlw	low STR_71
 15748  002E3A  0100               	movlb	0	; () banked
 15749  002E3C  6F81               	movwf	printf@f& (0+255),b
 15750  002E3E  0E7A               	movlw	high STR_71
 15751  002E40  6F82               	movwf	(printf@f+1)& (0+255),b
 15752  002E42  C0FE  F083         	movff	_temp,?_printf+2
 15753  002E46  6B84               	clrf	(?_printf+3)& (0+255),b
 15754  002E48  C0F4  F085         	movff	_tempajt,?_printf+4
 15755  002E4C  6B86               	clrf	(?_printf+5)& (0+255),b
 15756  002E4E  C05D  F087         	movff	_umid,?_printf+6
 15757  002E52  6B88               	clrf	(?_printf+7)& (0+255),b
 15758  002E54  C0F3  F089         	movff	_umidajt,?_printf+8
 15759  002E58  6B8A               	clrf	(?_printf+9)& (0+255),b
 15760  002E5A  C05A  F08B         	movff	_fornalha,?_printf+10
 15761  002E5E  6B8C               	clrf	(?_printf+11)& (0+255),b
 15762  002E60  C0FC  F08D         	movff	_buzzer,?_printf+12
 15763  002E64  6B8E               	clrf	(?_printf+13)& (0+255),b
 15764  002E66  C059  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 15765  002E6A  6B90               	clrf	(?_printf+15)& (0+255),b
 15766  002E6C  C0FB  F091         	movff	_trava_fase,?_printf+16
 15767  002E70  6B92               	clrf	(?_printf+17)& (0+255),b
 15768  002E72  C0F6  F093         	movff	_fase,?_printf+18
 15769  002E76  6B94               	clrf	(?_printf+19)& (0+255),b
 15770  002E78  C0F5  F095         	movff	_clima,?_printf+20
 15771  002E7C  6B96               	clrf	(?_printf+21)& (0+255),b
 15772  002E7E  C0FA  F097         	movff	_tipo_sensor_umidade,?_printf+22
 15773  002E82  6B98               	clrf	(?_printf+23)& (0+255),b
 15774  002E84  0EE6               	movlw	low _wifi_MAC
 15775  002E86  6F99               	movwf	(?_printf+24)& (0+255),b
 15776  002E88  0E01               	movlw	high _wifi_MAC
 15777  002E8A  6F9A               	movwf	(?_printf+25)& (0+255),b
 15778  002E8C  C0D4  F09B         	movff	_enviaDadosWifi$2519,?_printf+26
 15779  002E90  C0D5  F09C         	movff	_enviaDadosWifi$2519+1,?_printf+27
 15780  002E94  0EC5               	movlw	low enviaDadosWifi@AUX
 15781  002E96  6F9D               	movwf	(?_printf+28)& (0+255),b
 15782  002E98  0E00               	movlw	high enviaDadosWifi@AUX
 15783  002E9A  6F9E               	movwf	(?_printf+29)& (0+255),b
 15784  002E9C  C05E  F09F         	movff	_f_falta_energia,?_printf+30
 15785  002EA0  6BA0               	clrf	(?_printf+31)& (0+255),b
 15786  002EA2  C0FA  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 15787  002EA6  6BA2               	clrf	(?_printf+33)& (0+255),b
 15788  002EA8  C052  F0A3         	movff	_h_abafador,?_printf+34
 15789  002EAC  6BA4               	clrf	(?_printf+35)& (0+255),b
 15790  002EAE  C051  F0A5         	movff	_h_flap,?_printf+36
 15791  002EB2  6BA6               	clrf	(?_printf+37)& (0+255),b
 15792  002EB4  C053  F0A7         	movff	_h_venotinha,?_printf+38
 15793  002EB8  6BA8               	clrf	(?_printf+39)& (0+255),b
 15794  002EBA  C0F7  F0A9         	movff	_h_modo_seguranca,?_printf+40
 15795  002EBE  6BAA               	clrf	(?_printf+41)& (0+255),b
 15796  002EC0  C050  F0AB         	movff	_h_buzzer,?_printf+42
 15797  002EC4  6BAC               	clrf	(?_printf+43)& (0+255),b
 15798  002EC6  C055  F0AD         	movff	_t_flap_ligado,?_printf+44
 15799  002ECA  6BAE               	clrf	(?_printf+45)& (0+255),b
 15800  002ECC  C054  F0AF         	movff	_t_flap_intervalo,?_printf+46
 15801  002ED0  6BB0               	clrf	(?_printf+47)& (0+255),b
 15802  002ED2  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 15803  002ED6  6BB2               	clrf	(?_printf+49)& (0+255),b
 15804  002ED8  C0F9  F0B3         	movff	_t_temp_automatica,?_printf+50
 15805  002EDC  6BB4               	clrf	(?_printf+51)& (0+255),b
 15806  002EDE  C04E  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 15807  002EE2  6BB6               	clrf	(?_printf+53)& (0+255),b
 15808  002EE4  C04B  F0B7         	movff	_wifi_SENHA,?_printf+54
 15809  002EE8  C04C  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 15810  002EEC  C04F  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 15811  002EF0  6BBA               	clrf	(?_printf+57)& (0+255),b
 15812  002EF2  C0F8  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 15813  002EF6  6BBC               	clrf	(?_printf+59)& (0+255),b
 15814  002EF8  EC8B  F02C         	call	_printf	;wreg free
 15815                           
 15816                           ;conexaoWifi.h: 231: f_wifi_processo++;
 15817  002EFC  2A3D               	incf	_f_wifi_processo,f,c
 15818                           
 15819                           ;conexaoWifi.h: 232: break;
 15820  002EFE  0012               	return	
 15821  002F00                     
 15822                           ;conexaoWifi.h: 234: if (findBufferSerial("save")) {
 15823  002F00  0ECB               	movlw	low STR_72
 15824  002F02  0100               	movlb	0	; () banked
 15825  002F04  6F74               	movwf	findBufferSerial@key& (0+255),b
 15826  002F06  0E7F               	movlw	high STR_72
 15827  002F08  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15828  002F0A  EC94  F02D         	call	_findBufferSerial	;wreg free
 15829  002F0E  0900               	iorlw	0
 15830  002F10  B4D8               	btfsc	status,2,c
 15831  002F12  0012               	return	
 15832                           
 15833                           ;conexaoWifi.h: 235: f_wifi_processo++;
 15834  002F14  2A3D               	incf	_f_wifi_processo,f,c
 15835                           
 15836                           ;conexaoWifi.h: 236: }
 15837                           ;conexaoWifi.h: 237: break;
 15838  002F16  0012               	return	
 15839  002F18                     
 15840                           ;conexaoWifi.h: 239: setKeyStartReceiveSerial("ALL");
 15841  002F18  0EE2               	movlw	low STR_10
 15842  002F1A  0100               	movlb	0	; () banked
 15843  002F1C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15844  002F1E  0E7F               	movlw	high STR_10
 15845  002F20  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15846  002F22  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15847                           
 15848                           ;conexaoWifi.h: 240: printf("AT+CIPCLOSE\r\n");
 15849  002F26  0E64               	movlw	low STR_74
 15850  002F28  0100               	movlb	0	; () banked
 15851  002F2A  6F81               	movwf	printf@f& (0+255),b
 15852  002F2C  0E7E               	movlw	high STR_74
 15853  002F2E  6F82               	movwf	(printf@f+1)& (0+255),b
 15854  002F30  EC8B  F02C         	call	_printf	;wreg free
 15855                           
 15856                           ;conexaoWifi.h: 241: f_wifi_processo++;
 15857  002F34  2A3D               	incf	_f_wifi_processo,f,c
 15858                           
 15859                           ;conexaoWifi.h: 242: break;
 15860  002F36  0012               	return	
 15861  002F38                     
 15862                           ;conexaoWifi.h: 244: if (findBufferSerial("OK") || findBufferSerial("CLOSED")) {
 15863  002F38  0EEF               	movlw	low STR_12
 15864  002F3A  0100               	movlb	0	; () banked
 15865  002F3C  6F74               	movwf	findBufferSerial@key& (0+255),b
 15866  002F3E  0E7F               	movlw	high STR_12
 15867  002F40  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15868  002F42  EC94  F02D         	call	_findBufferSerial	;wreg free
 15869  002F46  0900               	iorlw	0
 15870  002F48  A4D8               	btfss	status,2,c
 15871  002F4A  D00A               	goto	u13110
 15872  002F4C  0E8A               	movlw	low STR_76
 15873  002F4E  0100               	movlb	0	; () banked
 15874  002F50  6F74               	movwf	findBufferSerial@key& (0+255),b
 15875  002F52  0E7F               	movlw	high STR_76
 15876  002F54  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15877  002F56  EC94  F02D         	call	_findBufferSerial	;wreg free
 15878  002F5A  0900               	iorlw	0
 15879  002F5C  B4D8               	btfsc	status,2,c
 15880  002F5E  0012               	return	
 15881  002F60                     u13110:
 15882                           
 15883                           ;conexaoWifi.h: 245: f_wifi_processo = 6;
 15884  002F60  0E06               	movlw	6
 15885  002F62  6E3D               	movwf	_f_wifi_processo,c
 15886                           
 15887                           ;conexaoWifi.h: 246: t_wifi_restart = 25;
 15888  002F64  0E19               	movlw	25
 15889  002F66  6E3E               	movwf	_t_wifi_restart,c
 15890                           
 15891                           ;conexaoWifi.h: 247: }
 15892                           ;conexaoWifi.h: 248: break;
 15893  002F68  0012               	return	
 15894  002F6A                     
 15895                           ;conexaoWifi.h: 250: f_wifi_processo = 0;
 15896  002F6A  0E00               	movlw	0
 15897  002F6C  6E3D               	movwf	_f_wifi_processo,c
 15898                           
 15899                           ;conexaoWifi.h: 251: }
 15900  002F6E  0012               	return	
 15901  002F70                     l1018:
 15902  002F70  503D               	movf	_f_wifi_processo,w,c
 15903                           
 15904                           ; Switch size 1, requested type "space"
 15905                           ; Number of cases is 16, Range of values is 0 to 15
 15906                           ; switch strategies available:
 15907                           ; Name         Instructions Cycles
 15908                           ; simple_byte           49    25 (average)
 15909                           ;	Chosen strategy is simple_byte
 15910  002F72  0A00               	xorlw	0	; case 0
 15911  002F74  B4D8               	btfsc	status,2,c
 15912  002F76  D63D               	goto	l1019
 15913  002F78  0A01               	xorlw	1	; case 1
 15914  002F7A  B4D8               	btfsc	status,2,c
 15915  002F7C  D64C               	goto	l1021
 15916  002F7E  0A03               	xorlw	3	; case 2
 15917  002F80  B4D8               	btfsc	status,2,c
 15918  002F82  D655               	goto	l1023
 15919  002F84  0A01               	xorlw	1	; case 3
 15920  002F86  B4D8               	btfsc	status,2,c
 15921  002F88  D662               	goto	l1024
 15922  002F8A  0A07               	xorlw	7	; case 4
 15923  002F8C  B4D8               	btfsc	status,2,c
 15924  002F8E  D675               	goto	l1028
 15925  002F90  0A01               	xorlw	1	; case 5
 15926  002F92  B4D8               	btfsc	status,2,c
 15927  002F94  D693               	goto	l1029
 15928  002F96  0A03               	xorlw	3	; case 6
 15929  002F98  B4D8               	btfsc	status,2,c
 15930  002F9A  D692               	goto	l1030
 15931  002F9C  0A01               	xorlw	1	; case 7
 15932  002F9E  B4D8               	btfsc	status,2,c
 15933  002FA0  D6A2               	goto	l1032
 15934  002FA2  0A0F               	xorlw	15	; case 8
 15935  002FA4  B4D8               	btfsc	status,2,c
 15936  002FA6  D6B7               	goto	l1036
 15937  002FA8  0A01               	xorlw	1	; case 9
 15938  002FAA  B4D8               	btfsc	status,2,c
 15939  002FAC  D6CC               	goto	l1037
 15940  002FAE  0A03               	xorlw	3	; case 10
 15941  002FB0  B4D8               	btfsc	status,2,c
 15942  002FB2  D6D5               	goto	l1039
 15943  002FB4  0A01               	xorlw	1	; case 11
 15944  002FB6  B4D8               	btfsc	status,2,c
 15945  002FB8  D6E2               	goto	l1040
 15946  002FBA  0A07               	xorlw	7	; case 12
 15947  002FBC  B4D8               	btfsc	status,2,c
 15948  002FBE  D6EB               	goto	l1042
 15949  002FC0  0A01               	xorlw	1	; case 13
 15950  002FC2  B4D8               	btfsc	status,2,c
 15951  002FC4  D79D               	goto	l1047
 15952  002FC6  0A03               	xorlw	3	; case 14
 15953  002FC8  B4D8               	btfsc	status,2,c
 15954  002FCA  D7A6               	goto	l1049
 15955  002FCC  0A01               	xorlw	1	; case 15
 15956  002FCE  B4D8               	btfsc	status,2,c
 15957  002FD0  D7B3               	goto	l1050
 15958  002FD2  D7CB               	goto	l1054
 15959  002FD4                     
 15960                           ;conexaoWifi.h: 255: setKeyStartReceiveSerial("STAMAC");
 15961  002FD4  0E83               	movlw	low STR_77
 15962  002FD6  0100               	movlb	0	; () banked
 15963  002FD8  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15964  002FDA  0E7F               	movlw	high STR_77
 15965  002FDC  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15966  002FDE  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15967                           
 15968                           ;conexaoWifi.h: 256: printf("AT+CWMODE=1\r\n");
 15969  002FE2  0E3A               	movlw	low STR_50
 15970  002FE4  0100               	movlb	0	; () banked
 15971  002FE6  6F81               	movwf	printf@f& (0+255),b
 15972  002FE8  0E7E               	movlw	high STR_50
 15973  002FEA  6F82               	movwf	(printf@f+1)& (0+255),b
 15974  002FEC  EC8B  F02C         	call	_printf	;wreg free
 15975                           
 15976                           ;conexaoWifi.h: 257: f_wifi_processo++;
 15977  002FF0  2A3D               	incf	_f_wifi_processo,f,c
 15978                           
 15979                           ;conexaoWifi.h: 258: break;
 15980  002FF2  0012               	return	
 15981  002FF4                     
 15982                           ;conexaoWifi.h: 260: if (findBufferSerial("OK")) {
 15983  002FF4  0EEF               	movlw	low STR_12
 15984  002FF6  0100               	movlb	0	; () banked
 15985  002FF8  6F74               	movwf	findBufferSerial@key& (0+255),b
 15986  002FFA  0E7F               	movlw	high STR_12
 15987  002FFC  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15988  002FFE  EC94  F02D         	call	_findBufferSerial	;wreg free
 15989  003002  0900               	iorlw	0
 15990  003004  B4D8               	btfsc	status,2,c
 15991  003006  0012               	return	
 15992                           
 15993                           ;conexaoWifi.h: 261: f_wifi_processo++;
 15994  003008  2A3D               	incf	_f_wifi_processo,f,c
 15995                           
 15996                           ;conexaoWifi.h: 262: }
 15997                           ;conexaoWifi.h: 263: break;
 15998  00300A  0012               	return	
 15999  00300C                     
 16000                           ;conexaoWifi.h: 265: setKeyStartReceiveSerial("STAMAC");
 16001  00300C  0E83               	movlw	low STR_77
 16002  00300E  0100               	movlb	0	; () banked
 16003  003010  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 16004  003012  0E7F               	movlw	high STR_77
 16005  003014  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 16006  003016  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 16007                           
 16008                           ;conexaoWifi.h: 266: printf("AT+CIFSR\r\n");
 16009  00301A  0EB2               	movlw	low STR_81
 16010  00301C  0100               	movlb	0	; () banked
 16011  00301E  6F81               	movwf	printf@f& (0+255),b
 16012  003020  0E7E               	movlw	high STR_81
 16013  003022  6F82               	movwf	(printf@f+1)& (0+255),b
 16014  003024  EC8B  F02C         	call	_printf	;wreg free
 16015                           
 16016                           ;conexaoWifi.h: 267: f_wifi_processo++;
 16017  003028  2A3D               	incf	_f_wifi_processo,f,c
 16018                           
 16019                           ;conexaoWifi.h: 268: break;
 16020  00302A  0012               	return	
 16021  00302C                     
 16022                           ;conexaoWifi.h: 270: if (findBufferSerial("OK")) {
 16023  00302C  0EEF               	movlw	low STR_12
 16024  00302E  0100               	movlb	0	; () banked
 16025  003030  6F74               	movwf	findBufferSerial@key& (0+255),b
 16026  003032  0E7F               	movlw	high STR_12
 16027  003034  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 16028  003036  EC94  F02D         	call	_findBufferSerial	;wreg free
 16029  00303A  0900               	iorlw	0
 16030  00303C  B4D8               	btfsc	status,2,c
 16031  00303E  0012               	return	
 16032                           
 16033                           ;conexaoWifi.h: 271: unsigned char i = 0;
 16034  003040  0E00               	movlw	0
 16035  003042  0100               	movlb	0	; () banked
 16036  003044  6FD9               	movwf	enviaDadosWifi@i_1396& (0+255),b
 16037                           
 16038                           ;conexaoWifi.h: 272: unsigned char j = 0;
 16039  003046  0E00               	movlw	0
 16040  003048  6FD6               	movwf	enviaDadosWifi@j& (0+255),b
 16041                           
 16042                           ;conexaoWifi.h: 273: unsigned char men = 0;
 16043  00304A  0E00               	movlw	0
 16044  00304C  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 16045                           
 16046                           ;conexaoWifi.h: 274: for (i = 0; i < strlen(bufferSerial); i++) {
 16047  00304E  0E00               	movlw	0
 16048  003050  6FD9               	movwf	enviaDadosWifi@i_1396& (0+255),b
 16049  003052  D051               	goto	l1064
 16050  003054                     
 16051                           ; BSR set to: 0
 16052                           ;conexaoWifi.h: 275: if (bufferSerial[i] == '"' && men == 0) {
 16053                           
 16054                           ; BSR set to: 0
 16055  003054  51D9               	movf	enviaDadosWifi@i_1396& (0+255),w,b
 16056  003056  0D01               	mullw	1
 16057  003058  0E69               	movlw	low _bufferSerial
 16058  00305A  24F3               	addwf	prodl,w,c
 16059  00305C  6ED9               	movwf	fsr2l,c
 16060  00305E  0E02               	movlw	high _bufferSerial
 16061  003060  20F4               	addwfc	prodh,w,c
 16062  003062  6EDA               	movwf	fsr2h,c
 16063  003064  0E22               	movlw	34
 16064  003066  18DE               	xorwf	postinc2,w,c
 16065  003068  A4D8               	btfss	status,2,c
 16066  00306A  D006               	goto	l1066
 16067                           
 16068                           ; BSR set to: 0
 16069  00306C  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 16070  00306E  A4D8               	btfss	status,2,c
 16071  003070  D003               	goto	l1066
 16072                           
 16073                           ; BSR set to: 0
 16074                           ;conexaoWifi.h: 276: men = 1;
 16075  003072  0E01               	movlw	1
 16076  003074  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 16077                           
 16078                           ;conexaoWifi.h: 277: } else if (bufferSerial[i] == '"' && men == 1) {
 16079  003076  D03E               	goto	l1071
 16080  003078                     l1066:
 16081                           
 16082                           ; BSR set to: 0
 16083                           
 16084                           ; BSR set to: 0
 16085  003078  51D9               	movf	enviaDadosWifi@i_1396& (0+255),w,b
 16086  00307A  0D01               	mullw	1
 16087  00307C  0E69               	movlw	low _bufferSerial
 16088  00307E  24F3               	addwf	prodl,w,c
 16089  003080  6ED9               	movwf	fsr2l,c
 16090  003082  0E02               	movlw	high _bufferSerial
 16091  003084  20F4               	addwfc	prodh,w,c
 16092  003086  6EDA               	movwf	fsr2h,c
 16093  003088  0E22               	movlw	34
 16094  00308A  18DE               	xorwf	postinc2,w,c
 16095  00308C  A4D8               	btfss	status,2,c
 16096  00308E  D003               	goto	l1068
 16097                           
 16098                           ; BSR set to: 0
 16099  003090  05D7               	decf	enviaDadosWifi@men& (0+255),w,b
 16100  003092  B4D8               	btfsc	status,2,c
 16101  003094  0012               	return	
 16102  003096                     l1068:
 16103                           
 16104                           ; BSR set to: 0
 16105                           
 16106                           ; BSR set to: 0
 16107  003096  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 16108  003098  B4D8               	btfsc	status,2,c
 16109  00309A  D02C               	goto	l1071
 16110                           
 16111                           ; BSR set to: 0
 16112  00309C  51D9               	movf	enviaDadosWifi@i_1396& (0+255),w,b
 16113  00309E  0D01               	mullw	1
 16114  0030A0  0E69               	movlw	low _bufferSerial
 16115  0030A2  24F3               	addwf	prodl,w,c
 16116  0030A4  6ED9               	movwf	fsr2l,c
 16117  0030A6  0E02               	movlw	high _bufferSerial
 16118  0030A8  20F4               	addwfc	prodh,w,c
 16119  0030AA  6EDA               	movwf	fsr2h,c
 16120  0030AC  0E3A               	movlw	58
 16121  0030AE  18DE               	xorwf	postinc2,w,c
 16122  0030B0  B4D8               	btfsc	status,2,c
 16123  0030B2  D020               	goto	l1071
 16124                           
 16125                           ; BSR set to: 0
 16126  0030B4  0EE6               	movlw	low _wifi_MAC
 16127  0030B6  6F60               	movwf	strlen@s& (0+255),b
 16128  0030B8  0E01               	movlw	high _wifi_MAC
 16129  0030BA  6F61               	movwf	(strlen@s+1)& (0+255),b
 16130  0030BC  EC3C  F02B         	call	_strlen	;wreg free
 16131  0030C0  0100               	movlb	0	; () banked
 16132  0030C2  5161               	movf	(?_strlen+1)& (0+255),w,b
 16133  0030C4  E117               	bnz	l8875
 16134  0030C6  0E0C               	movlw	12
 16135  0030C8  5D60               	subwf	?_strlen& (0+255),w,b
 16136  0030CA  B0D8               	btfsc	status,0,c
 16137  0030CC  D013               	goto	l1071
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;conexaoWifi.h: 280: wifi_MAC[j++] = bufferSerial[i];
 16141  0030CE  51D9               	movf	enviaDadosWifi@i_1396& (0+255),w,b
 16142  0030D0  0D01               	mullw	1
 16143  0030D2  0E69               	movlw	low _bufferSerial
 16144  0030D4  24F3               	addwf	prodl,w,c
 16145  0030D6  6ED9               	movwf	fsr2l,c
 16146  0030D8  0E02               	movlw	high _bufferSerial
 16147  0030DA  20F4               	addwfc	prodh,w,c
 16148  0030DC  6EDA               	movwf	fsr2h,c
 16149  0030DE  51D6               	movf	enviaDadosWifi@j& (0+255),w,b
 16150  0030E0  0D01               	mullw	1
 16151  0030E2  0EE6               	movlw	low _wifi_MAC
 16152  0030E4  24F3               	addwf	prodl,w,c
 16153  0030E6  6EE1               	movwf	fsr1l,c
 16154  0030E8  0E01               	movlw	high _wifi_MAC
 16155  0030EA  20F4               	addwfc	prodh,w,c
 16156  0030EC  6EE2               	movwf	fsr1h,c
 16157  0030EE  CFDF FFE7          	movff	indf2,indf1
 16158                           
 16159                           ; BSR set to: 0
 16160  0030F2  2BD6               	incf	enviaDadosWifi@j& (0+255),f,b
 16161  0030F4                     l1071:
 16162  0030F4                     l8875:
 16163                           
 16164                           ; BSR set to: 0
 16165  0030F4  2BD9               	incf	enviaDadosWifi@i_1396& (0+255),f,b
 16166  0030F6                     l1064:
 16167                           
 16168                           ; BSR set to: 0
 16169                           
 16170                           ; BSR set to: 0
 16171  0030F6  0E69               	movlw	low _bufferSerial
 16172  0030F8  6F60               	movwf	strlen@s& (0+255),b
 16173  0030FA  0E02               	movlw	high _bufferSerial
 16174  0030FC  6F61               	movwf	(strlen@s+1)& (0+255),b
 16175  0030FE  EC3C  F02B         	call	_strlen	;wreg free
 16176  003102  0100               	movlb	0	; () banked
 16177  003104  51D9               	movf	enviaDadosWifi@i_1396& (0+255),w,b
 16178  003106  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16179  003108  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 16180  00310A  5160               	movf	?_strlen& (0+255),w,b
 16181  00310C  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 16182  00310E  5161               	movf	(?_strlen+1)& (0+255),w,b
 16183  003110  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16184  003112  B0D8               	btfsc	status,0,c
 16185  003114  0012               	return	
 16186  003116  D79E               	goto	l1065
 16187  003118                     
 16188                           ;conexaoWifi.h: 286: f_wifi_processo = 0;
 16189                           
 16190                           ; BSR set to: 0
 16191  003118  0E00               	movlw	0
 16192  00311A  6E3D               	movwf	_f_wifi_processo,c
 16193                           
 16194                           ;conexaoWifi.h: 288: }
 16195                           
 16196                           ;conexaoWifi.h: 287: break;
 16197  00311C  0012               	return	
 16198  00311E                     l1056:
 16199  00311E  503D               	movf	_f_wifi_processo,w,c
 16200                           
 16201                           ; Switch size 1, requested type "space"
 16202                           ; Number of cases is 4, Range of values is 0 to 3
 16203                           ; switch strategies available:
 16204                           ; Name         Instructions Cycles
 16205                           ; simple_byte           13     7 (average)
 16206                           ;	Chosen strategy is simple_byte
 16207  003120  0A00               	xorlw	0	; case 0
 16208  003122  B4D8               	btfsc	status,2,c
 16209  003124  D757               	goto	l1057
 16210  003126  0A01               	xorlw	1	; case 1
 16211  003128  B4D8               	btfsc	status,2,c
 16212  00312A  D764               	goto	l1059
 16213  00312C  0A03               	xorlw	3	; case 2
 16214  00312E  B4D8               	btfsc	status,2,c
 16215  003130  D76D               	goto	l1061
 16216  003132  0A01               	xorlw	1	; case 3
 16217  003134  B4D8               	btfsc	status,2,c
 16218  003136  D77A               	goto	l1062
 16219  003138  D7EF               	goto	l1073
 16220  00313A                     __end_of_enviaDadosWifi:
 16221                           	opt stack 0
 16222                           tblptru	equ	0xFF8
 16223                           tblptrh	equ	0xFF7
 16224                           tblptrl	equ	0xFF6
 16225                           tablat	equ	0xFF5
 16226                           prodh	equ	0xFF4
 16227                           prodl	equ	0xFF3
 16228                           intcon	equ	0xFF2
 16229                           intcon2	equ	0xFF1
 16230                           intcon3	equ	0xFF0
 16231                           postinc0	equ	0xFEE
 16232                           wreg	equ	0xFE8
 16233                           indf1	equ	0xFE7
 16234                           postdec1	equ	0xFE5
 16235                           fsr1h	equ	0xFE2
 16236                           fsr1l	equ	0xFE1
 16237                           indf2	equ	0xFDF
 16238                           postinc2	equ	0xFDE
 16239                           postdec2	equ	0xFDD
 16240                           fsr2h	equ	0xFDA
 16241                           fsr2l	equ	0xFD9
 16242                           status	equ	0xFD8
 16243                           
 16244 ;; *************** function _criaCaracteresCGRAM *****************
 16245 ;; Defined at:
 16246 ;;		line 180 in file "src/lcd.h"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;		None
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16251 ;;  i               1   67[BANK0 ] unsigned char 
 16252 ;;  j               1   66[BANK0 ] unsigned char 
 16253 ;;  k               1   65[BANK0 ] unsigned char 
 16254 ;; Return value:  Size  Location     Type
 16255 ;;                  1    wreg      void 
 16256 ;; Registers used:
 16257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16258 ;; Tracked objects:
 16259 ;;		On entry : 0/0
 16260 ;;		On exit  : 0/0
 16261 ;;		Unchanged: 0/0
 16262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16263 ;;      Params:         0       0       0       0       0       0       0       0       0
 16264 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16265 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16266 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16267 ;;Total ram usage:       64 bytes
 16268 ;; Hardware stack levels used:    1
 16269 ;; Hardware stack levels required when called:    8
 16270 ;; This function calls:
 16271 ;;		_Lcd_Cmd
 16272 ;;		_Lcd_Write_Char
 16273 ;; This function is called by:
 16274 ;;		_main
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           	psect	text19
 16279  004F7A                     __ptext19:
 16280                           	opt stack 0
 16281  004F7A                     _criaCaracteresCGRAM:
 16282                           	opt stack 22
 16283                           
 16284                           ;lcd.h: 187: const char character[7][8] = {
 16285                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16286                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16287                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16288                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16289                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16290                           ;lcd.h: 196: };
 16291                           
 16292                           ;incstack = 0
 16293  004F7A  0E17               	movlw	low criaCaracteresCGRAM@F3900
 16294  004F7C  6EF6               	movwf	tblptrl,c
 16295  004F7E                     	if	1	;There is more than 1 active tblptr byte
 16296  004F7E  0E78               	movlw	high criaCaracteresCGRAM@F3900
 16297  004F80  6EF7               	movwf	tblptrh,c
 16298  004F82                     	endif
 16299  004F82                     	if	0	;There are less than 3 active tblptr bytes
 16300  004F82                     	endif
 16301  004F82  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16302  004F86  0E37               	movlw	55
 16303  004F88                     u12450:
 16304  004F88  0009               	tblrd		*+
 16305  004F8A  CFF5 FFDE          	movff	tablat,postinc2
 16306  004F8E  06E8               	decf	wreg,f,c
 16307  004F90  E2FB               	bc	u12450
 16308                           
 16309                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16310  004F92  0E04               	movlw	4
 16311  004F94  ECCF  F02D         	call	_Lcd_Cmd
 16312                           
 16313                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16314  004F98  0E00               	movlw	0
 16315  004F9A  ECCF  F02D         	call	_Lcd_Cmd
 16316                           
 16317                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16318  004F9E  0E21               	movlw	33
 16319  004FA0                     u15547:
 16320  004FA0  2EE8               	decfsz	wreg,f,c
 16321  004FA2  D7FE               	bra	u15547
 16322  004FA4  F000               	nop	
 16323                           
 16324                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16325  004FA6  0E00               	movlw	0
 16326  004FA8  0100               	movlb	0	; () banked
 16327  004FAA  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16328                           
 16329                           ; BSR set to: 0
 16330  004FAC  0E00               	movlw	0
 16331  004FAE  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16332                           
 16333                           ; BSR set to: 0
 16334  004FB0  0E00               	movlw	0
 16335  004FB2  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16339  004FB4  0E00               	movlw	0
 16340  004FB6  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16341  004FB8                     l8341:
 16342                           
 16343                           ; BSR set to: 0
 16344  004FB8  0E04               	movlw	4
 16345  004FBA  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16346  004FBC  D001               	goto	l275
 16347  004FBE  0012               	return	
 16348  004FC0                     l275:
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;lcd.h: 202: if (k == 1) i = 0;
 16352                           
 16353                           ; BSR set to: 0
 16354  004FC0  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16355  004FC2  A4D8               	btfss	status,2,c
 16356  004FC4  D002               	goto	l277
 16357                           
 16358                           ; BSR set to: 0
 16359  004FC6  0E00               	movlw	0
 16360  004FC8  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16361  004FCA                     l277:
 16362                           
 16363                           ; BSR set to: 0
 16364                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16365  004FCA  0E00               	movlw	0
 16366  004FCC  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16367  004FCE                     l8349:
 16368                           
 16369                           ; BSR set to: 0
 16370  004FCE  0E07               	movlw	7
 16371  004FD0  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16372  004FD2  D001               	goto	l278
 16373  004FD4  D025               	goto	u12500
 16374  004FD6                     l278:
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16378                           
 16379                           ; BSR set to: 0
 16380  004FD6  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16381  004FD8  A4D8               	btfss	status,2,c
 16382  004FDA  D005               	goto	l281
 16383                           
 16384                           ; BSR set to: 0
 16385  004FDC  0E00               	movlw	0
 16386  004FDE  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16387  004FE0  0E00               	movlw	0
 16388  004FE2  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16389  004FE4  D017               	goto	l283
 16390  004FE6                     l281:
 16391                           
 16392                           ; BSR set to: 0
 16393                           
 16394                           ; BSR set to: 0
 16395  004FE6  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16396  004FE8  0D08               	mullw	8
 16397  004FEA  0E67               	movlw	low criaCaracteresCGRAM@character
 16398  004FEC  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16399  004FEE  0E00               	movlw	high criaCaracteresCGRAM@character
 16400  004FF0  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16401  004FF2  50F3               	movf	prodl,w,c
 16402  004FF4  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16403  004FF6  50F4               	movf	prodh,w,c
 16404  004FF8  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16405  004FFA  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16406  004FFC  0D01               	mullw	1
 16407  004FFE  50F3               	movf	prodl,w,c
 16408  005000  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16409  005002  6ED9               	movwf	fsr2l,c
 16410  005004  50F4               	movf	prodh,w,c
 16411  005006  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16412  005008  6EDA               	movwf	fsr2h,c
 16413  00500A  50DF               	movf	indf2,w,c
 16414  00500C  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16415  00500E  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16416  005010  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16417  005012  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16418  005014                     l283:
 16419                           
 16420                           ; BSR set to: 0
 16421                           
 16422                           ; BSR set to: 0
 16423  005014  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16424  005016  EC6C  F02C         	call	_Lcd_Write_Char
 16425  00501A  0100               	movlb	0	; () banked
 16426  00501C  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16427  00501E  D7D7               	goto	l8349
 16428  005020                     u12500:
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;lcd.h: 205: }
 16432                           ;lcd.h: 206: k++;
 16433                           
 16434                           ; BSR set to: 0
 16435  005020  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16436  005022  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16437  005024  D7C9               	goto	l8341
 16438  005026                     __end_of_criaCaracteresCGRAM:
 16439                           	opt stack 0
 16440                           tblptru	equ	0xFF8
 16441                           tblptrh	equ	0xFF7
 16442                           tblptrl	equ	0xFF6
 16443                           tablat	equ	0xFF5
 16444                           prodh	equ	0xFF4
 16445                           prodl	equ	0xFF3
 16446                           intcon	equ	0xFF2
 16447                           intcon2	equ	0xFF1
 16448                           intcon3	equ	0xFF0
 16449                           postinc0	equ	0xFEE
 16450                           wreg	equ	0xFE8
 16451                           indf1	equ	0xFE7
 16452                           postdec1	equ	0xFE5
 16453                           fsr1h	equ	0xFE2
 16454                           fsr1l	equ	0xFE1
 16455                           indf2	equ	0xFDF
 16456                           postinc2	equ	0xFDE
 16457                           postdec2	equ	0xFDD
 16458                           fsr2h	equ	0xFDA
 16459                           fsr2l	equ	0xFD9
 16460                           status	equ	0xFD8
 16461                           
 16462 ;; *************** function _controle *****************
 16463 ;; Defined at:
 16464 ;;		line 148 in file "src/controle.h"
 16465 ;; Parameters:    Size  Location     Type
 16466 ;;		None
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;		None
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  1    wreg      void 
 16471 ;; Registers used:
 16472 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/0
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16478 ;;      Params:         0       0       0       0       0       0       0       0       0
 16479 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16480 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16481 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16482 ;;Total ram usage:        7 bytes
 16483 ;; Hardware stack levels used:    1
 16484 ;; Hardware stack levels required when called:    8
 16485 ;; This function calls:
 16486 ;;		_acaoFlap
 16487 ;;		_setLed
 16488 ;; This function is called by:
 16489 ;;		_main
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           	psect	text20
 16494  003B7A                     __ptext20:
 16495                           	opt stack 0
 16496  003B7A                     _controle:
 16497                           	opt stack 22
 16498                           
 16499                           ;controle.h: 150: if (f_falta_energia == 0) {
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;incstack = 0
 16503  003B7A  505E               	movf	_f_falta_energia,w,c
 16504  003B7C  A4D8               	btfss	status,2,c
 16505  003B7E  D02B               	goto	l1161
 16506                           
 16507                           ;controle.h: 151: LATBbits.LATB5 = blinkk;
 16508  003B80  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16509  003B82  D002               	bra	u13625
 16510  003B84  8A8A               	bsf	3978,5,c	;volatile
 16511  003B86  D001               	bra	u13627
 16512  003B88                     u13625:
 16513  003B88  9A8A               	bcf	3978,5,c	;volatile
 16514  003B8A                     u13627:
 16515                           
 16516                           ;controle.h: 152: LATEbits.LE0 = 0;
 16517  003B8A  908D               	bcf	3981,0,c	;volatile
 16518                           
 16519                           ;controle.h: 153: LATDbits.LD0 = 1;
 16520  003B8C  808C               	bsf	3980,0,c	;volatile
 16521                           
 16522                           ;controle.h: 154: LATDbits.LD1 = 0;
 16523  003B8E  928C               	bcf	3980,1,c	;volatile
 16524                           
 16525                           ;controle.h: 155: acaoFlap(1, 10, 0);
 16526  003B90  0E00               	movlw	0
 16527  003B92  0100               	movlb	0	; () banked
 16528  003B94  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16529  003B96  0E0A               	movlw	10
 16530  003B98  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16531  003B9A  0E00               	movlw	0
 16532  003B9C  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16533  003B9E  0E00               	movlw	0
 16534  003BA0  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16535  003BA2  0E01               	movlw	1
 16536  003BA4  EC93  F029         	call	_acaoFlap
 16537                           
 16538                           ;controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 16539  003BA8  043B               	decf	_f_buzzer_falta_energia,w,c
 16540  003BAA  A4D8               	btfss	status,2,c
 16541  003BAC  D008               	goto	l1162
 16542  003BAE  0100               	movlb	0	; () banked
 16543  003BB0  51FC               	movf	_buzzer& (0+255),w,b
 16544  003BB2  A4D8               	btfss	status,2,c
 16545  003BB4  D004               	goto	l1162
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;controle.h: 157: buzzer = 1;
 16549  003BB6  0E01               	movlw	1
 16550  003BB8  6FFC               	movwf	_buzzer& (0+255),b
 16551                           
 16552                           ;controle.h: 158: f_buzzer_falta_energia = 0;
 16553  003BBA  0E00               	movlw	0
 16554  003BBC  6E3B               	movwf	_f_buzzer_falta_energia,c
 16555  003BBE                     l1162:
 16556                           
 16557                           ;controle.h: 159: }
 16558                           ;controle.h: 160: if (buzzer) {
 16559  003BBE  0100               	movlb	0	; () banked
 16560  003BC0  51FC               	movf	_buzzer& (0+255),w,b
 16561  003BC2  B4D8               	btfsc	status,2,c
 16562  003BC4  D006               	goto	l1163
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;controle.h: 161: LATCbits.LC1 = blinkk;
 16566  003BC6  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16567  003BC8  D002               	bra	u13665
 16568  003BCA  828B               	bsf	3979,1,c	;volatile
 16569  003BCC  D001               	bra	u13667
 16570  003BCE                     u13665:
 16571  003BCE  928B               	bcf	3979,1,c	;volatile
 16572  003BD0                     u13667:
 16573                           
 16574                           ;controle.h: 162: } else {
 16575  003BD0  0012               	return	
 16576  003BD2                     l1163:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;controle.h: 163: LATCbits.LC1 = 0;
 16580  003BD2  928B               	bcf	3979,1,c	;volatile
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;controle.h: 164: }
 16584                           ;controle.h: 165: return;
 16585  003BD4  0012               	return	
 16586  003BD6                     l1161:
 16587                           
 16588                           ;controle.h: 167: f_buzzer_falta_energia = 1;
 16589                           
 16590                           ; BSR set to: 0
 16591  003BD6  0E01               	movlw	1
 16592  003BD8  6E3B               	movwf	_f_buzzer_falta_energia,c
 16593                           
 16594                           ;controle.h: 168: }
 16595                           ;controle.h: 172: LATBbits.LATB5 = 1;
 16596  003BDA  8A8A               	bsf	3978,5,c	;volatile
 16597                           
 16598                           ;controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 16599  003BDC  0100               	movlb	0	; () banked
 16600  003BDE  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16601  003BE0  C0FE  F068         	movff	_temp,??_controle
 16602  003BE4  6B69               	clrf	(??_controle+1)& (0+255),b
 16603  003BE6  2768               	addwf	??_controle& (0+255),f,b
 16604  003BE8  0E00               	movlw	0
 16605  003BEA  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16606  003BEC  51F4               	movf	_tempajt& (0+255),w,b
 16607  003BEE  6F6A               	movwf	(??_controle+2)& (0+255),b
 16608  003BF0  6B6B               	clrf	(??_controle+3)& (0+255),b
 16609  003BF2  5168               	movf	??_controle& (0+255),w,b
 16610  003BF4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16611  003BF6  516B               	movf	(??_controle+3)& (0+255),w,b
 16612  003BF8  0A80               	xorlw	128
 16613  003BFA  6F6C               	movwf	(??_controle+4)& (0+255),b
 16614  003BFC  5169               	movf	(??_controle+1)& (0+255),w,b
 16615  003BFE  0A80               	xorlw	128
 16616  003C00  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16617  003C02  B0D8               	btfsc	status,0,c
 16618  003C04  D01B               	goto	u13680
 16619                           
 16620                           ; BSR set to: 0
 16621  003C06  51F4               	movf	_tempajt& (0+255),w,b
 16622  003C08  6F68               	movwf	??_controle& (0+255),b
 16623  003C0A  6B69               	clrf	(??_controle+1)& (0+255),b
 16624  003C0C  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16625  003C0E  6F6A               	movwf	(??_controle+2)& (0+255),b
 16626  003C10  6B6B               	clrf	(??_controle+3)& (0+255),b
 16627  003C12  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16628  003C14  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16629  003C16  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16630  003C18  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16631  003C1A  51FE               	movf	_temp& (0+255),w,b
 16632  003C1C  6F6C               	movwf	(??_controle+4)& (0+255),b
 16633  003C1E  6B6D               	clrf	(??_controle+5)& (0+255),b
 16634  003C20  516A               	movf	(??_controle+2)& (0+255),w,b
 16635  003C22  276C               	addwf	(??_controle+4)& (0+255),f,b
 16636  003C24  516B               	movf	(??_controle+3)& (0+255),w,b
 16637  003C26  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16638  003C28  5168               	movf	??_controle& (0+255),w,b
 16639  003C2A  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16640  003C2C  516D               	movf	(??_controle+5)& (0+255),w,b
 16641  003C2E  0A80               	xorlw	128
 16642  003C30  6F6E               	movwf	(??_controle+6)& (0+255),b
 16643  003C32  5169               	movf	(??_controle+1)& (0+255),w,b
 16644  003C34  0A80               	xorlw	128
 16645  003C36  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16646  003C38  A0D8               	btfss	status,0,c
 16647  003C3A  D025               	goto	l1167
 16648  003C3C                     u13680:
 16649                           
 16650                           ; BSR set to: 0
 16651                           
 16652                           ; BSR set to: 0
 16653  003C3C  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16654  003C3E  B4D8               	btfsc	status,2,c
 16655  003C40  D022               	goto	l1167
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;controle.h: 175: setLed(8, 1);
 16659  003C42  0E01               	movlw	1
 16660  003C44  6F60               	movwf	setLed@acao& (0+255),b
 16661  003C46  0E08               	movlw	8
 16662  003C48  EC05  F02E         	call	_setLed
 16663                           
 16664                           ;controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 16665  003C4C  0E00               	movlw	0
 16666  003C4E  0100               	movlb	0	; () banked
 16667  003C50  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16668  003C52  0E0A               	movlw	10
 16669  003C54  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16670  003C56  0E00               	movlw	0
 16671  003C58  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16672  003C5A  0E00               	movlw	0
 16673  003C5C  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16674  003C5E  0E00               	movlw	0
 16675  003C60  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16676  003C62  0E01               	movlw	1
 16677  003C64  EC93  F029         	call	_acaoFlap
 16678                           
 16679                           ;controle.h: 177: if (t_controle_modo_seguranca == 0) {
 16680  003C68  0101               	movlb	1	; () banked
 16681  003C6A  514C               	movf	_t_controle_modo_seguranca& (0+255),w,b
 16682  003C6C  114D               	iorwf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 16683  003C6E  A4D8               	btfss	status,2,c
 16684  003C70  D042               	goto	l1174
 16685                           
 16686                           ; BSR set to: 1
 16687                           ;controle.h: 178: t_controle_modo_seguranca = 1800;
 16688  003C72  0E07               	movlw	7
 16689  003C74  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 16690  003C76  0E08               	movlw	8
 16691  003C78  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;controle.h: 179: md_seguranca = ~md_seguranca;
 16695  003C7A  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16696  003C7C  D002               	goto	u13710
 16697  003C7E  825B               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16698  003C80  D03A               	goto	l1174
 16699  003C82                     u13710:
 16700  003C82  925B               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16701                           
 16702                           ;controle.h: 180: }
 16703                           ;controle.h: 181: } else {
 16704  003C84  D038               	goto	l1174
 16705  003C86                     l1167:
 16706                           
 16707                           ;controle.h: 182: setLed(8, 0);
 16708  003C86  0E00               	movlw	0
 16709  003C88  0100               	movlb	0	; () banked
 16710  003C8A  6F60               	movwf	setLed@acao& (0+255),b
 16711  003C8C  0E08               	movlw	8
 16712  003C8E  EC05  F02E         	call	_setLed
 16713                           
 16714                           ;controle.h: 183: if (umid >= (umidajt + h_flap)) {
 16715  003C92  5051               	movf	_h_flap,w,c
 16716  003C94  C0F3  F068         	movff	_umidajt,??_controle
 16717  003C98  0100               	movlb	0	; () banked
 16718  003C9A  6B69               	clrf	(??_controle+1)& (0+255),b
 16719  003C9C  2768               	addwf	??_controle& (0+255),f,b
 16720  003C9E  0E00               	movlw	0
 16721  003CA0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16722  003CA2  505D               	movf	_umid,w,c
 16723  003CA4  6F6A               	movwf	(??_controle+2)& (0+255),b
 16724  003CA6  6B6B               	clrf	(??_controle+3)& (0+255),b
 16725  003CA8  5168               	movf	??_controle& (0+255),w,b
 16726  003CAA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16727  003CAC  516B               	movf	(??_controle+3)& (0+255),w,b
 16728  003CAE  0A80               	xorlw	128
 16729  003CB0  6F6C               	movwf	(??_controle+4)& (0+255),b
 16730  003CB2  5169               	movf	(??_controle+1)& (0+255),w,b
 16731  003CB4  0A80               	xorlw	128
 16732  003CB6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16733  003CB8  A0D8               	btfss	status,0,c
 16734  003CBA  D00D               	goto	l1172
 16735                           
 16736                           ; BSR set to: 0
 16737                           ;controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 16738  003CBC  C055  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 16739  003CC0  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16740  003CC2  5054               	movf	_t_flap_intervalo,w,c
 16741  003CC4  0D0A               	mullw	10
 16742  003CC6  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 16743  003CCA  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 16744  003CCE  0E01               	movlw	1
 16745  003CD0  EC93  F029         	call	_acaoFlap
 16746                           
 16747                           ;controle.h: 185: } else if (umid <= umidajt) {
 16748  003CD4  D010               	goto	l1174
 16749  003CD6                     l1172:
 16750  003CD6  505D               	movf	_umid,w,c
 16751  003CD8  0100               	movlb	0	; () banked
 16752  003CDA  5DF3               	subwf	_umidajt& (0+255),w,b
 16753  003CDC  A0D8               	btfss	status,0,c
 16754  003CDE  D00B               	goto	l1174
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;controle.h: 186: acaoFlap(0, 200, 600);
 16758  003CE0  0E00               	movlw	0
 16759  003CE2  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16760  003CE4  0EC8               	movlw	200
 16761  003CE6  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16762  003CE8  0E02               	movlw	2
 16763  003CEA  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16764  003CEC  0E58               	movlw	88
 16765  003CEE  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16766  003CF0  0E00               	movlw	0
 16767  003CF2  EC93  F029         	call	_acaoFlap
 16768  003CF6                     l1174:
 16769                           
 16770                           ;controle.h: 187: }
 16771                           ;controle.h: 188: }
 16772                           ;controle.h: 189: if (temp > 0) {
 16773  003CF6  0100               	movlb	0	; () banked
 16774  003CF8  51FE               	movf	_temp& (0+255),w,b
 16775  003CFA  B4D8               	btfsc	status,2,c
 16776  003CFC  D03D               	goto	l1175
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 16780  003CFE  5052               	movf	_h_abafador,w,c
 16781  003D00  C0FE  F068         	movff	_temp,??_controle
 16782  003D04  6B69               	clrf	(??_controle+1)& (0+255),b
 16783  003D06  2768               	addwf	??_controle& (0+255),f,b
 16784  003D08  0E00               	movlw	0
 16785  003D0A  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16786  003D0C  51F4               	movf	_tempajt& (0+255),w,b
 16787  003D0E  6F6A               	movwf	(??_controle+2)& (0+255),b
 16788  003D10  6B6B               	clrf	(??_controle+3)& (0+255),b
 16789  003D12  5168               	movf	??_controle& (0+255),w,b
 16790  003D14  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16791  003D16  516B               	movf	(??_controle+3)& (0+255),w,b
 16792  003D18  0A80               	xorlw	128
 16793  003D1A  6F6C               	movwf	(??_controle+4)& (0+255),b
 16794  003D1C  5169               	movf	(??_controle+1)& (0+255),w,b
 16795  003D1E  0A80               	xorlw	128
 16796  003D20  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16797  003D22  A0D8               	btfss	status,0,c
 16798  003D24  D002               	goto	l1176
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;controle.h: 191: LATEbits.LE0 = 1;
 16802  003D26  808D               	bsf	3981,0,c	;volatile
 16803  003D28  D008               	goto	L28
 16804  003D2A                     l1176:
 16805                           
 16806                           ; BSR set to: 0
 16807                           
 16808                           ; BSR set to: 0
 16809  003D2A  51F4               	movf	_tempajt& (0+255),w,b
 16810  003D2C  5DFE               	subwf	_temp& (0+255),w,b
 16811  003D2E  A0D8               	btfss	status,0,c
 16812  003D30  D003               	goto	l1178
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;controle.h: 194: LATEbits.LE0 = 0;
 16816  003D32  908D               	bcf	3981,0,c	;volatile
 16817                           
 16818                           ;controle.h: 195: LATDbits.LD0 = 1;
 16819  003D34  808C               	bsf	3980,0,c	;volatile
 16820                           
 16821                           ;controle.h: 196: } else {
 16822  003D36  D002               	goto	l1179
 16823  003D38                     l1178:
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;controle.h: 197: LATEbits.LE0 = 0;
 16827  003D38  908D               	bcf	3981,0,c	;volatile
 16828  003D3A                     L28:
 16829                           
 16830                           ;controle.h: 198: LATDbits.LD0 = 0;
 16831  003D3A  908C               	bcf	3980,0,c	;volatile
 16832  003D3C                     l1179:
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;controle.h: 199: }
 16836                           ;controle.h: 201: if (fornalha == 1) {
 16837                           
 16838                           ; BSR set to: 0
 16839                           
 16840                           ; BSR set to: 0
 16841  003D3C  045A               	decf	_fornalha,w,c
 16842  003D3E  A4D8               	btfss	status,2,c
 16843  003D40  D01D               	goto	L29
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 16847  003D42  5053               	movf	_h_venotinha,w,c
 16848  003D44  C0FE  F068         	movff	_temp,??_controle
 16849  003D48  6B69               	clrf	(??_controle+1)& (0+255),b
 16850  003D4A  2768               	addwf	??_controle& (0+255),f,b
 16851  003D4C  0E00               	movlw	0
 16852  003D4E  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16853  003D50  51F4               	movf	_tempajt& (0+255),w,b
 16854  003D52  6F6A               	movwf	(??_controle+2)& (0+255),b
 16855  003D54  6B6B               	clrf	(??_controle+3)& (0+255),b
 16856  003D56  5168               	movf	??_controle& (0+255),w,b
 16857  003D58  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16858  003D5A  516B               	movf	(??_controle+3)& (0+255),w,b
 16859  003D5C  0A80               	xorlw	128
 16860  003D5E  6F6C               	movwf	(??_controle+4)& (0+255),b
 16861  003D60  5169               	movf	(??_controle+1)& (0+255),w,b
 16862  003D62  0A80               	xorlw	128
 16863  003D64  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16864  003D66  A0D8               	btfss	status,0,c
 16865  003D68  D002               	goto	l1181
 16866                           
 16867                           ; BSR set to: 0
 16868                           ;controle.h: 203: LATDbits.LD1 = 1;
 16869  003D6A  828C               	bsf	3980,1,c	;volatile
 16870                           
 16871                           ;controle.h: 205: } else if (temp >= tempajt) {
 16872  003D6C  D008               	goto	l1185
 16873  003D6E                     l1181:
 16874                           
 16875                           ; BSR set to: 0
 16876                           
 16877                           ; BSR set to: 0
 16878  003D6E  51F4               	movf	_tempajt& (0+255),w,b
 16879  003D70  5DFE               	subwf	_temp& (0+255),w,b
 16880  003D72  A0D8               	btfss	status,0,c
 16881  003D74  D004               	goto	l1185
 16882  003D76  D002               	goto	L29
 16883  003D78                     l1175:
 16884                           
 16885                           ; BSR set to: 0
 16886                           ;controle.h: 213: LATEbits.LE0 = 0;
 16887  003D78  908D               	bcf	3981,0,c	;volatile
 16888                           
 16889                           ;controle.h: 214: LATDbits.LD0 = 1;
 16890  003D7A  808C               	bsf	3980,0,c	;volatile
 16891  003D7C                     L29:
 16892                           
 16893                           ;controle.h: 215: LATDbits.LD1 = 0;
 16894  003D7C  928C               	bcf	3980,1,c	;volatile
 16895  003D7E                     l1185:
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;controle.h: 216: }
 16899                           ;controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 16900                           
 16901                           ; BSR set to: 0
 16902  003D7E  045A               	decf	_fornalha,w,c
 16903  003D80  A4D8               	btfss	status,2,c
 16904  003D82  D008               	goto	l1186
 16905                           
 16906                           ; BSR set to: 0
 16907  003D84  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16908  003D86  B4D8               	btfsc	status,2,c
 16909  003D88  D005               	goto	l1186
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 16913  003D8A  C0F8  F14E         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 16914  003D8E  0101               	movlb	1	; () banked
 16915  003D90  6B4F               	clrf	(_t_controle_religar_ventoinha+1)& (0+255),b
 16916                           
 16917                           ;controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 16918  003D92  D00B               	goto	l1188
 16919  003D94                     l1186:
 16920                           
 16921                           ; BSR set to: 1
 16922  003D94  0101               	movlb	1	; () banked
 16923  003D96  514E               	movf	_t_controle_religar_ventoinha& (0+255),w,b
 16924  003D98  114F               	iorwf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 16925  003D9A  A4D8               	btfss	status,2,c
 16926  003D9C  D006               	goto	l1188
 16927                           
 16928                           ; BSR set to: 1
 16929  003D9E  0100               	movlb	0	; () banked
 16930  003DA0  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16931  003DA2  B4D8               	btfsc	status,2,c
 16932  003DA4  D002               	goto	l1188
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;controle.h: 222: fornalha = 1;
 16936  003DA6  0E01               	movlw	1
 16937  003DA8  6E5A               	movwf	_fornalha,c
 16938  003DAA                     l1188:
 16939                           
 16940                           ;controle.h: 223: }
 16941                           ;controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 16942                           
 16943                           ; BSR set to: 0
 16944                           
 16945                           ; BSR set to: 0
 16946  003DAA  0100               	movlb	0	; () banked
 16947  003DAC  05FC               	decf	_buzzer& (0+255),w,b
 16948  003DAE  A4D8               	btfss	status,2,c
 16949  003DB0  D043               	goto	l1193
 16950                           
 16951                           ; BSR set to: 0
 16952  003DB2  5039               	movf	_t_controle_buzzer,w,c
 16953  003DB4  A4D8               	btfss	status,2,c
 16954  003DB6  D040               	goto	l1193
 16955                           
 16956                           ; BSR set to: 0
 16957                           ;controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 16958  003DB8  5050               	movf	_h_buzzer,w,c
 16959  003DBA  C0FE  F068         	movff	_temp,??_controle
 16960  003DBE  6B69               	clrf	(??_controle+1)& (0+255),b
 16961  003DC0  2768               	addwf	??_controle& (0+255),f,b
 16962  003DC2  0E00               	movlw	0
 16963  003DC4  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16964  003DC6  51F4               	movf	_tempajt& (0+255),w,b
 16965  003DC8  6F6A               	movwf	(??_controle+2)& (0+255),b
 16966  003DCA  6B6B               	clrf	(??_controle+3)& (0+255),b
 16967  003DCC  5168               	movf	??_controle& (0+255),w,b
 16968  003DCE  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16969  003DD0  516B               	movf	(??_controle+3)& (0+255),w,b
 16970  003DD2  0A80               	xorlw	128
 16971  003DD4  6F6C               	movwf	(??_controle+4)& (0+255),b
 16972  003DD6  5169               	movf	(??_controle+1)& (0+255),w,b
 16973  003DD8  0A80               	xorlw	128
 16974  003DDA  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16975  003DDC  B0D8               	btfsc	status,0,c
 16976  003DDE  D01B               	goto	u13880
 16977                           
 16978                           ; BSR set to: 0
 16979  003DE0  51F4               	movf	_tempajt& (0+255),w,b
 16980  003DE2  6F68               	movwf	??_controle& (0+255),b
 16981  003DE4  6B69               	clrf	(??_controle+1)& (0+255),b
 16982  003DE6  5050               	movf	_h_buzzer,w,c
 16983  003DE8  6F6A               	movwf	(??_controle+2)& (0+255),b
 16984  003DEA  6B6B               	clrf	(??_controle+3)& (0+255),b
 16985  003DEC  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16986  003DEE  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16987  003DF0  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16988  003DF2  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16989  003DF4  51FE               	movf	_temp& (0+255),w,b
 16990  003DF6  6F6C               	movwf	(??_controle+4)& (0+255),b
 16991  003DF8  6B6D               	clrf	(??_controle+5)& (0+255),b
 16992  003DFA  516A               	movf	(??_controle+2)& (0+255),w,b
 16993  003DFC  276C               	addwf	(??_controle+4)& (0+255),f,b
 16994  003DFE  516B               	movf	(??_controle+3)& (0+255),w,b
 16995  003E00  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16996  003E02  5168               	movf	??_controle& (0+255),w,b
 16997  003E04  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16998  003E06  516D               	movf	(??_controle+5)& (0+255),w,b
 16999  003E08  0A80               	xorlw	128
 17000  003E0A  6F6E               	movwf	(??_controle+6)& (0+255),b
 17001  003E0C  5169               	movf	(??_controle+1)& (0+255),w,b
 17002  003E0E  0A80               	xorlw	128
 17003  003E10  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17004  003E12  A0D8               	btfss	status,0,c
 17005  003E14  D010               	goto	l1190
 17006  003E16                     u13880:
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;controle.h: 228: t_controle_buzzer = 10;
 17010                           
 17011                           ; BSR set to: 0
 17012  003E16  0E0A               	movlw	10
 17013  003E18  6E39               	movwf	_t_controle_buzzer,c
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 17017  003E1A  A28B               	btfss	3979,1,c	;volatile
 17018  003E1C  D002               	goto	u13890
 17019  003E1E  0E01               	movlw	1
 17020  003E20  D001               	goto	u13896
 17021  003E22                     u13890:
 17022  003E22  0E00               	movlw	0
 17023  003E24                     u13896:
 17024  003E24  0AFF               	xorlw	255
 17025  003E26  6F68               	movwf	??_controle& (0+255),b
 17026  003E28  4768               	rlncf	??_controle& (0+255),f,b
 17027  003E2A  508B               	movf	3979,w,c	;volatile
 17028  003E2C  1968               	xorwf	??_controle& (0+255),w,b
 17029  003E2E  0BFD               	andlw	-3
 17030  003E30  1968               	xorwf	??_controle& (0+255),w,b
 17031  003E32  6E8B               	movwf	3979,c	;volatile
 17032                           
 17033                           ;controle.h: 230: } else {
 17034  003E34  D001               	goto	l1193
 17035  003E36                     l1190:
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;controle.h: 231: LATCbits.LC1 = 0;
 17039  003E36  928B               	bcf	3979,1,c	;volatile
 17040  003E38                     l1193:
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;controle.h: 232: }
 17044                           ;controle.h: 233: }
 17045                           ;controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 17046                           
 17047                           ; BSR set to: 0
 17048                           
 17049                           ; BSR set to: 0
 17050  003E38  05FC               	decf	_buzzer& (0+255),w,b
 17051  003E3A  A4D8               	btfss	status,2,c
 17052  003E3C  D007               	goto	l1194
 17053                           
 17054                           ; BSR set to: 0
 17055  003E3E  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17056  003E40  B4D8               	btfsc	status,2,c
 17057  003E42  D004               	goto	l1194
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 17061  003E44  C0FF  F031         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 17062  003E48  6A32               	clrf	_t_controle_religar_buzzer+1,c
 17063                           
 17064                           ;controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 17065  003E4A  D009               	goto	l1196
 17066  003E4C                     l1194:
 17067                           
 17068                           ; BSR set to: 0
 17069                           
 17070                           ; BSR set to: 0
 17071  003E4C  5031               	movf	_t_controle_religar_buzzer,w,c
 17072  003E4E  1032               	iorwf	_t_controle_religar_buzzer+1,w,c
 17073  003E50  A4D8               	btfss	status,2,c
 17074  003E52  D005               	goto	l1196
 17075                           
 17076                           ; BSR set to: 0
 17077  003E54  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17078  003E56  B4D8               	btfsc	status,2,c
 17079  003E58  D002               	goto	l1196
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;controle.h: 237: buzzer = 1;
 17083  003E5A  0E01               	movlw	1
 17084  003E5C  6FFC               	movwf	_buzzer& (0+255),b
 17085  003E5E                     l1196:
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;controle.h: 238: }
 17089                           ;controle.h: 239: if (!buzzer) {
 17090                           
 17091                           ; BSR set to: 0
 17092  003E5E  51FC               	movf	_buzzer& (0+255),w,b
 17093  003E60  B4D8               	btfsc	status,2,c
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;controle.h: 240: LATCbits.LC1 = 0;
 17097  003E62  928B               	bcf	3979,1,c	;volatile
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;controle.h: 241: }
 17101                           ;controle.h: 245: if (temp + 3 < tempajt) {
 17102                           
 17103                           ; BSR set to: 0
 17104  003E64  51F4               	movf	_tempajt& (0+255),w,b
 17105  003E66  6F68               	movwf	??_controle& (0+255),b
 17106  003E68  6B69               	clrf	(??_controle+1)& (0+255),b
 17107  003E6A  51FE               	movf	_temp& (0+255),w,b
 17108  003E6C  6F6A               	movwf	(??_controle+2)& (0+255),b
 17109  003E6E  6B6B               	clrf	(??_controle+3)& (0+255),b
 17110  003E70  0E03               	movlw	3
 17111  003E72  276A               	addwf	(??_controle+2)& (0+255),f,b
 17112  003E74  0E00               	movlw	0
 17113  003E76  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17114  003E78  5168               	movf	??_controle& (0+255),w,b
 17115  003E7A  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17116  003E7C  516B               	movf	(??_controle+3)& (0+255),w,b
 17117  003E7E  0A80               	xorlw	128
 17118  003E80  6F6C               	movwf	(??_controle+4)& (0+255),b
 17119  003E82  5169               	movf	(??_controle+1)& (0+255),w,b
 17120  003E84  0A80               	xorlw	128
 17121  003E86  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17122  003E88  B0D8               	btfsc	status,0,c
 17123  003E8A  D00C               	goto	l1198
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;controle.h: 246: setLed(16, 1);
 17127  003E8C  0E01               	movlw	1
 17128  003E8E  6F60               	movwf	setLed@acao& (0+255),b
 17129  003E90  0E10               	movlw	16
 17130  003E92  EC05  F02E         	call	_setLed
 17131                           
 17132                           ;controle.h: 247: setLed(32, 0);
 17133  003E96  0E00               	movlw	0
 17134  003E98  0100               	movlb	0	; () banked
 17135  003E9A  6F60               	movwf	setLed@acao& (0+255),b
 17136  003E9C  0E20               	movlw	32
 17137  003E9E  EC05  F02E         	call	_setLed
 17138                           
 17139                           ;controle.h: 248: } else if (temp - 3 > tempajt) {
 17140  003EA2  D031               	goto	l1201
 17141  003EA4                     l1198:
 17142  003EA4  0EFD               	movlw	253
 17143  003EA6  0100               	movlb	0	; () banked
 17144  003EA8  6F68               	movwf	??_controle& (0+255),b
 17145  003EAA  0EFF               	movlw	255
 17146  003EAC  6F69               	movwf	(??_controle+1)& (0+255),b
 17147  003EAE  51FE               	movf	_temp& (0+255),w,b
 17148  003EB0  6F6A               	movwf	(??_controle+2)& (0+255),b
 17149  003EB2  6B6B               	clrf	(??_controle+3)& (0+255),b
 17150  003EB4  5168               	movf	??_controle& (0+255),w,b
 17151  003EB6  276A               	addwf	(??_controle+2)& (0+255),f,b
 17152  003EB8  5169               	movf	(??_controle+1)& (0+255),w,b
 17153  003EBA  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17154  003EBC  51F4               	movf	_tempajt& (0+255),w,b
 17155  003EBE  6F6C               	movwf	(??_controle+4)& (0+255),b
 17156  003EC0  6B6D               	clrf	(??_controle+5)& (0+255),b
 17157  003EC2  516A               	movf	(??_controle+2)& (0+255),w,b
 17158  003EC4  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17159  003EC6  516D               	movf	(??_controle+5)& (0+255),w,b
 17160  003EC8  0A80               	xorlw	128
 17161  003ECA  6F6E               	movwf	(??_controle+6)& (0+255),b
 17162  003ECC  516B               	movf	(??_controle+3)& (0+255),w,b
 17163  003ECE  0A80               	xorlw	128
 17164  003ED0  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17165  003ED2  B0D8               	btfsc	status,0,c
 17166  003ED4  D00C               	goto	l1200
 17167                           
 17168                           ; BSR set to: 0
 17169                           ;controle.h: 249: setLed(32, 1);
 17170  003ED6  0E01               	movlw	1
 17171  003ED8  6F60               	movwf	setLed@acao& (0+255),b
 17172  003EDA  0E20               	movlw	32
 17173  003EDC  EC05  F02E         	call	_setLed
 17174                           
 17175                           ;controle.h: 250: setLed(16, 0);
 17176  003EE0  0E00               	movlw	0
 17177  003EE2  0100               	movlb	0	; () banked
 17178  003EE4  6F60               	movwf	setLed@acao& (0+255),b
 17179  003EE6  0E10               	movlw	16
 17180  003EE8  EC05  F02E         	call	_setLed
 17181                           
 17182                           ;controle.h: 251: } else {
 17183  003EEC  D00C               	goto	l1201
 17184  003EEE                     l1200:
 17185                           
 17186                           ;controle.h: 252: setLed(32, 0);
 17187  003EEE  0E00               	movlw	0
 17188  003EF0  0100               	movlb	0	; () banked
 17189  003EF2  6F60               	movwf	setLed@acao& (0+255),b
 17190  003EF4  0E20               	movlw	32
 17191  003EF6  EC05  F02E         	call	_setLed
 17192                           
 17193                           ;controle.h: 253: setLed(16, 0);
 17194  003EFA  0E00               	movlw	0
 17195  003EFC  0100               	movlb	0	; () banked
 17196  003EFE  6F60               	movwf	setLed@acao& (0+255),b
 17197  003F00  0E10               	movlw	16
 17198  003F02  EC05  F02E         	call	_setLed
 17199  003F06                     l1201:
 17200                           
 17201                           ;controle.h: 254: }
 17202                           ;controle.h: 256: if (umid + 3 < umidajt) {
 17203  003F06  0100               	movlb	0	; () banked
 17204  003F08  51F3               	movf	_umidajt& (0+255),w,b
 17205  003F0A  6F68               	movwf	??_controle& (0+255),b
 17206  003F0C  6B69               	clrf	(??_controle+1)& (0+255),b
 17207  003F0E  505D               	movf	_umid,w,c
 17208  003F10  6F6A               	movwf	(??_controle+2)& (0+255),b
 17209  003F12  6B6B               	clrf	(??_controle+3)& (0+255),b
 17210  003F14  0E03               	movlw	3
 17211  003F16  276A               	addwf	(??_controle+2)& (0+255),f,b
 17212  003F18  0E00               	movlw	0
 17213  003F1A  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17214  003F1C  5168               	movf	??_controle& (0+255),w,b
 17215  003F1E  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17216  003F20  516B               	movf	(??_controle+3)& (0+255),w,b
 17217  003F22  0A80               	xorlw	128
 17218  003F24  6F6C               	movwf	(??_controle+4)& (0+255),b
 17219  003F26  5169               	movf	(??_controle+1)& (0+255),w,b
 17220  003F28  0A80               	xorlw	128
 17221  003F2A  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17222  003F2C  B0D8               	btfsc	status,0,c
 17223  003F2E  D00C               	goto	l1202
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;controle.h: 257: setLed(1, 0);
 17227  003F30  0E00               	movlw	0
 17228  003F32  6F60               	movwf	setLed@acao& (0+255),b
 17229  003F34  0E01               	movlw	1
 17230  003F36  EC05  F02E         	call	_setLed
 17231                           
 17232                           ;controle.h: 258: setLed(2, 1);
 17233  003F3A  0E01               	movlw	1
 17234  003F3C  0100               	movlb	0	; () banked
 17235  003F3E  6F60               	movwf	setLed@acao& (0+255),b
 17236  003F40  0E02               	movlw	2
 17237  003F42  EC05  F02E         	call	_setLed
 17238                           
 17239                           ;controle.h: 259: } else if (umid - 3 > umidajt) {
 17240  003F46  0012               	return	
 17241  003F48                     l1202:
 17242  003F48  0EFD               	movlw	253
 17243  003F4A  0100               	movlb	0	; () banked
 17244  003F4C  6F68               	movwf	??_controle& (0+255),b
 17245  003F4E  0EFF               	movlw	255
 17246  003F50  6F69               	movwf	(??_controle+1)& (0+255),b
 17247  003F52  505D               	movf	_umid,w,c
 17248  003F54  6F6A               	movwf	(??_controle+2)& (0+255),b
 17249  003F56  6B6B               	clrf	(??_controle+3)& (0+255),b
 17250  003F58  5168               	movf	??_controle& (0+255),w,b
 17251  003F5A  276A               	addwf	(??_controle+2)& (0+255),f,b
 17252  003F5C  5169               	movf	(??_controle+1)& (0+255),w,b
 17253  003F5E  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17254  003F60  51F3               	movf	_umidajt& (0+255),w,b
 17255  003F62  6F6C               	movwf	(??_controle+4)& (0+255),b
 17256  003F64  6B6D               	clrf	(??_controle+5)& (0+255),b
 17257  003F66  516A               	movf	(??_controle+2)& (0+255),w,b
 17258  003F68  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17259  003F6A  516D               	movf	(??_controle+5)& (0+255),w,b
 17260  003F6C  0A80               	xorlw	128
 17261  003F6E  6F6E               	movwf	(??_controle+6)& (0+255),b
 17262  003F70  516B               	movf	(??_controle+3)& (0+255),w,b
 17263  003F72  0A80               	xorlw	128
 17264  003F74  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17265  003F76  B0D8               	btfsc	status,0,c
 17266  003F78  D00C               	goto	l1204
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;controle.h: 260: setLed(1, 1);
 17270  003F7A  0E01               	movlw	1
 17271  003F7C  6F60               	movwf	setLed@acao& (0+255),b
 17272  003F7E  0E01               	movlw	1
 17273  003F80  EC05  F02E         	call	_setLed
 17274                           
 17275                           ;controle.h: 261: setLed(2, 0);
 17276  003F84  0E00               	movlw	0
 17277  003F86  0100               	movlb	0	; () banked
 17278  003F88  6F60               	movwf	setLed@acao& (0+255),b
 17279  003F8A  0E02               	movlw	2
 17280  003F8C  EC05  F02E         	call	_setLed
 17281                           
 17282                           ;controle.h: 262: } else {
 17283  003F90  0012               	return	
 17284  003F92                     l1204:
 17285                           
 17286                           ;controle.h: 263: setLed(1, 0);
 17287  003F92  0E00               	movlw	0
 17288  003F94  0100               	movlb	0	; () banked
 17289  003F96  6F60               	movwf	setLed@acao& (0+255),b
 17290  003F98  0E01               	movlw	1
 17291  003F9A  EC05  F02E         	call	_setLed
 17292                           
 17293                           ;controle.h: 264: setLed(2, 0);
 17294  003F9E  0E00               	movlw	0
 17295  003FA0  0100               	movlb	0	; () banked
 17296  003FA2  6F60               	movwf	setLed@acao& (0+255),b
 17297  003FA4  0E02               	movlw	2
 17298  003FA6  EC05  F02E         	call	_setLed
 17299  003FAA  0012               	return	
 17300  003FAC                     __end_of_controle:
 17301                           	opt stack 0
 17302                           tblptru	equ	0xFF8
 17303                           tblptrh	equ	0xFF7
 17304                           tblptrl	equ	0xFF6
 17305                           tablat	equ	0xFF5
 17306                           prodh	equ	0xFF4
 17307                           prodl	equ	0xFF3
 17308                           intcon	equ	0xFF2
 17309                           intcon2	equ	0xFF1
 17310                           intcon3	equ	0xFF0
 17311                           postinc0	equ	0xFEE
 17312                           wreg	equ	0xFE8
 17313                           indf1	equ	0xFE7
 17314                           postdec1	equ	0xFE5
 17315                           fsr1h	equ	0xFE2
 17316                           fsr1l	equ	0xFE1
 17317                           indf2	equ	0xFDF
 17318                           postinc2	equ	0xFDE
 17319                           postdec2	equ	0xFDD
 17320                           fsr2h	equ	0xFDA
 17321                           fsr2l	equ	0xFD9
 17322                           status	equ	0xFD8
 17323                           
 17324 ;; *************** function _acaoFlap *****************
 17325 ;; Defined at:
 17326 ;;		line 123 in file "src/controle.h"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  acao            1    wreg     unsigned char 
 17329 ;;  tempo_ativad    2    2[BANK0 ] int 
 17330 ;;  tempo_aguard    2    4[BANK0 ] int 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;  acao            1    7[BANK0 ] unsigned char 
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  1    wreg      void 
 17335 ;; Registers used:
 17336 ;;		wreg, status,2, status,0, cstack
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17342 ;;      Params:         0       4       0       0       0       0       0       0       0
 17343 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17344 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17345 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17346 ;;Total ram usage:        6 bytes
 17347 ;; Hardware stack levels used:    1
 17348 ;; Hardware stack levels required when called:    7
 17349 ;; This function calls:
 17350 ;;		_setLed
 17351 ;; This function is called by:
 17352 ;;		_controle
 17353 ;; This function uses a non-reentrant model
 17354 ;;
 17355                           
 17356                           	psect	text21
 17357  005326                     __ptext21:
 17358                           	opt stack 0
 17359  005326                     _acaoFlap:
 17360                           	opt stack 22
 17361                           
 17362                           ;incstack = 0
 17363                           ;acaoFlap@acao stored from wreg
 17364  005326  0100               	movlb	0	; () banked
 17365  005328  6F67               	movwf	acaoFlap@acao& (0+255),b
 17366                           
 17367                           ;controle.h: 124: if (acao != _acao_flap) {
 17368  00532A  503C               	movf	__acao_flap,w,c
 17369  00532C  0100               	movlb	0	; () banked
 17370  00532E  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17371  005330  B4D8               	btfsc	status,2,c
 17372  005332  D007               	goto	l1152
 17373                           
 17374                           ; BSR set to: 0
 17375                           ;controle.h: 125: t_controle_flap = 0;
 17376  005334  0E00               	movlw	0
 17377  005336  6E34               	movwf	_t_controle_flap+1,c
 17378  005338  0E00               	movlw	0
 17379  00533A  6E33               	movwf	_t_controle_flap,c
 17380                           
 17381                           ; BSR set to: 0
 17382                           ;controle.h: 126: _acao_flap = acao;
 17383  00533C  C067  F03C         	movff	acaoFlap@acao,__acao_flap
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;controle.h: 127: return;
 17387  005340  0012               	return	
 17388  005342                     l1152:
 17389                           
 17390                           ; BSR set to: 0
 17391                           ;controle.h: 128: }
 17392                           ;controle.h: 129: if (acao) {
 17393                           
 17394                           ; BSR set to: 0
 17395  005342  5167               	movf	acaoFlap@acao& (0+255),w,b
 17396  005344  B4D8               	btfsc	status,2,c
 17397  005346  D006               	goto	l1154
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;controle.h: 130: setLed(4, 1);
 17401  005348  0E01               	movlw	1
 17402  00534A  6F60               	movwf	setLed@acao& (0+255),b
 17403  00534C  0E04               	movlw	4
 17404  00534E  EC05  F02E         	call	_setLed
 17405                           
 17406                           ;controle.h: 131: } else {
 17407  005352  D006               	goto	l1155
 17408  005354                     l1154:
 17409                           
 17410                           ;controle.h: 132: setLed(4, 0);
 17411  005354  0E00               	movlw	0
 17412  005356  0100               	movlb	0	; () banked
 17413  005358  6F60               	movwf	setLed@acao& (0+255),b
 17414  00535A  0E04               	movlw	4
 17415  00535C  EC05  F02E         	call	_setLed
 17416  005360                     l1155:
 17417                           
 17418                           ;controle.h: 133: }
 17419                           ;controle.h: 135: if (!t_controle_flap) {
 17420  005360  5033               	movf	_t_controle_flap,w,c
 17421  005362  1034               	iorwf	_t_controle_flap+1,w,c
 17422  005364  A4D8               	btfss	status,2,c
 17423  005366  D007               	goto	l1156
 17424                           
 17425                           ;controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17426  005368  0100               	movlb	0	; () banked
 17427  00536A  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17428  00536C  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17429  00536E  6E33               	movwf	_t_controle_flap,c
 17430  005370  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17431  005372  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17432  005374  6E34               	movwf	_t_controle_flap+1,c
 17433  005376                     l1156:
 17434                           
 17435                           ;controle.h: 137: }
 17436                           ;controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17437  005376  5033               	movf	_t_controle_flap,w,c
 17438  005378  0100               	movlb	0	; () banked
 17439  00537A  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17440  00537C  5034               	movf	_t_controle_flap+1,w,c
 17441  00537E  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17442  005380  B0D8               	btfsc	status,0,c
 17443  005382  D015               	goto	l1157
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;controle.h: 140: LATAbits.LA5 = !acao;
 17447  005384  5167               	movf	acaoFlap@acao& (0+255),w,b
 17448  005386  A4D8               	btfss	status,2,c
 17449  005388  D003               	goto	u11810
 17450  00538A  6B66               	clrf	??_acaoFlap& (0+255),b
 17451  00538C  2B66               	incf	??_acaoFlap& (0+255),f,b
 17452  00538E  D002               	goto	u11828
 17453  005390                     u11810:
 17454  005390  0100               	movlb	0	; () banked
 17455  005392  6B66               	clrf	??_acaoFlap& (0+255),b
 17456  005394                     u11828:
 17457  005394  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17458  005396  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17459  005398  5089               	movf	3977,w,c	;volatile
 17460  00539A  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17461  00539C  0BDF               	andlw	-33
 17462  00539E  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17463  0053A0  6E89               	movwf	3977,c	;volatile
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;controle.h: 141: LATCbits.LC2 = acao;
 17467  0053A2  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17468  0053A4  D002               	bra	u11835
 17469  0053A6  948B               	bcf	3979,2,c	;volatile
 17470  0053A8  D001               	bra	u11836
 17471  0053AA                     u11835:
 17472  0053AA  848B               	bsf	3979,2,c	;volatile
 17473  0053AC                     u11836:
 17474                           
 17475                           ;controle.h: 142: } else {
 17476  0053AC  0012               	return	
 17477  0053AE                     l1157:
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;controle.h: 143: LATAbits.LA5 = 0;
 17481  0053AE  9A89               	bcf	3977,5,c	;volatile
 17482                           
 17483                           ;controle.h: 144: LATCbits.LC2 = 0;
 17484  0053B0  948B               	bcf	3979,2,c	;volatile
 17485  0053B2  0012               	return	
 17486  0053B4                     __end_of_acaoFlap:
 17487                           	opt stack 0
 17488                           tblptru	equ	0xFF8
 17489                           tblptrh	equ	0xFF7
 17490                           tblptrl	equ	0xFF6
 17491                           tablat	equ	0xFF5
 17492                           prodh	equ	0xFF4
 17493                           prodl	equ	0xFF3
 17494                           intcon	equ	0xFF2
 17495                           intcon2	equ	0xFF1
 17496                           intcon3	equ	0xFF0
 17497                           postinc0	equ	0xFEE
 17498                           wreg	equ	0xFE8
 17499                           indf1	equ	0xFE7
 17500                           postdec1	equ	0xFE5
 17501                           fsr1h	equ	0xFE2
 17502                           fsr1l	equ	0xFE1
 17503                           indf2	equ	0xFDF
 17504                           postinc2	equ	0xFDE
 17505                           postdec2	equ	0xFDD
 17506                           fsr2h	equ	0xFDA
 17507                           fsr2l	equ	0xFD9
 17508                           status	equ	0xFD8
 17509                           
 17510 ;; *************** function _setLed *****************
 17511 ;; Defined at:
 17512 ;;		line 18 in file "src/Led_display.h"
 17513 ;; Parameters:    Size  Location     Type
 17514 ;;  led             1    wreg     unsigned char 
 17515 ;;  acao            1    0[BANK0 ] unsigned char 
 17516 ;; Auto vars:     Size  Location     Type
 17517 ;;  led             1    1[BANK0 ] unsigned char 
 17518 ;; Return value:  Size  Location     Type
 17519 ;;                  1    wreg      void 
 17520 ;; Registers used:
 17521 ;;		wreg, status,2, status,0
 17522 ;; Tracked objects:
 17523 ;;		On entry : 0/0
 17524 ;;		On exit  : 0/0
 17525 ;;		Unchanged: 0/0
 17526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17527 ;;      Params:         0       1       0       0       0       0       0       0       0
 17528 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17529 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17530 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17531 ;;Total ram usage:        2 bytes
 17532 ;; Hardware stack levels used:    1
 17533 ;; Hardware stack levels required when called:    6
 17534 ;; This function calls:
 17535 ;;		Nothing
 17536 ;; This function is called by:
 17537 ;;		_acaoFlap
 17538 ;;		_controle
 17539 ;; This function uses a non-reentrant model
 17540 ;;
 17541                           
 17542                           	psect	text22
 17543  005C0A                     __ptext22:
 17544                           	opt stack 0
 17545  005C0A                     _setLed:
 17546                           	opt stack 23
 17547                           
 17548                           ;incstack = 0
 17549                           ;setLed@led stored from wreg
 17550  005C0A  0100               	movlb	0	; () banked
 17551  005C0C  6F61               	movwf	setLed@led& (0+255),b
 17552                           
 17553                           ;Led_display.h: 19: if (acao) {
 17554  005C0E  0100               	movlb	0	; () banked
 17555  005C10  5160               	movf	setLed@acao& (0+255),w,b
 17556  005C12  B4D8               	btfsc	status,2,c
 17557  005C14  D004               	goto	l221
 17558                           
 17559                           ; BSR set to: 0
 17560                           ;Led_display.h: 20: leds = leds | led;
 17561  005C16  5043               	movf	_leds,w,c
 17562  005C18  1161               	iorwf	setLed@led& (0+255),w,b
 17563  005C1A  6E43               	movwf	_leds,c
 17564                           
 17565                           ;Led_display.h: 22: } else {
 17566  005C1C  0012               	return	
 17567  005C1E                     l221:
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;Led_display.h: 23: leds = leds&~led;
 17571                           
 17572                           ; BSR set to: 0
 17573  005C1E  5161               	movf	setLed@led& (0+255),w,b
 17574  005C20  0AFF               	xorlw	255
 17575  005C22  1443               	andwf	_leds,w,c
 17576  005C24  6E43               	movwf	_leds,c
 17577  005C26  0012               	return	
 17578  005C28                     __end_of_setLed:
 17579                           	opt stack 0
 17580                           tblptru	equ	0xFF8
 17581                           tblptrh	equ	0xFF7
 17582                           tblptrl	equ	0xFF6
 17583                           tablat	equ	0xFF5
 17584                           prodh	equ	0xFF4
 17585                           prodl	equ	0xFF3
 17586                           intcon	equ	0xFF2
 17587                           intcon2	equ	0xFF1
 17588                           intcon3	equ	0xFF0
 17589                           postinc0	equ	0xFEE
 17590                           wreg	equ	0xFE8
 17591                           indf1	equ	0xFE7
 17592                           postdec1	equ	0xFE5
 17593                           fsr1h	equ	0xFE2
 17594                           fsr1l	equ	0xFE1
 17595                           indf2	equ	0xFDF
 17596                           postinc2	equ	0xFDE
 17597                           postdec2	equ	0xFDD
 17598                           fsr2h	equ	0xFDA
 17599                           fsr2l	equ	0xFD9
 17600                           status	equ	0xFD8
 17601                           
 17602 ;; *************** function _climaAtual *****************
 17603 ;; Defined at:
 17604 ;;		line 34 in file "src/FuncoesControlador.h"
 17605 ;; Parameters:    Size  Location     Type
 17606 ;;  c               1    wreg     unsigned char 
 17607 ;; Auto vars:     Size  Location     Type
 17608 ;;  c               1    2[BANK0 ] unsigned char 
 17609 ;; Return value:  Size  Location     Type
 17610 ;;                  2    0[BANK0 ] PTR unsigned char 
 17611 ;; Registers used:
 17612 ;;		wreg, status,2, status,0
 17613 ;; Tracked objects:
 17614 ;;		On entry : 0/0
 17615 ;;		On exit  : 0/0
 17616 ;;		Unchanged: 0/0
 17617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17618 ;;      Params:         0       2       0       0       0       0       0       0       0
 17619 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17621 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17622 ;;Total ram usage:        3 bytes
 17623 ;; Hardware stack levels used:    1
 17624 ;; Hardware stack levels required when called:    6
 17625 ;; This function calls:
 17626 ;;		Nothing
 17627 ;; This function is called by:
 17628 ;;		_main
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           	psect	text23
 17633  0057C6                     __ptext23:
 17634                           	opt stack 0
 17635  0057C6                     _climaAtual:
 17636                           	opt stack 24
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;incstack = 0
 17640                           ;climaAtual@c stored from wreg
 17641  0057C6  0100               	movlb	0	; () banked
 17642  0057C8  6F62               	movwf	climaAtual@c& (0+255),b
 17643                           
 17644                           ;FuncoesControlador.h: 35: switch (c) {
 17645  0057CA  D015               	goto	l905
 17646  0057CC  0EBA               	movlw	low STR_6
 17647  0057CE  0100               	movlb	0	; () banked
 17648  0057D0  6F60               	movwf	?_climaAtual& (0+255),b
 17649  0057D2  0E7F               	movlw	high STR_6
 17650  0057D4  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17651                           
 17652                           ; BSR set to: 0
 17653  0057D6  0012               	return	
 17654  0057D8                     
 17655                           ; BSR set to: 0
 17656                           
 17657                           ; BSR set to: 0
 17658  0057D8  0E91               	movlw	low STR_7
 17659  0057DA  6F60               	movwf	?_climaAtual& (0+255),b
 17660  0057DC  0E7F               	movlw	high STR_7
 17661  0057DE  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17662                           
 17663                           ; BSR set to: 0
 17664  0057E0  0012               	return	
 17665  0057E2                     
 17666                           ; BSR set to: 0
 17667                           
 17668                           ; BSR set to: 0
 17669  0057E2  0ED5               	movlw	low STR_8
 17670  0057E4  6F60               	movwf	?_climaAtual& (0+255),b
 17671  0057E6  0E7F               	movlw	high STR_8
 17672  0057E8  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17673                           
 17674                           ; BSR set to: 0
 17675  0057EA  0012               	return	
 17676  0057EC                     
 17677                           ; BSR set to: 0
 17678                           
 17679                           ; BSR set to: 0
 17680  0057EC  0EEC               	movlw	low STR_9
 17681  0057EE  6F60               	movwf	?_climaAtual& (0+255),b
 17682  0057F0  0E7F               	movlw	high STR_9
 17683  0057F2  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;FuncoesControlador.h: 41: }
 17687                           
 17688                           ; BSR set to: 0
 17689  0057F4  0012               	return	
 17690  0057F6                     l905:
 17691                           
 17692                           ; BSR set to: 0
 17693  0057F6  0100               	movlb	0	; () banked
 17694  0057F8  5162               	movf	climaAtual@c& (0+255),w,b
 17695                           
 17696                           ; Switch size 1, requested type "space"
 17697                           ; Number of cases is 3, Range of values is 1 to 3
 17698                           ; switch strategies available:
 17699                           ; Name         Instructions Cycles
 17700                           ; simple_byte           10     6 (average)
 17701                           ;	Chosen strategy is simple_byte
 17702  0057FA  0A01               	xorlw	1	; case 1
 17703  0057FC  B4D8               	btfsc	status,2,c
 17704  0057FE  D7E6               	goto	l906
 17705  005800  0A03               	xorlw	3	; case 2
 17706  005802  B4D8               	btfsc	status,2,c
 17707  005804  D7E9               	goto	l908
 17708  005806  0A01               	xorlw	1	; case 3
 17709  005808  B4D8               	btfsc	status,2,c
 17710  00580A  D7EB               	goto	l909
 17711  00580C  D7EF               	goto	l910
 17712  00580E                     __end_of_climaAtual:
 17713                           	opt stack 0
 17714                           tblptru	equ	0xFF8
 17715                           tblptrh	equ	0xFF7
 17716                           tblptrl	equ	0xFF6
 17717                           tablat	equ	0xFF5
 17718                           prodh	equ	0xFF4
 17719                           prodl	equ	0xFF3
 17720                           intcon	equ	0xFF2
 17721                           intcon2	equ	0xFF1
 17722                           intcon3	equ	0xFF0
 17723                           postinc0	equ	0xFEE
 17724                           wreg	equ	0xFE8
 17725                           indf1	equ	0xFE7
 17726                           postdec1	equ	0xFE5
 17727                           fsr1h	equ	0xFE2
 17728                           fsr1l	equ	0xFE1
 17729                           indf2	equ	0xFDF
 17730                           postinc2	equ	0xFDE
 17731                           postdec2	equ	0xFDD
 17732                           fsr2h	equ	0xFDA
 17733                           fsr2l	equ	0xFD9
 17734                           status	equ	0xFD8
 17735                           
 17736 ;; *************** function _btPress *****************
 17737 ;; Defined at:
 17738 ;;		line 26 in file "src/Teclado.h"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  bt              1    wreg     unsigned char 
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;  bt              1    0[BANK0 ] unsigned char 
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      unsigned char 
 17745 ;; Registers used:
 17746 ;;		wreg, status,2, status,0
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17752 ;;      Params:         0       0       0       0       0       0       0       0       0
 17753 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17754 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17755 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17756 ;;Total ram usage:        1 bytes
 17757 ;; Hardware stack levels used:    1
 17758 ;; Hardware stack levels required when called:    6
 17759 ;; This function calls:
 17760 ;;		Nothing
 17761 ;; This function is called by:
 17762 ;;		_main
 17763 ;; This function uses a non-reentrant model
 17764 ;;
 17765                           
 17766                           	psect	text24
 17767  005C28                     __ptext24:
 17768                           	opt stack 0
 17769  005C28                     _btPress:
 17770                           	opt stack 24
 17771                           
 17772                           ; BSR set to: 0
 17773                           ;incstack = 0
 17774                           ;btPress@bt stored from wreg
 17775  005C28  0100               	movlb	0	; () banked
 17776  005C2A  6F60               	movwf	btPress@bt& (0+255),b
 17777                           
 17778                           ;Teclado.h: 27: if (bt_flag == bt) {
 17779  005C2C  0100               	movlb	0	; () banked
 17780  005C2E  5160               	movf	btPress@bt& (0+255),w,b
 17781  005C30  1842               	xorwf	_bt_flag,w,c
 17782  005C32  B4D8               	btfsc	status,2,c
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 17786  005C34  A481               	btfss	3969,2,c	;volatile
 17787  005C36  D004               	goto	l300
 17788                           
 17789                           ; BSR set to: 0
 17790                           ;Teclado.h: 29: bt_flag = 0;
 17791  005C38  0E00               	movlw	0
 17792  005C3A  6E42               	movwf	_bt_flag,c
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;Teclado.h: 30: return 1;
 17796  005C3C  0E01               	movlw	1
 17797                           
 17798                           ; BSR set to: 0
 17799  005C3E  0012               	return	
 17800  005C40                     l300:
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;Teclado.h: 31: }
 17804                           ;Teclado.h: 32: }
 17805                           ;Teclado.h: 33: return 0;
 17806                           
 17807                           ; BSR set to: 0
 17808                           
 17809                           ; BSR set to: 0
 17810  005C40  0E00               	movlw	0
 17811  005C42  0012               	return	
 17812  005C44                     __end_of_btPress:
 17813                           	opt stack 0
 17814                           tblptru	equ	0xFF8
 17815                           tblptrh	equ	0xFF7
 17816                           tblptrl	equ	0xFF6
 17817                           tablat	equ	0xFF5
 17818                           prodh	equ	0xFF4
 17819                           prodl	equ	0xFF3
 17820                           intcon	equ	0xFF2
 17821                           intcon2	equ	0xFF1
 17822                           intcon3	equ	0xFF0
 17823                           postinc0	equ	0xFEE
 17824                           wreg	equ	0xFE8
 17825                           indf1	equ	0xFE7
 17826                           postdec1	equ	0xFE5
 17827                           fsr1h	equ	0xFE2
 17828                           fsr1l	equ	0xFE1
 17829                           indf2	equ	0xFDF
 17830                           postinc2	equ	0xFDE
 17831                           postdec2	equ	0xFDD
 17832                           fsr2h	equ	0xFDA
 17833                           fsr2l	equ	0xFD9
 17834                           status	equ	0xFD8
 17835                           
 17836 ;; *************** function _blink *****************
 17837 ;; Defined at:
 17838 ;;		line 212 in file "src/lcd.h"
 17839 ;; Parameters:    Size  Location     Type
 17840 ;;  line            2    0[BANK0 ] PTR unsigned char 
 17841 ;;		 -> line3(21), line2(21), line1(21), 
 17842 ;;  start           1    2[BANK0 ] unsigned char 
 17843 ;;  end             1    3[BANK0 ] unsigned char 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;  i               1    4[BANK0 ] unsigned char 
 17846 ;; Return value:  Size  Location     Type
 17847 ;;                  1    wreg      void 
 17848 ;; Registers used:
 17849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17855 ;;      Params:         0       4       0       0       0       0       0       0       0
 17856 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17857 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17858 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17859 ;;Total ram usage:        5 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; Hardware stack levels required when called:    6
 17862 ;; This function calls:
 17863 ;;		Nothing
 17864 ;; This function is called by:
 17865 ;;		_main
 17866 ;; This function uses a non-reentrant model
 17867 ;;
 17868                           
 17869                           	psect	text25
 17870  0059B8                     __ptext25:
 17871                           	opt stack 0
 17872  0059B8                     _blink:
 17873                           	opt stack 24
 17874                           
 17875                           ;lcd.h: 213: if (blinkk) {
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;incstack = 0
 17879  0059B8  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17880  0059BA  0012               	return	
 17881                           
 17882                           ;lcd.h: 214: char i = 0;
 17883  0059BC  0E00               	movlw	0
 17884  0059BE  0100               	movlb	0	; () banked
 17885  0059C0  6F64               	movwf	blink@i& (0+255),b
 17886                           
 17887                           ; BSR set to: 0
 17888                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 17889  0059C2  0762               	decf	blink@start& (0+255),f,b
 17890  0059C4  C062  F064         	movff	blink@start,blink@i
 17891  0059C8  D00B               	goto	l288
 17892  0059CA                     
 17893                           ; BSR set to: 0
 17894                           ;lcd.h: 216: line[i] = ' ';
 17895                           
 17896                           ; BSR set to: 0
 17897  0059CA  5164               	movf	blink@i& (0+255),w,b
 17898  0059CC  0D01               	mullw	1
 17899  0059CE  50F3               	movf	prodl,w,c
 17900  0059D0  2560               	addwf	blink@line& (0+255),w,b
 17901  0059D2  6ED9               	movwf	fsr2l,c
 17902  0059D4  50F4               	movf	prodh,w,c
 17903  0059D6  2161               	addwfc	(blink@line+1)& (0+255),w,b
 17904  0059D8  6EDA               	movwf	fsr2h,c
 17905  0059DA  0E20               	movlw	32
 17906  0059DC  6EDF               	movwf	indf2,c
 17907                           
 17908                           ; BSR set to: 0
 17909  0059DE  2B64               	incf	blink@i& (0+255),f,b
 17910  0059E0                     l288:
 17911                           
 17912                           ; BSR set to: 0
 17913                           
 17914                           ; BSR set to: 0
 17915  0059E0  5163               	movf	blink@end& (0+255),w,b
 17916  0059E2  5D64               	subwf	blink@i& (0+255),w,b
 17917  0059E4  B0D8               	btfsc	status,0,c
 17918  0059E6  0012               	return	
 17919  0059E8  D7F0               	goto	l289
 17920  0059EA                     __end_of_blink:
 17921                           	opt stack 0
 17922                           tblptru	equ	0xFF8
 17923                           tblptrh	equ	0xFF7
 17924                           tblptrl	equ	0xFF6
 17925                           tablat	equ	0xFF5
 17926                           prodh	equ	0xFF4
 17927                           prodl	equ	0xFF3
 17928                           intcon	equ	0xFF2
 17929                           intcon2	equ	0xFF1
 17930                           intcon3	equ	0xFF0
 17931                           postinc0	equ	0xFEE
 17932                           wreg	equ	0xFE8
 17933                           indf1	equ	0xFE7
 17934                           postdec1	equ	0xFE5
 17935                           fsr1h	equ	0xFE2
 17936                           fsr1l	equ	0xFE1
 17937                           indf2	equ	0xFDF
 17938                           postinc2	equ	0xFDE
 17939                           postdec2	equ	0xFDD
 17940                           fsr2h	equ	0xFDA
 17941                           fsr2l	equ	0xFD9
 17942                           status	equ	0xFD8
 17943                           
 17944 ;; *************** function _alterarDadosConexaoConfigWifi *****************
 17945 ;; Defined at:
 17946 ;;		line 18 in file "src/conexaoWifi.h"
 17947 ;; Parameters:    Size  Location     Type
 17948 ;;		None
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  i               1  128[BANK0 ] unsigned char 
 17951 ;; Return value:  Size  Location     Type
 17952 ;;                  1    wreg      void 
 17953 ;; Registers used:
 17954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17955 ;; Tracked objects:
 17956 ;;		On entry : 0/0
 17957 ;;		On exit  : 0/0
 17958 ;;		Unchanged: 0/0
 17959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17960 ;;      Params:         0       0       0       0       0       0       0       0       0
 17961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17964 ;;Total ram usage:        1 bytes
 17965 ;; Hardware stack levels used:    1
 17966 ;; Hardware stack levels required when called:   10
 17967 ;; This function calls:
 17968 ;;		_atualizaLCD
 17969 ;;		_delay
 17970 ;;		_findBufferSerial
 17971 ;;		_getStringJSON
 17972 ;;		_printf
 17973 ;;		_setKeyStartReceiveSerial
 17974 ;;		_sprintf
 17975 ;;		_strlen
 17976 ;;		_strstr
 17977 ;;		_writeEEPROM_ext
 17978 ;; This function is called by:
 17979 ;;		_main
 17980 ;; This function uses a non-reentrant model
 17981 ;;
 17982                           
 17983                           	psect	text26
 17984  00313A                     __ptext26:
 17985                           	opt stack 0
 17986  00313A                     _alterarDadosConexaoConfigWifi:
 17987                           	opt stack 20
 17988                           
 17989                           ;conexaoWifi.h: 19: if (t_wifi_restart == 0) {
 17990                           
 17991                           ;incstack = 0
 17992  00313A  503E               	movf	_t_wifi_restart,w,c
 17993  00313C  A4D8               	btfss	status,2,c
 17994  00313E  D006               	goto	l972
 17995                           
 17996                           ;conexaoWifi.h: 20: menu = 8;
 17997  003140  0E08               	movlw	8
 17998  003142  0100               	movlb	0	; () banked
 17999  003144  6FFD               	movwf	_menu& (0+255),b
 18000                           
 18001                           ;conexaoWifi.h: 21: opcaomenu = 1;
 18002  003146  0E01               	movlw	1
 18003  003148  6E45               	movwf	_opcaomenu,c
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;conexaoWifi.h: 23: } else {
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;conexaoWifi.h: 22: return;
 18010  00314A  0012               	return	
 18011  00314C                     l972:
 18012                           
 18013                           ;conexaoWifi.h: 24: delay(10);
 18014                           
 18015                           ; BSR set to: 0
 18016  00314C  0E00               	movlw	0
 18017  00314E  0100               	movlb	0	; () banked
 18018  003150  6F61               	movwf	(delay@x+1)& (0+255),b
 18019  003152  0E0A               	movlw	10
 18020  003154  6F60               	movwf	delay@x& (0+255),b
 18021  003156  EC6B  F02D         	call	_delay	;wreg free
 18022                           
 18023                           ;conexaoWifi.h: 25: switch (f_wifi_processo) {
 18024  00315A  D254               	goto	l975
 18025  00315C                     
 18026                           ;conexaoWifi.h: 27: setKeyStartReceiveSerial("ALL");
 18027  00315C  0EE2               	movlw	low STR_10
 18028  00315E  0100               	movlb	0	; () banked
 18029  003160  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18030  003162  0E7F               	movlw	high STR_10
 18031  003164  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18032  003166  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18033                           
 18034                           ;conexaoWifi.h: 28: printf("AT+CWMODE=2\r\n");
 18035  00316A  0E56               	movlw	low STR_11
 18036  00316C  0100               	movlb	0	; () banked
 18037  00316E  6F81               	movwf	printf@f& (0+255),b
 18038  003170  0E7E               	movlw	high STR_11
 18039  003172  6F82               	movwf	(printf@f+1)& (0+255),b
 18040  003174  EC8B  F02C         	call	_printf	;wreg free
 18041                           
 18042                           ;conexaoWifi.h: 29: wifi_conectado = 0;
 18043  003178  0E00               	movlw	0
 18044  00317A  6E49               	movwf	_wifi_conectado,c
 18045                           
 18046                           ;conexaoWifi.h: 30: f_wifi_processo++;
 18047  00317C  2A3D               	incf	_f_wifi_processo,f,c
 18048                           
 18049                           ;conexaoWifi.h: 31: break;
 18050  00317E  0012               	return	
 18051  003180                     
 18052                           ;conexaoWifi.h: 33: if (findBufferSerial("OK")) {
 18053  003180  0EEF               	movlw	low STR_12
 18054  003182  0100               	movlb	0	; () banked
 18055  003184  6F74               	movwf	findBufferSerial@key& (0+255),b
 18056  003186  0E7F               	movlw	high STR_12
 18057  003188  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18058  00318A  EC94  F02D         	call	_findBufferSerial	;wreg free
 18059  00318E  0900               	iorlw	0
 18060  003190  B4D8               	btfsc	status,2,c
 18061  003192  0012               	return	
 18062                           
 18063                           ;conexaoWifi.h: 34: f_wifi_processo++;
 18064  003194  2A3D               	incf	_f_wifi_processo,f,c
 18065                           
 18066                           ;conexaoWifi.h: 35: }
 18067                           ;conexaoWifi.h: 36: break;
 18068  003196  0012               	return	
 18069  003198                     
 18070                           ;conexaoWifi.h: 38: setKeyStartReceiveSerial("ALL");
 18071  003198  0EE2               	movlw	low STR_10
 18072  00319A  0100               	movlb	0	; () banked
 18073  00319C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18074  00319E  0E7F               	movlw	high STR_10
 18075  0031A0  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18076  0031A2  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18077                           
 18078                           ;conexaoWifi.h: 39: printf("AT+CIPMUX=1\r\n");
 18079  0031A6  0E48               	movlw	low STR_14
 18080  0031A8  0100               	movlb	0	; () banked
 18081  0031AA  6F81               	movwf	printf@f& (0+255),b
 18082  0031AC  0E7E               	movlw	high STR_14
 18083  0031AE  6F82               	movwf	(printf@f+1)& (0+255),b
 18084  0031B0  EC8B  F02C         	call	_printf	;wreg free
 18085                           
 18086                           ;conexaoWifi.h: 40: f_wifi_processo++;
 18087  0031B4  2A3D               	incf	_f_wifi_processo,f,c
 18088                           
 18089                           ;conexaoWifi.h: 41: break;
 18090  0031B6  0012               	return	
 18091  0031B8                     
 18092                           ;conexaoWifi.h: 43: if (findBufferSerial("OK")) {
 18093  0031B8  0EEF               	movlw	low STR_12
 18094  0031BA  0100               	movlb	0	; () banked
 18095  0031BC  6F74               	movwf	findBufferSerial@key& (0+255),b
 18096  0031BE  0E7F               	movlw	high STR_12
 18097  0031C0  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18098  0031C2  EC94  F02D         	call	_findBufferSerial	;wreg free
 18099  0031C6  0900               	iorlw	0
 18100  0031C8  B4D8               	btfsc	status,2,c
 18101  0031CA  0012               	return	
 18102                           
 18103                           ;conexaoWifi.h: 44: f_wifi_processo++;
 18104  0031CC  2A3D               	incf	_f_wifi_processo,f,c
 18105                           
 18106                           ;conexaoWifi.h: 45: }
 18107                           ;conexaoWifi.h: 46: break;
 18108  0031CE  0012               	return	
 18109  0031D0                     
 18110                           ;conexaoWifi.h: 48: setKeyStartReceiveSerial("ALL");
 18111  0031D0  0EE2               	movlw	low STR_10
 18112  0031D2  0100               	movlb	0	; () banked
 18113  0031D4  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18114  0031D6  0E7F               	movlw	high STR_10
 18115  0031D8  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18116  0031DA  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18117                           
 18118                           ;conexaoWifi.h: 49: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18119  0031DE  0E83               	movlw	low STR_17
 18120  0031E0  0100               	movlb	0	; () banked
 18121  0031E2  6F81               	movwf	printf@f& (0+255),b
 18122  0031E4  0E7B               	movlw	high STR_17
 18123  0031E6  6F82               	movwf	(printf@f+1)& (0+255),b
 18124  0031E8  EC8B  F02C         	call	_printf	;wreg free
 18125                           
 18126                           ;conexaoWifi.h: 50: f_wifi_processo++;
 18127  0031EC  2A3D               	incf	_f_wifi_processo,f,c
 18128                           
 18129                           ;conexaoWifi.h: 51: break;
 18130  0031EE  0012               	return	
 18131  0031F0                     
 18132                           ;conexaoWifi.h: 53: if (findBufferSerial("OK")) {
 18133  0031F0  0EEF               	movlw	low STR_12
 18134  0031F2  0100               	movlb	0	; () banked
 18135  0031F4  6F74               	movwf	findBufferSerial@key& (0+255),b
 18136  0031F6  0E7F               	movlw	high STR_12
 18137  0031F8  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18138  0031FA  EC94  F02D         	call	_findBufferSerial	;wreg free
 18139  0031FE  0900               	iorlw	0
 18140  003200  B4D8               	btfsc	status,2,c
 18141  003202  0012               	return	
 18142                           
 18143                           ;conexaoWifi.h: 54: f_wifi_processo++;
 18144  003204  2A3D               	incf	_f_wifi_processo,f,c
 18145                           
 18146                           ;conexaoWifi.h: 55: }
 18147                           ;conexaoWifi.h: 56: break;
 18148  003206  0012               	return	
 18149  003208                     
 18150                           ;conexaoWifi.h: 58: setKeyStartReceiveSerial("ALL");
 18151  003208  0EE2               	movlw	low STR_10
 18152  00320A  0100               	movlb	0	; () banked
 18153  00320C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18154  00320E  0E7F               	movlw	high STR_10
 18155  003210  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18156  003212  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18157                           
 18158                           ;conexaoWifi.h: 59: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18159  003216  0EC2               	movlw	low STR_20
 18160  003218  0100               	movlb	0	; () banked
 18161  00321A  6F81               	movwf	printf@f& (0+255),b
 18162  00321C  0E7B               	movlw	high STR_20
 18163  00321E  6F82               	movwf	(printf@f+1)& (0+255),b
 18164  003220  EC8B  F02C         	call	_printf	;wreg free
 18165                           
 18166                           ;conexaoWifi.h: 60: f_wifi_processo++;
 18167  003224  2A3D               	incf	_f_wifi_processo,f,c
 18168                           
 18169                           ;conexaoWifi.h: 61: break;
 18170  003226  0012               	return	
 18171  003228                     
 18172                           ;conexaoWifi.h: 63: if (findBufferSerial("OK")) {
 18173  003228  0EEF               	movlw	low STR_12
 18174  00322A  0100               	movlb	0	; () banked
 18175  00322C  6F74               	movwf	findBufferSerial@key& (0+255),b
 18176  00322E  0E7F               	movlw	high STR_12
 18177  003230  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18178  003232  EC94  F02D         	call	_findBufferSerial	;wreg free
 18179  003236  0900               	iorlw	0
 18180  003238  B4D8               	btfsc	status,2,c
 18181  00323A  0012               	return	
 18182                           
 18183                           ;conexaoWifi.h: 64: f_wifi_processo++;
 18184  00323C  2A3D               	incf	_f_wifi_processo,f,c
 18185                           
 18186                           ;conexaoWifi.h: 65: }
 18187                           ;conexaoWifi.h: 66: break;
 18188  00323E  0012               	return	
 18189  003240                     
 18190                           ;conexaoWifi.h: 68: setKeyStartReceiveSerial("ALL");
 18191  003240  0EE2               	movlw	low STR_10
 18192  003242  0100               	movlb	0	; () banked
 18193  003244  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18194  003246  0E7F               	movlw	high STR_10
 18195  003248  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18196  00324A  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18197                           
 18198                           ;conexaoWifi.h: 69: printf("AT+CIPSERVER=1,80\r\n");
 18199  00324E  0E42               	movlw	low STR_23
 18200  003250  0100               	movlb	0	; () banked
 18201  003252  6F81               	movwf	printf@f& (0+255),b
 18202  003254  0E7C               	movlw	high STR_23
 18203  003256  6F82               	movwf	(printf@f+1)& (0+255),b
 18204  003258  EC8B  F02C         	call	_printf	;wreg free
 18205                           
 18206                           ;conexaoWifi.h: 70: f_wifi_processo++;
 18207  00325C  2A3D               	incf	_f_wifi_processo,f,c
 18208                           
 18209                           ;conexaoWifi.h: 71: break;
 18210  00325E  0012               	return	
 18211  003260                     
 18212                           ;conexaoWifi.h: 73: if (findBufferSerial("OK")) {
 18213  003260  0EEF               	movlw	low STR_12
 18214  003262  0100               	movlb	0	; () banked
 18215  003264  6F74               	movwf	findBufferSerial@key& (0+255),b
 18216  003266  0E7F               	movlw	high STR_12
 18217  003268  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18218  00326A  EC94  F02D         	call	_findBufferSerial	;wreg free
 18219  00326E  0900               	iorlw	0
 18220  003270  B4D8               	btfsc	status,2,c
 18221  003272  0012               	return	
 18222                           
 18223                           ;conexaoWifi.h: 74: setKeyStartReceiveSerial("Accept");
 18224  003274  0EAD               	movlw	low STR_25
 18225  003276  0100               	movlb	0	; () banked
 18226  003278  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18227  00327A  0E7F               	movlw	high STR_25
 18228  00327C  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18229  00327E  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18230                           
 18231                           ;conexaoWifi.h: 75: f_wifi_processo++;
 18232  003282  2A3D               	incf	_f_wifi_processo,f,c
 18233                           
 18234                           ;conexaoWifi.h: 76: t_wifi_restart = 180;
 18235  003284  0EB4               	movlw	180
 18236  003286  6E3E               	movwf	_t_wifi_restart,c
 18237                           
 18238                           ;conexaoWifi.h: 77: }
 18239                           ;conexaoWifi.h: 78: break;
 18240  003288  0012               	return	
 18241  00328A                     
 18242                           ;conexaoWifi.h: 80: sprintf(line1, "Conecte-se a rede e");
 18243  00328A  0E91               	movlw	low _line1
 18244  00328C  0100               	movlb	0	; () banked
 18245  00328E  6F81               	movwf	sprintf@wh& (0+255),b
 18246  003290  0E01               	movlw	high _line1
 18247  003292  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18248  003294  0ECE               	movlw	low STR_26
 18249  003296  6F83               	movwf	sprintf@f& (0+255),b
 18250  003298  0E7C               	movlw	high STR_26
 18251  00329A  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18252  00329C  EC07  F02C         	call	_sprintf	;wreg free
 18253                           
 18254                           ;conexaoWifi.h: 81: sprintf(line2, "acesse o IP para");
 18255  0032A0  0E7C               	movlw	low _line2
 18256  0032A2  0100               	movlb	0	; () banked
 18257  0032A4  6F81               	movwf	sprintf@wh& (0+255),b
 18258  0032A6  0E01               	movlw	high _line2
 18259  0032A8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18260  0032AA  0E9A               	movlw	low STR_27
 18261  0032AC  6F83               	movwf	sprintf@f& (0+255),b
 18262  0032AE  0E7D               	movlw	high STR_27
 18263  0032B0  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18264  0032B2  EC07  F02C         	call	_sprintf	;wreg free
 18265                           
 18266                           ;conexaoWifi.h: 82: sprintf(line3, "configurar o WIFI...");
 18267  0032B6  0E67               	movlw	low _line3
 18268  0032B8  0100               	movlb	0	; () banked
 18269  0032BA  6F81               	movwf	sprintf@wh& (0+255),b
 18270  0032BC  0E01               	movlw	high _line3
 18271  0032BE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18272  0032C0  0E18               	movlw	low STR_28
 18273  0032C2  6F83               	movwf	sprintf@f& (0+255),b
 18274  0032C4  0E7C               	movlw	high STR_28
 18275  0032C6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18276  0032C8  EC07  F02C         	call	_sprintf	;wreg free
 18277                           
 18278                           ;conexaoWifi.h: 83: sprintf(line4, "10.1.1.1");
 18279  0032CC  0E52               	movlw	low _line4
 18280  0032CE  0100               	movlb	0	; () banked
 18281  0032D0  6F81               	movwf	sprintf@wh& (0+255),b
 18282  0032D2  0E01               	movlw	high _line4
 18283  0032D4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18284  0032D6  0E39               	movlw	low STR_29
 18285  0032D8  6F83               	movwf	sprintf@f& (0+255),b
 18286  0032DA  0E7F               	movlw	high STR_29
 18287  0032DC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18288  0032DE  EC07  F02C         	call	_sprintf	;wreg free
 18289                           
 18290                           ;conexaoWifi.h: 84: if (findBufferSerial("Accept")) {
 18291  0032E2  0EAD               	movlw	low STR_25
 18292  0032E4  0100               	movlb	0	; () banked
 18293  0032E6  6F74               	movwf	findBufferSerial@key& (0+255),b
 18294  0032E8  0E7F               	movlw	high STR_25
 18295  0032EA  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18296  0032EC  EC94  F02D         	call	_findBufferSerial	;wreg free
 18297  0032F0  0900               	iorlw	0
 18298  0032F2  B4D8               	btfsc	status,2,c
 18299  0032F4  0012               	return	
 18300                           
 18301                           ;conexaoWifi.h: 85: delay(400);
 18302  0032F6  0E01               	movlw	1
 18303  0032F8  0100               	movlb	0	; () banked
 18304  0032FA  6F61               	movwf	(delay@x+1)& (0+255),b
 18305  0032FC  0E90               	movlw	144
 18306  0032FE  6F60               	movwf	delay@x& (0+255),b
 18307  003300  EC6B  F02D         	call	_delay	;wreg free
 18308                           
 18309                           ;conexaoWifi.h: 86: f_wifi_processo++;
 18310  003304  2A3D               	incf	_f_wifi_processo,f,c
 18311                           
 18312                           ;conexaoWifi.h: 87: }
 18313                           ;conexaoWifi.h: 88: break;
 18314  003306  0012               	return	
 18315  003308                     
 18316                           ;conexaoWifi.h: 90: setKeyStartReceiveSerial("ALL");
 18317  003308  0EE2               	movlw	low STR_10
 18318  00330A  0100               	movlb	0	; () banked
 18319  00330C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18320  00330E  0E7F               	movlw	high STR_10
 18321  003310  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18322  003312  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18323                           
 18324                           ;conexaoWifi.h: 91: printf("AT+CIPSENDEX=0,800\r\n");
 18325  003316  0E03               	movlw	low STR_32
 18326  003318  0100               	movlb	0	; () banked
 18327  00331A  6F81               	movwf	printf@f& (0+255),b
 18328  00331C  0E7C               	movlw	high STR_32
 18329  00331E  6F82               	movwf	(printf@f+1)& (0+255),b
 18330  003320  EC8B  F02C         	call	_printf	;wreg free
 18331                           
 18332                           ;conexaoWifi.h: 92: f_wifi_processo++;
 18333  003324  2A3D               	incf	_f_wifi_processo,f,c
 18334                           
 18335                           ;conexaoWifi.h: 93: break;
 18336  003326  0012               	return	
 18337  003328                     
 18338                           ;conexaoWifi.h: 95: if (strstr(bufferSerial, ">") != (0)) {
 18339  003328  0E69               	movlw	low _bufferSerial
 18340  00332A  0100               	movlb	0	; () banked
 18341  00332C  6F6F               	movwf	strstr@s1& (0+255),b
 18342  00332E  0E02               	movlw	high _bufferSerial
 18343  003330  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18344  003332  0E7C               	movlw	low (STR_122+18)
 18345  003334  6F71               	movwf	strstr@s2& (0+255),b
 18346  003336  0E7C               	movlw	high (STR_122+18)
 18347  003338  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18348  00333A  ECAD  F026         	call	_strstr	;wreg free
 18349  00333E  0100               	movlb	0	; () banked
 18350  003340  516F               	movf	?_strstr& (0+255),w,b
 18351  003342  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18352  003344  B4D8               	btfsc	status,2,c
 18353  003346  0012               	return	
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;conexaoWifi.h: 96: f_wifi_processo++;
 18357  003348  2A3D               	incf	_f_wifi_processo,f,c
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;conexaoWifi.h: 97: }
 18361                           ;conexaoWifi.h: 98: break;
 18362  00334A  0012               	return	
 18363  00334C                     
 18364                           ;conexaoWifi.h: 100: setKeyStartReceiveSerial("ALL");
 18365                           
 18366                           ; BSR set to: 0
 18367  00334C  0EE2               	movlw	low STR_10
 18368  00334E  0100               	movlb	0	; () banked
 18369  003350  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18370  003352  0E7F               	movlw	high STR_10
 18371  003354  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18372  003356  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18373                           
 18374                           ;conexaoWifi.h: 101: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18375  00335A  0E56               	movlw	low STR_35
 18376  00335C  0100               	movlb	0	; () banked
 18377  00335E  6F81               	movwf	printf@f& (0+255),b
 18378  003360  0E7B               	movlw	high STR_35
 18379  003362  6F82               	movwf	(printf@f+1)& (0+255),b
 18380  003364  EC8B  F02C         	call	_printf	;wreg free
 18381                           
 18382                           ;conexaoWifi.h: 102: delay(100);
 18383  003368  0E00               	movlw	0
 18384  00336A  0100               	movlb	0	; () banked
 18385  00336C  6F61               	movwf	(delay@x+1)& (0+255),b
 18386  00336E  0E64               	movlw	100
 18387  003370  6F60               	movwf	delay@x& (0+255),b
 18388  003372  EC6B  F02D         	call	_delay	;wreg free
 18389                           
 18390                           ;conexaoWifi.h: 103: printf("<html><style>div{margin:25px auto;max-width:350px;display:f
      +                          lex;flex-direction:column;}input,button{padding:7px;margin-bottom:25px;border:1px solid 
      +                          #888;border-radius:3px;}</style><body><div> <h2>Configuração Wifi</h2> SSID: <input id='
      +                          s' valu
 18391  003376  0E59               	movlw	low STR_36
 18392  003378  0100               	movlb	0	; () banked
 18393  00337A  6F81               	movwf	printf@f& (0+255),b
 18394  00337C  0E78               	movlw	high STR_36
 18395  00337E  6F82               	movwf	(printf@f+1)& (0+255),b
 18396  003380  0EC9               	movlw	low _ssid
 18397  003382  6F83               	movwf	(?_printf+2)& (0+255),b
 18398  003384  0E01               	movlw	high _ssid
 18399  003386  6F84               	movwf	(?_printf+3)& (0+255),b
 18400  003388  0EBA               	movlw	low _senha
 18401  00338A  6F85               	movwf	(?_printf+4)& (0+255),b
 18402  00338C  0E01               	movlw	high _senha
 18403  00338E  6F86               	movwf	(?_printf+5)& (0+255),b
 18404  003390  0EA6               	movlw	low _ipServer
 18405  003392  6F87               	movwf	(?_printf+6)& (0+255),b
 18406  003394  0E01               	movlw	high _ipServer
 18407  003396  6F88               	movwf	(?_printf+7)& (0+255),b
 18408  003398  0EE2               	movlw	low _portServer
 18409  00339A  6F89               	movwf	(?_printf+8)& (0+255),b
 18410  00339C  0E01               	movlw	high _portServer
 18411  00339E  6F8A               	movwf	(?_printf+9)& (0+255),b
 18412  0033A0  EC8B  F02C         	call	_printf	;wreg free
 18413                           
 18414                           ;conexaoWifi.h: 104: delay(800);
 18415  0033A4  0E03               	movlw	3
 18416  0033A6  0100               	movlb	0	; () banked
 18417  0033A8  6F61               	movwf	(delay@x+1)& (0+255),b
 18418  0033AA  0E20               	movlw	32
 18419  0033AC  6F60               	movwf	delay@x& (0+255),b
 18420  0033AE  EC6B  F02D         	call	_delay	;wreg free
 18421                           
 18422                           ;conexaoWifi.h: 105: printf("AT+CIPCLOSE=0\r\n");
 18423  0033B2  0EEF               	movlw	low STR_37
 18424  0033B4  0100               	movlb	0	; () banked
 18425  0033B6  6F81               	movwf	printf@f& (0+255),b
 18426  0033B8  0E7D               	movlw	high STR_37
 18427  0033BA  6F82               	movwf	(printf@f+1)& (0+255),b
 18428  0033BC  EC8B  F02C         	call	_printf	;wreg free
 18429                           
 18430                           ;conexaoWifi.h: 106: delay(300);
 18431  0033C0  0E01               	movlw	1
 18432  0033C2  0100               	movlb	0	; () banked
 18433  0033C4  6F61               	movwf	(delay@x+1)& (0+255),b
 18434  0033C6  0E2C               	movlw	44
 18435  0033C8  6F60               	movwf	delay@x& (0+255),b
 18436  0033CA  EC6B  F02D         	call	_delay	;wreg free
 18437                           
 18438                           ;conexaoWifi.h: 107: t_wifi_restart = 180;
 18439  0033CE  0EB4               	movlw	180
 18440  0033D0  6E3E               	movwf	_t_wifi_restart,c
 18441                           
 18442                           ;conexaoWifi.h: 108: setKeyStartReceiveSerial("$#");
 18443  0033D2  0EE6               	movlw	low STR_38
 18444  0033D4  0100               	movlb	0	; () banked
 18445  0033D6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18446  0033D8  0E7F               	movlw	high STR_38
 18447  0033DA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18448  0033DC  ECCE  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18449                           
 18450                           ;conexaoWifi.h: 109: f_wifi_processo++;
 18451  0033E0  2A3D               	incf	_f_wifi_processo,f,c
 18452                           
 18453                           ;conexaoWifi.h: 110: break;
 18454  0033E2  0012               	return	
 18455  0033E4                     
 18456                           ;conexaoWifi.h: 112: sprintf(line4, "Aguardando...");
 18457  0033E4  0E52               	movlw	low _line4
 18458  0033E6  0100               	movlb	0	; () banked
 18459  0033E8  6F81               	movwf	sprintf@wh& (0+255),b
 18460  0033EA  0E01               	movlw	high _line4
 18461  0033EC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18462  0033EE  0E72               	movlw	low STR_39
 18463  0033F0  6F83               	movwf	sprintf@f& (0+255),b
 18464  0033F2  0E7E               	movlw	high STR_39
 18465  0033F4  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18466  0033F6  EC07  F02C         	call	_sprintf	;wreg free
 18467                           
 18468                           ;conexaoWifi.h: 113: if (findBufferSerial("#$")) {
 18469  0033FA  0EE9               	movlw	low STR_40
 18470  0033FC  0100               	movlb	0	; () banked
 18471  0033FE  6F74               	movwf	findBufferSerial@key& (0+255),b
 18472  003400  0E7F               	movlw	high STR_40
 18473  003402  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18474  003404  EC94  F02D         	call	_findBufferSerial	;wreg free
 18475  003408  0900               	iorlw	0
 18476  00340A  B4D8               	btfsc	status,2,c
 18477  00340C  0012               	return	
 18478                           
 18479                           ;conexaoWifi.h: 114: getStringJSON(bufferSerial, "ss", ssid);
 18480  00340E  0E69               	movlw	low _bufferSerial
 18481  003410  0100               	movlb	0	; () banked
 18482  003412  6F91               	movwf	getStringJSON@buff& (0+255),b
 18483  003414  0E02               	movlw	high _bufferSerial
 18484  003416  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18485  003418  0EF2               	movlw	low STR_41
 18486  00341A  6F93               	movwf	getStringJSON@key& (0+255),b
 18487  00341C  0E7F               	movlw	high STR_41
 18488  00341E  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18489  003420  0EC9               	movlw	low _ssid
 18490  003422  6F95               	movwf	getStringJSON@ret& (0+255),b
 18491  003424  0E01               	movlw	high _ssid
 18492  003426  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18493  003428  EC31  F021         	call	_getStringJSON	;wreg free
 18494                           
 18495                           ;conexaoWifi.h: 115: getStringJSON(bufferSerial, "pw", senha);
 18496  00342C  0E69               	movlw	low _bufferSerial
 18497  00342E  0100               	movlb	0	; () banked
 18498  003430  6F91               	movwf	getStringJSON@buff& (0+255),b
 18499  003432  0E02               	movlw	high _bufferSerial
 18500  003434  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18501  003436  0EF8               	movlw	low STR_42
 18502  003438  6F93               	movwf	getStringJSON@key& (0+255),b
 18503  00343A  0E7F               	movlw	high STR_42
 18504  00343C  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18505  00343E  0EBA               	movlw	low _senha
 18506  003440  6F95               	movwf	getStringJSON@ret& (0+255),b
 18507  003442  0E01               	movlw	high _senha
 18508  003444  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18509  003446  EC31  F021         	call	_getStringJSON	;wreg free
 18510                           
 18511                           ;conexaoWifi.h: 116: getStringJSON(bufferSerial, "sv", ipServer);
 18512  00344A  0E69               	movlw	low _bufferSerial
 18513  00344C  0100               	movlb	0	; () banked
 18514  00344E  6F91               	movwf	getStringJSON@buff& (0+255),b
 18515  003450  0E02               	movlw	high _bufferSerial
 18516  003452  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18517  003454  0EF5               	movlw	low STR_43
 18518  003456  6F93               	movwf	getStringJSON@key& (0+255),b
 18519  003458  0E7F               	movlw	high STR_43
 18520  00345A  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18521  00345C  0EA6               	movlw	low _ipServer
 18522  00345E  6F95               	movwf	getStringJSON@ret& (0+255),b
 18523  003460  0E01               	movlw	high _ipServer
 18524  003462  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18525  003464  EC31  F021         	call	_getStringJSON	;wreg free
 18526                           
 18527                           ;conexaoWifi.h: 117: getStringJSON(bufferSerial, "pt", portServer);
 18528  003468  0E69               	movlw	low _bufferSerial
 18529  00346A  0100               	movlb	0	; () banked
 18530  00346C  6F91               	movwf	getStringJSON@buff& (0+255),b
 18531  00346E  0E02               	movlw	high _bufferSerial
 18532  003470  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18533  003472  0EB1               	movlw	low (STR_25+4)
 18534  003474  6F93               	movwf	getStringJSON@key& (0+255),b
 18535  003476  0E7F               	movlw	high (STR_25+4)
 18536  003478  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18537  00347A  0EE2               	movlw	low _portServer
 18538  00347C  6F95               	movwf	getStringJSON@ret& (0+255),b
 18539  00347E  0E01               	movlw	high _portServer
 18540  003480  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18541  003482  EC31  F021         	call	_getStringJSON	;wreg free
 18542                           
 18543                           ;conexaoWifi.h: 119: sprintf(line1, "%s", ssid);
 18544  003486  0E91               	movlw	low _line1
 18545  003488  0100               	movlb	0	; () banked
 18546  00348A  6F81               	movwf	sprintf@wh& (0+255),b
 18547  00348C  0E01               	movlw	high _line1
 18548  00348E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18549  003490  0E0F               	movlw	low (STR_97+7)
 18550  003492  6F83               	movwf	sprintf@f& (0+255),b
 18551  003494  0E7F               	movlw	high (STR_97+7)
 18552  003496  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18553  003498  0EC9               	movlw	low _ssid
 18554  00349A  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18555  00349C  0E01               	movlw	high _ssid
 18556  00349E  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18557  0034A0  EC07  F02C         	call	_sprintf	;wreg free
 18558                           
 18559                           ;conexaoWifi.h: 120: sprintf(line2, "%s", senha);
 18560  0034A4  0E7C               	movlw	low _line2
 18561  0034A6  0100               	movlb	0	; () banked
 18562  0034A8  6F81               	movwf	sprintf@wh& (0+255),b
 18563  0034AA  0E01               	movlw	high _line2
 18564  0034AC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18565  0034AE  0E0F               	movlw	low (STR_97+7)
 18566  0034B0  6F83               	movwf	sprintf@f& (0+255),b
 18567  0034B2  0E7F               	movlw	high (STR_97+7)
 18568  0034B4  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18569  0034B6  0EBA               	movlw	low _senha
 18570  0034B8  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18571  0034BA  0E01               	movlw	high _senha
 18572  0034BC  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18573  0034BE  EC07  F02C         	call	_sprintf	;wreg free
 18574                           
 18575                           ;conexaoWifi.h: 121: sprintf(line3, "%s:%s", ipServer, portServer);
 18576  0034C2  0E67               	movlw	low _line3
 18577  0034C4  0100               	movlb	0	; () banked
 18578  0034C6  6F81               	movwf	sprintf@wh& (0+255),b
 18579  0034C8  0E01               	movlw	high _line3
 18580  0034CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18581  0034CC  0EC0               	movlw	low STR_47
 18582  0034CE  6F83               	movwf	sprintf@f& (0+255),b
 18583  0034D0  0E7F               	movlw	high STR_47
 18584  0034D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18585  0034D4  0EA6               	movlw	low _ipServer
 18586  0034D6  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18587  0034D8  0E01               	movlw	high _ipServer
 18588  0034DA  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18589  0034DC  0EE2               	movlw	low _portServer
 18590  0034DE  6F87               	movwf	(?_sprintf+6)& (0+255),b
 18591  0034E0  0E01               	movlw	high _portServer
 18592  0034E2  6F88               	movwf	(?_sprintf+7)& (0+255),b
 18593  0034E4  EC07  F02C         	call	_sprintf	;wreg free
 18594                           
 18595                           ;conexaoWifi.h: 122: sprintf(line4, "OK reiniciando...");
 18596  0034E8  0E52               	movlw	low _line4
 18597  0034EA  0100               	movlb	0	; () banked
 18598  0034EC  6F81               	movwf	sprintf@wh& (0+255),b
 18599  0034EE  0E01               	movlw	high _line4
 18600  0034F0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18601  0034F2  0E2E               	movlw	low STR_48
 18602  0034F4  6F83               	movwf	sprintf@f& (0+255),b
 18603  0034F6  0E7D               	movlw	high STR_48
 18604  0034F8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18605  0034FA  EC07  F02C         	call	_sprintf	;wreg free
 18606                           
 18607                           ;conexaoWifi.h: 123: atualizaLCD(line1, line2, line3, line4);
 18608  0034FE  0E91               	movlw	low _line1
 18609  003500  0100               	movlb	0	; () banked
 18610  003502  6F68               	movwf	atualizaLCD@line1& (0+255),b
 18611  003504  0E01               	movlw	high _line1
 18612  003506  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 18613  003508  0E7C               	movlw	low _line2
 18614  00350A  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 18615  00350C  0E01               	movlw	high _line2
 18616  00350E  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 18617  003510  0E67               	movlw	low _line3
 18618  003512  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 18619  003514  0E01               	movlw	high _line3
 18620  003516  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 18621  003518  0E52               	movlw	low _line4
 18622  00351A  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 18623  00351C  0E01               	movlw	high _line4
 18624  00351E  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 18625  003520  ECEA  F025         	call	_atualizaLCD	;wreg free
 18626                           
 18627                           ;conexaoWifi.h: 125: if (strlen(ssid) > 3) {
 18628  003524  0EC9               	movlw	low _ssid
 18629  003526  0100               	movlb	0	; () banked
 18630  003528  6F60               	movwf	strlen@s& (0+255),b
 18631  00352A  0E01               	movlw	high _ssid
 18632  00352C  6F61               	movwf	(strlen@s+1)& (0+255),b
 18633  00352E  EC3C  F02B         	call	_strlen	;wreg free
 18634  003532  0100               	movlb	0	; () banked
 18635  003534  5161               	movf	(?_strlen+1)& (0+255),w,b
 18636  003536  E104               	bnz	u12880
 18637  003538  0E04               	movlw	4
 18638  00353A  5D60               	subwf	?_strlen& (0+255),w,b
 18639  00353C  A0D8               	btfss	status,0,c
 18640  00353E  D05E               	goto	u12960
 18641  003540                     u12880:
 18642                           
 18643                           ; BSR set to: 0
 18644                           ;conexaoWifi.h: 126: unsigned char i = 0;
 18645  003540  0E00               	movlw	0
 18646  003542  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18647                           
 18648                           ;conexaoWifi.h: 127: for (i = 0; i < 15; i++) {
 18649  003544  0E00               	movlw	0
 18650  003546  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18651  003548                     l8675:
 18652                           
 18653                           ; BSR set to: 0
 18654  003548  0E0E               	movlw	14
 18655  00354A  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18656  00354C  D001               	goto	l1001
 18657  00354E  D011               	goto	u12900
 18658  003550                     l1001:
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;conexaoWifi.h: 128: writeEEPROM_ext((40 + i), ssid[i]);
 18662                           
 18663                           ; BSR set to: 0
 18664  003550  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18665  003552  0D01               	mullw	1
 18666  003554  0EC9               	movlw	low _ssid
 18667  003556  24F3               	addwf	prodl,w,c
 18668  003558  6ED9               	movwf	fsr2l,c
 18669  00355A  0E01               	movlw	high _ssid
 18670  00355C  20F4               	addwfc	prodh,w,c
 18671  00355E  6EDA               	movwf	fsr2h,c
 18672  003560  50DF               	movf	indf2,w,c
 18673  003562  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18674  003564  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18675  003566  0F28               	addlw	40
 18676  003568  EC4B  F02C         	call	_writeEEPROM_ext
 18677  00356C  0100               	movlb	0	; () banked
 18678  00356E  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18679  003570  D7EB               	goto	l8675
 18680  003572                     u12900:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;conexaoWifi.h: 129: }
 18684                           ;conexaoWifi.h: 130: for (i = 0; i < 15; i++) {
 18685                           
 18686                           ; BSR set to: 0
 18687  003572  0E00               	movlw	0
 18688  003574  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18689  003576                     l8687:
 18690                           
 18691                           ; BSR set to: 0
 18692  003576  0E0E               	movlw	14
 18693  003578  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18694  00357A  D001               	goto	l1003
 18695  00357C  D011               	goto	u12920
 18696  00357E                     l1003:
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;conexaoWifi.h: 131: writeEEPROM_ext((60 + i), senha[i]);
 18700                           
 18701                           ; BSR set to: 0
 18702  00357E  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18703  003580  0D01               	mullw	1
 18704  003582  0EBA               	movlw	low _senha
 18705  003584  24F3               	addwf	prodl,w,c
 18706  003586  6ED9               	movwf	fsr2l,c
 18707  003588  0E01               	movlw	high _senha
 18708  00358A  20F4               	addwfc	prodh,w,c
 18709  00358C  6EDA               	movwf	fsr2h,c
 18710  00358E  50DF               	movf	indf2,w,c
 18711  003590  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18712  003592  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18713  003594  0F3C               	addlw	60
 18714  003596  EC4B  F02C         	call	_writeEEPROM_ext
 18715  00359A  0100               	movlb	0	; () banked
 18716  00359C  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18717  00359E  D7EB               	goto	l8687
 18718  0035A0                     u12920:
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;conexaoWifi.h: 132: }
 18722                           ;conexaoWifi.h: 133: for (i = 0; i < 20; i++) {
 18723                           
 18724                           ; BSR set to: 0
 18725  0035A0  0E00               	movlw	0
 18726  0035A2  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18727  0035A4                     l8699:
 18728                           
 18729                           ; BSR set to: 0
 18730  0035A4  0E13               	movlw	19
 18731  0035A6  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18732  0035A8  D001               	goto	l1005
 18733  0035AA  D011               	goto	u12940
 18734  0035AC                     l1005:
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;conexaoWifi.h: 134: writeEEPROM_ext((80 + i), ipServer[i]);
 18738                           
 18739                           ; BSR set to: 0
 18740  0035AC  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18741  0035AE  0D01               	mullw	1
 18742  0035B0  0EA6               	movlw	low _ipServer
 18743  0035B2  24F3               	addwf	prodl,w,c
 18744  0035B4  6ED9               	movwf	fsr2l,c
 18745  0035B6  0E01               	movlw	high _ipServer
 18746  0035B8  20F4               	addwfc	prodh,w,c
 18747  0035BA  6EDA               	movwf	fsr2h,c
 18748  0035BC  50DF               	movf	indf2,w,c
 18749  0035BE  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18750  0035C0  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18751  0035C2  0F50               	addlw	80
 18752  0035C4  EC4B  F02C         	call	_writeEEPROM_ext
 18753  0035C8  0100               	movlb	0	; () banked
 18754  0035CA  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18755  0035CC  D7EB               	goto	l8699
 18756  0035CE                     u12940:
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;conexaoWifi.h: 135: }
 18760                           ;conexaoWifi.h: 136: for (i = 0; i < 5; i++) {
 18761                           
 18762                           ; BSR set to: 0
 18763  0035CE  0E00               	movlw	0
 18764  0035D0  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18765  0035D2                     l8711:
 18766                           
 18767                           ; BSR set to: 0
 18768  0035D2  0E04               	movlw	4
 18769  0035D4  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18770  0035D6  D001               	goto	l1007
 18771  0035D8  D011               	goto	u12960
 18772  0035DA                     l1007:
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;conexaoWifi.h: 137: writeEEPROM_ext((105 + i), portServer[i]);
 18776                           
 18777                           ; BSR set to: 0
 18778  0035DA  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18779  0035DC  0D01               	mullw	1
 18780  0035DE  0EE2               	movlw	low _portServer
 18781  0035E0  24F3               	addwf	prodl,w,c
 18782  0035E2  6ED9               	movwf	fsr2l,c
 18783  0035E4  0E01               	movlw	high _portServer
 18784  0035E6  20F4               	addwfc	prodh,w,c
 18785  0035E8  6EDA               	movwf	fsr2h,c
 18786  0035EA  50DF               	movf	indf2,w,c
 18787  0035EC  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18788  0035EE  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18789  0035F0  0F69               	addlw	105
 18790  0035F2  EC4B  F02C         	call	_writeEEPROM_ext
 18791  0035F6  0100               	movlb	0	; () banked
 18792  0035F8  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18793  0035FA  D7EB               	goto	l8711
 18794  0035FC                     u12960:
 18795                           
 18796                           ; BSR set to: 0
 18797                           ;conexaoWifi.h: 138: }
 18798                           ;conexaoWifi.h: 139: }
 18799                           ;conexaoWifi.h: 140: while (1) {
 18800                           
 18801                           ; BSR set to: 0
 18802  0035FC  D7FF               	goto	u12960
 18803  0035FE  0E00               	movlw	0
 18804  003600  6E3D               	movwf	_f_wifi_processo,c
 18805                           
 18806                           ;conexaoWifi.h: 145: }
 18807  003602  0012               	return	
 18808  003604                     l975:
 18809  003604  503D               	movf	_f_wifi_processo,w,c
 18810                           
 18811                           ; Switch size 1, requested type "space"
 18812                           ; Number of cases is 15, Range of values is 0 to 14
 18813                           ; switch strategies available:
 18814                           ; Name         Instructions Cycles
 18815                           ; simple_byte           46    24 (average)
 18816                           ;	Chosen strategy is simple_byte
 18817  003606  0A00               	xorlw	0	; case 0
 18818  003608  B4D8               	btfsc	status,2,c
 18819  00360A  D5A8               	goto	l976
 18820  00360C  0A01               	xorlw	1	; case 1
 18821  00360E  B4D8               	btfsc	status,2,c
 18822  003610  D5B7               	goto	l978
 18823  003612  0A03               	xorlw	3	; case 2
 18824  003614  B4D8               	btfsc	status,2,c
 18825  003616  D5C0               	goto	l980
 18826  003618  0A01               	xorlw	1	; case 3
 18827  00361A  B4D8               	btfsc	status,2,c
 18828  00361C  D5CD               	goto	l981
 18829  00361E  0A07               	xorlw	7	; case 4
 18830  003620  B4D8               	btfsc	status,2,c
 18831  003622  D5D6               	goto	l983
 18832  003624  0A01               	xorlw	1	; case 5
 18833  003626  B4D8               	btfsc	status,2,c
 18834  003628  D5E3               	goto	l984
 18835  00362A  0A03               	xorlw	3	; case 6
 18836  00362C  B4D8               	btfsc	status,2,c
 18837  00362E  D5EC               	goto	l986
 18838  003630  0A01               	xorlw	1	; case 7
 18839  003632  B4D8               	btfsc	status,2,c
 18840  003634  D5F9               	goto	l987
 18841  003636  0A0F               	xorlw	15	; case 8
 18842  003638  B4D8               	btfsc	status,2,c
 18843  00363A  D602               	goto	l989
 18844  00363C  0A01               	xorlw	1	; case 9
 18845  00363E  B4D8               	btfsc	status,2,c
 18846  003640  D60F               	goto	l990
 18847  003642  0A03               	xorlw	3	; case 10
 18848  003644  B4D8               	btfsc	status,2,c
 18849  003646  D621               	goto	l992
 18850  003648  0A01               	xorlw	1	; case 11
 18851  00364A  B4D8               	btfsc	status,2,c
 18852  00364C  D65D               	goto	l994
 18853  00364E  0A07               	xorlw	7	; case 12
 18854  003650  B4D8               	btfsc	status,2,c
 18855  003652  D66A               	goto	l995
 18856  003654  0A01               	xorlw	1	; case 13
 18857  003656  B4D8               	btfsc	status,2,c
 18858  003658  D679               	goto	l997
 18859  00365A  0A03               	xorlw	3	; case 14
 18860  00365C  B4D8               	btfsc	status,2,c
 18861  00365E  D6C2               	goto	l998
 18862  003660  D7CE               	goto	l1012
 18863  003662                     __end_of_alterarDadosConexaoConfigWifi:
 18864                           	opt stack 0
 18865                           tblptru	equ	0xFF8
 18866                           tblptrh	equ	0xFF7
 18867                           tblptrl	equ	0xFF6
 18868                           tablat	equ	0xFF5
 18869                           prodh	equ	0xFF4
 18870                           prodl	equ	0xFF3
 18871                           intcon	equ	0xFF2
 18872                           intcon2	equ	0xFF1
 18873                           intcon3	equ	0xFF0
 18874                           postinc0	equ	0xFEE
 18875                           wreg	equ	0xFE8
 18876                           indf1	equ	0xFE7
 18877                           postdec1	equ	0xFE5
 18878                           fsr1h	equ	0xFE2
 18879                           fsr1l	equ	0xFE1
 18880                           indf2	equ	0xFDF
 18881                           postinc2	equ	0xFDE
 18882                           postdec2	equ	0xFDD
 18883                           fsr2h	equ	0xFDA
 18884                           fsr2l	equ	0xFD9
 18885                           status	equ	0xFD8
 18886                           
 18887 ;; *************** function _writeEEPROM_ext *****************
 18888 ;; Defined at:
 18889 ;;		line 14 in file "src/Eeprom_ext.h"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;  adress          1    wreg     unsigned char 
 18892 ;;  data            1    3[BANK0 ] unsigned char 
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;  adress          1    4[BANK0 ] unsigned char 
 18895 ;; Return value:  Size  Location     Type
 18896 ;;                  1    wreg      void 
 18897 ;; Registers used:
 18898 ;;		wreg, status,2, status,0, cstack
 18899 ;; Tracked objects:
 18900 ;;		On entry : 0/0
 18901 ;;		On exit  : 0/0
 18902 ;;		Unchanged: 0/0
 18903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18904 ;;      Params:         0       1       0       0       0       0       0       0       0
 18905 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18907 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18908 ;;Total ram usage:        2 bytes
 18909 ;; Hardware stack levels used:    1
 18910 ;; Hardware stack levels required when called:    8
 18911 ;; This function calls:
 18912 ;;		_I2C_Start
 18913 ;;		_I2C_Stop
 18914 ;;		_I2C_Write
 18915 ;;		_delay
 18916 ;; This function is called by:
 18917 ;;		_setUmidade
 18918 ;;		_setRangeValor
 18919 ;;		_alterarDadosConexaoConfigWifi
 18920 ;;		_main
 18921 ;;		_writeEEPROM16_ext
 18922 ;; This function uses a non-reentrant model
 18923 ;;
 18924                           
 18925                           	psect	text27
 18926  005896                     __ptext27:
 18927                           	opt stack 0
 18928  005896                     _writeEEPROM_ext:
 18929                           	opt stack 22
 18930                           
 18931                           ;incstack = 0
 18932                           ;writeEEPROM_ext@adress stored from wreg
 18933  005896  0100               	movlb	0	; () banked
 18934  005898  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 18935                           
 18936                           ;Eeprom_ext.h: 16: I2C_Start();
 18937  00589A  EC69  F02E         	call	_I2C_Start	;wreg free
 18938                           
 18939                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 18940  00589E  0E00               	movlw	0
 18941  0058A0  0100               	movlb	0	; () banked
 18942  0058A2  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 18943  0058A4  0EA0               	movlw	160
 18944  0058A6  6F61               	movwf	I2C_Write@d& (0+255),b
 18945  0058A8  EC57  F02E         	call	_I2C_Write	;wreg free
 18946                           
 18947                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 18948  0058AC  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 18949  0058B0  0100               	movlb	0	; () banked
 18950  0058B2  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18951  0058B4  EC57  F02E         	call	_I2C_Write	;wreg free
 18952                           
 18953                           ;Eeprom_ext.h: 20: I2C_Write(data);
 18954  0058B8  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 18955  0058BC  0100               	movlb	0	; () banked
 18956  0058BE  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18957  0058C0  EC57  F02E         	call	_I2C_Write	;wreg free
 18958                           
 18959                           ;Eeprom_ext.h: 21: I2C_Stop();
 18960  0058C4  EC65  F02E         	call	_I2C_Stop	;wreg free
 18961                           
 18962                           ;Eeprom_ext.h: 22: delay(105);
 18963  0058C8  0E00               	movlw	0
 18964  0058CA  0100               	movlb	0	; () banked
 18965  0058CC  6F61               	movwf	(delay@x+1)& (0+255),b
 18966  0058CE  0E69               	movlw	105
 18967  0058D0  6F60               	movwf	delay@x& (0+255),b
 18968  0058D2  EC6B  F02D         	call	_delay	;wreg free
 18969  0058D6  0012               	return		;funcret
 18970  0058D8                     __end_of_writeEEPROM_ext:
 18971                           	opt stack 0
 18972                           tblptru	equ	0xFF8
 18973                           tblptrh	equ	0xFF7
 18974                           tblptrl	equ	0xFF6
 18975                           tablat	equ	0xFF5
 18976                           prodh	equ	0xFF4
 18977                           prodl	equ	0xFF3
 18978                           intcon	equ	0xFF2
 18979                           intcon2	equ	0xFF1
 18980                           intcon3	equ	0xFF0
 18981                           postinc0	equ	0xFEE
 18982                           wreg	equ	0xFE8
 18983                           indf1	equ	0xFE7
 18984                           postdec1	equ	0xFE5
 18985                           fsr1h	equ	0xFE2
 18986                           fsr1l	equ	0xFE1
 18987                           indf2	equ	0xFDF
 18988                           postinc2	equ	0xFDE
 18989                           postdec2	equ	0xFDD
 18990                           fsr2h	equ	0xFDA
 18991                           fsr2l	equ	0xFD9
 18992                           status	equ	0xFD8
 18993                           
 18994 ;; *************** function _delay *****************
 18995 ;; Defined at:
 18996 ;;		line 18 in file "src/function.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;  x               2    0[BANK0 ] int 
 18999 ;; Auto vars:     Size  Location     Type
 19000 ;;		None
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, status,2, status,0
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19010 ;;      Params:         0       2       0       0       0       0       0       0       0
 19011 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19012 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19013 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19014 ;;Total ram usage:        3 bytes
 19015 ;; Hardware stack levels used:    1
 19016 ;; Hardware stack levels required when called:    6
 19017 ;; This function calls:
 19018 ;;		Nothing
 19019 ;; This function is called by:
 19020 ;;		_writeEEPROM_ext
 19021 ;;		_alterarDadosConexaoConfigWifi
 19022 ;;		_enviaDadosWifi
 19023 ;;		_main
 19024 ;; This function uses a non-reentrant model
 19025 ;;
 19026                           
 19027                           	psect	text28
 19028  005AD6                     __ptext28:
 19029                           	opt stack 0
 19030  005AD6                     _delay:
 19031                           	opt stack 23
 19032                           
 19033                           ;function.c: 19: while (x--) {
 19034                           
 19035                           ;incstack = 0
 19036  005AD6  D00A               	goto	l1484
 19037  005AD8                     l6651:
 19038                           
 19039                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 19040  005AD8  0E03               	movlw	3
 19041  005ADA  0100               	movlb	0	; () banked
 19042  005ADC  6F62               	movwf	??_delay& (0+255),b
 19043  005ADE  0E97               	movlw	151
 19044  005AE0                     u15557:
 19045  005AE0  2EE8               	decfsz	wreg,f,c
 19046  005AE2  D7FE               	bra	u15557
 19047  005AE4  2F62               	decfsz	??_delay& (0+255),f,b
 19048  005AE6  D7FC               	bra	u15557
 19049  005AE8  D000               	nop2	
 19050  005AEA  0004               	clrwdt		;# 
 19051  005AEC                     l1484:
 19052  005AEC  0100               	movlb	0	; () banked
 19053  005AEE  0760               	decf	delay@x& (0+255),f,b
 19054  005AF0  A0D8               	btfss	status,0,c
 19055  005AF2  0761               	decf	(delay@x+1)& (0+255),f,b
 19056  005AF4  2960               	incf	delay@x& (0+255),w,b
 19057  005AF6  E1F0               	bnz	l6651
 19058  005AF8  2961               	incf	(delay@x+1)& (0+255),w,b
 19059  005AFA  B4D8               	btfsc	status,2,c
 19060  005AFC  0012               	return	
 19061  005AFE  D7EC               	goto	l1485
 19062  005B00                     __end_of_delay:
 19063                           	opt stack 0
 19064                           tblptru	equ	0xFF8
 19065                           tblptrh	equ	0xFF7
 19066                           tblptrl	equ	0xFF6
 19067                           tablat	equ	0xFF5
 19068                           prodh	equ	0xFF4
 19069                           prodl	equ	0xFF3
 19070                           intcon	equ	0xFF2
 19071                           intcon2	equ	0xFF1
 19072                           intcon3	equ	0xFF0
 19073                           postinc0	equ	0xFEE
 19074                           wreg	equ	0xFE8
 19075                           indf1	equ	0xFE7
 19076                           postdec1	equ	0xFE5
 19077                           fsr1h	equ	0xFE2
 19078                           fsr1l	equ	0xFE1
 19079                           indf2	equ	0xFDF
 19080                           postinc2	equ	0xFDE
 19081                           postdec2	equ	0xFDD
 19082                           fsr2h	equ	0xFDA
 19083                           fsr2l	equ	0xFD9
 19084                           status	equ	0xFD8
 19085                           
 19086 ;; *************** function _I2C_Write *****************
 19087 ;; Defined at:
 19088 ;;		line 41 in file "src/I2C.c"
 19089 ;; Parameters:    Size  Location     Type
 19090 ;;  d               2    1[BANK0 ] unsigned int 
 19091 ;; Auto vars:     Size  Location     Type
 19092 ;;		None
 19093 ;; Return value:  Size  Location     Type
 19094 ;;                  1    wreg      void 
 19095 ;; Registers used:
 19096 ;;		wreg, status,2, status,0, cstack
 19097 ;; Tracked objects:
 19098 ;;		On entry : 0/0
 19099 ;;		On exit  : 0/0
 19100 ;;		Unchanged: 0/0
 19101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19102 ;;      Params:         0       2       0       0       0       0       0       0       0
 19103 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19105 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19106 ;;Total ram usage:        2 bytes
 19107 ;; Hardware stack levels used:    1
 19108 ;; Hardware stack levels required when called:    7
 19109 ;; This function calls:
 19110 ;;		_I2C_Wait
 19111 ;; This function is called by:
 19112 ;;		_updateLeds
 19113 ;;		_writeEEPROM_ext
 19114 ;;		_readEEPROM_ext
 19115 ;; This function uses a non-reentrant model
 19116 ;;
 19117                           
 19118                           	psect	text29
 19119  005CAE                     __ptext29:
 19120                           	opt stack 0
 19121  005CAE                     _I2C_Write:
 19122                           	opt stack 22
 19123                           
 19124                           ;I2C.c: 42: I2C_Wait();
 19125                           
 19126                           ; BSR set to: 0
 19127                           ;incstack = 0
 19128  005CAE  EC30  F02E         	call	_I2C_Wait	;wreg free
 19129                           
 19130                           ;I2C.c: 43: SSPBUF = d;
 19131  005CB2  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19132  005CB6  0012               	return		;funcret
 19133  005CB8                     __end_of_I2C_Write:
 19134                           	opt stack 0
 19135                           tblptru	equ	0xFF8
 19136                           tblptrh	equ	0xFF7
 19137                           tblptrl	equ	0xFF6
 19138                           tablat	equ	0xFF5
 19139                           prodh	equ	0xFF4
 19140                           prodl	equ	0xFF3
 19141                           intcon	equ	0xFF2
 19142                           intcon2	equ	0xFF1
 19143                           intcon3	equ	0xFF0
 19144                           postinc0	equ	0xFEE
 19145                           wreg	equ	0xFE8
 19146                           indf1	equ	0xFE7
 19147                           postdec1	equ	0xFE5
 19148                           fsr1h	equ	0xFE2
 19149                           fsr1l	equ	0xFE1
 19150                           indf2	equ	0xFDF
 19151                           postinc2	equ	0xFDE
 19152                           postdec2	equ	0xFDD
 19153                           fsr2h	equ	0xFDA
 19154                           fsr2l	equ	0xFD9
 19155                           status	equ	0xFD8
 19156                           
 19157 ;; *************** function _I2C_Stop *****************
 19158 ;; Defined at:
 19159 ;;		line 35 in file "src/I2C.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;		None
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;		None
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  1    wreg      void 
 19166 ;; Registers used:
 19167 ;;		wreg, status,2, status,0, cstack
 19168 ;; Tracked objects:
 19169 ;;		On entry : 0/0
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19173 ;;      Params:         0       0       0       0       0       0       0       0       0
 19174 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19176 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19177 ;;Total ram usage:        0 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; Hardware stack levels required when called:    7
 19180 ;; This function calls:
 19181 ;;		_I2C_Wait
 19182 ;; This function is called by:
 19183 ;;		_updateLeds
 19184 ;;		_writeEEPROM_ext
 19185 ;;		_readEEPROM_ext
 19186 ;; This function uses a non-reentrant model
 19187 ;;
 19188                           
 19189                           	psect	text30
 19190  005CCA                     __ptext30:
 19191                           	opt stack 0
 19192  005CCA                     _I2C_Stop:
 19193                           	opt stack 22
 19194                           
 19195                           ;I2C.c: 36: I2C_Wait();
 19196                           
 19197                           ;incstack = 0
 19198  005CCA  EC30  F02E         	call	_I2C_Wait	;wreg free
 19199                           
 19200                           ;I2C.c: 37: PEN = 1;
 19201  005CCE  84C5               	bsf	4037,2,c	;volatile
 19202  005CD0  0012               	return		;funcret
 19203  005CD2                     __end_of_I2C_Stop:
 19204                           	opt stack 0
 19205                           tblptru	equ	0xFF8
 19206                           tblptrh	equ	0xFF7
 19207                           tblptrl	equ	0xFF6
 19208                           tablat	equ	0xFF5
 19209                           prodh	equ	0xFF4
 19210                           prodl	equ	0xFF3
 19211                           intcon	equ	0xFF2
 19212                           intcon2	equ	0xFF1
 19213                           intcon3	equ	0xFF0
 19214                           postinc0	equ	0xFEE
 19215                           wreg	equ	0xFE8
 19216                           indf1	equ	0xFE7
 19217                           postdec1	equ	0xFE5
 19218                           fsr1h	equ	0xFE2
 19219                           fsr1l	equ	0xFE1
 19220                           indf2	equ	0xFDF
 19221                           postinc2	equ	0xFDE
 19222                           postdec2	equ	0xFDD
 19223                           fsr2h	equ	0xFDA
 19224                           fsr2l	equ	0xFD9
 19225                           status	equ	0xFD8
 19226                           
 19227 ;; *************** function _I2C_Start *****************
 19228 ;; Defined at:
 19229 ;;		line 25 in file "src/I2C.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;		None
 19232 ;; Auto vars:     Size  Location     Type
 19233 ;;		None
 19234 ;; Return value:  Size  Location     Type
 19235 ;;                  1    wreg      void 
 19236 ;; Registers used:
 19237 ;;		wreg, status,2, status,0, cstack
 19238 ;; Tracked objects:
 19239 ;;		On entry : 0/0
 19240 ;;		On exit  : 0/0
 19241 ;;		Unchanged: 0/0
 19242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19243 ;;      Params:         0       0       0       0       0       0       0       0       0
 19244 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19246 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19247 ;;Total ram usage:        0 bytes
 19248 ;; Hardware stack levels used:    1
 19249 ;; Hardware stack levels required when called:    7
 19250 ;; This function calls:
 19251 ;;		_I2C_Wait
 19252 ;; This function is called by:
 19253 ;;		_updateLeds
 19254 ;;		_writeEEPROM_ext
 19255 ;;		_readEEPROM_ext
 19256 ;; This function uses a non-reentrant model
 19257 ;;
 19258                           
 19259                           	psect	text31
 19260  005CD2                     __ptext31:
 19261                           	opt stack 0
 19262  005CD2                     _I2C_Start:
 19263                           	opt stack 22
 19264                           
 19265                           ;I2C.c: 26: I2C_Wait();
 19266                           
 19267                           ;incstack = 0
 19268  005CD2  EC30  F02E         	call	_I2C_Wait	;wreg free
 19269                           
 19270                           ;I2C.c: 27: SEN = 1;
 19271  005CD6  80C5               	bsf	4037,0,c	;volatile
 19272  005CD8  0012               	return		;funcret
 19273  005CDA                     __end_of_I2C_Start:
 19274                           	opt stack 0
 19275                           tblptru	equ	0xFF8
 19276                           tblptrh	equ	0xFF7
 19277                           tblptrl	equ	0xFF6
 19278                           tablat	equ	0xFF5
 19279                           prodh	equ	0xFF4
 19280                           prodl	equ	0xFF3
 19281                           intcon	equ	0xFF2
 19282                           intcon2	equ	0xFF1
 19283                           intcon3	equ	0xFF0
 19284                           postinc0	equ	0xFEE
 19285                           wreg	equ	0xFE8
 19286                           indf1	equ	0xFE7
 19287                           postdec1	equ	0xFE5
 19288                           fsr1h	equ	0xFE2
 19289                           fsr1l	equ	0xFE1
 19290                           indf2	equ	0xFDF
 19291                           postinc2	equ	0xFDE
 19292                           postdec2	equ	0xFDD
 19293                           fsr2h	equ	0xFDA
 19294                           fsr2l	equ	0xFD9
 19295                           status	equ	0xFD8
 19296                           
 19297 ;; *************** function _I2C_Wait *****************
 19298 ;; Defined at:
 19299 ;;		line 21 in file "src/I2C.c"
 19300 ;; Parameters:    Size  Location     Type
 19301 ;;		None
 19302 ;; Auto vars:     Size  Location     Type
 19303 ;;		None
 19304 ;; Return value:  Size  Location     Type
 19305 ;;                  1    wreg      void 
 19306 ;; Registers used:
 19307 ;;		wreg, status,2, status,0
 19308 ;; Tracked objects:
 19309 ;;		On entry : 0/0
 19310 ;;		On exit  : 0/0
 19311 ;;		Unchanged: 0/0
 19312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19313 ;;      Params:         0       0       0       0       0       0       0       0       0
 19314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19315 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19316 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19317 ;;Total ram usage:        1 bytes
 19318 ;; Hardware stack levels used:    1
 19319 ;; Hardware stack levels required when called:    6
 19320 ;; This function calls:
 19321 ;;		Nothing
 19322 ;; This function is called by:
 19323 ;;		_I2C_Start
 19324 ;;		_I2C_Restart
 19325 ;;		_I2C_Stop
 19326 ;;		_I2C_Write
 19327 ;;		_I2C_Read
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           	psect	text32
 19332  005C60                     __ptext32:
 19333                           	opt stack 0
 19334  005C60                     _I2C_Wait:
 19335                           	opt stack 22
 19336                           
 19337                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19338                           
 19339                           ;incstack = 0
 19340  005C60  B4C7               	btfsc	4039,2,c	;volatile
 19341  005C62  D7FE               	goto	_I2C_Wait
 19342  005C64  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19343  005C68  0E1F               	movlw	31
 19344  005C6A  0100               	movlb	0	; () banked
 19345  005C6C  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19346  005C6E  B4D8               	btfsc	status,2,c
 19347  005C70  0012               	return	
 19348  005C72  D7F6               	goto	_I2C_Wait
 19349  005C74                     __end_of_I2C_Wait:
 19350                           	opt stack 0
 19351                           tblptru	equ	0xFF8
 19352                           tblptrh	equ	0xFF7
 19353                           tblptrl	equ	0xFF6
 19354                           tablat	equ	0xFF5
 19355                           prodh	equ	0xFF4
 19356                           prodl	equ	0xFF3
 19357                           intcon	equ	0xFF2
 19358                           intcon2	equ	0xFF1
 19359                           intcon3	equ	0xFF0
 19360                           postinc0	equ	0xFEE
 19361                           wreg	equ	0xFE8
 19362                           indf1	equ	0xFE7
 19363                           postdec1	equ	0xFE5
 19364                           fsr1h	equ	0xFE2
 19365                           fsr1l	equ	0xFE1
 19366                           indf2	equ	0xFDF
 19367                           postinc2	equ	0xFDE
 19368                           postdec2	equ	0xFDD
 19369                           fsr2h	equ	0xFDA
 19370                           fsr2l	equ	0xFD9
 19371                           status	equ	0xFD8
 19372                           
 19373 ;; *************** function _setKeyStartReceiveSerial *****************
 19374 ;; Defined at:
 19375 ;;		line 6 in file "src/serial.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;  start           2   49[BANK0 ] PTR unsigned char 
 19378 ;;		 -> STR_80(7), STR_77(7), STR_73(4), STR_68(4), 
 19379 ;;		 -> STR_65(4), STR_62(4), STR_58(4), STR_56(4), 
 19380 ;;		 -> STR_52(4), STR_49(4), STR_38(3), STR_34(4), 
 19381 ;;		 -> STR_31(4), STR_25(7), STR_22(4), STR_19(4), 
 19382 ;;		 -> STR_16(4), STR_13(4), STR_10(4), 
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;		None
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  1    wreg      void 
 19387 ;; Registers used:
 19388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19394 ;;      Params:         0       2       0       0       0       0       0       0       0
 19395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19396 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19397 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19398 ;;Total ram usage:        2 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:    9
 19401 ;; This function calls:
 19402 ;;		_memset
 19403 ;;		_sprintf
 19404 ;;		_strstr
 19405 ;; This function is called by:
 19406 ;;		_alterarDadosConexaoConfigWifi
 19407 ;;		_enviaDadosWifi
 19408 ;; This function uses a non-reentrant model
 19409 ;;
 19410                           
 19411                           	psect	text33
 19412  00559C                     __ptext33:
 19413                           	opt stack 0
 19414  00559C                     _setKeyStartReceiveSerial:
 19415                           	opt stack 20
 19416                           
 19417                           ;serial.c: 7: _BF_enable_receive = 0;
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;incstack = 0
 19421  00559C  0E00               	movlw	0
 19422  00559E  6E41               	movwf	__BF_enable_receive,c
 19423                           
 19424                           ;serial.c: 8: _BF_i_count = 0;
 19425  0055A0  0E00               	movlw	0
 19426  0055A2  6E40               	movwf	__BF_i_count,c
 19427                           
 19428                           ;serial.c: 9: _BF_current = 0;
 19429  0055A4  0E00               	movlw	0
 19430  0055A6  6E3F               	movwf	__BF_current,c
 19431                           
 19432                           ;serial.c: 10: memset(bufferSerial, 0, sizeof (bufferSerial));
 19433  0055A8  0E69               	movlw	low _bufferSerial
 19434  0055AA  0100               	movlb	0	; () banked
 19435  0055AC  6F60               	movwf	memset@p1& (0+255),b
 19436  0055AE  0E02               	movlw	high _bufferSerial
 19437  0055B0  6F61               	movwf	(memset@p1+1)& (0+255),b
 19438  0055B2  0E00               	movlw	0
 19439  0055B4  6F63               	movwf	(memset@c+1)& (0+255),b
 19440  0055B6  0E00               	movlw	0
 19441  0055B8  6F62               	movwf	memset@c& (0+255),b
 19442  0055BA  0E00               	movlw	0
 19443  0055BC  6F65               	movwf	(memset@n+1)& (0+255),b
 19444  0055BE  0E64               	movlw	100
 19445  0055C0  6F64               	movwf	memset@n& (0+255),b
 19446  0055C2  EC0D  F02D         	call	_memset	;wreg free
 19447                           
 19448                           ;serial.c: 11: sprintf(_BF_start, "%s", start);
 19449  0055C6  0ED8               	movlw	low __BF_start
 19450  0055C8  0100               	movlb	0	; () banked
 19451  0055CA  6F81               	movwf	sprintf@wh& (0+255),b
 19452  0055CC  0E01               	movlw	high __BF_start
 19453  0055CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19454  0055D0  0E0F               	movlw	low (STR_97+7)
 19455  0055D2  6F83               	movwf	sprintf@f& (0+255),b
 19456  0055D4  0E7F               	movlw	high (STR_97+7)
 19457  0055D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19458  0055D8  C091  F085         	movff	setKeyStartReceiveSerial@start,?_sprintf+4
 19459  0055DC  C092  F086         	movff	setKeyStartReceiveSerial@start+1,?_sprintf+5
 19460  0055E0  EC07  F02C         	call	_sprintf	;wreg free
 19461                           
 19462                           ;serial.c: 12: if(strstr("ALL", start)){
 19463  0055E4  0EE2               	movlw	low STR_10
 19464  0055E6  0100               	movlb	0	; () banked
 19465  0055E8  6F6F               	movwf	strstr@s1& (0+255),b
 19466  0055EA  0E7F               	movlw	high STR_10
 19467  0055EC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19468  0055EE  C091  F071         	movff	setKeyStartReceiveSerial@start,strstr@s2
 19469  0055F2  C092  F072         	movff	setKeyStartReceiveSerial@start+1,strstr@s2+1
 19470  0055F6  ECAD  F026         	call	_strstr	;wreg free
 19471  0055FA  0100               	movlb	0	; () banked
 19472  0055FC  516F               	movf	?_strstr& (0+255),w,b
 19473  0055FE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19474  005600  B4D8               	btfsc	status,2,c
 19475  005602  0012               	return	
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;serial.c: 13: _BF_enable_receive = 1;
 19479  005604  0E01               	movlw	1
 19480  005606  6E41               	movwf	__BF_enable_receive,c
 19481  005608  0012               	return	
 19482  00560A                     __end_of_setKeyStartReceiveSerial:
 19483                           	opt stack 0
 19484                           tblptru	equ	0xFF8
 19485                           tblptrh	equ	0xFF7
 19486                           tblptrl	equ	0xFF6
 19487                           tablat	equ	0xFF5
 19488                           prodh	equ	0xFF4
 19489                           prodl	equ	0xFF3
 19490                           intcon	equ	0xFF2
 19491                           intcon2	equ	0xFF1
 19492                           intcon3	equ	0xFF0
 19493                           postinc0	equ	0xFEE
 19494                           wreg	equ	0xFE8
 19495                           indf1	equ	0xFE7
 19496                           postdec1	equ	0xFE5
 19497                           fsr1h	equ	0xFE2
 19498                           fsr1l	equ	0xFE1
 19499                           indf2	equ	0xFDF
 19500                           postinc2	equ	0xFDE
 19501                           postdec2	equ	0xFDD
 19502                           fsr2h	equ	0xFDA
 19503                           fsr2l	equ	0xFD9
 19504                           status	equ	0xFD8
 19505                           
 19506 ;; *************** function _memset *****************
 19507 ;; Defined at:
 19508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19509 ;; Parameters:    Size  Location     Type
 19510 ;;  p1              2    0[BANK0 ] PTR void 
 19511 ;;		 -> bufferSerial(100), 
 19512 ;;  c               2    2[BANK0 ] int 
 19513 ;;  n               2    4[BANK0 ] unsigned int 
 19514 ;; Auto vars:     Size  Location     Type
 19515 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19516 ;;		 -> bufferSerial(100), 
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  2    0[BANK0 ] PTR void 
 19519 ;; Registers used:
 19520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19526 ;;      Params:         0       6       0       0       0       0       0       0       0
 19527 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19529 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19530 ;;Total ram usage:        8 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; Hardware stack levels required when called:    6
 19533 ;; This function calls:
 19534 ;;		Nothing
 19535 ;; This function is called by:
 19536 ;;		_setKeyStartReceiveSerial
 19537 ;; This function uses a non-reentrant model
 19538 ;;
 19539                           
 19540                           	psect	text34
 19541  005A1A                     __ptext34:
 19542                           	opt stack 0
 19543  005A1A                     _memset:
 19544                           	opt stack 22
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;incstack = 0
 19548  005A1A  C060  F066         	movff	memset@p1,memset@p
 19549  005A1E  C061  F067         	movff	memset@p1+1,memset@p+1
 19550  005A22  D009               	goto	l2135
 19551  005A24                     l6683:
 19552  005A24  C066  FFD9         	movff	memset@p,fsr2l
 19553  005A28  C067  FFDA         	movff	memset@p+1,fsr2h
 19554  005A2C  C062  FFDF         	movff	memset@c,indf2
 19555  005A30  0100               	movlb	0	; () banked
 19556  005A32  4B66               	infsnz	memset@p& (0+255),f,b
 19557  005A34  2B67               	incf	(memset@p+1)& (0+255),f,b
 19558  005A36                     l2135:
 19559                           
 19560                           ; BSR set to: 0
 19561  005A36  0100               	movlb	0	; () banked
 19562  005A38  0764               	decf	memset@n& (0+255),f,b
 19563  005A3A  A0D8               	btfss	status,0,c
 19564  005A3C  0765               	decf	(memset@n+1)& (0+255),f,b
 19565  005A3E  2964               	incf	memset@n& (0+255),w,b
 19566  005A40  E1F1               	bnz	l6683
 19567  005A42  2965               	incf	(memset@n+1)& (0+255),w,b
 19568  005A44  B4D8               	btfsc	status,2,c
 19569  005A46  0012               	return	
 19570  005A48  D7ED               	goto	l2136
 19571  005A4A                     __end_of_memset:
 19572                           	opt stack 0
 19573                           tblptru	equ	0xFF8
 19574                           tblptrh	equ	0xFF7
 19575                           tblptrl	equ	0xFF6
 19576                           tablat	equ	0xFF5
 19577                           prodh	equ	0xFF4
 19578                           prodl	equ	0xFF3
 19579                           intcon	equ	0xFF2
 19580                           intcon2	equ	0xFF1
 19581                           intcon3	equ	0xFF0
 19582                           postinc0	equ	0xFEE
 19583                           wreg	equ	0xFE8
 19584                           indf1	equ	0xFE7
 19585                           postdec1	equ	0xFE5
 19586                           fsr1h	equ	0xFE2
 19587                           fsr1l	equ	0xFE1
 19588                           indf2	equ	0xFDF
 19589                           postinc2	equ	0xFDE
 19590                           postdec2	equ	0xFDD
 19591                           fsr2h	equ	0xFDA
 19592                           fsr2l	equ	0xFD9
 19593                           status	equ	0xFD8
 19594                           
 19595 ;; *************** function _printf *****************
 19596 ;; Defined at:
 19597 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19600 ;;		 -> STR_83(9), STR_81(11), STR_78(14), STR_74(14), 
 19601 ;;		 -> STR_71(168), STR_66(19), STR_63(28), STR_59(15), 
 19602 ;;		 -> STR_57(21), STR_53(14), STR_50(14), STR_37(16), 
 19603 ;;		 -> STR_36(597), STR_35(45), STR_32(21), STR_23(20), 
 19604 ;;		 -> STR_20(22), STR_17(35), STR_14(14), STR_11(14), 
 19605 ;; Auto vars:     Size  Location     Type
 19606 ;;  pb              4   95[BANK0 ] struct __prbuf
 19607 ;;  ap              2   93[BANK0 ] PTR void [1]
 19608 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  2   33[BANK0 ] int 
 19611 ;; Registers used:
 19612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/0
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19618 ;;      Params:         0      60       0       0       0       0       0       0       0
 19619 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19621 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19622 ;;Total ram usage:       66 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:    8
 19625 ;; This function calls:
 19626 ;;		__doprnt
 19627 ;; This function is called by:
 19628 ;;		_alterarDadosConexaoConfigWifi
 19629 ;;		_enviaDadosWifi
 19630 ;;		_main
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text35
 19635  005916                     __ptext35:
 19636                           	opt stack 0
 19637  005916                     _printf:
 19638                           	opt stack 22
 19639                           
 19640                           ; BSR set to: 0
 19641                           ;incstack = 0
 19642  005916  0E00               	movlw	0
 19643  005918  0100               	movlb	0	; () banked
 19644  00591A  6FBF               	movwf	printf@pb& (0+255),b
 19645  00591C  0E00               	movlw	0
 19646  00591E  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19647  005920  0E86               	movlw	low _putch
 19648  005922  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19649  005924  0E5C               	movlw	high _putch
 19650  005926  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19651  005928  0E83               	movlw	low (?_printf+2)
 19652  00592A  6FBD               	movwf	printf@ap& (0+255),b
 19653  00592C  0E00               	movlw	high (?_printf+2)
 19654  00592E  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;	Return value of _printf is never used
 19658  005930  0EBF               	movlw	low printf@pb
 19659  005932  6F6C               	movwf	__doprnt@pb& (0+255),b
 19660  005934  0E00               	movlw	high printf@pb
 19661  005936  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19662  005938  C081  F06E         	movff	printf@f,__doprnt@f
 19663  00593C  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19664  005940  0EBD               	movlw	low printf@ap
 19665  005942  6F70               	movwf	__doprnt@ap& (0+255),b
 19666  005944  0E00               	movlw	high printf@ap
 19667  005946  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19668  005948  EC03  F013         	call	__doprnt	;wreg free
 19669  00594C  0012               	return	
 19670  00594E                     __end_of_printf:
 19671                           	opt stack 0
 19672                           tblptru	equ	0xFF8
 19673                           tblptrh	equ	0xFF7
 19674                           tblptrl	equ	0xFF6
 19675                           tablat	equ	0xFF5
 19676                           prodh	equ	0xFF4
 19677                           prodl	equ	0xFF3
 19678                           intcon	equ	0xFF2
 19679                           intcon2	equ	0xFF1
 19680                           intcon3	equ	0xFF0
 19681                           postinc0	equ	0xFEE
 19682                           wreg	equ	0xFE8
 19683                           indf1	equ	0xFE7
 19684                           postdec1	equ	0xFE5
 19685                           fsr1h	equ	0xFE2
 19686                           fsr1l	equ	0xFE1
 19687                           indf2	equ	0xFDF
 19688                           postinc2	equ	0xFDE
 19689                           postdec2	equ	0xFDD
 19690                           fsr2h	equ	0xFDA
 19691                           fsr2l	equ	0xFD9
 19692                           status	equ	0xFD8
 19693                           
 19694 ;; *************** function _getStringJSON *****************
 19695 ;; Defined at:
 19696 ;;		line 48 in file "src/json.c"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;  buff            2   49[BANK0 ] PTR unsigned char 
 19699 ;;		 -> bufferSerial(100), 
 19700 ;;  key             2   51[BANK0 ] PTR unsigned char 
 19701 ;;		 -> STR_44(3), STR_43(3), STR_42(3), STR_41(3), 
 19702 ;;  ret             2   53[BANK0 ] PTR unsigned char 
 19703 ;;		 -> portServer(4), ipServer(20), senha(15), ssid(15), 
 19704 ;; Auto vars:     Size  Location     Type
 19705 ;;  res            25   57[BANK0 ] unsigned char [25]
 19706 ;;  attr           20  102[BANK0 ] unsigned char [20]
 19707 ;;  expected       20   82[BANK0 ] unsigned char [20]
 19708 ;;  i               2  126[BANK0 ] unsigned int 
 19709 ;;  j               2  123[BANK0 ] unsigned int 
 19710 ;;  find            1  125[BANK0 ] unsigned char 
 19711 ;;  isValid         1  122[BANK0 ] unsigned char 
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      void 
 19714 ;; Registers used:
 19715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19721 ;;      Params:         0       6       0       0       0       0       0       0       0
 19722 ;;      Locals:         0      71       0       0       0       0       0       0       0
 19723 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19724 ;;      Totals:         0      79       0       0       0       0       0       0       0
 19725 ;;Total ram usage:       79 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; Hardware stack levels required when called:    9
 19728 ;; This function calls:
 19729 ;;		_sprintf
 19730 ;;		_strlen
 19731 ;;		_strstr
 19732 ;; This function is called by:
 19733 ;;		_alterarDadosConexaoConfigWifi
 19734 ;; This function uses a non-reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text36
 19738  004262                     __ptext36:
 19739                           	opt stack 0
 19740  004262                     _getStringJSON:
 19741                           	opt stack 20
 19742                           
 19743                           ;json.c: 50: unsigned int i, j = 0;
 19744                           
 19745                           ;incstack = 0
 19746  004262  0E00               	movlw	0
 19747  004264  0100               	movlb	0	; () banked
 19748  004266  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19749  004268  0E00               	movlw	0
 19750  00426A  6FDB               	movwf	getStringJSON@j& (0+255),b
 19751                           
 19752                           ; BSR set to: 0
 19753                           ;json.c: 51: char res[25] = "";
 19754  00426C  EE22  F000         	lfsr	2,getStringJSON@F288
 19755  004270  EE10  F099         	lfsr	1,getStringJSON@res
 19756  004274  0E18               	movlw	24
 19757  004276                     u11671:
 19758  004276  CFDB FFE3          	movff	plusw2,plusw1
 19759  00427A  06E8               	decf	wreg,f,c
 19760  00427C  E2FC               	bc	u11671
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;json.c: 52: char attr[20] = "";
 19764  00427E  EE22  F02D         	lfsr	2,getStringJSON@F290
 19765  004282  EE10  F0C6         	lfsr	1,getStringJSON@attr
 19766  004286  0E13               	movlw	19
 19767  004288                     u11681:
 19768  004288  CFDB FFE3          	movff	plusw2,plusw1
 19769  00428C  06E8               	decf	wreg,f,c
 19770  00428E  E2FC               	bc	u11681
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;json.c: 53: char expected[20] = "";
 19774  004290  EE22  F019         	lfsr	2,getStringJSON@F292
 19775  004294  EE10  F0B2         	lfsr	1,getStringJSON@expected
 19776  004298  0E13               	movlw	19
 19777  00429A                     u11691:
 19778  00429A  CFDB FFE3          	movff	plusw2,plusw1
 19779  00429E  06E8               	decf	wreg,f,c
 19780  0042A0  E2FC               	bc	u11691
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;json.c: 54: char find = 0;
 19784  0042A2  0E00               	movlw	0
 19785  0042A4  6FDD               	movwf	getStringJSON@find& (0+255),b
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;json.c: 55: char isValid = 0;
 19789  0042A6  0E00               	movlw	0
 19790  0042A8  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;json.c: 57: sprintf(expected, "\"%s\":\"", key);
 19794  0042AA  0EB2               	movlw	low getStringJSON@expected
 19795  0042AC  6F81               	movwf	sprintf@wh& (0+255),b
 19796  0042AE  0E00               	movlw	high getStringJSON@expected
 19797  0042B0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19798  0042B2  0E7C               	movlw	low STR_130
 19799  0042B4  6F83               	movwf	sprintf@f& (0+255),b
 19800  0042B6  0E7F               	movlw	high STR_130
 19801  0042B8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19802  0042BA  C093  F085         	movff	getStringJSON@key,?_sprintf+4
 19803  0042BE  C094  F086         	movff	getStringJSON@key+1,?_sprintf+5
 19804  0042C2  EC07  F02C         	call	_sprintf	;wreg free
 19805                           
 19806                           ;json.c: 59: for (i = 0; i < strlen(buff) && isValid == 0; i++)
 19807  0042C6  0E00               	movlw	0
 19808  0042C8  0100               	movlb	0	; () banked
 19809  0042CA  6FDF               	movwf	(getStringJSON@i+1)& (0+255),b
 19810  0042CC  0E00               	movlw	0
 19811  0042CE  6FDE               	movwf	getStringJSON@i& (0+255),b
 19812  0042D0  D090               	goto	l1577
 19813  0042D2                     
 19814                           ; BSR set to: 0
 19815                           ;json.c: 60: {
 19816                           ;json.c: 61: if (buff[i] == expected[j] && !find)
 19817                           
 19818                           ; BSR set to: 0
 19819  0042D2  0EB2               	movlw	low getStringJSON@expected
 19820  0042D4  25DB               	addwf	getStringJSON@j& (0+255),w,b
 19821  0042D6  6ED9               	movwf	fsr2l,c
 19822  0042D8  0E00               	movlw	high getStringJSON@expected
 19823  0042DA  21DC               	addwfc	(getStringJSON@j+1)& (0+255),w,b
 19824  0042DC  6EDA               	movwf	fsr2h,c
 19825  0042DE  51DE               	movf	getStringJSON@i& (0+255),w,b
 19826  0042E0  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19827  0042E2  6EE1               	movwf	fsr1l,c
 19828  0042E4  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19829  0042E6  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19830  0042E8  6EE2               	movwf	fsr1h,c
 19831  0042EA  50DE               	movf	postinc2,w,c
 19832  0042EC  18E6               	xorwf	postinc1,w,c
 19833  0042EE  A4D8               	btfss	status,2,c
 19834  0042F0  D035               	goto	l1579
 19835                           
 19836                           ; BSR set to: 0
 19837  0042F2  51DD               	movf	getStringJSON@find& (0+255),w,b
 19838  0042F4  A4D8               	btfss	status,2,c
 19839  0042F6  D032               	goto	l1579
 19840                           
 19841                           ; BSR set to: 0
 19842                           ;json.c: 62: {
 19843                           ;json.c: 63: sprintf(attr, "%s%c", attr, buff[i]);
 19844  0042F8  0EC6               	movlw	low getStringJSON@attr
 19845  0042FA  6F81               	movwf	sprintf@wh& (0+255),b
 19846  0042FC  0E00               	movlw	high getStringJSON@attr
 19847  0042FE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19848  004300  0EC6               	movlw	low STR_128
 19849  004302  6F83               	movwf	sprintf@f& (0+255),b
 19850  004304  0E7F               	movlw	high STR_128
 19851  004306  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19852  004308  0EC6               	movlw	low getStringJSON@attr
 19853  00430A  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19854  00430C  0E00               	movlw	high getStringJSON@attr
 19855  00430E  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19856  004310  51DE               	movf	getStringJSON@i& (0+255),w,b
 19857  004312  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19858  004314  6ED9               	movwf	fsr2l,c
 19859  004316  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19860  004318  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19861  00431A  6EDA               	movwf	fsr2h,c
 19862  00431C  50DF               	movf	indf2,w,c
 19863  00431E  6F97               	movwf	??_getStringJSON& (0+255),b
 19864  004320  5197               	movf	??_getStringJSON& (0+255),w,b
 19865  004322  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19866  004324  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19867  004326  EC07  F02C         	call	_sprintf	;wreg free
 19868                           
 19869                           ;json.c: 64: j++;
 19870  00432A  0100               	movlb	0	; () banked
 19871  00432C  4BDB               	infsnz	getStringJSON@j& (0+255),f,b
 19872  00432E  2BDC               	incf	(getStringJSON@j+1)& (0+255),f,b
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;json.c: 65: if (strstr(attr, expected))
 19876  004330  0EC6               	movlw	low getStringJSON@attr
 19877  004332  6F6F               	movwf	strstr@s1& (0+255),b
 19878  004334  0E00               	movlw	high getStringJSON@attr
 19879  004336  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19880  004338  0EB2               	movlw	low getStringJSON@expected
 19881  00433A  6F71               	movwf	strstr@s2& (0+255),b
 19882  00433C  0E00               	movlw	high getStringJSON@expected
 19883  00433E  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19884  004340  ECAD  F026         	call	_strstr	;wreg free
 19885  004344  0100               	movlb	0	; () banked
 19886  004346  516F               	movf	?_strstr& (0+255),w,b
 19887  004348  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19888  00434A  B4D8               	btfsc	status,2,c
 19889  00434C  D04F               	goto	l1585
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;json.c: 66: {
 19893                           ;json.c: 67: j = 0;
 19894  00434E  0E00               	movlw	0
 19895  004350  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19896  004352  0E00               	movlw	0
 19897  004354  6FDB               	movwf	getStringJSON@j& (0+255),b
 19898                           
 19899                           ;json.c: 68: find = 1;
 19900  004356  0E01               	movlw	1
 19901  004358  6FDD               	movwf	getStringJSON@find& (0+255),b
 19902                           
 19903                           ; BSR set to: 0
 19904                           ;json.c: 69: }
 19905                           ;json.c: 70: }
 19906  00435A  D048               	goto	l1585
 19907  00435C                     l1579:
 19908                           
 19909                           ; BSR set to: 0
 19910                           ;json.c: 71: else if (!find)
 19911                           
 19912                           ; BSR set to: 0
 19913  00435C  51DD               	movf	getStringJSON@find& (0+255),w,b
 19914  00435E  A4D8               	btfss	status,2,c
 19915  004360  D00F               	goto	l1582
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;json.c: 72: {
 19919                           ;json.c: 73: j = 0;
 19920  004362  0E00               	movlw	0
 19921  004364  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19922  004366  0E00               	movlw	0
 19923  004368  6FDB               	movwf	getStringJSON@j& (0+255),b
 19924                           
 19925                           ; BSR set to: 0
 19926                           ;json.c: 74: sprintf(attr, "");
 19927  00436A  0EC6               	movlw	low getStringJSON@attr
 19928  00436C  6F81               	movwf	sprintf@wh& (0+255),b
 19929  00436E  0E00               	movlw	high getStringJSON@attr
 19930  004370  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19931  004372  0E82               	movlw	low (STR_35+44)
 19932  004374  6F83               	movwf	sprintf@f& (0+255),b
 19933  004376  0E7B               	movlw	high (STR_35+44)
 19934  004378  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19935  00437A  EC07  F02C         	call	_sprintf	;wreg free
 19936                           
 19937                           ;json.c: 75: }
 19938  00437E  D036               	goto	l1585
 19939  004380                     l1582:
 19940                           
 19941                           ;json.c: 76: else
 19942                           ;json.c: 77: {
 19943                           ;json.c: 78: if (buff[i] == '"')
 19944  004380  0100               	movlb	0	; () banked
 19945  004382  51DE               	movf	getStringJSON@i& (0+255),w,b
 19946  004384  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19947  004386  6ED9               	movwf	fsr2l,c
 19948  004388  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19949  00438A  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19950  00438C  6EDA               	movwf	fsr2h,c
 19951  00438E  0E22               	movlw	34
 19952  004390  18DE               	xorwf	postinc2,w,c
 19953  004392  A4D8               	btfss	status,2,c
 19954  004394  D011               	goto	l1584
 19955                           
 19956                           ; BSR set to: 0
 19957                           ;json.c: 79: {
 19958                           ;json.c: 80: isValid = 1;
 19959  004396  0E01               	movlw	1
 19960  004398  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19961                           
 19962                           ; BSR set to: 0
 19963                           ;json.c: 81: sprintf(ret, "%s", res);
 19964  00439A  C095  F081         	movff	getStringJSON@ret,sprintf@wh
 19965  00439E  C096  F082         	movff	getStringJSON@ret+1,sprintf@wh+1
 19966  0043A2  0E0F               	movlw	low (STR_97+7)
 19967  0043A4  6F83               	movwf	sprintf@f& (0+255),b
 19968  0043A6  0E7F               	movlw	high (STR_97+7)
 19969  0043A8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19970  0043AA  0E99               	movlw	low getStringJSON@res
 19971  0043AC  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19972  0043AE  0E00               	movlw	high getStringJSON@res
 19973  0043B0  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19974  0043B2  EC07  F02C         	call	_sprintf	;wreg free
 19975                           
 19976                           ;json.c: 82: }
 19977  0043B6  D01A               	goto	l1585
 19978  0043B8                     l1584:
 19979                           
 19980                           ;json.c: 83: else
 19981                           ;json.c: 84: {
 19982                           ;json.c: 85: sprintf(res, "%s%c", res, buff[i]);
 19983  0043B8  0E99               	movlw	low getStringJSON@res
 19984  0043BA  0100               	movlb	0	; () banked
 19985  0043BC  6F81               	movwf	sprintf@wh& (0+255),b
 19986  0043BE  0E00               	movlw	high getStringJSON@res
 19987  0043C0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19988  0043C2  0EC6               	movlw	low STR_128
 19989  0043C4  6F83               	movwf	sprintf@f& (0+255),b
 19990  0043C6  0E7F               	movlw	high STR_128
 19991  0043C8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19992  0043CA  0E99               	movlw	low getStringJSON@res
 19993  0043CC  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19994  0043CE  0E00               	movlw	high getStringJSON@res
 19995  0043D0  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19996  0043D2  51DE               	movf	getStringJSON@i& (0+255),w,b
 19997  0043D4  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19998  0043D6  6ED9               	movwf	fsr2l,c
 19999  0043D8  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 20000  0043DA  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 20001  0043DC  6EDA               	movwf	fsr2h,c
 20002  0043DE  50DF               	movf	indf2,w,c
 20003  0043E0  6F97               	movwf	??_getStringJSON& (0+255),b
 20004  0043E2  5197               	movf	??_getStringJSON& (0+255),w,b
 20005  0043E4  6F87               	movwf	(?_sprintf+6)& (0+255),b
 20006  0043E6  6B88               	clrf	(?_sprintf+7)& (0+255),b
 20007  0043E8  EC07  F02C         	call	_sprintf	;wreg free
 20008  0043EC                     l1585:
 20009  0043EC  0100               	movlb	0	; () banked
 20010  0043EE  4BDE               	infsnz	getStringJSON@i& (0+255),f,b
 20011  0043F0  2BDF               	incf	(getStringJSON@i+1)& (0+255),f,b
 20012  0043F2                     l1577:
 20013                           
 20014                           ; BSR set to: 0
 20015                           
 20016                           ; BSR set to: 0
 20017  0043F2  C091  F060         	movff	getStringJSON@buff,strlen@s
 20018  0043F6  C092  F061         	movff	getStringJSON@buff+1,strlen@s+1
 20019  0043FA  EC3C  F02B         	call	_strlen	;wreg free
 20020  0043FE  0100               	movlb	0	; () banked
 20021  004400  5160               	movf	?_strlen& (0+255),w,b
 20022  004402  5DDE               	subwf	getStringJSON@i& (0+255),w,b
 20023  004404  5161               	movf	(?_strlen+1)& (0+255),w,b
 20024  004406  59DF               	subwfb	(getStringJSON@i+1)& (0+255),w,b
 20025  004408  B0D8               	btfsc	status,0,c
 20026  00440A  0012               	return	
 20027                           
 20028                           ; BSR set to: 0
 20029  00440C  51DA               	movf	getStringJSON@isValid& (0+255),w,b
 20030  00440E  A4D8               	btfss	status,2,c
 20031  004410  0012               	return	
 20032  004412  D75F               	goto	l1578
 20033  004414                     __end_of_getStringJSON:
 20034                           	opt stack 0
 20035                           tblptru	equ	0xFF8
 20036                           tblptrh	equ	0xFF7
 20037                           tblptrl	equ	0xFF6
 20038                           tablat	equ	0xFF5
 20039                           prodh	equ	0xFF4
 20040                           prodl	equ	0xFF3
 20041                           intcon	equ	0xFF2
 20042                           intcon2	equ	0xFF1
 20043                           intcon3	equ	0xFF0
 20044                           postinc0	equ	0xFEE
 20045                           wreg	equ	0xFE8
 20046                           indf1	equ	0xFE7
 20047                           postinc1	equ	0xFE6
 20048                           postdec1	equ	0xFE5
 20049                           plusw1	equ	0xFE3
 20050                           fsr1h	equ	0xFE2
 20051                           fsr1l	equ	0xFE1
 20052                           indf2	equ	0xFDF
 20053                           postinc2	equ	0xFDE
 20054                           postdec2	equ	0xFDD
 20055                           plusw2	equ	0xFDB
 20056                           fsr2h	equ	0xFDA
 20057                           fsr2l	equ	0xFD9
 20058                           status	equ	0xFD8
 20059                           
 20060 ;; *************** function _sprintf *****************
 20061 ;; Defined at:
 20062 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 20065 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 20066 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), enviaDadosWifi@AUX(15), portServer(4), 
 20067 ;;		 -> ipServer(20), senha(15), ssid(15), line4(21), 
 20068 ;;		 -> line3(21), line2(21), line1(21), 
 20069 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 20070 ;;		 -> STR_135(3), STR_134(5), STR_133(3), STR_132(1), 
 20071 ;;		 -> STR_131(5), STR_130(7), STR_129(1), STR_128(5), 
 20072 ;;		 -> STR_127(6), STR_126(18), STR_125(19), STR_124(19), 
 20073 ;;		 -> STR_123(19), STR_122(20), STR_121(9), STR_120(7), 
 20074 ;;		 -> STR_119(8), STR_118(8), STR_117(10), STR_116(18), 
 20075 ;;		 -> STR_115(18), STR_114(18), STR_113(17), STR_112(17), 
 20076 ;;		 -> STR_111(17), STR_110(17), STR_109(20), STR_108(20), 
 20077 ;;		 -> STR_107(20), STR_104(11), STR_101(10), STR_98(9), 
 20078 ;;		 -> STR_97(10), STR_96(9), STR_95(15), STR_94(18), 
 20079 ;;		 -> STR_93(20), STR_92(10), STR_91(22), STR_90(21), 
 20080 ;;		 -> STR_89(15), STR_88(12), STR_86(3), STR_85(14), 
 20081 ;;		 -> STR_84(20), STR_69(3), STR_48(18), STR_47(6), 
 20082 ;;		 -> STR_46(3), STR_45(3), STR_39(14), STR_29(9), 
 20083 ;;		 -> STR_28(21), STR_27(17), STR_26(20), 
 20084 ;; Auto vars:     Size  Location     Type
 20085 ;;  pb              4   45[BANK0 ] struct __prbuf
 20086 ;;  ap              2   43[BANK0 ] PTR void [1]
 20087 ;;		 -> ?_sprintf(2), ?_printf(2), 
 20088 ;; Return value:  Size  Location     Type
 20089 ;;                  2   33[BANK0 ] int 
 20090 ;; Registers used:
 20091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20092 ;; Tracked objects:
 20093 ;;		On entry : 0/0
 20094 ;;		On exit  : 0/0
 20095 ;;		Unchanged: 0/0
 20096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20097 ;;      Params:         0      10       0       0       0       0       0       0       0
 20098 ;;      Locals:         0       6       0       0       0       0       0       0       0
 20099 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20100 ;;      Totals:         0      16       0       0       0       0       0       0       0
 20101 ;;Total ram usage:       16 bytes
 20102 ;; Hardware stack levels used:    1
 20103 ;; Hardware stack levels required when called:    8
 20104 ;; This function calls:
 20105 ;;		__doprnt
 20106 ;; This function is called by:
 20107 ;;		_alterarDadosConexaoConfigWifi
 20108 ;;		_enviaDadosWifi
 20109 ;;		_main
 20110 ;;		_getStringJSON
 20111 ;;		_setKeyStartReceiveSerial
 20112 ;;		_getIntJSON
 20113 ;; This function uses a non-reentrant model
 20114 ;;
 20115                           
 20116                           	psect	text37
 20117  00580E                     __ptext37:
 20118                           	opt stack 0
 20119  00580E                     _sprintf:
 20120                           	opt stack 22
 20121                           
 20122                           ; BSR set to: 0
 20123                           ;incstack = 0
 20124  00580E  C081  F08D         	movff	sprintf@wh,sprintf@pb
 20125  005812  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 20126  005816  0E00               	movlw	0
 20127  005818  0100               	movlb	0	; () banked
 20128  00581A  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 20129  00581C  0E00               	movlw	0
 20130  00581E  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 20131  005820  0E85               	movlw	low (?_sprintf+4)
 20132  005822  6F8B               	movwf	sprintf@ap& (0+255),b
 20133  005824  0E00               	movlw	high (?_sprintf+4)
 20134  005826  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 20135                           
 20136                           ; BSR set to: 0
 20137  005828  0E8D               	movlw	low sprintf@pb
 20138  00582A  6F6C               	movwf	__doprnt@pb& (0+255),b
 20139  00582C  0E00               	movlw	high sprintf@pb
 20140  00582E  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 20141  005830  C083  F06E         	movff	sprintf@f,__doprnt@f
 20142  005834  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 20143  005838  0E8B               	movlw	low sprintf@ap
 20144  00583A  6F70               	movwf	__doprnt@ap& (0+255),b
 20145  00583C  0E00               	movlw	high sprintf@ap
 20146  00583E  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 20147  005840  EC03  F013         	call	__doprnt	;wreg free
 20148  005844  C08D  FFD9         	movff	sprintf@pb,fsr2l
 20149  005848  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 20150  00584C  0E00               	movlw	0
 20151  00584E  6EDF               	movwf	indf2,c
 20152  005850  0012               	return	
 20153  005852                     __end_of_sprintf:
 20154                           	opt stack 0
 20155                           tblptru	equ	0xFF8
 20156                           tblptrh	equ	0xFF7
 20157                           tblptrl	equ	0xFF6
 20158                           tablat	equ	0xFF5
 20159                           prodh	equ	0xFF4
 20160                           prodl	equ	0xFF3
 20161                           intcon	equ	0xFF2
 20162                           intcon2	equ	0xFF1
 20163                           intcon3	equ	0xFF0
 20164                           postinc0	equ	0xFEE
 20165                           wreg	equ	0xFE8
 20166                           indf1	equ	0xFE7
 20167                           postinc1	equ	0xFE6
 20168                           postdec1	equ	0xFE5
 20169                           plusw1	equ	0xFE3
 20170                           fsr1h	equ	0xFE2
 20171                           fsr1l	equ	0xFE1
 20172                           indf2	equ	0xFDF
 20173                           postinc2	equ	0xFDE
 20174                           postdec2	equ	0xFDD
 20175                           plusw2	equ	0xFDB
 20176                           fsr2h	equ	0xFDA
 20177                           fsr2l	equ	0xFD9
 20178                           status	equ	0xFD8
 20179                           
 20180 ;; *************** function __doprnt *****************
 20181 ;; Defined at:
 20182 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 20183 ;; Parameters:    Size  Location     Type
 20184 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 20185 ;;		 -> sprintf@pb(4), printf@pb(4), 
 20186 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 20187 ;;		 -> STR_135(3), STR_134(5), STR_133(3), STR_132(1), 
 20188 ;;		 -> STR_131(5), STR_130(7), STR_129(1), STR_128(5), 
 20189 ;;		 -> STR_127(6), STR_126(18), STR_125(19), STR_124(19), 
 20190 ;;		 -> STR_123(19), STR_122(20), STR_121(9), STR_120(7), 
 20191 ;;		 -> STR_119(8), STR_118(8), STR_117(10), STR_116(18), 
 20192 ;;		 -> STR_115(18), STR_114(18), STR_113(17), STR_112(17), 
 20193 ;;		 -> STR_111(17), STR_110(17), STR_109(20), STR_108(20), 
 20194 ;;		 -> STR_107(20), STR_104(11), STR_101(10), STR_98(9), 
 20195 ;;		 -> STR_97(10), STR_96(9), STR_95(15), STR_94(18), 
 20196 ;;		 -> STR_93(20), STR_92(10), STR_91(22), STR_90(21), 
 20197 ;;		 -> STR_89(15), STR_88(12), STR_86(3), STR_85(14), 
 20198 ;;		 -> STR_84(20), STR_83(9), STR_81(11), STR_78(14), 
 20199 ;;		 -> STR_74(14), STR_71(168), STR_69(3), STR_66(19), 
 20200 ;;		 -> STR_63(28), STR_59(15), STR_57(21), STR_53(14), 
 20201 ;;		 -> STR_50(14), STR_48(18), STR_47(6), STR_46(3), 
 20202 ;;		 -> STR_45(3), STR_39(14), STR_37(16), STR_36(597), 
 20203 ;;		 -> STR_35(45), STR_32(21), STR_29(9), STR_28(21), 
 20204 ;;		 -> STR_27(17), STR_26(20), STR_23(20), STR_20(22), 
 20205 ;;		 -> STR_17(35), STR_14(14), STR_11(14), 
 20206 ;;  ap              2   16[BANK0 ] PTR PTR void 
 20207 ;;		 -> sprintf@ap(2), printf@ap(2), 
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;  tmpval          4    0        struct .
 20210 ;;  width           2   30[BANK0 ] int 
 20211 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 20212 ;;		 -> ?_sprintf(2), ?_printf(2), STR_137(7), _doprnt@c(1), 
 20213 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 20214 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), STR_106(10), STR_105(7), 
 20215 ;;		 -> STR_103(11), STR_102(8), STR_100(11), STR_99(7), 
 20216 ;;		 -> STR_87(12), STR_80(7), STR_77(7), STR_73(4), 
 20217 ;;		 -> STR_70(12), enviaDadosWifi@AUX(15), STR_68(4), STR_65(4), 
 20218 ;;		 -> STR_62(4), STR_58(4), STR_56(4), STR_52(4), 
 20219 ;;		 -> STR_49(4), wifi_MAC(12), STR_44(3), STR_43(3), 
 20220 ;;		 -> STR_42(3), STR_41(3), STR_38(3), portServer(4), 
 20221 ;;		 -> ipServer(20), senha(15), ssid(15), STR_34(4), 
 20222 ;;		 -> NULL(0), STR_31(4), line4(21), line3(21), 
 20223 ;;		 -> line2(21), line1(21), STR_25(7), STR_22(4), 
 20224 ;;		 -> STR_19(4), STR_16(4), STR_13(4), STR_10(4), 
 20225 ;;		 -> STR_9(3), STR_8(5), STR_7(7), STR_6(6), 
 20226 ;;		 -> STR_5(4), STR_4(10), STR_3(11), STR_2(12), 
 20227 ;;		 -> STR_1(11), 
 20228 ;;  len             2   26[BANK0 ] unsigned int 
 20229 ;;  val             2   24[BANK0 ] unsigned int 
 20230 ;;  c               1   32[BANK0 ] char 
 20231 ;;  flag            1   23[BANK0 ] unsigned char 
 20232 ;;  prec            1   22[BANK0 ] char 
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  2   12[BANK0 ] int 
 20235 ;; Registers used:
 20236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20242 ;;      Params:         0       6       0       0       0       0       0       0       0
 20243 ;;      Locals:         0      11       0       0       0       0       0       0       0
 20244 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20245 ;;      Totals:         0      21       0       0       0       0       0       0       0
 20246 ;;Total ram usage:       21 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; Hardware stack levels required when called:    7
 20249 ;; This function calls:
 20250 ;;		Absolute function
 20251 ;;		___lwdiv
 20252 ;;		___lwmod
 20253 ;;		___wmul
 20254 ;;		_isdigit
 20255 ;;		_putch
 20256 ;; This function is called by:
 20257 ;;		_printf
 20258 ;;		_sprintf
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262                           	psect	text38
 20263  002606                     __ptext38:
 20264                           	opt stack 0
 20265  002606                     __doprnt:
 20266                           	opt stack 22
 20267                           
 20268                           ;doprnt.c: 499: signed char c;
 20269                           ;doprnt.c: 501: int width;
 20270                           ;doprnt.c: 506: signed char prec;
 20271                           ;doprnt.c: 508: unsigned char flag;
 20272                           ;doprnt.c: 523: union {
 20273                           ;doprnt.c: 524: unsigned long vd;
 20274                           ;doprnt.c: 525: double integ;
 20275                           ;doprnt.c: 526: } tmpval;
 20276                           ;doprnt.c: 528: unsigned int val;
 20277                           ;doprnt.c: 529: unsigned len;
 20278                           ;doprnt.c: 530: const char * cp;
 20279                           ;doprnt.c: 536: while(c = *f++) {
 20280                           
 20281                           ;incstack = 0
 20282  002606  D2CC               	goto	u8260
 20283  002608                     
 20284                           ;doprnt.c: 538: if(c != '%')
 20285  002608  0E25               	movlw	37
 20286  00260A  0100               	movlb	0	; () banked
 20287  00260C  1980               	xorwf	__doprnt@c& (0+255),w,b
 20288  00260E  B4D8               	btfsc	status,2,c
 20289  002610  D033               	goto	l1634
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;doprnt.c: 540: {
 20293                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 20294  002612  EE20 F002          	lfsr	2,2
 20295  002616  516C               	movf	__doprnt@pb& (0+255),w,b
 20296  002618  26D9               	addwf	fsr2l,f,c
 20297  00261A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20298  00261C  22DA               	addwfc	fsr2h,f,c
 20299  00261E  50DE               	movf	postinc2,w,c
 20300  002620  10DE               	iorwf	postinc2,w,c
 20301  002622  B4D8               	btfsc	status,2,c
 20302  002624  D013               	goto	l1635
 20303                           
 20304                           ; BSR set to: 0
 20305  002626  EE20 F002          	lfsr	2,2
 20306  00262A  516C               	movf	__doprnt@pb& (0+255),w,b
 20307  00262C  26D9               	addwf	fsr2l,f,c
 20308  00262E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20309  002630  22DA               	addwfc	fsr2h,f,c
 20310  002632  D801               	call	u7958
 20311  002634  D2B5               	goto	u8260
 20312  002636                     u7958:
 20313  002636  0005               	push	
 20314  002638  6EFA               	movwf	pclath,c
 20315  00263A  50DE               	movf	postinc2,w,c
 20316  00263C  6EFD               	movwf	tosl,c
 20317  00263E  50DE               	movf	postinc2,w,c
 20318  002640  6EFE               	movwf	tosh,c
 20319  002642  50F8               	movf	tblptru,w,c
 20320  002644  6EFF               	movwf	tosu,c
 20321  002646  50FA               	movf	pclath,w,c
 20322  002648  5180               	movf	__doprnt@c& (0+255),w,b
 20323  00264A  0012               	return		;indir
 20324  00264C                     l1635:
 20325  00264C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20326  002650  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20327  002654  CFDE F072          	movff	postinc2,??__doprnt
 20328  002658  CFDD F073          	movff	postdec2,??__doprnt+1
 20329  00265C  C072  FFD9         	movff	??__doprnt,fsr2l
 20330  002660  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20331  002664  C080  FFDF         	movff	__doprnt@c,indf2
 20332  002668  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20333  00266C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20334  002670  2ADE               	incf	postinc2,f,c
 20335  002672  0E00               	movlw	0
 20336  002674  22DD               	addwfc	postdec2,f,c
 20337                           
 20338                           ;doprnt.c: 542: continue;
 20339  002676  D294               	goto	u8260
 20340  002678                     l1634:
 20341                           
 20342                           ;doprnt.c: 543: }
 20343                           ;doprnt.c: 546: width = 0;
 20344  002678  0E00               	movlw	0
 20345  00267A  0100               	movlb	0	; () banked
 20346  00267C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20347  00267E  0E00               	movlw	0
 20348  002680  6F7E               	movwf	__doprnt@width& (0+255),b
 20349                           
 20350                           ;doprnt.c: 548: flag = 0;
 20351  002682  0E00               	movlw	0
 20352  002684  6F77               	movwf	__doprnt@flag& (0+255),b
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20356  002686  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20357  00268A  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20358  00268E                     	if	0	;tblptru may be non-zero
 20359  00268E                     	endif
 20360  00268E                     	if	0	;tblptru may be non-zero
 20361  00268E                     	endif
 20362  00268E  0008               	tblrd		*
 20363  002690  50F5               	movf	tablat,w,c
 20364  002692  ECF4  F02D         	call	_isdigit
 20365  002696  A0D8               	btfss	status,0,c
 20366  002698  D13C               	goto	l1640
 20367                           
 20368                           ;doprnt.c: 598: width = 0;
 20369  00269A  0E00               	movlw	0
 20370  00269C  0100               	movlb	0	; () banked
 20371  00269E  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20372  0026A0  0E00               	movlw	0
 20373  0026A2  6F7E               	movwf	__doprnt@width& (0+255),b
 20374  0026A4                     
 20375                           ;doprnt.c: 600: width *= 10;
 20376                           
 20377                           ; BSR set to: 0
 20378  0026A4  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 20379  0026A8  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 20380  0026AC  0E00               	movlw	0
 20381  0026AE  0100               	movlb	0	; () banked
 20382  0026B0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20383  0026B2  0E0A               	movlw	10
 20384  0026B4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 20385  0026B6  EC80  F02D         	call	___wmul	;wreg free
 20386  0026BA  C060  F07E         	movff	?___wmul,__doprnt@width
 20387  0026BE  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 20388                           
 20389                           ;doprnt.c: 601: width += *f++ - '0';
 20390  0026C2  0ED0               	movlw	208
 20391  0026C4  0100               	movlb	0	; () banked
 20392  0026C6  6F72               	movwf	??__doprnt& (0+255),b
 20393  0026C8  0EFF               	movlw	255
 20394  0026CA  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20395  0026CC  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20396  0026D0  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20397  0026D4                     	if	0	;tblptru may be non-zero
 20398  0026D4                     	endif
 20399  0026D4                     	if	0	;tblptru may be non-zero
 20400  0026D4                     	endif
 20401  0026D4  0008               	tblrd		*
 20402  0026D6  50F5               	movf	tablat,w,c
 20403  0026D8  6F74               	movwf	(??__doprnt+2)& (0+255),b
 20404  0026DA  6B75               	clrf	(??__doprnt+3)& (0+255),b
 20405  0026DC  5172               	movf	??__doprnt& (0+255),w,b
 20406  0026DE  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 20407  0026E0  5173               	movf	(??__doprnt+1)& (0+255),w,b
 20408  0026E2  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 20409  0026E4  5174               	movf	(??__doprnt+2)& (0+255),w,b
 20410  0026E6  277E               	addwf	__doprnt@width& (0+255),f,b
 20411  0026E8  5175               	movf	(??__doprnt+3)& (0+255),w,b
 20412  0026EA  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 20413                           
 20414                           ; BSR set to: 0
 20415  0026EC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20416  0026EE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20420  0026F0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20421  0026F4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20422  0026F8                     	if	0	;tblptru may be non-zero
 20423  0026F8                     	endif
 20424  0026F8                     	if	0	;tblptru may be non-zero
 20425  0026F8                     	endif
 20426  0026F8  0008               	tblrd		*
 20427  0026FA  50F5               	movf	tablat,w,c
 20428  0026FC  ECF4  F02D         	call	_isdigit
 20429  002700  A0D8               	btfss	status,0,c
 20430  002702  D107               	goto	l1640
 20431  002704  D7CF               	goto	l1638
 20432  002706                     
 20433                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20434  002706  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20435  00270A  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20436  00270E  CFDF F072          	movff	indf2,??__doprnt
 20437  002712  0E02               	movlw	2
 20438  002714  26DE               	addwf	postinc2,f,c
 20439  002716  CFDF F073          	movff	indf2,??__doprnt+1
 20440  00271A  0E00               	movlw	0
 20441  00271C  22DD               	addwfc	postdec2,f,c
 20442  00271E  C072  FFD9         	movff	??__doprnt,fsr2l
 20443  002722  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20444  002726  CFDE F07C          	movff	postinc2,__doprnt@cp
 20445  00272A  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 20446                           
 20447                           ;doprnt.c: 740: if(!cp)
 20448  00272E  0100               	movlb	0	; () banked
 20449  002730  517C               	movf	__doprnt@cp& (0+255),w,b
 20450  002732  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 20451  002734  A4D8               	btfss	status,2,c
 20452  002736  D004               	goto	l1647
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;doprnt.c: 741: cp = "(null)";
 20456  002738  0E75               	movlw	low STR_137
 20457  00273A  6F7C               	movwf	__doprnt@cp& (0+255),b
 20458  00273C  0E7F               	movlw	high STR_137
 20459  00273E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20460  002740                     l1647:
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;doprnt.c: 745: len = 0;
 20464                           
 20465                           ; BSR set to: 0
 20466  002740  0E00               	movlw	0
 20467  002742  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20468  002744  0E00               	movlw	0
 20469  002746  6F7A               	movwf	__doprnt@len& (0+255),b
 20470                           
 20471                           ;doprnt.c: 746: while(cp[len])
 20472  002748  D003               	goto	l1648
 20473  00274A                     
 20474                           ;doprnt.c: 747: len++;
 20475                           
 20476                           ; BSR set to: 0
 20477  00274A  0100               	movlb	0	; () banked
 20478  00274C  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 20479  00274E  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 20480  002750                     l1648:
 20481                           
 20482                           ; BSR set to: 0
 20483                           
 20484                           ; BSR set to: 0
 20485  002750  517A               	movf	__doprnt@len& (0+255),w,b
 20486  002752  257C               	addwf	__doprnt@cp& (0+255),w,b
 20487  002754  6F72               	movwf	??__doprnt& (0+255),b
 20488  002756  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20489  002758  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 20490  00275A  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20491  00275C  C072  FFF6         	movff	??__doprnt,tblptrl
 20492  002760  C073  FFF7         	movff	??__doprnt+1,tblptrh
 20493  002764  6AF8               	clrf	tblptru,c
 20494  002766  0E07               	movlw	(high __ramtop+-1)
 20495  002768  64F7               	cpfsgt	tblptrh,c
 20496  00276A  D003               	bra	u7997
 20497  00276C  0008               	tblrd		*
 20498  00276E  50F5               	movf	tablat,w,c
 20499  002770  D005               	bra	u7990
 20500  002772                     u7997:
 20501  002772  CFF6 FFE9          	movff	tblptrl,fsr0l
 20502  002776  CFF7 FFEA          	movff	tblptrh,fsr0h
 20503  00277A  50EF               	movf	indf0,w,c
 20504  00277C                     u7990:
 20505  00277C  0900               	iorlw	0
 20506  00277E  A4D8               	btfss	status,2,c
 20507  002780  D7E4               	goto	l1649
 20508  002782                     u8000:
 20509                           
 20510                           ;doprnt.c: 757: if(width > len)
 20511                           
 20512                           ;doprnt.c: 750: dostring:
 20513  002782  0100               	movlb	0	; () banked
 20514  002784  517E               	movf	__doprnt@width& (0+255),w,b
 20515  002786  5D7A               	subwf	__doprnt@len& (0+255),w,b
 20516  002788  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20517  00278A  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 20518  00278C  B0D8               	btfsc	status,0,c
 20519  00278E  D005               	goto	l1652
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;doprnt.c: 758: width -= len;
 20523  002790  517A               	movf	__doprnt@len& (0+255),w,b
 20524  002792  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20525  002794  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20526  002796  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20527  002798  D037               	goto	l1657
 20528  00279A                     l1652:
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;doprnt.c: 759: else
 20532                           ;doprnt.c: 760: width = 0;
 20533                           
 20534                           ; BSR set to: 0
 20535  00279A  0E00               	movlw	0
 20536  00279C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20537  00279E  0E00               	movlw	0
 20538  0027A0  6F7E               	movwf	__doprnt@width& (0+255),b
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;doprnt.c: 764: while(width--)
 20542  0027A2  D032               	goto	l1657
 20543  0027A4                     l6431:
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20547  0027A4  EE20 F002          	lfsr	2,2
 20548  0027A8  516C               	movf	__doprnt@pb& (0+255),w,b
 20549  0027AA  26D9               	addwf	fsr2l,f,c
 20550  0027AC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20551  0027AE  22DA               	addwfc	fsr2h,f,c
 20552  0027B0  50DE               	movf	postinc2,w,c
 20553  0027B2  10DE               	iorwf	postinc2,w,c
 20554  0027B4  B4D8               	btfsc	status,2,c
 20555  0027B6  D013               	goto	l1656
 20556                           
 20557                           ; BSR set to: 0
 20558  0027B8  EE20 F002          	lfsr	2,2
 20559  0027BC  516C               	movf	__doprnt@pb& (0+255),w,b
 20560  0027BE  26D9               	addwf	fsr2l,f,c
 20561  0027C0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20562  0027C2  22DA               	addwfc	fsr2h,f,c
 20563  0027C4  D801               	call	u8038
 20564  0027C6  D020               	goto	l1657
 20565  0027C8                     u8038:
 20566  0027C8  0005               	push	
 20567  0027CA  6EFA               	movwf	pclath,c
 20568  0027CC  50DE               	movf	postinc2,w,c
 20569  0027CE  6EFD               	movwf	tosl,c
 20570  0027D0  50DE               	movf	postinc2,w,c
 20571  0027D2  6EFE               	movwf	tosh,c
 20572  0027D4  50F8               	movf	tblptru,w,c
 20573  0027D6  6EFF               	movwf	tosu,c
 20574  0027D8  50FA               	movf	pclath,w,c
 20575  0027DA  0E20               	movlw	32
 20576  0027DC  0012               	return		;indir
 20577  0027DE                     l1656:
 20578  0027DE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20579  0027E2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20580  0027E6  CFDE F072          	movff	postinc2,??__doprnt
 20581  0027EA  CFDD F073          	movff	postdec2,??__doprnt+1
 20582  0027EE  C072  FFD9         	movff	??__doprnt,fsr2l
 20583  0027F2  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20584  0027F6  0E20               	movlw	32
 20585  0027F8  6EDF               	movwf	indf2,c
 20586  0027FA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20587  0027FE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20588  002802  2ADE               	incf	postinc2,f,c
 20589  002804  0E00               	movlw	0
 20590  002806  22DD               	addwfc	postdec2,f,c
 20591  002808                     l1657:
 20592  002808  0100               	movlb	0	; () banked
 20593  00280A  077E               	decf	__doprnt@width& (0+255),f,b
 20594  00280C  A0D8               	btfss	status,0,c
 20595  00280E  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20596  002810  297E               	incf	__doprnt@width& (0+255),w,b
 20597  002812  E1C8               	bnz	l6431
 20598  002814  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 20599  002816  B4D8               	btfsc	status,2,c
 20600  002818  D058               	goto	l1662
 20601  00281A  D7C4               	goto	l1655
 20602  00281C                     l6441:
 20603                           
 20604                           ; BSR set to: 0
 20605                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 20606  00281C  EE20 F002          	lfsr	2,2
 20607  002820  516C               	movf	__doprnt@pb& (0+255),w,b
 20608  002822  26D9               	addwf	fsr2l,f,c
 20609  002824  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20610  002826  22DA               	addwfc	fsr2h,f,c
 20611  002828  50DE               	movf	postinc2,w,c
 20612  00282A  10DE               	iorwf	postinc2,w,c
 20613  00282C  B4D8               	btfsc	status,2,c
 20614  00282E  D026               	goto	l1661
 20615                           
 20616                           ; BSR set to: 0
 20617  002830  EE20 F002          	lfsr	2,2
 20618  002834  516C               	movf	__doprnt@pb& (0+255),w,b
 20619  002836  26D9               	addwf	fsr2l,f,c
 20620  002838  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20621  00283A  22DA               	addwfc	fsr2h,f,c
 20622  00283C  D801               	call	u8068
 20623  00283E  D01A               	goto	u8069
 20624  002840                     u8068:
 20625  002840  0005               	push	
 20626  002842  6EFA               	movwf	pclath,c
 20627  002844  50DE               	movf	postinc2,w,c
 20628  002846  6EFD               	movwf	tosl,c
 20629  002848  50DE               	movf	postinc2,w,c
 20630  00284A  6EFE               	movwf	tosh,c
 20631  00284C  50F8               	movf	tblptru,w,c
 20632  00284E  6EFF               	movwf	tosu,c
 20633  002850  50FA               	movf	pclath,w,c
 20634  002852  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20635  002856  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20636  00285A  6AF8               	clrf	tblptru,c
 20637  00285C  0E07               	movlw	(high __ramtop+-1)
 20638  00285E  64F7               	cpfsgt	tblptrh,c
 20639  002860  D003               	bra	u8077
 20640  002862  0008               	tblrd		*
 20641  002864  50F5               	movf	tablat,w,c
 20642  002866  D005               	bra	u8070
 20643  002868                     u8077:
 20644  002868  CFF6 FFE9          	movff	tblptrl,fsr0l
 20645  00286C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20646  002870  50EF               	movf	indf0,w,c
 20647  002872                     u8070:
 20648  002872  0012               	return		;indir
 20649  002874                     u8069:
 20650  002874  0100               	movlb	0	; () banked
 20651  002876  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20652  002878  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20653  00287A  D027               	goto	l1662
 20654  00287C                     l1661:
 20655                           
 20656                           ; BSR set to: 0
 20657                           
 20658                           ; BSR set to: 0
 20659  00287C  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20660  002880  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20661  002884  6AF8               	clrf	tblptru,c
 20662  002886  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20663  00288A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20664  00288E  CFDE F072          	movff	postinc2,??__doprnt
 20665  002892  CFDD F073          	movff	postdec2,??__doprnt+1
 20666  002896  C072  FFD9         	movff	??__doprnt,fsr2l
 20667  00289A  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20668  00289E  0E07               	movlw	(high __ramtop+-1)
 20669  0028A0  64F7               	cpfsgt	tblptrh,c
 20670  0028A2  D003               	bra	u8087
 20671  0028A4  0008               	tblrd		*
 20672  0028A6  50F5               	movf	tablat,w,c
 20673  0028A8  D005               	bra	u8080
 20674  0028AA                     u8087:
 20675  0028AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 20676  0028AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 20677  0028B2  50EF               	movf	indf0,w,c
 20678  0028B4                     u8080:
 20679  0028B4  6EDF               	movwf	indf2,c
 20680  0028B6  0100               	movlb	0	; () banked
 20681  0028B8  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20682  0028BA  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20683                           
 20684                           ; BSR set to: 0
 20685  0028BC  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20686  0028C0  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20687  0028C4  2ADE               	incf	postinc2,f,c
 20688  0028C6  0E00               	movlw	0
 20689  0028C8  22DD               	addwfc	postdec2,f,c
 20690  0028CA                     l1662:
 20691                           
 20692                           ; BSR set to: 0
 20693                           
 20694                           ; BSR set to: 0
 20695                           
 20696                           ; BSR set to: 0
 20697  0028CA  077A               	decf	__doprnt@len& (0+255),f,b
 20698  0028CC  A0D8               	btfss	status,0,c
 20699  0028CE  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 20700  0028D0  297A               	incf	__doprnt@len& (0+255),w,b
 20701  0028D2  E1A4               	bnz	l6441
 20702  0028D4  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 20703  0028D6  B4D8               	btfsc	status,2,c
 20704  0028D8  D163               	goto	u8260
 20705  0028DA  D7A0               	goto	l1660
 20706  0028DC                     
 20707                           ; BSR set to: 0
 20708                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20709                           
 20710                           ; BSR set to: 0
 20711  0028DC  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20712  0028E0  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20713  0028E4  CFDF F072          	movff	indf2,??__doprnt
 20714  0028E8  0E02               	movlw	2
 20715  0028EA  26DE               	addwf	postinc2,f,c
 20716  0028EC  CFDF F073          	movff	indf2,??__doprnt+1
 20717  0028F0  0E00               	movlw	0
 20718  0028F2  22DD               	addwfc	postdec2,f,c
 20719  0028F4  C072  FFD9         	movff	??__doprnt,fsr2l
 20720  0028F8  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20721  0028FC  50DF               	movf	indf2,w,c
 20722  0028FE  6F80               	movwf	__doprnt@c& (0+255),b
 20723  002900                     
 20724                           ; BSR set to: 0
 20725                           ;doprnt.c: 805: cp = (char *)&c;
 20726                           
 20727                           ; BSR set to: 0
 20728  002900  0E80               	movlw	low __doprnt@c
 20729  002902  6F7C               	movwf	__doprnt@cp& (0+255),b
 20730  002904  0E00               	movlw	high __doprnt@c
 20731  002906  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;doprnt.c: 806: len = 1;
 20735  002908  0E00               	movlw	0
 20736  00290A  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20737  00290C  0E01               	movlw	1
 20738  00290E  6F7A               	movwf	__doprnt@len& (0+255),b
 20739                           
 20740                           ;doprnt.c: 807: goto dostring;
 20741  002910  D738               	goto	u8000
 20742  002912                     l1640:
 20743                           
 20744                           ; BSR set to: 0
 20745  002912  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20746  002916  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20747  00291A  0100               	movlb	0	; () banked
 20748  00291C  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20749  00291E  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20750  002920                     	if	0	;tblptru may be non-zero
 20751  002920                     	endif
 20752  002920                     	if	0	;tblptru may be non-zero
 20753  002920                     	endif
 20754  002920  0008               	tblrd		*
 20755  002922  CFF5 F080          	movff	tablat,__doprnt@c
 20756  002926  5180               	movf	__doprnt@c& (0+255),w,b
 20757                           
 20758                           ; Switch size 1, requested type "space"
 20759                           ; Number of cases is 5, Range of values is 0 to 115
 20760                           ; switch strategies available:
 20761                           ; Name         Instructions Cycles
 20762                           ; simple_byte           16     9 (average)
 20763                           ;	Chosen strategy is simple_byte
 20764  002928  0A00               	xorlw	0	; case 0
 20765  00292A  B4D8               	btfsc	status,2,c
 20766  00292C  D146               	goto	u8270
 20767  00292E  0A63               	xorlw	99	; case 99
 20768  002930  B4D8               	btfsc	status,2,c
 20769  002932  D7D4               	goto	l1664
 20770  002934  0A07               	xorlw	7	; case 100
 20771  002936  B4D8               	btfsc	status,2,c
 20772  002938  D007               	goto	l1645
 20773  00293A  0A0D               	xorlw	13	; case 105
 20774  00293C  B4D8               	btfsc	status,2,c
 20775  00293E  D004               	goto	l1645
 20776  002940  0A1A               	xorlw	26	; case 115
 20777  002942  B4D8               	btfsc	status,2,c
 20778  002944  D6E0               	goto	l1646
 20779  002946  D7DC               	goto	l1665
 20780  002948                     l1645:
 20781                           
 20782                           ;doprnt.c: 1253: {
 20783                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20784                           
 20785                           ; BSR set to: 0
 20786  002948  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20787  00294C  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20788  002950  CFDF F072          	movff	indf2,??__doprnt
 20789  002954  0E02               	movlw	2
 20790  002956  26DE               	addwf	postinc2,f,c
 20791  002958  CFDF F073          	movff	indf2,??__doprnt+1
 20792  00295C  0E00               	movlw	0
 20793  00295E  22DD               	addwfc	postdec2,f,c
 20794  002960  C072  FFD9         	movff	??__doprnt,fsr2l
 20795  002964  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20796  002968  CFDE F078          	movff	postinc2,__doprnt@val
 20797  00296C  CFDD F079          	movff	postdec2,__doprnt@val+1
 20798                           
 20799                           ;doprnt.c: 1261: if((int)val < 0) {
 20800  002970  0100               	movlb	0	; () banked
 20801  002972  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 20802  002974  D006               	goto	l1666
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;doprnt.c: 1262: flag |= 0x03;
 20806  002976  0E03               	movlw	3
 20807  002978  1377               	iorwf	__doprnt@flag& (0+255),f,b
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;doprnt.c: 1263: val = -val;
 20811  00297A  6D78               	negf	__doprnt@val& (0+255),b
 20812  00297C  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 20813  00297E  B0D8               	btfsc	status,0,c
 20814  002980  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 20815  002982                     l1666:
 20816                           
 20817                           ; BSR set to: 0
 20818                           ;doprnt.c: 1264: }
 20819                           ;doprnt.c: 1266: }
 20820                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20821                           
 20822                           ; BSR set to: 0
 20823  002982  0E01               	movlw	1
 20824  002984  6F80               	movwf	__doprnt@c& (0+255),b
 20825  002986                     l6475:
 20826                           
 20827                           ; BSR set to: 0
 20828  002986  0E05               	movlw	5
 20829  002988  1980               	xorwf	__doprnt@c& (0+255),w,b
 20830  00298A  B4D8               	btfsc	status,2,c
 20831  00298C  D012               	goto	u8130
 20832                           
 20833                           ; BSR set to: 0
 20834                           ;doprnt.c: 1306: if(val < dpowers[c])
 20835                           
 20836                           ; BSR set to: 0
 20837                           
 20838                           ; BSR set to: 0
 20839  00298E  5180               	movf	__doprnt@c& (0+255),w,b
 20840  002990  0D02               	mullw	2
 20841  002992  0E4F               	movlw	low _dpowers
 20842  002994  24F3               	addwf	prodl,w,c
 20843  002996  6EF6               	movwf	tblptrl,c
 20844  002998  0E78               	movlw	high _dpowers
 20845  00299A  20F4               	addwfc	prodh,w,c
 20846  00299C  6EF7               	movwf	tblptrh,c
 20847  00299E                     	if	0	;There are less than 3 active tblptr bytes
 20848  00299E                     	endif
 20849  00299E  0009               	tblrd		*+
 20850  0029A0  50F5               	movf	tablat,w,c
 20851  0029A2  5D78               	subwf	__doprnt@val& (0+255),w,b
 20852  0029A4  0009               	tblrd		*+
 20853  0029A6  50F5               	movf	tablat,w,c
 20854  0029A8  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 20855  0029AA  A0D8               	btfss	status,0,c
 20856  0029AC  D002               	goto	u8130
 20857                           
 20858                           ; BSR set to: 0
 20859                           
 20860                           ; BSR set to: 0
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;doprnt.c: 1307: break;
 20864  0029AE  2B80               	incf	__doprnt@c& (0+255),f,b
 20865  0029B0  D7EA               	goto	l6475
 20866  0029B2                     u8130:
 20867                           
 20868                           ; BSR set to: 0
 20869                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20870                           
 20871                           ; BSR set to: 0
 20872  0029B2  517E               	movf	__doprnt@width& (0+255),w,b
 20873  0029B4  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20874  0029B6  B4D8               	btfsc	status,2,c
 20875  0029B8  D009               	goto	l1670
 20876                           
 20877                           ; BSR set to: 0
 20878  0029BA  C077  F072         	movff	__doprnt@flag,??__doprnt
 20879  0029BE  0E03               	movlw	3
 20880  0029C0  1772               	andwf	??__doprnt& (0+255),f,b
 20881  0029C2  B4D8               	btfsc	status,2,c
 20882  0029C4  D003               	goto	l1670
 20883                           
 20884                           ; BSR set to: 0
 20885                           ;doprnt.c: 1346: width--;
 20886  0029C6  077E               	decf	__doprnt@width& (0+255),f,b
 20887  0029C8  A0D8               	btfss	status,0,c
 20888  0029CA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20889  0029CC                     l1670:
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;doprnt.c: 1381: if(width > c)
 20893                           
 20894                           ; BSR set to: 0
 20895  0029CC  0E80               	movlw	128
 20896  0029CE  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20897  0029D0  0E7F               	movlw	127
 20898  0029D2  6F72               	movwf	??__doprnt& (0+255),b
 20899  0029D4  517E               	movf	__doprnt@width& (0+255),w,b
 20900  0029D6  5D80               	subwf	__doprnt@c& (0+255),w,b
 20901  0029D8  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20902  0029DA  0A80               	xorlw	128
 20903  0029DC  5972               	subwfb	??__doprnt& (0+255),w,b
 20904  0029DE  B0D8               	btfsc	status,0,c
 20905  0029E0  D007               	goto	l1671
 20906                           
 20907                           ; BSR set to: 0
 20908                           ;doprnt.c: 1382: width -= c;
 20909  0029E2  5180               	movf	__doprnt@c& (0+255),w,b
 20910  0029E4  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20911  0029E6  0E00               	movlw	0
 20912  0029E8  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20913  0029EA  0EFF               	movlw	255
 20914  0029EC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20915  0029EE  D004               	goto	l1672
 20916  0029F0                     l1671:
 20917                           
 20918                           ; BSR set to: 0
 20919                           ;doprnt.c: 1383: else
 20920                           ;doprnt.c: 1384: width = 0;
 20921                           
 20922                           ; BSR set to: 0
 20923  0029F0  0E00               	movlw	0
 20924  0029F2  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20925  0029F4  0E00               	movlw	0
 20926  0029F6  6F7E               	movwf	__doprnt@width& (0+255),b
 20927  0029F8                     l1672:
 20928                           
 20929                           ; BSR set to: 0
 20930                           ;doprnt.c: 1422: {
 20931                           ;doprnt.c: 1424: if(width
 20932                           ;doprnt.c: 1428: )
 20933                           
 20934                           ; BSR set to: 0
 20935  0029F8  517E               	movf	__doprnt@width& (0+255),w,b
 20936  0029FA  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20937  0029FC  B4D8               	btfsc	status,2,c
 20938  0029FE  D03A               	goto	u8200
 20939  002A00                     u8170:
 20940                           
 20941                           ; BSR set to: 0
 20942                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20943                           
 20944                           ; BSR set to: 0
 20945                           
 20946                           ;doprnt.c: 1429: do
 20947  002A00  EE20 F002          	lfsr	2,2
 20948  002A04  516C               	movf	__doprnt@pb& (0+255),w,b
 20949  002A06  26D9               	addwf	fsr2l,f,c
 20950  002A08  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20951  002A0A  22DA               	addwfc	fsr2h,f,c
 20952  002A0C  50DE               	movf	postinc2,w,c
 20953  002A0E  10DE               	iorwf	postinc2,w,c
 20954  002A10  B4D8               	btfsc	status,2,c
 20955  002A12  D013               	goto	l1675
 20956                           
 20957                           ; BSR set to: 0
 20958  002A14  EE20 F002          	lfsr	2,2
 20959  002A18  516C               	movf	__doprnt@pb& (0+255),w,b
 20960  002A1A  26D9               	addwf	fsr2l,f,c
 20961  002A1C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20962  002A1E  22DA               	addwfc	fsr2h,f,c
 20963  002A20  D801               	call	u8198
 20964  002A22  D020               	goto	l1676
 20965  002A24                     u8198:
 20966  002A24  0005               	push	
 20967  002A26  6EFA               	movwf	pclath,c
 20968  002A28  50DE               	movf	postinc2,w,c
 20969  002A2A  6EFD               	movwf	tosl,c
 20970  002A2C  50DE               	movf	postinc2,w,c
 20971  002A2E  6EFE               	movwf	tosh,c
 20972  002A30  50F8               	movf	tblptru,w,c
 20973  002A32  6EFF               	movwf	tosu,c
 20974  002A34  50FA               	movf	pclath,w,c
 20975  002A36  0E20               	movlw	32
 20976  002A38  0012               	return		;indir
 20977  002A3A                     l1675:
 20978  002A3A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20979  002A3E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20980  002A42  CFDE F072          	movff	postinc2,??__doprnt
 20981  002A46  CFDD F073          	movff	postdec2,??__doprnt+1
 20982  002A4A  C072  FFD9         	movff	??__doprnt,fsr2l
 20983  002A4E  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20984  002A52  0E20               	movlw	32
 20985  002A54  6EDF               	movwf	indf2,c
 20986  002A56  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20987  002A5A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20988  002A5E  2ADE               	incf	postinc2,f,c
 20989  002A60  0E00               	movlw	0
 20990  002A62  22DD               	addwfc	postdec2,f,c
 20991  002A64                     l1676:
 20992                           
 20993                           ;doprnt.c: 1431: while(--width);
 20994  002A64  0100               	movlb	0	; () banked
 20995  002A66  077E               	decf	__doprnt@width& (0+255),f,b
 20996  002A68  A0D8               	btfss	status,0,c
 20997  002A6A  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20998  002A6C  517E               	movf	__doprnt@width& (0+255),w,b
 20999  002A6E  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 21000  002A70  A4D8               	btfss	status,2,c
 21001  002A72  D7C6               	goto	u8170
 21002  002A74                     u8200:
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;doprnt.c: 1438: if(flag & 0x03)
 21006                           
 21007                           ; BSR set to: 0
 21008                           
 21009                           ; BSR set to: 0
 21010  002A74  C077  F072         	movff	__doprnt@flag,??__doprnt
 21011  002A78  0E03               	movlw	3
 21012  002A7A  1772               	andwf	??__doprnt& (0+255),f,b
 21013  002A7C  B4D8               	btfsc	status,2,c
 21014  002A7E  D032               	goto	l1680
 21015                           
 21016                           ; BSR set to: 0
 21017                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 21018  002A80  EE20 F002          	lfsr	2,2
 21019  002A84  516C               	movf	__doprnt@pb& (0+255),w,b
 21020  002A86  26D9               	addwf	fsr2l,f,c
 21021  002A88  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21022  002A8A  22DA               	addwfc	fsr2h,f,c
 21023  002A8C  50DE               	movf	postinc2,w,c
 21024  002A8E  10DE               	iorwf	postinc2,w,c
 21025  002A90  B4D8               	btfsc	status,2,c
 21026  002A92  D013               	goto	l1679
 21027                           
 21028                           ; BSR set to: 0
 21029  002A94  EE20 F002          	lfsr	2,2
 21030  002A98  516C               	movf	__doprnt@pb& (0+255),w,b
 21031  002A9A  26D9               	addwf	fsr2l,f,c
 21032  002A9C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21033  002A9E  22DA               	addwfc	fsr2h,f,c
 21034  002AA0  D801               	call	u8238
 21035  002AA2  D020               	goto	l1680
 21036  002AA4                     u8238:
 21037  002AA4  0005               	push	
 21038  002AA6  6EFA               	movwf	pclath,c
 21039  002AA8  50DE               	movf	postinc2,w,c
 21040  002AAA  6EFD               	movwf	tosl,c
 21041  002AAC  50DE               	movf	postinc2,w,c
 21042  002AAE  6EFE               	movwf	tosh,c
 21043  002AB0  50F8               	movf	tblptru,w,c
 21044  002AB2  6EFF               	movwf	tosu,c
 21045  002AB4  50FA               	movf	pclath,w,c
 21046  002AB6  0E2D               	movlw	45
 21047  002AB8  0012               	return		;indir
 21048  002ABA                     l1679:
 21049  002ABA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21050  002ABE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21051  002AC2  CFDE F072          	movff	postinc2,??__doprnt
 21052  002AC6  CFDD F073          	movff	postdec2,??__doprnt+1
 21053  002ACA  C072  FFD9         	movff	??__doprnt,fsr2l
 21054  002ACE  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21055  002AD2  0E2D               	movlw	45
 21056  002AD4  6EDF               	movwf	indf2,c
 21057  002AD6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21058  002ADA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21059  002ADE  2ADE               	incf	postinc2,f,c
 21060  002AE0  0E00               	movlw	0
 21061  002AE2  22DD               	addwfc	postdec2,f,c
 21062  002AE4                     l1680:
 21063                           
 21064                           ;doprnt.c: 1469: }
 21065                           ;doprnt.c: 1472: prec = c;
 21066  002AE4  C080  F076         	movff	__doprnt@c,__doprnt@prec
 21067                           
 21068                           ;doprnt.c: 1474: while(prec--) {
 21069  002AE8  D056               	goto	l1684
 21070  002AEA                     
 21071                           ;doprnt.c: 1478: {
 21072                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21073  002AEA  0100               	movlb	0	; () banked
 21074  002AEC  5176               	movf	__doprnt@prec& (0+255),w,b
 21075  002AEE  0D02               	mullw	2
 21076  002AF0  0E4F               	movlw	low _dpowers
 21077  002AF2  24F3               	addwf	prodl,w,c
 21078  002AF4  6EF6               	movwf	tblptrl,c
 21079  002AF6  0E78               	movlw	high _dpowers
 21080  002AF8  20F4               	addwfc	prodh,w,c
 21081  002AFA  6EF7               	movwf	tblptrh,c
 21082  002AFC                     	if	0	;There are less than 3 active tblptr bytes
 21083  002AFC                     	endif
 21084  002AFC  0009               	tblrd		*+
 21085  002AFE  CFF5 F062          	movff	tablat,___lwdiv@divisor
 21086  002B02  000A               	tblrd		*-
 21087  002B04  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 21088  002B08  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 21089  002B0C  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 21090  002B10  EC67  F02B         	call	___lwdiv
 21091  002B14  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 21092  002B18  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 21093  002B1C  0E00               	movlw	0
 21094  002B1E  0100               	movlb	0	; () banked
 21095  002B20  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 21096  002B22  0E0A               	movlw	10
 21097  002B24  6F69               	movwf	___lwmod@divisor& (0+255),b
 21098  002B26  EC29  F02C         	call	___lwmod	;wreg free
 21099  002B2A  0100               	movlb	0	; () banked
 21100  002B2C  5167               	movf	?___lwmod& (0+255),w,b
 21101  002B2E  0F30               	addlw	48
 21102  002B30  6F80               	movwf	__doprnt@c& (0+255),b
 21103                           
 21104                           ; BSR set to: 0
 21105                           ;doprnt.c: 1523: }
 21106                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 21107  002B32  EE20 F002          	lfsr	2,2
 21108  002B36  516C               	movf	__doprnt@pb& (0+255),w,b
 21109  002B38  26D9               	addwf	fsr2l,f,c
 21110  002B3A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21111  002B3C  22DA               	addwfc	fsr2h,f,c
 21112  002B3E  50DE               	movf	postinc2,w,c
 21113  002B40  10DE               	iorwf	postinc2,w,c
 21114  002B42  B4D8               	btfsc	status,2,c
 21115  002B44  D013               	goto	l1683
 21116                           
 21117                           ; BSR set to: 0
 21118  002B46  EE20 F002          	lfsr	2,2
 21119  002B4A  516C               	movf	__doprnt@pb& (0+255),w,b
 21120  002B4C  26D9               	addwf	fsr2l,f,c
 21121  002B4E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21122  002B50  22DA               	addwfc	fsr2h,f,c
 21123  002B52  D801               	call	u8258
 21124  002B54  D020               	goto	l1684
 21125  002B56                     u8258:
 21126  002B56  0005               	push	
 21127  002B58  6EFA               	movwf	pclath,c
 21128  002B5A  50DE               	movf	postinc2,w,c
 21129  002B5C  6EFD               	movwf	tosl,c
 21130  002B5E  50DE               	movf	postinc2,w,c
 21131  002B60  6EFE               	movwf	tosh,c
 21132  002B62  50F8               	movf	tblptru,w,c
 21133  002B64  6EFF               	movwf	tosu,c
 21134  002B66  50FA               	movf	pclath,w,c
 21135  002B68  5180               	movf	__doprnt@c& (0+255),w,b
 21136  002B6A  0012               	return		;indir
 21137  002B6C                     l1683:
 21138  002B6C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21139  002B70  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21140  002B74  CFDE F072          	movff	postinc2,??__doprnt
 21141  002B78  CFDD F073          	movff	postdec2,??__doprnt+1
 21142  002B7C  C072  FFD9         	movff	??__doprnt,fsr2l
 21143  002B80  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21144  002B84  C080  FFDF         	movff	__doprnt@c,indf2
 21145  002B88  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21146  002B8C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21147  002B90  2ADE               	incf	postinc2,f,c
 21148  002B92  0E00               	movlw	0
 21149  002B94  22DD               	addwfc	postdec2,f,c
 21150  002B96                     l1684:
 21151  002B96  0100               	movlb	0	; () banked
 21152  002B98  0776               	decf	__doprnt@prec& (0+255),f,b
 21153  002B9A  2976               	incf	__doprnt@prec& (0+255),w,b
 21154  002B9C  A4D8               	btfss	status,2,c
 21155  002B9E  D7A5               	goto	l1682
 21156  002BA0                     u8260:
 21157                           
 21158                           ; BSR set to: 0
 21159                           
 21160                           ; BSR set to: 0
 21161  002BA0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 21162  002BA4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 21163  002BA8  0100               	movlb	0	; () banked
 21164  002BAA  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 21165  002BAC  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 21166  002BAE                     	if	0	;tblptru may be non-zero
 21167  002BAE                     	endif
 21168  002BAE                     	if	0	;tblptru may be non-zero
 21169  002BAE                     	endif
 21170  002BAE  0008               	tblrd		*
 21171  002BB0  CFF5 F080          	movff	tablat,__doprnt@c
 21172  002BB4  5180               	movf	__doprnt@c& (0+255),w,b
 21173  002BB6  A4D8               	btfss	status,2,c
 21174  002BB8  D527               	goto	l1633
 21175  002BBA                     u8270:
 21176                           
 21177                           ;doprnt.c: 1540: return 0;
 21178                           
 21179                           ; BSR set to: 0
 21180                           
 21181                           ;doprnt.c: 1525: }
 21182                           ;doprnt.c: 1533: }
 21183                           ;doprnt.c: 1535: alldone:
 21184                           
 21185                           ; BSR set to: 0
 21186  002BBA  0E00               	movlw	0
 21187  002BBC  0100               	movlb	0	; () banked
 21188  002BBE  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 21189  002BC0  0E00               	movlw	0
 21190  002BC2  6F6C               	movwf	?__doprnt& (0+255),b
 21191  002BC4  0012               	return	
 21192  002BC6                     __end_of__doprnt:
 21193                           	opt stack 0
 21194                           tosu	equ	0xFFF
 21195                           tosh	equ	0xFFE
 21196                           tosl	equ	0xFFD
 21197                           pclath	equ	0xFFA
 21198                           tblptru	equ	0xFF8
 21199                           tblptrh	equ	0xFF7
 21200                           tblptrl	equ	0xFF6
 21201                           tablat	equ	0xFF5
 21202                           prodh	equ	0xFF4
 21203                           prodl	equ	0xFF3
 21204                           intcon	equ	0xFF2
 21205                           intcon2	equ	0xFF1
 21206                           intcon3	equ	0xFF0
 21207                           indf0	equ	0xFEF
 21208                           postinc0	equ	0xFEE
 21209                           fsr0h	equ	0xFEA
 21210                           fsr0l	equ	0xFE9
 21211                           wreg	equ	0xFE8
 21212                           indf1	equ	0xFE7
 21213                           postinc1	equ	0xFE6
 21214                           postdec1	equ	0xFE5
 21215                           plusw1	equ	0xFE3
 21216                           fsr1h	equ	0xFE2
 21217                           fsr1l	equ	0xFE1
 21218                           indf2	equ	0xFDF
 21219                           postinc2	equ	0xFDE
 21220                           postdec2	equ	0xFDD
 21221                           plusw2	equ	0xFDB
 21222                           fsr2h	equ	0xFDA
 21223                           fsr2l	equ	0xFD9
 21224                           status	equ	0xFD8
 21225                           
 21226 ;; *************** function _putch *****************
 21227 ;; Defined at:
 21228 ;;		line 35 in file "src/USART.h"
 21229 ;; Parameters:    Size  Location     Type
 21230 ;;  c               1    wreg     unsigned char 
 21231 ;; Auto vars:     Size  Location     Type
 21232 ;;  c               1    0[BANK0 ] unsigned char 
 21233 ;; Return value:  Size  Location     Type
 21234 ;;                  1    wreg      void 
 21235 ;; Registers used:
 21236 ;;		wreg
 21237 ;; Tracked objects:
 21238 ;;		On entry : 0/0
 21239 ;;		On exit  : 0/0
 21240 ;;		Unchanged: 0/0
 21241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21242 ;;      Params:         0       0       0       0       0       0       0       0       0
 21243 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21244 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21245 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21246 ;;Total ram usage:        1 bytes
 21247 ;; Hardware stack levels used:    1
 21248 ;; Hardware stack levels required when called:    6
 21249 ;; This function calls:
 21250 ;;		Nothing
 21251 ;; This function is called by:
 21252 ;;		_printf
 21253 ;;		__doprnt
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text39
 21258  005C86                     __ptext39:
 21259                           	opt stack 0
 21260  005C86                     _putch:
 21261                           	opt stack 22
 21262                           
 21263                           ; BSR set to: 0
 21264                           ;incstack = 0
 21265                           ;putch@c stored from wreg
 21266  005C86  0100               	movlb	0	; () banked
 21267  005C88  6F60               	movwf	putch@c& (0+255),b
 21268  005C8A                     
 21269                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 21270  005C8A  A2AC               	btfss	4012,1,c	;volatile
 21271  005C8C  D7FE               	goto	l6279
 21272                           
 21273                           ;USART.h: 38: TXREG = c;
 21274  005C8E  C060  FFAD         	movff	putch@c,4013	;volatile
 21275  005C92  0012               	return		;funcret
 21276  005C94                     __end_of_putch:
 21277                           	opt stack 0
 21278                           tosu	equ	0xFFF
 21279                           tosh	equ	0xFFE
 21280                           tosl	equ	0xFFD
 21281                           pclath	equ	0xFFA
 21282                           tblptru	equ	0xFF8
 21283                           tblptrh	equ	0xFF7
 21284                           tblptrl	equ	0xFF6
 21285                           tablat	equ	0xFF5
 21286                           prodh	equ	0xFF4
 21287                           prodl	equ	0xFF3
 21288                           intcon	equ	0xFF2
 21289                           intcon2	equ	0xFF1
 21290                           intcon3	equ	0xFF0
 21291                           indf0	equ	0xFEF
 21292                           postinc0	equ	0xFEE
 21293                           fsr0h	equ	0xFEA
 21294                           fsr0l	equ	0xFE9
 21295                           wreg	equ	0xFE8
 21296                           indf1	equ	0xFE7
 21297                           postinc1	equ	0xFE6
 21298                           postdec1	equ	0xFE5
 21299                           plusw1	equ	0xFE3
 21300                           fsr1h	equ	0xFE2
 21301                           fsr1l	equ	0xFE1
 21302                           indf2	equ	0xFDF
 21303                           postinc2	equ	0xFDE
 21304                           postdec2	equ	0xFDD
 21305                           plusw2	equ	0xFDB
 21306                           fsr2h	equ	0xFDA
 21307                           fsr2l	equ	0xFD9
 21308                           status	equ	0xFD8
 21309                           
 21310 ;; *************** function _isdigit *****************
 21311 ;; Defined at:
 21312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;  c               1    wreg     unsigned char 
 21315 ;; Auto vars:     Size  Location     Type
 21316 ;;  c               1    2[BANK0 ] unsigned char 
 21317 ;; Return value:  Size  Location     Type
 21318 ;;		None               void
 21319 ;; Registers used:
 21320 ;;		wreg, status,2, status,0
 21321 ;; Tracked objects:
 21322 ;;		On entry : 0/0
 21323 ;;		On exit  : 0/0
 21324 ;;		Unchanged: 0/0
 21325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21326 ;;      Params:         0       0       0       0       0       0       0       0       0
 21327 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21328 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21329 ;;      Totals:         0       3       0       0       0       0       0       0       0
 21330 ;;Total ram usage:        3 bytes
 21331 ;; Hardware stack levels used:    1
 21332 ;; Hardware stack levels required when called:    6
 21333 ;; This function calls:
 21334 ;;		Nothing
 21335 ;; This function is called by:
 21336 ;;		__doprnt
 21337 ;;		_atoi
 21338 ;; This function uses a non-reentrant model
 21339 ;;
 21340                           
 21341                           	psect	text40
 21342  005BE8                     __ptext40:
 21343                           	opt stack 0
 21344  005BE8                     _isdigit:
 21345                           	opt stack 22
 21346                           
 21347                           ;incstack = 0
 21348                           ;isdigit@c stored from wreg
 21349  005BE8  0100               	movlb	0	; () banked
 21350  005BEA  6F62               	movwf	isdigit@c& (0+255),b
 21351  005BEC  0E00               	movlw	0
 21352  005BEE  0100               	movlb	0	; () banked
 21353  005BF0  6F61               	movwf	_isdigit$2058& (0+255),b
 21354                           
 21355                           ; BSR set to: 0
 21356  005BF2  0E3A               	movlw	58
 21357  005BF4  6162               	cpfslt	isdigit@c& (0+255),b
 21358  005BF6  D005               	goto	l2032
 21359                           
 21360                           ; BSR set to: 0
 21361  005BF8  0E2F               	movlw	47
 21362  005BFA  6562               	cpfsgt	isdigit@c& (0+255),b
 21363  005BFC  D002               	goto	l2032
 21364                           
 21365                           ; BSR set to: 0
 21366  005BFE  0E01               	movlw	1
 21367  005C00  6F61               	movwf	_isdigit$2058& (0+255),b
 21368  005C02                     l2032:
 21369                           
 21370                           ; BSR set to: 0
 21371                           
 21372                           ; BSR set to: 0
 21373  005C02  C061  F060         	movff	_isdigit$2058,??_isdigit
 21374  005C06  3160               	rrcf	??_isdigit& (0+255),w,b
 21375  005C08  0012               	return	
 21376  005C0A                     __end_of_isdigit:
 21377                           	opt stack 0
 21378                           tosu	equ	0xFFF
 21379                           tosh	equ	0xFFE
 21380                           tosl	equ	0xFFD
 21381                           pclath	equ	0xFFA
 21382                           tblptru	equ	0xFF8
 21383                           tblptrh	equ	0xFF7
 21384                           tblptrl	equ	0xFF6
 21385                           tablat	equ	0xFF5
 21386                           prodh	equ	0xFF4
 21387                           prodl	equ	0xFF3
 21388                           intcon	equ	0xFF2
 21389                           intcon2	equ	0xFF1
 21390                           intcon3	equ	0xFF0
 21391                           indf0	equ	0xFEF
 21392                           postinc0	equ	0xFEE
 21393                           fsr0h	equ	0xFEA
 21394                           fsr0l	equ	0xFE9
 21395                           wreg	equ	0xFE8
 21396                           indf1	equ	0xFE7
 21397                           postinc1	equ	0xFE6
 21398                           postdec1	equ	0xFE5
 21399                           plusw1	equ	0xFE3
 21400                           fsr1h	equ	0xFE2
 21401                           fsr1l	equ	0xFE1
 21402                           indf2	equ	0xFDF
 21403                           postinc2	equ	0xFDE
 21404                           postdec2	equ	0xFDD
 21405                           plusw2	equ	0xFDB
 21406                           fsr2h	equ	0xFDA
 21407                           fsr2l	equ	0xFD9
 21408                           status	equ	0xFD8
 21409                           
 21410 ;; *************** function ___wmul *****************
 21411 ;; Defined at:
 21412 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 21413 ;; Parameters:    Size  Location     Type
 21414 ;;  multiplier      2    0[BANK0 ] unsigned int 
 21415 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 21416 ;; Auto vars:     Size  Location     Type
 21417 ;;  product         2    4[BANK0 ] unsigned int 
 21418 ;; Return value:  Size  Location     Type
 21419 ;;                  2    0[BANK0 ] unsigned int 
 21420 ;; Registers used:
 21421 ;;		wreg, status,2, status,0, prodl, prodh
 21422 ;; Tracked objects:
 21423 ;;		On entry : 0/0
 21424 ;;		On exit  : 0/0
 21425 ;;		Unchanged: 0/0
 21426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21427 ;;      Params:         0       4       0       0       0       0       0       0       0
 21428 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21429 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21430 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21431 ;;Total ram usage:        6 bytes
 21432 ;; Hardware stack levels used:    1
 21433 ;; Hardware stack levels required when called:    6
 21434 ;; This function calls:
 21435 ;;		Nothing
 21436 ;; This function is called by:
 21437 ;;		_enviaDadosWifi
 21438 ;;		_main
 21439 ;;		__doprnt
 21440 ;;		_atoi
 21441 ;; This function uses a non-reentrant model
 21442 ;;
 21443                           
 21444                           	psect	text41
 21445  005B00                     __ptext41:
 21446                           	opt stack 0
 21447  005B00                     ___wmul:
 21448                           	opt stack 22
 21449                           
 21450                           ; BSR set to: 0
 21451                           ;incstack = 0
 21452  005B00  0100               	movlb	0	; () banked
 21453  005B02  5160               	movf	___wmul@multiplier& (0+255),w,b
 21454  005B04  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21455  005B06  CFF3 F064          	movff	prodl,___wmul@product
 21456  005B0A  CFF4 F065          	movff	prodh,___wmul@product+1
 21457  005B0E  5160               	movf	___wmul@multiplier& (0+255),w,b
 21458  005B10  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21459  005B12  50F3               	movf	prodl,w,c
 21460  005B14  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21461  005B16  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21462  005B18  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21463  005B1A  50F3               	movf	prodl,w,c
 21464  005B1C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21465                           
 21466                           ; BSR set to: 0
 21467  005B1E  C064  F060         	movff	___wmul@product,?___wmul
 21468  005B22  C065  F061         	movff	___wmul@product+1,?___wmul+1
 21469  005B26  0012               	return	
 21470  005B28                     __end_of___wmul:
 21471                           	opt stack 0
 21472                           tosu	equ	0xFFF
 21473                           tosh	equ	0xFFE
 21474                           tosl	equ	0xFFD
 21475                           pclath	equ	0xFFA
 21476                           tblptru	equ	0xFF8
 21477                           tblptrh	equ	0xFF7
 21478                           tblptrl	equ	0xFF6
 21479                           tablat	equ	0xFF5
 21480                           prodh	equ	0xFF4
 21481                           prodl	equ	0xFF3
 21482                           intcon	equ	0xFF2
 21483                           intcon2	equ	0xFF1
 21484                           intcon3	equ	0xFF0
 21485                           indf0	equ	0xFEF
 21486                           postinc0	equ	0xFEE
 21487                           fsr0h	equ	0xFEA
 21488                           fsr0l	equ	0xFE9
 21489                           wreg	equ	0xFE8
 21490                           indf1	equ	0xFE7
 21491                           postinc1	equ	0xFE6
 21492                           postdec1	equ	0xFE5
 21493                           plusw1	equ	0xFE3
 21494                           fsr1h	equ	0xFE2
 21495                           fsr1l	equ	0xFE1
 21496                           indf2	equ	0xFDF
 21497                           postinc2	equ	0xFDE
 21498                           postdec2	equ	0xFDD
 21499                           plusw2	equ	0xFDB
 21500                           fsr2h	equ	0xFDA
 21501                           fsr2l	equ	0xFD9
 21502                           status	equ	0xFD8
 21503                           
 21504 ;; *************** function ___lwmod *****************
 21505 ;; Defined at:
 21506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 21507 ;; Parameters:    Size  Location     Type
 21508 ;;  dividend        2    7[BANK0 ] unsigned int 
 21509 ;;  divisor         2    9[BANK0 ] unsigned int 
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;  counter         1   11[BANK0 ] unsigned char 
 21512 ;; Return value:  Size  Location     Type
 21513 ;;                  2    7[BANK0 ] unsigned int 
 21514 ;; Registers used:
 21515 ;;		wreg, status,2, status,0
 21516 ;; Tracked objects:
 21517 ;;		On entry : 0/0
 21518 ;;		On exit  : 0/0
 21519 ;;		Unchanged: 0/0
 21520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21521 ;;      Params:         0       4       0       0       0       0       0       0       0
 21522 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21524 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21525 ;;Total ram usage:        5 bytes
 21526 ;; Hardware stack levels used:    1
 21527 ;; Hardware stack levels required when called:    6
 21528 ;; This function calls:
 21529 ;;		Nothing
 21530 ;; This function is called by:
 21531 ;;		__doprnt
 21532 ;; This function uses a non-reentrant model
 21533 ;;
 21534                           
 21535                           	psect	text42
 21536  005852                     __ptext42:
 21537                           	opt stack 0
 21538  005852                     ___lwmod:
 21539                           	opt stack 22
 21540                           
 21541                           ; BSR set to: 0
 21542                           ;incstack = 0
 21543  005852  0100               	movlb	0	; () banked
 21544  005854  5169               	movf	___lwmod@divisor& (0+255),w,b
 21545  005856  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21546  005858  B4D8               	btfsc	status,2,c
 21547  00585A  D018               	goto	l2126
 21548                           
 21549                           ; BSR set to: 0
 21550  00585C  0E01               	movlw	1
 21551  00585E  6F6B               	movwf	___lwmod@counter& (0+255),b
 21552  005860  D004               	goto	l2121
 21553  005862                     
 21554                           ; BSR set to: 0
 21555                           
 21556                           ; BSR set to: 0
 21557  005862  90D8               	bcf	status,0,c
 21558  005864  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 21559  005866  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21560  005868  2B6B               	incf	___lwmod@counter& (0+255),f,b
 21561  00586A                     l2121:
 21562                           
 21563                           ; BSR set to: 0
 21564                           
 21565                           ; BSR set to: 0
 21566  00586A  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21567  00586C  D7FA               	goto	l2122
 21568  00586E                     u7850:
 21569                           
 21570                           ; BSR set to: 0
 21571                           
 21572                           ; BSR set to: 0
 21573                           
 21574                           ; BSR set to: 0
 21575  00586E  5169               	movf	___lwmod@divisor& (0+255),w,b
 21576  005870  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 21577  005872  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21578  005874  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21579  005876  A0D8               	btfss	status,0,c
 21580  005878  D004               	goto	l2125
 21581                           
 21582                           ; BSR set to: 0
 21583  00587A  5169               	movf	___lwmod@divisor& (0+255),w,b
 21584  00587C  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 21585  00587E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21586  005880  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21587  005882                     l2125:
 21588                           
 21589                           ; BSR set to: 0
 21590                           
 21591                           ; BSR set to: 0
 21592  005882  90D8               	bcf	status,0,c
 21593  005884  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21594  005886  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 21595                           
 21596                           ; BSR set to: 0
 21597  005888  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 21598  00588A  D7F1               	goto	u7850
 21599  00588C                     l2126:
 21600                           
 21601                           ; BSR set to: 0
 21602                           
 21603                           ; BSR set to: 0
 21604  00588C  C067  F067         	movff	___lwmod@dividend,?___lwmod
 21605  005890  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 21606                           
 21607                           ; BSR set to: 0
 21608  005894  0012               	return		;funcret
 21609  005896                     __end_of___lwmod:
 21610                           	opt stack 0
 21611                           tosu	equ	0xFFF
 21612                           tosh	equ	0xFFE
 21613                           tosl	equ	0xFFD
 21614                           pclath	equ	0xFFA
 21615                           tblptru	equ	0xFF8
 21616                           tblptrh	equ	0xFF7
 21617                           tblptrl	equ	0xFF6
 21618                           tablat	equ	0xFF5
 21619                           prodh	equ	0xFF4
 21620                           prodl	equ	0xFF3
 21621                           intcon	equ	0xFF2
 21622                           intcon2	equ	0xFF1
 21623                           intcon3	equ	0xFF0
 21624                           indf0	equ	0xFEF
 21625                           postinc0	equ	0xFEE
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           postinc1	equ	0xFE6
 21631                           postdec1	equ	0xFE5
 21632                           plusw1	equ	0xFE3
 21633                           fsr1h	equ	0xFE2
 21634                           fsr1l	equ	0xFE1
 21635                           indf2	equ	0xFDF
 21636                           postinc2	equ	0xFDE
 21637                           postdec2	equ	0xFDD
 21638                           plusw2	equ	0xFDB
 21639                           fsr2h	equ	0xFDA
 21640                           fsr2l	equ	0xFD9
 21641                           status	equ	0xFD8
 21642                           
 21643 ;; *************** function ___lwdiv *****************
 21644 ;; Defined at:
 21645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 21646 ;; Parameters:    Size  Location     Type
 21647 ;;  dividend        2    0[BANK0 ] unsigned int 
 21648 ;;  divisor         2    2[BANK0 ] unsigned int 
 21649 ;; Auto vars:     Size  Location     Type
 21650 ;;  quotient        2    4[BANK0 ] unsigned int 
 21651 ;;  counter         1    6[BANK0 ] unsigned char 
 21652 ;; Return value:  Size  Location     Type
 21653 ;;                  2    0[BANK0 ] unsigned int 
 21654 ;; Registers used:
 21655 ;;		wreg, status,2, status,0
 21656 ;; Tracked objects:
 21657 ;;		On entry : 0/0
 21658 ;;		On exit  : 0/0
 21659 ;;		Unchanged: 0/0
 21660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21661 ;;      Params:         0       4       0       0       0       0       0       0       0
 21662 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21664 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21665 ;;Total ram usage:        7 bytes
 21666 ;; Hardware stack levels used:    1
 21667 ;; Hardware stack levels required when called:    6
 21668 ;; This function calls:
 21669 ;;		Nothing
 21670 ;; This function is called by:
 21671 ;;		__doprnt
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           	psect	text43
 21676  0056CE                     __ptext43:
 21677                           	opt stack 0
 21678  0056CE                     ___lwdiv:
 21679                           	opt stack 22
 21680                           
 21681                           ; BSR set to: 0
 21682                           ;incstack = 0
 21683  0056CE  0E00               	movlw	0
 21684  0056D0  0100               	movlb	0	; () banked
 21685  0056D2  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21686  0056D4  0E00               	movlw	0
 21687  0056D6  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21688                           
 21689                           ; BSR set to: 0
 21690  0056D8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21691  0056DA  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21692  0056DC  B4D8               	btfsc	status,2,c
 21693  0056DE  D01C               	goto	l2116
 21694                           
 21695                           ; BSR set to: 0
 21696  0056E0  0E01               	movlw	1
 21697  0056E2  6F66               	movwf	___lwdiv@counter& (0+255),b
 21698  0056E4  D004               	goto	l2111
 21699  0056E6                     
 21700                           ; BSR set to: 0
 21701                           
 21702                           ; BSR set to: 0
 21703  0056E6  90D8               	bcf	status,0,c
 21704  0056E8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21705  0056EA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21706  0056EC  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21707  0056EE                     l2111:
 21708                           
 21709                           ; BSR set to: 0
 21710                           
 21711                           ; BSR set to: 0
 21712  0056EE  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21713  0056F0  D7FA               	goto	l2112
 21714  0056F2                     u7820:
 21715                           
 21716                           ; BSR set to: 0
 21717                           
 21718                           ; BSR set to: 0
 21719                           
 21720                           ; BSR set to: 0
 21721  0056F2  90D8               	bcf	status,0,c
 21722  0056F4  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21723  0056F6  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21724                           
 21725                           ; BSR set to: 0
 21726  0056F8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21727  0056FA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21728  0056FC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21729  0056FE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21730  005700  A0D8               	btfss	status,0,c
 21731  005702  D005               	goto	l2115
 21732                           
 21733                           ; BSR set to: 0
 21734  005704  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21735  005706  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21736  005708  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21737  00570A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21738                           
 21739                           ; BSR set to: 0
 21740  00570C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21741  00570E                     l2115:
 21742                           
 21743                           ; BSR set to: 0
 21744                           
 21745                           ; BSR set to: 0
 21746  00570E  90D8               	bcf	status,0,c
 21747  005710  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21748  005712  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21749                           
 21750                           ; BSR set to: 0
 21751  005714  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21752  005716  D7ED               	goto	u7820
 21753  005718                     l2116:
 21754                           
 21755                           ; BSR set to: 0
 21756                           
 21757                           ; BSR set to: 0
 21758  005718  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21759  00571C  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21760                           
 21761                           ; BSR set to: 0
 21762  005720  0012               	return		;funcret
 21763  005722                     __end_of___lwdiv:
 21764                           	opt stack 0
 21765                           tosu	equ	0xFFF
 21766                           tosh	equ	0xFFE
 21767                           tosl	equ	0xFFD
 21768                           pclath	equ	0xFFA
 21769                           tblptru	equ	0xFF8
 21770                           tblptrh	equ	0xFF7
 21771                           tblptrl	equ	0xFF6
 21772                           tablat	equ	0xFF5
 21773                           prodh	equ	0xFF4
 21774                           prodl	equ	0xFF3
 21775                           intcon	equ	0xFF2
 21776                           intcon2	equ	0xFF1
 21777                           intcon3	equ	0xFF0
 21778                           indf0	equ	0xFEF
 21779                           postinc0	equ	0xFEE
 21780                           fsr0h	equ	0xFEA
 21781                           fsr0l	equ	0xFE9
 21782                           wreg	equ	0xFE8
 21783                           indf1	equ	0xFE7
 21784                           postinc1	equ	0xFE6
 21785                           postdec1	equ	0xFE5
 21786                           plusw1	equ	0xFE3
 21787                           fsr1h	equ	0xFE2
 21788                           fsr1l	equ	0xFE1
 21789                           indf2	equ	0xFDF
 21790                           postinc2	equ	0xFDE
 21791                           postdec2	equ	0xFDD
 21792                           plusw2	equ	0xFDB
 21793                           fsr2h	equ	0xFDA
 21794                           fsr2l	equ	0xFD9
 21795                           status	equ	0xFD8
 21796                           
 21797 ;; *************** function _findBufferSerial *****************
 21798 ;; Defined at:
 21799 ;;		line 33 in file "src/serial.c"
 21800 ;; Parameters:    Size  Location     Type
 21801 ;;  key             2   20[BANK0 ] PTR unsigned char 
 21802 ;;		 -> STR_82(3), STR_79(3), STR_76(7), STR_75(3), 
 21803 ;;		 -> STR_72(5), STR_67(2), STR_64(3), STR_61(2), 
 21804 ;;		 -> STR_60(2), STR_55(5), STR_54(3), STR_51(3), 
 21805 ;;		 -> STR_40(3), STR_30(7), STR_24(3), STR_21(3), 
 21806 ;;		 -> STR_18(3), STR_15(3), STR_12(3), 
 21807 ;; Auto vars:     Size  Location     Type
 21808 ;;		None
 21809 ;; Return value:  Size  Location     Type
 21810 ;;                  1    wreg      unsigned char 
 21811 ;; Registers used:
 21812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21813 ;; Tracked objects:
 21814 ;;		On entry : 0/0
 21815 ;;		On exit  : 0/0
 21816 ;;		Unchanged: 0/0
 21817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21818 ;;      Params:         0       2       0       0       0       0       0       0       0
 21819 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21821 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21822 ;;Total ram usage:        2 bytes
 21823 ;; Hardware stack levels used:    1
 21824 ;; Hardware stack levels required when called:    8
 21825 ;; This function calls:
 21826 ;;		_strstr
 21827 ;; This function is called by:
 21828 ;;		_alterarDadosConexaoConfigWifi
 21829 ;;		_enviaDadosWifi
 21830 ;; This function uses a non-reentrant model
 21831 ;;
 21832                           
 21833                           	psect	text44
 21834  005B28                     __ptext44:
 21835                           	opt stack 0
 21836  005B28                     _findBufferSerial:
 21837                           	opt stack 21
 21838                           
 21839                           ;serial.c: 34: return strstr(bufferSerial, key) != (0);
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;incstack = 0
 21843  005B28  0E69               	movlw	low _bufferSerial
 21844  005B2A  0100               	movlb	0	; () banked
 21845  005B2C  6F6F               	movwf	strstr@s1& (0+255),b
 21846  005B2E  0E02               	movlw	high _bufferSerial
 21847  005B30  6F70               	movwf	(strstr@s1+1)& (0+255),b
 21848  005B32  C074  F071         	movff	findBufferSerial@key,strstr@s2
 21849  005B36  C075  F072         	movff	findBufferSerial@key+1,strstr@s2+1
 21850  005B3A  ECAD  F026         	call	_strstr
 21851  005B3E  0100               	movlb	0	; () banked
 21852  005B40  516F               	movf	?_strstr& (0+255),w,b
 21853  005B42  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 21854  005B44  B4D8               	btfsc	status,2,c
 21855  005B46  D002               	goto	u11650
 21856  005B48  0E01               	movlw	1
 21857  005B4A  0012               	return	
 21858  005B4C                     u11650:
 21859  005B4C  0E00               	movlw	0
 21860  005B4E  0012               	return	
 21861  005B50                     __end_of_findBufferSerial:
 21862                           	opt stack 0
 21863                           tosu	equ	0xFFF
 21864                           tosh	equ	0xFFE
 21865                           tosl	equ	0xFFD
 21866                           pclath	equ	0xFFA
 21867                           tblptru	equ	0xFF8
 21868                           tblptrh	equ	0xFF7
 21869                           tblptrl	equ	0xFF6
 21870                           tablat	equ	0xFF5
 21871                           prodh	equ	0xFF4
 21872                           prodl	equ	0xFF3
 21873                           intcon	equ	0xFF2
 21874                           intcon2	equ	0xFF1
 21875                           intcon3	equ	0xFF0
 21876                           indf0	equ	0xFEF
 21877                           postinc0	equ	0xFEE
 21878                           fsr0h	equ	0xFEA
 21879                           fsr0l	equ	0xFE9
 21880                           wreg	equ	0xFE8
 21881                           indf1	equ	0xFE7
 21882                           postinc1	equ	0xFE6
 21883                           postdec1	equ	0xFE5
 21884                           plusw1	equ	0xFE3
 21885                           fsr1h	equ	0xFE2
 21886                           fsr1l	equ	0xFE1
 21887                           indf2	equ	0xFDF
 21888                           postinc2	equ	0xFDE
 21889                           postdec2	equ	0xFDD
 21890                           plusw2	equ	0xFDB
 21891                           fsr2h	equ	0xFDA
 21892                           fsr2l	equ	0xFD9
 21893                           status	equ	0xFD8
 21894                           
 21895 ;; *************** function _strstr *****************
 21896 ;; Defined at:
 21897 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 21898 ;; Parameters:    Size  Location     Type
 21899 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21900 ;;		 -> STR_136(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 21901 ;;		 -> bufferSerial(100), 
 21902 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21903 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), STR_80(7), 
 21904 ;;		 -> STR_79(3), STR_77(7), STR_76(7), STR_75(3), 
 21905 ;;		 -> STR_73(4), STR_72(5), STR_68(4), STR_67(2), 
 21906 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 21907 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 21908 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 21909 ;;		 -> STR_40(3), STR_38(3), STR_34(4), STR_33(2), 
 21910 ;;		 -> STR_31(4), STR_30(7), STR_25(7), STR_24(3), 
 21911 ;;		 -> STR_22(4), STR_21(3), STR_19(4), STR_18(3), 
 21912 ;;		 -> STR_16(4), STR_15(3), STR_13(4), STR_12(3), 
 21913 ;;		 -> STR_10(4), 
 21914 ;; Auto vars:     Size  Location     Type
 21915 ;;		None
 21916 ;; Return value:  Size  Location     Type
 21917 ;;                  2   15[BANK0 ] PTR unsigned char 
 21918 ;; Registers used:
 21919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/0
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21925 ;;      Params:         0       4       0       0       0       0       0       0       0
 21926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21927 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21928 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21929 ;;Total ram usage:        5 bytes
 21930 ;; Hardware stack levels used:    1
 21931 ;; Hardware stack levels required when called:    7
 21932 ;; This function calls:
 21933 ;;		_strchr
 21934 ;;		_strlen
 21935 ;;		_strncmp
 21936 ;; This function is called by:
 21937 ;;		_alterarDadosConexaoConfigWifi
 21938 ;;		_getStringJSON
 21939 ;;		_setKeyStartReceiveSerial
 21940 ;;		_findBufferSerial
 21941 ;;		_getIntJSON
 21942 ;; This function uses a non-reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text45
 21946  004D5A                     __ptext45:
 21947                           	opt stack 0
 21948  004D5A                     _strstr:
 21949                           	opt stack 21
 21950                           
 21951                           ; BSR set to: 0
 21952                           ;incstack = 0
 21953  004D5A  D03F               	goto	l2289
 21954  004D5C  C06F  F066         	movff	strstr@s1,strncmp@s1
 21955  004D60  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21956  004D64  C071  F068         	movff	strstr@s2,strncmp@s2
 21957  004D68  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21958  004D6C  C071  F060         	movff	strstr@s2,strlen@s
 21959  004D70  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21960  004D74  EC3C  F02B         	call	_strlen	;wreg free
 21961  004D78  C060  F06A         	movff	?_strlen,strncmp@len
 21962  004D7C  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21963  004D80  EC7F  F024         	call	_strncmp	;wreg free
 21964  004D84  0100               	movlb	0	; () banked
 21965  004D86  5166               	movf	?_strncmp& (0+255),w,b
 21966  004D88  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21967  004D8A  A4D8               	btfss	status,2,c
 21968  004D8C  D005               	goto	l2291
 21969                           
 21970                           ; BSR set to: 0
 21971  004D8E  C06F  F06F         	movff	strstr@s1,?_strstr
 21972  004D92  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21973                           
 21974                           ; BSR set to: 0
 21975  004D96  0012               	return	
 21976  004D98                     l2291:
 21977                           
 21978                           ; BSR set to: 0
 21979                           
 21980                           ; BSR set to: 0
 21981  004D98  0E01               	movlw	1
 21982  004D9A  256F               	addwf	strstr@s1& (0+255),w,b
 21983  004D9C  6F60               	movwf	strchr@ptr& (0+255),b
 21984  004D9E  0E00               	movlw	0
 21985  004DA0  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21986  004DA2  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21987  004DA4  C071  FFF6         	movff	strstr@s2,tblptrl
 21988  004DA8  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21989  004DAC  6AF8               	clrf	tblptru,c
 21990  004DAE  0E07               	movlw	(high __ramtop+-1)
 21991  004DB0  64F7               	cpfsgt	tblptrh,c
 21992  004DB2  D003               	bra	u8457
 21993  004DB4  0008               	tblrd		*
 21994  004DB6  50F5               	movf	tablat,w,c
 21995  004DB8  D005               	bra	u8450
 21996  004DBA                     u8457:
 21997  004DBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 21998  004DBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 21999  004DC2  50EF               	movf	indf0,w,c
 22000  004DC4                     u8450:
 22001  004DC4  0100               	movlb	0	; () banked
 22002  004DC6  6F73               	movwf	??_strstr& (0+255),b
 22003  004DC8  5173               	movf	??_strstr& (0+255),w,b
 22004  004DCA  6F62               	movwf	strchr@chr& (0+255),b
 22005  004DCC  6B63               	clrf	(strchr@chr+1)& (0+255),b
 22006  004DCE  EC5E  F02A         	call	_strchr	;wreg free
 22007  004DD2  C060  F06F         	movff	?_strchr,strstr@s1
 22008  004DD6  C061  F070         	movff	?_strchr+1,strstr@s1+1
 22009  004DDA                     l2289:
 22010  004DDA  0100               	movlb	0	; () banked
 22011  004DDC  516F               	movf	strstr@s1& (0+255),w,b
 22012  004DDE  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 22013  004DE0  B4D8               	btfsc	status,2,c
 22014  004DE2  D013               	goto	u8480
 22015                           
 22016                           ; BSR set to: 0
 22017  004DE4  C06F  FFF6         	movff	strstr@s1,tblptrl
 22018  004DE8  C070  FFF7         	movff	strstr@s1+1,tblptrh
 22019  004DEC  6AF8               	clrf	tblptru,c
 22020  004DEE  0E07               	movlw	(high __ramtop+-1)
 22021  004DF0  64F7               	cpfsgt	tblptrh,c
 22022  004DF2  D003               	bra	u8477
 22023  004DF4  0008               	tblrd		*
 22024  004DF6  50F5               	movf	tablat,w,c
 22025  004DF8  D005               	bra	u8470
 22026  004DFA                     u8477:
 22027  004DFA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22028  004DFE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22029  004E02  50EF               	movf	indf0,w,c
 22030  004E04                     u8470:
 22031  004E04  0900               	iorlw	0
 22032  004E06  A4D8               	btfss	status,2,c
 22033  004E08  D7A9               	goto	l2290
 22034  004E0A                     u8480:
 22035  004E0A  0E00               	movlw	0
 22036  004E0C  0100               	movlb	0	; () banked
 22037  004E0E  6F6F               	movwf	?_strstr& (0+255),b
 22038  004E10  0E00               	movlw	0
 22039  004E12  6F70               	movwf	(?_strstr+1)& (0+255),b
 22040  004E14  0012               	return	
 22041  004E16                     __end_of_strstr:
 22042                           	opt stack 0
 22043                           tosu	equ	0xFFF
 22044                           tosh	equ	0xFFE
 22045                           tosl	equ	0xFFD
 22046                           pclath	equ	0xFFA
 22047                           tblptru	equ	0xFF8
 22048                           tblptrh	equ	0xFF7
 22049                           tblptrl	equ	0xFF6
 22050                           tablat	equ	0xFF5
 22051                           prodh	equ	0xFF4
 22052                           prodl	equ	0xFF3
 22053                           intcon	equ	0xFF2
 22054                           intcon2	equ	0xFF1
 22055                           intcon3	equ	0xFF0
 22056                           indf0	equ	0xFEF
 22057                           postinc0	equ	0xFEE
 22058                           fsr0h	equ	0xFEA
 22059                           fsr0l	equ	0xFE9
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postinc1	equ	0xFE6
 22063                           postdec1	equ	0xFE5
 22064                           plusw1	equ	0xFE3
 22065                           fsr1h	equ	0xFE2
 22066                           fsr1l	equ	0xFE1
 22067                           indf2	equ	0xFDF
 22068                           postinc2	equ	0xFDE
 22069                           postdec2	equ	0xFDD
 22070                           plusw2	equ	0xFDB
 22071                           fsr2h	equ	0xFDA
 22072                           fsr2l	equ	0xFD9
 22073                           status	equ	0xFD8
 22074                           
 22075 ;; *************** function _strncmp *****************
 22076 ;; Defined at:
 22077 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 22080 ;;		 -> STR_136(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 22081 ;;		 -> bufferSerial(100), 
 22082 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 22083 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), STR_80(7), 
 22084 ;;		 -> STR_79(3), STR_77(7), STR_76(7), STR_75(3), 
 22085 ;;		 -> STR_73(4), STR_72(5), STR_68(4), STR_67(2), 
 22086 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 22087 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 22088 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 22089 ;;		 -> STR_40(3), STR_38(3), STR_34(4), STR_33(2), 
 22090 ;;		 -> STR_31(4), STR_30(7), STR_25(7), STR_24(3), 
 22091 ;;		 -> STR_22(4), STR_21(3), STR_19(4), STR_18(3), 
 22092 ;;		 -> STR_16(4), STR_15(3), STR_13(4), STR_12(3), 
 22093 ;;		 -> STR_10(4), 
 22094 ;;  len             2   10[BANK0 ] unsigned int 
 22095 ;; Auto vars:     Size  Location     Type
 22096 ;;		None
 22097 ;; Return value:  Size  Location     Type
 22098 ;;                  2    6[BANK0 ] int 
 22099 ;; Registers used:
 22100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22101 ;; Tracked objects:
 22102 ;;		On entry : 0/0
 22103 ;;		On exit  : 0/0
 22104 ;;		Unchanged: 0/0
 22105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22106 ;;      Params:         0       6       0       0       0       0       0       0       0
 22107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22108 ;;      Temps:          0       3       0       0       0       0       0       0       0
 22109 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22110 ;;Total ram usage:        9 bytes
 22111 ;; Hardware stack levels used:    1
 22112 ;; Hardware stack levels required when called:    6
 22113 ;; This function calls:
 22114 ;;		Nothing
 22115 ;; This function is called by:
 22116 ;;		_strstr
 22117 ;; This function uses a non-reentrant model
 22118 ;;
 22119                           
 22120                           	psect	text46
 22121  0048FE                     __ptext46:
 22122                           	opt stack 0
 22123  0048FE                     _strncmp:
 22124                           	opt stack 21
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;incstack = 0
 22128  0048FE  D06D               	goto	l2323
 22129  004900                     l6543:
 22130  004900  C066  FFF6         	movff	strncmp@s1,tblptrl
 22131  004904  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22132  004908  6AF8               	clrf	tblptru,c
 22133  00490A  0E07               	movlw	(high __ramtop+-1)
 22134  00490C  64F7               	cpfsgt	tblptrh,c
 22135  00490E  D003               	bra	u8287
 22136  004910  0008               	tblrd		*
 22137  004912  50F5               	movf	tablat,w,c
 22138  004914  D005               	bra	u8280
 22139  004916                     u8287:
 22140  004916  CFF6 FFE9          	movff	tblptrl,fsr0l
 22141  00491A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22142  00491E  50EF               	movf	indf0,w,c
 22143  004920                     u8280:
 22144  004920  0900               	iorlw	0
 22145  004922  B4D8               	btfsc	status,2,c
 22146  004924  D025               	goto	u8310
 22147  004926  C068  FFF6         	movff	strncmp@s2,tblptrl
 22148  00492A  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22149  00492E  6AF8               	clrf	tblptru,c
 22150  004930  0E07               	movlw	(high __ramtop+-1)
 22151  004932  64F7               	cpfsgt	tblptrh,c
 22152  004934  D003               	bra	u8307
 22153  004936  0008               	tblrd		*
 22154  004938  50F5               	movf	tablat,w,c
 22155  00493A  D005               	bra	u8300
 22156  00493C                     u8307:
 22157  00493C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22158  004940  CFF7 FFEA          	movff	tblptrh,fsr0h
 22159  004944  50EF               	movf	indf0,w,c
 22160  004946                     u8300:
 22161  004946  0100               	movlb	0	; () banked
 22162  004948  6F6C               	movwf	??_strncmp& (0+255),b
 22163  00494A  C066  FFF6         	movff	strncmp@s1,tblptrl
 22164  00494E  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22165  004952  6AF8               	clrf	tblptru,c
 22166  004954  0E07               	movlw	(high __ramtop+-1)
 22167  004956  64F7               	cpfsgt	tblptrh,c
 22168  004958  D003               	bra	u8317
 22169  00495A  0008               	tblrd		*
 22170  00495C  50F5               	movf	tablat,w,c
 22171  00495E  D005               	bra	u8315
 22172  004960                     u8317:
 22173  004960  CFF6 FFE9          	movff	tblptrl,fsr0l
 22174  004964  CFF7 FFEA          	movff	tblptrh,fsr0h
 22175  004968  50EF               	movf	indf0,w,c
 22176  00496A                     u8315:
 22177  00496A  196C               	xorwf	??_strncmp& (0+255),w,b
 22178  00496C  B4D8               	btfsc	status,2,c
 22179  00496E  D030               	goto	l2325
 22180  004970                     u8310:
 22181  004970  C068  FFF6         	movff	strncmp@s2,tblptrl
 22182  004974  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22183  004978  6AF8               	clrf	tblptru,c
 22184  00497A  0E07               	movlw	(high __ramtop+-1)
 22185  00497C  64F7               	cpfsgt	tblptrh,c
 22186  00497E  D003               	bra	u8327
 22187  004980  0008               	tblrd		*
 22188  004982  50F5               	movf	tablat,w,c
 22189  004984  D005               	bra	u8320
 22190  004986                     u8327:
 22191  004986  CFF6 FFE9          	movff	tblptrl,fsr0l
 22192  00498A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22193  00498E  50EF               	movf	indf0,w,c
 22194  004990                     u8320:
 22195  004990  0100               	movlb	0	; () banked
 22196  004992  6F6C               	movwf	??_strncmp& (0+255),b
 22197  004994  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 22198  004996  1F6C               	comf	??_strncmp& (0+255),f,b
 22199  004998  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 22200  00499A  4B6C               	infsnz	??_strncmp& (0+255),f,b
 22201  00499C  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 22202  00499E  C066  FFF6         	movff	strncmp@s1,tblptrl
 22203  0049A2  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22204  0049A6  6AF8               	clrf	tblptru,c
 22205  0049A8  0E07               	movlw	(high __ramtop+-1)
 22206  0049AA  64F7               	cpfsgt	tblptrh,c
 22207  0049AC  D003               	bra	u8337
 22208  0049AE  0008               	tblrd		*
 22209  0049B0  50F5               	movf	tablat,w,c
 22210  0049B2  D005               	bra	u8330
 22211  0049B4                     u8337:
 22212  0049B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 22213  0049B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 22214  0049BC  50EF               	movf	indf0,w,c
 22215  0049BE                     u8330:
 22216  0049BE  0100               	movlb	0	; () banked
 22217  0049C0  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 22218  0049C2  516E               	movf	(??_strncmp+2)& (0+255),w,b
 22219  0049C4  256C               	addwf	??_strncmp& (0+255),w,b
 22220  0049C6  6F66               	movwf	?_strncmp& (0+255),b
 22221  0049C8  0E00               	movlw	0
 22222  0049CA  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 22223  0049CC  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22224                           
 22225                           ; BSR set to: 0
 22226  0049CE  0012               	return	
 22227  0049D0                     l2325:
 22228                           
 22229                           ; BSR set to: 0
 22230  0049D0  0100               	movlb	0	; () banked
 22231  0049D2  4B66               	infsnz	strncmp@s1& (0+255),f,b
 22232  0049D4  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 22233  0049D6  4B68               	infsnz	strncmp@s2& (0+255),f,b
 22234  0049D8  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 22235  0049DA                     l2323:
 22236                           
 22237                           ; BSR set to: 0
 22238  0049DA  0100               	movlb	0	; () banked
 22239  0049DC  076A               	decf	strncmp@len& (0+255),f,b
 22240  0049DE  A0D8               	btfss	status,0,c
 22241  0049E0  076B               	decf	(strncmp@len+1)& (0+255),f,b
 22242  0049E2  296A               	incf	strncmp@len& (0+255),w,b
 22243  0049E4  E18D               	bnz	l6543
 22244  0049E6  296B               	incf	(strncmp@len+1)& (0+255),w,b
 22245  0049E8  A4D8               	btfss	status,2,c
 22246  0049EA  D78A               	goto	l2324
 22247                           
 22248                           ; BSR set to: 0
 22249                           
 22250                           ; BSR set to: 0
 22251  0049EC  0E00               	movlw	0
 22252  0049EE  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22253  0049F0  0E00               	movlw	0
 22254  0049F2  6F66               	movwf	?_strncmp& (0+255),b
 22255  0049F4  0012               	return	
 22256  0049F6                     __end_of_strncmp:
 22257                           	opt stack 0
 22258                           tosu	equ	0xFFF
 22259                           tosh	equ	0xFFE
 22260                           tosl	equ	0xFFD
 22261                           pclath	equ	0xFFA
 22262                           tblptru	equ	0xFF8
 22263                           tblptrh	equ	0xFF7
 22264                           tblptrl	equ	0xFF6
 22265                           tablat	equ	0xFF5
 22266                           prodh	equ	0xFF4
 22267                           prodl	equ	0xFF3
 22268                           intcon	equ	0xFF2
 22269                           intcon2	equ	0xFF1
 22270                           intcon3	equ	0xFF0
 22271                           indf0	equ	0xFEF
 22272                           postinc0	equ	0xFEE
 22273                           fsr0h	equ	0xFEA
 22274                           fsr0l	equ	0xFE9
 22275                           wreg	equ	0xFE8
 22276                           indf1	equ	0xFE7
 22277                           postinc1	equ	0xFE6
 22278                           postdec1	equ	0xFE5
 22279                           plusw1	equ	0xFE3
 22280                           fsr1h	equ	0xFE2
 22281                           fsr1l	equ	0xFE1
 22282                           indf2	equ	0xFDF
 22283                           postinc2	equ	0xFDE
 22284                           postdec2	equ	0xFDD
 22285                           plusw2	equ	0xFDB
 22286                           fsr2h	equ	0xFDA
 22287                           fsr2l	equ	0xFD9
 22288                           status	equ	0xFD8
 22289                           
 22290 ;; *************** function _strlen *****************
 22291 ;; Defined at:
 22292 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 22293 ;; Parameters:    Size  Location     Type
 22294 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 22295 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 22296 ;;		 -> STR_80(7), STR_79(3), STR_77(7), STR_76(7), 
 22297 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 22298 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 22299 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 22300 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 22301 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), STR_40(3), 
 22302 ;;		 -> STR_38(3), ssid(15), STR_34(4), STR_33(2), 
 22303 ;;		 -> bufferSerial(100), STR_31(4), STR_30(7), STR_25(7), 
 22304 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 22305 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 22306 ;;		 -> STR_12(3), STR_10(4), 
 22307 ;; Auto vars:     Size  Location     Type
 22308 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 22309 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 22310 ;;		 -> STR_80(7), STR_79(3), STR_77(7), STR_76(7), 
 22311 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 22312 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 22313 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 22314 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 22315 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), STR_40(3), 
 22316 ;;		 -> STR_38(3), ssid(15), STR_34(4), STR_33(2), 
 22317 ;;		 -> bufferSerial(100), STR_31(4), STR_30(7), STR_25(7), 
 22318 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 22319 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 22320 ;;		 -> STR_12(3), STR_10(4), 
 22321 ;; Return value:  Size  Location     Type
 22322 ;;                  2    0[BANK0 ] unsigned int 
 22323 ;; Registers used:
 22324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22325 ;; Tracked objects:
 22326 ;;		On entry : 0/0
 22327 ;;		On exit  : 0/0
 22328 ;;		Unchanged: 0/0
 22329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22330 ;;      Params:         0       2       0       0       0       0       0       0       0
 22331 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22332 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22333 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22334 ;;Total ram usage:        6 bytes
 22335 ;; Hardware stack levels used:    1
 22336 ;; Hardware stack levels required when called:    6
 22337 ;; This function calls:
 22338 ;;		Nothing
 22339 ;; This function is called by:
 22340 ;;		_alterarDadosConexaoConfigWifi
 22341 ;;		_enviaDadosWifi
 22342 ;;		_getStringJSON
 22343 ;;		_strstr
 22344 ;;		_getIntJSON
 22345 ;; This function uses a non-reentrant model
 22346 ;;
 22347                           
 22348                           	psect	text47
 22349  005678                     __ptext47:
 22350                           	opt stack 0
 22351  005678                     _strlen:
 22352                           	opt stack 23
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;incstack = 0
 22356  005678  C060  F064         	movff	strlen@s,strlen@cp
 22357  00567C  C061  F065         	movff	strlen@s+1,strlen@cp+1
 22358  005680  D003               	goto	l2277
 22359  005682  0100               	movlb	0	; () banked
 22360  005684  4B64               	infsnz	strlen@cp& (0+255),f,b
 22361  005686  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 22362  005688                     l2277:
 22363                           
 22364                           ; BSR set to: 0
 22365  005688  C064  FFF6         	movff	strlen@cp,tblptrl
 22366  00568C  C065  FFF7         	movff	strlen@cp+1,tblptrh
 22367  005690  6AF8               	clrf	tblptru,c
 22368  005692  0E07               	movlw	(high __ramtop+-1)
 22369  005694  64F7               	cpfsgt	tblptrh,c
 22370  005696  D003               	bra	u7897
 22371  005698  0008               	tblrd		*
 22372  00569A  50F5               	movf	tablat,w,c
 22373  00569C  D005               	bra	u7890
 22374  00569E                     u7897:
 22375  00569E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22376  0056A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 22377  0056A6  50EF               	movf	indf0,w,c
 22378  0056A8                     u7890:
 22379  0056A8  0900               	iorlw	0
 22380  0056AA  A4D8               	btfss	status,2,c
 22381  0056AC  D7EA               	goto	l2278
 22382  0056AE  C060  F062         	movff	strlen@s,??_strlen
 22383  0056B2  C061  F063         	movff	strlen@s+1,??_strlen+1
 22384  0056B6  0100               	movlb	0	; () banked
 22385  0056B8  1F62               	comf	??_strlen& (0+255),f,b
 22386  0056BA  1F63               	comf	(??_strlen+1)& (0+255),f,b
 22387  0056BC  4B62               	infsnz	??_strlen& (0+255),f,b
 22388  0056BE  2B63               	incf	(??_strlen+1)& (0+255),f,b
 22389  0056C0  5164               	movf	strlen@cp& (0+255),w,b
 22390  0056C2  2562               	addwf	??_strlen& (0+255),w,b
 22391  0056C4  6F60               	movwf	?_strlen& (0+255),b
 22392  0056C6  5165               	movf	(strlen@cp+1)& (0+255),w,b
 22393  0056C8  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 22394  0056CA  6F61               	movwf	(?_strlen+1)& (0+255),b
 22395  0056CC  0012               	return	
 22396  0056CE                     __end_of_strlen:
 22397                           	opt stack 0
 22398                           tosu	equ	0xFFF
 22399                           tosh	equ	0xFFE
 22400                           tosl	equ	0xFFD
 22401                           pclath	equ	0xFFA
 22402                           tblptru	equ	0xFF8
 22403                           tblptrh	equ	0xFF7
 22404                           tblptrl	equ	0xFF6
 22405                           tablat	equ	0xFF5
 22406                           prodh	equ	0xFF4
 22407                           prodl	equ	0xFF3
 22408                           intcon	equ	0xFF2
 22409                           intcon2	equ	0xFF1
 22410                           intcon3	equ	0xFF0
 22411                           indf0	equ	0xFEF
 22412                           postinc0	equ	0xFEE
 22413                           fsr0h	equ	0xFEA
 22414                           fsr0l	equ	0xFE9
 22415                           wreg	equ	0xFE8
 22416                           indf1	equ	0xFE7
 22417                           postinc1	equ	0xFE6
 22418                           postdec1	equ	0xFE5
 22419                           plusw1	equ	0xFE3
 22420                           fsr1h	equ	0xFE2
 22421                           fsr1l	equ	0xFE1
 22422                           indf2	equ	0xFDF
 22423                           postinc2	equ	0xFDE
 22424                           postdec2	equ	0xFDD
 22425                           plusw2	equ	0xFDB
 22426                           fsr2h	equ	0xFDA
 22427                           fsr2l	equ	0xFD9
 22428                           status	equ	0xFD8
 22429                           
 22430 ;; *************** function _strchr *****************
 22431 ;; Defined at:
 22432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 22435 ;;		 -> STR_136(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 22436 ;;		 -> bufferSerial(100), 
 22437 ;;  chr             2    2[BANK0 ] int 
 22438 ;; Auto vars:     Size  Location     Type
 22439 ;;		None
 22440 ;; Return value:  Size  Location     Type
 22441 ;;                  2    0[BANK0 ] PTR unsigned char 
 22442 ;; Registers used:
 22443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22444 ;; Tracked objects:
 22445 ;;		On entry : 0/0
 22446 ;;		On exit  : 0/0
 22447 ;;		Unchanged: 0/0
 22448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22449 ;;      Params:         0       4       0       0       0       0       0       0       0
 22450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22451 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22452 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22453 ;;Total ram usage:        6 bytes
 22454 ;; Hardware stack levels used:    1
 22455 ;; Hardware stack levels required when called:    6
 22456 ;; This function calls:
 22457 ;;		Nothing
 22458 ;; This function is called by:
 22459 ;;		_strstr
 22460 ;; This function uses a non-reentrant model
 22461 ;;
 22462                           
 22463                           	psect	text48
 22464  0054BC                     __ptext48:
 22465                           	opt stack 0
 22466  0054BC                     _strchr:
 22467                           	opt stack 21
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;incstack = 0
 22471  0054BC  C060  FFF6         	movff	strchr@ptr,tblptrl
 22472  0054C0  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 22473  0054C4  6AF8               	clrf	tblptru,c
 22474  0054C6  0E07               	movlw	(high __ramtop+-1)
 22475  0054C8  64F7               	cpfsgt	tblptrh,c
 22476  0054CA  D003               	bra	u8357
 22477  0054CC  0008               	tblrd		*
 22478  0054CE  50F5               	movf	tablat,w,c
 22479  0054D0  D005               	bra	u8350
 22480  0054D2                     u8357:
 22481  0054D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22482  0054D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22483  0054DA  50EF               	movf	indf0,w,c
 22484  0054DC                     u8350:
 22485  0054DC  0100               	movlb	0	; () banked
 22486  0054DE  1962               	xorwf	strchr@chr& (0+255),w,b
 22487  0054E0  A4D8               	btfss	status,2,c
 22488  0054E2  D005               	goto	l2318
 22489                           
 22490                           ; BSR set to: 0
 22491  0054E4  C060  F060         	movff	strchr@ptr,?_strchr
 22492  0054E8  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 22493                           
 22494                           ; BSR set to: 0
 22495  0054EC  0012               	return	
 22496  0054EE                     l2318:
 22497                           
 22498                           ; BSR set to: 0
 22499                           
 22500                           ; BSR set to: 0
 22501  0054EE  5160               	movf	strchr@ptr& (0+255),w,b
 22502  0054F0  6F64               	movwf	??_strchr& (0+255),b
 22503  0054F2  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 22504  0054F4  6F65               	movwf	(??_strchr+1)& (0+255),b
 22505  0054F6  4B60               	infsnz	strchr@ptr& (0+255),f,b
 22506  0054F8  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 22507  0054FA  C064  FFF6         	movff	??_strchr,tblptrl
 22508  0054FE  C065  FFF7         	movff	??_strchr+1,tblptrh
 22509  005502  6AF8               	clrf	tblptru,c
 22510  005504  0E07               	movlw	(high __ramtop+-1)
 22511  005506  64F7               	cpfsgt	tblptrh,c
 22512  005508  D003               	bra	u8377
 22513  00550A  0008               	tblrd		*
 22514  00550C  50F5               	movf	tablat,w,c
 22515  00550E  D005               	bra	u8370
 22516  005510                     u8377:
 22517  005510  CFF6 FFE9          	movff	tblptrl,fsr0l
 22518  005514  CFF7 FFEA          	movff	tblptrh,fsr0h
 22519  005518  50EF               	movf	indf0,w,c
 22520  00551A                     u8370:
 22521  00551A  0900               	iorlw	0
 22522  00551C  A4D8               	btfss	status,2,c
 22523  00551E  D7CE               	goto	_strchr
 22524  005520  0E00               	movlw	0
 22525  005522  0100               	movlb	0	; () banked
 22526  005524  6F60               	movwf	?_strchr& (0+255),b
 22527  005526  0E00               	movlw	0
 22528  005528  6F61               	movwf	(?_strchr+1)& (0+255),b
 22529  00552A  0012               	return	
 22530  00552C                     __end_of_strchr:
 22531                           	opt stack 0
 22532                           tosu	equ	0xFFF
 22533                           tosh	equ	0xFFE
 22534                           tosl	equ	0xFFD
 22535                           pclath	equ	0xFFA
 22536                           tblptru	equ	0xFF8
 22537                           tblptrh	equ	0xFF7
 22538                           tblptrl	equ	0xFF6
 22539                           tablat	equ	0xFF5
 22540                           prodh	equ	0xFF4
 22541                           prodl	equ	0xFF3
 22542                           intcon	equ	0xFF2
 22543                           intcon2	equ	0xFF1
 22544                           intcon3	equ	0xFF0
 22545                           indf0	equ	0xFEF
 22546                           postinc0	equ	0xFEE
 22547                           fsr0h	equ	0xFEA
 22548                           fsr0l	equ	0xFE9
 22549                           wreg	equ	0xFE8
 22550                           indf1	equ	0xFE7
 22551                           postinc1	equ	0xFE6
 22552                           postdec1	equ	0xFE5
 22553                           plusw1	equ	0xFE3
 22554                           fsr1h	equ	0xFE2
 22555                           fsr1l	equ	0xFE1
 22556                           indf2	equ	0xFDF
 22557                           postinc2	equ	0xFDE
 22558                           postdec2	equ	0xFDD
 22559                           plusw2	equ	0xFDB
 22560                           fsr2h	equ	0xFDA
 22561                           fsr2l	equ	0xFD9
 22562                           status	equ	0xFD8
 22563                           
 22564 ;; *************** function _atualizaLCD *****************
 22565 ;; Defined at:
 22566 ;;		line 159 in file "src/lcd.h"
 22567 ;; Parameters:    Size  Location     Type
 22568 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 22569 ;;		 -> line1(21), 
 22570 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 22571 ;;		 -> line2(21), 
 22572 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 22573 ;;		 -> line3(21), 
 22574 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 22575 ;;		 -> line4(21), 
 22576 ;; Auto vars:     Size  Location     Type
 22577 ;;  i               1   16[BANK0 ] unsigned char 
 22578 ;; Return value:  Size  Location     Type
 22579 ;;                  1    wreg      void 
 22580 ;; Registers used:
 22581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22582 ;; Tracked objects:
 22583 ;;		On entry : 0/0
 22584 ;;		On exit  : 0/0
 22585 ;;		Unchanged: 0/0
 22586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22587 ;;      Params:         0       8       0       0       0       0       0       0       0
 22588 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22589 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22590 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22591 ;;Total ram usage:        9 bytes
 22592 ;; Hardware stack levels used:    1
 22593 ;; Hardware stack levels required when called:    9
 22594 ;; This function calls:
 22595 ;;		_Lcd_Set_Cursor
 22596 ;;		_Lcd_Write_String
 22597 ;; This function is called by:
 22598 ;;		_alterarDadosConexaoConfigWifi
 22599 ;;		_main
 22600 ;; This function uses a non-reentrant model
 22601 ;;
 22602                           
 22603                           	psect	text49
 22604  004BD4                     __ptext49:
 22605                           	opt stack 0
 22606  004BD4                     _atualizaLCD:
 22607                           	opt stack 21
 22608                           
 22609                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;incstack = 0
 22613  004BD4  0E01               	movlw	1
 22614  004BD6  0100               	movlb	0	; () banked
 22615  004BD8  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22616  004BDA  0E01               	movlw	1
 22617  004BDC  EC0B  F027         	call	_Lcd_Set_Cursor
 22618                           
 22619                           ;lcd.h: 163: Lcd_Write_String(line1);
 22620  004BE0  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 22621  004BE4  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 22622  004BE8  EC3D  F02D         	call	_Lcd_Write_String	;wreg free
 22623                           
 22624                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 22625  004BEC  0E01               	movlw	1
 22626  004BEE  0100               	movlb	0	; () banked
 22627  004BF0  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22628  004BF2  0E02               	movlw	2
 22629  004BF4  EC0B  F027         	call	_Lcd_Set_Cursor
 22630                           
 22631                           ;lcd.h: 165: Lcd_Write_String(line2);
 22632  004BF8  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 22633  004BFC  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 22634  004C00  EC3D  F02D         	call	_Lcd_Write_String	;wreg free
 22635                           
 22636                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 22637  004C04  0E00               	movlw	0
 22638  004C06  0100               	movlb	0	; () banked
 22639  004C08  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22640  004C0A  0E03               	movlw	3
 22641  004C0C  EC0B  F027         	call	_Lcd_Set_Cursor
 22642                           
 22643                           ;lcd.h: 167: Lcd_Write_String(line3);
 22644  004C10  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 22645  004C14  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 22646  004C18  EC3D  F02D         	call	_Lcd_Write_String	;wreg free
 22647                           
 22648                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 22649  004C1C  0E00               	movlw	0
 22650  004C1E  0100               	movlb	0	; () banked
 22651  004C20  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22652  004C22  0E04               	movlw	4
 22653  004C24  EC0B  F027         	call	_Lcd_Set_Cursor
 22654                           
 22655                           ;lcd.h: 169: Lcd_Write_String(line4);
 22656  004C28  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 22657  004C2C  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 22658  004C30  EC3D  F02D         	call	_Lcd_Write_String	;wreg free
 22659                           
 22660                           ;lcd.h: 171: char i = 0;
 22661  004C34  0E00               	movlw	0
 22662  004C36  0100               	movlb	0	; () banked
 22663  004C38  6F70               	movwf	atualizaLCD@i& (0+255),b
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 22667  004C3A  0E00               	movlw	0
 22668  004C3C  6F70               	movwf	atualizaLCD@i& (0+255),b
 22669  004C3E                     l6743:
 22670                           
 22671                           ; BSR set to: 0
 22672  004C3E  0E13               	movlw	19
 22673  004C40  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 22674  004C42  D001               	goto	l268
 22675  004C44  0012               	return	
 22676  004C46                     l268:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;lcd.h: 173: line1[i] = ' ';
 22680                           
 22681                           ; BSR set to: 0
 22682  004C46  5170               	movf	atualizaLCD@i& (0+255),w,b
 22683  004C48  0D01               	mullw	1
 22684  004C4A  50F3               	movf	prodl,w,c
 22685  004C4C  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 22686  004C4E  6ED9               	movwf	fsr2l,c
 22687  004C50  50F4               	movf	prodh,w,c
 22688  004C52  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 22689  004C54  6EDA               	movwf	fsr2h,c
 22690  004C56  0E20               	movlw	32
 22691  004C58  6EDF               	movwf	indf2,c
 22692                           
 22693                           ;lcd.h: 174: line2[i] = ' ';
 22694  004C5A  5170               	movf	atualizaLCD@i& (0+255),w,b
 22695  004C5C  0D01               	mullw	1
 22696  004C5E  50F3               	movf	prodl,w,c
 22697  004C60  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 22698  004C62  6ED9               	movwf	fsr2l,c
 22699  004C64  50F4               	movf	prodh,w,c
 22700  004C66  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 22701  004C68  6EDA               	movwf	fsr2h,c
 22702  004C6A  0E20               	movlw	32
 22703  004C6C  6EDF               	movwf	indf2,c
 22704                           
 22705                           ;lcd.h: 175: line3[i] = ' ';
 22706  004C6E  5170               	movf	atualizaLCD@i& (0+255),w,b
 22707  004C70  0D01               	mullw	1
 22708  004C72  50F3               	movf	prodl,w,c
 22709  004C74  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 22710  004C76  6ED9               	movwf	fsr2l,c
 22711  004C78  50F4               	movf	prodh,w,c
 22712  004C7A  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 22713  004C7C  6EDA               	movwf	fsr2h,c
 22714  004C7E  0E20               	movlw	32
 22715  004C80  6EDF               	movwf	indf2,c
 22716                           
 22717                           ;lcd.h: 176: line4[i] = ' ';
 22718  004C82  5170               	movf	atualizaLCD@i& (0+255),w,b
 22719  004C84  0D01               	mullw	1
 22720  004C86  50F3               	movf	prodl,w,c
 22721  004C88  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 22722  004C8A  6ED9               	movwf	fsr2l,c
 22723  004C8C  50F4               	movf	prodh,w,c
 22724  004C8E  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 22725  004C90  6EDA               	movwf	fsr2h,c
 22726  004C92  0E20               	movlw	32
 22727  004C94  6EDF               	movwf	indf2,c
 22728                           
 22729                           ; BSR set to: 0
 22730  004C96  2B70               	incf	atualizaLCD@i& (0+255),f,b
 22731  004C98  D7D2               	goto	l6743
 22732  004C9A                     __end_of_atualizaLCD:
 22733                           	opt stack 0
 22734                           tosu	equ	0xFFF
 22735                           tosh	equ	0xFFE
 22736                           tosl	equ	0xFFD
 22737                           pclath	equ	0xFFA
 22738                           tblptru	equ	0xFF8
 22739                           tblptrh	equ	0xFF7
 22740                           tblptrl	equ	0xFF6
 22741                           tablat	equ	0xFF5
 22742                           prodh	equ	0xFF4
 22743                           prodl	equ	0xFF3
 22744                           intcon	equ	0xFF2
 22745                           intcon2	equ	0xFF1
 22746                           intcon3	equ	0xFF0
 22747                           indf0	equ	0xFEF
 22748                           postinc0	equ	0xFEE
 22749                           fsr0h	equ	0xFEA
 22750                           fsr0l	equ	0xFE9
 22751                           wreg	equ	0xFE8
 22752                           indf1	equ	0xFE7
 22753                           postinc1	equ	0xFE6
 22754                           postdec1	equ	0xFE5
 22755                           plusw1	equ	0xFE3
 22756                           fsr1h	equ	0xFE2
 22757                           fsr1l	equ	0xFE1
 22758                           indf2	equ	0xFDF
 22759                           postinc2	equ	0xFDE
 22760                           postdec2	equ	0xFDD
 22761                           plusw2	equ	0xFDB
 22762                           fsr2h	equ	0xFDA
 22763                           fsr2l	equ	0xFD9
 22764                           status	equ	0xFD8
 22765                           
 22766 ;; *************** function _Lcd_Write_String *****************
 22767 ;; Defined at:
 22768 ;;		line 137 in file "src/lcd.h"
 22769 ;; Parameters:    Size  Location     Type
 22770 ;;  a               2    4[BANK0 ] PTR unsigned char 
 22771 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 22772 ;; Auto vars:     Size  Location     Type
 22773 ;;  i               1    6[BANK0 ] unsigned char 
 22774 ;; Return value:  Size  Location     Type
 22775 ;;                  1    wreg      void 
 22776 ;; Registers used:
 22777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22778 ;; Tracked objects:
 22779 ;;		On entry : 0/0
 22780 ;;		On exit  : 0/0
 22781 ;;		Unchanged: 0/0
 22782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22783 ;;      Params:         0       2       0       0       0       0       0       0       0
 22784 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22786 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22787 ;;Total ram usage:        3 bytes
 22788 ;; Hardware stack levels used:    1
 22789 ;; Hardware stack levels required when called:    8
 22790 ;; This function calls:
 22791 ;;		_Lcd_Write_Char
 22792 ;; This function is called by:
 22793 ;;		_atualizaLCD
 22794 ;; This function uses a non-reentrant model
 22795 ;;
 22796                           
 22797                           	psect	text50
 22798  005A7A                     __ptext50:
 22799                           	opt stack 0
 22800  005A7A                     _Lcd_Write_String:
 22801                           	opt stack 21
 22802                           
 22803                           ;lcd.h: 138: unsigned char i = 0;
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;incstack = 0
 22807  005A7A  0E00               	movlw	0
 22808  005A7C  0100               	movlb	0	; () banked
 22809  005A7E  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22810                           
 22811                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 22812  005A80  0E00               	movlw	0
 22813  005A82  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22814  005A84                     l6639:
 22815                           
 22816                           ; BSR set to: 0
 22817  005A84  0E13               	movlw	19
 22818  005A86  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 22819  005A88  D001               	goto	l263
 22820  005A8A  0012               	return	
 22821  005A8C                     l263:
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 22825                           
 22826                           ; BSR set to: 0
 22827  005A8C  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 22828  005A8E  0D01               	mullw	1
 22829  005A90  50F3               	movf	prodl,w,c
 22830  005A92  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 22831  005A94  6ED9               	movwf	fsr2l,c
 22832  005A96  50F4               	movf	prodh,w,c
 22833  005A98  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 22834  005A9A  6EDA               	movwf	fsr2h,c
 22835  005A9C  50DF               	movf	indf2,w,c
 22836  005A9E  EC6C  F02C         	call	_Lcd_Write_Char
 22837  005AA2  0100               	movlb	0	; () banked
 22838  005AA4  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 22839  005AA6  D7EE               	goto	l6639
 22840  005AA8                     __end_of_Lcd_Write_String:
 22841                           	opt stack 0
 22842                           tosu	equ	0xFFF
 22843                           tosh	equ	0xFFE
 22844                           tosl	equ	0xFFD
 22845                           pclath	equ	0xFFA
 22846                           tblptru	equ	0xFF8
 22847                           tblptrh	equ	0xFF7
 22848                           tblptrl	equ	0xFF6
 22849                           tablat	equ	0xFF5
 22850                           prodh	equ	0xFF4
 22851                           prodl	equ	0xFF3
 22852                           intcon	equ	0xFF2
 22853                           intcon2	equ	0xFF1
 22854                           intcon3	equ	0xFF0
 22855                           indf0	equ	0xFEF
 22856                           postinc0	equ	0xFEE
 22857                           fsr0h	equ	0xFEA
 22858                           fsr0l	equ	0xFE9
 22859                           wreg	equ	0xFE8
 22860                           indf1	equ	0xFE7
 22861                           postinc1	equ	0xFE6
 22862                           postdec1	equ	0xFE5
 22863                           plusw1	equ	0xFE3
 22864                           fsr1h	equ	0xFE2
 22865                           fsr1l	equ	0xFE1
 22866                           indf2	equ	0xFDF
 22867                           postinc2	equ	0xFDE
 22868                           postdec2	equ	0xFDD
 22869                           plusw2	equ	0xFDB
 22870                           fsr2h	equ	0xFDA
 22871                           fsr2l	equ	0xFD9
 22872                           status	equ	0xFD8
 22873                           
 22874 ;; *************** function _Lcd_Write_Char *****************
 22875 ;; Defined at:
 22876 ;;		line 122 in file "src/lcd.h"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;  a               1    wreg     unsigned char 
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;  a               1    3[BANK0 ] unsigned char 
 22881 ;;  y               1    2[BANK0 ] unsigned char 
 22882 ;;  tempp           1    1[BANK0 ] unsigned char 
 22883 ;; Return value:  Size  Location     Type
 22884 ;;                  1    wreg      void 
 22885 ;; Registers used:
 22886 ;;		wreg, status,2, status,0, cstack
 22887 ;; Tracked objects:
 22888 ;;		On entry : 0/0
 22889 ;;		On exit  : 0/0
 22890 ;;		Unchanged: 0/0
 22891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22892 ;;      Params:         0       0       0       0       0       0       0       0       0
 22893 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22894 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22895 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22896 ;;Total ram usage:        3 bytes
 22897 ;; Hardware stack levels used:    1
 22898 ;; Hardware stack levels required when called:    7
 22899 ;; This function calls:
 22900 ;;		_Lcd_Port
 22901 ;; This function is called by:
 22902 ;;		_Lcd_Write_String
 22903 ;;		_criaCaracteresCGRAM
 22904 ;; This function uses a non-reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text51
 22908  0058D8                     __ptext51:
 22909                           	opt stack 0
 22910  0058D8                     _Lcd_Write_Char:
 22911                           	opt stack 22
 22912                           
 22913                           ; BSR set to: 0
 22914                           ;incstack = 0
 22915                           ;Lcd_Write_Char@a stored from wreg
 22916  0058D8  0100               	movlb	0	; () banked
 22917  0058DA  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 22918                           
 22919                           ;lcd.h: 123: char tempp, y;
 22920                           ;lcd.h: 124: tempp = a & 0x0F;
 22921  0058DC  0100               	movlb	0	; () banked
 22922  0058DE  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22923  0058E0  0B0F               	andlw	15
 22924  0058E2  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 22925                           
 22926                           ;lcd.h: 125: y = a & 0xF0;
 22927  0058E4  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22928  0058E6  0BF0               	andlw	240
 22929  0058E8  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 22930                           
 22931                           ; BSR set to: 0
 22932                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 22933  0058EA  8483               	bsf	3971,2,c	;volatile
 22934                           
 22935                           ; BSR set to: 0
 22936                           ;lcd.h: 127: Lcd_Port(y >> 4);
 22937  0058EC  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 22938  0058EE  0B0F               	andlw	15
 22939  0058F0  EC25  F02D         	call	_Lcd_Port
 22940                           
 22941                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 22942  0058F4  8683               	bsf	3971,3,c	;volatile
 22943                           
 22944                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22945  0058F6  0E1A               	movlw	26
 22946  0058F8                     u15567:
 22947  0058F8  2EE8               	decfsz	wreg,f,c
 22948  0058FA  D7FE               	bra	u15567
 22949  0058FC  D000               	nop2	
 22950                           
 22951                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 22952  0058FE  9683               	bcf	3971,3,c	;volatile
 22953                           
 22954                           ;lcd.h: 131: Lcd_Port(tempp);
 22955  005900  0100               	movlb	0	; () banked
 22956  005902  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 22957  005904  EC25  F02D         	call	_Lcd_Port
 22958                           
 22959                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 22960  005908  8683               	bsf	3971,3,c	;volatile
 22961                           
 22962                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22963  00590A  0E1A               	movlw	26
 22964  00590C                     u15577:
 22965  00590C  2EE8               	decfsz	wreg,f,c
 22966  00590E  D7FE               	bra	u15577
 22967  005910  D000               	nop2	
 22968                           
 22969                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 22970  005912  9683               	bcf	3971,3,c	;volatile
 22971  005914  0012               	return		;funcret
 22972  005916                     __end_of_Lcd_Write_Char:
 22973                           	opt stack 0
 22974                           tosu	equ	0xFFF
 22975                           tosh	equ	0xFFE
 22976                           tosl	equ	0xFFD
 22977                           pclath	equ	0xFFA
 22978                           tblptru	equ	0xFF8
 22979                           tblptrh	equ	0xFF7
 22980                           tblptrl	equ	0xFF6
 22981                           tablat	equ	0xFF5
 22982                           prodh	equ	0xFF4
 22983                           prodl	equ	0xFF3
 22984                           intcon	equ	0xFF2
 22985                           intcon2	equ	0xFF1
 22986                           intcon3	equ	0xFF0
 22987                           indf0	equ	0xFEF
 22988                           postinc0	equ	0xFEE
 22989                           fsr0h	equ	0xFEA
 22990                           fsr0l	equ	0xFE9
 22991                           wreg	equ	0xFE8
 22992                           indf1	equ	0xFE7
 22993                           postinc1	equ	0xFE6
 22994                           postdec1	equ	0xFE5
 22995                           plusw1	equ	0xFE3
 22996                           fsr1h	equ	0xFE2
 22997                           fsr1l	equ	0xFE1
 22998                           indf2	equ	0xFDF
 22999                           postinc2	equ	0xFDE
 23000                           postdec2	equ	0xFDD
 23001                           plusw2	equ	0xFDB
 23002                           fsr2h	equ	0xFDA
 23003                           fsr2l	equ	0xFD9
 23004                           status	equ	0xFD8
 23005                           
 23006 ;; *************** function _Lcd_Set_Cursor *****************
 23007 ;; Defined at:
 23008 ;;		line 87 in file "src/lcd.h"
 23009 ;; Parameters:    Size  Location     Type
 23010 ;;  a               1    wreg     unsigned char 
 23011 ;;  b               1    3[BANK0 ] unsigned char 
 23012 ;; Auto vars:     Size  Location     Type
 23013 ;;  a               1    4[BANK0 ] unsigned char 
 23014 ;;  temp            1    7[BANK0 ] unsigned char 
 23015 ;;  y               1    6[BANK0 ] unsigned char 
 23016 ;;  z               1    5[BANK0 ] unsigned char 
 23017 ;; Return value:  Size  Location     Type
 23018 ;;                  1    wreg      void 
 23019 ;; Registers used:
 23020 ;;		wreg, status,2, status,0, cstack
 23021 ;; Tracked objects:
 23022 ;;		On entry : 0/0
 23023 ;;		On exit  : 0/0
 23024 ;;		Unchanged: 0/0
 23025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23026 ;;      Params:         0       1       0       0       0       0       0       0       0
 23027 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23028 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23029 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23030 ;;Total ram usage:        5 bytes
 23031 ;; Hardware stack levels used:    1
 23032 ;; Hardware stack levels required when called:    8
 23033 ;; This function calls:
 23034 ;;		_Lcd_Cmd
 23035 ;; This function is called by:
 23036 ;;		_atualizaLCD
 23037 ;; This function uses a non-reentrant model
 23038 ;;
 23039                           
 23040                           	psect	text52
 23041  004E16                     __ptext52:
 23042                           	opt stack 0
 23043  004E16                     _Lcd_Set_Cursor:
 23044                           	opt stack 21
 23045                           
 23046                           ;incstack = 0
 23047                           ;Lcd_Set_Cursor@a stored from wreg
 23048  004E16  0100               	movlb	0	; () banked
 23049  004E18  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 23050                           
 23051                           ;lcd.h: 88: char temp, z, y;
 23052                           ;lcd.h: 89: switch (a) {
 23053  004E1A  D048               	goto	l250
 23054  004E1C                     
 23055                           ;lcd.h: 91: temp = 0x80 + b - 1;
 23056  004E1C  0100               	movlb	0	; () banked
 23057  004E1E  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23058  004E20  0F7F               	addlw	127
 23059  004E22  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23060                           
 23061                           ;lcd.h: 92: z = temp >> 4;
 23062  004E24  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23063  004E26  0B0F               	andlw	15
 23064  004E28  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23065                           
 23066                           ;lcd.h: 93: y = temp & 0x0F;
 23067  004E2A  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23068  004E2C  0B0F               	andlw	15
 23069  004E2E  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23070                           
 23071                           ; BSR set to: 0
 23072                           ;lcd.h: 94: Lcd_Cmd(z);
 23073  004E30  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23074  004E32  ECCF  F02D         	call	_Lcd_Cmd
 23075                           
 23076                           ;lcd.h: 95: Lcd_Cmd(y);
 23077  004E36  0100               	movlb	0	; () banked
 23078  004E38  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23079  004E3A  ECCF  F02D         	call	_Lcd_Cmd
 23080                           
 23081                           ;lcd.h: 96: break;
 23082  004E3E  0012               	return	
 23083  004E40                     
 23084                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 23085  004E40  0100               	movlb	0	; () banked
 23086  004E42  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23087  004E44  0FBF               	addlw	191
 23088  004E46  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23089                           
 23090                           ;lcd.h: 99: z = temp >> 4;
 23091  004E48  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23092  004E4A  0B0F               	andlw	15
 23093  004E4C  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23094                           
 23095                           ;lcd.h: 100: y = temp & 0x0F;
 23096  004E4E  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23097  004E50  0B0F               	andlw	15
 23098  004E52  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23099                           
 23100                           ; BSR set to: 0
 23101                           ;lcd.h: 101: Lcd_Cmd(z);
 23102  004E54  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23103  004E56  ECCF  F02D         	call	_Lcd_Cmd
 23104                           
 23105                           ;lcd.h: 102: Lcd_Cmd(y);
 23106  004E5A  0100               	movlb	0	; () banked
 23107  004E5C  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23108  004E5E  ECCF  F02D         	call	_Lcd_Cmd
 23109                           
 23110                           ;lcd.h: 103: break;
 23111  004E62  0012               	return	
 23112  004E64                     
 23113                           ;lcd.h: 105: temp = 0x94 + b;
 23114  004E64  0100               	movlb	0	; () banked
 23115  004E66  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23116  004E68  0F94               	addlw	148
 23117  004E6A  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23118                           
 23119                           ;lcd.h: 106: z = temp >> 4;
 23120  004E6C  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23121  004E6E  0B0F               	andlw	15
 23122  004E70  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23123                           
 23124                           ;lcd.h: 107: y = temp & 0x0F;
 23125  004E72  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23126  004E74  0B0F               	andlw	15
 23127  004E76  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23128                           
 23129                           ; BSR set to: 0
 23130                           ;lcd.h: 108: Lcd_Cmd(z);
 23131  004E78  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23132  004E7A  ECCF  F02D         	call	_Lcd_Cmd
 23133                           
 23134                           ;lcd.h: 109: Lcd_Cmd(y);
 23135  004E7E  0100               	movlb	0	; () banked
 23136  004E80  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23137  004E82  ECCF  F02D         	call	_Lcd_Cmd
 23138                           
 23139                           ;lcd.h: 110: break;
 23140  004E86  0012               	return	
 23141  004E88                     
 23142                           ;lcd.h: 112: temp = 0xD4 + b;
 23143  004E88  0100               	movlb	0	; () banked
 23144  004E8A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23145  004E8C  0FD4               	addlw	212
 23146  004E8E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23147                           
 23148                           ;lcd.h: 113: z = temp >> 4;
 23149  004E90  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23150  004E92  0B0F               	andlw	15
 23151  004E94  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23152                           
 23153                           ;lcd.h: 114: y = temp & 0x0F;
 23154  004E96  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23155  004E98  0B0F               	andlw	15
 23156  004E9A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;lcd.h: 115: Lcd_Cmd(z);
 23160  004E9C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23161  004E9E  ECCF  F02D         	call	_Lcd_Cmd
 23162                           
 23163                           ;lcd.h: 116: Lcd_Cmd(y);
 23164  004EA2  0100               	movlb	0	; () banked
 23165  004EA4  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23166  004EA6  ECCF  F02D         	call	_Lcd_Cmd
 23167                           
 23168                           ;lcd.h: 119: }
 23169                           
 23170                           ;lcd.h: 118: default:return;
 23171                           
 23172                           ;lcd.h: 117: break;
 23173  004EAA  0012               	return	
 23174  004EAC                     l250:
 23175  004EAC  0100               	movlb	0	; () banked
 23176  004EAE  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 23177                           
 23178                           ; Switch size 1, requested type "space"
 23179                           ; Number of cases is 4, Range of values is 1 to 4
 23180                           ; switch strategies available:
 23181                           ; Name         Instructions Cycles
 23182                           ; simple_byte           13     7 (average)
 23183                           ;	Chosen strategy is simple_byte
 23184  004EB0  0A01               	xorlw	1	; case 1
 23185  004EB2  B4D8               	btfsc	status,2,c
 23186  004EB4  D7B3               	goto	l251
 23187  004EB6  0A03               	xorlw	3	; case 2
 23188  004EB8  B4D8               	btfsc	status,2,c
 23189  004EBA  D7C2               	goto	l253
 23190  004EBC  0A01               	xorlw	1	; case 3
 23191  004EBE  B4D8               	btfsc	status,2,c
 23192  004EC0  D7D1               	goto	l254
 23193  004EC2  0A07               	xorlw	7	; case 4
 23194  004EC4  A4D8               	btfss	status,2,c
 23195  004EC6  0012               	return	
 23196  004EC8  D7DF               	goto	l255
 23197  004ECA                     __end_of_Lcd_Set_Cursor:
 23198                           	opt stack 0
 23199                           tosu	equ	0xFFF
 23200                           tosh	equ	0xFFE
 23201                           tosl	equ	0xFFD
 23202                           pclath	equ	0xFFA
 23203                           tblptru	equ	0xFF8
 23204                           tblptrh	equ	0xFF7
 23205                           tblptrl	equ	0xFF6
 23206                           tablat	equ	0xFF5
 23207                           prodh	equ	0xFF4
 23208                           prodl	equ	0xFF3
 23209                           intcon	equ	0xFF2
 23210                           intcon2	equ	0xFF1
 23211                           intcon3	equ	0xFF0
 23212                           indf0	equ	0xFEF
 23213                           postinc0	equ	0xFEE
 23214                           fsr0h	equ	0xFEA
 23215                           fsr0l	equ	0xFE9
 23216                           wreg	equ	0xFE8
 23217                           indf1	equ	0xFE7
 23218                           postinc1	equ	0xFE6
 23219                           postdec1	equ	0xFE5
 23220                           plusw1	equ	0xFE3
 23221                           fsr1h	equ	0xFE2
 23222                           fsr1l	equ	0xFE1
 23223                           indf2	equ	0xFDF
 23224                           postinc2	equ	0xFDE
 23225                           postdec2	equ	0xFDD
 23226                           plusw2	equ	0xFDB
 23227                           fsr2h	equ	0xFDA
 23228                           fsr2l	equ	0xFD9
 23229                           status	equ	0xFD8
 23230                           
 23231 ;; *************** function _UART_Init *****************
 23232 ;; Defined at:
 23233 ;;		line 9 in file "src/USART.h"
 23234 ;; Parameters:    Size  Location     Type
 23235 ;;		None
 23236 ;; Auto vars:     Size  Location     Type
 23237 ;;		None
 23238 ;; Return value:  Size  Location     Type
 23239 ;;                  1    wreg      void 
 23240 ;; Registers used:
 23241 ;;		wreg, status,2
 23242 ;; Tracked objects:
 23243 ;;		On entry : 0/0
 23244 ;;		On exit  : 0/0
 23245 ;;		Unchanged: 0/0
 23246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23247 ;;      Params:         0       0       0       0       0       0       0       0       0
 23248 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23249 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23250 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23251 ;;Total ram usage:        0 bytes
 23252 ;; Hardware stack levels used:    1
 23253 ;; Hardware stack levels required when called:    6
 23254 ;; This function calls:
 23255 ;;		Nothing
 23256 ;; This function is called by:
 23257 ;;		_main
 23258 ;; This function uses a non-reentrant model
 23259 ;;
 23260                           
 23261                           	psect	text53
 23262  005C44                     __ptext53:
 23263                           	opt stack 0
 23264  005C44                     _UART_Init:
 23265                           	opt stack 24
 23266                           
 23267                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 23268                           
 23269                           ;incstack = 0
 23270  005C44  9C94               	bcf	3988,6,c	;volatile
 23271                           
 23272                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 23273  005C46  8E94               	bsf	3988,7,c	;volatile
 23274                           
 23275                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 23276  005C48  8AAC               	bsf	4012,5,c	;volatile
 23277                           
 23278                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 23279  005C4A  84AC               	bsf	4012,2,c	;volatile
 23280                           
 23281                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 23282  005C4C  98AC               	bcf	4012,4,c	;volatile
 23283                           
 23284                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 23285  005C4E  8EAB               	bsf	4011,7,c	;volatile
 23286                           
 23287                           ;USART.h: 20: RCSTAbits.CREN = 1;
 23288  005C50  88AB               	bsf	4011,4,c	;volatile
 23289                           
 23290                           ;USART.h: 25: SPBRG = 25;
 23291  005C52  0E19               	movlw	25
 23292  005C54  6EAF               	movwf	4015,c	;volatile
 23293                           
 23294                           ;USART.h: 28: INTCONbits.GIE = 1;
 23295  005C56  8EF2               	bsf	intcon,7,c	;volatile
 23296                           
 23297                           ;USART.h: 29: INTCONbits.PEIE = 1;
 23298  005C58  8CF2               	bsf	intcon,6,c	;volatile
 23299                           
 23300                           ;USART.h: 31: PIR1bits.RCIF = 0;
 23301  005C5A  9A9E               	bcf	3998,5,c	;volatile
 23302                           
 23303                           ;USART.h: 32: PIE1bits.RCIE = 1;
 23304  005C5C  8A9D               	bsf	3997,5,c	;volatile
 23305  005C5E  0012               	return		;funcret
 23306  005C60                     __end_of_UART_Init:
 23307                           	opt stack 0
 23308                           tosu	equ	0xFFF
 23309                           tosh	equ	0xFFE
 23310                           tosl	equ	0xFFD
 23311                           pclath	equ	0xFFA
 23312                           tblptru	equ	0xFF8
 23313                           tblptrh	equ	0xFF7
 23314                           tblptrl	equ	0xFF6
 23315                           tablat	equ	0xFF5
 23316                           prodh	equ	0xFF4
 23317                           prodl	equ	0xFF3
 23318                           intcon	equ	0xFF2
 23319                           intcon2	equ	0xFF1
 23320                           intcon3	equ	0xFF0
 23321                           indf0	equ	0xFEF
 23322                           postinc0	equ	0xFEE
 23323                           fsr0h	equ	0xFEA
 23324                           fsr0l	equ	0xFE9
 23325                           wreg	equ	0xFE8
 23326                           indf1	equ	0xFE7
 23327                           postinc1	equ	0xFE6
 23328                           postdec1	equ	0xFE5
 23329                           plusw1	equ	0xFE3
 23330                           fsr1h	equ	0xFE2
 23331                           fsr1l	equ	0xFE1
 23332                           indf2	equ	0xFDF
 23333                           postinc2	equ	0xFDE
 23334                           postdec2	equ	0xFDD
 23335                           plusw2	equ	0xFDB
 23336                           fsr2h	equ	0xFDA
 23337                           fsr2l	equ	0xFD9
 23338                           status	equ	0xFD8
 23339                           
 23340 ;; *************** function _Lcd_Init *****************
 23341 ;; Defined at:
 23342 ;;		line 17 in file "src/lcd.h"
 23343 ;; Parameters:    Size  Location     Type
 23344 ;;		None
 23345 ;; Auto vars:     Size  Location     Type
 23346 ;;		None
 23347 ;; Return value:  Size  Location     Type
 23348 ;;                  1    wreg      void 
 23349 ;; Registers used:
 23350 ;;		wreg, status,2, cstack
 23351 ;; Tracked objects:
 23352 ;;		On entry : 0/0
 23353 ;;		On exit  : 0/0
 23354 ;;		Unchanged: 0/0
 23355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23356 ;;      Params:         0       0       0       0       0       0       0       0       0
 23357 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23358 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23359 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23360 ;;Total ram usage:        1 bytes
 23361 ;; Hardware stack levels used:    1
 23362 ;; Hardware stack levels required when called:    8
 23363 ;; This function calls:
 23364 ;;		_Lcd_Cmd
 23365 ;;		_Lcd_Port
 23366 ;; This function is called by:
 23367 ;;		_main
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371                           	psect	text54
 23372  0053B4                     __ptext54:
 23373                           	opt stack 0
 23374  0053B4                     _Lcd_Init:
 23375                           	opt stack 22
 23376                           
 23377                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 23378                           
 23379                           ;incstack = 0
 23380  0053B4  9E95               	bcf	3989,7,c	;volatile
 23381                           
 23382                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 23383  0053B6  9C95               	bcf	3989,6,c	;volatile
 23384                           
 23385                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 23386  0053B8  9A95               	bcf	3989,5,c	;volatile
 23387                           
 23388                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 23389  0053BA  9895               	bcf	3989,4,c	;volatile
 23390                           
 23391                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 23392  0053BC  9695               	bcf	3989,3,c	;volatile
 23393                           
 23394                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 23395  0053BE  9495               	bcf	3989,2,c	;volatile
 23396                           
 23397                           ;lcd.h: 35: Lcd_Port(0x00);
 23398  0053C0  0E00               	movlw	0
 23399  0053C2  EC25  F02D         	call	_Lcd_Port
 23400                           
 23401                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 23402  0053C6  0E34               	movlw	52
 23403  0053C8  0100               	movlb	0	; () banked
 23404  0053CA  6F63               	movwf	??_Lcd_Init& (0+255),b
 23405  0053CC  0EF1               	movlw	241
 23406  0053CE                     u15587:
 23407  0053CE  2EE8               	decfsz	wreg,f,c
 23408  0053D0  D7FE               	bra	u15587
 23409  0053D2  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23410  0053D4  D7FC               	bra	u15587
 23411  0053D6  D000               	nop2	
 23412                           
 23413                           ;lcd.h: 37: Lcd_Cmd(0x03);
 23414  0053D8  0E03               	movlw	3
 23415  0053DA  ECCF  F02D         	call	_Lcd_Cmd
 23416                           
 23417                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 23418  0053DE  0E0D               	movlw	13
 23419  0053E0  0100               	movlb	0	; () banked
 23420  0053E2  6F63               	movwf	??_Lcd_Init& (0+255),b
 23421  0053E4  0EFB               	movlw	251
 23422  0053E6                     u15597:
 23423  0053E6  2EE8               	decfsz	wreg,f,c
 23424  0053E8  D7FE               	bra	u15597
 23425  0053EA  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23426  0053EC  D7FC               	bra	u15597
 23427  0053EE  D000               	nop2	
 23428                           
 23429                           ;lcd.h: 39: Lcd_Cmd(0x03);
 23430  0053F0  0E03               	movlw	3
 23431  0053F2  ECCF  F02D         	call	_Lcd_Cmd
 23432                           
 23433                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 23434  0053F6  0E1D               	movlw	29
 23435  0053F8  0100               	movlb	0	; () banked
 23436  0053FA  6F63               	movwf	??_Lcd_Init& (0+255),b
 23437  0053FC  0E91               	movlw	145
 23438  0053FE                     u15607:
 23439  0053FE  2EE8               	decfsz	wreg,f,c
 23440  005400  D7FE               	bra	u15607
 23441  005402  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23442  005404  D7FC               	bra	u15607
 23443                           
 23444                           ;lcd.h: 41: Lcd_Cmd(0x03);
 23445  005406  0E03               	movlw	3
 23446  005408  ECCF  F02D         	call	_Lcd_Cmd
 23447                           
 23448                           ;lcd.h: 43: Lcd_Cmd(0x02);
 23449  00540C  0E02               	movlw	2
 23450  00540E  ECCF  F02D         	call	_Lcd_Cmd
 23451                           
 23452                           ;lcd.h: 44: Lcd_Cmd(0x02);
 23453  005412  0E02               	movlw	2
 23454  005414  ECCF  F02D         	call	_Lcd_Cmd
 23455                           
 23456                           ;lcd.h: 45: Lcd_Cmd(0x08);
 23457  005418  0E08               	movlw	8
 23458  00541A  ECCF  F02D         	call	_Lcd_Cmd
 23459                           
 23460                           ;lcd.h: 46: Lcd_Cmd(0x00);
 23461  00541E  0E00               	movlw	0
 23462  005420  ECCF  F02D         	call	_Lcd_Cmd
 23463                           
 23464                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 23465  005424  0E0C               	movlw	12
 23466  005426  ECCF  F02D         	call	_Lcd_Cmd
 23467                           
 23468                           ;lcd.h: 48: Lcd_Cmd(0x00);
 23469  00542A  0E00               	movlw	0
 23470  00542C  ECCF  F02D         	call	_Lcd_Cmd
 23471                           
 23472                           ;lcd.h: 49: Lcd_Cmd(0x06);
 23473  005430  0E06               	movlw	6
 23474  005432  ECCF  F02D         	call	_Lcd_Cmd
 23475  005436  0012               	return		;funcret
 23476  005438                     __end_of_Lcd_Init:
 23477                           	opt stack 0
 23478                           tosu	equ	0xFFF
 23479                           tosh	equ	0xFFE
 23480                           tosl	equ	0xFFD
 23481                           pclath	equ	0xFFA
 23482                           tblptru	equ	0xFF8
 23483                           tblptrh	equ	0xFF7
 23484                           tblptrl	equ	0xFF6
 23485                           tablat	equ	0xFF5
 23486                           prodh	equ	0xFF4
 23487                           prodl	equ	0xFF3
 23488                           intcon	equ	0xFF2
 23489                           intcon2	equ	0xFF1
 23490                           intcon3	equ	0xFF0
 23491                           indf0	equ	0xFEF
 23492                           postinc0	equ	0xFEE
 23493                           fsr0h	equ	0xFEA
 23494                           fsr0l	equ	0xFE9
 23495                           wreg	equ	0xFE8
 23496                           indf1	equ	0xFE7
 23497                           postinc1	equ	0xFE6
 23498                           postdec1	equ	0xFE5
 23499                           plusw1	equ	0xFE3
 23500                           fsr1h	equ	0xFE2
 23501                           fsr1l	equ	0xFE1
 23502                           indf2	equ	0xFDF
 23503                           postinc2	equ	0xFDE
 23504                           postdec2	equ	0xFDD
 23505                           plusw2	equ	0xFDB
 23506                           fsr2h	equ	0xFDA
 23507                           fsr2l	equ	0xFD9
 23508                           status	equ	0xFD8
 23509                           
 23510 ;; *************** function _Lcd_Clear *****************
 23511 ;; Defined at:
 23512 ;;		line 82 in file "src/lcd.h"
 23513 ;; Parameters:    Size  Location     Type
 23514 ;;		None
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;		None
 23517 ;; Return value:  Size  Location     Type
 23518 ;;                  1    wreg      void 
 23519 ;; Registers used:
 23520 ;;		wreg, status,2, cstack
 23521 ;; Tracked objects:
 23522 ;;		On entry : 0/0
 23523 ;;		On exit  : 0/0
 23524 ;;		Unchanged: 0/0
 23525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23526 ;;      Params:         0       0       0       0       0       0       0       0       0
 23527 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23528 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23529 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23530 ;;Total ram usage:        0 bytes
 23531 ;; Hardware stack levels used:    1
 23532 ;; Hardware stack levels required when called:    8
 23533 ;; This function calls:
 23534 ;;		_Lcd_Cmd
 23535 ;; This function is called by:
 23536 ;;		_main
 23537 ;; This function uses a non-reentrant model
 23538 ;;
 23539                           
 23540                           	psect	text55
 23541  005C94                     __ptext55:
 23542                           	opt stack 0
 23543  005C94                     _Lcd_Clear:
 23544                           	opt stack 22
 23545                           
 23546                           ;lcd.h: 83: Lcd_Cmd(0);
 23547                           
 23548                           ;incstack = 0
 23549  005C94  0E00               	movlw	0
 23550  005C96  ECCF  F02D         	call	_Lcd_Cmd
 23551                           
 23552                           ;lcd.h: 84: Lcd_Cmd(1);
 23553  005C9A  0E01               	movlw	1
 23554  005C9C  ECCF  F02D         	call	_Lcd_Cmd
 23555  005CA0  0012               	return		;funcret
 23556  005CA2                     __end_of_Lcd_Clear:
 23557                           	opt stack 0
 23558                           tosu	equ	0xFFF
 23559                           tosh	equ	0xFFE
 23560                           tosl	equ	0xFFD
 23561                           pclath	equ	0xFFA
 23562                           tblptru	equ	0xFF8
 23563                           tblptrh	equ	0xFF7
 23564                           tblptrl	equ	0xFF6
 23565                           tablat	equ	0xFF5
 23566                           prodh	equ	0xFF4
 23567                           prodl	equ	0xFF3
 23568                           intcon	equ	0xFF2
 23569                           intcon2	equ	0xFF1
 23570                           intcon3	equ	0xFF0
 23571                           indf0	equ	0xFEF
 23572                           postinc0	equ	0xFEE
 23573                           fsr0h	equ	0xFEA
 23574                           fsr0l	equ	0xFE9
 23575                           wreg	equ	0xFE8
 23576                           indf1	equ	0xFE7
 23577                           postinc1	equ	0xFE6
 23578                           postdec1	equ	0xFE5
 23579                           plusw1	equ	0xFE3
 23580                           fsr1h	equ	0xFE2
 23581                           fsr1l	equ	0xFE1
 23582                           indf2	equ	0xFDF
 23583                           postinc2	equ	0xFDE
 23584                           postdec2	equ	0xFDD
 23585                           plusw2	equ	0xFDB
 23586                           fsr2h	equ	0xFDA
 23587                           fsr2l	equ	0xFD9
 23588                           status	equ	0xFD8
 23589                           
 23590 ;; *************** function _Lcd_Cmd *****************
 23591 ;; Defined at:
 23592 ;;		line 74 in file "src/lcd.h"
 23593 ;; Parameters:    Size  Location     Type
 23594 ;;  a               1    wreg     unsigned char 
 23595 ;; Auto vars:     Size  Location     Type
 23596 ;;  a               1    2[BANK0 ] unsigned char 
 23597 ;; Return value:  Size  Location     Type
 23598 ;;                  1    wreg      void 
 23599 ;; Registers used:
 23600 ;;		wreg, status,2, cstack
 23601 ;; Tracked objects:
 23602 ;;		On entry : 0/0
 23603 ;;		On exit  : 0/0
 23604 ;;		Unchanged: 0/0
 23605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23606 ;;      Params:         0       0       0       0       0       0       0       0       0
 23607 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23608 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23609 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23610 ;;Total ram usage:        2 bytes
 23611 ;; Hardware stack levels used:    1
 23612 ;; Hardware stack levels required when called:    7
 23613 ;; This function calls:
 23614 ;;		_Lcd_Port
 23615 ;; This function is called by:
 23616 ;;		_Lcd_Init
 23617 ;;		_Lcd_Clear
 23618 ;;		_Lcd_Set_Cursor
 23619 ;;		_criaCaracteresCGRAM
 23620 ;; This function uses a non-reentrant model
 23621 ;;
 23622                           
 23623                           	psect	text56
 23624  005B9E                     __ptext56:
 23625                           	opt stack 0
 23626  005B9E                     _Lcd_Cmd:
 23627                           	opt stack 22
 23628                           
 23629                           ;incstack = 0
 23630                           ;Lcd_Cmd@a stored from wreg
 23631  005B9E  0100               	movlb	0	; () banked
 23632  005BA0  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 23633                           
 23634                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 23635  005BA2  9483               	bcf	3971,2,c	;volatile
 23636                           
 23637                           ;lcd.h: 76: Lcd_Port(a);
 23638  005BA4  0100               	movlb	0	; () banked
 23639  005BA6  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 23640  005BA8  EC25  F02D         	call	_Lcd_Port
 23641                           
 23642                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 23643  005BAC  8683               	bsf	3971,3,c	;volatile
 23644                           
 23645                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 23646  005BAE  0E0B               	movlw	11
 23647  005BB0  0100               	movlb	0	; () banked
 23648  005BB2  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 23649  005BB4  0E62               	movlw	98
 23650  005BB6                     u15617:
 23651  005BB6  2EE8               	decfsz	wreg,f,c
 23652  005BB8  D7FE               	bra	u15617
 23653  005BBA  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 23654  005BBC  D7FC               	bra	u15617
 23655  005BBE  F000               	nop	
 23656                           
 23657                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 23658  005BC0  9683               	bcf	3971,3,c	;volatile
 23659  005BC2  0012               	return		;funcret
 23660  005BC4                     __end_of_Lcd_Cmd:
 23661                           	opt stack 0
 23662                           tosu	equ	0xFFF
 23663                           tosh	equ	0xFFE
 23664                           tosl	equ	0xFFD
 23665                           pclath	equ	0xFFA
 23666                           tblptru	equ	0xFF8
 23667                           tblptrh	equ	0xFF7
 23668                           tblptrl	equ	0xFF6
 23669                           tablat	equ	0xFF5
 23670                           prodh	equ	0xFF4
 23671                           prodl	equ	0xFF3
 23672                           intcon	equ	0xFF2
 23673                           intcon2	equ	0xFF1
 23674                           intcon3	equ	0xFF0
 23675                           indf0	equ	0xFEF
 23676                           postinc0	equ	0xFEE
 23677                           fsr0h	equ	0xFEA
 23678                           fsr0l	equ	0xFE9
 23679                           wreg	equ	0xFE8
 23680                           indf1	equ	0xFE7
 23681                           postinc1	equ	0xFE6
 23682                           postdec1	equ	0xFE5
 23683                           plusw1	equ	0xFE3
 23684                           fsr1h	equ	0xFE2
 23685                           fsr1l	equ	0xFE1
 23686                           indf2	equ	0xFDF
 23687                           postinc2	equ	0xFDE
 23688                           postdec2	equ	0xFDD
 23689                           plusw2	equ	0xFDB
 23690                           fsr2h	equ	0xFDA
 23691                           fsr2l	equ	0xFD9
 23692                           status	equ	0xFD8
 23693                           
 23694 ;; *************** function _Lcd_Port *****************
 23695 ;; Defined at:
 23696 ;;		line 52 in file "src/lcd.h"
 23697 ;; Parameters:    Size  Location     Type
 23698 ;;  a               1    wreg     unsigned char 
 23699 ;; Auto vars:     Size  Location     Type
 23700 ;;  a               1    0[BANK0 ] unsigned char 
 23701 ;; Return value:  Size  Location     Type
 23702 ;;                  1    wreg      void 
 23703 ;; Registers used:
 23704 ;;		wreg
 23705 ;; Tracked objects:
 23706 ;;		On entry : 0/0
 23707 ;;		On exit  : 0/0
 23708 ;;		Unchanged: 0/0
 23709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23710 ;;      Params:         0       0       0       0       0       0       0       0       0
 23711 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23713 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23714 ;;Total ram usage:        1 bytes
 23715 ;; Hardware stack levels used:    1
 23716 ;; Hardware stack levels required when called:    6
 23717 ;; This function calls:
 23718 ;;		Nothing
 23719 ;; This function is called by:
 23720 ;;		_Lcd_Init
 23721 ;;		_Lcd_Cmd
 23722 ;;		_Lcd_Write_Char
 23723 ;; This function uses a non-reentrant model
 23724 ;;
 23725                           
 23726                           	psect	text57
 23727  005A4A                     __ptext57:
 23728                           	opt stack 0
 23729  005A4A                     _Lcd_Port:
 23730                           	opt stack 22
 23731                           
 23732                           ;incstack = 0
 23733                           ;Lcd_Port@a stored from wreg
 23734  005A4A  0100               	movlb	0	; () banked
 23735  005A4C  6F60               	movwf	Lcd_Port@a& (0+255),b
 23736                           
 23737                           ;lcd.h: 53: if (a & 1)
 23738  005A4E  0100               	movlb	0	; () banked
 23739  005A50  A160               	btfss	Lcd_Port@a& (0+255),0,b
 23740  005A52  D002               	goto	l233
 23741                           
 23742                           ; BSR set to: 0
 23743                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 23744  005A54  8883               	bsf	3971,4,c	;volatile
 23745  005A56  D001               	goto	l234
 23746  005A58                     l233:
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;lcd.h: 55: else
 23750                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 23751  005A58  9883               	bcf	3971,4,c	;volatile
 23752  005A5A                     l234:
 23753                           
 23754                           ; BSR set to: 0
 23755                           ;lcd.h: 58: if (a & 2)
 23756                           
 23757                           ; BSR set to: 0
 23758  005A5A  A360               	btfss	Lcd_Port@a& (0+255),1,b
 23759  005A5C  D002               	goto	l235
 23760                           
 23761                           ; BSR set to: 0
 23762                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 23763  005A5E  8A83               	bsf	3971,5,c	;volatile
 23764  005A60  D001               	goto	l236
 23765  005A62                     l235:
 23766                           
 23767                           ; BSR set to: 0
 23768                           ;lcd.h: 60: else
 23769                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 23770  005A62  9A83               	bcf	3971,5,c	;volatile
 23771  005A64                     l236:
 23772                           
 23773                           ; BSR set to: 0
 23774                           ;lcd.h: 63: if (a & 4)
 23775                           
 23776                           ; BSR set to: 0
 23777  005A64  A560               	btfss	Lcd_Port@a& (0+255),2,b
 23778  005A66  D002               	goto	l237
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 23782  005A68  8C83               	bsf	3971,6,c	;volatile
 23783  005A6A  D001               	goto	l238
 23784  005A6C                     l237:
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;lcd.h: 65: else
 23788                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 23789  005A6C  9C83               	bcf	3971,6,c	;volatile
 23790  005A6E                     l238:
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;lcd.h: 68: if (a & 8)
 23794                           
 23795                           ; BSR set to: 0
 23796  005A6E  A760               	btfss	Lcd_Port@a& (0+255),3,b
 23797  005A70  D002               	goto	l239
 23798                           
 23799                           ; BSR set to: 0
 23800                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 23801  005A72  8E83               	bsf	3971,7,c	;volatile
 23802  005A74  0012               	return	
 23803  005A76                     l239:
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;lcd.h: 70: else
 23807                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 23808  005A76  9E83               	bcf	3971,7,c	;volatile
 23809  005A78  0012               	return	
 23810  005A7A                     __end_of_Lcd_Port:
 23811                           	opt stack 0
 23812                           tosu	equ	0xFFF
 23813                           tosh	equ	0xFFE
 23814                           tosl	equ	0xFFD
 23815                           pclath	equ	0xFFA
 23816                           tblptru	equ	0xFF8
 23817                           tblptrh	equ	0xFF7
 23818                           tblptrl	equ	0xFF6
 23819                           tablat	equ	0xFF5
 23820                           prodh	equ	0xFF4
 23821                           prodl	equ	0xFF3
 23822                           intcon	equ	0xFF2
 23823                           intcon2	equ	0xFF1
 23824                           intcon3	equ	0xFF0
 23825                           indf0	equ	0xFEF
 23826                           postinc0	equ	0xFEE
 23827                           fsr0h	equ	0xFEA
 23828                           fsr0l	equ	0xFE9
 23829                           wreg	equ	0xFE8
 23830                           indf1	equ	0xFE7
 23831                           postinc1	equ	0xFE6
 23832                           postdec1	equ	0xFE5
 23833                           plusw1	equ	0xFE3
 23834                           fsr1h	equ	0xFE2
 23835                           fsr1l	equ	0xFE1
 23836                           indf2	equ	0xFDF
 23837                           postinc2	equ	0xFDE
 23838                           postdec2	equ	0xFDD
 23839                           plusw2	equ	0xFDB
 23840                           fsr2h	equ	0xFDA
 23841                           fsr2l	equ	0xFD9
 23842                           status	equ	0xFD8
 23843                           
 23844 ;; *************** function _I2C_Master_Init *****************
 23845 ;; Defined at:
 23846 ;;		line 11 in file "src/I2C.c"
 23847 ;; Parameters:    Size  Location     Type
 23848 ;;  c               4   13[BANK0 ] const unsigned long 
 23849 ;; Auto vars:     Size  Location     Type
 23850 ;;		None
 23851 ;; Return value:  Size  Location     Type
 23852 ;;                  1    wreg      void 
 23853 ;; Registers used:
 23854 ;;		wreg, status,2, status,0, cstack
 23855 ;; Tracked objects:
 23856 ;;		On entry : 0/0
 23857 ;;		On exit  : 0/0
 23858 ;;		Unchanged: 0/0
 23859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23860 ;;      Params:         0       4       0       0       0       0       0       0       0
 23861 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23862 ;;      Temps:          0       4       0       0       0       0       0       0       0
 23863 ;;      Totals:         0       8       0       0       0       0       0       0       0
 23864 ;;Total ram usage:        8 bytes
 23865 ;; Hardware stack levels used:    1
 23866 ;; Hardware stack levels required when called:    7
 23867 ;; This function calls:
 23868 ;;		___lldiv
 23869 ;; This function is called by:
 23870 ;;		_main
 23871 ;; This function uses a non-reentrant model
 23872 ;;
 23873                           
 23874                           	psect	text58
 23875  00552C                     __ptext58:
 23876                           	opt stack 0
 23877  00552C                     _I2C_Master_Init:
 23878                           	opt stack 23
 23879                           
 23880                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 23881                           
 23882                           ; BSR set to: 0
 23883                           ;incstack = 0
 23884  00552C  8093               	bsf	3987,0,c	;volatile
 23885                           
 23886                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 23887  00552E  8293               	bsf	3987,1,c	;volatile
 23888                           
 23889                           ;I2C.c: 14: SSPCON1 = 0x28;
 23890  005530  0E28               	movlw	40
 23891  005532  6EC6               	movwf	4038,c	;volatile
 23892                           
 23893                           ;I2C.c: 15: SSPCON2 = 0x0;
 23894  005534  0E00               	movlw	0
 23895  005536  6EC5               	movwf	4037,c	;volatile
 23896                           
 23897                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 23898  005538  0E00               	movlw	0
 23899  00553A  0100               	movlb	0	; () banked
 23900  00553C  6F60               	movwf	___lldiv@dividend& (0+255),b
 23901  00553E  0E12               	movlw	18
 23902  005540  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 23903  005542  0E7A               	movlw	122
 23904  005544  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 23905  005546  0E00               	movlw	0
 23906  005548  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 23907  00554A  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 23908  00554E  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 23909  005552  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 23910  005556  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 23911  00555A  0E02               	movlw	2
 23912  00555C                     u14235:
 23913  00555C  90D8               	bcf	status,0,c
 23914  00555E  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 23915  005560  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 23916  005562  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 23917  005564  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 23918  005566  2EE8               	decfsz	wreg,f,c
 23919  005568  D7F9               	goto	u14235
 23920  00556A  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 23921  00556E  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 23922  005572  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 23923  005576  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 23924  00557A  EC1C  F02A         	call	___lldiv	;wreg free
 23925  00557E  0100               	movlb	0	; () banked
 23926  005580  0560               	decf	?___lldiv& (0+255),w,b
 23927  005582  6EC8               	movwf	4040,c	;volatile
 23928                           
 23929                           ; BSR set to: 0
 23930                           ;I2C.c: 17: SSPSTAT = 0;
 23931  005584  0E00               	movlw	0
 23932  005586  6EC7               	movwf	4039,c	;volatile
 23933                           
 23934                           ; BSR set to: 0
 23935                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 23936  005588  0E82               	movlw	130
 23937  00558A  0100               	movlb	0	; () banked
 23938  00558C  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 23939  00558E  0EDD               	movlw	221
 23940  005590                     u15627:
 23941  005590  2EE8               	decfsz	wreg,f,c
 23942  005592  D7FE               	bra	u15627
 23943  005594  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 23944  005596  D7FC               	bra	u15627
 23945  005598  D000               	nop2	
 23946  00559A  0012               	return		;funcret
 23947  00559C                     __end_of_I2C_Master_Init:
 23948                           	opt stack 0
 23949                           tosu	equ	0xFFF
 23950                           tosh	equ	0xFFE
 23951                           tosl	equ	0xFFD
 23952                           pclath	equ	0xFFA
 23953                           tblptru	equ	0xFF8
 23954                           tblptrh	equ	0xFF7
 23955                           tblptrl	equ	0xFF6
 23956                           tablat	equ	0xFF5
 23957                           prodh	equ	0xFF4
 23958                           prodl	equ	0xFF3
 23959                           intcon	equ	0xFF2
 23960                           intcon2	equ	0xFF1
 23961                           intcon3	equ	0xFF0
 23962                           indf0	equ	0xFEF
 23963                           postinc0	equ	0xFEE
 23964                           fsr0h	equ	0xFEA
 23965                           fsr0l	equ	0xFE9
 23966                           wreg	equ	0xFE8
 23967                           indf1	equ	0xFE7
 23968                           postinc1	equ	0xFE6
 23969                           postdec1	equ	0xFE5
 23970                           plusw1	equ	0xFE3
 23971                           fsr1h	equ	0xFE2
 23972                           fsr1l	equ	0xFE1
 23973                           indf2	equ	0xFDF
 23974                           postinc2	equ	0xFDE
 23975                           postdec2	equ	0xFDD
 23976                           plusw2	equ	0xFDB
 23977                           fsr2h	equ	0xFDA
 23978                           fsr2l	equ	0xFD9
 23979                           status	equ	0xFD8
 23980                           
 23981 ;; *************** function ___lldiv *****************
 23982 ;; Defined at:
 23983 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 23984 ;; Parameters:    Size  Location     Type
 23985 ;;  dividend        4    0[BANK0 ] unsigned long 
 23986 ;;  divisor         4    4[BANK0 ] unsigned long 
 23987 ;; Auto vars:     Size  Location     Type
 23988 ;;  quotient        4    8[BANK0 ] unsigned long 
 23989 ;;  counter         1   12[BANK0 ] unsigned char 
 23990 ;; Return value:  Size  Location     Type
 23991 ;;                  4    0[BANK0 ] unsigned long 
 23992 ;; Registers used:
 23993 ;;		wreg, status,2, status,0
 23994 ;; Tracked objects:
 23995 ;;		On entry : 0/0
 23996 ;;		On exit  : 0/0
 23997 ;;		Unchanged: 0/0
 23998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23999 ;;      Params:         0       8       0       0       0       0       0       0       0
 24000 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24002 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24003 ;;Total ram usage:       13 bytes
 24004 ;; Hardware stack levels used:    1
 24005 ;; Hardware stack levels required when called:    6
 24006 ;; This function calls:
 24007 ;;		Nothing
 24008 ;; This function is called by:
 24009 ;;		_I2C_Master_Init
 24010 ;; This function uses a non-reentrant model
 24011 ;;
 24012                           
 24013                           	psect	text59
 24014  005438                     __ptext59:
 24015                           	opt stack 0
 24016  005438                     ___lldiv:
 24017                           	opt stack 23
 24018                           
 24019                           ;incstack = 0
 24020  005438  0E00               	movlw	0
 24021  00543A  0100               	movlb	0	; () banked
 24022  00543C  6F68               	movwf	___lldiv@quotient& (0+255),b
 24023  00543E  0E00               	movlw	0
 24024  005440  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24025  005442  0E00               	movlw	0
 24026  005444  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24027  005446  0E00               	movlw	0
 24028  005448  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24029                           
 24030                           ; BSR set to: 0
 24031  00544A  5164               	movf	___lldiv@divisor& (0+255),w,b
 24032  00544C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24033  00544E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24034  005450  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24035  005452  B4D8               	btfsc	status,2,c
 24036  005454  D02A               	goto	l2063
 24037                           
 24038                           ; BSR set to: 0
 24039  005456  0E01               	movlw	1
 24040  005458  6F6C               	movwf	___lldiv@counter& (0+255),b
 24041  00545A  D006               	goto	l2058
 24042  00545C                     
 24043                           ; BSR set to: 0
 24044                           
 24045                           ; BSR set to: 0
 24046  00545C  90D8               	bcf	status,0,c
 24047  00545E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24048  005460  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24049  005462  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24050  005464  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24051  005466  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24052  005468                     l2058:
 24053                           
 24054                           ; BSR set to: 0
 24055                           
 24056                           ; BSR set to: 0
 24057  005468  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24058  00546A  D7F8               	goto	l2059
 24059  00546C                     u12350:
 24060                           
 24061                           ; BSR set to: 0
 24062                           
 24063                           ; BSR set to: 0
 24064                           
 24065                           ; BSR set to: 0
 24066  00546C  90D8               	bcf	status,0,c
 24067  00546E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24068  005470  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24069  005472  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24070  005474  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24071                           
 24072                           ; BSR set to: 0
 24073  005476  5164               	movf	___lldiv@divisor& (0+255),w,b
 24074  005478  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24075  00547A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24076  00547C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24077  00547E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24078  005480  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24079  005482  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24080  005484  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24081  005486  A0D8               	btfss	status,0,c
 24082  005488  D009               	goto	l2062
 24083                           
 24084                           ; BSR set to: 0
 24085  00548A  5164               	movf	___lldiv@divisor& (0+255),w,b
 24086  00548C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24087  00548E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24088  005490  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24089  005492  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24090  005494  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24091  005496  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24092  005498  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24093                           
 24094                           ; BSR set to: 0
 24095  00549A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24096  00549C                     l2062:
 24097                           
 24098                           ; BSR set to: 0
 24099                           
 24100                           ; BSR set to: 0
 24101  00549C  90D8               	bcf	status,0,c
 24102  00549E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24103  0054A0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24104  0054A2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24105  0054A4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24106                           
 24107                           ; BSR set to: 0
 24108  0054A6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24109  0054A8  D7E1               	goto	u12350
 24110  0054AA                     l2063:
 24111                           
 24112                           ; BSR set to: 0
 24113                           
 24114                           ; BSR set to: 0
 24115  0054AA  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24116  0054AE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24117  0054B2  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24118  0054B6  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24119                           
 24120                           ; BSR set to: 0
 24121  0054BA  0012               	return		;funcret
 24122  0054BC                     __end_of___lldiv:
 24123                           	opt stack 0
 24124                           tosu	equ	0xFFF
 24125                           tosh	equ	0xFFE
 24126                           tosl	equ	0xFFD
 24127                           pclath	equ	0xFFA
 24128                           tblptru	equ	0xFF8
 24129                           tblptrh	equ	0xFF7
 24130                           tblptrl	equ	0xFF6
 24131                           tablat	equ	0xFF5
 24132                           prodh	equ	0xFF4
 24133                           prodl	equ	0xFF3
 24134                           intcon	equ	0xFF2
 24135                           intcon2	equ	0xFF1
 24136                           intcon3	equ	0xFF0
 24137                           indf0	equ	0xFEF
 24138                           postinc0	equ	0xFEE
 24139                           fsr0h	equ	0xFEA
 24140                           fsr0l	equ	0xFE9
 24141                           wreg	equ	0xFE8
 24142                           indf1	equ	0xFE7
 24143                           postinc1	equ	0xFE6
 24144                           postdec1	equ	0xFE5
 24145                           plusw1	equ	0xFE3
 24146                           fsr1h	equ	0xFE2
 24147                           fsr1l	equ	0xFE1
 24148                           indf2	equ	0xFDF
 24149                           postinc2	equ	0xFDE
 24150                           postdec2	equ	0xFDD
 24151                           plusw2	equ	0xFDB
 24152                           fsr2h	equ	0xFDA
 24153                           fsr2l	equ	0xFD9
 24154                           status	equ	0xFD8
 24155                           
 24156 ;; *************** function _TIMER0 *****************
 24157 ;; Defined at:
 24158 ;;		line 16 in file "src/main.c"
 24159 ;; Parameters:    Size  Location     Type
 24160 ;;		None
 24161 ;; Auto vars:     Size  Location     Type
 24162 ;;  c               1   47[COMRAM] unsigned char 
 24163 ;; Return value:  Size  Location     Type
 24164 ;;                  1    wreg      void 
 24165 ;; Registers used:
 24166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24167 ;; Tracked objects:
 24168 ;;		On entry : 0/0
 24169 ;;		On exit  : 0/0
 24170 ;;		Unchanged: 0/0
 24171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24172 ;;      Params:         0       0       0       0       0       0       0       0       0
 24173 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24174 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24175 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24176 ;;Total ram usage:       19 bytes
 24177 ;; Hardware stack levels used:    1
 24178 ;; Hardware stack levels required when called:    5
 24179 ;; This function calls:
 24180 ;;		_readButtons
 24181 ;;		_receiveByteSerial
 24182 ;;		_timer
 24183 ;; This function is called by:
 24184 ;;		Interrupt level 2
 24185 ;; This function uses a non-reentrant model
 24186 ;;
 24187                           
 24188                           	psect	intcode
 24189  000008                     __pintcode:
 24190                           	opt stack 0
 24191  000008                     _TIMER0:
 24192                           	opt stack 20
 24193                           
 24194                           ; BSR set to: 0
 24195                           ;incstack = 0
 24196  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24197  00000A  ED4D  F026         	call	int_func,f	;refresh shadow registers
 24198                           tosu	equ	0xFFF
 24199                           tosh	equ	0xFFE
 24200                           tosl	equ	0xFFD
 24201                           pclath	equ	0xFFA
 24202                           tblptru	equ	0xFF8
 24203                           tblptrh	equ	0xFF7
 24204                           tblptrl	equ	0xFF6
 24205                           tablat	equ	0xFF5
 24206                           prodh	equ	0xFF4
 24207                           prodl	equ	0xFF3
 24208                           intcon	equ	0xFF2
 24209                           intcon2	equ	0xFF1
 24210                           intcon3	equ	0xFF0
 24211                           indf0	equ	0xFEF
 24212                           postinc0	equ	0xFEE
 24213                           fsr0h	equ	0xFEA
 24214                           fsr0l	equ	0xFE9
 24215                           wreg	equ	0xFE8
 24216                           indf1	equ	0xFE7
 24217                           postinc1	equ	0xFE6
 24218                           postdec1	equ	0xFE5
 24219                           plusw1	equ	0xFE3
 24220                           fsr1h	equ	0xFE2
 24221                           fsr1l	equ	0xFE1
 24222                           indf2	equ	0xFDF
 24223                           postinc2	equ	0xFDE
 24224                           postdec2	equ	0xFDD
 24225                           plusw2	equ	0xFDB
 24226                           fsr2h	equ	0xFDA
 24227                           fsr2l	equ	0xFD9
 24228                           status	equ	0xFD8
 24229                           
 24230                           	psect	intcode_body
 24231  004C9A                     __pintcode_body:
 24232                           	opt stack 20
 24233  004C9A                     int_func:
 24234                           	opt stack 20
 24235  004C9A  0006               	pop		; remove dummy address from shadow register refresh
 24236  004C9C  CFFA F01E          	movff	pclath,??_TIMER0
 24237  004CA0  CFFB F01F          	movff	pclatu,??_TIMER0+1
 24238  004CA4  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 24239  004CA8  CFEA F021          	movff	fsr0h,??_TIMER0+3
 24240  004CAC  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 24241  004CB0  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 24242  004CB4  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 24243  004CB8  CFDA F025          	movff	fsr2h,??_TIMER0+7
 24244  004CBC  CFF3 F026          	movff	prodl,??_TIMER0+8
 24245  004CC0  CFF4 F027          	movff	prodh,??_TIMER0+9
 24246  004CC4  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 24247  004CC8  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 24248  004CCC  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 24249  004CD0  CFF5 F02B          	movff	tablat,??_TIMER0+13
 24250  004CD4  C05F  F02C         	movff	btemp,??_TIMER0+14
 24251  004CD8  C060  F02D         	movff	btemp+1,??_TIMER0+15
 24252  004CDC  C061  F02E         	movff	btemp+2,??_TIMER0+16
 24253  004CE0  C062  F02F         	movff	btemp+3,??_TIMER0+17
 24254                           
 24255                           ;main.c: 17: if (TMR0IF) {
 24256  004CE4  A4F2               	btfss	intcon,2,c	;volatile
 24257  004CE6  D007               	goto	i2l1266
 24258                           
 24259                           ;main.c: 18: TMR0IF = 0x00;
 24260  004CE8  94F2               	bcf	intcon,2,c	;volatile
 24261                           
 24262                           ;main.c: 19: TMR0H = 0x3C;
 24263  004CEA  0E3C               	movlw	60
 24264  004CEC  6ED7               	movwf	4055,c	;volatile
 24265                           
 24266                           ;main.c: 20: TMR0L = 0xB0;
 24267  004CEE  0EB0               	movlw	176
 24268  004CF0  6ED6               	movwf	4054,c	;volatile
 24269                           
 24270                           ;main.c: 21: timer();
 24271  004CF2  ECD6  F01F         	call	_timer	;wreg free
 24272  004CF6                     i2l1266:
 24273                           
 24274                           ;main.c: 22: }
 24275                           ;main.c: 23: if (RCIF) {
 24276  004CF6  AA9E               	btfss	3998,5,c	;volatile
 24277  004CF8  D005               	goto	i2l1267
 24278                           
 24279                           ;main.c: 24: char c = RCREG;
 24280  004CFA  CFAE F030          	movff	4014,TIMER0@c	;volatile
 24281                           
 24282                           ;main.c: 25: receiveByteSerial(c);
 24283  004CFE  5030               	movf	TIMER0@c,w,c
 24284  004D00  EC05  F02B         	call	_receiveByteSerial
 24285  004D04                     i2l1267:
 24286                           
 24287                           ;main.c: 26: }
 24288                           ;main.c: 27: if (INT2IF) {
 24289  004D04  A2F0               	btfss	intcon3,1,c	;volatile
 24290  004D06  D003               	goto	i2l1268
 24291                           
 24292                           ;main.c: 28: INT2IF = 0;
 24293  004D08  92F0               	bcf	intcon3,1,c	;volatile
 24294                           
 24295                           ;main.c: 29: readButtons();
 24296  004D0A  ECA8  F02D         	call	_readButtons	;wreg free
 24297  004D0E                     i2l1268:
 24298  004D0E  C02F  F062         	movff	??_TIMER0+17,btemp+3
 24299  004D12  C02E  F061         	movff	??_TIMER0+16,btemp+2
 24300  004D16  C02D  F060         	movff	??_TIMER0+15,btemp+1
 24301  004D1A  C02C  F05F         	movff	??_TIMER0+14,btemp
 24302  004D1E  C02B  FFF5         	movff	??_TIMER0+13,tablat
 24303  004D22  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 24304  004D26  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 24305  004D2A  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 24306  004D2E  C027  FFF4         	movff	??_TIMER0+9,prodh
 24307  004D32  C026  FFF3         	movff	??_TIMER0+8,prodl
 24308  004D36  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 24309  004D3A  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 24310  004D3E  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 24311  004D42  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 24312  004D46  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 24313  004D4A  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 24314  004D4E  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 24315  004D52  C01E  FFFA         	movff	??_TIMER0,pclath
 24316  004D56  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24317  004D58  0011               	retfie		f
 24318  004D5A                     __end_of_TIMER0:
 24319                           	opt stack 0
 24320                           tosu	equ	0xFFF
 24321                           tosh	equ	0xFFE
 24322                           tosl	equ	0xFFD
 24323                           pclatu	equ	0xFFB
 24324                           pclath	equ	0xFFA
 24325                           tblptru	equ	0xFF8
 24326                           tblptrh	equ	0xFF7
 24327                           tblptrl	equ	0xFF6
 24328                           tablat	equ	0xFF5
 24329                           prodh	equ	0xFF4
 24330                           prodl	equ	0xFF3
 24331                           intcon	equ	0xFF2
 24332                           intcon2	equ	0xFF1
 24333                           intcon3	equ	0xFF0
 24334                           indf0	equ	0xFEF
 24335                           postinc0	equ	0xFEE
 24336                           fsr0h	equ	0xFEA
 24337                           fsr0l	equ	0xFE9
 24338                           wreg	equ	0xFE8
 24339                           indf1	equ	0xFE7
 24340                           postinc1	equ	0xFE6
 24341                           postdec1	equ	0xFE5
 24342                           plusw1	equ	0xFE3
 24343                           fsr1h	equ	0xFE2
 24344                           fsr1l	equ	0xFE1
 24345                           indf2	equ	0xFDF
 24346                           postinc2	equ	0xFDE
 24347                           postdec2	equ	0xFDD
 24348                           plusw2	equ	0xFDB
 24349                           fsr2h	equ	0xFDA
 24350                           fsr2l	equ	0xFD9
 24351                           status	equ	0xFD8
 24352                           
 24353 ;; *************** function _timer *****************
 24354 ;; Defined at:
 24355 ;;		line 39 in file "src/controle.h"
 24356 ;; Parameters:    Size  Location     Type
 24357 ;;		None
 24358 ;; Auto vars:     Size  Location     Type
 24359 ;;		None
 24360 ;; Return value:  Size  Location     Type
 24361 ;;                  1    wreg      void 
 24362 ;; Registers used:
 24363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24364 ;; Tracked objects:
 24365 ;;		On entry : 0/0
 24366 ;;		On exit  : 0/0
 24367 ;;		Unchanged: 0/0
 24368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24369 ;;      Params:         0       0       0       0       0       0       0       0       0
 24370 ;;      Locals:         6       0       0       0       0       0       0       0       0
 24371 ;;      Temps:          7       0       0       0       0       0       0       0       0
 24372 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24373 ;;Total ram usage:       13 bytes
 24374 ;; Hardware stack levels used:    1
 24375 ;; Hardware stack levels required when called:    4
 24376 ;; This function calls:
 24377 ;;		i2_setRangeValor
 24378 ;; This function is called by:
 24379 ;;		_TIMER0
 24380 ;; This function uses a non-reentrant model
 24381 ;;
 24382                           
 24383                           	psect	text61
 24384  003FAC                     __ptext61:
 24385                           	opt stack 0
 24386  003FAC                     _timer:
 24387                           	opt stack 20
 24388                           
 24389                           ;controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 24390                           
 24391                           ;incstack = 0
 24392  003FAC  5034               	movf	_t_controle_flap+1,w,c
 24393  003FAE  E109               	bnz	i2l8889
 24394  003FB0  0E02               	movlw	2
 24395  003FB2  5C33               	subwf	_t_controle_flap,w,c
 24396  003FB4  B0D8               	btfsc	status,0,c
 24397  003FB6  D005               	goto	i2l1103
 24398  003FB8  0E00               	movlw	0
 24399  003FBA  6E34               	movwf	_t_controle_flap+1,c
 24400  003FBC  0E00               	movlw	0
 24401  003FBE  6E33               	movwf	_t_controle_flap,c
 24402  003FC0  D007               	goto	i2l1105
 24403  003FC2                     i2l1103:
 24404  003FC2                     i2l8889:
 24405  003FC2  0633               	decf	_t_controle_flap,f,c
 24406  003FC4  A0D8               	btfss	status,0,c
 24407  003FC6  0634               	decf	_t_controle_flap+1,f,c
 24408  003FC8  C033  F033         	movff	_t_controle_flap,_t_controle_flap
 24409  003FCC  C034  F034         	movff	_t_controle_flap+1,_t_controle_flap+1
 24410  003FD0                     i2l1105:
 24411                           
 24412                           ;controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 24413  003FD0  0E02               	movlw	2
 24414  003FD2  6039               	cpfslt	_t_controle_buzzer,c
 24415  003FD4  D005               	goto	i2l1107
 24416  003FD6  0E00               	movlw	0
 24417  003FD8  6E19               	movwf	_timer$1413+1,c
 24418  003FDA  0E00               	movlw	0
 24419  003FDC  6E18               	movwf	_timer$1413,c
 24420  003FDE  D004               	goto	i2l1109
 24421  003FE0                     i2l1107:
 24422  003FE0  0639               	decf	_t_controle_buzzer,f,c
 24423  003FE2  C039  F018         	movff	_t_controle_buzzer,_timer$1413
 24424  003FE6  6A19               	clrf	_timer$1413+1,c
 24425  003FE8                     i2l1109:
 24426  003FE8  C018  F039         	movff	_timer$1413,_t_controle_buzzer
 24427                           
 24428                           ;controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 24429  003FEC  0101               	movlb	1	; () banked
 24430  003FEE  514D               	movf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 24431  003FF0  E109               	bnz	i2l8903
 24432  003FF2  0E02               	movlw	2
 24433  003FF4  5D4C               	subwf	_t_controle_modo_seguranca& (0+255),w,b
 24434  003FF6  B0D8               	btfsc	status,0,c
 24435  003FF8  D005               	goto	i2l1111
 24436                           
 24437                           ; BSR set to: 1
 24438  003FFA  0E00               	movlw	0
 24439  003FFC  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 24440  003FFE  0E00               	movlw	0
 24441  004000  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 24442  004002  D007               	goto	i2l1113
 24443  004004                     i2l1111:
 24444  004004                     i2l8903:
 24445                           
 24446                           ; BSR set to: 1
 24447  004004  074C               	decf	_t_controle_modo_seguranca& (0+255),f,b
 24448  004006  A0D8               	btfss	status,0,c
 24449  004008  074D               	decf	(_t_controle_modo_seguranca+1)& (0+255),f,b
 24450  00400A  C14C  F14C         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 24451  00400E  C14D  F14D         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 24452  004012                     i2l1113:
 24453                           
 24454                           ; BSR set to: 1
 24455                           ;controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 24456                           
 24457                           ; BSR set to: 1
 24458  004012  0E02               	movlw	2
 24459  004014  6036               	cpfslt	_t_leitura_adc,c
 24460  004016  D005               	goto	i2l1115
 24461                           
 24462                           ; BSR set to: 1
 24463  004018  0E00               	movlw	0
 24464  00401A  6E1B               	movwf	_timer$1414+1,c
 24465  00401C  0E00               	movlw	0
 24466  00401E  6E1A               	movwf	_timer$1414,c
 24467  004020  D004               	goto	i2l1117
 24468  004022                     i2l1115:
 24469                           
 24470                           ; BSR set to: 1
 24471                           
 24472                           ; BSR set to: 1
 24473  004022  0636               	decf	_t_leitura_adc,f,c
 24474  004024  C036  F01A         	movff	_t_leitura_adc,_timer$1414
 24475  004028  6A1B               	clrf	_timer$1414+1,c
 24476  00402A                     i2l1117:
 24477                           
 24478                           ; BSR set to: 1
 24479                           
 24480                           ; BSR set to: 1
 24481  00402A  C01A  F036         	movff	_timer$1414,_t_leitura_adc
 24482                           
 24483                           ; BSR set to: 1
 24484                           ;controle.h: 47: if (t_controle_blink > 1) {
 24485  00402E  0E01               	movlw	1
 24486  004030  6438               	cpfsgt	_t_controle_blink,c
 24487  004032  D002               	goto	i2l1118
 24488                           
 24489                           ; BSR set to: 1
 24490                           ;controle.h: 48: --t_controle_blink;
 24491  004034  0638               	decf	_t_controle_blink,f,c
 24492                           
 24493                           ;controle.h: 49: } else {
 24494  004036  D007               	goto	i2l1119
 24495  004038                     i2l1118:
 24496                           
 24497                           ; BSR set to: 1
 24498                           ;controle.h: 50: blinkk = ~blinkk;
 24499  004038  B45B               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 24500  00403A  D002               	goto	i2u1327_40
 24501  00403C  845B               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 24502  00403E  D001               	goto	i2u1328_45
 24503  004040                     i2u1327_40:
 24504  004040  945B               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 24505  004042                     i2u1328_45:
 24506                           
 24507                           ;controle.h: 51: t_controle_blink = 5;
 24508  004042  0E05               	movlw	5
 24509  004044  6E38               	movwf	_t_controle_blink,c
 24510  004046                     i2l1119:
 24511                           
 24512                           ;controle.h: 52: }
 24513                           ;controle.h: 54: base_sec++;
 24514  004046  2A4A               	incf	_base_sec,f,c
 24515                           
 24516                           ;controle.h: 55: if (base_sec > 9) {
 24517  004048  0E09               	movlw	9
 24518  00404A  644A               	cpfsgt	_base_sec,c
 24519  00404C  0012               	return	
 24520                           
 24521                           ;controle.h: 56: base_sec = 0;
 24522  00404E  0E00               	movlw	0
 24523  004050  6E4A               	movwf	_base_sec,c
 24524                           
 24525                           ;controle.h: 57: sec++;
 24526  004052  2A48               	incf	_sec,f,c
 24527                           
 24528                           ;controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 24529  004054  0E02               	movlw	2
 24530  004056  603E               	cpfslt	_t_wifi_restart,c
 24531  004058  D005               	goto	i2l1122
 24532  00405A  0E00               	movlw	0
 24533  00405C  6E1D               	movwf	_timer$1415+1,c
 24534  00405E  0E00               	movlw	0
 24535  004060  6E1C               	movwf	_timer$1415,c
 24536  004062  D004               	goto	i2l1124
 24537  004064                     i2l1122:
 24538  004064  063E               	decf	_t_wifi_restart,f,c
 24539  004066  C03E  F01C         	movff	_t_wifi_restart,_timer$1415
 24540  00406A  6A1D               	clrf	_timer$1415+1,c
 24541  00406C                     i2l1124:
 24542  00406C  C01C  F03E         	movff	_timer$1415,_t_wifi_restart
 24543                           
 24544                           ;controle.h: 66: if (sec > 59) {
 24545  004070  0E3B               	movlw	59
 24546  004072  6448               	cpfsgt	_sec,c
 24547  004074  0012               	return	
 24548                           
 24549                           ;controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 24550  004076  5032               	movf	_t_controle_religar_buzzer+1,w,c
 24551  004078  E109               	bnz	i2l8941
 24552  00407A  0E02               	movlw	2
 24553  00407C  5C31               	subwf	_t_controle_religar_buzzer,w,c
 24554  00407E  B0D8               	btfsc	status,0,c
 24555  004080  D005               	goto	i2l1127
 24556  004082  0E00               	movlw	0
 24557  004084  6E32               	movwf	_t_controle_religar_buzzer+1,c
 24558  004086  0E00               	movlw	0
 24559  004088  6E31               	movwf	_t_controle_religar_buzzer,c
 24560  00408A  D007               	goto	i2l1129
 24561  00408C                     i2l1127:
 24562  00408C                     i2l8941:
 24563  00408C  0631               	decf	_t_controle_religar_buzzer,f,c
 24564  00408E  A0D8               	btfss	status,0,c
 24565  004090  0632               	decf	_t_controle_religar_buzzer+1,f,c
 24566  004092  C031  F031         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 24567  004096  C032  F032         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 24568  00409A                     i2l1129:
 24569                           
 24570                           ;controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 24571  00409A  0101               	movlb	1	; () banked
 24572  00409C  514F               	movf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 24573  00409E  E109               	bnz	i2l8947
 24574  0040A0  0E02               	movlw	2
 24575  0040A2  5D4E               	subwf	_t_controle_religar_ventoinha& (0+255),w,b
 24576  0040A4  B0D8               	btfsc	status,0,c
 24577  0040A6  D005               	goto	i2l1131
 24578                           
 24579                           ; BSR set to: 1
 24580  0040A8  0E00               	movlw	0
 24581  0040AA  6F4F               	movwf	(_t_controle_religar_ventoinha+1)& (0+255),b
 24582  0040AC  0E00               	movlw	0
 24583  0040AE  6F4E               	movwf	_t_controle_religar_ventoinha& (0+255),b
 24584  0040B0  D007               	goto	i2l1133
 24585  0040B2                     i2l1131:
 24586  0040B2                     i2l8947:
 24587                           
 24588                           ; BSR set to: 1
 24589  0040B2  074E               	decf	_t_controle_religar_ventoinha& (0+255),f,b
 24590  0040B4  A0D8               	btfss	status,0,c
 24591  0040B6  074F               	decf	(_t_controle_religar_ventoinha+1)& (0+255),f,b
 24592  0040B8  C14E  F14E         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 24593  0040BC  C14F  F14F         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 24594  0040C0                     i2l1133:
 24595                           
 24596                           ; BSR set to: 1
 24597                           ;controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 24598                           
 24599                           ; BSR set to: 1
 24600  0040C0  0E64               	movlw	100
 24601  0040C2  0100               	movlb	0	; () banked
 24602  0040C4  19F4               	xorwf	_tempajt& (0+255),w,b
 24603  0040C6  B4D8               	btfsc	status,2,c
 24604  0040C8  D057               	goto	i2l1136
 24605                           
 24606                           ; BSR set to: 0
 24607  0040CA  0E6E               	movlw	110
 24608  0040CC  19F4               	xorwf	_tempajt& (0+255),w,b
 24609  0040CE  B4D8               	btfsc	status,2,c
 24610  0040D0  D053               	goto	i2l1136
 24611                           
 24612                           ; BSR set to: 0
 24613  0040D2  0E85               	movlw	133
 24614  0040D4  19F4               	xorwf	_tempajt& (0+255),w,b
 24615  0040D6  B4D8               	btfsc	status,2,c
 24616  0040D8  D04F               	goto	i2l1136
 24617                           
 24618                           ; BSR set to: 0
 24619  0040DA  045E               	decf	_f_falta_energia,w,c
 24620  0040DC  A4D8               	btfss	status,2,c
 24621  0040DE  D04C               	goto	i2l1136
 24622                           
 24623                           ; BSR set to: 0
 24624                           ;controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 24625  0040E0  51F4               	movf	_tempajt& (0+255),w,b
 24626  0040E2  6E11               	movwf	??_timer& (0+255),c
 24627  0040E4  6A12               	clrf	(??_timer+1)& (0+255),c
 24628  0040E6  504F               	movf	_h_subir_temp_automatica,w,c
 24629  0040E8  C0FE  F013         	movff	_temp,??_timer+2
 24630  0040EC  6A14               	clrf	(??_timer+3)& (0+255),c
 24631  0040EE  2613               	addwf	??_timer+2,f,c
 24632  0040F0  0E00               	movlw	0
 24633  0040F2  2214               	addwfc	??_timer+3,f,c
 24634  0040F4  5011               	movf	??_timer,w,c
 24635  0040F6  5C13               	subwf	??_timer+2,w,c
 24636  0040F8  5014               	movf	??_timer+3,w,c
 24637  0040FA  0A80               	xorlw	128
 24638  0040FC  6E15               	movwf	(??_timer+4)& (0+255),c
 24639  0040FE  5012               	movf	??_timer+1,w,c
 24640  004100  0A80               	xorlw	128
 24641  004102  5815               	subwfb	(??_timer+4)& (0+255),w,c
 24642  004104  A0D8               	btfss	status,0,c
 24643  004106  D038               	goto	i2l1136
 24644                           
 24645                           ; BSR set to: 0
 24646  004108  504F               	movf	_h_subir_temp_automatica,w,c
 24647  00410A  6E11               	movwf	??_timer& (0+255),c
 24648  00410C  6A12               	clrf	(??_timer+1)& (0+255),c
 24649  00410E  1E11               	comf	??_timer,f,c
 24650  004110  1E12               	comf	??_timer+1,f,c
 24651  004112  4A11               	infsnz	??_timer,f,c
 24652  004114  2A12               	incf	??_timer+1,f,c
 24653  004116  51FE               	movf	_temp& (0+255),w,b
 24654  004118  6E13               	movwf	(??_timer+2)& (0+255),c
 24655  00411A  6A14               	clrf	(??_timer+3)& (0+255),c
 24656  00411C  5011               	movf	??_timer,w,c
 24657  00411E  2613               	addwf	??_timer+2,f,c
 24658  004120  5012               	movf	??_timer+1,w,c
 24659  004122  2214               	addwfc	??_timer+3,f,c
 24660  004124  51F4               	movf	_tempajt& (0+255),w,b
 24661  004126  6E15               	movwf	(??_timer+4)& (0+255),c
 24662  004128  6A16               	clrf	(??_timer+5)& (0+255),c
 24663  00412A  5013               	movf	??_timer+2,w,c
 24664  00412C  5C15               	subwf	??_timer+4,w,c
 24665  00412E  5016               	movf	??_timer+5,w,c
 24666  004130  0A80               	xorlw	128
 24667  004132  6E17               	movwf	(??_timer+6)& (0+255),c
 24668  004134  5014               	movf	??_timer+3,w,c
 24669  004136  0A80               	xorlw	128
 24670  004138  5817               	subwfb	(??_timer+6)& (0+255),w,c
 24671  00413A  A0D8               	btfss	status,0,c
 24672  00413C  D01D               	goto	i2l1136
 24673                           
 24674                           ; BSR set to: 0
 24675  00413E  0E96               	movlw	150
 24676  004140  61F4               	cpfslt	_tempajt& (0+255),b
 24677  004142  D01A               	goto	i2l1136
 24678                           
 24679                           ; BSR set to: 0
 24680  004144  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24681  004146  B4D8               	btfsc	status,2,c
 24682  004148  D017               	goto	i2l1136
 24683                           
 24684                           ; BSR set to: 0
 24685  00414A  51FB               	movf	_trava_fase& (0+255),w,b
 24686  00414C  A4D8               	btfss	status,2,c
 24687  00414E  D014               	goto	i2l1136
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;controle.h: 75: t_controle_temp_automatica++;
 24691  004150  2A37               	incf	_t_controle_temp_automatica,f,c
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 24695  004152  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24696  004154  5C37               	subwf	_t_controle_temp_automatica,w,c
 24697  004156  A0D8               	btfss	status,0,c
 24698  004158  D00F               	goto	i2l1136
 24699                           
 24700                           ; BSR set to: 0
 24701                           ;controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 24702  00415A  0EF4               	movlw	low _tempajt
 24703  00415C  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24704  00415E  0E00               	movlw	high _tempajt
 24705  004160  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24706  004162  0E55               	movlw	85
 24707  004164  6E08               	movwf	i2setRangeValor@_min,c
 24708  004166  0E97               	movlw	151
 24709  004168  6E09               	movwf	i2setRangeValor@_max,c
 24710  00416A  0E01               	movlw	1
 24711  00416C  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24712  00416E  0E2B               	movlw	43
 24713  004170  ECFD  F028         	call	i2_setRangeValor
 24714                           
 24715                           ;controle.h: 78: t_controle_temp_automatica = 0;
 24716  004174  0E00               	movlw	0
 24717  004176  6E37               	movwf	_t_controle_temp_automatica,c
 24718  004178                     i2l1136:
 24719                           
 24720                           ;controle.h: 79: }
 24721                           ;controle.h: 80: }
 24722                           ;controle.h: 81: }
 24723                           ;controle.h: 83: sec = 0;
 24724  004178  0E00               	movlw	0
 24725  00417A  6E48               	movwf	_sec,c
 24726                           
 24727                           ;controle.h: 84: min++;
 24728  00417C  2A47               	incf	_min,f,c
 24729                           
 24730                           ;controle.h: 85: if (min > 59) {
 24731  00417E  0E3B               	movlw	59
 24732  004180  6447               	cpfsgt	_min,c
 24733  004182  0012               	return	
 24734                           
 24735                           ;controle.h: 86: min = 0;
 24736  004184  0E00               	movlw	0
 24737  004186  6E47               	movwf	_min,c
 24738                           
 24739                           ;controle.h: 87: hor++;
 24740  004188  2A46               	incf	_hor,f,c
 24741                           
 24742                           ;controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 24743  00418A  0100               	movlb	0	; () banked
 24744  00418C  51FB               	movf	_trava_fase& (0+255),w,b
 24745  00418E  A4D8               	btfss	status,2,c
 24746  004190  D062               	goto	i2l1147
 24747                           
 24748                           ; BSR set to: 0
 24749  004192  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24750  004194  B4D8               	btfsc	status,2,c
 24751  004196  D05F               	goto	i2l1147
 24752                           
 24753                           ; BSR set to: 0
 24754  004198  045E               	decf	_f_falta_energia,w,c
 24755  00419A  A4D8               	btfss	status,2,c
 24756  00419C  D05C               	goto	i2l1147
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;controle.h: 91: if (tempajt == 100 && fase == 1) {
 24760  00419E  0E64               	movlw	100
 24761  0041A0  19F4               	xorwf	_tempajt& (0+255),w,b
 24762  0041A2  A4D8               	btfss	status,2,c
 24763  0041A4  D019               	goto	i2l1139
 24764                           
 24765                           ; BSR set to: 0
 24766  0041A6  05F6               	decf	_fase& (0+255),w,b
 24767  0041A8  A4D8               	btfss	status,2,c
 24768  0041AA  D016               	goto	i2l1139
 24769                           
 24770                           ; BSR set to: 0
 24771                           ;controle.h: 92: t_controle_fim_fases++;
 24772  0041AC  2A3A               	incf	_t_controle_fim_fases,f,c
 24773                           
 24774                           ; BSR set to: 0
 24775                           ;controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 24776  0041AE  5058               	movf	_t_fim_fase1,w,c
 24777  0041B0  5C3A               	subwf	_t_controle_fim_fases,w,c
 24778  0041B2  A0D8               	btfss	status,0,c
 24779  0041B4  D050               	goto	i2l1147
 24780                           
 24781                           ; BSR set to: 0
 24782  0041B6  5058               	movf	_t_fim_fase1,w,c
 24783  0041B8  B4D8               	btfsc	status,2,c
 24784  0041BA  D04D               	goto	i2l1147
 24785                           
 24786                           ; BSR set to: 0
 24787                           ;controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 24788  0041BC  0EF4               	movlw	low _tempajt
 24789  0041BE  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24790  0041C0  0E00               	movlw	high _tempajt
 24791  0041C2  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24792  0041C4  0E55               	movlw	85
 24793  0041C6  6E08               	movwf	i2setRangeValor@_min,c
 24794  0041C8  0E97               	movlw	151
 24795  0041CA  6E09               	movwf	i2setRangeValor@_max,c
 24796  0041CC  0E01               	movlw	1
 24797  0041CE  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24798  0041D0  0E2B               	movlw	43
 24799  0041D2  ECFD  F028         	call	i2_setRangeValor
 24800  0041D6  D03D               	goto	i2l1145
 24801  0041D8                     i2l1139:
 24802  0041D8  0E6E               	movlw	110
 24803  0041DA  0100               	movlb	0	; () banked
 24804  0041DC  19F4               	xorwf	_tempajt& (0+255),w,b
 24805  0041DE  A4D8               	btfss	status,2,c
 24806  0041E0  D01A               	goto	i2l1142
 24807                           
 24808                           ; BSR set to: 0
 24809  0041E2  0E02               	movlw	2
 24810  0041E4  19F6               	xorwf	_fase& (0+255),w,b
 24811  0041E6  A4D8               	btfss	status,2,c
 24812  0041E8  D016               	goto	i2l1142
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;controle.h: 98: t_controle_fim_fases++;
 24816  0041EA  2A3A               	incf	_t_controle_fim_fases,f,c
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 24820  0041EC  5057               	movf	_t_fim_fase2,w,c
 24821  0041EE  5C3A               	subwf	_t_controle_fim_fases,w,c
 24822  0041F0  A0D8               	btfss	status,0,c
 24823  0041F2  D031               	goto	i2l1147
 24824                           
 24825                           ; BSR set to: 0
 24826  0041F4  5057               	movf	_t_fim_fase2,w,c
 24827  0041F6  B4D8               	btfsc	status,2,c
 24828  0041F8  D02E               	goto	i2l1147
 24829                           
 24830                           ; BSR set to: 0
 24831                           ;controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 24832  0041FA  0EF4               	movlw	low _tempajt
 24833  0041FC  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24834  0041FE  0E00               	movlw	high _tempajt
 24835  004200  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24836  004202  0E55               	movlw	85
 24837  004204  6E08               	movwf	i2setRangeValor@_min,c
 24838  004206  0E97               	movlw	151
 24839  004208  6E09               	movwf	i2setRangeValor@_max,c
 24840  00420A  0E01               	movlw	1
 24841  00420C  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24842  00420E  0E2B               	movlw	43
 24843  004210  ECFD  F028         	call	i2_setRangeValor
 24844  004214  D01E               	goto	i2l1145
 24845  004216                     i2l1142:
 24846  004216  0E85               	movlw	133
 24847  004218  0100               	movlb	0	; () banked
 24848  00421A  19F4               	xorwf	_tempajt& (0+255),w,b
 24849  00421C  A4D8               	btfss	status,2,c
 24850  00421E  D019               	goto	i2l1145
 24851                           
 24852                           ; BSR set to: 0
 24853  004220  0E03               	movlw	3
 24854  004222  19F6               	xorwf	_fase& (0+255),w,b
 24855  004224  A4D8               	btfss	status,2,c
 24856  004226  D015               	goto	i2l1145
 24857                           
 24858                           ; BSR set to: 0
 24859                           ;controle.h: 104: t_controle_fim_fases++;
 24860  004228  2A3A               	incf	_t_controle_fim_fases,f,c
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 24864  00422A  5056               	movf	_t_fim_fase3,w,c
 24865  00422C  5C3A               	subwf	_t_controle_fim_fases,w,c
 24866  00422E  A0D8               	btfss	status,0,c
 24867  004230  D012               	goto	i2l1147
 24868                           
 24869                           ; BSR set to: 0
 24870  004232  5056               	movf	_t_fim_fase3,w,c
 24871  004234  B4D8               	btfsc	status,2,c
 24872  004236  D00F               	goto	i2l1147
 24873                           
 24874                           ; BSR set to: 0
 24875                           ;controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 24876  004238  0EF4               	movlw	low _tempajt
 24877  00423A  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24878  00423C  0E00               	movlw	high _tempajt
 24879  00423E  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24880  004240  0E55               	movlw	85
 24881  004242  6E08               	movwf	i2setRangeValor@_min,c
 24882  004244  0E97               	movlw	151
 24883  004246  6E09               	movwf	i2setRangeValor@_max,c
 24884  004248  0E01               	movlw	1
 24885  00424A  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24886  00424C  0E2B               	movlw	43
 24887  00424E  ECFD  F028         	call	i2_setRangeValor
 24888  004252                     i2l1145:
 24889                           
 24890                           ;controle.h: 110: t_controle_fim_fases = 0;
 24891  004252  0E00               	movlw	0
 24892  004254  6E3A               	movwf	_t_controle_fim_fases,c
 24893  004256                     i2l1147:
 24894                           
 24895                           ;controle.h: 111: }
 24896                           ;controle.h: 112: }
 24897                           ;controle.h: 114: if (hor > 23) {
 24898  004256  0E17               	movlw	23
 24899  004258  6446               	cpfsgt	_hor,c
 24900  00425A  0012               	return	
 24901                           
 24902                           ;controle.h: 115: hor = 0;
 24903  00425C  0E00               	movlw	0
 24904  00425E  6E46               	movwf	_hor,c
 24905  004260  0012               	return	
 24906  004262                     __end_of_timer:
 24907                           	opt stack 0
 24908                           tosu	equ	0xFFF
 24909                           tosh	equ	0xFFE
 24910                           tosl	equ	0xFFD
 24911                           pclatu	equ	0xFFB
 24912                           pclath	equ	0xFFA
 24913                           tblptru	equ	0xFF8
 24914                           tblptrh	equ	0xFF7
 24915                           tblptrl	equ	0xFF6
 24916                           tablat	equ	0xFF5
 24917                           prodh	equ	0xFF4
 24918                           prodl	equ	0xFF3
 24919                           intcon	equ	0xFF2
 24920                           intcon2	equ	0xFF1
 24921                           intcon3	equ	0xFF0
 24922                           indf0	equ	0xFEF
 24923                           postinc0	equ	0xFEE
 24924                           fsr0h	equ	0xFEA
 24925                           fsr0l	equ	0xFE9
 24926                           wreg	equ	0xFE8
 24927                           indf1	equ	0xFE7
 24928                           postinc1	equ	0xFE6
 24929                           postdec1	equ	0xFE5
 24930                           plusw1	equ	0xFE3
 24931                           fsr1h	equ	0xFE2
 24932                           fsr1l	equ	0xFE1
 24933                           indf2	equ	0xFDF
 24934                           postinc2	equ	0xFDE
 24935                           postdec2	equ	0xFDD
 24936                           plusw2	equ	0xFDB
 24937                           fsr2h	equ	0xFDA
 24938                           fsr2l	equ	0xFD9
 24939                           status	equ	0xFD8
 24940                           
 24941 ;; *************** function i2_setRangeValor *****************
 24942 ;; Defined at:
 24943 ;;		line 76 in file "src/FuncoesControlador.h"
 24944 ;; Parameters:    Size  Location     Type
 24945 ;;  _acao           1    wreg     unsigned char 
 24946 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 24947 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 24948 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 24949 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 24950 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 24951 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 24952 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 24953 ;;		 -> clima(1), 
 24954 ;;  _min            1    7[COMRAM] unsigned char 
 24955 ;;  _max            1    8[COMRAM] unsigned char 
 24956 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 24957 ;; Auto vars:     Size  Location     Type
 24958 ;;  _acao           1   13[COMRAM] unsigned char 
 24959 ;;  setRangeValo    2   14[COMRAM] int 
 24960 ;; Return value:  Size  Location     Type
 24961 ;;                  1    wreg      void 
 24962 ;; Registers used:
 24963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24964 ;; Tracked objects:
 24965 ;;		On entry : 0/0
 24966 ;;		On exit  : 0/0
 24967 ;;		Unchanged: 0/0
 24968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24969 ;;      Params:         5       0       0       0       0       0       0       0       0
 24970 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24971 ;;      Temps:          3       0       0       0       0       0       0       0       0
 24972 ;;      Totals:        11       0       0       0       0       0       0       0       0
 24973 ;;Total ram usage:       11 bytes
 24974 ;; Hardware stack levels used:    1
 24975 ;; Hardware stack levels required when called:    3
 24976 ;; This function calls:
 24977 ;;		i2_writeEEPROM_ext
 24978 ;; This function is called by:
 24979 ;;		_timer
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           
 24983                           	psect	text62
 24984  0051FA                     __ptext62:
 24985                           	opt stack 0
 24986  0051FA                     i2_setRangeValor:
 24987                           	opt stack 20
 24988                           
 24989                           ;incstack = 0
 24990                           ;i2setRangeValor@_acao stored from wreg
 24991  0051FA  6E0E               	movwf	i2setRangeValor@_acao,c
 24992                           
 24993                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 24994  0051FC  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 24995  005200  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 24996  005204  50DF               	movf	indf2,w,c
 24997  005206  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24998  005208  500B               	movf	??i2_setRangeValor,w,c
 24999  00520A  6E0F               	movwf	i2setRangeValor@_aux,c
 25000  00520C  6A10               	clrf	i2setRangeValor@_aux+1,c
 25001                           
 25002                           ;FuncoesControlador.h: 78: switch (_acao) {
 25003  00520E  D02C               	goto	i2l942
 25004  005210                     
 25005                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 25006  005210  5009               	movf	i2setRangeValor@_max,w,c
 25007  005212  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25008  005214  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25009  005216  500B               	movf	??i2_setRangeValor,w,c
 25010  005218  5C0F               	subwf	i2setRangeValor@_aux,w,c
 25011  00521A  5010               	movf	i2setRangeValor@_aux+1,w,c
 25012  00521C  0A80               	xorlw	128
 25013  00521E  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25014  005220  500C               	movf	??i2_setRangeValor+1,w,c
 25015  005222  0A80               	xorlw	128
 25016  005224  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25017  005226  B0D8               	btfsc	status,0,c
 25018  005228  D003               	goto	i2l945
 25019  00522A  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 25020  00522C  2A10               	incf	i2setRangeValor@_aux+1,f,c
 25021  00522E  D013               	goto	L30
 25022  005230                     i2l945:
 25023  005230  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 25024  005234  D017               	goto	L31
 25025  005236                     
 25026                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 25027  005236  5008               	movf	i2setRangeValor@_min,w,c
 25028  005238  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25029  00523A  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25030  00523C  500F               	movf	i2setRangeValor@_aux,w,c
 25031  00523E  5C0B               	subwf	??i2_setRangeValor,w,c
 25032  005240  500C               	movf	??i2_setRangeValor+1,w,c
 25033  005242  0A80               	xorlw	128
 25034  005244  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25035  005246  5010               	movf	i2setRangeValor@_aux+1,w,c
 25036  005248  0A80               	xorlw	128
 25037  00524A  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25038  00524C  B0D8               	btfsc	status,0,c
 25039  00524E  D008               	goto	i2l951
 25040  005250  060F               	decf	i2setRangeValor@_aux,f,c
 25041  005252  A0D8               	btfss	status,0,c
 25042  005254  0610               	decf	i2setRangeValor@_aux+1,f,c
 25043  005256                     L30:
 25044  005256  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 25045  00525A  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 25046  00525E  D00B               	goto	i2l948
 25047  005260                     i2l951:
 25048  005260  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 25049  005264                     L31:
 25050  005264  6A10               	clrf	i2setRangeValor@_aux+1,c
 25051                           
 25052                           ;FuncoesControlador.h: 85: }
 25053                           
 25054                           ;FuncoesControlador.h: 84: break;
 25055  005266  D007               	goto	i2l948
 25056  005268                     i2l942:
 25057  005268  500E               	movf	i2setRangeValor@_acao,w,c
 25058                           
 25059                           ; Switch size 1, requested type "space"
 25060                           ; Number of cases is 2, Range of values is 43 to 45
 25061                           ; switch strategies available:
 25062                           ; Name         Instructions Cycles
 25063                           ; simple_byte            7     4 (average)
 25064                           ;	Chosen strategy is simple_byte
 25065  00526A  0A2B               	xorlw	43	; case 43
 25066  00526C  B4D8               	btfsc	status,2,c
 25067  00526E  D7D0               	goto	i2l943
 25068  005270  0A06               	xorlw	6	; case 45
 25069  005272  B4D8               	btfsc	status,2,c
 25070  005274  D7E0               	goto	i2l949
 25071  005276                     i2l948:
 25072                           
 25073                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 25074  005276  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25075  005278  B4D8               	btfsc	status,2,c
 25076  00527A  D005               	goto	i2l954
 25077                           
 25078                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 25079  00527C  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 25080  005280  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25081  005282  ECA7  F02C         	call	i2_writeEEPROM_ext
 25082  005286                     i2l954:
 25083                           
 25084                           ;FuncoesControlador.h: 88: }
 25085                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 25086  005286  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25087  00528A  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25088  00528E  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 25089  005292  0012               	return		;funcret
 25090  005294                     __end_ofi2_setRangeValor:
 25091                           	opt stack 0
 25092                           tosu	equ	0xFFF
 25093                           tosh	equ	0xFFE
 25094                           tosl	equ	0xFFD
 25095                           pclatu	equ	0xFFB
 25096                           pclath	equ	0xFFA
 25097                           tblptru	equ	0xFF8
 25098                           tblptrh	equ	0xFF7
 25099                           tblptrl	equ	0xFF6
 25100                           tablat	equ	0xFF5
 25101                           prodh	equ	0xFF4
 25102                           prodl	equ	0xFF3
 25103                           intcon	equ	0xFF2
 25104                           intcon2	equ	0xFF1
 25105                           intcon3	equ	0xFF0
 25106                           indf0	equ	0xFEF
 25107                           postinc0	equ	0xFEE
 25108                           fsr0h	equ	0xFEA
 25109                           fsr0l	equ	0xFE9
 25110                           wreg	equ	0xFE8
 25111                           indf1	equ	0xFE7
 25112                           postinc1	equ	0xFE6
 25113                           postdec1	equ	0xFE5
 25114                           plusw1	equ	0xFE3
 25115                           fsr1h	equ	0xFE2
 25116                           fsr1l	equ	0xFE1
 25117                           indf2	equ	0xFDF
 25118                           postinc2	equ	0xFDE
 25119                           postdec2	equ	0xFDD
 25120                           plusw2	equ	0xFDB
 25121                           fsr2h	equ	0xFDA
 25122                           fsr2l	equ	0xFD9
 25123                           status	equ	0xFD8
 25124                           
 25125 ;; *************** function i2_writeEEPROM_ext *****************
 25126 ;; Defined at:
 25127 ;;		line 14 in file "src/Eeprom_ext.h"
 25128 ;; Parameters:    Size  Location     Type
 25129 ;;  adress          1    wreg     unsigned char 
 25130 ;;  data            1    3[COMRAM] unsigned char 
 25131 ;; Auto vars:     Size  Location     Type
 25132 ;;  adress          1    4[COMRAM] unsigned char 
 25133 ;; Return value:  Size  Location     Type
 25134 ;;                  1    wreg      void 
 25135 ;; Registers used:
 25136 ;;		wreg, status,2, status,0, cstack
 25137 ;; Tracked objects:
 25138 ;;		On entry : 0/0
 25139 ;;		On exit  : 0/0
 25140 ;;		Unchanged: 0/0
 25141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25142 ;;      Params:         1       0       0       0       0       0       0       0       0
 25143 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25145 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25146 ;;Total ram usage:        2 bytes
 25147 ;; Hardware stack levels used:    1
 25148 ;; Hardware stack levels required when called:    2
 25149 ;; This function calls:
 25150 ;;		i2_I2C_Start
 25151 ;;		i2_I2C_Stop
 25152 ;;		i2_I2C_Write
 25153 ;;		i2_delay
 25154 ;; This function is called by:
 25155 ;;		i2_setRangeValor
 25156 ;; This function uses a non-reentrant model
 25157 ;;
 25158                           
 25159                           	psect	text63
 25160  00594E                     __ptext63:
 25161                           	opt stack 0
 25162  00594E                     i2_writeEEPROM_ext:
 25163                           	opt stack 20
 25164                           
 25165                           ;incstack = 0
 25166                           ;i2writeEEPROM_ext@adress stored from wreg
 25167  00594E  6E05               	movwf	i2writeEEPROM_ext@adress,c
 25168                           
 25169                           ;Eeprom_ext.h: 16: I2C_Start();
 25170  005950  EC71  F02E         	call	i2_I2C_Start	;wreg free
 25171                           
 25172                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 25173  005954  0E00               	movlw	0
 25174  005956  6E03               	movwf	i2I2C_Write@d+1,c
 25175  005958  0EA0               	movlw	160
 25176  00595A  6E02               	movwf	i2I2C_Write@d,c
 25177  00595C  EC5C  F02E         	call	i2_I2C_Write	;wreg free
 25178                           
 25179                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 25180  005960  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 25181  005964  6A03               	clrf	i2I2C_Write@d+1,c
 25182  005966  EC5C  F02E         	call	i2_I2C_Write	;wreg free
 25183                           
 25184                           ;Eeprom_ext.h: 20: I2C_Write(data);
 25185  00596A  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 25186  00596E  6A03               	clrf	i2I2C_Write@d+1,c
 25187  005970  EC5C  F02E         	call	i2_I2C_Write	;wreg free
 25188                           
 25189                           ;Eeprom_ext.h: 21: I2C_Stop();
 25190  005974  EC6D  F02E         	call	i2_I2C_Stop	;wreg free
 25191                           
 25192                           ;Eeprom_ext.h: 22: delay(105);
 25193  005978  0E00               	movlw	0
 25194  00597A  6E02               	movwf	i2delay@x+1,c
 25195  00597C  0E69               	movlw	105
 25196  00597E  6E01               	movwf	i2delay@x,c
 25197  005980  ECE2  F02D         	call	i2_delay	;wreg free
 25198  005984  0012               	return		;funcret
 25199  005986                     __end_ofi2_writeEEPROM_ext:
 25200                           	opt stack 0
 25201                           tosu	equ	0xFFF
 25202                           tosh	equ	0xFFE
 25203                           tosl	equ	0xFFD
 25204                           pclatu	equ	0xFFB
 25205                           pclath	equ	0xFFA
 25206                           tblptru	equ	0xFF8
 25207                           tblptrh	equ	0xFF7
 25208                           tblptrl	equ	0xFF6
 25209                           tablat	equ	0xFF5
 25210                           prodh	equ	0xFF4
 25211                           prodl	equ	0xFF3
 25212                           intcon	equ	0xFF2
 25213                           intcon2	equ	0xFF1
 25214                           intcon3	equ	0xFF0
 25215                           indf0	equ	0xFEF
 25216                           postinc0	equ	0xFEE
 25217                           fsr0h	equ	0xFEA
 25218                           fsr0l	equ	0xFE9
 25219                           wreg	equ	0xFE8
 25220                           indf1	equ	0xFE7
 25221                           postinc1	equ	0xFE6
 25222                           postdec1	equ	0xFE5
 25223                           plusw1	equ	0xFE3
 25224                           fsr1h	equ	0xFE2
 25225                           fsr1l	equ	0xFE1
 25226                           indf2	equ	0xFDF
 25227                           postinc2	equ	0xFDE
 25228                           postdec2	equ	0xFDD
 25229                           plusw2	equ	0xFDB
 25230                           fsr2h	equ	0xFDA
 25231                           fsr2l	equ	0xFD9
 25232                           status	equ	0xFD8
 25233                           
 25234 ;; *************** function i2_delay *****************
 25235 ;; Defined at:
 25236 ;;		line 18 in file "src/function.c"
 25237 ;; Parameters:    Size  Location     Type
 25238 ;;  x               2    0[COMRAM] int 
 25239 ;; Auto vars:     Size  Location     Type
 25240 ;;		None
 25241 ;; Return value:  Size  Location     Type
 25242 ;;                  1    wreg      void 
 25243 ;; Registers used:
 25244 ;;		wreg, status,2, status,0
 25245 ;; Tracked objects:
 25246 ;;		On entry : 0/0
 25247 ;;		On exit  : 0/0
 25248 ;;		Unchanged: 0/0
 25249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25250 ;;      Params:         2       0       0       0       0       0       0       0       0
 25251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25252 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25253 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25254 ;;Total ram usage:        3 bytes
 25255 ;; Hardware stack levels used:    1
 25256 ;; This function calls:
 25257 ;;		Nothing
 25258 ;; This function is called by:
 25259 ;;		i2_writeEEPROM_ext
 25260 ;; This function uses a non-reentrant model
 25261 ;;
 25262                           
 25263                           	psect	text64
 25264  005BC4                     __ptext64:
 25265                           	opt stack 0
 25266  005BC4                     i2_delay:
 25267                           	opt stack 21
 25268                           
 25269                           ;function.c: 19: while (x--) {
 25270                           
 25271                           ;incstack = 0
 25272  005BC4  D008               	goto	i2l1484
 25273  005BC6                     i2l6573:
 25274                           
 25275                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 25276  005BC6  0E03               	movlw	3
 25277  005BC8  6E03               	movwf	??i2_delay& (0+255),c
 25278  005BCA  0E98               	movlw	152
 25279  005BCC                     i2u1563_47:
 25280  005BCC  2EE8               	decfsz	wreg,f,c
 25281  005BCE  D7FE               	bra	i2u1563_47
 25282  005BD0  2E03               	decfsz	??i2_delay& (0+255),f,c
 25283  005BD2  D7FC               	bra	i2u1563_47
 25284  005BD4  0004               	clrwdt		;# 
 25285  005BD6                     i2l1484:
 25286  005BD6  0601               	decf	i2delay@x,f,c
 25287  005BD8  A0D8               	btfss	status,0,c
 25288  005BDA  0602               	decf	i2delay@x+1,f,c
 25289  005BDC  2801               	incf	i2delay@x,w,c
 25290  005BDE  E1F3               	bnz	i2l6573
 25291  005BE0  2802               	incf	i2delay@x+1,w,c
 25292  005BE2  B4D8               	btfsc	status,2,c
 25293  005BE4  0012               	return	
 25294  005BE6  D7EF               	goto	i2l1485
 25295  005BE8                     __end_ofi2_delay:
 25296                           	opt stack 0
 25297                           tosu	equ	0xFFF
 25298                           tosh	equ	0xFFE
 25299                           tosl	equ	0xFFD
 25300                           pclatu	equ	0xFFB
 25301                           pclath	equ	0xFFA
 25302                           tblptru	equ	0xFF8
 25303                           tblptrh	equ	0xFF7
 25304                           tblptrl	equ	0xFF6
 25305                           tablat	equ	0xFF5
 25306                           prodh	equ	0xFF4
 25307                           prodl	equ	0xFF3
 25308                           intcon	equ	0xFF2
 25309                           intcon2	equ	0xFF1
 25310                           intcon3	equ	0xFF0
 25311                           indf0	equ	0xFEF
 25312                           postinc0	equ	0xFEE
 25313                           fsr0h	equ	0xFEA
 25314                           fsr0l	equ	0xFE9
 25315                           wreg	equ	0xFE8
 25316                           indf1	equ	0xFE7
 25317                           postinc1	equ	0xFE6
 25318                           postdec1	equ	0xFE5
 25319                           plusw1	equ	0xFE3
 25320                           fsr1h	equ	0xFE2
 25321                           fsr1l	equ	0xFE1
 25322                           indf2	equ	0xFDF
 25323                           postinc2	equ	0xFDE
 25324                           postdec2	equ	0xFDD
 25325                           plusw2	equ	0xFDB
 25326                           fsr2h	equ	0xFDA
 25327                           fsr2l	equ	0xFD9
 25328                           status	equ	0xFD8
 25329                           
 25330 ;; *************** function _receiveByteSerial *****************
 25331 ;; Defined at:
 25332 ;;		line 17 in file "src/serial.c"
 25333 ;; Parameters:    Size  Location     Type
 25334 ;;  byte            1    wreg     unsigned char 
 25335 ;; Auto vars:     Size  Location     Type
 25336 ;;  byte            1    8[COMRAM] unsigned char 
 25337 ;; Return value:  Size  Location     Type
 25338 ;;                  1    wreg      void 
 25339 ;; Registers used:
 25340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25341 ;; Tracked objects:
 25342 ;;		On entry : 0/0
 25343 ;;		On exit  : 0/0
 25344 ;;		Unchanged: 0/0
 25345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25346 ;;      Params:         0       0       0       0       0       0       0       0       0
 25347 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25348 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25349 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25350 ;;Total ram usage:        3 bytes
 25351 ;; Hardware stack levels used:    1
 25352 ;; Hardware stack levels required when called:    1
 25353 ;; This function calls:
 25354 ;;		i2_strlen
 25355 ;; This function is called by:
 25356 ;;		_TIMER0
 25357 ;; This function uses a non-reentrant model
 25358 ;;
 25359                           
 25360                           	psect	text65
 25361  00560A                     __ptext65:
 25362                           	opt stack 0
 25363  00560A                     _receiveByteSerial:
 25364                           	opt stack 23
 25365                           
 25366                           ;incstack = 0
 25367                           ;receiveByteSerial@byte stored from wreg
 25368  00560A  6E09               	movwf	receiveByteSerial@byte,c
 25369                           
 25370                           ;serial.c: 18: if (_BF_enable_receive) {
 25371  00560C  5041               	movf	__BF_enable_receive,w,c
 25372  00560E  B4D8               	btfsc	status,2,c
 25373  005610  D011               	goto	i2l1614
 25374                           
 25375                           ;serial.c: 19: bufferSerial[_BF_current++] = byte;
 25376  005612  503F               	movf	__BF_current,w,c
 25377  005614  0D01               	mullw	1
 25378  005616  0E69               	movlw	low _bufferSerial
 25379  005618  24F3               	addwf	prodl,w,c
 25380  00561A  6ED9               	movwf	fsr2l,c
 25381  00561C  0E02               	movlw	high _bufferSerial
 25382  00561E  20F4               	addwfc	prodh,w,c
 25383  005620  6EDA               	movwf	fsr2h,c
 25384  005622  C009  FFDF         	movff	receiveByteSerial@byte,indf2
 25385  005626  2A3F               	incf	__BF_current,f,c
 25386                           
 25387                           ;serial.c: 20: if (_BF_current >= 100) {
 25388  005628  0E63               	movlw	99
 25389  00562A  643F               	cpfsgt	__BF_current,c
 25390  00562C  0012               	return	
 25391                           
 25392                           ;serial.c: 21: _BF_current = 0;
 25393  00562E  0E00               	movlw	0
 25394  005630  6E3F               	movwf	__BF_current,c
 25395                           
 25396                           ;serial.c: 22: }
 25397                           ;serial.c: 23: } else if (_BF_start[_BF_i_count] == byte) {
 25398  005632  0012               	return	
 25399  005634                     i2l1614:
 25400  005634  5040               	movf	__BF_i_count,w,c
 25401  005636  0D01               	mullw	1
 25402  005638  0ED8               	movlw	low __BF_start
 25403  00563A  24F3               	addwf	prodl,w,c
 25404  00563C  6ED9               	movwf	fsr2l,c
 25405  00563E  0E01               	movlw	high __BF_start
 25406  005640  20F4               	addwfc	prodh,w,c
 25407  005642  6EDA               	movwf	fsr2h,c
 25408  005644  5009               	movf	receiveByteSerial@byte,w,c
 25409  005646  18DE               	xorwf	postinc2,w,c
 25410  005648  A4D8               	btfss	status,2,c
 25411  00564A  D013               	goto	i2l1617
 25412                           
 25413                           ;serial.c: 24: _BF_i_count++;
 25414  00564C  2A40               	incf	__BF_i_count,f,c
 25415                           
 25416                           ;serial.c: 25: if(_BF_i_count >= strlen(_BF_start)){
 25417  00564E  0ED8               	movlw	low __BF_start
 25418  005650  6E01               	movwf	i2strlen@s,c
 25419  005652  0E01               	movlw	high __BF_start
 25420  005654  6E02               	movwf	i2strlen@s+1,c
 25421  005656  ECBA  F02B         	call	i2_strlen	;wreg free
 25422  00565A  5040               	movf	__BF_i_count,w,c
 25423  00565C  6E07               	movwf	??_receiveByteSerial& (0+255),c
 25424  00565E  6A08               	clrf	(??_receiveByteSerial+1)& (0+255),c
 25425  005660  5001               	movf	?i2_strlen,w,c
 25426  005662  5C07               	subwf	??_receiveByteSerial,w,c
 25427  005664  5002               	movf	?i2_strlen+1,w,c
 25428  005666  5808               	subwfb	??_receiveByteSerial+1,w,c
 25429  005668  A0D8               	btfss	status,0,c
 25430  00566A  0012               	return	
 25431                           
 25432                           ;serial.c: 26: _BF_enable_receive = 1;
 25433  00566C  0E01               	movlw	1
 25434  00566E  6E41               	movwf	__BF_enable_receive,c
 25435                           
 25436                           ;serial.c: 27: }
 25437                           ;serial.c: 28: } else {
 25438  005670  0012               	return	
 25439  005672                     i2l1617:
 25440                           
 25441                           ;serial.c: 29: _BF_i_count = 0;
 25442  005672  0E00               	movlw	0
 25443  005674  6E40               	movwf	__BF_i_count,c
 25444  005676  0012               	return	
 25445  005678                     __end_of_receiveByteSerial:
 25446                           	opt stack 0
 25447                           tosu	equ	0xFFF
 25448                           tosh	equ	0xFFE
 25449                           tosl	equ	0xFFD
 25450                           pclatu	equ	0xFFB
 25451                           pclath	equ	0xFFA
 25452                           tblptru	equ	0xFF8
 25453                           tblptrh	equ	0xFF7
 25454                           tblptrl	equ	0xFF6
 25455                           tablat	equ	0xFF5
 25456                           prodh	equ	0xFF4
 25457                           prodl	equ	0xFF3
 25458                           intcon	equ	0xFF2
 25459                           intcon2	equ	0xFF1
 25460                           intcon3	equ	0xFF0
 25461                           indf0	equ	0xFEF
 25462                           postinc0	equ	0xFEE
 25463                           fsr0h	equ	0xFEA
 25464                           fsr0l	equ	0xFE9
 25465                           wreg	equ	0xFE8
 25466                           indf1	equ	0xFE7
 25467                           postinc1	equ	0xFE6
 25468                           postdec1	equ	0xFE5
 25469                           plusw1	equ	0xFE3
 25470                           fsr1h	equ	0xFE2
 25471                           fsr1l	equ	0xFE1
 25472                           indf2	equ	0xFDF
 25473                           postinc2	equ	0xFDE
 25474                           postdec2	equ	0xFDD
 25475                           plusw2	equ	0xFDB
 25476                           fsr2h	equ	0xFDA
 25477                           fsr2l	equ	0xFD9
 25478                           status	equ	0xFD8
 25479                           
 25480 ;; *************** function i2_strlen *****************
 25481 ;; Defined at:
 25482 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 25483 ;; Parameters:    Size  Location     Type
 25484 ;;  s               2    0[COMRAM] PTR const unsigned char 
 25485 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 25486 ;;		 -> STR_80(7), STR_79(3), STR_77(7), STR_76(7), 
 25487 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 25488 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 25489 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 25490 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 25491 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), STR_40(3), 
 25492 ;;		 -> STR_38(3), ssid(15), STR_34(4), STR_33(2), 
 25493 ;;		 -> bufferSerial(100), STR_31(4), STR_30(7), STR_25(7), 
 25494 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 25495 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 25496 ;;		 -> STR_12(3), STR_10(4), 
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 25499 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 25500 ;;		 -> STR_80(7), STR_79(3), STR_77(7), STR_76(7), 
 25501 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 25502 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 25503 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 25504 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 25505 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), STR_40(3), 
 25506 ;;		 -> STR_38(3), ssid(15), STR_34(4), STR_33(2), 
 25507 ;;		 -> bufferSerial(100), STR_31(4), STR_30(7), STR_25(7), 
 25508 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 25509 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 25510 ;;		 -> STR_12(3), STR_10(4), 
 25511 ;; Return value:  Size  Location     Type
 25512 ;;                  2    0[COMRAM] unsigned int 
 25513 ;; Registers used:
 25514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25515 ;; Tracked objects:
 25516 ;;		On entry : 0/0
 25517 ;;		On exit  : 0/0
 25518 ;;		Unchanged: 0/0
 25519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25520 ;;      Params:         2       0       0       0       0       0       0       0       0
 25521 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25522 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25523 ;;      Totals:         6       0       0       0       0       0       0       0       0
 25524 ;;Total ram usage:        6 bytes
 25525 ;; Hardware stack levels used:    1
 25526 ;; This function calls:
 25527 ;;		Nothing
 25528 ;; This function is called by:
 25529 ;;		_receiveByteSerial
 25530 ;; This function uses a non-reentrant model
 25531 ;;
 25532                           
 25533                           	psect	text66
 25534  005774                     __ptext66:
 25535                           	opt stack 0
 25536  005774                     i2_strlen:
 25537                           	opt stack 23
 25538                           
 25539                           ;incstack = 0
 25540  005774  C001  F005         	movff	i2strlen@s,i2strlen@cp
 25541  005778  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 25542  00577C  D002               	goto	i2l2277
 25543  00577E  4A05               	infsnz	i2strlen@cp,f,c
 25544  005780  2A06               	incf	i2strlen@cp+1,f,c
 25545  005782                     i2l2277:
 25546  005782  C005  FFF6         	movff	i2strlen@cp,tblptrl
 25547  005786  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 25548  00578A  6AF8               	clrf	tblptru,c
 25549  00578C  0E07               	movlw	(high __ramtop+-1)
 25550  00578E  64F7               	cpfsgt	tblptrh,c
 25551  005790  D003               	bra	i2u1242_47
 25552  005792  0008               	tblrd		*
 25553  005794  50F5               	movf	tablat,w,c
 25554  005796  D005               	bra	i2u1242_40
 25555  005798                     i2u1242_47:
 25556  005798  CFF6 FFE9          	movff	tblptrl,fsr0l
 25557  00579C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25558  0057A0  50EF               	movf	indf0,w,c
 25559  0057A2                     i2u1242_40:
 25560  0057A2  0900               	iorlw	0
 25561  0057A4  A4D8               	btfss	status,2,c
 25562  0057A6  D7EB               	goto	i2l2278
 25563  0057A8  C001  F003         	movff	i2strlen@s,??i2_strlen
 25564  0057AC  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 25565  0057B0  1E03               	comf	??i2_strlen,f,c
 25566  0057B2  1E04               	comf	??i2_strlen+1,f,c
 25567  0057B4  4A03               	infsnz	??i2_strlen,f,c
 25568  0057B6  2A04               	incf	??i2_strlen+1,f,c
 25569  0057B8  5005               	movf	i2strlen@cp,w,c
 25570  0057BA  2403               	addwf	??i2_strlen,w,c
 25571  0057BC  6E01               	movwf	?i2_strlen,c
 25572  0057BE  5006               	movf	i2strlen@cp+1,w,c
 25573  0057C0  2004               	addwfc	??i2_strlen+1,w,c
 25574  0057C2  6E02               	movwf	?i2_strlen+1,c
 25575  0057C4  0012               	return	
 25576  0057C6                     __end_ofi2_strlen:
 25577                           	opt stack 0
 25578                           tosu	equ	0xFFF
 25579                           tosh	equ	0xFFE
 25580                           tosl	equ	0xFFD
 25581                           pclatu	equ	0xFFB
 25582                           pclath	equ	0xFFA
 25583                           tblptru	equ	0xFF8
 25584                           tblptrh	equ	0xFF7
 25585                           tblptrl	equ	0xFF6
 25586                           tablat	equ	0xFF5
 25587                           prodh	equ	0xFF4
 25588                           prodl	equ	0xFF3
 25589                           intcon	equ	0xFF2
 25590                           intcon2	equ	0xFF1
 25591                           intcon3	equ	0xFF0
 25592                           indf0	equ	0xFEF
 25593                           postinc0	equ	0xFEE
 25594                           fsr0h	equ	0xFEA
 25595                           fsr0l	equ	0xFE9
 25596                           wreg	equ	0xFE8
 25597                           indf1	equ	0xFE7
 25598                           postinc1	equ	0xFE6
 25599                           postdec1	equ	0xFE5
 25600                           plusw1	equ	0xFE3
 25601                           fsr1h	equ	0xFE2
 25602                           fsr1l	equ	0xFE1
 25603                           indf2	equ	0xFDF
 25604                           postinc2	equ	0xFDE
 25605                           postdec2	equ	0xFDD
 25606                           plusw2	equ	0xFDB
 25607                           fsr2h	equ	0xFDA
 25608                           fsr2l	equ	0xFD9
 25609                           status	equ	0xFD8
 25610                           
 25611 ;; *************** function _readButtons *****************
 25612 ;; Defined at:
 25613 ;;		line 19 in file "src/Teclado.h"
 25614 ;; Parameters:    Size  Location     Type
 25615 ;;		None
 25616 ;; Auto vars:     Size  Location     Type
 25617 ;;		None
 25618 ;; Return value:  Size  Location     Type
 25619 ;;                  1    wreg      void 
 25620 ;; Registers used:
 25621 ;;		wreg, status,2, status,0, cstack
 25622 ;; Tracked objects:
 25623 ;;		On entry : 0/0
 25624 ;;		On exit  : 0/0
 25625 ;;		Unchanged: 0/0
 25626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25627 ;;      Params:         0       0       0       0       0       0       0       0       0
 25628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25630 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25631 ;;Total ram usage:        0 bytes
 25632 ;; Hardware stack levels used:    1
 25633 ;; Hardware stack levels required when called:    2
 25634 ;; This function calls:
 25635 ;;		i2_I2C_Read
 25636 ;;		i2_I2C_Start
 25637 ;;		i2_I2C_Stop
 25638 ;;		i2_I2C_Write
 25639 ;; This function is called by:
 25640 ;;		_TIMER0
 25641 ;; This function uses a non-reentrant model
 25642 ;;
 25643                           
 25644                           	psect	text67
 25645  005B50                     __ptext67:
 25646                           	opt stack 0
 25647  005B50                     _readButtons:
 25648                           	opt stack 22
 25649                           
 25650                           ;Teclado.h: 20: I2C_Start();
 25651                           
 25652                           ;incstack = 0
 25653  005B50  EC71  F02E         	call	i2_I2C_Start	;wreg free
 25654                           
 25655                           ;Teclado.h: 21: I2C_Write(0x4F);
 25656  005B54  0E00               	movlw	0
 25657  005B56  6E03               	movwf	i2I2C_Write@d+1,c
 25658  005B58  0E4F               	movlw	79
 25659  005B5A  6E02               	movwf	i2I2C_Write@d,c
 25660  005B5C  EC5C  F02E         	call	i2_I2C_Write	;wreg free
 25661                           
 25662                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 25663  005B60  0E00               	movlw	0
 25664  005B62  6E03               	movwf	i2I2C_Read@a+1,c
 25665  005B64  0E00               	movlw	0
 25666  005B66  6E02               	movwf	i2I2C_Read@a,c
 25667  005B68  EC54  F02D         	call	i2_I2C_Read	;wreg free
 25668  005B6C  5002               	movf	?i2_I2C_Read,w,c
 25669  005B6E  0AFF               	xorlw	255
 25670  005B70  6E42               	movwf	_bt_flag,c
 25671                           
 25672                           ;Teclado.h: 23: I2C_Stop();
 25673  005B72  EC6D  F02E         	call	i2_I2C_Stop	;wreg free
 25674  005B76  0012               	return		;funcret
 25675  005B78                     __end_of_readButtons:
 25676                           	opt stack 0
 25677                           tosu	equ	0xFFF
 25678                           tosh	equ	0xFFE
 25679                           tosl	equ	0xFFD
 25680                           pclatu	equ	0xFFB
 25681                           pclath	equ	0xFFA
 25682                           tblptru	equ	0xFF8
 25683                           tblptrh	equ	0xFF7
 25684                           tblptrl	equ	0xFF6
 25685                           tablat	equ	0xFF5
 25686                           prodh	equ	0xFF4
 25687                           prodl	equ	0xFF3
 25688                           intcon	equ	0xFF2
 25689                           intcon2	equ	0xFF1
 25690                           intcon3	equ	0xFF0
 25691                           indf0	equ	0xFEF
 25692                           postinc0	equ	0xFEE
 25693                           fsr0h	equ	0xFEA
 25694                           fsr0l	equ	0xFE9
 25695                           wreg	equ	0xFE8
 25696                           indf1	equ	0xFE7
 25697                           postinc1	equ	0xFE6
 25698                           postdec1	equ	0xFE5
 25699                           plusw1	equ	0xFE3
 25700                           fsr1h	equ	0xFE2
 25701                           fsr1l	equ	0xFE1
 25702                           indf2	equ	0xFDF
 25703                           postinc2	equ	0xFDE
 25704                           postdec2	equ	0xFDD
 25705                           plusw2	equ	0xFDB
 25706                           fsr2h	equ	0xFDA
 25707                           fsr2l	equ	0xFD9
 25708                           status	equ	0xFD8
 25709                           
 25710 ;; *************** function i2_I2C_Write *****************
 25711 ;; Defined at:
 25712 ;;		line 41 in file "src/I2C.c"
 25713 ;; Parameters:    Size  Location     Type
 25714 ;;  d               2    1[COMRAM] unsigned int 
 25715 ;; Auto vars:     Size  Location     Type
 25716 ;;		None
 25717 ;; Return value:  Size  Location     Type
 25718 ;;                  1    wreg      void 
 25719 ;; Registers used:
 25720 ;;		wreg, status,2, status,0, cstack
 25721 ;; Tracked objects:
 25722 ;;		On entry : 0/0
 25723 ;;		On exit  : 0/0
 25724 ;;		Unchanged: 0/0
 25725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25726 ;;      Params:         2       0       0       0       0       0       0       0       0
 25727 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25728 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25729 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25730 ;;Total ram usage:        2 bytes
 25731 ;; Hardware stack levels used:    1
 25732 ;; Hardware stack levels required when called:    1
 25733 ;; This function calls:
 25734 ;;		i2_I2C_Wait
 25735 ;; This function is called by:
 25736 ;;		_readButtons
 25737 ;;		i2_writeEEPROM_ext
 25738 ;; This function uses a non-reentrant model
 25739 ;;
 25740                           
 25741                           	psect	text68
 25742  005CB8                     __ptext68:
 25743                           	opt stack 0
 25744  005CB8                     i2_I2C_Write:
 25745                           	opt stack 20
 25746                           
 25747                           ;I2C.c: 42: I2C_Wait();
 25748                           
 25749                           ;incstack = 0
 25750  005CB8  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 25751                           
 25752                           ;I2C.c: 43: SSPBUF = d;
 25753  005CBC  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 25754  005CC0  0012               	return		;funcret
 25755  005CC2                     __end_ofi2_I2C_Write:
 25756                           	opt stack 0
 25757                           tosu	equ	0xFFF
 25758                           tosh	equ	0xFFE
 25759                           tosl	equ	0xFFD
 25760                           pclatu	equ	0xFFB
 25761                           pclath	equ	0xFFA
 25762                           tblptru	equ	0xFF8
 25763                           tblptrh	equ	0xFF7
 25764                           tblptrl	equ	0xFF6
 25765                           tablat	equ	0xFF5
 25766                           prodh	equ	0xFF4
 25767                           prodl	equ	0xFF3
 25768                           intcon	equ	0xFF2
 25769                           intcon2	equ	0xFF1
 25770                           intcon3	equ	0xFF0
 25771                           indf0	equ	0xFEF
 25772                           postinc0	equ	0xFEE
 25773                           fsr0h	equ	0xFEA
 25774                           fsr0l	equ	0xFE9
 25775                           wreg	equ	0xFE8
 25776                           indf1	equ	0xFE7
 25777                           postinc1	equ	0xFE6
 25778                           postdec1	equ	0xFE5
 25779                           plusw1	equ	0xFE3
 25780                           fsr1h	equ	0xFE2
 25781                           fsr1l	equ	0xFE1
 25782                           indf2	equ	0xFDF
 25783                           postinc2	equ	0xFDE
 25784                           postdec2	equ	0xFDD
 25785                           plusw2	equ	0xFDB
 25786                           fsr2h	equ	0xFDA
 25787                           fsr2l	equ	0xFD9
 25788                           status	equ	0xFD8
 25789                           
 25790 ;; *************** function i2_I2C_Stop *****************
 25791 ;; Defined at:
 25792 ;;		line 35 in file "src/I2C.c"
 25793 ;; Parameters:    Size  Location     Type
 25794 ;;		None
 25795 ;; Auto vars:     Size  Location     Type
 25796 ;;		None
 25797 ;; Return value:  Size  Location     Type
 25798 ;;                  1    wreg      void 
 25799 ;; Registers used:
 25800 ;;		wreg, status,2, status,0, cstack
 25801 ;; Tracked objects:
 25802 ;;		On entry : 0/0
 25803 ;;		On exit  : 0/0
 25804 ;;		Unchanged: 0/0
 25805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25806 ;;      Params:         0       0       0       0       0       0       0       0       0
 25807 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25808 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25809 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25810 ;;Total ram usage:        0 bytes
 25811 ;; Hardware stack levels used:    1
 25812 ;; Hardware stack levels required when called:    1
 25813 ;; This function calls:
 25814 ;;		i2_I2C_Wait
 25815 ;; This function is called by:
 25816 ;;		_readButtons
 25817 ;;		i2_writeEEPROM_ext
 25818 ;; This function uses a non-reentrant model
 25819 ;;
 25820                           
 25821                           	psect	text69
 25822  005CDA                     __ptext69:
 25823                           	opt stack 0
 25824  005CDA                     i2_I2C_Stop:
 25825                           	opt stack 20
 25826                           
 25827                           ;I2C.c: 36: I2C_Wait();
 25828                           
 25829                           ;incstack = 0
 25830  005CDA  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 25831                           
 25832                           ;I2C.c: 37: PEN = 1;
 25833  005CDE  84C5               	bsf	4037,2,c	;volatile
 25834  005CE0  0012               	return		;funcret
 25835  005CE2                     __end_ofi2_I2C_Stop:
 25836                           	opt stack 0
 25837                           tosu	equ	0xFFF
 25838                           tosh	equ	0xFFE
 25839                           tosl	equ	0xFFD
 25840                           pclatu	equ	0xFFB
 25841                           pclath	equ	0xFFA
 25842                           tblptru	equ	0xFF8
 25843                           tblptrh	equ	0xFF7
 25844                           tblptrl	equ	0xFF6
 25845                           tablat	equ	0xFF5
 25846                           prodh	equ	0xFF4
 25847                           prodl	equ	0xFF3
 25848                           intcon	equ	0xFF2
 25849                           intcon2	equ	0xFF1
 25850                           intcon3	equ	0xFF0
 25851                           indf0	equ	0xFEF
 25852                           postinc0	equ	0xFEE
 25853                           fsr0h	equ	0xFEA
 25854                           fsr0l	equ	0xFE9
 25855                           wreg	equ	0xFE8
 25856                           indf1	equ	0xFE7
 25857                           postinc1	equ	0xFE6
 25858                           postdec1	equ	0xFE5
 25859                           plusw1	equ	0xFE3
 25860                           fsr1h	equ	0xFE2
 25861                           fsr1l	equ	0xFE1
 25862                           indf2	equ	0xFDF
 25863                           postinc2	equ	0xFDE
 25864                           postdec2	equ	0xFDD
 25865                           plusw2	equ	0xFDB
 25866                           fsr2h	equ	0xFDA
 25867                           fsr2l	equ	0xFD9
 25868                           status	equ	0xFD8
 25869                           
 25870 ;; *************** function i2_I2C_Start *****************
 25871 ;; Defined at:
 25872 ;;		line 25 in file "src/I2C.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;		None
 25875 ;; Auto vars:     Size  Location     Type
 25876 ;;		None
 25877 ;; Return value:  Size  Location     Type
 25878 ;;                  1    wreg      void 
 25879 ;; Registers used:
 25880 ;;		wreg, status,2, status,0, cstack
 25881 ;; Tracked objects:
 25882 ;;		On entry : 0/0
 25883 ;;		On exit  : 0/0
 25884 ;;		Unchanged: 0/0
 25885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25886 ;;      Params:         0       0       0       0       0       0       0       0       0
 25887 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25889 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25890 ;;Total ram usage:        0 bytes
 25891 ;; Hardware stack levels used:    1
 25892 ;; Hardware stack levels required when called:    1
 25893 ;; This function calls:
 25894 ;;		i2_I2C_Wait
 25895 ;; This function is called by:
 25896 ;;		_readButtons
 25897 ;;		i2_writeEEPROM_ext
 25898 ;; This function uses a non-reentrant model
 25899 ;;
 25900                           
 25901                           	psect	text70
 25902  005CE2                     __ptext70:
 25903                           	opt stack 0
 25904  005CE2                     i2_I2C_Start:
 25905                           	opt stack 20
 25906                           
 25907                           ;I2C.c: 26: I2C_Wait();
 25908                           
 25909                           ;incstack = 0
 25910  005CE2  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 25911                           
 25912                           ;I2C.c: 27: SEN = 1;
 25913  005CE6  80C5               	bsf	4037,0,c	;volatile
 25914  005CE8  0012               	return		;funcret
 25915  005CEA                     __end_ofi2_I2C_Start:
 25916                           	opt stack 0
 25917                           tosu	equ	0xFFF
 25918                           tosh	equ	0xFFE
 25919                           tosl	equ	0xFFD
 25920                           pclatu	equ	0xFFB
 25921                           pclath	equ	0xFFA
 25922                           tblptru	equ	0xFF8
 25923                           tblptrh	equ	0xFF7
 25924                           tblptrl	equ	0xFF6
 25925                           tablat	equ	0xFF5
 25926                           prodh	equ	0xFF4
 25927                           prodl	equ	0xFF3
 25928                           intcon	equ	0xFF2
 25929                           intcon2	equ	0xFF1
 25930                           intcon3	equ	0xFF0
 25931                           indf0	equ	0xFEF
 25932                           postinc0	equ	0xFEE
 25933                           fsr0h	equ	0xFEA
 25934                           fsr0l	equ	0xFE9
 25935                           wreg	equ	0xFE8
 25936                           indf1	equ	0xFE7
 25937                           postinc1	equ	0xFE6
 25938                           postdec1	equ	0xFE5
 25939                           plusw1	equ	0xFE3
 25940                           fsr1h	equ	0xFE2
 25941                           fsr1l	equ	0xFE1
 25942                           indf2	equ	0xFDF
 25943                           postinc2	equ	0xFDE
 25944                           postdec2	equ	0xFDD
 25945                           plusw2	equ	0xFDB
 25946                           fsr2h	equ	0xFDA
 25947                           fsr2l	equ	0xFD9
 25948                           status	equ	0xFD8
 25949                           
 25950 ;; *************** function i2_I2C_Read *****************
 25951 ;; Defined at:
 25952 ;;		line 46 in file "src/I2C.c"
 25953 ;; Parameters:    Size  Location     Type
 25954 ;;  a               2    1[COMRAM] unsigned short 
 25955 ;; Auto vars:     Size  Location     Type
 25956 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 25957 ;; Return value:  Size  Location     Type
 25958 ;;                  2    1[COMRAM] unsigned short 
 25959 ;; Registers used:
 25960 ;;		wreg, status,2, status,0, cstack
 25961 ;; Tracked objects:
 25962 ;;		On entry : 0/0
 25963 ;;		On exit  : 0/0
 25964 ;;		Unchanged: 0/0
 25965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25966 ;;      Params:         2       0       0       0       0       0       0       0       0
 25967 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25968 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25969 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25970 ;;Total ram usage:        4 bytes
 25971 ;; Hardware stack levels used:    1
 25972 ;; Hardware stack levels required when called:    1
 25973 ;; This function calls:
 25974 ;;		i2_I2C_Wait
 25975 ;; This function is called by:
 25976 ;;		_readButtons
 25977 ;; This function uses a non-reentrant model
 25978 ;;
 25979                           
 25980                           	psect	text71
 25981  005AA8                     __ptext71:
 25982                           	opt stack 0
 25983  005AA8                     i2_I2C_Read:
 25984                           	opt stack 22
 25985                           
 25986                           ;I2C.c: 47: unsigned short temp;
 25987                           ;I2C.c: 48: I2C_Wait();
 25988                           
 25989                           ;incstack = 0
 25990  005AA8  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 25991                           
 25992                           ;I2C.c: 49: RCEN = 1;
 25993  005AAC  86C5               	bsf	4037,3,c	;volatile
 25994                           
 25995                           ;I2C.c: 50: I2C_Wait();
 25996  005AAE  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 25997                           
 25998                           ;I2C.c: 51: temp = SSPBUF;
 25999  005AB2  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 26000  005AB6  6A05               	clrf	i2I2C_Read@temp+1,c
 26001                           
 26002                           ;I2C.c: 52: I2C_Wait();
 26003  005AB8  EC3A  F02E         	call	i2_I2C_Wait	;wreg free
 26004                           
 26005                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 26006  005ABC  5002               	movf	i2I2C_Read@a,w,c
 26007  005ABE  1003               	iorwf	i2I2C_Read@a+1,w,c
 26008  005AC0  A4D8               	btfss	status,2,c
 26009  005AC2  D002               	goto	i2u1240_40
 26010  005AC4  8AC5               	bsf	4037,5,c	;volatile
 26011  005AC6  D001               	goto	i2u1241_45
 26012  005AC8                     i2u1240_40:
 26013  005AC8  9AC5               	bcf	4037,5,c	;volatile
 26014  005ACA                     i2u1241_45:
 26015                           
 26016                           ;I2C.c: 54: ACKEN = 1;
 26017  005ACA  88C5               	bsf	4037,4,c	;volatile
 26018                           
 26019                           ;I2C.c: 55: return temp;
 26020  005ACC  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 26021  005AD0  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 26022  005AD4  0012               	return	
 26023  005AD6                     __end_ofi2_I2C_Read:
 26024                           	opt stack 0
 26025                           tosu	equ	0xFFF
 26026                           tosh	equ	0xFFE
 26027                           tosl	equ	0xFFD
 26028                           pclatu	equ	0xFFB
 26029                           pclath	equ	0xFFA
 26030                           tblptru	equ	0xFF8
 26031                           tblptrh	equ	0xFF7
 26032                           tblptrl	equ	0xFF6
 26033                           tablat	equ	0xFF5
 26034                           prodh	equ	0xFF4
 26035                           prodl	equ	0xFF3
 26036                           intcon	equ	0xFF2
 26037                           intcon2	equ	0xFF1
 26038                           intcon3	equ	0xFF0
 26039                           indf0	equ	0xFEF
 26040                           postinc0	equ	0xFEE
 26041                           fsr0h	equ	0xFEA
 26042                           fsr0l	equ	0xFE9
 26043                           wreg	equ	0xFE8
 26044                           indf1	equ	0xFE7
 26045                           postinc1	equ	0xFE6
 26046                           postdec1	equ	0xFE5
 26047                           plusw1	equ	0xFE3
 26048                           fsr1h	equ	0xFE2
 26049                           fsr1l	equ	0xFE1
 26050                           indf2	equ	0xFDF
 26051                           postinc2	equ	0xFDE
 26052                           postdec2	equ	0xFDD
 26053                           plusw2	equ	0xFDB
 26054                           fsr2h	equ	0xFDA
 26055                           fsr2l	equ	0xFD9
 26056                           status	equ	0xFD8
 26057                           
 26058 ;; *************** function i2_I2C_Wait *****************
 26059 ;; Defined at:
 26060 ;;		line 21 in file "src/I2C.c"
 26061 ;; Parameters:    Size  Location     Type
 26062 ;;		None
 26063 ;; Auto vars:     Size  Location     Type
 26064 ;;		None
 26065 ;; Return value:  Size  Location     Type
 26066 ;;                  1    wreg      void 
 26067 ;; Registers used:
 26068 ;;		wreg, status,2, status,0
 26069 ;; Tracked objects:
 26070 ;;		On entry : 0/0
 26071 ;;		On exit  : 0/0
 26072 ;;		Unchanged: 0/0
 26073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26074 ;;      Params:         0       0       0       0       0       0       0       0       0
 26075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26076 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26077 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26078 ;;Total ram usage:        1 bytes
 26079 ;; Hardware stack levels used:    1
 26080 ;; This function calls:
 26081 ;;		Nothing
 26082 ;; This function is called by:
 26083 ;;		i2_I2C_Start
 26084 ;;		i2_I2C_Stop
 26085 ;;		i2_I2C_Write
 26086 ;;		i2_I2C_Read
 26087 ;; This function uses a non-reentrant model
 26088 ;;
 26089                           
 26090                           	psect	text72
 26091  005C74                     __ptext72:
 26092                           	opt stack 0
 26093  005C74                     i2_I2C_Wait:
 26094                           	opt stack 20
 26095                           
 26096                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 26097                           
 26098                           ;incstack = 0
 26099  005C74  B4C7               	btfsc	4039,2,c	;volatile
 26100  005C76  D7FE               	goto	i2_I2C_Wait
 26101  005C78  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 26102  005C7C  0E1F               	movlw	31
 26103  005C7E  1601               	andwf	??i2_I2C_Wait,f,c
 26104  005C80  B4D8               	btfsc	status,2,c
 26105  005C82  0012               	return	
 26106  005C84  D7F7               	goto	i2_I2C_Wait
 26107  005C86                     __end_ofi2_I2C_Wait:
 26108                           	opt stack 0
 26109                           tosu	equ	0xFFF
 26110                           tosh	equ	0xFFE
 26111                           tosl	equ	0xFFD
 26112                           pclatu	equ	0xFFB
 26113                           pclath	equ	0xFFA
 26114                           tblptru	equ	0xFF8
 26115                           tblptrh	equ	0xFF7
 26116                           tblptrl	equ	0xFF6
 26117                           tablat	equ	0xFF5
 26118                           prodh	equ	0xFF4
 26119                           prodl	equ	0xFF3
 26120                           intcon	equ	0xFF2
 26121                           intcon2	equ	0xFF1
 26122                           intcon3	equ	0xFF0
 26123                           indf0	equ	0xFEF
 26124                           postinc0	equ	0xFEE
 26125                           fsr0h	equ	0xFEA
 26126                           fsr0l	equ	0xFE9
 26127                           wreg	equ	0xFE8
 26128                           indf1	equ	0xFE7
 26129                           postinc1	equ	0xFE6
 26130                           postdec1	equ	0xFE5
 26131                           plusw1	equ	0xFE3
 26132                           fsr1h	equ	0xFE2
 26133                           fsr1l	equ	0xFE1
 26134                           indf2	equ	0xFDF
 26135                           postinc2	equ	0xFDE
 26136                           postdec2	equ	0xFDD
 26137                           plusw2	equ	0xFDB
 26138                           fsr2h	equ	0xFDA
 26139                           fsr2l	equ	0xFD9
 26140                           status	equ	0xFD8
 26141                           tosu	equ	0xFFF
 26142                           tosh	equ	0xFFE
 26143                           tosl	equ	0xFFD
 26144                           pclatu	equ	0xFFB
 26145                           pclath	equ	0xFFA
 26146                           tblptru	equ	0xFF8
 26147                           tblptrh	equ	0xFF7
 26148                           tblptrl	equ	0xFF6
 26149                           tablat	equ	0xFF5
 26150                           prodh	equ	0xFF4
 26151                           prodl	equ	0xFF3
 26152                           intcon	equ	0xFF2
 26153                           intcon2	equ	0xFF1
 26154                           intcon3	equ	0xFF0
 26155                           indf0	equ	0xFEF
 26156                           postinc0	equ	0xFEE
 26157                           fsr0h	equ	0xFEA
 26158                           fsr0l	equ	0xFE9
 26159                           wreg	equ	0xFE8
 26160                           indf1	equ	0xFE7
 26161                           postinc1	equ	0xFE6
 26162                           postdec1	equ	0xFE5
 26163                           plusw1	equ	0xFE3
 26164                           fsr1h	equ	0xFE2
 26165                           fsr1l	equ	0xFE1
 26166                           indf2	equ	0xFDF
 26167                           postinc2	equ	0xFDE
 26168                           postdec2	equ	0xFDD
 26169                           plusw2	equ	0xFDB
 26170                           fsr2h	equ	0xFDA
 26171                           fsr2l	equ	0xFD9
 26172                           status	equ	0xFD8
 26173                           
 26174                           	psect	text73
 26175  000000                     __ptext73:
 26176                           	opt stack 0
 26177                           tosu	equ	0xFFF
 26178                           tosh	equ	0xFFE
 26179                           tosl	equ	0xFFD
 26180                           pclatu	equ	0xFFB
 26181                           pclath	equ	0xFFA
 26182                           tblptru	equ	0xFF8
 26183                           tblptrh	equ	0xFF7
 26184                           tblptrl	equ	0xFF6
 26185                           tablat	equ	0xFF5
 26186                           prodh	equ	0xFF4
 26187                           prodl	equ	0xFF3
 26188                           intcon	equ	0xFF2
 26189                           intcon2	equ	0xFF1
 26190                           intcon3	equ	0xFF0
 26191                           indf0	equ	0xFEF
 26192                           postinc0	equ	0xFEE
 26193                           fsr0h	equ	0xFEA
 26194                           fsr0l	equ	0xFE9
 26195                           wreg	equ	0xFE8
 26196                           indf1	equ	0xFE7
 26197                           postinc1	equ	0xFE6
 26198                           postdec1	equ	0xFE5
 26199                           plusw1	equ	0xFE3
 26200                           fsr1h	equ	0xFE2
 26201                           fsr1l	equ	0xFE1
 26202                           indf2	equ	0xFDF
 26203                           postinc2	equ	0xFDE
 26204                           postdec2	equ	0xFDD
 26205                           plusw2	equ	0xFDB
 26206                           fsr2h	equ	0xFDA
 26207                           fsr2l	equ	0xFD9
 26208                           status	equ	0xFD8
 26209                           
 26210                           	psect	rparam
 26211  0000                     tosu	equ	0xFFF
 26212                           tosh	equ	0xFFE
 26213                           tosl	equ	0xFFD
 26214                           pclatu	equ	0xFFB
 26215                           pclath	equ	0xFFA
 26216                           tblptru	equ	0xFF8
 26217                           tblptrh	equ	0xFF7
 26218                           tblptrl	equ	0xFF6
 26219                           tablat	equ	0xFF5
 26220                           prodh	equ	0xFF4
 26221                           prodl	equ	0xFF3
 26222                           intcon	equ	0xFF2
 26223                           intcon2	equ	0xFF1
 26224                           intcon3	equ	0xFF0
 26225                           indf0	equ	0xFEF
 26226                           postinc0	equ	0xFEE
 26227                           fsr0h	equ	0xFEA
 26228                           fsr0l	equ	0xFE9
 26229                           wreg	equ	0xFE8
 26230                           indf1	equ	0xFE7
 26231                           postinc1	equ	0xFE6
 26232                           postdec1	equ	0xFE5
 26233                           plusw1	equ	0xFE3
 26234                           fsr1h	equ	0xFE2
 26235                           fsr1l	equ	0xFE1
 26236                           indf2	equ	0xFDF
 26237                           postinc2	equ	0xFDE
 26238                           postdec2	equ	0xFDD
 26239                           plusw2	equ	0xFDB
 26240                           fsr2h	equ	0xFDA
 26241                           fsr2l	equ	0xFD9
 26242                           status	equ	0xFD8
 26243                           
 26244                           	psect	temp
 26245  00005F                     btemp:
 26246                           	opt stack 0
 26247  00005F                     	ds	1
 26248  0000                     int$flags	set	btemp
 26249  0000                     wtemp6	set	btemp+1
 26250                           tosu	equ	0xFFF
 26251                           tosh	equ	0xFFE
 26252                           tosl	equ	0xFFD
 26253                           pclatu	equ	0xFFB
 26254                           pclath	equ	0xFFA
 26255                           tblptru	equ	0xFF8
 26256                           tblptrh	equ	0xFF7
 26257                           tblptrl	equ	0xFF6
 26258                           tablat	equ	0xFF5
 26259                           prodh	equ	0xFF4
 26260                           prodl	equ	0xFF3
 26261                           intcon	equ	0xFF2
 26262                           intcon2	equ	0xFF1
 26263                           intcon3	equ	0xFF0
 26264                           indf0	equ	0xFEF
 26265                           postinc0	equ	0xFEE
 26266                           fsr0h	equ	0xFEA
 26267                           fsr0l	equ	0xFE9
 26268                           wreg	equ	0xFE8
 26269                           indf1	equ	0xFE7
 26270                           postinc1	equ	0xFE6
 26271                           postdec1	equ	0xFE5
 26272                           plusw1	equ	0xFE3
 26273                           fsr1h	equ	0xFE2
 26274                           fsr1l	equ	0xFE1
 26275                           indf2	equ	0xFDF
 26276                           postinc2	equ	0xFDE
 26277                           postdec2	equ	0xFDD
 26278                           plusw2	equ	0xFDB
 26279                           fsr2h	equ	0xFDA
 26280                           fsr2l	equ	0xFD9
 26281                           status	equ	0xFD8


Data Sizes:
    Strings     1958
    Constant    66
    Data        18
    BSS         487
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      94
    BANK0           160    147     160
    BANK1           256      0     242
    BANK2           256      0     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_82(CODE[3]), STR_80(CODE[7]), 
		 -> STR_79(CODE[3]), STR_77(CODE[7]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_73(CODE[4]), STR_72(CODE[5]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), 
		 -> STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), 
		 -> STR_10(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_82(CODE[3]), STR_80(CODE[7]), 
		 -> STR_79(CODE[3]), STR_77(CODE[7]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_73(CODE[4]), STR_72(CODE[5]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), 
		 -> STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), 
		 -> STR_10(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_82(CODE[3]), 
		 -> STR_80(CODE[7]), STR_79(CODE[3]), STR_77(CODE[7]), STR_76(CODE[7]), 
		 -> STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), wifi_MAC(BANK1[12]), STR_40(CODE[3]), 
		 -> STR_38(CODE[3]), ssid(BANK1[15]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> bufferSerial(BANK2[100]), STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), 
		 -> STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), 
		 -> STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[3]), STR_10(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_82(CODE[3]), 
		 -> STR_80(CODE[7]), STR_79(CODE[3]), STR_77(CODE[7]), STR_76(CODE[7]), 
		 -> STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), wifi_MAC(BANK1[12]), STR_40(CODE[3]), 
		 -> STR_38(CODE[3]), ssid(BANK1[15]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> bufferSerial(BANK2[100]), STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), 
		 -> STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), 
		 -> STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[3]), STR_10(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_135(CODE[3]), STR_134(CODE[5]), STR_133(CODE[3]), STR_132(CODE[1]), 
		 -> STR_131(CODE[5]), STR_130(CODE[7]), STR_129(CODE[1]), STR_128(CODE[5]), 
		 -> STR_127(CODE[6]), STR_126(CODE[18]), STR_125(CODE[19]), STR_124(CODE[19]), 
		 -> STR_123(CODE[19]), STR_122(CODE[20]), STR_121(CODE[9]), STR_120(CODE[7]), 
		 -> STR_119(CODE[8]), STR_118(CODE[8]), STR_117(CODE[10]), STR_116(CODE[18]), 
		 -> STR_115(CODE[18]), STR_114(CODE[18]), STR_113(CODE[17]), STR_112(CODE[17]), 
		 -> STR_111(CODE[17]), STR_110(CODE[17]), STR_109(CODE[20]), STR_108(CODE[20]), 
		 -> STR_107(CODE[20]), STR_104(CODE[11]), STR_101(CODE[10]), STR_98(CODE[9]), 
		 -> STR_97(CODE[10]), STR_96(CODE[9]), STR_95(CODE[15]), STR_94(CODE[18]), 
		 -> STR_93(CODE[20]), STR_92(CODE[10]), STR_91(CODE[22]), STR_90(CODE[21]), 
		 -> STR_89(CODE[15]), STR_88(CODE[12]), STR_86(CODE[3]), STR_85(CODE[14]), 
		 -> STR_84(CODE[20]), STR_69(CODE[3]), STR_48(CODE[18]), STR_47(CODE[6]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_39(CODE[14]), STR_29(CODE[9]), 
		 -> STR_28(CODE[21]), STR_27(CODE[17]), STR_26(CODE[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 597
		 -> STR_83(CODE[9]), STR_81(CODE[11]), STR_78(CODE[14]), STR_74(CODE[14]), 
		 -> STR_71(CODE[168]), STR_66(CODE[19]), STR_63(CODE[28]), STR_59(CODE[15]), 
		 -> STR_57(CODE[21]), STR_53(CODE[14]), STR_50(CODE[14]), STR_37(CODE[16]), 
		 -> STR_36(CODE[597]), STR_35(CODE[45]), STR_32(CODE[21]), STR_23(CODE[20]), 
		 -> STR_20(CODE[22]), STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_137(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), STR_106(CODE[10]), STR_105(CODE[7]), 
		 -> STR_103(CODE[11]), STR_102(CODE[8]), STR_100(CODE[11]), STR_99(CODE[7]), 
		 -> STR_87(CODE[12]), STR_80(CODE[7]), STR_77(CODE[7]), STR_73(CODE[4]), 
		 -> STR_70(CODE[12]), enviaDadosWifi@AUX(BANK0[15]), STR_68(CODE[4]), STR_65(CODE[4]), 
		 -> STR_62(CODE[4]), STR_58(CODE[4]), STR_56(CODE[4]), STR_52(CODE[4]), 
		 -> STR_49(CODE[4]), wifi_MAC(BANK1[12]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[3]), STR_41(CODE[3]), STR_38(CODE[3]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), STR_34(CODE[4]), 
		 -> NULL(NULL[0]), STR_31(CODE[4]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), STR_25(CODE[7]), STR_22(CODE[4]), 
		 -> STR_19(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 597
		 -> STR_135(CODE[3]), STR_134(CODE[5]), STR_133(CODE[3]), STR_132(CODE[1]), 
		 -> STR_131(CODE[5]), STR_130(CODE[7]), STR_129(CODE[1]), STR_128(CODE[5]), 
		 -> STR_127(CODE[6]), STR_126(CODE[18]), STR_125(CODE[19]), STR_124(CODE[19]), 
		 -> STR_123(CODE[19]), STR_122(CODE[20]), STR_121(CODE[9]), STR_120(CODE[7]), 
		 -> STR_119(CODE[8]), STR_118(CODE[8]), STR_117(CODE[10]), STR_116(CODE[18]), 
		 -> STR_115(CODE[18]), STR_114(CODE[18]), STR_113(CODE[17]), STR_112(CODE[17]), 
		 -> STR_111(CODE[17]), STR_110(CODE[17]), STR_109(CODE[20]), STR_108(CODE[20]), 
		 -> STR_107(CODE[20]), STR_104(CODE[11]), STR_101(CODE[10]), STR_98(CODE[9]), 
		 -> STR_97(CODE[10]), STR_96(CODE[9]), STR_95(CODE[15]), STR_94(CODE[18]), 
		 -> STR_93(CODE[20]), STR_92(CODE[10]), STR_91(CODE[22]), STR_90(CODE[21]), 
		 -> STR_89(CODE[15]), STR_88(CODE[12]), STR_86(CODE[3]), STR_85(CODE[14]), 
		 -> STR_84(CODE[20]), STR_83(CODE[9]), STR_81(CODE[11]), STR_78(CODE[14]), 
		 -> STR_74(CODE[14]), STR_71(CODE[168]), STR_69(CODE[3]), STR_66(CODE[19]), 
		 -> STR_63(CODE[28]), STR_59(CODE[15]), STR_57(CODE[21]), STR_53(CODE[14]), 
		 -> STR_50(CODE[14]), STR_48(CODE[18]), STR_47(CODE[6]), STR_46(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[14]), STR_37(CODE[16]), STR_36(CODE[597]), 
		 -> STR_35(CODE[45]), STR_32(CODE[21]), STR_29(CODE[9]), STR_28(CODE[21]), 
		 -> STR_27(CODE[17]), STR_26(CODE[20]), STR_23(CODE[20]), STR_20(CODE[22]), 
		 -> STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    S1796__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1796__prbuf$ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), portServer(BANK1[4]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    findBufferSerial@key	PTR unsigned char  size(2) Largest target is 7
		 -> STR_82(CODE[3]), STR_79(CODE[3]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_72(CODE[5]), STR_67(CODE[2]), STR_64(CODE[3]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_55(CODE[5]), STR_54(CODE[3]), STR_51(CODE[3]), 
		 -> STR_40(CODE[3]), STR_30(CODE[7]), STR_24(CODE[3]), STR_21(CODE[3]), 
		 -> STR_18(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), 

    setKeyStartReceiveSerial@start	PTR unsigned char  size(2) Largest target is 7
		 -> STR_80(CODE[7]), STR_77(CODE[7]), STR_73(CODE[4]), STR_68(CODE[4]), 
		 -> STR_65(CODE[4]), STR_62(CODE[4]), STR_58(CODE[4]), STR_56(CODE[4]), 
		 -> STR_52(CODE[4]), STR_49(CODE[4]), STR_38(CODE[3]), STR_34(CODE[4]), 
		 -> STR_31(CODE[4]), STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), 
		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@ret	PTR unsigned char  size(2) Largest target is 20
		 -> portServer(BANK1[4]), ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), 

    getStringJSON@buff	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@key	PTR unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[3]), STR_41(CODE[3]), 

    main$1655	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_106(CODE[10]), STR_105(CODE[7]), 

    main$1650	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_103(CODE[11]), STR_102(CODE[8]), 

    main$1645	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_100(CODE[11]), STR_99(CODE[7]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(COMRAM[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(COMRAM[1]), wifi_habilita_alteracao(COMRAM[1]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(COMRAM[1]), t_flap_ligado(COMRAM[1]), h_buzzer(COMRAM[1]), 
		 -> h_modo_seguranca(BANK0[1]), h_venotinha(COMRAM[1]), h_flap(COMRAM[1]), h_abafador(COMRAM[1]), 
		 -> wifi_SENHA(COMRAM[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(COMRAM[1]), buzzer(BANK0[1]), 
		 -> fornalha(COMRAM[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _receiveByteSerial->i2_strlen
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_alterarDadosConexaoConfigWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarDadosConexaoConfigWifi->_getStringJSON
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _setKeyStartReceiveSerial->_sprintf
    _printf->__doprnt
    _getStringJSON->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _findBufferSerial->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  184440
                                            129 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
      _alterarDadosConexaoConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11829
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18905
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      23    23      0   39854
                                             99 BANK0     23    23      0
                             ___wmul
                              _delay
                   _findBufferSerial
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarDadosConexaoConfigWifi                        1     1      0   63447
                                            128 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                   _findBufferSerial
                      _getStringJSON
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2570
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1086
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setKeyStartReceiveSerial                             2     0      2   16063
                                             49 BANK0      2     0      2
                             _memset
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    5068
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _getStringJSON                                       79    73      6   16559
                                             49 BANK0     79    73      6
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   11964
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3420
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     743
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _findBufferSerial                                     2     0      2    3753
                                             20 BANK0      2     0      2
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     1      4    2287
                                             15 BANK0      5     1      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     748
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     240
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1447
                                             29 COMRAM    19    19      0
                        _readButtons
                  _receiveByteSerial
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _receiveByteSerial                                    3     3      0     160
                                              6 COMRAM     3     3      0
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarDadosConexaoConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getStringJSON
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _receiveByteSerial
     i2_strlen
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BD      20        0.0%
DATA                 0      0     2BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Jul 15 09:21:43 2020

                       i2_setRangeValor 51FA                       setRangeValor@_aux 006E  
                     setRangeValor@_max 0068                 __size_of_readEEPROM_ext 0052  
                     setRangeValor@_min 0067                      __size_of_I2C_Start 0008  
                   tabelaUmidade@_clima 0062                      __size_of_I2C_Write 000A  
                                    _GO 007E11                      setRangeValor@_acao 006D  
                    _tipo_modo_trabalho 0059                             __CFG_BOR$ON 000000  
                   ___wmul@multiplicand 0062                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                          ___ftadd@exp1 0086                            ___ftadd@exp2 0085  
                          ___ftadd@sign 0084               __size_of_findBufferSerial 0028  
                           __CFG_WDT$ON 000000                                     l300 5C40  
                                   l221 5C1E                                     l311 1672  
                                   l304 1C76                                     l233 5A58  
                                   l305 1C4C                                     l321 16B8  
                                   l313 1680                                     l234 5A5A  
                                   l250 4EAC                                     l410 1922  
                                   l306 1642                                     l235 5A62  
                                   l251 4E1C                                     l331 1712  
                                   l323 16C6                                     l315 168E  
                                   l307 1656                                     l236 5A64  
                                   l500 1BB0                                     l412 1946  
                                   l237 5A6C                                     l253 4E40  
                                   l333 1736                                     l325 16D4  
                                   l317 169C                                     l309 1664  
                                   l238 5A6E                                     l254 4E64  
                                   l510 1C04                                     l239 5A76  
                                   l255 4E88                                     l263 5A8C  
                                   l319 16AA                                     l504 1BD4  
                                   l408 1902                                     l281 4FE6  
                                   l329 16F2                                     l514 1C1C  
                                   l506 1BEC                                     l450 1A40  
                                   l434 19D6                                     l283 5014  
                                   l275 4FC0                                     l268 4C46  
                                   l436 19F6                                     l277 4FCA  
                                   l525 25E8                                     l453 1A56  
                                   l278 4FD6                                     l526 1C82  
                                   l518 1C34                                     l535 1CD0  
                                   l391 188C                                     l367 1804  
                                   l288 59E0                                     l800 23EC  
                                   l640 1F38                                     l480 1B14  
                                   l289 59CA                                     l633 1F0C  
                                   l561 1D86                                     l537 1CF0  
                                   l369 1824                                     l810 243C  
                                   l802 23FC                                     l650 1F92  
                                   l642 1F48                                     l490 1B5C  
                                   l482 1B2C                                     l474 1AE0  
                                   l571 1DBC                                     l555 1D64  
                                   l900 46EA                                     l820 248C  
                                   l812 244C                                     l804 240C  
                                   l652 1FB8                                     l549 1D30  
                                   l910 57EC                                     l638 25FE  
                                   l830 24DC                                     l822 249C  
                                   l814 245C                                     l806 241C  
                                   l670 2046                                     l662 1FF6  
                                   l654 1FC8                                     l646 1F62  
                                   l494 1B80                                     l486 1B44  
                                   l639 1F22                                     l840 252C  
                                   l832 24EC                                     l824 24AC  
                                   l816 246C                                     l808 242C  
                                   l760 229E                                     l672 2056  
                                   l664 2006                                     l496 1B98  
                                   l920 474A                                     l905 57F6  
                                   l753 222E                                     l921 476C  
                                   l906 57CC                                     l850 257C  
                                   l842 253C                                     l834 24FC  
                                   l826 24BC                                     l818 247C  
                                   l770 22E6                                     l754 2244  
                                   l674 2066                                     l666 2016  
                                   l914 47E4                                     l930 4790  
                                   l587 1E10                                     l923 4760  
                                   l915 472C                                     l908 57D8  
                                   l852 258C                                     l844 254C  
                                   l836 250C                                     l828 24CC  
                                   l780 234C                                     l772 22F6  
                                   l756 2254                                     l748 2212  
                                   l684 20AA                                     l676 2076  
                                   l932 4798                                     l916 4750  
                                   l909 57E2                                     l933 47BA  
                                   l925 4768                                     l942 5098  
                                   l854 259C                                     l846 255C  
                                   l838 251C                                     l790 239C  
                                   l782 235C                                     l774 2306  
                                   l766 22C6                                     l758 227A  
                                   l694 20E8                                     l678 2086  
                                   l926 47F8                                     l918 4742  
                                   l951 5090                                     l943 5040  
                                   l935 47AE                                     l927 4778  
                                   l880 45F4                                     l856 25C2  
                                   l848 256C                                     l792 23AC  
                                   l784 236C                                     l776 2316  
                                   l768 22D6                                     l696 20F8  
                                   l688 20C4                                     l928 479E  
                                   l881 45FE                                     l945 5060  
                                   l937 47B6                                     l882 4608  
                                   l954 50B6                                     l858 25D2  
                                   l794 23BC                                     l786 237C  
                                   l778 233C                                     l938 47C6  
                                   l891 4688                                     l883 4612  
                                   l980 3198                                     l972 314C  
                                   l876 4638                                     l948 50A6  
                                   l796 23CC                                     l788 238C  
                                   l981 31B8                                     l877 461C  
                                   l949 5066                                     l990 3260  
                                   l886 46A2                                     l878 45EA  
                                   l798 23DC                                     l975 3604  
                                   l983 31D0                                     l887 4654  
                                   l992 328A                                     l984 31F0  
                                   l976 315C                                     l896 46BE  
                                   l889 466E                                     l994 3308  
                                   l986 3208                                     l978 3180  
                                   l898 46D4                                     l995 3328  
                                   l987 3228                                     l997 334C  
                                   l989 3240                                     l998 33E4  
                          __CFG_CPB$OFF 000000                                     _PEN 007E2A  
                          __CFG_CPD$OFF 000000                                     _SEN 007E28  
                                   _hor 0046                                     _min 0047  
                                   _sec 0048                             ?i2_I2C_Read 0002  
                           ?i2_I2C_Wait 0001                             ?i2_I2C_Stop 0001  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                            ?_atualizaLCD 0068  
                          __CFG_FOSC$HS 000000                    __size_of_I2C_Restart 0008  
                        getStringJSON@i 00DE                          getStringJSON@j 00DB  
                          __CFG_LVP$OFF 000000                            ___ftdiv@cntr 0090  
                          ___ftdiv@sign 0095                                    l1001 3550  
                                  l1003 357E                                    l1012 35FE  
                                  l1005 35AC                                    l1021 2C16  
                                  l1030 2CC0                                    l1007 35DA  
                                  l1023 2C2E                                    l1015 2BD6  
                                  l1200 3EEE                                    l1040 2D7E  
                                  l1032 2CE6                                    l1024 2C4E  
                                  l2000 4A8A                                    l1201 3F06  
                                  l1202 3F48                                    l1018 2F70  
                                  l1050 2F38                                    l1042 2D96  
                                  l2002 4AA2                                    l1043 2DFC  
                                  l1019 2BF2                                    l2003 4AB2  
                                  l1204 3F92                                    l1044 2DCE  
                                  l1036 2D16                                    l1028 2C7A  
                                  l2020 489C                                    l1300 044A  
                                  l1061 300C                                    l1045 2DFA  
                                  l1037 2D46                                    l1029 2CBC  
                                  l1062 302C                                    l1054 2F6A  
                                  l1310 055C                                    l2111 56EE  
                                  l1071 30F4                                    l1047 2F00  
                                  l1039 2D5E                                    l1231 368E  
                                  l2112 56E6                                    l2032 5C02  
                                  l1152 5342                                    l1056 311E  
                                  l1064 30F6                                    l1224 51D4  
                                  l1240 38E6                                    l1400 13DE  
                                  l1312 066A                                    l1304 048C  
                                  l2121 586A                                    l1161 3BD6  
                                  l1073 3118                                    l1065 3054  
                                  l1057 2FD4                                    l1049 2F18  
                                  l2025 48D0                                    l2017 4834  
                                  l1241 3802                                    l1233 3696  
                                  l1401 0E9E                                    l1313 0586  
                                  l2122 5862                                    l1154 5354  
                                  l1162 3BBE                                    l1066 3078  
                                  l2026 48C4                                    l1250 3A02  
                                  l1234 36B2                                    l1410 0FA6  
                                  l1402 0ECC                                    l1314 05C4  
                                  l2115 570E                                    l1155 5360  
                                  l1163 3BD2                                    l1059 2FF4  
                                  l2019 48AC                                    l1243 38B8  
                                  l1411 0FD4                                    l1323 0A8A  
                                  l1331 073A                                    l1307 0512  
                                  l2116 5718                                    l1156 5376  
                                  l1172 3CD6                                    l1068 3096  
                                  l2028 48EC                                    l1252 3A38  
                                  l1420 10E2                                    l1404 0EF6  
                                  l1324 067A                                    l1308 0528  
                                  l2125 5882                                    l1157 53AE  
                                  l1181 3D6E                                    l1229 3A60  
                                  l1237 37AC                                    l1413 0FFE  
                                  l1405 0F24                                    l1317 05EE  
                                  l2062 549C                                    l2126 588C  
                                  l1190 3E36                                    l1174 3CF6  
                                  l1254 3A44                                    l1246 38F2  
                                  l1422 110C                                    l1414 102C  
                                  l1350 0E22                                    l1342 07E0  
                                  l1326 06A6                                    l1318 0664  
                                  l2063 54AA                                    l2135 5A36  
                                  l1175 3D78                                    l1167 3C86  
                                  l1239 37BA                                    l1431 121A  
                                  l1423 1140                                    l1407 0F4E  
                                  l1343 080E                                    l1335 0770  
                                  l1319 0636                                    l2136 5A24  
                                  l1176 3D2A                                    l1440 1322  
                                  l1432 1248                                    l1416 1056  
                                  l1408 0F7C                                    l1344 0898  
                                  l1280 02B4                                    l1193 3E38  
                                  l1185 3D7E                                    l1257 3A7C  
                                  l1249 39D4                                    l1441 1350  
                                  l1425 116A                                    l1417 1084  
                                  l1353 0DB4                                    l1361 0B42  
                                  l1345 091E                                    l1329 072A  
                                  l2058 5468                                    l1194 3E4C  
                                  l1186 3D94                                    l1178 3D38  
                                  l1434 1272                                    l1426 1198  
                                  l1354 0AA8                                    l1346 09B6  
                                  l1274 0230                                    l2059 545C  
                                  l2323 49DA                                    l1179 3D3C  
                                  l1259 3B08                                    l1451 1476  
                                  l1443 137A                                    l1435 12A0  
                                  l1419 10AE                                    l1355 0DFA  
                                  l1363 0B70                                    l1291 0A48  
                                  l1347 09CE                                    l1339 07A4  
                                  l1283 02F0                                    l2324 4900  
                                  l1196 3E5E                                    l1188 3DAA  
                                  l1452 1420                                    l1428 11C2  
                                  l1364 0BD6                                    l1356 0AAC  
                                  l1348 09D4                                    l1292 03C4  
                                  l1276 025C                                    l2325 49D0  
                                  l1453 1486                                    l1437 12CA  
                                  l1429 11F0                                    l1381 0D50  
                                  l1373 0CD8                                    l1357 0AE0  
                                  l1349 0A40                                    l1293 03FC  
                                  l1285 033E                                    l2318 54EE  
                                  l1198 3EA4                                    l1462 15C6  
                                  l1470 1568                                    l1454 1428  
                                  l1438 12F8                                    l1366 0C38  
                                  l1294 041E                                    l1278 0288  
                                  l1471 1596                                    l1463 14B8  
                                  l1383 0D6C                                    l1367 0C6C  
                                  l1359 0B0A                                    l1287 0346  
                                  l1640 2912                                    l1464 14E6  
                                  l1448 14AE                                    l1456 1470  
                                  l1392 140E                                    l1296 042E  
                                  l1288 0376                                    l1633 2608  
                                  l1473 15C0                                    l1385 0D8C  
                                  l1377 0D14                                    l1369 0C96  
                                  l2290 4D5C                                    l1634 2678  
                                  l1466 15DC                                    l2291 4D98  
                                  l1635 264C                                    l1467 1510  
                                  l1387 0DB0                                    l1660 281C  
                                  l1652 279A                                    l1484 5AEC  
                                  l1476 1606                                    l1468 153E  
                                  l1396 1380                                    l2277 5688  
                                  l1645 2948                                    l1661 287C  
                                  l1485 5AD8                                    l1397 0E40  
                                  l2278 5682                                    l1670 29CC  
                                  l1662 28CA                                    l1646 2706  
                                  l1638 26A4                                    l1582 4380  
                                  l1398 0E74                                    l1671 29F0  
                                  l1655 27A4                                    l1647 2740  
                                  l1680 2AE4                                    l1672 29F8  
                                  l1664 28DC                                    l1656 27DE  
                                  l1648 2750                                    l1584 43B8  
                                  l1920 4F28                                    l2289 4DDA  
                                  l1665 2900                                    l1657 2808  
                                  l1649 274A                                    l1577 43F2  
                                  l1585 43EC                                    l1921 4F12  
                                  l1682 2AEA                                    l1666 2982  
                                  l1578 42D2                                    l1683 2B6C  
                                  l1675 2A3A                                    l1579 435C  
                                  l1923 4F50                                    l1684 2B96  
                                  l1676 2A64                                    l1924 4F46  
                                  l1917 4EF4                                    l1918 4EEA  
                                  l1679 2ABA                                    l1952 4492  
                                  l1962 44EE                                    l1971 452C  
                                  l1963 44E4                                    l1972 4522  
                                  l1948 4468                                    l1957 44F8  
                                  l1981 4B16                                    l7101 1B14  
                                  l1974 4550                                    l1990 52F6  
                                  l1975 456C                                    l1983 4B3E  
                                  l7015 19F6                                    l1976 459C  
                                  l1984 4B7C                                    l1985 4BA2  
                                  l7201 1CD0                                    l7009 19D6  
                                  l1996 4A20                                    l1989 52C6  
                                  l7125 1B80                                    l1998 4A48  
                                  l6431 27A4                                    l1999 4A7A  
                                  l7207 1CF0                                    l7143 1BD4  
                                  l7047 1A66                                    l6441 281C  
                                  l6259 5322                                    l7403 1F0C  
                                  l7245 1D64                                    l6543 4900  
                                  l6279 5C8A                                    l7415 1F38  
                                  l7183 1C92                                    l7089 1AE0  
                                  l6475 2986                                    l6651 5AD8  
                                  l7443 1FB8                                    l8341 4FB8  
                                  l7437 1F92                                    l6639 5A84  
                                  l6743 4C3E                                    l6831 1736  
                                  l9225 38EA                                    l9209 37FA  
                                  l7705 233C                                    l7481 2046  
                                  l6825 1712                                    l6683 5A24  
                                  l7651 2244                                    l8349 4FCE  
                                  l9261 3A74                                    l7661 227A  
                                  l8711 35D2                                    l7639 2212  
                                  l6927 189C                                    l6775 1656  
                                  l9185 36AA                                    l6961 1902  
                                  l7667 229E                                    l6891 1824  
                                  l9443 0228                                    _ADON 007E10  
                                  l6973 1946                                    l6885 1804  
                                  l9279 3B00                                    l7863 25C2  
                                  l6967 1922                                    l9455 0254  
                                  l8675 3548                                    l9467 0280  
                                  l8687 3576                                    l9479 02AC  
                                  l8699 35A4                                    l8875 30F4  
                                  STR_1 7EC8                                    STR_2 7EA6  
                                  STR_3 7EBD                                    STR_4 7EFE  
                                  STR_5 7FDA                                    STR_6 7FBA  
                                  STR_7 7F91                                    STR_8 7FD5  
                                  STR_9 7FEC                                    u8000 2782  
                                  _RCIF 007CF5                                    _RCEN 007E2B  
                                  u8200 2A74                                    u8130 29B2  
                                  u8300 4946                                    u8310 4970  
                                  u8070 2872                                    u8038 27C8  
                                  u8320 4990                                    u8080 28B4  
                                  u8330 49BE                                    u8170 2A00  
                                  u9210 1932                                    u8315 496A  
                                  u8307 493C                                    u8260 2BA0  
                                  u8068 2840                                    u8317 4960  
                                  u8077 2868                                    u8069 2874  
                                  u8350 54DC                                    u8270 2BBA  
                                  u8238 2AA4                                    u8510 4EDC  
                                  u8327 4986                                    u8087 28AA  
                                  u8280 4920                                    u8600 59AA  
                                  u9080 188A                                    u8337 49B4  
                                  u8370 551A                                    u8450 4DC4  
                                  u8258 2B56                                    u9330 19C2  
                                  u9170 18F2                                    u7820 56F2  
                                  u9340 19D2                                    u8700 16B4  
                                  u8357 54D2                                    u8470 4E04  
                                  u8198 2A24                                    u8550 4F5A  
                                  u9430 1A3C                                    u9350 19E6  
                                  u9190 1912                                    u8710 16C2  
                                  u8630 1652                                    u8287 4916  
                                  u8615 59AC                                    u8480 4E0A  
                                  u9440 1A54                                    u8720 16D0  
                                  u8640 1660                                    u8377 5510  
                                  u8457 4DBA                                    u7850 586E  
                                  u9700 1B94                                    u9620 1B28  
                                  u8660 167C                                    u8477 4DFA  
                                  u9550 1AD0                                    u8750 1702  
                                  u8670 168A                                    u9800 1C18  
                                  u9720 1BAC                                    u9640 1B40  
                                  u8680 1698                                    u7890 56A8  
                                  u9730 1BC0                                    u8770 1722  
                                  u8690 16A6                                    u9820 1C30  
                                  u9740 1BD0                                    u9660 1B58  
                                  u7990 277C                                    u7958 2636  
                                  u9910 1CE0                                    u9830 1C48  
                                  u9670 1B6C                                    u9590 1B04  
                                  u8950 17F4                                    u9760 1BE8  
                                  u9680 1B7C                                    u7897 569E  
                                  u8970 1814                                    u9780 1C00  
                                  u7997 2772                                    u9890 1CC0  
                                  _RSEN 007E29                         _f_wifi_processo 003D  
                                  __led 005C                       ?_Lcd_Write_String 0064  
                                  __sec 0150                                    _fase 00F6  
                                  _main 0012                                    _leds 0043  
                          ___ftpack@arg 0060                                    _menu 00FD  
                          ___ftpack@exp 0063                                    _temp 00FE  
                      __end_of_I2C_Read 59B8                                    _umid 005D  
                                  fsr0h 000FEA                                    _ssid 01C9  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 005F                        __end_of_I2C_Wait 5C74  
                      __end_of_I2C_Stop 5CD2                            ?i2_I2C_Start 0001  
                                  prodh 000FF4                                    prodl 000FF3  
                          ?i2_I2C_Write 0002                         __end_ofi2_delay 5BE8  
                                  start 000E                      ??_Lcd_Write_String 0066  
                         __CFG_IESO$OFF 000000                         ??_getStringJSON 0097  
                       __end_of_Lcd_Cmd 5BC4                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 0079                            ___param_bank 000000  
                          ___ftmul@sign 007A              __size_of_receiveByteSerial 006E  
                          ___fttol@exp1 00A4                            ___fttol@lval 00A0  
                      ?_I2C_Master_Init 006D                           __CFG_PLLDIV$1 000000  
                          ?_readButtons 0001                          __CFG_CCP2MX$ON 000000  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___ftadd 45C2  
                                 STR_10 7FE2                                   STR_11 7E56  
                                 STR_12 7FEF                                   STR_20 7BC2  
                                 STR_21 7FEF                                   STR_13 7FE2  
                                 STR_22 7FE2                                   STR_30 7FAD  
                                 STR_14 7E48                                   STR_15 7FEF  
                                 STR_31 7FE2                                   STR_23 7C42  
                                 STR_24 7FEF                                   STR_16 7FE2  
                                 STR_40 7FE9                                   STR_32 7C03  
                                 STR_33 7C7C                                   STR_41 7FF2  
                                 STR_25 7FAD                                   STR_17 7B83  
                                 STR_18 7FEF                                   STR_34 7FE2  
                                 STR_42 7FF8                                   STR_50 7E3A  
                                 STR_26 7CCE                                   STR_51 7FEF  
                                 STR_19 7FE2                                   STR_43 7FF5  
                                 STR_27 7D9A                                   STR_35 7B56  
                                 STR_52 7FE2                                   STR_44 7FB1  
                                 STR_60 7FFB                                   STR_28 7C18  
                                 STR_36 7859                                   STR_45 7F0F  
                                 STR_61 7FFD                                   STR_29 7F39  
                                 STR_53 7E2C                                   STR_37 7DEF  
                                 STR_54 7FEF                                   STR_62 7FE2  
                                 STR_46 7F0F                                   STR_38 7FE6  
                                 STR_70 7E8E                                   STR_55 7FD0  
                                 STR_47 7FC0                                   STR_39 7E72  
                                 STR_63 7BA6                                   STR_71 7AAE  
                                 STR_80 7F83                                   STR_64 7FEF  
                                 STR_56 7FE2                                   STR_72 7FCB  
                                 STR_48 7D2E                                   STR_73 7FE2  
                                 STR_65 7FE2                                   STR_49 7FE2  
                                 STR_81 7EB2                                   STR_57 7BEE  
                                 STR_82 7FEF                                   STR_58 7FE2  
                                 STR_74 7E64                                   STR_66 7CE2  
                                 STR_90 7C2D                                   STR_67 7C7C  
                                 STR_75 7FEF                                   STR_83 7F30  
                                 STR_59 7DFF                                   STR_91 7BD8  
                                 STR_68 7FDE                                   STR_76 7F8A  
                                 STR_92 7F1C                                   STR_84 7CBA  
                                 STR_69 7F0F                                   STR_77 7F83  
                                 STR_85 7E80                                   STR_93 7C56  
                                 STR_78 7E3A                                   STR_86 7F0F  
                                 STR_94 7D40                                   STR_87 7E8E  
                                 STR_79 7FEF                                   STR_95 7E0E  
                                 STR_96 7F4B                                   STR_88 7E9A  
                                 STR_97 7F08                                   STR_89 7E1D  
                                 STR_98 7F54                                   STR_99 7F98  
                       __end_of___ftdiv 4BD4                                   u10010 1D54  
                       __end_of___lldiv 54BC                                   u11100 228A  
                                 u11020 2202                                   u11200 2326  
                                 u12010 44C2                                   u11210 2336  
                                 u11050 222C                                   u10410 1EFC  
                                 u11300 23C6                                   u11220 2346  
                                 u11060 223E                                   u10500 1F7E  
                       __end_of___ftmul 4AEC                                   u11310 23D6  
                                 u11230 2356                                   u11150 22D0  
                                 u11070 224E                                   u11400 2466  
                                 u11320 23E6                                   u11160 22E0  
                                 u11080 2264                                   u10520 1FA2  
                                 u10440 1F20                                   _T0CON 000FD5  
                                 u12121 4AFE                                   u13010 2C76  
                                 u12050 4500                                   u11410 2476  
                                 u11170 22F0                                   u11090 2274  
                                 u10530 1FB2                                   u10450 1F32  
                                 u11500 2506                                   u11420 2486  
                                 u11340 2406                                   u11260 2386  
                                 u11180 2300                                   u10620 2030  
                                 u10460 1F42                                   u12141 4B26  
                                 u13110 2F60                                   u11510 2516  
                                 u11430 2496                                   u11350 2416  
                                 u11270 2396                                   u11190 2310  
                                 u10630 2040                                   u13040 2D0E  
                                 u12080 4534                                   u12320 48D6  
                                 u11600 25AC                                   u11520 2526  
                                 u11440 24A6                                   u11360 2426  
                                 u11280 23A6                                   u10720 20BE  
                                 u10480 1F5C                                   u11610 25BC  
                                 u11530 2536                                   u11450 24B6  
                                 u11370 2436                                   u11290 23B6  
                                 u12171 4A08                                   u12500 5020  
                                 u14020 3736                                   u11620 25CC  
                                 u11540 2546                                   u11460 24C6  
                                 u11380 2446                                   u12261 4818  
                       __end_of___fttol 48FE                                   u12350 546C  
                                 u11630 25E2                                   u11550 2556  
                                 u11470 24D6                                   u11390 2456  
                                 u10750 20E2                                   u10590 2000  
                                 u12191 4A30                                   u12280 4852  
                                 u11560 2566                                   u11480 24E6  
                                 u10760 20F2                                   u11650 5B4C  
                                 u11810 5390                                   u12450 4F88  
                                 u11570 2576                                   u11490 24F6  
                                 u14140 3A2A                                   u11580 2586  
                                 u14300 027C                                   u12285 484A  
                                 u11590 2596                                   u11671 4276  
                                 u11911 4426                                   u11840 5198  
                                 u14160 3ABA                                   u14320 02A8  
                                 u11681 4288                                   u11921 443A  
                                 u14090 3976                                   u14235 555C  
                                 u11691 429A                                   u11835 53AA  
                                 u12900 3572                                   u11836 53AC  
                                 u11828 5394                                   u14180 3B46  
                                 u14340 02D4                                   u13710 3C82  
                                 u11950 445A                                   u11870 51B8  
                                 u12920 35A0                                   u11864 51A8  
                                 u14280 0250                                   u13625 3B88  
                                 u11865 51A4                                   u11858 519C  
                                 u14610 0AA2                                   u13627 3B8A  
                                 u12940 35CE                                   u11980 4484  
                                 u11894 51C8                                   u11895 51C4  
                                 u12960 35FC                                   u12880 3540  
                                 u13680 3C3C                                   u11888 51BC  
                                 u14720 0CBA                                   u13665 3BCE  
                                 u13667 3BD0                                   u14740 0CF6  
                                 u15607 53FE                                   u13880 3E16  
                                 u14840 0E32                                   u14760 0D32  
                                 u15617 5BB6                                   u15537 5188  
                                 u13890 3E22                                   u15627 5590  
                                 u15547 4FA0                                   u15557 5AE0  
                                 u15567 58F8                                   u13896 3E24  
                                 u15577 590C                                   u15587 53CE  
                                 u15597 53E6                         __end_of___lwdiv 5722  
                       __end_of___lwmod 5896                                   i2l942 5268  
                                 i2l951 5260                                   i2l943 5210  
                                 i2l945 5230                                   i2l954 5286  
                                 i2l948 5276                                   i2l949 5236  
                                 _RCREG 000FAE                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _SPBRG 000FAF  
                         __CFG_USBDIV$1 000000                         __end_of__doprnt 2BC6  
               __size_of_Lcd_Set_Cursor 00B4                                   _TXREG 000FAD  
                       _writeEEPROM_ext 5896                           __CFG_PWRT$OFF 000000  
                       __end_of_btPress 5C44                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                           __BF_i_count 0040                           __CFG_WRT3$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                      __size_of_UART_Init 001C  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                         __end_of_readADC 51FA  
                        __CFG_EBTRB$OFF 000000                                   _delay 5AD6  
                                 _blink 59B8                                   __temp 0121  
                                 _clima 00F5                                   __umid 0100  
                       __end_of_dpowers 7859                                   _line1 0191  
                                 _line2 017C                                   _line3 0167  
                                 _line4 0152                             __BF_current 003F  
                       __end_of_isdigit 5C0A                                   _senha 01BA  
                         ___ftpack@sign 0064                _contador_fase_automatica 02D8  
                                 _timer 3FAC                                   _putch 5C86  
                                 main@i 00F2                       __end_of_I2C_Start 5CDA  
                        __pbitbssCOMRAM 02D8                       __end_of_I2C_Write 5CB8  
                                 pclath 000FFA                   __end_of_setRangeValor 50C4  
                                 tablat 000FF5                                   plusw1 000FE3  
                 setRangeValor@_var_ajt 0065                                   plusw2 000FDB  
                                 status 000FD8                 __end_ofi2_setRangeValor 5294  
      __end_of_setKeyStartReceiveSerial 560A                                   wtemp6 0060  
                       __end_of_sprintf 5852                          setUmidade@_umd 0079  
                       __end_of_strncmp 49F6                          __CFG_ICPRT$OFF 000000  
                      atualizaLCD@line1 0068                        atualizaLCD@line2 006A  
                      atualizaLCD@line3 006C                        atualizaLCD@line4 006E  
                 i2writeEEPROM_ext@data 0004                          __CFG_PBADEN$ON 000000  
                      __end_of_Lcd_Init 5438                        __end_of_Lcd_Port 5A7A  
                      __end_ofi2_strlen 57C6                     __size_ofi2_I2C_Read 002E  
                   __size_ofi2_I2C_Wait 0012                         __initialization 50C4  
                   __size_ofi2_I2C_Stop 0008                            __end_of_main 1634  
                      getStringJSON@key 0093                        getStringJSON@res 0099  
                      getStringJSON@ret 0095                        _ajuste_parametro 0044  
                                ??_main 00E1                           ___fttol@sign1 009F  
                          i2I2C_Write@d 0002                     _enviaDadosWifi$2519 00D4  
                    __size_of_Lcd_Clear 000E                           __activetblptr 000002  
                        _enviaDadosWifi 2BC6                              i2strlen@cp 0005  
                             I2C_Read@a 0061                      readEEPROM_ext@data 0066  
                                ?_delay 0060                                  ?_blink 0060  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                                  STR_100 7ED3  
                                STR_101 7F12                                  STR_102 7F5D  
                                STR_110 7DAB                                  STR_103 7EDE  
                                STR_111 7DBC                                  STR_120 7FA6  
                                STR_104 7EE9                                  STR_112 7DCD  
                                STR_105 7F9F                                  STR_121 7F42  
                                STR_113 7DDE                                  STR_130 7F7C  
                                STR_106 7EF4                                  STR_114 7D52  
                                STR_122 7C6A                                  _ADRESH 000FC4  
                                STR_131 7FC6                                  STR_115 7D64  
                                STR_123 7D08                                  STR_107 7C92  
                                STR_132 7B82                                  STR_116 7D76  
                                STR_124 7D1B                                  STR_108 7C7E  
                                STR_133 7F0F                                  STR_117 7F26  
                                STR_125 7CF5                                  STR_109 7CA6  
                                STR_134 7FC6                                  STR_118 7F65  
                                STR_126 7D88                                  _ADRESL 000FC3  
                                STR_135 7F0F                                  STR_127 7FB4  
                                STR_119 7F6D                                  STR_136 7FE2  
                                STR_128 7FC6                                  STR_137 7F75  
                                ?_timer 0001                        __end_of_acaoFlap 53B4  
                                ?_putch 0001                        __end_of___ftpack 4F7A  
       ??_alterarDadosConexaoConfigWifi 00E0                               ??i2_delay 0003  
                                _INT2IF 007F81                                  i2l1111 4004  
                                i2l1103 3FC2                                  i2l1113 4012  
                                i2l1105 3FD0                                  i2l1122 4064  
                                i2l1131 40B2                                  i2l1115 4022  
                                i2l1107 3FE0                                  i2l1124 406C  
                                i2l1133 40C0                                  i2l1117 402A  
                                i2l1109 3FE8                                  i2l1142 4216  
                                i2l1118 4038                                  i2l1127 408C  
                                i2l1119 4046                                  i2l1136 4178  
                                i2l1145 4252                                  i2l1129 409A  
                                i2l1147 4256                                  i2l1139 41D8  
                                i2l1266 4CF6                                  i2l1267 4D04  
                                i2l1268 4D0E                                  i2l1614 5634  
                                i2l1617 5672                                  i2l1484 5BD6  
                                i2l2277 5782                                  i2l1485 5BC6  
                                i2l2278 577E                                  _INTCON 000FF2  
                                i2l6573 5BC6                                  i2l8903 4004  
                                i2l8941 408C                                  i2l8947 40B2  
                                i2l8889 3FC2                        __end_of___lwtoft 5B9E  
                             ??_Lcd_Cmd 0061                                  _TIMER0 0008  
                                _TMR0IF 007F92                 __size_of_Lcd_Write_Char 003E  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                          atualizaLCD@i 0070                          __CFG_XINST$OFF 000000  
                     __end_of_UART_Init 5C60                            readADC@canal 0068  
                                ___ftge 5294                          _readEEPROM_ext 5722  
                                ___wmul 5B00                               ??___ftadd 0081  
                        __CFG_STVREN$ON 000000                        __end_of_controle 3FAC  
                             ??___ftdiv 008D                                  _h_flap 0051  
                             ??___lldiv 0068                               ??___ftmul 0072  
                             ??___fttol 009A                                  _blinkk 02DA  
                             ??___lwdiv 0064                               ??___lwmod 006B  
               __end_of_writeEEPROM_ext 58D8                               ??__doprnt 0072  
                                _memset 5A1A                                  delay@x 0060  
                                _buzzer 00FC                                  clear_0 5126  
                                clear_1 5132                                  clear_2 513E  
                                clear_3 514C                                  _setLed 5C0A  
                                blink@i 0064                               ??_btPress 0060  
          _t_controle_religar_ventoinha 014E                            __doprnt@flag 0077  
                                _printf 5916                            __doprnt@prec 0076  
                      _findBufferSerial 5B28                  __end_of_enviaDadosWifi 313A  
                                _strchr 54BC                                  _strlen 5678  
                                _strstr 4D5A                   ___ftmul@f3_as_product 0076  
                             ??_readADC 0062                            __pdataCOMRAM 005C  
                             ??_isdigit 0060                               ?_I2C_Read 0061  
                             ?_I2C_Wait 0001                               ?_I2C_Stop 0001  
                          acaoFlap@acao 0067                            __mediumconst 7816  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0060  
                             ??_sprintf 008B                    __size_of_atualizaLCD 00C6  
                       setUmidade@_clim 0078                               ??_strncmp 006C  
                       Lcd_Set_Cursor@a 0064                         Lcd_Set_Cursor@b 0063  
                       Lcd_Set_Cursor@y 0066                         Lcd_Set_Cursor@z 0065  
                            __acao_flap 003C                              __accesstop 0060  
               __end_of__initialization 5152                              ___ftadd@f1 007B  
                            ___ftadd@f2 007E                        ?i2_setRangeValor 0006  
                            ___ftge@ff1 0060                              ___ftge@ff2 0063  
                  enviaDadosWifi@i_1396 00D9            __size_of_criaCaracteresCGRAM 00AC  
                     __end_of_Lcd_Clear 5CA2                        _h_modo_seguranca 00F7  
                         ___rparam_used 000001                              ___ftdiv@f1 0087  
                            ___ftdiv@f2 008A                              ___ftdiv@f3 0091  
                  getStringJSON@isValid 00DA                  __end_of_readEEPROM_ext 5774  
               _h_subir_temp_automatica 004F                         _getSensors$1521 00A8  
                       _getSensors$1517 00AB                              ___ftmul@f1 006C  
                            ___ftmul@f2 006F                         _getSensors$1519 00A5  
                       _getSensors$2520 00B0                    __size_ofi2_I2C_Start 0008  
                            ___fttol@f1 0096                    __size_ofi2_I2C_Write 000A  
                        __pcstackCOMRAM 0001                       getStringJSON@F290 022D  
                     getStringJSON@F292 0219                            __pidataBANK0 5CED  
                          __pidataBANK1 5CA2                       getStringJSON@F288 0200  
                         __end_of_delay 5B00                           __end_of_blink 59EA  
                         __end_of_timer 4262                           __end_of_putch 5C94  
                    __size_of_faseAtual 013E                  __size_of_tabelaUmidade 0FD2  
                     getStringJSON@find 00DD                       getStringJSON@buff 0091  
                     getStringJSON@attr 00C6                              ___lwtoft@c 0069  
                       ?_enviaDadosWifi 0001       __size_of_setKeyStartReceiveSerial 006E  
             ?_setKeyStartReceiveSerial 0091                    __size_of_readButtons 0028  
                        _Lcd_Set_Cursor 4E16                            ??i2_I2C_Read 0004  
                            ??_I2C_Read 0063                            ??i2_I2C_Wait 0001  
                            ??_I2C_Wait 0060                            ??i2_I2C_Stop 0002  
                            ??_I2C_Stop 0061                   receiveByteSerial@byte 0009  
                             ?_Lcd_Init 0001                                 ??_delay 0062  
                             ?_Lcd_Port 0001                              _h_abafador 0052  
                             ?i2_strlen 0001                              __doprnt@ap 0070  
                               ??_blink 0064                              __doprnt@cp 007C  
                            __doprnt@pb 006C                   writeEEPROM_ext@adress 0064  
         setKeyStartReceiveSerial@start 0091                                 ??_timer 0011  
                               ??_putch 0060                 i2setRangeValor@_var_ajt 0006  
                            __pbssBANK0 00F3                              __pbssBANK1 0100  
                            __pbssBANK2 0200                                 ?_TIMER0 0001  
 __end_of_alterarDadosConexaoConfigWifi 3662  __size_of_alterarDadosConexaoConfigWifi 0528  
         _alterarDadosConexaoConfigWifi 313A                     writeEEPROM_ext@data 0063  
                       ?_readEEPROM_ext 0001                                 TIMER0@c 0030  
                    __end_ofi2_I2C_Read 5AD6                            I2C_Read@temp 0063  
                    __end_ofi2_I2C_Wait 5C86                                 ?___ftge 0060  
                    __end_ofi2_I2C_Stop 5CE2                              _climaAtual 57C6  
                               ?___wmul 0060                                 ?_memset 0060  
                      ?_writeEEPROM_ext 0063                                 ?_setLed 0060  
             __size_of_Lcd_Write_String 002E                               ?_acaoFlap 0062  
                             ?___ftpack 0060                  __end_of_Lcd_Set_Cursor 4ECA  
                            I2C_Write@d 0061                                 ?_printf 0081  
                            _getSensors 3662                                 ?_strchr 0060  
                               ?_strlen 0060                               ?___lwtoft 0069  
                               ?_strstr 006F                           ??_I2C_Restart 0061  
                       __CFG_WDTPS$1024 000000                              ??_Lcd_Init 0063  
                            ??_Lcd_Port 0060                              ??i2_strlen 0003  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                                 i2_delay 5BC4  
                             ?_controle 0001                           _tabelaUmidade 1634  
                       __CFG_VREGEN$OFF 000000                       __end_of_faseAtual 4700  
                        _Lcd_Write_Char 58D8                  acaoFlap@tempo_aguardar 0064  
                               _Lcd_Cmd 5B9E                         __size_of_TIMER0 4D52  
                             _I2C_Start 5CD2                          getIntJSON@F274 0142  
                        getIntJSON@F276 0255                          getIntJSON@F278 0241  
                             _I2C_Write 5CAE                                 __Hparam 0000  
                               __Lparam 0000                   __end_of_getStringJSON 4414  
                       __size_of___ftge 0092                                 ___ftadd 4414  
                               ___ftdiv 4AEC                                 ___lldiv 5438  
                       __size_of___wmul 0028                                 ___ftmul 49F6  
                               ___fttol 4806                                 ___lwdiv 56CE  
                               ___lwmod 5852                    i2setRangeValor@_acao 000E  
                               __doprnt 2606                                 __pcinit 50C4  
                            ??_acaoFlap 0066                              ??___ftpack 0065  
                       __size_of_memset 0030                                 _btPress 5C28  
                               __ramtop 0800                         ?_Lcd_Set_Cursor 0063  
                       __size_of_setLed 001E                                 _bt_flag 0042  
                               __ptext0 0012                                 __ptext1 59EA  
                               __ptext2 4700                                 __ptext3 1634  
                               __ptext4 5026                                 __ptext5 5722  
                               __ptext6 5CC2                                 __ptext7 5986  
                               __ptext8 3662                                 __ptext9 5160  
               _wifi_habilita_alteracao 004E                          _t_wifi_restart 003E  
                       __size_of_printf 0038                              ??___lwtoft 006C  
                       __size_of_strchr 0070                                 _readADC 5160  
                       __size_of_strlen 0056                         __size_of_strstr 00BC  
                               _dpowers 784F                                 _isdigit 5BE8  
             _t_controle_modo_seguranca 014C                __size_of_I2C_Master_Init 0070  
                               _tempajt 00F4                           _t_flap_ligado 0055  
                               _umidajt 00F3                                 _sprintf 580E  
                         __doprnt@width 007E                     __end_of_I2C_Restart 5CCA  
                __end_of_Lcd_Write_Char 5916                                 _strncmp 48FE  
                        __pintcode_body 4C9A                    end_of_initialization 5152  
                        ?_tabelaUmidade 0060                              ??_controle 0068  
                               memset@c 0062                                 memset@n 0064  
                               memset@p 0066                           __Lmediumconst 7816  
                               int_func 4C9A                __end_of_findBufferSerial 5B50  
                            _timer$1413 0018                              _timer$1414 001A  
                            _timer$1415 001C                              _setUmidade 4700  
                            blink@start 0062                               i2u1240_40 5AC8  
                             i2u1241_45 5ACA                               i2u1242_40 57A2  
                             i2u1242_47 5798                              ?_I2C_Start 0001  
                             i2u1327_40 4040                               i2u1328_45 4042  
                            ?_I2C_Write 0061                               i2u1563_47 5BCC  
                          _bufferSerial 0269                         ___lldiv@divisor 0064  
                       ___lldiv@counter 006C                               _RCSTAbits 000FAB  
                               printf@f 0081                criaCaracteresCGRAM@F3900 7817  
                      I2C_Master_Init@c 006D                                 postdec1 000FE5  
                               postdec2 000FDD                             ?_climaAtual 0060  
        ?_alterarDadosConexaoConfigWifi 0001                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                             Lcd_Port@a 0060                 setRangeValor@end_eeprom 0069  
                            _wifi_SENHA 004B                                 strlen@s 0060  
                             _UART_Init 5C44                        setUmidade@_clima 006C  
                             _PORTAbits 000F80                  __size_of_setRangeValor 009E  
                             _PORTBbits 000F81                             ?_getSensors 0001  
                             _PORTCbits 000F82                               _PORTDbits 000F83  
                             _PORTEbits 000F84                              _portServer 01E2  
                   _criaCaracteresCGRAM 4F7A                              _updateLeds 59EA  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                             _TRISCbits 000F94                               _TRISDbits 000F95  
                             _TRISEbits 000F96                 i2writeEEPROM_ext@adress 0005  
                     __size_of_I2C_Read 0032                       tabelaUmidade@_umd 0067  
                     tabelaUmidade@_tmp 0060                       __size_of_I2C_Wait 0014  
                     __size_of_I2C_Stop 0008                              _trava_fase 00FB  
                    __BF_enable_receive 0041                        _t_flap_intervalo 0054  
                       ?_Lcd_Write_Char 0001                       Lcd_Write_String@a 0064  
                     Lcd_Write_String@i 0066                    _t_controle_fim_fases 003A  
                           ___ftdiv@exp 0094                    ?_criaCaracteresCGRAM 0001  
                             _TXSTAbits 000FAC                          __end_of_TIMER0 4D5A  
                             __BF_start 01D8                    criaCaracteresCGRAM@i 00A3  
                  criaCaracteresCGRAM@j 00A2                    criaCaracteresCGRAM@k 00A1  
             tabelaUmidade@_tipo_sensor 0064                   getStringJSON@expected 00B2  
                           ___ftmul@exp 0075                               _Lcd_Clear 5C94  
                      ??_enviaDadosWifi 00C3                           _t_leitura_adc 0036  
                        __end_of___ftge 5326                          i2I2C_Read@temp 0004  
                        __end_of___wmul 5B28                            _md_seguranca 02D9  
                      _Lcd_Write_String 5A7A                              ?_UART_Init 0001  
                         __pidataCOMRAM 5CEA                          __end_of_memset 5A4A  
                        __end_of_setLed 5C28                          __end_of_printf 594E  
                           _I2C_Restart 5CC2                          __end_of_strchr 552C  
                       _setUmidade$1300 0075                          __end_of_strlen 56CE  
                       _setUmidade$1297 006F                         _setUmidade$1298 0071  
                       _setUmidade$1299 0073                          __end_of_strstr 4E16  
                         ??_atualizaLCD 0070                     start_initialization 50C4  
            _t_controle_temp_automatica 0037                             i2I2C_Read@a 0002  
                       ??_tabelaUmidade 0065                     __size_of_climaAtual 0048  
                     __size_of_Lcd_Init 0084                       __size_of_Lcd_Port 0030  
                     __size_ofi2_strlen 0052                               i2strlen@s 0001  
                      ??_readEEPROM_ext 0065                       ??_I2C_Master_Init 0071  
                              ??_TIMER0 001E                           _setRangeValor 5026  
                 ??_criaCaracteresCGRAM 0064                             ?_setUmidade 0068  
                         ??i2_I2C_Start 0002                             ??_I2C_Start 0061  
                         ??i2_I2C_Write 0004                     __size_of_getSensors 0518  
                           ??_I2C_Write 0063               _t_controle_religar_buzzer 0031  
                            ?_Lcd_Clear 0001                                ??___ftge 0066  
                              ??___wmul 0064                __size_ofi2_setRangeValor 009A  
                           __doprnt@len 007A                             __doprnt@val 0078  
                           __pdataBANK0 00FD                             __pdataBANK1 01E6  
                      __CFG_LPT1OSC$OFF 000000                           ??_readButtons 0006  
                       Lcd_Write_Char@a 0063                                ??_memset 0066  
                       Lcd_Write_Char@y 0062                                ??_setLed 0061  
                              ??_printf 00BD                       faseAtual@_tempajt 0062  
                              ??_strchr 0064                                ??_strlen 0062  
                              ??_strstr 0073                       __size_of_acaoFlap 008E  
                     __size_of___ftpack 00B0                             __pbssCOMRAM 0031  
                           ?_updateLeds 0001                       __size_of___lwtoft 0026  
                         __pcstackBANK0 0060                       _t_temp_automatica 00F9  
                          _isdigit$2058 0061                        _t_buzzer_religar 00FF  
                              ?i2_delay 0001                          ?_setRangeValor 0065  
                   __end_of_atualizaLCD 4C9A                  _senha_desbloqueio_func 004D  
                              ?_Lcd_Cmd 0001                               __doprnt@c 0080  
                             __doprnt@f 006E                              setLed@acao 0060  
                     __size_of_controle 0432                _criaCaracteresCGRAM$1229 009F  
                             _faseAtual 45C2                               _main$1630 00E6  
                             _main$1633 00E8                               _main$2521 00E2  
                             _main$1650 00EE                               _main$1645 00EC  
                             _main$1629 00E4                               _main$1638 00EA  
                             _main$1655 00F0                        ___lwdiv@dividend 0060  
                      ??_Lcd_Set_Cursor 0064                               __pintcode 0008  
                         __pmediumconst 7816                                ?___ftadd 007B  
                              ?___ftdiv 0087                     __end_ofi2_I2C_Start 5CEA  
                              ?___lldiv 0060                                ?___ftmul 006C  
                              ?___fttol 0096                     __end_ofi2_I2C_Write 5CC2  
                              ?___lwdiv 0060                                ?___lwmod 0067  
              _setKeyStartReceiveSerial 559C                                ?__doprnt 006C  
                   _tipo_sensor_umidade 00FA                             ??_UART_Init 0060  
                  readEEPROM_ext@adress 0065                                ?_btPress 0001  
                              ?_readADC 0060                               _media_adc 0035  
                   __size_of_setUmidade 0106                                ?_isdigit 0001  
                              _I2C_Read 5986                                _I2C_Wait 5C60  
                              _I2C_Stop 5CCA                     __end_of_readButtons 5B78  
                 acaoFlap@tempo_ativado 0062                __size_of_writeEEPROM_ext 0042  
                      ___lwdiv@quotient 0064                          __size_of_delay 002A  
                        __size_of_blink 0032                     i2setRangeValor@_aux 000F  
                   i2setRangeValor@_max 0009                     i2setRangeValor@_min 0008  
                              ?_sprintf 0081                                ?_strncmp 0066  
                        __size_of_timer 02B6                          __size_of_putch 000E  
                        ___wmul@product 0064                               btPress@bt 0060  
                              _LATAbits 000F89                                _LATBbits 000F8A  
                              _LATCbits 000F8B                                _LATDbits 000F8C  
                              _LATEbits 000F8D                       ?_findBufferSerial 0074  
                             _opcaomenu 0045                                _PIE1bits 000F9D  
                             blink@line 0060                         enviaDadosWifi@i 00D8  
                       enviaDadosWifi@j 00D6                             _h_venotinha 0053  
                            ?_faseAtual 0060                                Lcd_Cmd@a 0062  
                              _PIR1bits 000F9E                      ??_findBufferSerial 0076  
                   __size_of_updateLeds 0030                             ??_Lcd_Clear 0063  
                          ??_climaAtual 0062                            ??_getSensors 00A5  
                            _ADCON0bits 000FC2                       ___wmul@multiplier 0060  
                     ??i2_setRangeValor 000B                        ??_Lcd_Write_Char 0061  
                              i2delay@x 0001                             _atualizaLCD 4BD4  
                              _Lcd_Init 53B4                       i2_writeEEPROM_ext 594E  
                              _Lcd_Port 5A4A                                i2_strlen 5774  
                       ??_setRangeValor 006A          alterarDadosConexaoConfigWifi@i 00E0  
                           _INTCON2bits 000FF1                             _INTCON3bits 000FF0  
                __size_of_getStringJSON 01B2                               copy_data0 50D8  
                    ?i2_writeEEPROM_ext 0004                      __end_of_climaAtual 580E  
                          setUmidade@tp 006E                __end_of_Lcd_Write_String 5AA8  
                       _f_falta_energia 005E                        __size_ofi2_delay 0024  
                      __size_of_Lcd_Cmd 0026                             i2_I2C_Start 5CE2  
                           i2_I2C_Write 5CB8                      __end_of_getSensors 3B7A  
                   ??i2_writeEEPROM_ext 0005                                __Hrparam 0000  
                              __Lrparam 0000                     findBufferSerial@key 0074  
                      __size_of___ftadd 01AE                        __size_of___ftdiv 00E8  
                      __size_of___lldiv 0084                        __size_of___ftmul 00F6  
                      __size_of___fttol 00F8                        __size_of___lwdiv 0054  
                      __size_of___lwmod 0044                             _readButtons 5B50  
                              _acaoFlap 5326                                ___ftpack 4ECA  
                      __size_of__doprnt 05C0                          readADC@digital 0066  
                   Lcd_Write_Char@tempp 0061                        __size_of_btPress 001C  
                              ___lwtoft 5B78                            ?_I2C_Restart 0001  
                              _base_sec 004A                          getSensors@auxx 00AD  
                       _I2C_Master_Init 552C                        __size_of_readADC 009A  
             __end_ofi2_writeEEPROM_ext 5986                               setLed@led 0061  
                      __size_of_isdigit 0022                         ___lwdiv@divisor 0062  
                       ___lwdiv@counter 0066                                _h_buzzer 0050  
                              __ptext10 5B78                                __ptext11 4806  
                              __ptext20 3B7A                                __ptext12 49F6  
                              __ptext21 5326                                __ptext13 5294  
                              __ptext30 5CCA                                __ptext22 5C0A  
                              __ptext14 4AEC                                __ptext31 5CD2  
                              __ptext23 57C6                                __ptext15 4414  
                              __ptext40 5BE8                                __ptext32 5C60  
                              __ptext24 5C28                                __ptext16 4ECA  
                              __ptext41 5B00                                __ptext33 559C  
                              __ptext25 59B8                                __ptext17 45C2  
                              __ptext50 5A7A                                __ptext42 5852  
                              __ptext34 5A1A                                __ptext26 313A  
                              __ptext18 2BC6                                __ptext51 58D8  
                              __ptext43 56CE                                __ptext35 5916  
                              __ptext27 5896                                __ptext19 4F7A  
                              __ptext52 4E16                                __ptext44 5B28  
                              __ptext36 4262                                __ptext28 5AD6  
                              __ptext61 3FAC                                __ptext53 5C44  
                              __ptext45 4D5A                                __ptext37 580E  
                              __ptext29 5CAE                                __ptext70 5CE2  
                              __ptext62 51FA                                __ptext54 53B4  
                              __ptext46 48FE                                __ptext38 2606  
                              __ptext71 5AA8                                __ptext63 594E  
                              __ptext55 5C94                                __ptext47 5678  
                              __ptext39 5C86                                __ptext72 5C74  
                              __ptext64 5BC4                                __ptext56 5B9E  
                              __ptext48 54BC                                __ptext73 0000  
                              __ptext65 560A                                __ptext57 5A4A  
                              __ptext49 4BD4                                __ptext66 5774  
                              __ptext58 552C                                __ptext67 5B50  
                              __ptext59 5438                                __ptext68 5CB8  
                              __ptext69 5CDA                                _lcd_rfsh 0151  
                              _ipServer 01A6               i2setRangeValor@end_eeprom 000A  
                      __size_of_sprintf 0044                  _f_buzzer_falta_energia 003B  
                      __size_of_strncmp 00F8                                _controle 3B7A  
                     ??_writeEEPROM_ext 0064                                _fornalha 005A  
                         __size_of_main 1622                            ??_setUmidade 006E  
                           _t_fim_fase1 0058                             _t_fim_fase2 0057  
                           _t_fim_fase3 0056                              strncmp@len 006A  
                           ??_faseAtual 0064                                blink@end 0063  
                        _wifi_conectado 0049                                _wifi_MAC 01E6  
                           faseAtual@tp 0065                                int$flags 005F  
                         _getStringJSON 4262                       _receiveByteSerial 560A  
                 __CFG_CPUDIV$OSC1_PLL2 000000                      ?_receiveByteSerial 0001  
        _t_religar_ventoinha_automatica 00F8                              _INTCONbits 000FF2  
                            i2_I2C_Read 5AA8                              i2_I2C_Wait 5C74  
                            i2_I2C_Stop 5CDA                            ??_updateLeds 0063  
                    __end_of_setUmidade 4806                         faseAtual@_fasee 0064  
                              isdigit@c 0062                                memset@p1 0060  
                   ??_receiveByteSerial 0007             __end_of_criaCaracteresCGRAM 5026  
                     enviaDadosWifi@AUX 00C5                       enviaDadosWifi@men 00D7  
                 __end_of_tabelaUmidade 2606                                intlevel2 0000  
                             sprintf@ap 008B        __end_ofcriaCaracteresCGRAM@F3900 784F  
                             sprintf@pb 008D                           getSensors@aux 00B4  
                             sprintf@wh 0081                         faseAtual@tmpajt 0066  
                             strchr@chr 0062                        ___lwmod@dividend 0067  
                             strchr@ptr 0060                        ___lldiv@dividend 0060  
                           climaAtual@c 0062              ??_setKeyStartReceiveSerial 0093  
                             strncmp@s1 0066                               strncmp@s2 0068  
          criaCaracteresCGRAM@character 0067                          ?_getStringJSON 0091  
             __end_of_receiveByteSerial 5678                      __end_of_updateLeds 5A1A  
                              printf@ap 00BD                                printf@pb 00BF  
                     _t_controle_buzzer 0039                 __end_of_I2C_Master_Init 559C  
                    Lcd_Set_Cursor@temp 0067                      setUmidade@_tempajt 006A  
                        faseAtual@_fase 0060                                sprintf@f 0083  
                      ___lldiv@quotient 0068                         ___lwmod@divisor 0069  
            __size_ofi2_writeEEPROM_ext 0038                                strlen@cp 0064  
                       ___lwmod@counter 006B                 __size_of_enviaDadosWifi 0574  
                      _t_controle_blink 0038                                strstr@s1 006F  
                              strstr@s2 0071                       setUmidade@_umdajt 0068  
                     setUmidade@_tmpajt 0077                             getSensors@i 00B3  
                       _t_controle_flap 0033  
