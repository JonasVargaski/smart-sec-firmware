

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue May 14 22:34:59 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           ; Version 1.44
   104                           ; Generated 14/09/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F4550 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  005F2B                     __pidataCOMRAM:
   140                           	opt stack 0
   141                           
   142                           ;initializer for __led
   143  005F2B  01                 	db	1
   144                           
   145                           	psect	idataBANK0
   146  005F26                     __pidataBANK0:
   147                           	opt stack 0
   148                           
   149                           ;initializer for _menu
   150  005F26  0F                 	db	15
   151                           
   152                           ;initializer for _umid
   153  005F27  64                 	db	100
   154                           
   155                           ;initializer for _temp
   156  005F28  63                 	db	99
   157                           
   158                           ;initializer for _f_falta_energia
   159  005F29  01                 	db	1
   160                           
   161                           ;initializer for _t_buzzer_religar
   162  005F2A  01                 	db	1
   163                           
   164                           	psect	idataBANK2
   165  005E90                     __pidataBANK2:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _wifi_MAC
   169  005E90  003F               	dw	63
   170  005E92  00                 	db	0
   171  005E93  00                 	db	0
   172  005E94  00                 	db	0
   173  005E95  00                 	db	0
   174  005E96  00                 	db	0
   175  005E97  00                 	db	0
   176  005E98  00                 	db	0
   177  005E99  00                 	db	0
   178  005E9A  00                 	db	0
   179  005E9B  00                 	db	0
   180  005E9C  00                 	db	0
   181  005E9D  00                 	db	0
   182  005E9E  00                 	db	0
   183  005E9F  00                 	db	0
   184  005EA0  00                 	db	0
   185  005EA1  00                 	db	0
   186  005EA2  00                 	db	0
   187  005EA3  00                 	db	0
   188  005EA4  00                 	db	0
   189  005EA5  00                 	db	0
   190  005EA6  00                 	db	0
   191  005EA7  00                 	db	0
   192                           
   193                           	psect	mediumconst
   194  007794                     __pmediumconst:
   195                           	opt stack 0
   196  007794  00                 	db	0
   197  007795                     criaCaracteresCGRAM@F3896:
   198                           	opt stack 0
   199  007795  0E                 	db	14
   200  007796  11                 	db	17
   201  007797  11                 	db	17
   202  007798  1F                 	db	31
   203  007799  1B                 	db	27
   204  00779A  1B                 	db	27
   205  00779B  1F                 	db	31
   206  00779C  1F                 	db	31
   207  00779D  01                 	db	1
   208  00779E  03                 	db	3
   209  00779F  07                 	db	7
   210  0077A0  1D                 	db	29
   211  0077A1  1D                 	db	29
   212  0077A2  07                 	db	7
   213  0077A3  03                 	db	3
   214  0077A4  01                 	db	1
   215  0077A5  04                 	db	4
   216  0077A6  04                 	db	4
   217  0077A7  0E                 	db	14
   218  0077A8  0E                 	db	14
   219  0077A9  1F                 	db	31
   220  0077AA  1D                 	db	29
   221  0077AB  1B                 	db	27
   222  0077AC  0E                 	db	14
   223  0077AD  04                 	db	4
   224  0077AE  0A                 	db	10
   225  0077AF  0A                 	db	10
   226  0077B0  0A                 	db	10
   227  0077B1  0E                 	db	14
   228  0077B2  1F                 	db	31
   229  0077B3  1F                 	db	31
   230  0077B4  0E                 	db	14
   231  0077B5  00                 	db	0
   232  0077B6  0E                 	db	14
   233  0077B7  11                 	db	17
   234  0077B8  04                 	db	4
   235  0077B9  0A                 	db	10
   236  0077BA  00                 	db	0
   237  0077BB  04                 	db	4
   238  0077BC  00                 	db	0
   239  0077BD  00                 	db	0
   240  0077BE  00                 	db	0
   241  0077BF  00                 	db	0
   242  0077C0  00                 	db	0
   243  0077C1  00                 	db	0
   244  0077C2  00                 	db	0
   245  0077C3  00                 	db	0
   246  0077C4  00                 	db	0
   247  0077C5  00                 	db	0
   248  0077C6  00                 	db	0
   249  0077C7  00                 	db	0
   250  0077C8  00                 	db	0
   251  0077C9  00                 	db	0
   252  0077CA  00                 	db	0
   253  0077CB  00                 	db	0
   254  0077CC  00                 	db	0
   255  0077CD                     __end_ofcriaCaracteresCGRAM@F3896:
   256                           	opt stack 0
   257  0077CD                     _dpowers:
   258                           	opt stack 0
   259  0077CD  0001               	dw	1
   260  0077CF  000A               	dw	10
   261  0077D1  0064               	dw	100
   262  0077D3  03E8               	dw	1000
   263  0077D5  2710               	dw	10000
   264  0077D7                     __end_of_dpowers:
   265                           	opt stack 0
   266  0000                     _SSPBUF	set	4041
   267  0000                     _SSPSTAT	set	4039
   268  0000                     _SSPADD	set	4040
   269  0000                     _SSPCON2	set	4037
   270  0000                     _SSPCON1	set	4038
   271  0000                     _ADCON2	set	4032
   272  0000                     _ADCON1	set	4033
   273  0000                     _INTCON	set	4082
   274  0000                     _T0CON	set	4053
   275  0000                     _INTCON3bits	set	4080
   276  0000                     _INTCON2bits	set	4081
   277  0000                     _TRISBbits	set	3987
   278  0000                     _PORTEbits	set	3972
   279  0000                     _PORTCbits	set	3970
   280  0000                     _PORTAbits	set	3968
   281  0000                     _TRISEbits	set	3990
   282  0000                     _TRISAbits	set	3986
   283  0000                     _RCREG	set	4014
   284  0000                     _TMR0L	set	4054
   285  0000                     _TMR0H	set	4055
   286  0000                     _ADCON0bits	set	4034
   287  0000                     _ADCON0	set	4034
   288  0000                     _ADRESL	set	4035
   289  0000                     _ADRESH	set	4036
   290  0000                     _TXREG	set	4013
   291  0000                     _PIE1bits	set	3997
   292  0000                     _PIR1bits	set	3998
   293  0000                     _INTCONbits	set	4082
   294  0000                     _SPBRG	set	4015
   295  0000                     _RCSTAbits	set	4011
   296  0000                     _TXSTAbits	set	4012
   297  0000                     _TRISCbits	set	3988
   298  0000                     _LATDbits	set	3980
   299  0000                     _LATEbits	set	3981
   300  0000                     _LATBbits	set	3978
   301  0000                     _LATCbits	set	3979
   302  0000                     _LATAbits	set	3977
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _TRISDbits	set	3989
   306  0000                     _ACKEN	set	32300
   307  0000                     _ACKDT	set	32301
   308  0000                     _RCEN	set	32299
   309  0000                     _PEN	set	32298
   310  0000                     _RSEN	set	32297
   311  0000                     _SEN	set	32296
   312  0000                     _INT2IF	set	32641
   313  0000                     _RCIF	set	31989
   314  0000                     _TMR0IF	set	32658
   315  0000                     _GO	set	32273
   316  0000                     _ADON	set	32272
   317  0077D7                     STR_32:
   318  0077D7  3C                 	db	60	;'<'
   319  0077D8  68                 	db	104	;'h'
   320  0077D9  74                 	db	116	;'t'
   321  0077DA  6D                 	db	109	;'m'
   322  0077DB  6C                 	db	108	;'l'
   323  0077DC  3E                 	db	62	;'>'
   324  0077DD  3C                 	db	60	;'<'
   325  0077DE  68                 	db	104	;'h'
   326  0077DF  65                 	db	101	;'e'
   327  0077E0  61                 	db	97	;'a'
   328  0077E1  64                 	db	100	;'d'
   329  0077E2  3E                 	db	62	;'>'
   330  0077E3  3C                 	db	60	;'<'
   331  0077E4  74                 	db	116	;'t'
   332  0077E5  69                 	db	105	;'i'
   333  0077E6  74                 	db	116	;'t'
   334  0077E7  6C                 	db	108	;'l'
   335  0077E8  65                 	db	101	;'e'
   336  0077E9  3E                 	db	62	;'>'
   337  0077EA  57                 	db	87	;'W'
   338  0077EB  49                 	db	73	;'I'
   339  0077EC  46                 	db	70	;'F'
   340  0077ED  49                 	db	73	;'I'
   341  0077EE  3C                 	db	60	;'<'
   342  0077EF  2F                 	db	47
   343  0077F0  74                 	db	116	;'t'
   344  0077F1  69                 	db	105	;'i'
   345  0077F2  74                 	db	116	;'t'
   346  0077F3  6C                 	db	108	;'l'
   347  0077F4  65                 	db	101	;'e'
   348  0077F5  3E                 	db	62	;'>'
   349  0077F6  3C                 	db	60	;'<'
   350  0077F7  73                 	db	115	;'s'
   351  0077F8  74                 	db	116	;'t'
   352  0077F9  79                 	db	121	;'y'
   353  0077FA  6C                 	db	108	;'l'
   354  0077FB  65                 	db	101	;'e'
   355  0077FC  3E                 	db	62	;'>'
   356  0077FD  2A                 	db	42
   357  0077FE  7B                 	db	123
   358  0077FF  66                 	db	102	;'f'
   359  007800  6F                 	db	111	;'o'
   360  007801  6E                 	db	110	;'n'
   361  007802  74                 	db	116	;'t'
   362  007803  2D                 	db	45
   363  007804  73                 	db	115	;'s'
   364  007805  69                 	db	105	;'i'
   365  007806  7A                 	db	122	;'z'
   366  007807  65                 	db	101	;'e'
   367  007808  3A                 	db	58	;':'
   368  007809  20                 	db	32
   369  00780A  33                 	db	51	;'3'
   370  00780B  35                 	db	53	;'5'
   371  00780C  70                 	db	112	;'p'
   372  00780D  78                 	db	120	;'x'
   373  00780E  3B                 	db	59	;';'
   374  00780F  66                 	db	102	;'f'
   375  007810  6F                 	db	111	;'o'
   376  007811  6E                 	db	110	;'n'
   377  007812  74                 	db	116	;'t'
   378  007813  2D                 	db	45
   379  007814  66                 	db	102	;'f'
   380  007815  61                 	db	97	;'a'
   381  007816  6D                 	db	109	;'m'
   382  007817  69                 	db	105	;'i'
   383  007818  6C                 	db	108	;'l'
   384  007819  79                 	db	121	;'y'
   385  00781A  3A                 	db	58	;':'
   386  00781B  73                 	db	115	;'s'
   387  00781C  61                 	db	97	;'a'
   388  00781D  6E                 	db	110	;'n'
   389  00781E  73                 	db	115	;'s'
   390  00781F  2D                 	db	45
   391  007820  73                 	db	115	;'s'
   392  007821  65                 	db	101	;'e'
   393  007822  72                 	db	114	;'r'
   394  007823  69                 	db	105	;'i'
   395  007824  66                 	db	102	;'f'
   396  007825  3B                 	db	59	;';'
   397  007826  7D                 	db	125
   398  007827  66                 	db	102	;'f'
   399  007828  6F                 	db	111	;'o'
   400  007829  72                 	db	114	;'r'
   401  00782A  6D                 	db	109	;'m'
   402  00782B  7B                 	db	123
   403  00782C  68                 	db	104	;'h'
   404  00782D  65                 	db	101	;'e'
   405  00782E  69                 	db	105	;'i'
   406  00782F  67                 	db	103	;'g'
   407  007830  68                 	db	104	;'h'
   408  007831  74                 	db	116	;'t'
   409  007832  3A                 	db	58	;':'
   410  007833  34                 	db	52	;'4'
   411  007834  35                 	db	53	;'5'
   412  007835  30                 	db	48	;'0'
   413  007836  70                 	db	112	;'p'
   414  007837  78                 	db	120	;'x'
   415  007838  3B                 	db	59	;';'
   416  007839  64                 	db	100	;'d'
   417  00783A  69                 	db	105	;'i'
   418  00783B  73                 	db	115	;'s'
   419  00783C  70                 	db	112	;'p'
   420  00783D  6C                 	db	108	;'l'
   421  00783E  61                 	db	97	;'a'
   422  00783F  79                 	db	121	;'y'
   423  007840  3A                 	db	58	;':'
   424  007841  66                 	db	102	;'f'
   425  007842  6C                 	db	108	;'l'
   426  007843  65                 	db	101	;'e'
   427  007844  78                 	db	120	;'x'
   428  007845  3B                 	db	59	;';'
   429  007846  66                 	db	102	;'f'
   430  007847  6C                 	db	108	;'l'
   431  007848  65                 	db	101	;'e'
   432  007849  78                 	db	120	;'x'
   433  00784A  2D                 	db	45
   434  00784B  64                 	db	100	;'d'
   435  00784C  69                 	db	105	;'i'
   436  00784D  72                 	db	114	;'r'
   437  00784E  65                 	db	101	;'e'
   438  00784F  63                 	db	99	;'c'
   439  007850  74                 	db	116	;'t'
   440  007851  69                 	db	105	;'i'
   441  007852  6F                 	db	111	;'o'
   442  007853  6E                 	db	110	;'n'
   443  007854  3A                 	db	58	;':'
   444  007855  63                 	db	99	;'c'
   445  007856  6F                 	db	111	;'o'
   446  007857  6C                 	db	108	;'l'
   447  007858  75                 	db	117	;'u'
   448  007859  6D                 	db	109	;'m'
   449  00785A  6E                 	db	110	;'n'
   450  00785B  3B                 	db	59	;';'
   451  00785C  6A                 	db	106	;'j'
   452  00785D  75                 	db	117	;'u'
   453  00785E  73                 	db	115	;'s'
   454  00785F  74                 	db	116	;'t'
   455  007860  69                 	db	105	;'i'
   456  007861  66                 	db	102	;'f'
   457  007862  79                 	db	121	;'y'
   458  007863  2D                 	db	45
   459  007864  63                 	db	99	;'c'
   460  007865  6F                 	db	111	;'o'
   461  007866  6E                 	db	110	;'n'
   462  007867  74                 	db	116	;'t'
   463  007868  65                 	db	101	;'e'
   464  007869  6E                 	db	110	;'n'
   465  00786A  74                 	db	116	;'t'
   466  00786B  3A                 	db	58	;':'
   467  00786C  73                 	db	115	;'s'
   468  00786D  70                 	db	112	;'p'
   469  00786E  61                 	db	97	;'a'
   470  00786F  63                 	db	99	;'c'
   471  007870  65                 	db	101	;'e'
   472  007871  2D                 	db	45
   473  007872  61                 	db	97	;'a'
   474  007873  72                 	db	114	;'r'
   475  007874  6F                 	db	111	;'o'
   476  007875  75                 	db	117	;'u'
   477  007876  6E                 	db	110	;'n'
   478  007877  64                 	db	100	;'d'
   479  007878  3B                 	db	59	;';'
   480  007879  61                 	db	97	;'a'
   481  00787A  6C                 	db	108	;'l'
   482  00787B  69                 	db	105	;'i'
   483  00787C  67                 	db	103	;'g'
   484  00787D  6E                 	db	110	;'n'
   485  00787E  2D                 	db	45
   486  00787F  69                 	db	105	;'i'
   487  007880  74                 	db	116	;'t'
   488  007881  65                 	db	101	;'e'
   489  007882  6D                 	db	109	;'m'
   490  007883  73                 	db	115	;'s'
   491  007884  3A                 	db	58	;':'
   492  007885  63                 	db	99	;'c'
   493  007886  65                 	db	101	;'e'
   494  007887  6E                 	db	110	;'n'
   495  007888  74                 	db	116	;'t'
   496  007889  65                 	db	101	;'e'
   497  00788A  72                 	db	114	;'r'
   498  00788B  3B                 	db	59	;';'
   499  00788C  6D                 	db	109	;'m'
   500  00788D  61                 	db	97	;'a'
   501  00788E  72                 	db	114	;'r'
   502  00788F  67                 	db	103	;'g'
   503  007890  69                 	db	105	;'i'
   504  007891  6E                 	db	110	;'n'
   505  007892  3A                 	db	58	;':'
   506  007893  30                 	db	48	;'0'
   507  007894  20                 	db	32
   508  007895  61                 	db	97	;'a'
   509  007896  75                 	db	117	;'u'
   510  007897  74                 	db	116	;'t'
   511  007898  6F                 	db	111	;'o'
   512  007899  3B                 	db	59	;';'
   513  00789A  7D                 	db	125
   514  00789B  62                 	db	98	;'b'
   515  00789C  75                 	db	117	;'u'
   516  00789D  74                 	db	116	;'t'
   517  00789E  74                 	db	116	;'t'
   518  00789F  6F                 	db	111	;'o'
   519  0078A0  6E                 	db	110	;'n'
   520  0078A1  7B                 	db	123
   521  0078A2  77                 	db	119	;'w'
   522  0078A3  69                 	db	105	;'i'
   523  0078A4  64                 	db	100	;'d'
   524  0078A5  74                 	db	116	;'t'
   525  0078A6  68                 	db	104	;'h'
   526  0078A7  3A                 	db	58	;':'
   527  0078A8  32                 	db	50	;'2'
   528  0078A9  38                 	db	56	;'8'
   529  0078AA  30                 	db	48	;'0'
   530  0078AB  70                 	db	112	;'p'
   531  0078AC  78                 	db	120	;'x'
   532  0078AD  3B                 	db	59	;';'
   533  0078AE  68                 	db	104	;'h'
   534  0078AF  65                 	db	101	;'e'
   535  0078B0  69                 	db	105	;'i'
   536  0078B1  67                 	db	103	;'g'
   537  0078B2  68                 	db	104	;'h'
   538  0078B3  74                 	db	116	;'t'
   539  0078B4  3A                 	db	58	;':'
   540  0078B5  36                 	db	54	;'6'
   541  0078B6  30                 	db	48	;'0'
   542  0078B7  70                 	db	112	;'p'
   543  0078B8  78                 	db	120	;'x'
   544  0078B9  3B                 	db	59	;';'
   545  0078BA  63                 	db	99	;'c'
   546  0078BB  6F                 	db	111	;'o'
   547  0078BC  6C                 	db	108	;'l'
   548  0078BD  6F                 	db	111	;'o'
   549  0078BE  72                 	db	114	;'r'
   550  0078BF  3A                 	db	58	;':'
   551  0078C0  57                 	db	87	;'W'
   552  0078C1  68                 	db	104	;'h'
   553  0078C2  69                 	db	105	;'i'
   554  0078C3  74                 	db	116	;'t'
   555  0078C4  65                 	db	101	;'e'
   556  0078C5  3B                 	db	59	;';'
   557  0078C6  62                 	db	98	;'b'
   558  0078C7  61                 	db	97	;'a'
   559  0078C8  63                 	db	99	;'c'
   560  0078C9  6B                 	db	107	;'k'
   561  0078CA  67                 	db	103	;'g'
   562  0078CB  72                 	db	114	;'r'
   563  0078CC  6F                 	db	111	;'o'
   564  0078CD  75                 	db	117	;'u'
   565  0078CE  6E                 	db	110	;'n'
   566  0078CF  64                 	db	100	;'d'
   567  0078D0  2D                 	db	45
   568  0078D1  63                 	db	99	;'c'
   569  0078D2  6F                 	db	111	;'o'
   570  0078D3  6C                 	db	108	;'l'
   571  0078D4  6F                 	db	111	;'o'
   572  0078D5  72                 	db	114	;'r'
   573  0078D6  3A                 	db	58	;':'
   574  0078D7  23                 	db	35
   575  0078D8  34                 	db	52	;'4'
   576  0078D9  46                 	db	70	;'F'
   577  0078DA  43                 	db	67	;'C'
   578  0078DB  45                 	db	69	;'E'
   579  0078DC  30                 	db	48	;'0'
   580  0078DD  30                 	db	48	;'0'
   581  0078DE  3B                 	db	59	;';'
   582  0078DF  62                 	db	98	;'b'
   583  0078E0  6F                 	db	111	;'o'
   584  0078E1  72                 	db	114	;'r'
   585  0078E2  64                 	db	100	;'d'
   586  0078E3  65                 	db	101	;'e'
   587  0078E4  72                 	db	114	;'r'
   588  0078E5  3A                 	db	58	;':'
   589  0078E6  20                 	db	32
   590  0078E7  32                 	db	50	;'2'
   591  0078E8  70                 	db	112	;'p'
   592  0078E9  78                 	db	120	;'x'
   593  0078EA  20                 	db	32
   594  0078EB  72                 	db	114	;'r'
   595  0078EC  67                 	db	103	;'g'
   596  0078ED  62                 	db	98	;'b'
   597  0078EE  28                 	db	40
   598  0078EF  32                 	db	50	;'2'
   599  0078F0  31                 	db	49	;'1'
   600  0078F1  2C                 	db	44
   601  0078F2  20                 	db	32
   602  0078F3  31                 	db	49	;'1'
   603  0078F4  39                 	db	57	;'9'
   604  0078F5  36                 	db	54	;'6'
   605  0078F6  2C                 	db	44
   606  0078F7  20                 	db	32
   607  0078F8  32                 	db	50	;'2'
   608  0078F9  31                 	db	49	;'1'
   609  0078FA  29                 	db	41
   610  0078FB  20                 	db	32
   611  0078FC  73                 	db	115	;'s'
   612  0078FD  6F                 	db	111	;'o'
   613  0078FE  6C                 	db	108	;'l'
   614  0078FF  69                 	db	105	;'i'
   615  007900  64                 	db	100	;'d'
   616  007901  3B                 	db	59	;';'
   617  007902  62                 	db	98	;'b'
   618  007903  6F                 	db	111	;'o'
   619  007904  72                 	db	114	;'r'
   620  007905  64                 	db	100	;'d'
   621  007906  65                 	db	101	;'e'
   622  007907  72                 	db	114	;'r'
   623  007908  2D                 	db	45
   624  007909  72                 	db	114	;'r'
   625  00790A  61                 	db	97	;'a'
   626  00790B  64                 	db	100	;'d'
   627  00790C  69                 	db	105	;'i'
   628  00790D  75                 	db	117	;'u'
   629  00790E  73                 	db	115	;'s'
   630  00790F  3A                 	db	58	;':'
   631  007910  35                 	db	53	;'5'
   632  007911  70                 	db	112	;'p'
   633  007912  78                 	db	120	;'x'
   634  007913  3B                 	db	59	;';'
   635  007914  7D                 	db	125
   636  007915  69                 	db	105	;'i'
   637  007916  6E                 	db	110	;'n'
   638  007917  70                 	db	112	;'p'
   639  007918  75                 	db	117	;'u'
   640  007919  74                 	db	116	;'t'
   641  00791A  7B                 	db	123
   642  00791B  68                 	db	104	;'h'
   643  00791C  65                 	db	101	;'e'
   644  00791D  69                 	db	105	;'i'
   645  00791E  67                 	db	103	;'g'
   646  00791F  68                 	db	104	;'h'
   647  007920  74                 	db	116	;'t'
   648  007921  3A                 	db	58	;':'
   649  007922  36                 	db	54	;'6'
   650  007923  30                 	db	48	;'0'
   651  007924  70                 	db	112	;'p'
   652  007925  78                 	db	120	;'x'
   653  007926  3B                 	db	59	;';'
   654  007927  77                 	db	119	;'w'
   655  007928  69                 	db	105	;'i'
   656  007929  64                 	db	100	;'d'
   657  00792A  74                 	db	116	;'t'
   658  00792B  68                 	db	104	;'h'
   659  00792C  3A                 	db	58	;':'
   660  00792D  36                 	db	54	;'6'
   661  00792E  30                 	db	48	;'0'
   662  00792F  30                 	db	48	;'0'
   663  007930  70                 	db	112	;'p'
   664  007931  78                 	db	120	;'x'
   665  007932  3B                 	db	59	;';'
   666  007933  20                 	db	32
   667  007934  62                 	db	98	;'b'
   668  007935  6F                 	db	111	;'o'
   669  007936  72                 	db	114	;'r'
   670  007937  64                 	db	100	;'d'
   671  007938  65                 	db	101	;'e'
   672  007939  72                 	db	114	;'r'
   673  00793A  2D                 	db	45
   674  00793B  72                 	db	114	;'r'
   675  00793C  61                 	db	97	;'a'
   676  00793D  64                 	db	100	;'d'
   677  00793E  69                 	db	105	;'i'
   678  00793F  75                 	db	117	;'u'
   679  007940  73                 	db	115	;'s'
   680  007941  3A                 	db	58	;':'
   681  007942  35                 	db	53	;'5'
   682  007943  70                 	db	112	;'p'
   683  007944  78                 	db	120	;'x'
   684  007945  3B                 	db	59	;';'
   685  007946  62                 	db	98	;'b'
   686  007947  6F                 	db	111	;'o'
   687  007948  72                 	db	114	;'r'
   688  007949  64                 	db	100	;'d'
   689  00794A  65                 	db	101	;'e'
   690  00794B  72                 	db	114	;'r'
   691  00794C  3A                 	db	58	;':'
   692  00794D  20                 	db	32
   693  00794E  33                 	db	51	;'3'
   694  00794F  70                 	db	112	;'p'
   695  007950  78                 	db	120	;'x'
   696  007951  20                 	db	32
   697  007952  72                 	db	114	;'r'
   698  007953  67                 	db	103	;'g'
   699  007954  62                 	db	98	;'b'
   700  007955  28                 	db	40
   701  007956  31                 	db	49	;'1'
   702  007957  33                 	db	51	;'3'
   703  007958  32                 	db	50	;'2'
   704  007959  2C                 	db	44
   705  00795A  20                 	db	32
   706  00795B  31                 	db	49	;'1'
   707  00795C  33                 	db	51	;'3'
   708  00795D  36                 	db	54	;'6'
   709  00795E  2C                 	db	44
   710  00795F  20                 	db	32
   711  007960  31                 	db	49	;'1'
   712  007961  33                 	db	51	;'3'
   713  007962  38                 	db	56	;'8'
   714  007963  29                 	db	41
   715  007964  20                 	db	32
   716  007965  73                 	db	115	;'s'
   717  007966  6F                 	db	111	;'o'
   718  007967  6C                 	db	108	;'l'
   719  007968  69                 	db	105	;'i'
   720  007969  64                 	db	100	;'d'
   721  00796A  3B                 	db	59	;';'
   722  00796B  7D                 	db	125
   723  00796C  62                 	db	98	;'b'
   724  00796D  6F                 	db	111	;'o'
   725  00796E  64                 	db	100	;'d'
   726  00796F  79                 	db	121	;'y'
   727  007970  7B                 	db	123
   728  007971  62                 	db	98	;'b'
   729  007972  61                 	db	97	;'a'
   730  007973  63                 	db	99	;'c'
   731  007974  6B                 	db	107	;'k'
   732  007975  67                 	db	103	;'g'
   733  007976  72                 	db	114	;'r'
   734  007977  6F                 	db	111	;'o'
   735  007978  75                 	db	117	;'u'
   736  007979  6E                 	db	110	;'n'
   737  00797A  64                 	db	100	;'d'
   738  00797B  3A                 	db	58	;':'
   739  00797C  23                 	db	35
   740  00797D  46                 	db	70	;'F'
   741  00797E  34                 	db	52	;'4'
   742  00797F  46                 	db	70	;'F'
   743  007980  37                 	db	55	;'7'
   744  007981  46                 	db	70	;'F'
   745  007982  35                 	db	53	;'5'
   746  007983  3B                 	db	59	;';'
   747  007984  7D                 	db	125
   748  007985  3C                 	db	60	;'<'
   749  007986  2F                 	db	47
   750  007987  73                 	db	115	;'s'
   751  007988  74                 	db	116	;'t'
   752  007989  79                 	db	121	;'y'
   753  00798A  6C                 	db	108	;'l'
   754  00798B  65                 	db	101	;'e'
   755  00798C  3E                 	db	62	;'>'
   756  00798D  3C                 	db	60	;'<'
   757  00798E  2F                 	db	47
   758  00798F  68                 	db	104	;'h'
   759  007990  65                 	db	101	;'e'
   760  007991  61                 	db	97	;'a'
   761  007992  64                 	db	100	;'d'
   762  007993  3E                 	db	62	;'>'
   763  007994  3C                 	db	60	;'<'
   764  007995  62                 	db	98	;'b'
   765  007996  6F                 	db	111	;'o'
   766  007997  64                 	db	100	;'d'
   767  007998  79                 	db	121	;'y'
   768  007999  3E                 	db	62	;'>'
   769  00799A  3C                 	db	60	;'<'
   770  00799B  66                 	db	102	;'f'
   771  00799C  6F                 	db	111	;'o'
   772  00799D  72                 	db	114	;'r'
   773  00799E  6D                 	db	109	;'m'
   774  00799F  20                 	db	32
   775  0079A0  61                 	db	97	;'a'
   776  0079A1  63                 	db	99	;'c'
   777  0079A2  74                 	db	116	;'t'
   778  0079A3  69                 	db	105	;'i'
   779  0079A4  6F                 	db	111	;'o'
   780  0079A5  6E                 	db	110	;'n'
   781  0079A6  3D                 	db	61	;'='
   782  0079A7  22                 	db	34
   783  0079A8  2F                 	db	47
   784  0079A9  77                 	db	119	;'w'
   785  0079AA  69                 	db	105	;'i'
   786  0079AB  66                 	db	102	;'f'
   787  0079AC  69                 	db	105	;'i'
   788  0079AD  22                 	db	34
   789  0079AE  6D                 	db	109	;'m'
   790  0079AF  65                 	db	101	;'e'
   791  0079B0  74                 	db	116	;'t'
   792  0079B1  68                 	db	104	;'h'
   793  0079B2  6F                 	db	111	;'o'
   794  0079B3  64                 	db	100	;'d'
   795  0079B4  3D                 	db	61	;'='
   796  0079B5  22                 	db	34
   797  0079B6  70                 	db	112	;'p'
   798  0079B7  6F                 	db	111	;'o'
   799  0079B8  73                 	db	115	;'s'
   800  0079B9  74                 	db	116	;'t'
   801  0079BA  22                 	db	34
   802  0079BB  3E                 	db	62	;'>'
   803  0079BC  3C                 	db	60	;'<'
   804  0079BD  68                 	db	104	;'h'
   805  0079BE  31                 	db	49	;'1'
   806  0079BF  3E                 	db	62	;'>'
   807  0079C0  43                 	db	67	;'C'
   808  0079C1  6F                 	db	111	;'o'
   809  0079C2  6E                 	db	110	;'n'
   810  0079C3  66                 	db	102	;'f'
   811  0079C4  69                 	db	105	;'i'
   812  0079C5  67                 	db	103	;'g'
   813  0079C6  75                 	db	117	;'u'
   814  0079C7  72                 	db	114	;'r'
   815  0079C8  61                 	db	97	;'a'
   816  0079C9  E7                 	db	-25
   817  0079CA  E3                 	db	-29
   818  0079CB  6F                 	db	111	;'o'
   819  0079CC  20                 	db	32
   820  0079CD  57                 	db	87	;'W'
   821  0079CE  69                 	db	105	;'i'
   822  0079CF  66                 	db	102	;'f'
   823  0079D0  69                 	db	105	;'i'
   824  0079D1  3C                 	db	60	;'<'
   825  0079D2  2F                 	db	47
   826  0079D3  68                 	db	104	;'h'
   827  0079D4  31                 	db	49	;'1'
   828  0079D5  3E                 	db	62	;'>'
   829  0079D6  4E                 	db	78	;'N'
   830  0079D7  4F                 	db	79	;'O'
   831  0079D8  4D                 	db	77	;'M'
   832  0079D9  45                 	db	69	;'E'
   833  0079DA  20                 	db	32
   834  0079DB  44                 	db	68	;'D'
   835  0079DC  4F                 	db	79	;'O'
   836  0079DD  20                 	db	32
   837  0079DE  57                 	db	87	;'W'
   838  0079DF  49                 	db	73	;'I'
   839  0079E0  46                 	db	70	;'F'
   840  0079E1  49                 	db	73	;'I'
   841  0079E2  3A                 	db	58	;':'
   842  0079E3  3C                 	db	60	;'<'
   843  0079E4  69                 	db	105	;'i'
   844  0079E5  6E                 	db	110	;'n'
   845  0079E6  70                 	db	112	;'p'
   846  0079E7  75                 	db	117	;'u'
   847  0079E8  74                 	db	116	;'t'
   848  0079E9  20                 	db	32
   849  0079EA  74                 	db	116	;'t'
   850  0079EB  79                 	db	121	;'y'
   851  0079EC  70                 	db	112	;'p'
   852  0079ED  65                 	db	101	;'e'
   853  0079EE  3D                 	db	61	;'='
   854  0079EF  22                 	db	34
   855  0079F0  74                 	db	116	;'t'
   856  0079F1  65                 	db	101	;'e'
   857  0079F2  78                 	db	120	;'x'
   858  0079F3  74                 	db	116	;'t'
   859  0079F4  22                 	db	34
   860  0079F5  6E                 	db	110	;'n'
   861  0079F6  61                 	db	97	;'a'
   862  0079F7  6D                 	db	109	;'m'
   863  0079F8  65                 	db	101	;'e'
   864  0079F9  3D                 	db	61	;'='
   865  0079FA  22                 	db	34
   866  0079FB  73                 	db	115	;'s'
   867  0079FC  73                 	db	115	;'s'
   868  0079FD  69                 	db	105	;'i'
   869  0079FE  64                 	db	100	;'d'
   870  0079FF  22                 	db	34
   871  007A00  20                 	db	32
   872  007A01  72                 	db	114	;'r'
   873  007A02  65                 	db	101	;'e'
   874  007A03  71                 	db	113	;'q'
   875  007A04  75                 	db	117	;'u'
   876  007A05  69                 	db	105	;'i'
   877  007A06  72                 	db	114	;'r'
   878  007A07  65                 	db	101	;'e'
   879  007A08  64                 	db	100	;'d'
   880  007A09  3E                 	db	62	;'>'
   881  007A0A  53                 	db	83	;'S'
   882  007A0B  45                 	db	69	;'E'
   883  007A0C  4E                 	db	78	;'N'
   884  007A0D  48                 	db	72	;'H'
   885  007A0E  41                 	db	65	;'A'
   886  007A0F  20                 	db	32
   887  007A10  44                 	db	68	;'D'
   888  007A11  4F                 	db	79	;'O'
   889  007A12  20                 	db	32
   890  007A13  57                 	db	87	;'W'
   891  007A14  49                 	db	73	;'I'
   892  007A15  46                 	db	70	;'F'
   893  007A16  49                 	db	73	;'I'
   894  007A17  3A                 	db	58	;':'
   895  007A18  3C                 	db	60	;'<'
   896  007A19  69                 	db	105	;'i'
   897  007A1A  6E                 	db	110	;'n'
   898  007A1B  70                 	db	112	;'p'
   899  007A1C  75                 	db	117	;'u'
   900  007A1D  74                 	db	116	;'t'
   901  007A1E  20                 	db	32
   902  007A1F  74                 	db	116	;'t'
   903  007A20  79                 	db	121	;'y'
   904  007A21  70                 	db	112	;'p'
   905  007A22  65                 	db	101	;'e'
   906  007A23  3D                 	db	61	;'='
   907  007A24  22                 	db	34
   908  007A25  74                 	db	116	;'t'
   909  007A26  65                 	db	101	;'e'
   910  007A27  78                 	db	120	;'x'
   911  007A28  74                 	db	116	;'t'
   912  007A29  22                 	db	34
   913  007A2A  6E                 	db	110	;'n'
   914  007A2B  61                 	db	97	;'a'
   915  007A2C  6D                 	db	109	;'m'
   916  007A2D  65                 	db	101	;'e'
   917  007A2E  3D                 	db	61	;'='
   918  007A2F  22                 	db	34
   919  007A30  73                 	db	115	;'s'
   920  007A31  65                 	db	101	;'e'
   921  007A32  6E                 	db	110	;'n'
   922  007A33  68                 	db	104	;'h'
   923  007A34  61                 	db	97	;'a'
   924  007A35  22                 	db	34
   925  007A36  3E                 	db	62	;'>'
   926  007A37  3C                 	db	60	;'<'
   927  007A38  69                 	db	105	;'i'
   928  007A39  6E                 	db	110	;'n'
   929  007A3A  70                 	db	112	;'p'
   930  007A3B  75                 	db	117	;'u'
   931  007A3C  74                 	db	116	;'t'
   932  007A3D  20                 	db	32
   933  007A3E  74                 	db	116	;'t'
   934  007A3F  79                 	db	121	;'y'
   935  007A40  70                 	db	112	;'p'
   936  007A41  65                 	db	101	;'e'
   937  007A42  3D                 	db	61	;'='
   938  007A43  22                 	db	34
   939  007A44  68                 	db	104	;'h'
   940  007A45  69                 	db	105	;'i'
   941  007A46  64                 	db	100	;'d'
   942  007A47  64                 	db	100	;'d'
   943  007A48  65                 	db	101	;'e'
   944  007A49  6E                 	db	110	;'n'
   945  007A4A  22                 	db	34
   946  007A4B  20                 	db	32
   947  007A4C  6E                 	db	110	;'n'
   948  007A4D  61                 	db	97	;'a'
   949  007A4E  6D                 	db	109	;'m'
   950  007A4F  65                 	db	101	;'e'
   951  007A50  3D                 	db	61	;'='
   952  007A51  22                 	db	34
   953  007A52  66                 	db	102	;'f'
   954  007A53  69                 	db	105	;'i'
   955  007A54  6D                 	db	109	;'m'
   956  007A55  73                 	db	115	;'s'
   957  007A56  74                 	db	116	;'t'
   958  007A57  72                 	db	114	;'r'
   959  007A58  22                 	db	34
   960  007A59  3E                 	db	62	;'>'
   961  007A5A  3C                 	db	60	;'<'
   962  007A5B  62                 	db	98	;'b'
   963  007A5C  75                 	db	117	;'u'
   964  007A5D  74                 	db	116	;'t'
   965  007A5E  74                 	db	116	;'t'
   966  007A5F  6F                 	db	111	;'o'
   967  007A60  6E                 	db	110	;'n'
   968  007A61  20                 	db	32
   969  007A62  74                 	db	116	;'t'
   970  007A63  79                 	db	121	;'y'
   971  007A64  70                 	db	112	;'p'
   972  007A65  65                 	db	101	;'e'
   973  007A66  3D                 	db	61	;'='
   974  007A67  22                 	db	34
   975  007A68  73                 	db	115	;'s'
   976  007A69  75                 	db	117	;'u'
   977  007A6A  62                 	db	98	;'b'
   978  007A6B  6D                 	db	109	;'m'
   979  007A6C  69                 	db	105	;'i'
   980  007A6D  74                 	db	116	;'t'
   981  007A6E  22                 	db	34
   982  007A6F  3E                 	db	62	;'>'
   983  007A70  4F                 	db	79	;'O'
   984  007A71  4B                 	db	75	;'K'
   985  007A72  3C                 	db	60	;'<'
   986  007A73  2F                 	db	47
   987  007A74  62                 	db	98	;'b'
   988  007A75  75                 	db	117	;'u'
   989  007A76  74                 	db	116	;'t'
   990  007A77  74                 	db	116	;'t'
   991  007A78  6F                 	db	111	;'o'
   992  007A79  6E                 	db	110	;'n'
   993  007A7A  3E                 	db	62	;'>'
   994  007A7B  3C                 	db	60	;'<'
   995  007A7C  2F                 	db	47
   996  007A7D  66                 	db	102	;'f'
   997  007A7E  6F                 	db	111	;'o'
   998  007A7F  72                 	db	114	;'r'
   999  007A80  6D                 	db	109	;'m'
  1000  007A81  3E                 	db	62	;'>'
  1001  007A82  3C                 	db	60	;'<'
  1002  007A83  2F                 	db	47
  1003  007A84  62                 	db	98	;'b'
  1004  007A85  6F                 	db	111	;'o'
  1005  007A86  64                 	db	100	;'d'
  1006  007A87  79                 	db	121	;'y'
  1007  007A88  3E                 	db	62	;'>'
  1008  007A89  3C                 	db	60	;'<'
  1009  007A8A  2F                 	db	47
  1010  007A8B  68                 	db	104	;'h'
  1011  007A8C  74                 	db	116	;'t'
  1012  007A8D  6D                 	db	109	;'m'
  1013  007A8E  6C                 	db	108	;'l'
  1014  007A8F  3E                 	db	62	;'>'
  1015  007A90  0D                 	db	13
  1016  007A91  0A                 	db	10
  1017  007A92  0D                 	db	13
  1018  007A93  0A                 	db	10
  1019  007A94  5C                 	db	92	;'\'
  1020  007A95  30                 	db	48	;'0'
  1021  007A96  00                 	db	0
  1022  007A97                     STR_59:
  1023  007A97  47                 	db	71	;'G'
  1024  007A98  45                 	db	69	;'E'
  1025  007A99  54                 	db	84	;'T'
  1026  007A9A  20                 	db	32
  1027  007A9B  2F                 	db	47
  1028  007A9C  61                 	db	97	;'a'
  1029  007A9D  70                 	db	112	;'p'
  1030  007A9E  69                 	db	105	;'i'
  1031  007A9F  2F                 	db	47
  1032  007AA0  63                 	db	99	;'c'
  1033  007AA1  6F                 	db	111	;'o'
  1034  007AA2  6E                 	db	110	;'n'
  1035  007AA3  74                 	db	116	;'t'
  1036  007AA4  72                 	db	114	;'r'
  1037  007AA5  6F                 	db	111	;'o'
  1038  007AA6  6C                 	db	108	;'l'
  1039  007AA7  6C                 	db	108	;'l'
  1040  007AA8  65                 	db	101	;'e'
  1041  007AA9  72                 	db	114	;'r'
  1042  007AAA  3F                 	db	63	;'?'
  1043  007AAB  69                 	db	105	;'i'
  1044  007AAC  3D                 	db	61	;'='
  1045  007AAD  25                 	db	37
  1046  007AAE  64                 	db	100	;'d'
  1047  007AAF  2F                 	db	47
  1048  007AB0  25                 	db	37
  1049  007AB1  64                 	db	100	;'d'
  1050  007AB2  2F                 	db	47
  1051  007AB3  25                 	db	37
  1052  007AB4  64                 	db	100	;'d'
  1053  007AB5  2F                 	db	47
  1054  007AB6  25                 	db	37
  1055  007AB7  64                 	db	100	;'d'
  1056  007AB8  2F                 	db	47
  1057  007AB9  25                 	db	37
  1058  007ABA  64                 	db	100	;'d'
  1059  007ABB  2F                 	db	47
  1060  007ABC  25                 	db	37
  1061  007ABD  64                 	db	100	;'d'
  1062  007ABE  2F                 	db	47
  1063  007ABF  25                 	db	37
  1064  007AC0  64                 	db	100	;'d'
  1065  007AC1  2F                 	db	47
  1066  007AC2  25                 	db	37
  1067  007AC3  64                 	db	100	;'d'
  1068  007AC4  2F                 	db	47
  1069  007AC5  25                 	db	37
  1070  007AC6  64                 	db	100	;'d'
  1071  007AC7  2F                 	db	47
  1072  007AC8  25                 	db	37
  1073  007AC9  64                 	db	100	;'d'
  1074  007ACA  2F                 	db	47
  1075  007ACB  25                 	db	37
  1076  007ACC  64                 	db	100	;'d'
  1077  007ACD  2F                 	db	47
  1078  007ACE  25                 	db	37
  1079  007ACF  73                 	db	115	;'s'
  1080  007AD0  2F                 	db	47
  1081  007AD1  25                 	db	37
  1082  007AD2  64                 	db	100	;'d'
  1083  007AD3  2F                 	db	47
  1084  007AD4  25                 	db	37
  1085  007AD5  73                 	db	115	;'s'
  1086  007AD6  2F                 	db	47
  1087  007AD7  25                 	db	37
  1088  007AD8  64                 	db	100	;'d'
  1089  007AD9  26                 	db	38
  1090  007ADA  70                 	db	112	;'p'
  1091  007ADB  3D                 	db	61	;'='
  1092  007ADC  25                 	db	37
  1093  007ADD  64                 	db	100	;'d'
  1094  007ADE  2F                 	db	47
  1095  007ADF  25                 	db	37
  1096  007AE0  64                 	db	100	;'d'
  1097  007AE1  2F                 	db	47
  1098  007AE2  25                 	db	37
  1099  007AE3  64                 	db	100	;'d'
  1100  007AE4  2F                 	db	47
  1101  007AE5  25                 	db	37
  1102  007AE6  64                 	db	100	;'d'
  1103  007AE7  2F                 	db	47
  1104  007AE8  25                 	db	37
  1105  007AE9  64                 	db	100	;'d'
  1106  007AEA  2F                 	db	47
  1107  007AEB  25                 	db	37
  1108  007AEC  64                 	db	100	;'d'
  1109  007AED  2F                 	db	47
  1110  007AEE  25                 	db	37
  1111  007AEF  64                 	db	100	;'d'
  1112  007AF0  2F                 	db	47
  1113  007AF1  25                 	db	37
  1114  007AF2  64                 	db	100	;'d'
  1115  007AF3  2F                 	db	47
  1116  007AF4  25                 	db	37
  1117  007AF5  64                 	db	100	;'d'
  1118  007AF6  2F                 	db	47
  1119  007AF7  25                 	db	37
  1120  007AF8  64                 	db	100	;'d'
  1121  007AF9  2F                 	db	47
  1122  007AFA  25                 	db	37
  1123  007AFB  64                 	db	100	;'d'
  1124  007AFC  2F                 	db	47
  1125  007AFD  25                 	db	37
  1126  007AFE  64                 	db	100	;'d'
  1127  007AFF  2F                 	db	47
  1128  007B00  25                 	db	37
  1129  007B01  64                 	db	100	;'d'
  1130  007B02  2F                 	db	47
  1131  007B03  25                 	db	37
  1132  007B04  64                 	db	100	;'d'
  1133  007B05  2F                 	db	47
  1134  007B06  25                 	db	37
  1135  007B07  64                 	db	100	;'d'
  1136  007B08  20                 	db	32
  1137  007B09  48                 	db	72	;'H'
  1138  007B0A  54                 	db	84	;'T'
  1139  007B0B  54                 	db	84	;'T'
  1140  007B0C  50                 	db	80	;'P'
  1141  007B0D  2F                 	db	47
  1142  007B0E  31                 	db	49	;'1'
  1143  007B0F  2E                 	db	46
  1144  007B10  31                 	db	49	;'1'
  1145  007B11  0D                 	db	13
  1146  007B12  0A                 	db	10
  1147  007B13  48                 	db	72	;'H'
  1148  007B14  6F                 	db	111	;'o'
  1149  007B15  73                 	db	115	;'s'
  1150  007B16  74                 	db	116	;'t'
  1151  007B17  3A                 	db	58	;':'
  1152  007B18  20                 	db	32
  1153  007B19  61                 	db	97	;'a'
  1154  007B1A  70                 	db	112	;'p'
  1155  007B1B  69                 	db	105	;'i'
  1156  007B1C  2D                 	db	45
  1157  007B1D  74                 	db	116	;'t'
  1158  007B1E  65                 	db	101	;'e'
  1159  007B1F  63                 	db	99	;'c'
  1160  007B20  68                 	db	104	;'h'
  1161  007B21  6E                 	db	110	;'n'
  1162  007B22  6F                 	db	111	;'o'
  1163  007B23  77                 	db	119	;'w'
  1164  007B24  2E                 	db	46
  1165  007B25  68                 	db	104	;'h'
  1166  007B26  65                 	db	101	;'e'
  1167  007B27  72                 	db	114	;'r'
  1168  007B28  6F                 	db	111	;'o'
  1169  007B29  6B                 	db	107	;'k'
  1170  007B2A  75                 	db	117	;'u'
  1171  007B2B  61                 	db	97	;'a'
  1172  007B2C  70                 	db	112	;'p'
  1173  007B2D  70                 	db	112	;'p'
  1174  007B2E  2E                 	db	46
  1175  007B2F  63                 	db	99	;'c'
  1176  007B30  6F                 	db	111	;'o'
  1177  007B31  6D                 	db	109	;'m'
  1178  007B32  0D                 	db	13
  1179  007B33  0A                 	db	10
  1180  007B34  0D                 	db	13
  1181  007B35  0A                 	db	10
  1182  007B36  5C                 	db	92	;'\'
  1183  007B37  30                 	db	48	;'0'
  1184  007B38  00                 	db	0
  1185  007B39                     STR_53:
  1186  007B39  41                 	db	65	;'A'
  1187  007B3A  54                 	db	84	;'T'
  1188  007B3B  2B                 	db	43
  1189  007B3C  43                 	db	67	;'C'
  1190  007B3D  49                 	db	73	;'I'
  1191  007B3E  50                 	db	80	;'P'
  1192  007B3F  53                 	db	83	;'S'
  1193  007B40  54                 	db	84	;'T'
  1194  007B41  41                 	db	65	;'A'
  1195  007B42  52                 	db	82	;'R'
  1196  007B43  54                 	db	84	;'T'
  1197  007B44  3D                 	db	61	;'='
  1198  007B45  22                 	db	34
  1199  007B46  54                 	db	84	;'T'
  1200  007B47  43                 	db	67	;'C'
  1201  007B48  50                 	db	80	;'P'
  1202  007B49  22                 	db	34
  1203  007B4A  2C                 	db	44
  1204  007B4B  22                 	db	34
  1205  007B4C  61                 	db	97	;'a'
  1206  007B4D  70                 	db	112	;'p'
  1207  007B4E  69                 	db	105	;'i'
  1208  007B4F  2D                 	db	45
  1209  007B50  74                 	db	116	;'t'
  1210  007B51  65                 	db	101	;'e'
  1211  007B52  63                 	db	99	;'c'
  1212  007B53  68                 	db	104	;'h'
  1213  007B54  6E                 	db	110	;'n'
  1214  007B55  6F                 	db	111	;'o'
  1215  007B56  77                 	db	119	;'w'
  1216  007B57  2E                 	db	46
  1217  007B58  68                 	db	104	;'h'
  1218  007B59  65                 	db	101	;'e'
  1219  007B5A  72                 	db	114	;'r'
  1220  007B5B  6F                 	db	111	;'o'
  1221  007B5C  6B                 	db	107	;'k'
  1222  007B5D  75                 	db	117	;'u'
  1223  007B5E  61                 	db	97	;'a'
  1224  007B5F  70                 	db	112	;'p'
  1225  007B60  70                 	db	112	;'p'
  1226  007B61  2E                 	db	46
  1227  007B62  63                 	db	99	;'c'
  1228  007B63  6F                 	db	111	;'o'
  1229  007B64  6D                 	db	109	;'m'
  1230  007B65  22                 	db	34
  1231  007B66  2C                 	db	44
  1232  007B67  38                 	db	56	;'8'
  1233  007B68  30                 	db	48	;'0'
  1234  007B69  0D                 	db	13
  1235  007B6A  0A                 	db	10
  1236  007B6B  00                 	db	0
  1237  007B6C                     STR_31:
  1238  007B6C  48                 	db	72	;'H'
  1239  007B6D  54                 	db	84	;'T'
  1240  007B6E  54                 	db	84	;'T'
  1241  007B6F  50                 	db	80	;'P'
  1242  007B70  20                 	db	32
  1243  007B71  31                 	db	49	;'1'
  1244  007B72  2E                 	db	46
  1245  007B73  31                 	db	49	;'1'
  1246  007B74  2F                 	db	47
  1247  007B75  32                 	db	50	;'2'
  1248  007B76  30                 	db	48	;'0'
  1249  007B77  30                 	db	48	;'0'
  1250  007B78  20                 	db	32
  1251  007B79  4F                 	db	79	;'O'
  1252  007B7A  4B                 	db	75	;'K'
  1253  007B7B  0D                 	db	13
  1254  007B7C  0A                 	db	10
  1255  007B7D  43                 	db	67	;'C'
  1256  007B7E  6F                 	db	111	;'o'
  1257  007B7F  6E                 	db	110	;'n'
  1258  007B80  74                 	db	116	;'t'
  1259  007B81  65                 	db	101	;'e'
  1260  007B82  6E                 	db	110	;'n'
  1261  007B83  74                 	db	116	;'t'
  1262  007B84  2D                 	db	45
  1263  007B85  74                 	db	116	;'t'
  1264  007B86  79                 	db	121	;'y'
  1265  007B87  70                 	db	112	;'p'
  1266  007B88  65                 	db	101	;'e'
  1267  007B89  3A                 	db	58	;':'
  1268  007B8A  20                 	db	32
  1269  007B8B  74                 	db	116	;'t'
  1270  007B8C  65                 	db	101	;'e'
  1271  007B8D  78                 	db	120	;'x'
  1272  007B8E  74                 	db	116	;'t'
  1273  007B8F  2F                 	db	47
  1274  007B90  68                 	db	104	;'h'
  1275  007B91  74                 	db	116	;'t'
  1276  007B92  6D                 	db	109	;'m'
  1277  007B93  6C                 	db	108	;'l'
  1278  007B94  0D                 	db	13
  1279  007B95  0A                 	db	10
  1280  007B96  0D                 	db	13
  1281  007B97  0A                 	db	10
  1282  007B98  00                 	db	0
  1283  007B99                     STR_16:
  1284  007B99  41                 	db	65	;'A'
  1285  007B9A  54                 	db	84	;'T'
  1286  007B9B  2B                 	db	43
  1287  007B9C  43                 	db	67	;'C'
  1288  007B9D  57                 	db	87	;'W'
  1289  007B9E  53                 	db	83	;'S'
  1290  007B9F  41                 	db	65	;'A'
  1291  007BA0  50                 	db	80	;'P'
  1292  007BA1  3D                 	db	61	;'='
  1293  007BA2  22                 	db	34
  1294  007BA3  43                 	db	67	;'C'
  1295  007BA4  4F                 	db	79	;'O'
  1296  007BA5  4E                 	db	78	;'N'
  1297  007BA6  54                 	db	84	;'T'
  1298  007BA7  52                 	db	82	;'R'
  1299  007BA8  4F                 	db	79	;'O'
  1300  007BA9  4C                 	db	76	;'L'
  1301  007BAA  41                 	db	65	;'A'
  1302  007BAB  44                 	db	68	;'D'
  1303  007BAC  4F                 	db	79	;'O'
  1304  007BAD  52                 	db	82	;'R'
  1305  007BAE  22                 	db	34
  1306  007BAF  2C                 	db	44
  1307  007BB0  22                 	db	34
  1308  007BB1  22                 	db	34
  1309  007BB2  2C                 	db	44
  1310  007BB3  31                 	db	49	;'1'
  1311  007BB4  31                 	db	49	;'1'
  1312  007BB5  2C                 	db	44
  1313  007BB6  30                 	db	48	;'0'
  1314  007BB7  2C                 	db	44
  1315  007BB8  34                 	db	52	;'4'
  1316  007BB9  0D                 	db	13
  1317  007BBA  0A                 	db	10
  1318  007BBB  00                 	db	0
  1319  007BBC                     STR_18:
  1320  007BBC  41                 	db	65	;'A'
  1321  007BBD  54                 	db	84	;'T'
  1322  007BBE  2B                 	db	43
  1323  007BBF  43                 	db	67	;'C'
  1324  007BC0  49                 	db	73	;'I'
  1325  007BC1  50                 	db	80	;'P'
  1326  007BC2  41                 	db	65	;'A'
  1327  007BC3  50                 	db	80	;'P'
  1328  007BC4  3D                 	db	61	;'='
  1329  007BC5  22                 	db	34
  1330  007BC6  31                 	db	49	;'1'
  1331  007BC7  30                 	db	48	;'0'
  1332  007BC8  2E                 	db	46
  1333  007BC9  31                 	db	49	;'1'
  1334  007BCA  2E                 	db	46
  1335  007BCB  31                 	db	49	;'1'
  1336  007BCC  2E                 	db	46
  1337  007BCD  31                 	db	49	;'1'
  1338  007BCE  22                 	db	34
  1339  007BCF  0D                 	db	13
  1340  007BD0  0A                 	db	10
  1341  007BD1  00                 	db	0
  1342  007BD2                     STR_20:
  1343  007BD2  41                 	db	65	;'A'
  1344  007BD3  54                 	db	84	;'T'
  1345  007BD4  2B                 	db	43
  1346  007BD5  43                 	db	67	;'C'
  1347  007BD6  49                 	db	73	;'I'
  1348  007BD7  50                 	db	80	;'P'
  1349  007BD8  53                 	db	83	;'S'
  1350  007BD9  45                 	db	69	;'E'
  1351  007BDA  52                 	db	82	;'R'
  1352  007BDB  56                 	db	86	;'V'
  1353  007BDC  45                 	db	69	;'E'
  1354  007BDD  52                 	db	82	;'R'
  1355  007BDE  3D                 	db	61	;'='
  1356  007BDF  31                 	db	49	;'1'
  1357  007BE0  2C                 	db	44
  1358  007BE1  38                 	db	56	;'8'
  1359  007BE2  30                 	db	48	;'0'
  1360  007BE3  38                 	db	56	;'8'
  1361  007BE4  30                 	db	48	;'0'
  1362  007BE5  0D                 	db	13
  1363  007BE6  0A                 	db	10
  1364  007BE7  00                 	db	0
  1365  007BE8                     STR_76:
  1366  007BE8  55                 	db	85	;'U'
  1367  007BE9  4D                 	db	77	;'M'
  1368  007BEA  49                 	db	73	;'I'
  1369  007BEB  44                 	db	68	;'D'
  1370  007BEC  20                 	db	32
  1371  007BED  20                 	db	32
  1372  007BEE  7C                 	db	124
  1373  007BEF  20                 	db	32
  1374  007BF0  20                 	db	32
  1375  007BF1  25                 	db	37
  1376  007BF2  33                 	db	51	;'3'
  1377  007BF3  64                 	db	100	;'d'
  1378  007BF4  20                 	db	32
  1379  007BF5  7C                 	db	124
  1380  007BF6  20                 	db	32
  1381  007BF7  25                 	db	37
  1382  007BF8  33                 	db	51	;'3'
  1383  007BF9  64                 	db	100	;'d'
  1384  007BFA  20                 	db	32
  1385  007BFB  25                 	db	37
  1386  007BFC  63                 	db	99	;'c'
  1387  007BFD  00                 	db	0
  1388  007BFE                     STR_49:
  1389  007BFE  41                 	db	65	;'A'
  1390  007BFF  54                 	db	84	;'T'
  1391  007C00  2B                 	db	43
  1392  007C01  43                 	db	67	;'C'
  1393  007C02  57                 	db	87	;'W'
  1394  007C03  4A                 	db	74	;'J'
  1395  007C04  41                 	db	65	;'A'
  1396  007C05  50                 	db	80	;'P'
  1397  007C06  3D                 	db	61	;'='
  1398  007C07  22                 	db	34
  1399  007C08  25                 	db	37
  1400  007C09  73                 	db	115	;'s'
  1401  007C0A  22                 	db	34
  1402  007C0B  2C                 	db	44
  1403  007C0C  22                 	db	34
  1404  007C0D  25                 	db	37
  1405  007C0E  73                 	db	115	;'s'
  1406  007C0F  22                 	db	34
  1407  007C10  0D                 	db	13
  1408  007C11  0A                 	db	10
  1409  007C12  00                 	db	0
  1410  007C13                     STR_29:
  1411  007C13  41                 	db	65	;'A'
  1412  007C14  54                 	db	84	;'T'
  1413  007C15  2B                 	db	43
  1414  007C16  43                 	db	67	;'C'
  1415  007C17  49                 	db	73	;'I'
  1416  007C18  50                 	db	80	;'P'
  1417  007C19  53                 	db	83	;'S'
  1418  007C1A  45                 	db	69	;'E'
  1419  007C1B  4E                 	db	78	;'N'
  1420  007C1C  44                 	db	68	;'D'
  1421  007C1D  45                 	db	69	;'E'
  1422  007C1E  58                 	db	88	;'X'
  1423  007C1F  3D                 	db	61	;'='
  1424  007C20  30                 	db	48	;'0'
  1425  007C21  2C                 	db	44
  1426  007C22  38                 	db	56	;'8'
  1427  007C23  30                 	db	48	;'0'
  1428  007C24  30                 	db	48	;'0'
  1429  007C25  0D                 	db	13
  1430  007C26  0A                 	db	10
  1431  007C27  00                 	db	0
  1432  007C28                     STR_24:
  1433  007C28  63                 	db	99	;'c'
  1434  007C29  6F                 	db	111	;'o'
  1435  007C2A  6E                 	db	110	;'n'
  1436  007C2B  66                 	db	102	;'f'
  1437  007C2C  69                 	db	105	;'i'
  1438  007C2D  67                 	db	103	;'g'
  1439  007C2E  75                 	db	117	;'u'
  1440  007C2F  72                 	db	114	;'r'
  1441  007C30  61                 	db	97	;'a'
  1442  007C31  72                 	db	114	;'r'
  1443  007C32  20                 	db	32
  1444  007C33  6F                 	db	111	;'o'
  1445  007C34  20                 	db	32
  1446  007C35  57                 	db	87	;'W'
  1447  007C36  49                 	db	73	;'I'
  1448  007C37  46                 	db	70	;'F'
  1449  007C38  49                 	db	73	;'I'
  1450  007C39  2E                 	db	46
  1451  007C3A  2E                 	db	46
  1452  007C3B  2E                 	db	46
  1453  007C3C  00                 	db	0
  1454  007C3D                     STR_75:
  1455  007C3D  54                 	db	84	;'T'
  1456  007C3E  45                 	db	69	;'E'
  1457  007C3F  4D                 	db	77	;'M'
  1458  007C40  50                 	db	80	;'P'
  1459  007C41  20                 	db	32
  1460  007C42  20                 	db	32
  1461  007C43  7C                 	db	124
  1462  007C44  20                 	db	32
  1463  007C45  20                 	db	32
  1464  007C46  25                 	db	37
  1465  007C47  33                 	db	51	;'3'
  1466  007C48  64                 	db	100	;'d'
  1467  007C49  20                 	db	32
  1468  007C4A  7C                 	db	124
  1469  007C4B  20                 	db	32
  1470  007C4C  25                 	db	37
  1471  007C4D  33                 	db	51	;'3'
  1472  007C4E  64                 	db	100	;'d'
  1473  007C4F  20                 	db	32
  1474  007C50  46                 	db	70	;'F'
  1475  007C51  00                 	db	0
  1476  007C52                     STR_78:
  1477  007C52  20                 	db	32
  1478  007C53  2A                 	db	42
  1479  007C54  46                 	db	70	;'F'
  1480  007C55  41                 	db	65	;'A'
  1481  007C56  4C                 	db	76	;'L'
  1482  007C57  54                 	db	84	;'T'
  1483  007C58  41                 	db	65	;'A'
  1484  007C59  20                 	db	32
  1485  007C5A  44                 	db	68	;'D'
  1486  007C5B  45                 	db	69	;'E'
  1487  007C5C  20                 	db	32
  1488  007C5D  45                 	db	69	;'E'
  1489  007C5E  4E                 	db	78	;'N'
  1490  007C5F  45                 	db	69	;'E'
  1491  007C60  52                 	db	82	;'R'
  1492  007C61  47                 	db	71	;'G'
  1493  007C62  49                 	db	73	;'I'
  1494  007C63  41                 	db	65	;'A'
  1495  007C64  2A                 	db	42
  1496  007C65  00                 	db	0
  1497  007C66                     STR_107:
  1498  007C66  43                 	db	67	;'C'
  1499  007C67  4F                 	db	79	;'O'
  1500  007C68  4E                 	db	78	;'N'
  1501  007C69  46                 	db	70	;'F'
  1502  007C6A  49                 	db	73	;'I'
  1503  007C6B  47                 	db	71	;'G'
  1504  007C6C  55                 	db	85	;'U'
  1505  007C6D  52                 	db	82	;'R'
  1506  007C6E  41                 	db	65	;'A'
  1507  007C6F  52                 	db	82	;'R'
  1508  007C70  20                 	db	32
  1509  007C71  20                 	db	32
  1510  007C72  20                 	db	32
  1511  007C73  20                 	db	32
  1512  007C74  20                 	db	32
  1513  007C75  20                 	db	32
  1514  007C76  20                 	db	32
  1515  007C77  3E                 	db	62	;'>'
  1516  007C78  3E                 	db	62	;'>'
  1517  007C79  00                 	db	0
  1518  007C7A                     STR_93:
  1519  007C7A  43                 	db	67	;'C'
  1520  007C7B  4F                 	db	79	;'O'
  1521  007C7C  4E                 	db	78	;'N'
  1522  007C7D  46                 	db	70	;'F'
  1523  007C7E  49                 	db	73	;'I'
  1524  007C7F  47                 	db	71	;'G'
  1525  007C80  20                 	db	32
  1526  007C81  57                 	db	87	;'W'
  1527  007C82  49                 	db	73	;'I'
  1528  007C83  46                 	db	70	;'F'
  1529  007C84  49                 	db	73	;'I'
  1530  007C85  20                 	db	32
  1531  007C86  20                 	db	32
  1532  007C87  20                 	db	32
  1533  007C88  20                 	db	32
  1534  007C89  20                 	db	32
  1535  007C8A  20                 	db	32
  1536  007C8B  3E                 	db	62	;'>'
  1537  007C8C  3E                 	db	62	;'>'
  1538  007C8D  00                 	db	0
  1539  007C8E                     STR_92:
  1540  007C8E  54                 	db	84	;'T'
  1541  007C8F  45                 	db	69	;'E'
  1542  007C90  4D                 	db	77	;'M'
  1543  007C91  50                 	db	80	;'P'
  1544  007C92  4F                 	db	79	;'O'
  1545  007C93  20                 	db	32
  1546  007C94  46                 	db	70	;'F'
  1547  007C95  49                 	db	73	;'I'
  1548  007C96  4D                 	db	77	;'M'
  1549  007C97  20                 	db	32
  1550  007C98  46                 	db	70	;'F'
  1551  007C99  41                 	db	65	;'A'
  1552  007C9A  53                 	db	83	;'S'
  1553  007C9B  45                 	db	69	;'E'
  1554  007C9C  20                 	db	32
  1555  007C9D  20                 	db	32
  1556  007C9E  20                 	db	32
  1557  007C9F  3E                 	db	62	;'>'
  1558  007CA0  3E                 	db	62	;'>'
  1559  007CA1  00                 	db	0
  1560  007CA2                     STR_94:
  1561  007CA2  43                 	db	67	;'C'
  1562  007CA3  4F                 	db	79	;'O'
  1563  007CA4  4E                 	db	78	;'N'
  1564  007CA5  46                 	db	70	;'F'
  1565  007CA6  49                 	db	73	;'I'
  1566  007CA7  47                 	db	71	;'G'
  1567  007CA8  20                 	db	32
  1568  007CA9  41                 	db	65	;'A'
  1569  007CAA  56                 	db	86	;'V'
  1570  007CAB  41                 	db	65	;'A'
  1571  007CAC  4E                 	db	78	;'N'
  1572  007CAD  43                 	db	67	;'C'
  1573  007CAE  41                 	db	65	;'A'
  1574  007CAF  44                 	db	68	;'D'
  1575  007CB0  41                 	db	65	;'A'
  1576  007CB1  53                 	db	83	;'S'
  1577  007CB2  20                 	db	32
  1578  007CB3  3E                 	db	62	;'>'
  1579  007CB4  3E                 	db	62	;'>'
  1580  007CB5  00                 	db	0
  1581  007CB6                     STR_69:
  1582  007CB6  20                 	db	32
  1583  007CB7  54                 	db	84	;'T'
  1584  007CB8  45                 	db	69	;'E'
  1585  007CB9  43                 	db	67	;'C'
  1586  007CBA  48                 	db	72	;'H'
  1587  007CBB  4E                 	db	78	;'N'
  1588  007CBC  4F                 	db	79	;'O'
  1589  007CBD  57                 	db	87	;'W'
  1590  007CBE  20                 	db	32
  1591  007CBF  54                 	db	84	;'T'
  1592  007CC0  65                 	db	101	;'e'
  1593  007CC1  63                 	db	99	;'c'
  1594  007CC2  6E                 	db	110	;'n'
  1595  007CC3  6F                 	db	111	;'o'
  1596  007CC4  6C                 	db	108	;'l'
  1597  007CC5  6F                 	db	111	;'o'
  1598  007CC6  67                 	db	103	;'g'
  1599  007CC7  69                 	db	105	;'i'
  1600  007CC8  61                 	db	97	;'a'
  1601  007CC9  00                 	db	0
  1602  007CCA                     STR_22:
  1603  007CCA  43                 	db	67	;'C'
  1604  007CCB  6F                 	db	111	;'o'
  1605  007CCC  6E                 	db	110	;'n'
  1606  007CCD  65                 	db	101	;'e'
  1607  007CCE  63                 	db	99	;'c'
  1608  007CCF  74                 	db	116	;'t'
  1609  007CD0  65                 	db	101	;'e'
  1610  007CD1  2D                 	db	45
  1611  007CD2  73                 	db	115	;'s'
  1612  007CD3  65                 	db	101	;'e'
  1613  007CD4  20                 	db	32
  1614  007CD5  61                 	db	97	;'a'
  1615  007CD6  20                 	db	32
  1616  007CD7  72                 	db	114	;'r'
  1617  007CD8  65                 	db	101	;'e'
  1618  007CD9  64                 	db	100	;'d'
  1619  007CDA  65                 	db	101	;'e'
  1620  007CDB  20                 	db	32
  1621  007CDC  65                 	db	101	;'e'
  1622  007CDD  00                 	db	0
  1623  007CDE                     STR_55:
  1624  007CDE  41                 	db	65	;'A'
  1625  007CDF  54                 	db	84	;'T'
  1626  007CE0  2B                 	db	43
  1627  007CE1  43                 	db	67	;'C'
  1628  007CE2  49                 	db	73	;'I'
  1629  007CE3  50                 	db	80	;'P'
  1630  007CE4  53                 	db	83	;'S'
  1631  007CE5  45                 	db	69	;'E'
  1632  007CE6  4E                 	db	78	;'N'
  1633  007CE7  44                 	db	68	;'D'
  1634  007CE8  45                 	db	69	;'E'
  1635  007CE9  58                 	db	88	;'X'
  1636  007CEA  3D                 	db	61	;'='
  1637  007CEB  32                 	db	50	;'2'
  1638  007CEC  35                 	db	53	;'5'
  1639  007CED  30                 	db	48	;'0'
  1640  007CEE  0D                 	db	13
  1641  007CEF  0A                 	db	10
  1642  007CF0  00                 	db	0
  1643  007CF1                     STR_110:
  1644  007CF1  53                 	db	83	;'S'
  1645  007CF2  65                 	db	101	;'e'
  1646  007CF3  63                 	db	99	;'c'
  1647  007CF4  2E                 	db	46
  1648  007CF5  20                 	db	32
  1649  007CF6  46                 	db	70	;'F'
  1650  007CF7  6F                 	db	111	;'o'
  1651  007CF8  6C                 	db	108	;'l'
  1652  007CF9  68                 	db	104	;'h'
  1653  007CFA  61                 	db	97	;'a'
  1654  007CFB  20                 	db	32
  1655  007CFC  3A                 	db	58	;':'
  1656  007CFD  20                 	db	32
  1657  007CFE  25                 	db	37
  1658  007CFF  64                 	db	100	;'d'
  1659  007D00  20                 	db	32
  1660  007D01  68                 	db	104	;'h'
  1661  007D02  72                 	db	114	;'r'
  1662  007D03  00                 	db	0
  1663  007D04                     STR_108:
  1664  007D04  41                 	db	65	;'A'
  1665  007D05  6D                 	db	109	;'m'
  1666  007D06  61                 	db	97	;'a'
  1667  007D07  72                 	db	114	;'r'
  1668  007D08  65                 	db	101	;'e'
  1669  007D09  6C                 	db	108	;'l'
  1670  007D0A  61                 	db	97	;'a'
  1671  007D0B  63                 	db	99	;'c'
  1672  007D0C  61                 	db	97	;'a'
  1673  007D0D  6F                 	db	111	;'o'
  1674  007D0E  20                 	db	32
  1675  007D0F  3A                 	db	58	;':'
  1676  007D10  20                 	db	32
  1677  007D11  25                 	db	37
  1678  007D12  64                 	db	100	;'d'
  1679  007D13  20                 	db	32
  1680  007D14  68                 	db	104	;'h'
  1681  007D15  72                 	db	114	;'r'
  1682  007D16  00                 	db	0
  1683  007D17                     STR_109:
  1684  007D17  4D                 	db	77	;'M'
  1685  007D18  75                 	db	117	;'u'
  1686  007D19  72                 	db	114	;'r'
  1687  007D1A  63                 	db	99	;'c'
  1688  007D1B  68                 	db	104	;'h'
  1689  007D1C  61                 	db	97	;'a'
  1690  007D1D  6D                 	db	109	;'m'
  1691  007D1E  65                 	db	101	;'e'
  1692  007D1F  6E                 	db	110	;'n'
  1693  007D20  74                 	db	116	;'t'
  1694  007D21  6F                 	db	111	;'o'
  1695  007D22  3A                 	db	58	;':'
  1696  007D23  20                 	db	32
  1697  007D24  25                 	db	37
  1698  007D25  64                 	db	100	;'d'
  1699  007D26  20                 	db	32
  1700  007D27  68                 	db	104	;'h'
  1701  007D28  72                 	db	114	;'r'
  1702  007D29  00                 	db	0
  1703  007D2A                     STR_79:
  1704  007D2A  54                 	db	84	;'T'
  1705  007D2B  45                 	db	69	;'E'
  1706  007D2C  4D                 	db	77	;'M'
  1707  007D2D  50                 	db	80	;'P'
  1708  007D2E  45                 	db	69	;'E'
  1709  007D2F  52                 	db	82	;'R'
  1710  007D30  41                 	db	65	;'A'
  1711  007D31  54                 	db	84	;'T'
  1712  007D32  55                 	db	85	;'U'
  1713  007D33  52                 	db	82	;'R'
  1714  007D34  41                 	db	65	;'A'
  1715  007D35  3A                 	db	58	;':'
  1716  007D36  20                 	db	32
  1717  007D37  25                 	db	37
  1718  007D38  64                 	db	100	;'d'
  1719  007D39  20                 	db	32
  1720  007D3A  46                 	db	70	;'F'
  1721  007D3B  00                 	db	0
  1722  007D3C                     STR_99:
  1723  007D3C  50                 	db	80	;'P'
  1724  007D3D  39                 	db	57	;'9'
  1725  007D3E  20                 	db	32
  1726  007D3F  3A                 	db	58	;':'
  1727  007D40  25                 	db	37
  1728  007D41  34                 	db	52	;'4'
  1729  007D42  64                 	db	100	;'d'
  1730  007D43  20                 	db	32
  1731  007D44  7C                 	db	124
  1732  007D45  20                 	db	32
  1733  007D46  50                 	db	80	;'P'
  1734  007D47  31                 	db	49	;'1'
  1735  007D48  33                 	db	51	;'3'
  1736  007D49  3A                 	db	58	;':'
  1737  007D4A  25                 	db	37
  1738  007D4B  34                 	db	52	;'4'
  1739  007D4C  64                 	db	100	;'d'
  1740  007D4D  00                 	db	0
  1741  007D4E                     STR_100:
  1742  007D4E  50                 	db	80	;'P'
  1743  007D4F  31                 	db	49	;'1'
  1744  007D50  30                 	db	48	;'0'
  1745  007D51  3A                 	db	58	;':'
  1746  007D52  25                 	db	37
  1747  007D53  34                 	db	52	;'4'
  1748  007D54  64                 	db	100	;'d'
  1749  007D55  20                 	db	32
  1750  007D56  7C                 	db	124
  1751  007D57  20                 	db	32
  1752  007D58  50                 	db	80	;'P'
  1753  007D59  31                 	db	49	;'1'
  1754  007D5A  34                 	db	52	;'4'
  1755  007D5B  3A                 	db	58	;':'
  1756  007D5C  25                 	db	37
  1757  007D5D  34                 	db	52	;'4'
  1758  007D5E  64                 	db	100	;'d'
  1759  007D5F  00                 	db	0
  1760  007D60                     STR_101:
  1761  007D60  50                 	db	80	;'P'
  1762  007D61  31                 	db	49	;'1'
  1763  007D62  31                 	db	49	;'1'
  1764  007D63  3A                 	db	58	;':'
  1765  007D64  25                 	db	37
  1766  007D65  34                 	db	52	;'4'
  1767  007D66  64                 	db	100	;'d'
  1768  007D67  20                 	db	32
  1769  007D68  7C                 	db	124
  1770  007D69  20                 	db	32
  1771  007D6A  50                 	db	80	;'P'
  1772  007D6B  31                 	db	49	;'1'
  1773  007D6C  35                 	db	53	;'5'
  1774  007D6D  3A                 	db	58	;':'
  1775  007D6E  25                 	db	37
  1776  007D6F  34                 	db	52	;'4'
  1777  007D70  64                 	db	100	;'d'
  1778  007D71  00                 	db	0
  1779  007D72                     STR_111:
  1780  007D72  2A                 	db	42
  1781  007D73  30                 	db	48	;'0'
  1782  007D74  20                 	db	32
  1783  007D75  6E                 	db	110	;'n'
  1784  007D76  61                 	db	97	;'a'
  1785  007D77  6F                 	db	111	;'o'
  1786  007D78  20                 	db	32
  1787  007D79  70                 	db	112	;'p'
  1788  007D7A  61                 	db	97	;'a'
  1789  007D7B  73                 	db	115	;'s'
  1790  007D7C  73                 	db	115	;'s'
  1791  007D7D  61                 	db	97	;'a'
  1792  007D7E  20                 	db	32
  1793  007D7F  66                 	db	102	;'f'
  1794  007D80  61                 	db	97	;'a'
  1795  007D81  73                 	db	115	;'s'
  1796  007D82  65                 	db	101	;'e'
  1797  007D83  00                 	db	0
  1798  007D84                     STR_23:
  1799  007D84  61                 	db	97	;'a'
  1800  007D85  63                 	db	99	;'c'
  1801  007D86  65                 	db	101	;'e'
  1802  007D87  73                 	db	115	;'s'
  1803  007D88  73                 	db	115	;'s'
  1804  007D89  65                 	db	101	;'e'
  1805  007D8A  20                 	db	32
  1806  007D8B  6F                 	db	111	;'o'
  1807  007D8C  20                 	db	32
  1808  007D8D  49                 	db	73	;'I'
  1809  007D8E  50                 	db	80	;'P'
  1810  007D8F  20                 	db	32
  1811  007D90  70                 	db	112	;'p'
  1812  007D91  61                 	db	97	;'a'
  1813  007D92  72                 	db	114	;'r'
  1814  007D93  61                 	db	97	;'a'
  1815  007D94  00                 	db	0
  1816  007D95                     STR_106:
  1817  007D95  53                 	db	83	;'S'
  1818  007D96  45                 	db	69	;'E'
  1819  007D97  4E                 	db	78	;'N'
  1820  007D98  48                 	db	72	;'H'
  1821  007D99  41                 	db	65	;'A'
  1822  007D9A  20                 	db	32
  1823  007D9B  52                 	db	82	;'R'
  1824  007D9C  45                 	db	69	;'E'
  1825  007D9D  4D                 	db	77	;'M'
  1826  007D9E  4F                 	db	79	;'O'
  1827  007D9F  54                 	db	84	;'T'
  1828  007DA0  41                 	db	65	;'A'
  1829  007DA1  3A                 	db	58	;':'
  1830  007DA2  20                 	db	32
  1831  007DA3  25                 	db	37
  1832  007DA4  64                 	db	100	;'d'
  1833  007DA5  00                 	db	0
  1834  007DA6                     STR_95:
  1835  007DA6  50                 	db	80	;'P'
  1836  007DA7  31                 	db	49	;'1'
  1837  007DA8  3A                 	db	58	;':'
  1838  007DA9  25                 	db	37
  1839  007DAA  34                 	db	52	;'4'
  1840  007DAB  64                 	db	100	;'d'
  1841  007DAC  20                 	db	32
  1842  007DAD  7C                 	db	124
  1843  007DAE  20                 	db	32
  1844  007DAF  20                 	db	32
  1845  007DB0  50                 	db	80	;'P'
  1846  007DB1  35                 	db	53	;'5'
  1847  007DB2  3A                 	db	58	;':'
  1848  007DB3  25                 	db	37
  1849  007DB4  34                 	db	52	;'4'
  1850  007DB5  64                 	db	100	;'d'
  1851  007DB6  00                 	db	0
  1852  007DB7                     STR_96:
  1853  007DB7  50                 	db	80	;'P'
  1854  007DB8  32                 	db	50	;'2'
  1855  007DB9  3A                 	db	58	;':'
  1856  007DBA  25                 	db	37
  1857  007DBB  34                 	db	52	;'4'
  1858  007DBC  64                 	db	100	;'d'
  1859  007DBD  20                 	db	32
  1860  007DBE  7C                 	db	124
  1861  007DBF  20                 	db	32
  1862  007DC0  20                 	db	32
  1863  007DC1  50                 	db	80	;'P'
  1864  007DC2  36                 	db	54	;'6'
  1865  007DC3  3A                 	db	58	;':'
  1866  007DC4  25                 	db	37
  1867  007DC5  34                 	db	52	;'4'
  1868  007DC6  64                 	db	100	;'d'
  1869  007DC7  00                 	db	0
  1870  007DC8                     STR_97:
  1871  007DC8  50                 	db	80	;'P'
  1872  007DC9  33                 	db	51	;'3'
  1873  007DCA  3A                 	db	58	;':'
  1874  007DCB  25                 	db	37
  1875  007DCC  34                 	db	52	;'4'
  1876  007DCD  64                 	db	100	;'d'
  1877  007DCE  20                 	db	32
  1878  007DCF  7C                 	db	124
  1879  007DD0  20                 	db	32
  1880  007DD1  20                 	db	32
  1881  007DD2  50                 	db	80	;'P'
  1882  007DD3  37                 	db	55	;'7'
  1883  007DD4  3A                 	db	58	;':'
  1884  007DD5  25                 	db	37
  1885  007DD6  34                 	db	52	;'4'
  1886  007DD7  64                 	db	100	;'d'
  1887  007DD8  00                 	db	0
  1888  007DD9                     STR_98:
  1889  007DD9  50                 	db	80	;'P'
  1890  007DDA  34                 	db	52	;'4'
  1891  007DDB  3A                 	db	58	;':'
  1892  007DDC  25                 	db	37
  1893  007DDD  34                 	db	52	;'4'
  1894  007DDE  64                 	db	100	;'d'
  1895  007DDF  20                 	db	32
  1896  007DE0  7C                 	db	124
  1897  007DE1  20                 	db	32
  1898  007DE2  20                 	db	32
  1899  007DE3  50                 	db	80	;'P'
  1900  007DE4  38                 	db	56	;'8'
  1901  007DE5  3A                 	db	58	;':'
  1902  007DE6  25                 	db	37
  1903  007DE7  34                 	db	52	;'4'
  1904  007DE8  64                 	db	100	;'d'
  1905  007DE9  00                 	db	0
  1906  007DEA                     STR_33:
  1907  007DEA  41                 	db	65	;'A'
  1908  007DEB  54                 	db	84	;'T'
  1909  007DEC  2B                 	db	43
  1910  007DED  43                 	db	67	;'C'
  1911  007DEE  49                 	db	73	;'I'
  1912  007DEF  50                 	db	80	;'P'
  1913  007DF0  43                 	db	67	;'C'
  1914  007DF1  4C                 	db	76	;'L'
  1915  007DF2  4F                 	db	79	;'O'
  1916  007DF3  53                 	db	83	;'S'
  1917  007DF4  45                 	db	69	;'E'
  1918  007DF5  3D                 	db	61	;'='
  1919  007DF6  30                 	db	48	;'0'
  1920  007DF7  0D                 	db	13
  1921  007DF8  0A                 	db	10
  1922  007DF9  00                 	db	0
  1923  007DFA                     STR_50:
  1924  007DFA  41                 	db	65	;'A'
  1925  007DFB  54                 	db	84	;'T'
  1926  007DFC  2B                 	db	43
  1927  007DFD  43                 	db	67	;'C'
  1928  007DFE  49                 	db	73	;'I'
  1929  007DFF  50                 	db	80	;'P'
  1930  007E00  53                 	db	83	;'S'
  1931  007E01  54                 	db	84	;'T'
  1932  007E02  41                 	db	65	;'A'
  1933  007E03  54                 	db	84	;'T'
  1934  007E04  55                 	db	85	;'U'
  1935  007E05  53                 	db	83	;'S'
  1936  007E06  0D                 	db	13
  1937  007E07  0A                 	db	10
  1938  007E08  00                 	db	0
  1939  007E09                     STR_80:
  1940  007E09  55                 	db	85	;'U'
  1941  007E0A  4D                 	db	77	;'M'
  1942  007E0B  49                 	db	73	;'I'
  1943  007E0C  44                 	db	68	;'D'
  1944  007E0D  41                 	db	65	;'A'
  1945  007E0E  44                 	db	68	;'D'
  1946  007E0F  45                 	db	69	;'E'
  1947  007E10  3A                 	db	58	;':'
  1948  007E11  20                 	db	32
  1949  007E12  25                 	db	37
  1950  007E13  64                 	db	100	;'d'
  1951  007E14  20                 	db	32
  1952  007E15  25                 	db	37
  1953  007E16  63                 	db	99	;'c'
  1954  007E17  00                 	db	0
  1955  007E18                     STR_74:
  1956  007E18  7C                 	db	124
  1957  007E19  53                 	db	83	;'S'
  1958  007E1A  65                 	db	101	;'e'
  1959  007E1B  6E                 	db	110	;'n'
  1960  007E1C  73                 	db	115	;'s'
  1961  007E1D  6F                 	db	111	;'o'
  1962  007E1E  72                 	db	114	;'r'
  1963  007E1F  7C                 	db	124
  1964  007E20  41                 	db	65	;'A'
  1965  007E21  6A                 	db	106	;'j'
  1966  007E22  75                 	db	117	;'u'
  1967  007E23  73                 	db	115	;'s'
  1968  007E24  74                 	db	116	;'t'
  1969  007E25  65                 	db	101	;'e'
  1970  007E26  00                 	db	0
  1971  007E27                     STR_46:
  1972  007E27  41                 	db	65	;'A'
  1973  007E28  54                 	db	84	;'T'
  1974  007E29  2B                 	db	43
  1975  007E2A  43                 	db	67	;'C'
  1976  007E2B  49                 	db	73	;'I'
  1977  007E2C  50                 	db	80	;'P'
  1978  007E2D  4D                 	db	77	;'M'
  1979  007E2E  55                 	db	85	;'U'
  1980  007E2F  58                 	db	88	;'X'
  1981  007E30  3D                 	db	61	;'='
  1982  007E31  30                 	db	48	;'0'
  1983  007E32  0D                 	db	13
  1984  007E33  0A                 	db	10
  1985  007E34  00                 	db	0
  1986  007E35                     STR_44:
  1987  007E35  41                 	db	65	;'A'
  1988  007E36  54                 	db	84	;'T'
  1989  007E37  2B                 	db	43
  1990  007E38  43                 	db	67	;'C'
  1991  007E39  57                 	db	87	;'W'
  1992  007E3A  4D                 	db	77	;'M'
  1993  007E3B  4F                 	db	79	;'O'
  1994  007E3C  44                 	db	68	;'D'
  1995  007E3D  45                 	db	69	;'E'
  1996  007E3E  3D                 	db	61	;'='
  1997  007E3F  31                 	db	49	;'1'
  1998  007E40  0D                 	db	13
  1999  007E41  0A                 	db	10
  2000  007E42  00                 	db	0
  2001  007E43                     STR_14:
  2002  007E43  41                 	db	65	;'A'
  2003  007E44  54                 	db	84	;'T'
  2004  007E45  2B                 	db	43
  2005  007E46  43                 	db	67	;'C'
  2006  007E47  49                 	db	73	;'I'
  2007  007E48  50                 	db	80	;'P'
  2008  007E49  4D                 	db	77	;'M'
  2009  007E4A  55                 	db	85	;'U'
  2010  007E4B  58                 	db	88	;'X'
  2011  007E4C  3D                 	db	61	;'='
  2012  007E4D  31                 	db	49	;'1'
  2013  007E4E  0D                 	db	13
  2014  007E4F  0A                 	db	10
  2015  007E50  00                 	db	0
  2016  007E51                     STR_12:
  2017  007E51  41                 	db	65	;'A'
  2018  007E52  54                 	db	84	;'T'
  2019  007E53  2B                 	db	43
  2020  007E54  43                 	db	67	;'C'
  2021  007E55  57                 	db	87	;'W'
  2022  007E56  4D                 	db	77	;'M'
  2023  007E57  4F                 	db	79	;'O'
  2024  007E58  44                 	db	68	;'D'
  2025  007E59  45                 	db	69	;'E'
  2026  007E5A  3D                 	db	61	;'='
  2027  007E5B  32                 	db	50	;'2'
  2028  007E5C  0D                 	db	13
  2029  007E5D  0A                 	db	10
  2030  007E5E  00                 	db	0
  2031  007E5F                     STR_62:
  2032  007E5F  41                 	db	65	;'A'
  2033  007E60  54                 	db	84	;'T'
  2034  007E61  2B                 	db	43
  2035  007E62  43                 	db	67	;'C'
  2036  007E63  49                 	db	73	;'I'
  2037  007E64  50                 	db	80	;'P'
  2038  007E65  43                 	db	67	;'C'
  2039  007E66  4C                 	db	76	;'L'
  2040  007E67  4F                 	db	79	;'O'
  2041  007E68  53                 	db	83	;'S'
  2042  007E69  45                 	db	69	;'E'
  2043  007E6A  0D                 	db	13
  2044  007E6B  0A                 	db	10
  2045  007E6C  00                 	db	0
  2046  007E6D                     STR_43:
  2047  007E6D  4F                 	db	79	;'O'
  2048  007E6E  4B                 	db	75	;'K'
  2049  007E6F  2E                 	db	46
  2050  007E70  2E                 	db	46
  2051  007E71  2E                 	db	46
  2052  007E72  20                 	db	32
  2053  007E73  20                 	db	32
  2054  007E74  20                 	db	32
  2055  007E75  20                 	db	32
  2056  007E76  20                 	db	32
  2057  007E77  20                 	db	32
  2058  007E78  20                 	db	32
  2059  007E79  20                 	db	32
  2060  007E7A  00                 	db	0
  2061  007E7B                     STR_34:
  2062  007E7B  41                 	db	65	;'A'
  2063  007E7C  67                 	db	103	;'g'
  2064  007E7D  75                 	db	117	;'u'
  2065  007E7E  61                 	db	97	;'a'
  2066  007E7F  72                 	db	114	;'r'
  2067  007E80  64                 	db	100	;'d'
  2068  007E81  61                 	db	97	;'a'
  2069  007E82  6E                 	db	110	;'n'
  2070  007E83  64                 	db	100	;'d'
  2071  007E84  6F                 	db	111	;'o'
  2072  007E85  2E                 	db	46
  2073  007E86  2E                 	db	46
  2074  007E87  2E                 	db	46
  2075  007E88  00                 	db	0
  2076  007E89                     STR_25:
  2077  007E89  31                 	db	49	;'1'
  2078  007E8A  30                 	db	48	;'0'
  2079  007E8B  2E                 	db	46
  2080  007E8C  31                 	db	49	;'1'
  2081  007E8D  2E                 	db	46
  2082  007E8E  31                 	db	49	;'1'
  2083  007E8F  2E                 	db	46
  2084  007E90  31                 	db	49	;'1'
  2085  007E91  3A                 	db	58	;':'
  2086  007E92  38                 	db	56	;'8'
  2087  007E93  30                 	db	48	;'0'
  2088  007E94  38                 	db	56	;'8'
  2089  007E95  30                 	db	48	;'0'
  2090  007E96  00                 	db	0
  2091  007E97                     STR_70:
  2092  007E97  56                 	db	86	;'V'
  2093  007E98  65                 	db	101	;'e'
  2094  007E99  72                 	db	114	;'r'
  2095  007E9A  73                 	db	115	;'s'
  2096  007E9B  61                 	db	97	;'a'
  2097  007E9C  6F                 	db	111	;'o'
  2098  007E9D  20                 	db	32
  2099  007E9E  53                 	db	83	;'S'
  2100  007E9F  6F                 	db	111	;'o'
  2101  007EA0  66                 	db	102	;'f'
  2102  007EA1  74                 	db	116	;'t'
  2103  007EA2  2E                 	db	46
  2104  007EA3  3A                 	db	58	;':'
  2105  007EA4  00                 	db	0
  2106  007EA5                     STR_58:
  2107  007EA5  4D                 	db	77	;'M'
  2108  007EA6  61                 	db	97	;'a'
  2109  007EA7  79                 	db	121	;'y'
  2110  007EA8  20                 	db	32
  2111  007EA9  31                 	db	49	;'1'
  2112  007EAA  34                 	db	52	;'4'
  2113  007EAB  20                 	db	32
  2114  007EAC  32                 	db	50	;'2'
  2115  007EAD  30                 	db	48	;'0'
  2116  007EAE  31                 	db	49	;'1'
  2117  007EAF  39                 	db	57	;'9'
  2118  007EB0  00                 	db	0
  2119  007EB1                     STR_73:
  2120  007EB1  45                 	db	69	;'E'
  2121  007EB2  52                 	db	82	;'R'
  2122  007EB3  52                 	db	82	;'R'
  2123  007EB4  4F                 	db	79	;'O'
  2124  007EB5  20                 	db	32
  2125  007EB6  45                 	db	69	;'E'
  2126  007EB7  45                 	db	69	;'E'
  2127  007EB8  50                 	db	80	;'P'
  2128  007EB9  52                 	db	82	;'R'
  2129  007EBA  4F                 	db	79	;'O'
  2130  007EBB  4D                 	db	77	;'M'
  2131  007EBC  00                 	db	0
  2132  007EBD                     STR_2:
  2133  007EBD  4D                 	db	77	;'M'
  2134  007EBE  75                 	db	117	;'u'
  2135  007EBF  72                 	db	114	;'r'
  2136  007EC0  63                 	db	99	;'c'
  2137  007EC1  68                 	db	104	;'h'
  2138  007EC2  61                 	db	97	;'a'
  2139  007EC3  6D                 	db	109	;'m'
  2140  007EC4  65                 	db	101	;'e'
  2141  007EC5  6E                 	db	110	;'n'
  2142  007EC6  74                 	db	116	;'t'
  2143  007EC7  6F                 	db	111	;'o'
  2144  007EC8  00                 	db	0
  2145  007EC9                     STR_65:
  2146  007EC9  41                 	db	65	;'A'
  2147  007ECA  54                 	db	84	;'T'
  2148  007ECB  2B                 	db	43
  2149  007ECC  43                 	db	67	;'C'
  2150  007ECD  49                 	db	73	;'I'
  2151  007ECE  46                 	db	70	;'F'
  2152  007ECF  53                 	db	83	;'S'
  2153  007ED0  52                 	db	82	;'R'
  2154  007ED1  0D                 	db	13
  2155  007ED2  0A                 	db	10
  2156  007ED3  00                 	db	0
  2157  007ED4                     STR_3:
  2158  007ED4  53                 	db	83	;'S'
  2159  007ED5  65                 	db	101	;'e'
  2160  007ED6  63                 	db	99	;'c'
  2161  007ED7  2E                 	db	46
  2162  007ED8  20                 	db	32
  2163  007ED9  46                 	db	70	;'F'
  2164  007EDA  6F                 	db	111	;'o'
  2165  007EDB  6C                 	db	108	;'l'
  2166  007EDC  68                 	db	104	;'h'
  2167  007EDD  61                 	db	97	;'a'
  2168  007EDE  00                 	db	0
  2169  007EDF                     STR_1:
  2170  007EDF  41                 	db	65	;'A'
  2171  007EE0  6D                 	db	109	;'m'
  2172  007EE1  61                 	db	97	;'a'
  2173  007EE2  72                 	db	114	;'r'
  2174  007EE3  65                 	db	101	;'e'
  2175  007EE4  6C                 	db	108	;'l'
  2176  007EE5  61                 	db	97	;'a'
  2177  007EE6  63                 	db	99	;'c'
  2178  007EE7  61                 	db	97	;'a'
  2179  007EE8  6F                 	db	111	;'o'
  2180  007EE9  00                 	db	0
  2181  007EEA                     STR_85:
  2182  007EEA  41                 	db	65	;'A'
  2183  007EEB  75                 	db	117	;'u'
  2184  007EEC  74                 	db	116	;'t'
  2185  007EED  6F                 	db	111	;'o'
  2186  007EEE  6D                 	db	109	;'m'
  2187  007EEF  61                 	db	97	;'a'
  2188  007EF0  74                 	db	116	;'t'
  2189  007EF1  69                 	db	105	;'i'
  2190  007EF2  63                 	db	99	;'c'
  2191  007EF3  6F                 	db	111	;'o'
  2192  007EF4  00                 	db	0
  2193  007EF5                     STR_88:
  2194  007EF5  44                 	db	68	;'D'
  2195  007EF6  65                 	db	101	;'e'
  2196  007EF7  73                 	db	115	;'s'
  2197  007EF8  74                 	db	116	;'t'
  2198  007EF9  72                 	db	114	;'r'
  2199  007EFA  61                 	db	97	;'a'
  2200  007EFB  76                 	db	118	;'v'
  2201  007EFC  61                 	db	97	;'a'
  2202  007EFD  64                 	db	100	;'d'
  2203  007EFE  6F                 	db	111	;'o'
  2204  007EFF  00                 	db	0
  2205  007F00                     STR_89:
  2206  007F00  41                 	db	65	;'A'
  2207  007F01  4C                 	db	76	;'L'
  2208  007F02  41                 	db	65	;'A'
  2209  007F03  52                 	db	82	;'R'
  2210  007F04  4D                 	db	77	;'M'
  2211  007F05  45                 	db	69	;'E'
  2212  007F06  3A                 	db	58	;':'
  2213  007F07  20                 	db	32
  2214  007F08  25                 	db	37
  2215  007F09  73                 	db	115	;'s'
  2216  007F0A  00                 	db	0
  2217  007F0B                     STR_91:
  2218  007F0B  44                 	db	68	;'D'
  2219  007F0C  65                 	db	101	;'e'
  2220  007F0D  73                 	db	115	;'s'
  2221  007F0E  6C                 	db	108	;'l'
  2222  007F0F  69                 	db	105	;'i'
  2223  007F10  67                 	db	103	;'g'
  2224  007F11  61                 	db	97	;'a'
  2225  007F12  64                 	db	100	;'d'
  2226  007F13  6F                 	db	111	;'o'
  2227  007F14  00                 	db	0
  2228  007F15                     STR_4:
  2229  007F15  53                 	db	83	;'S'
  2230  007F16  65                 	db	101	;'e'
  2231  007F17  63                 	db	99	;'c'
  2232  007F18  2E                 	db	46
  2233  007F19  20                 	db	32
  2234  007F1A  54                 	db	84	;'T'
  2235  007F1B  61                 	db	97	;'a'
  2236  007F1C  6C                 	db	108	;'l'
  2237  007F1D  6F                 	db	111	;'o'
  2238  007F1E  00                 	db	0
  2239  007F1F                     STR_82:
  2240  007F1F  43                 	db	67	;'C'
  2241  007F20  4C                 	db	76	;'L'
  2242  007F21  49                 	db	73	;'I'
  2243  007F22  4D                 	db	77	;'M'
  2244  007F23  41                 	db	65	;'A'
  2245  007F24  3A                 	db	58	;':'
  2246  007F25  20                 	db	32
  2247  007F26  25                 	db	37
  2248  007F27  73                 	db	115	;'s'
  2249  007F28  00                 	db	0
  2250  007F29                     STR_86:
  2251  007F29  54                 	db	84	;'T'
  2252  007F2A  52                 	db	82	;'R'
  2253  007F2B  41                 	db	65	;'A'
  2254  007F2C  56                 	db	86	;'V'
  2255  007F2D  41                 	db	65	;'A'
  2256  007F2E  3A                 	db	58	;':'
  2257  007F2F  20                 	db	32
  2258  007F30  25                 	db	37
  2259  007F31  73                 	db	115	;'s'
  2260  007F32  00                 	db	0
  2261  007F33                     STR_77:
  2262  007F33  46                 	db	70	;'F'
  2263  007F34  61                 	db	97	;'a'
  2264  007F35  73                 	db	115	;'s'
  2265  007F36  65                 	db	101	;'e'
  2266  007F37  20                 	db	32
  2267  007F38  7E                 	db	126
  2268  007F39  20                 	db	32
  2269  007F3A  25                 	db	37
  2270  007F3B  73                 	db	115	;'s'
  2271  007F3C  00                 	db	0
  2272  007F3D                     STR_102:
  2273  007F3D  50                 	db	80	;'P'
  2274  007F3E  31                 	db	49	;'1'
  2275  007F3F  32                 	db	50	;'2'
  2276  007F40  3A                 	db	58	;':'
  2277  007F41  25                 	db	37
  2278  007F42  34                 	db	52	;'4'
  2279  007F43  64                 	db	100	;'d'
  2280  007F44  20                 	db	32
  2281  007F45  7C                 	db	124
  2282  007F46  00                 	db	0
  2283  007F47                     STR_68:
  2284  007F47  41                 	db	65	;'A'
  2285  007F48  54                 	db	84	;'T'
  2286  007F49  2B                 	db	43
  2287  007F4A  52                 	db	82	;'R'
  2288  007F4B  53                 	db	83	;'S'
  2289  007F4C  54                 	db	84	;'T'
  2290  007F4D  0D                 	db	13
  2291  007F4E  0A                 	db	10
  2292  007F4F  00                 	db	0
  2293  007F50                     STR_81:
  2294  007F50  46                 	db	70	;'F'
  2295  007F51  41                 	db	65	;'A'
  2296  007F52  53                 	db	83	;'S'
  2297  007F53  45                 	db	69	;'E'
  2298  007F54  3A                 	db	58	;':'
  2299  007F55  20                 	db	32
  2300  007F56  25                 	db	37
  2301  007F57  73                 	db	115	;'s'
  2302  007F58  00                 	db	0
  2303  007F59                     STR_83:
  2304  007F59  4D                 	db	77	;'M'
  2305  007F5A  4F                 	db	79	;'O'
  2306  007F5B  44                 	db	68	;'D'
  2307  007F5C  4F                 	db	79	;'O'
  2308  007F5D  3A                 	db	58	;':'
  2309  007F5E  20                 	db	32
  2310  007F5F  25                 	db	37
  2311  007F60  73                 	db	115	;'s'
  2312  007F61  00                 	db	0
  2313  007F62                     STR_104:
  2314  007F62  53                 	db	83	;'S'
  2315  007F63  45                 	db	69	;'E'
  2316  007F64  4E                 	db	78	;'N'
  2317  007F65  48                 	db	72	;'H'
  2318  007F66  41                 	db	65	;'A'
  2319  007F67  3A                 	db	58	;':'
  2320  007F68  25                 	db	37
  2321  007F69  73                 	db	115	;'s'
  2322  007F6A  00                 	db	0
  2323  007F6B                     STR_28:
  2324  007F6B  43                 	db	67	;'C'
  2325  007F6C  4F                 	db	79	;'O'
  2326  007F6D  4E                 	db	78	;'N'
  2327  007F6E  4E                 	db	78	;'N'
  2328  007F6F  45                 	db	69	;'E'
  2329  007F70  43                 	db	67	;'C'
  2330  007F71  54                 	db	84	;'T'
  2331  007F72  00                 	db	0
  2332  007F73                     STR_87:
  2333  007F73  54                 	db	84	;'T'
  2334  007F74  72                 	db	114	;'r'
  2335  007F75  61                 	db	97	;'a'
  2336  007F76  76                 	db	118	;'v'
  2337  007F77  61                 	db	97	;'a'
  2338  007F78  64                 	db	100	;'d'
  2339  007F79  6F                 	db	111	;'o'
  2340  007F7A  00                 	db	0
  2341  007F7B                     STR_103:
  2342  007F7B  52                 	db	82	;'R'
  2343  007F7C  45                 	db	69	;'E'
  2344  007F7D  44                 	db	68	;'D'
  2345  007F7E  45                 	db	69	;'E'
  2346  007F7F  3A                 	db	58	;':'
  2347  007F80  25                 	db	37
  2348  007F81  73                 	db	115	;'s'
  2349  007F82  00                 	db	0
  2350  007F83                     STR_112:
  2351  007F83  28                 	db	40
  2352  007F84  6E                 	db	110	;'n'
  2353  007F85  75                 	db	117	;'u'
  2354  007F86  6C                 	db	108	;'l'
  2355  007F87  6C                 	db	108	;'l'
  2356  007F88  29                 	db	41
  2357  007F89  00                 	db	0
  2358  007F8A                     STR_39:
  2359  007F8A  73                 	db	115	;'s'
  2360  007F8B  65                 	db	101	;'e'
  2361  007F8C  6E                 	db	110	;'n'
  2362  007F8D  68                 	db	104	;'h'
  2363  007F8E  61                 	db	97	;'a'
  2364  007F8F  3D                 	db	61	;'='
  2365  007F90  00                 	db	0
  2366  007F91                     STR_64:
  2367  007F91  43                 	db	67	;'C'
  2368  007F92  4C                 	db	76	;'L'
  2369  007F93  4F                 	db	79	;'O'
  2370  007F94  53                 	db	83	;'S'
  2371  007F95  45                 	db	69	;'E'
  2372  007F96  44                 	db	68	;'D'
  2373  007F97  00                 	db	0
  2374  007F98                     STR_7:
  2375  007F98  4E                 	db	78	;'N'
  2376  007F99  6F                 	db	111	;'o'
  2377  007F9A  72                 	db	114	;'r'
  2378  007F9B  6D                 	db	109	;'m'
  2379  007F9C  61                 	db	97	;'a'
  2380  007F9D  6C                 	db	108	;'l'
  2381  007F9E  00                 	db	0
  2382  007F9F                     STR_84:
  2383  007F9F  4D                 	db	77	;'M'
  2384  007FA0  61                 	db	97	;'a'
  2385  007FA1  6E                 	db	110	;'n'
  2386  007FA2  75                 	db	117	;'u'
  2387  007FA3  61                 	db	97	;'a'
  2388  007FA4  6C                 	db	108	;'l'
  2389  007FA5  00                 	db	0
  2390  007FA6                     STR_90:
  2391  007FA6  4C                 	db	76	;'L'
  2392  007FA7  69                 	db	105	;'i'
  2393  007FA8  67                 	db	103	;'g'
  2394  007FA9  61                 	db	97	;'a'
  2395  007FAA  64                 	db	100	;'d'
  2396  007FAB  6F                 	db	111	;'o'
  2397  007FAC  00                 	db	0
  2398  007FAD                     STR_36:
  2399  007FAD  66                 	db	102	;'f'
  2400  007FAE  69                 	db	105	;'i'
  2401  007FAF  6D                 	db	109	;'m'
  2402  007FB0  73                 	db	115	;'s'
  2403  007FB1  74                 	db	116	;'t'
  2404  007FB2  72                 	db	114	;'r'
  2405  007FB3  00                 	db	0
  2406  007FB4                     STR_105:
  2407  007FB4  4E                 	db	78	;'N'
  2408  007FB5  53                 	db	83	;'S'
  2409  007FB6  3A                 	db	58	;':'
  2410  007FB7  20                 	db	32
  2411  007FB8  25                 	db	37
  2412  007FB9  73                 	db	115	;'s'
  2413  007FBA  00                 	db	0
  2414  007FBB                     STR_27:
  2415  007FBB  41                 	db	65	;'A'
  2416  007FBC  63                 	db	99	;'c'
  2417  007FBD  63                 	db	99	;'c'
  2418  007FBE  65                 	db	101	;'e'
  2419  007FBF  70                 	db	112	;'p'
  2420  007FC0  74                 	db	116	;'t'
  2421  007FC1  00                 	db	0
  2422  007FC2                     STR_37:
  2423  007FC2  73                 	db	115	;'s'
  2424  007FC3  73                 	db	115	;'s'
  2425  007FC4  69                 	db	105	;'i'
  2426  007FC5  64                 	db	100	;'d'
  2427  007FC6  3D                 	db	61	;'='
  2428  007FC7  00                 	db	0
  2429  007FC8                     STR_6:
  2430  007FC8  55                 	db	85	;'U'
  2431  007FC9  6D                 	db	109	;'m'
  2432  007FCA  69                 	db	105	;'i'
  2433  007FCB  64                 	db	100	;'d'
  2434  007FCC  6F                 	db	111	;'o'
  2435  007FCD  00                 	db	0
  2436  007FCE                     STR_26:
  2437  007FCE  2B                 	db	43
  2438  007FCF  49                 	db	73	;'I'
  2439  007FD0  50                 	db	80	;'P'
  2440  007FD1  44                 	db	68	;'D'
  2441  007FD2  00                 	db	0
  2442  007FD3                     STR_35:
  2443  007FD3  73                 	db	115	;'s'
  2444  007FD4  73                 	db	115	;'s'
  2445  007FD5  69                 	db	105	;'i'
  2446  007FD6  64                 	db	100	;'d'
  2447  007FD7  00                 	db	0
  2448  007FD8                     STR_61:
  2449  007FD8  73                 	db	115	;'s'
  2450  007FD9  61                 	db	97	;'a'
  2451  007FDA  76                 	db	118	;'v'
  2452  007FDB  65                 	db	101	;'e'
  2453  007FDC  00                 	db	0
  2454  007FDD                     STR_48:
  2455  007FDD  6C                 	db	108	;'l'
  2456  007FDE  69                 	db	105	;'i'
  2457  007FDF  6E                 	db	110	;'n'
  2458  007FE0  6B                 	db	107	;'k'
  2459  007FE1  00                 	db	0
  2460  007FE2                     STR_8:
  2461  007FE2  53                 	db	83	;'S'
  2462  007FE3  65                 	db	101	;'e'
  2463  007FE4  63                 	db	99	;'c'
  2464  007FE5  6F                 	db	111	;'o'
  2465  007FE6  00                 	db	0
  2466  007FE7                     STR_5:
  2467  007FE7  2D                 	db	45
  2468  007FE8  20                 	db	32
  2469  007FE9  2D                 	db	45
  2470  007FEA  00                 	db	0
  2471  007FEB                     STR_60:
  2472  007FEB  32                 	db	50	;'2'
  2473  007FEC  30                 	db	48	;'0'
  2474  007FED  30                 	db	48	;'0'
  2475  007FEE  00                 	db	0
  2476  007FEF                     STR_66:
  2477  007FEF  4D                 	db	77	;'M'
  2478  007FF0  41                 	db	65	;'A'
  2479  007FF1  43                 	db	67	;'C'
  2480  007FF2  00                 	db	0
  2481  007FF3                     STR_9:
  2482  007FF3  2D                 	db	45
  2483  007FF4  2D                 	db	45
  2484  007FF5  00                 	db	0
  2485  007FF6                     STR_13:
  2486  007FF6  4F                 	db	79	;'O'
  2487  007FF7  4B                 	db	75	;'K'
  2488  007FF8  00                 	db	0
  2489  007FF9                     STR_38:
  2490  007FF9  26                 	db	38
  2491  007FFA  00                 	db	0
  2492  007FFB                     STR_51:
  2493  007FFB  32                 	db	50	;'2'
  2494  007FFC  00                 	db	0
  2495  007FFD                     STR_52:
  2496  007FFD  34                 	db	52	;'4'
  2497  007FFE  00                 	db	0
  2498  0000                     
  2499                           ; #config settings
  2500  007FFF  00                 	db	0	; dummy byte at the end
  2501  0000                     
  2502                           	psect	cinit
  2503  005378                     __pcinit:
  2504                           	opt stack 0
  2505  005378                     start_initialization:
  2506                           	opt stack 0
  2507  005378                     __initialization:
  2508                           	opt stack 0
  2509                           
  2510                           ; Initialize objects allocated to BANK2 (24 bytes)
  2511                           ; load TBLPTR registers with __pidataBANK2
  2512  005378  0E90               	movlw	low __pidataBANK2
  2513  00537A  6EF6               	movwf	tblptrl,c
  2514  00537C  0E5E               	movlw	high __pidataBANK2
  2515  00537E  6EF7               	movwf	tblptrh,c
  2516  005380  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2517  005382  6EF8               	movwf	tblptru,c
  2518  005384  EE02  F0B0         	lfsr	0,__pdataBANK2
  2519  005388  EE10 F018          	lfsr	1,24
  2520  00538C                     copy_data0:
  2521  00538C  0009               	tblrd		*+
  2522  00538E  CFF5 FFEE          	movff	tablat,postinc0
  2523  005392  50E5               	movf	postdec1,w,c
  2524  005394  50E1               	movf	fsr1l,w,c
  2525  005396  E1FA               	bnz	copy_data0
  2526                           
  2527                           ; Initialize objects allocated to BANK0 (5 bytes)
  2528                           ; load TBLPTR registers with __pidataBANK0
  2529  005398  0E26               	movlw	low __pidataBANK0
  2530  00539A  6EF6               	movwf	tblptrl,c
  2531  00539C  0E5F               	movlw	high __pidataBANK0
  2532  00539E  6EF7               	movwf	tblptrh,c
  2533  0053A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2534  0053A2  6EF8               	movwf	tblptru,c
  2535  0053A4  EE00  F0FB         	lfsr	0,__pdataBANK0
  2536  0053A8  EE10 F005          	lfsr	1,5
  2537  0053AC                     copy_data1:
  2538  0053AC  0009               	tblrd		*+
  2539  0053AE  CFF5 FFEE          	movff	tablat,postinc0
  2540  0053B2  50E5               	movf	postdec1,w,c
  2541  0053B4  50E1               	movf	fsr1l,w,c
  2542  0053B6  E1FA               	bnz	copy_data1
  2543                           
  2544                           ; Initialize objects allocated to COMRAM (1 bytes)
  2545                           ; load TBLPTR registers with __pidataCOMRAM
  2546  0053B8  0E2B               	movlw	low __pidataCOMRAM
  2547  0053BA  6EF6               	movwf	tblptrl,c
  2548  0053BC  0E5F               	movlw	high __pidataCOMRAM
  2549  0053BE  6EF7               	movwf	tblptrh,c
  2550  0053C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2551  0053C2  6EF8               	movwf	tblptru,c
  2552  0053C4  0009               	tblrd		*+	;fetch initializer
  2553  0053C6  CFF5 F050          	movff	tablat,__pdataCOMRAM
  2554                           
  2555                           ; Clear objects allocated to BANK2 (176 bytes)
  2556  0053CA  EE02  F000         	lfsr	0,__pbssBANK2
  2557  0053CE  0EB0               	movlw	176
  2558  0053D0                     clear_0:
  2559  0053D0  6AEE               	clrf	postinc0,c
  2560  0053D2  06E8               	decf	wreg,f,c
  2561  0053D4  E1FD               	bnz	clear_0
  2562                           
  2563                           ; Clear objects allocated to BANK1 (97 bytes)
  2564  0053D6  EE01  F096         	lfsr	0,__pbssBANK1
  2565  0053DA  0E61               	movlw	97
  2566  0053DC                     clear_1:
  2567  0053DC  6AEE               	clrf	postinc0,c
  2568  0053DE  06E8               	decf	wreg,f,c
  2569  0053E0  E1FD               	bnz	clear_1
  2570                           
  2571                           ; Clear objects allocated to BANK0 (16 bytes)
  2572  0053E2  EE00  F0EB         	lfsr	0,__pbssBANK0
  2573  0053E6  0E10               	movlw	16
  2574  0053E8                     clear_2:
  2575  0053E8  6AEE               	clrf	postinc0,c
  2576  0053EA  06E8               	decf	wreg,f,c
  2577  0053EC  E1FD               	bnz	clear_2
  2578                           
  2579                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2580  0053EE  6A4F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2581                           
  2582                           ; Clear objects allocated to COMRAM (30 bytes)
  2583  0053F0  EE00  F031         	lfsr	0,__pbssCOMRAM
  2584  0053F4  0E1E               	movlw	30
  2585  0053F6                     clear_3:
  2586  0053F6  6AEE               	clrf	postinc0,c
  2587  0053F8  06E8               	decf	wreg,f,c
  2588  0053FA  E1FD               	bnz	clear_3
  2589  0053FC                     end_of_initialization:
  2590                           	opt stack 0
  2591  0053FC                     __end_of__initialization:
  2592                           	opt stack 0
  2593  0053FC  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2594  0053FE  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2595  005400  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2596  005402  6EF8               	movwf	tblptru,c
  2597  005404  0100               	movlb	0
  2598  005406  EF09  F000         	goto	_main	;jump to C main() function
  2599                           tblptru	equ	0xFF8
  2600                           tblptrh	equ	0xFF7
  2601                           tblptrl	equ	0xFF6
  2602                           tablat	equ	0xFF5
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           postdec1	equ	0xFE5
  2606                           fsr1l	equ	0xFE1
  2607                           
  2608                           	psect	bitbssCOMRAM
  2609  000278                     __pbitbssCOMRAM:
  2610                           	opt stack 0
  2611  000278                     _contador_fase_automatica:
  2612                           	opt stack 0
  2613  000278                     	ds	1
  2614  000279                     _md_seguranca:
  2615                           	opt stack 0
  2616  000279                     	ds	1
  2617  00027A                     _blinkk:
  2618                           	opt stack 0
  2619  00027A                     	ds	1
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           
  2629                           	psect	bssCOMRAM
  2630  000031                     __pbssCOMRAM:
  2631                           	opt stack 0
  2632  000031                     strtok@sp:
  2633                           	opt stack 0
  2634  000031                     	ds	2
  2635  000033                     _t_controle_modo_seguranca:
  2636                           	opt stack 0
  2637  000033                     	ds	2
  2638  000035                     _t_controle_religar_ventoinha:
  2639                           	opt stack 0
  2640  000035                     	ds	2
  2641  000037                     _t_controle_religar_buzzer:
  2642                           	opt stack 0
  2643  000037                     	ds	2
  2644  000039                     _t_controle_flap:
  2645                           	opt stack 0
  2646  000039                     	ds	2
  2647  00003B                     _media_adc:
  2648                           	opt stack 0
  2649  00003B                     	ds	1
  2650  00003C                     _t_leitura_adc:
  2651                           	opt stack 0
  2652  00003C                     	ds	1
  2653  00003D                     _t_controle_temp_automatica:
  2654                           	opt stack 0
  2655  00003D                     	ds	1
  2656  00003E                     _t_controle_blink:
  2657                           	opt stack 0
  2658  00003E                     	ds	1
  2659  00003F                     _t_controle_buzzer:
  2660                           	opt stack 0
  2661  00003F                     	ds	1
  2662  000040                     _t_controle_fim_fases:
  2663                           	opt stack 0
  2664  000040                     	ds	1
  2665  000041                     _f_buzzer_falta_energia:
  2666                           	opt stack 0
  2667  000041                     	ds	1
  2668  000042                     __acao_flap:
  2669                           	opt stack 0
  2670  000042                     	ds	1
  2671  000043                     _cbf:
  2672                           	opt stack 0
  2673  000043                     	ds	1
  2674  000044                     _bt_flag:
  2675                           	opt stack 0
  2676  000044                     	ds	1
  2677  000045                     _leds:
  2678                           	opt stack 0
  2679  000045                     	ds	1
  2680  000046                     _hor:
  2681                           	opt stack 0
  2682  000046                     	ds	1
  2683  000047                     _min:
  2684                           	opt stack 0
  2685  000047                     	ds	1
  2686  000048                     _sec:
  2687                           	opt stack 0
  2688  000048                     	ds	1
  2689  000049                     __sec:
  2690                           	opt stack 0
  2691  000049                     	ds	1
  2692  00004A                     _base_sec:
  2693                           	opt stack 0
  2694  00004A                     	ds	1
  2695  00004B                     _lcd_rfsh:
  2696                           	opt stack 0
  2697  00004B                     	ds	1
  2698  00004C                     _t_fim_fase3:
  2699                           	opt stack 0
  2700  00004C                     	ds	1
  2701  00004D                     _t_fim_fase2:
  2702                           	opt stack 0
  2703  00004D                     	ds	1
  2704  00004E                     _t_fim_fase1:
  2705                           	opt stack 0
  2706  00004E                     	ds	1
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postdec1	equ	0xFE5
  2714                           fsr1l	equ	0xFE1
  2715                           
  2716                           	psect	dataCOMRAM
  2717  000050                     __pdataCOMRAM:
  2718                           	opt stack 0
  2719  000050                     __led:
  2720                           	opt stack 0
  2721  000050                     	ds	1
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           postdec1	equ	0xFE5
  2729                           fsr1l	equ	0xFE1
  2730                           
  2731                           	psect	bssBANK0
  2732  0000EB                     __pbssBANK0:
  2733                           	opt stack 0
  2734  0000EB                     _umidajt:
  2735                           	opt stack 0
  2736  0000EB                     	ds	1
  2737  0000EC                     _tempajt:
  2738                           	opt stack 0
  2739  0000EC                     	ds	1
  2740  0000ED                     _clima:
  2741                           	opt stack 0
  2742  0000ED                     	ds	1
  2743  0000EE                     _fase:
  2744                           	opt stack 0
  2745  0000EE                     	ds	1
  2746  0000EF                     _h_subir_temp_automatica:
  2747                           	opt stack 0
  2748  0000EF                     	ds	1
  2749  0000F0                     _h_buzzer:
  2750                           	opt stack 0
  2751  0000F0                     	ds	1
  2752  0000F1                     _h_modo_seguranca:
  2753                           	opt stack 0
  2754  0000F1                     	ds	1
  2755  0000F2                     _t_religar_ventoinha_automatica:
  2756                           	opt stack 0
  2757  0000F2                     	ds	1
  2758  0000F3                     _t_temp_automatica:
  2759                           	opt stack 0
  2760  0000F3                     	ds	1
  2761  0000F4                     _t_flap_intervalo:
  2762                           	opt stack 0
  2763  0000F4                     	ds	1
  2764  0000F5                     _t_flap_ligado:
  2765                           	opt stack 0
  2766  0000F5                     	ds	1
  2767  0000F6                     _tipo_modo_trabalho:
  2768                           	opt stack 0
  2769  0000F6                     	ds	1
  2770  0000F7                     _tipo_sensor_umidade:
  2771                           	opt stack 0
  2772  0000F7                     	ds	1
  2773  0000F8                     _trava_fase:
  2774                           	opt stack 0
  2775  0000F8                     	ds	1
  2776  0000F9                     _fornalha:
  2777                           	opt stack 0
  2778  0000F9                     	ds	1
  2779  0000FA                     _buzzer:
  2780                           	opt stack 0
  2781  0000FA                     	ds	1
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1l	equ	0xFE1
  2790                           
  2791                           	psect	dataBANK0
  2792  0000FB                     __pdataBANK0:
  2793                           	opt stack 0
  2794  0000FB                     _menu:
  2795                           	opt stack 0
  2796  0000FB                     	ds	1
  2797  0000FC                     _umid:
  2798                           	opt stack 0
  2799  0000FC                     	ds	1
  2800  0000FD                     _temp:
  2801                           	opt stack 0
  2802  0000FD                     	ds	1
  2803  0000FE                     _f_falta_energia:
  2804                           	opt stack 0
  2805  0000FE                     	ds	1
  2806  0000FF                     _t_buzzer_religar:
  2807                           	opt stack 0
  2808  0000FF                     	ds	1
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           postdec1	equ	0xFE5
  2816                           fsr1l	equ	0xFE1
  2817                           
  2818                           	psect	bssBANK1
  2819  000196                     __pbssBANK1:
  2820                           	opt stack 0
  2821  000196                     _f_wifi_processo:
  2822                           	opt stack 0
  2823  000196                     	ds	1
  2824  000197                     _t_wifi_restart:
  2825                           	opt stack 0
  2826  000197                     	ds	1
  2827  000198                     _ajuste_parametro:
  2828                           	opt stack 0
  2829  000198                     	ds	1
  2830  000199                     _opcaomenu:
  2831                           	opt stack 0
  2832  000199                     	ds	1
  2833  00019A                     _wifi_conectado:
  2834                           	opt stack 0
  2835  00019A                     	ds	1
  2836  00019B                     _line4:
  2837                           	opt stack 0
  2838  00019B                     	ds	21
  2839  0001B0                     _line3:
  2840                           	opt stack 0
  2841  0001B0                     	ds	21
  2842  0001C5                     _line2:
  2843                           	opt stack 0
  2844  0001C5                     	ds	21
  2845  0001DA                     _line1:
  2846                           	opt stack 0
  2847  0001DA                     	ds	21
  2848  0001EF                     _wifi_SENHA:
  2849                           	opt stack 0
  2850  0001EF                     	ds	2
  2851  0001F1                     _wifi_habilita_alteracao:
  2852                           	opt stack 0
  2853  0001F1                     	ds	2
  2854  0001F3                     _senha_desbloqueio_func:
  2855                           	opt stack 0
  2856  0001F3                     	ds	1
  2857  0001F4                     _h_flap:
  2858                           	opt stack 0
  2859  0001F4                     	ds	1
  2860  0001F5                     _h_abafador:
  2861                           	opt stack 0
  2862  0001F5                     	ds	1
  2863  0001F6                     _h_venotinha:
  2864                           	opt stack 0
  2865  0001F6                     	ds	1
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           fsr1l	equ	0xFE1
  2874                           
  2875                           	psect	bssBANK2
  2876  000200                     __pbssBANK2:
  2877                           	opt stack 0
  2878  000200                     __umid:
  2879                           	opt stack 0
  2880  000200                     	ds	33
  2881  000221                     __temp:
  2882                           	opt stack 0
  2883  000221                     	ds	33
  2884  000242                     _bufferSerial:
  2885                           	opt stack 0
  2886  000242                     	ds	80
  2887  000292                     _senha:
  2888                           	opt stack 0
  2889  000292                     	ds	15
  2890  0002A1                     _ssid:
  2891                           	opt stack 0
  2892  0002A1                     	ds	15
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           postdec1	equ	0xFE5
  2900                           fsr1l	equ	0xFE1
  2901                           
  2902                           	psect	dataBANK2
  2903  0002B0                     __pdataBANK2:
  2904                           	opt stack 0
  2905  0002B0                     _wifi_MAC:
  2906                           	opt stack 0
  2907  0002B0                     	ds	24
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec1	equ	0xFE5
  2915                           fsr1l	equ	0xFE1
  2916                           
  2917                           	psect	cstackBANK1
  2918  000100                     __pcstackBANK1:
  2919                           	opt stack 0
  2920  000100                     filtroStr@_str:
  2921                           	opt stack 0
  2922                           
  2923                           ; 82 bytes @ 0x0
  2924  000100                     	ds	82
  2925  000152                     filtroStr@aux:
  2926                           	opt stack 0
  2927                           
  2928                           ; 60 bytes @ 0x52
  2929  000152                     	ds	60
  2930  00018E                     _filtroStr$1335:
  2931                           	opt stack 0
  2932                           
  2933                           ; 2 bytes @ 0x8E
  2934  00018E                     	ds	2
  2935  000190                     filtroStr@y:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x90
  2939  000190                     	ds	1
  2940  000191                     filtroStr@count:
  2941                           	opt stack 0
  2942                           
  2943                           ; 1 bytes @ 0x91
  2944  000191                     	ds	1
  2945  000192                     filtroStr@x:
  2946                           	opt stack 0
  2947                           
  2948                           ; 1 bytes @ 0x92
  2949  000192                     	ds	1
  2950  000193                     filtroStr@p:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x93
  2954  000193                     	ds	2
  2955  000195                     filtroStr@i:
  2956                           	opt stack 0
  2957                           
  2958                           ; 1 bytes @ 0x95
  2959  000195                     	ds	1
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           postinc0	equ	0xFEE
  2965                           wreg	equ	0xFE8
  2966                           postdec1	equ	0xFE5
  2967                           fsr1l	equ	0xFE1
  2968                           
  2969                           	psect	cstackBANK0
  2970  000060                     __pcstackBANK0:
  2971                           	opt stack 0
  2972  000060                     ??_isdigit:
  2973  000060                     ??_I2C_Wait:
  2974  000060                     ?_strlen:
  2975                           	opt stack 0
  2976  000060                     ?_faseAtual:
  2977                           	opt stack 0
  2978  000060                     ?_climaAtual:
  2979                           	opt stack 0
  2980  000060                     ?_strchr:
  2981                           	opt stack 0
  2982  000060                     ?_tabelaUmidade:
  2983                           	opt stack 0
  2984  000060                     ?_readADC:
  2985                           	opt stack 0
  2986  000060                     ?___wmul:
  2987                           	opt stack 0
  2988  000060                     ?___lwdiv:
  2989                           	opt stack 0
  2990  000060                     ?___ftpack:
  2991                           	opt stack 0
  2992  000060                     ?___lldiv:
  2993                           	opt stack 0
  2994  000060                     setLed@acao:
  2995                           	opt stack 0
  2996  000060                     Lcd_Port@a:
  2997                           	opt stack 0
  2998  000060                     btPress@bt:
  2999                           	opt stack 0
  3000  000060                     putch@c:
  3001                           	opt stack 0
  3002  000060                     blink@line:
  3003                           	opt stack 0
  3004  000060                     tabelaUmidade@_tmp:
  3005                           	opt stack 0
  3006  000060                     faseAtual@_fase:
  3007                           	opt stack 0
  3008  000060                     delay@x:
  3009                           	opt stack 0
  3010  000060                     ___wmul@multiplier:
  3011                           	opt stack 0
  3012  000060                     ___lwdiv@dividend:
  3013                           	opt stack 0
  3014  000060                     memset@p1:
  3015                           	opt stack 0
  3016  000060                     strlen@s:
  3017                           	opt stack 0
  3018  000060                     strncpy@to:
  3019                           	opt stack 0
  3020  000060                     strchr@ptr:
  3021                           	opt stack 0
  3022  000060                     ___ftpack@arg:
  3023                           	opt stack 0
  3024  000060                     ___ftge@ff1:
  3025                           	opt stack 0
  3026  000060                     ___lldiv@dividend:
  3027                           	opt stack 0
  3028                           
  3029                           ; 4 bytes @ 0x0
  3030  000060                     	ds	1
  3031  000061                     ??_Lcd_Cmd:
  3032  000061                     ?_I2C_Read:
  3033                           	opt stack 0
  3034  000061                     setLed@led:
  3035                           	opt stack 0
  3036  000061                     Lcd_Write_Char@tempp:
  3037                           	opt stack 0
  3038  000061                     _isdigit$1991:
  3039                           	opt stack 0
  3040  000061                     I2C_Write@d:
  3041                           	opt stack 0
  3042  000061                     I2C_Read@a:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0x1
  3046  000061                     	ds	1
  3047  000062                     ??_delay:
  3048  000062                     ??_strlen:
  3049  000062                     ??_readADC:
  3050  000062                     Lcd_Cmd@a:
  3051                           	opt stack 0
  3052  000062                     Lcd_Write_Char@y:
  3053                           	opt stack 0
  3054  000062                     blink@start:
  3055                           	opt stack 0
  3056  000062                     climaAtual@c:
  3057                           	opt stack 0
  3058  000062                     isdigit@c:
  3059                           	opt stack 0
  3060  000062                     tabelaUmidade@_clima:
  3061                           	opt stack 0
  3062  000062                     faseAtual@_tempajt:
  3063                           	opt stack 0
  3064  000062                     acaoFlap@tempo_ativado:
  3065                           	opt stack 0
  3066  000062                     ___wmul@multiplicand:
  3067                           	opt stack 0
  3068  000062                     ___lwdiv@divisor:
  3069                           	opt stack 0
  3070  000062                     memset@c:
  3071                           	opt stack 0
  3072  000062                     strncpy@from:
  3073                           	opt stack 0
  3074  000062                     strchr@chr:
  3075                           	opt stack 0
  3076                           
  3077                           ; 2 bytes @ 0x2
  3078  000062                     	ds	1
  3079  000063                     ??_Lcd_Init:
  3080  000063                     Lcd_Set_Cursor@b:
  3081                           	opt stack 0
  3082  000063                     Lcd_Write_Char@a:
  3083                           	opt stack 0
  3084  000063                     blink@end:
  3085                           	opt stack 0
  3086  000063                     writeEEPROM_ext@data:
  3087                           	opt stack 0
  3088  000063                     ___ftpack@exp:
  3089                           	opt stack 0
  3090  000063                     I2C_Read@temp:
  3091                           	opt stack 0
  3092  000063                     ___ftge@ff2:
  3093                           	opt stack 0
  3094                           
  3095                           ; 3 bytes @ 0x3
  3096  000063                     	ds	1
  3097  000064                     ??_strchr:
  3098  000064                     ??_criaCaracteresCGRAM:
  3099  000064                     Lcd_Set_Cursor@a:
  3100                           	opt stack 0
  3101  000064                     blink@i:
  3102                           	opt stack 0
  3103  000064                     tabelaUmidade@_tipo_sensor:
  3104                           	opt stack 0
  3105  000064                     writeEEPROM_ext@adress:
  3106                           	opt stack 0
  3107  000064                     faseAtual@_fasee:
  3108                           	opt stack 0
  3109  000064                     ___ftpack@sign:
  3110                           	opt stack 0
  3111  000064                     Lcd_Write_String@a:
  3112                           	opt stack 0
  3113  000064                     acaoFlap@tempo_aguardar:
  3114                           	opt stack 0
  3115  000064                     ___wmul@product:
  3116                           	opt stack 0
  3117  000064                     ___lwdiv@quotient:
  3118                           	opt stack 0
  3119  000064                     memset@n:
  3120                           	opt stack 0
  3121  000064                     strlen@cp:
  3122                           	opt stack 0
  3123  000064                     strncpy@size:
  3124                           	opt stack 0
  3125  000064                     ___lldiv@divisor:
  3126                           	opt stack 0
  3127                           
  3128                           ; 4 bytes @ 0x4
  3129  000064                     	ds	1
  3130  000065                     ??___ftpack:
  3131  000065                     ??_tabelaUmidade:
  3132  000065                     Lcd_Set_Cursor@z:
  3133                           	opt stack 0
  3134  000065                     readEEPROM_ext@adress:
  3135                           	opt stack 0
  3136  000065                     faseAtual@tp:
  3137                           	opt stack 0
  3138  000065                     setRangeValor@_var_ajt:
  3139                           	opt stack 0
  3140                           
  3141                           ; 2 bytes @ 0x5
  3142  000065                     	ds	1
  3143  000066                     ??_acaoFlap:
  3144  000066                     ??___ftge:
  3145  000066                     ?_strncmp:
  3146                           	opt stack 0
  3147  000066                     ?_strspn:
  3148                           	opt stack 0
  3149  000066                     ?_strcspn:
  3150                           	opt stack 0
  3151  000066                     Lcd_Set_Cursor@y:
  3152                           	opt stack 0
  3153  000066                     Lcd_Write_String@i:
  3154                           	opt stack 0
  3155  000066                     readEEPROM_ext@data:
  3156                           	opt stack 0
  3157  000066                     faseAtual@tmpajt:
  3158                           	opt stack 0
  3159  000066                     ___lwdiv@counter:
  3160                           	opt stack 0
  3161  000066                     readADC@digital:
  3162                           	opt stack 0
  3163  000066                     memset@p:
  3164                           	opt stack 0
  3165  000066                     strncpy@cp:
  3166                           	opt stack 0
  3167  000066                     strcspn@s1:
  3168                           	opt stack 0
  3169  000066                     strncmp@s1:
  3170                           	opt stack 0
  3171  000066                     strspn@s1:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x6
  3175  000066                     	ds	1
  3176  000067                     ?___lwmod:
  3177                           	opt stack 0
  3178  000067                     Lcd_Set_Cursor@temp:
  3179                           	opt stack 0
  3180  000067                     tabelaUmidade@_umd:
  3181                           	opt stack 0
  3182  000067                     setRangeValor@_min:
  3183                           	opt stack 0
  3184  000067                     acaoFlap@acao:
  3185                           	opt stack 0
  3186  000067                     ___lwmod@dividend:
  3187                           	opt stack 0
  3188  000067                     criaCaracteresCGRAM@character:
  3189                           	opt stack 0
  3190                           
  3191                           ; 56 bytes @ 0x7
  3192  000067                     	ds	1
  3193  000068                     ??_controle:
  3194  000068                     setRangeValor@_max:
  3195                           	opt stack 0
  3196  000068                     readADC@canal:
  3197                           	opt stack 0
  3198  000068                     atualizaLCD@line1:
  3199                           	opt stack 0
  3200  000068                     setUmidade@_umdajt:
  3201                           	opt stack 0
  3202  000068                     strcspn@s2:
  3203                           	opt stack 0
  3204  000068                     strncmp@s2:
  3205                           	opt stack 0
  3206  000068                     strspn@s2:
  3207                           	opt stack 0
  3208  000068                     ___lldiv@quotient:
  3209                           	opt stack 0
  3210                           
  3211                           ; 4 bytes @ 0x8
  3212  000068                     	ds	1
  3213  000069                     ?___lwtoft:
  3214                           	opt stack 0
  3215  000069                     setRangeValor@end_eeprom:
  3216                           	opt stack 0
  3217  000069                     ___lwmod@divisor:
  3218                           	opt stack 0
  3219  000069                     ___lwtoft@c:
  3220                           	opt stack 0
  3221                           
  3222                           ; 2 bytes @ 0x9
  3223  000069                     	ds	1
  3224  00006A                     ??_strspn:
  3225  00006A                     ??_strcspn:
  3226  00006A                     ??_setRangeValor:
  3227  00006A                     atualizaLCD@line2:
  3228                           	opt stack 0
  3229  00006A                     setUmidade@_tempajt:
  3230                           	opt stack 0
  3231  00006A                     strncmp@len:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0xA
  3235  00006A                     	ds	1
  3236  00006B                     ___lwmod@counter:
  3237                           	opt stack 0
  3238  00006B                     strcspn@i:
  3239                           	opt stack 0
  3240  00006B                     strspn@i:
  3241                           	opt stack 0
  3242                           
  3243                           ; 2 bytes @ 0xB
  3244  00006B                     	ds	1
  3245  00006C                     ??_strncmp:
  3246  00006C                     ?__doprnt:
  3247                           	opt stack 0
  3248  00006C                     ?___ftmul:
  3249                           	opt stack 0
  3250  00006C                     ___lldiv@counter:
  3251                           	opt stack 0
  3252  00006C                     atualizaLCD@line3:
  3253                           	opt stack 0
  3254  00006C                     setUmidade@_clima:
  3255                           	opt stack 0
  3256  00006C                     __doprnt@pb:
  3257                           	opt stack 0
  3258  00006C                     ___ftmul@f1:
  3259                           	opt stack 0
  3260                           
  3261                           ; 3 bytes @ 0xC
  3262  00006C                     	ds	1
  3263  00006D                     ?_strtok:
  3264                           	opt stack 0
  3265  00006D                     setRangeValor@_acao:
  3266                           	opt stack 0
  3267  00006D                     strtok@s1:
  3268                           	opt stack 0
  3269  00006D                     I2C_Master_Init@c:
  3270                           	opt stack 0
  3271                           
  3272                           ; 4 bytes @ 0xD
  3273  00006D                     	ds	1
  3274  00006E                     setUmidade@tp:
  3275                           	opt stack 0
  3276  00006E                     atualizaLCD@line4:
  3277                           	opt stack 0
  3278  00006E                     setRangeValor@_aux:
  3279                           	opt stack 0
  3280  00006E                     __doprnt@f:
  3281                           	opt stack 0
  3282                           
  3283                           ; 2 bytes @ 0xE
  3284  00006E                     	ds	1
  3285  00006F                     ?_strstr:
  3286                           	opt stack 0
  3287  00006F                     _setUmidade$1297:
  3288                           	opt stack 0
  3289  00006F                     strstr@s1:
  3290                           	opt stack 0
  3291  00006F                     strtok@s2:
  3292                           	opt stack 0
  3293  00006F                     ___ftmul@f2:
  3294                           	opt stack 0
  3295                           
  3296                           ; 3 bytes @ 0xF
  3297  00006F                     	ds	1
  3298  000070                     atualizaLCD@i:
  3299                           	opt stack 0
  3300  000070                     __doprnt@ap:
  3301                           	opt stack 0
  3302                           
  3303                           ; 2 bytes @ 0x10
  3304  000070                     	ds	1
  3305  000071                     ??_I2C_Master_Init:
  3306  000071                     _setUmidade$1298:
  3307                           	opt stack 0
  3308  000071                     strcpy@to:
  3309                           	opt stack 0
  3310  000071                     strstr@s2:
  3311                           	opt stack 0
  3312                           
  3313                           ; 2 bytes @ 0x11
  3314  000071                     	ds	1
  3315  000072                     ??___ftmul:
  3316  000072                     ??__doprnt:
  3317                           
  3318                           ; 1 bytes @ 0x12
  3319  000072                     	ds	1
  3320  000073                     _setUmidade$1299:
  3321                           	opt stack 0
  3322  000073                     getMac@mac:
  3323                           	opt stack 0
  3324  000073                     strcpy@from:
  3325                           	opt stack 0
  3326                           
  3327                           ; 2 bytes @ 0x13
  3328  000073                     	ds	2
  3329  000075                     ??_strcpy:
  3330  000075                     ___ftmul@exp:
  3331                           	opt stack 0
  3332  000075                     _setUmidade$1300:
  3333                           	opt stack 0
  3334  000075                     getMac@var:
  3335                           	opt stack 0
  3336                           
  3337                           ; 2 bytes @ 0x15
  3338  000075                     	ds	1
  3339  000076                     __doprnt@prec:
  3340                           	opt stack 0
  3341  000076                     strcpy@cp:
  3342                           	opt stack 0
  3343  000076                     ___ftmul@f3_as_product:
  3344                           	opt stack 0
  3345                           
  3346                           ; 3 bytes @ 0x16
  3347  000076                     	ds	1
  3348  000077                     ??_getMac:
  3349  000077                     setUmidade@_tmpajt:
  3350                           	opt stack 0
  3351  000077                     __doprnt@flag:
  3352                           	opt stack 0
  3353                           
  3354                           ; 1 bytes @ 0x17
  3355  000077                     	ds	1
  3356  000078                     setUmidade@_clim:
  3357                           	opt stack 0
  3358  000078                     __doprnt@val:
  3359                           	opt stack 0
  3360                           
  3361                           ; 2 bytes @ 0x18
  3362  000078                     	ds	1
  3363  000079                     setUmidade@_umd:
  3364                           	opt stack 0
  3365  000079                     getMac@j:
  3366                           	opt stack 0
  3367  000079                     ___ftmul@cntr:
  3368                           	opt stack 0
  3369                           
  3370                           ; 1 bytes @ 0x19
  3371  000079                     	ds	1
  3372  00007A                     getMac@men:
  3373                           	opt stack 0
  3374  00007A                     ___ftmul@sign:
  3375                           	opt stack 0
  3376  00007A                     __doprnt@len:
  3377                           	opt stack 0
  3378                           
  3379                           ; 2 bytes @ 0x1A
  3380  00007A                     	ds	1
  3381  00007B                     ?___ftadd:
  3382                           	opt stack 0
  3383  00007B                     getMac@i:
  3384                           	opt stack 0
  3385  00007B                     ___ftadd@f1:
  3386                           	opt stack 0
  3387                           
  3388                           ; 3 bytes @ 0x1B
  3389  00007B                     	ds	1
  3390  00007C                     __doprnt@cp:
  3391                           	opt stack 0
  3392                           
  3393                           ; 2 bytes @ 0x1C
  3394  00007C                     	ds	2
  3395  00007E                     __doprnt@width:
  3396                           	opt stack 0
  3397  00007E                     ___ftadd@f2:
  3398                           	opt stack 0
  3399                           
  3400                           ; 3 bytes @ 0x1E
  3401  00007E                     	ds	2
  3402  000080                     __doprnt@c:
  3403                           	opt stack 0
  3404                           
  3405                           ; 1 bytes @ 0x20
  3406  000080                     	ds	1
  3407  000081                     ??___ftadd:
  3408  000081                     ?_sprintf:
  3409                           	opt stack 0
  3410  000081                     ?_printf:
  3411                           	opt stack 0
  3412  000081                     printf@f:
  3413                           	opt stack 0
  3414  000081                     sprintf@wh:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x21
  3418  000081                     	ds	2
  3419  000083                     sprintf@f:
  3420                           	opt stack 0
  3421                           
  3422                           ; 2 bytes @ 0x23
  3423  000083                     	ds	1
  3424  000084                     ___ftadd@sign:
  3425                           	opt stack 0
  3426                           
  3427                           ; 1 bytes @ 0x24
  3428  000084                     	ds	1
  3429  000085                     ___ftadd@exp2:
  3430                           	opt stack 0
  3431                           
  3432                           ; 1 bytes @ 0x25
  3433  000085                     	ds	1
  3434  000086                     ___ftadd@exp1:
  3435                           	opt stack 0
  3436                           
  3437                           ; 1 bytes @ 0x26
  3438  000086                     	ds	1
  3439  000087                     ?___ftdiv:
  3440                           	opt stack 0
  3441  000087                     ___ftdiv@f1:
  3442                           	opt stack 0
  3443                           
  3444                           ; 3 bytes @ 0x27
  3445  000087                     	ds	3
  3446  00008A                     ___ftdiv@f2:
  3447                           	opt stack 0
  3448                           
  3449                           ; 3 bytes @ 0x2A
  3450  00008A                     	ds	1
  3451  00008B                     sprintf@ap:
  3452                           	opt stack 0
  3453                           
  3454                           ; 2 bytes @ 0x2B
  3455  00008B                     	ds	2
  3456  00008D                     ??___ftdiv:
  3457  00008D                     sprintf@pb:
  3458                           	opt stack 0
  3459                           
  3460                           ; 4 bytes @ 0x2D
  3461  00008D                     	ds	3
  3462  000090                     ___ftdiv@cntr:
  3463                           	opt stack 0
  3464                           
  3465                           ; 1 bytes @ 0x30
  3466  000090                     	ds	1
  3467  000091                     filtroStr@inicio:
  3468                           	opt stack 0
  3469  000091                     ___ftdiv@f3:
  3470                           	opt stack 0
  3471                           
  3472                           ; 3 bytes @ 0x31
  3473  000091                     	ds	2
  3474  000093                     filtroStr@fim:
  3475                           	opt stack 0
  3476                           
  3477                           ; 2 bytes @ 0x33
  3478  000093                     	ds	1
  3479  000094                     ___ftdiv@exp:
  3480                           	opt stack 0
  3481                           
  3482                           ; 1 bytes @ 0x34
  3483  000094                     	ds	1
  3484  000095                     ___ftdiv@sign:
  3485                           	opt stack 0
  3486  000095                     filtroStr@str:
  3487                           	opt stack 0
  3488                           
  3489                           ; 2 bytes @ 0x35
  3490  000095                     	ds	1
  3491  000096                     ?___fttol:
  3492                           	opt stack 0
  3493  000096                     ___fttol@f1:
  3494                           	opt stack 0
  3495                           
  3496                           ; 3 bytes @ 0x36
  3497  000096                     	ds	1
  3498  000097                     filtroStr@strdest:
  3499                           	opt stack 0
  3500                           
  3501                           ; 2 bytes @ 0x37
  3502  000097                     	ds	2
  3503  000099                     ??_filtroStr:
  3504                           
  3505                           ; 1 bytes @ 0x39
  3506  000099                     	ds	1
  3507  00009A                     ??___fttol:
  3508                           
  3509                           ; 1 bytes @ 0x3A
  3510  00009A                     	ds	5
  3511  00009F                     ___fttol@sign1:
  3512                           	opt stack 0
  3513  00009F                     _criaCaracteresCGRAM$1229:
  3514                           	opt stack 0
  3515                           
  3516                           ; 2 bytes @ 0x3F
  3517  00009F                     	ds	1
  3518  0000A0                     ___fttol@lval:
  3519                           	opt stack 0
  3520                           
  3521                           ; 4 bytes @ 0x40
  3522  0000A0                     	ds	1
  3523  0000A1                     criaCaracteresCGRAM@k:
  3524                           	opt stack 0
  3525                           
  3526                           ; 1 bytes @ 0x41
  3527  0000A1                     	ds	1
  3528  0000A2                     criaCaracteresCGRAM@j:
  3529                           	opt stack 0
  3530                           
  3531                           ; 1 bytes @ 0x42
  3532  0000A2                     	ds	1
  3533  0000A3                     criaCaracteresCGRAM@i:
  3534                           	opt stack 0
  3535                           
  3536                           ; 1 bytes @ 0x43
  3537  0000A3                     	ds	1
  3538  0000A4                     ___fttol@exp1:
  3539                           	opt stack 0
  3540                           
  3541                           ; 1 bytes @ 0x44
  3542  0000A4                     	ds	1
  3543  0000A5                     _getSensors$1523:
  3544                           	opt stack 0
  3545                           
  3546                           ; 3 bytes @ 0x45
  3547  0000A5                     	ds	3
  3548  0000A8                     _getSensors$1525:
  3549                           	opt stack 0
  3550                           
  3551                           ; 3 bytes @ 0x48
  3552  0000A8                     	ds	3
  3553  0000AB                     _getSensors$1521:
  3554                           	opt stack 0
  3555                           
  3556                           ; 2 bytes @ 0x4B
  3557  0000AB                     	ds	2
  3558  0000AD                     getSensors@auxx:
  3559                           	opt stack 0
  3560                           
  3561                           ; 3 bytes @ 0x4D
  3562  0000AD                     	ds	3
  3563  0000B0                     _getSensors$2491:
  3564                           	opt stack 0
  3565                           
  3566                           ; 3 bytes @ 0x50
  3567  0000B0                     	ds	3
  3568  0000B3                     getSensors@i:
  3569                           	opt stack 0
  3570                           
  3571                           ; 1 bytes @ 0x53
  3572  0000B3                     	ds	1
  3573  0000B4                     getSensors@aux:
  3574                           	opt stack 0
  3575                           
  3576                           ; 3 bytes @ 0x54
  3577  0000B4                     	ds	11
  3578  0000BF                     printf@ap:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x5F
  3582  0000BF                     	ds	2
  3583  0000C1                     printf@pb:
  3584                           	opt stack 0
  3585                           
  3586                           ; 4 bytes @ 0x61
  3587  0000C1                     	ds	4
  3588  0000C5                     ??_enviaDadosWifi:
  3589  0000C5                     alterarConfigWifi@i:
  3590                           	opt stack 0
  3591                           
  3592                           ; 1 bytes @ 0x65
  3593  0000C5                     	ds	2
  3594  0000C7                     enviaDadosWifi@AUX:
  3595                           	opt stack 0
  3596                           
  3597                           ; 15 bytes @ 0x67
  3598  0000C7                     	ds	15
  3599  0000D6                     _enviaDadosWifi$2490:
  3600                           	opt stack 0
  3601                           
  3602                           ; 2 bytes @ 0x76
  3603  0000D6                     	ds	2
  3604  0000D8                     enviaDadosWifi@i:
  3605                           	opt stack 0
  3606                           
  3607                           ; 1 bytes @ 0x78
  3608  0000D8                     	ds	1
  3609  0000D9                     ??_main:
  3610                           
  3611                           ; 1 bytes @ 0x79
  3612  0000D9                     	ds	1
  3613  0000DA                     _main$2492:
  3614                           	opt stack 0
  3615                           
  3616                           ; 2 bytes @ 0x7A
  3617  0000DA                     	ds	2
  3618  0000DC                     _main$1633:
  3619                           	opt stack 0
  3620                           
  3621                           ; 2 bytes @ 0x7C
  3622  0000DC                     	ds	2
  3623  0000DE                     _main$1634:
  3624                           	opt stack 0
  3625                           
  3626                           ; 2 bytes @ 0x7E
  3627  0000DE                     	ds	2
  3628  0000E0                     _main$1637:
  3629                           	opt stack 0
  3630                           
  3631                           ; 2 bytes @ 0x80
  3632  0000E0                     	ds	2
  3633  0000E2                     _main$1642:
  3634                           	opt stack 0
  3635                           
  3636                           ; 2 bytes @ 0x82
  3637  0000E2                     	ds	2
  3638  0000E4                     _main$1649:
  3639                           	opt stack 0
  3640                           
  3641                           ; 2 bytes @ 0x84
  3642  0000E4                     	ds	2
  3643  0000E6                     _main$1654:
  3644                           	opt stack 0
  3645                           
  3646                           ; 2 bytes @ 0x86
  3647  0000E6                     	ds	2
  3648  0000E8                     _main$1659:
  3649                           	opt stack 0
  3650                           
  3651                           ; 2 bytes @ 0x88
  3652  0000E8                     	ds	2
  3653  0000EA                     main@i:
  3654                           	opt stack 0
  3655                           
  3656                           ; 1 bytes @ 0x8A
  3657  0000EA                     	ds	1
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           postinc0	equ	0xFEE
  3663                           wreg	equ	0xFE8
  3664                           postdec1	equ	0xFE5
  3665                           fsr1l	equ	0xFE1
  3666                           
  3667                           	psect	cstackCOMRAM
  3668  000001                     __pcstackCOMRAM:
  3669                           	opt stack 0
  3670  000001                     ??i2_I2C_Wait:
  3671  000001                     i2delay@x:
  3672                           	opt stack 0
  3673                           
  3674                           ; 2 bytes @ 0x0
  3675  000001                     	ds	1
  3676  000002                     ?i2_I2C_Read:
  3677                           	opt stack 0
  3678  000002                     i2I2C_Write@d:
  3679                           	opt stack 0
  3680  000002                     i2I2C_Read@a:
  3681                           	opt stack 0
  3682                           
  3683                           ; 2 bytes @ 0x1
  3684  000002                     	ds	1
  3685  000003                     ??i2_delay:
  3686                           
  3687                           ; 1 bytes @ 0x2
  3688  000003                     	ds	1
  3689  000004                     i2writeEEPROM_ext@data:
  3690                           	opt stack 0
  3691  000004                     i2I2C_Read@temp:
  3692                           	opt stack 0
  3693                           
  3694                           ; 2 bytes @ 0x3
  3695  000004                     	ds	1
  3696  000005                     i2writeEEPROM_ext@adress:
  3697                           	opt stack 0
  3698                           
  3699                           ; 1 bytes @ 0x4
  3700  000005                     	ds	1
  3701  000006                     i2setRangeValor@_var_ajt:
  3702                           	opt stack 0
  3703                           
  3704                           ; 2 bytes @ 0x5
  3705  000006                     	ds	2
  3706  000008                     i2setRangeValor@_min:
  3707                           	opt stack 0
  3708                           
  3709                           ; 1 bytes @ 0x7
  3710  000008                     	ds	1
  3711  000009                     i2setRangeValor@_max:
  3712                           	opt stack 0
  3713                           
  3714                           ; 1 bytes @ 0x8
  3715  000009                     	ds	1
  3716  00000A                     i2setRangeValor@end_eeprom:
  3717                           	opt stack 0
  3718                           
  3719                           ; 1 bytes @ 0x9
  3720  00000A                     	ds	1
  3721  00000B                     ??i2_setRangeValor:
  3722                           
  3723                           ; 1 bytes @ 0xA
  3724  00000B                     	ds	3
  3725  00000E                     i2setRangeValor@_acao:
  3726                           	opt stack 0
  3727                           
  3728                           ; 1 bytes @ 0xD
  3729  00000E                     	ds	1
  3730  00000F                     i2setRangeValor@_aux:
  3731                           	opt stack 0
  3732                           
  3733                           ; 2 bytes @ 0xE
  3734  00000F                     	ds	2
  3735  000011                     ??_timer:
  3736                           
  3737                           ; 1 bytes @ 0x10
  3738  000011                     	ds	7
  3739  000018                     _timer$1417:
  3740                           	opt stack 0
  3741                           
  3742                           ; 2 bytes @ 0x17
  3743  000018                     	ds	2
  3744  00001A                     _timer$1418:
  3745                           	opt stack 0
  3746                           
  3747                           ; 2 bytes @ 0x19
  3748  00001A                     	ds	2
  3749  00001C                     _timer$1419:
  3750                           	opt stack 0
  3751                           
  3752                           ; 2 bytes @ 0x1B
  3753  00001C                     	ds	2
  3754  00001E                     ??_TIMER0:
  3755                           
  3756                           ; 1 bytes @ 0x1D
  3757  00001E                     	ds	18
  3758  000030                     TIMER0@c:
  3759                           	opt stack 0
  3760                           
  3761                           ; 1 bytes @ 0x2F
  3762  000030                     	ds	1
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           postdec1	equ	0xFE5
  3770                           fsr1l	equ	0xFE1
  3771                           
  3772 ;;
  3773 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3774 ;;
  3775 ;; *************** function _main *****************
  3776 ;; Defined at:
  3777 ;;		line 35 in file "src/main.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  i               1  138[BANK0 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3794 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3795 ;;Total ram usage:       18 bytes
  3796 ;; Hardware stack levels required when called:   11
  3797 ;; This function calls:
  3798 ;;		_I2C_Master_Init
  3799 ;;		_Lcd_Clear
  3800 ;;		_Lcd_Init
  3801 ;;		_UART_Init
  3802 ;;		___wmul
  3803 ;;		_alterarConfigWifi
  3804 ;;		_atualizaLCD
  3805 ;;		_blink
  3806 ;;		_btPress
  3807 ;;		_climaAtual
  3808 ;;		_controle
  3809 ;;		_criaCaracteresCGRAM
  3810 ;;		_delay
  3811 ;;		_enviaDadosWifi
  3812 ;;		_faseAtual
  3813 ;;		_getSensors
  3814 ;;		_printf
  3815 ;;		_readEEPROM_ext
  3816 ;;		_setRangeValor
  3817 ;;		_setUmidade
  3818 ;;		_sprintf
  3819 ;;		_updateLeds
  3820 ;;		_writeEEPROM_ext
  3821 ;; This function is called by:
  3822 ;;		Startup code after reset
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text0
  3827  000012                     __ptext0:
  3828                           	opt stack 0
  3829  000012                     _main:
  3830                           	opt stack 20
  3831                           
  3832                           ;main.c: 38: TRISAbits.RA5 = 0;
  3833                           
  3834                           ;incstack = 0
  3835  000012  9A92               	bcf	3986,5,c	;volatile
  3836                           
  3837                           ;main.c: 39: TRISCbits.RC2 = 0;
  3838  000014  9494               	bcf	3988,2,c	;volatile
  3839                           
  3840                           ;main.c: 40: TRISEbits.RE0 = 0;
  3841  000016  9096               	bcf	3990,0,c	;volatile
  3842                           
  3843                           ;main.c: 41: TRISDbits.RD0 = 0;
  3844  000018  9095               	bcf	3989,0,c	;volatile
  3845                           
  3846                           ;main.c: 42: TRISCbits.RC1 = 0;
  3847  00001A  9294               	bcf	3988,1,c	;volatile
  3848                           
  3849                           ;main.c: 43: TRISDbits.RD1 = 0;
  3850  00001C  9295               	bcf	3989,1,c	;volatile
  3851                           
  3852                           ;main.c: 44: TRISCbits.RC0 = 1;
  3853  00001E  8094               	bsf	3988,0,c	;volatile
  3854                           
  3855                           ;main.c: 46: PORTAbits.RA5 = 0;
  3856  000020  9A80               	bcf	3968,5,c	;volatile
  3857                           
  3858                           ;main.c: 47: PORTCbits.RC2 = 0;
  3859  000022  9482               	bcf	3970,2,c	;volatile
  3860                           
  3861                           ;main.c: 48: PORTEbits.RE0 = 0;
  3862  000024  9084               	bcf	3972,0,c	;volatile
  3863                           
  3864                           ;main.c: 49: PORTDbits.RD0 = 0;
  3865  000026  9083               	bcf	3971,0,c	;volatile
  3866                           
  3867                           ;main.c: 50: PORTCbits.RC1 = 0;
  3868  000028  9282               	bcf	3970,1,c	;volatile
  3869                           
  3870                           ;main.c: 51: PORTDbits.RD1 = 0;
  3871  00002A  9283               	bcf	3971,1,c	;volatile
  3872                           
  3873                           ;main.c: 55: TRISAbits.RA4 = 0;
  3874  00002C  9892               	bcf	3986,4,c	;volatile
  3875                           
  3876                           ;main.c: 56: LATAbits.LATA4 = 0;
  3877  00002E  9889               	bcf	3977,4,c	;volatile
  3878                           
  3879                           ;main.c: 60: TRISBbits.RB5 = 0;
  3880  000030  9A93               	bcf	3987,5,c	;volatile
  3881                           
  3882                           ;main.c: 61: LATBbits.LATB5 = 0;
  3883  000032  9A8A               	bcf	3978,5,c	;volatile
  3884                           
  3885                           ;main.c: 65: TRISBbits.RB2 = 1;
  3886  000034  8493               	bsf	3987,2,c	;volatile
  3887                           
  3888                           ;main.c: 66: INTCON2bits.INTEDG2 = 0;
  3889  000036  98F1               	bcf	intcon2,4,c	;volatile
  3890                           
  3891                           ;main.c: 67: INTCON2bits.RBIP = 0;
  3892  000038  90F1               	bcf	intcon2,0,c	;volatile
  3893                           
  3894                           ;main.c: 68: INTCON3bits.INT2IE = 1;
  3895  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3896                           
  3897                           ;main.c: 71: TRISAbits.RA0 = 1;
  3898  00003C  8092               	bsf	3986,0,c	;volatile
  3899                           
  3900                           ;main.c: 72: PORTAbits.AN0 = 0;
  3901  00003E  9080               	bcf	3968,0,c	;volatile
  3902                           
  3903                           ;main.c: 73: TRISAbits.RA1 = 1;
  3904  000040  8292               	bsf	3986,1,c	;volatile
  3905                           
  3906                           ;main.c: 74: PORTAbits.AN1 = 0;
  3907  000042  9280               	bcf	3968,1,c	;volatile
  3908                           
  3909                           ;main.c: 75: TRISAbits.RA2 = 1;
  3910  000044  8492               	bsf	3986,2,c	;volatile
  3911                           
  3912                           ;main.c: 76: PORTAbits.AN2 = 0;
  3913  000046  9480               	bcf	3968,2,c	;volatile
  3914                           
  3915                           ;main.c: 81: T0CON = 0x81;
  3916  000048  0E81               	movlw	129
  3917  00004A  6ED5               	movwf	4053,c	;volatile
  3918                           
  3919                           ;main.c: 82: INTCON = 0xE4;
  3920  00004C  0EE4               	movlw	228
  3921  00004E  6EF2               	movwf	intcon,c	;volatile
  3922                           
  3923                           ;main.c: 85: ADCON0 = 0x01;
  3924  000050  0E01               	movlw	1
  3925  000052  6EC2               	movwf	4034,c	;volatile
  3926                           
  3927                           ;main.c: 86: ADCON1 = 0x0C;
  3928  000054  0E0C               	movlw	12
  3929  000056  6EC1               	movwf	4033,c	;volatile
  3930                           
  3931                           ;main.c: 87: ADCON2 = 0xB5;
  3932  000058  0EB5               	movlw	181
  3933  00005A  6EC0               	movwf	4032,c	;volatile
  3934                           
  3935                           ;main.c: 90: UART_Init();
  3936  00005C  EC3A  F02F         	call	_UART_Init	;wreg free
  3937                           
  3938                           ;main.c: 91: printf("AT+RST\r\n");
  3939  000060  0E47               	movlw	low STR_68
  3940  000062  0100               	movlb	0	; () banked
  3941  000064  6F81               	movwf	printf@f& (0+255),b
  3942  000066  0E7F               	movlw	high STR_68
  3943  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3944  00006A  ECB7  F02D         	call	_printf	;wreg free
  3945                           
  3946                           ;main.c: 92: delay(200);
  3947  00006E  0E00               	movlw	0
  3948  000070  0100               	movlb	0	; () banked
  3949  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3950  000074  0EC8               	movlw	200
  3951  000076  6F60               	movwf	delay@x& (0+255),b
  3952  000078  EC97  F02E         	call	_delay	;wreg free
  3953                           
  3954                           ;main.c: 94: Lcd_Init();
  3955  00007C  EC19  F02B         	call	_Lcd_Init	;wreg free
  3956                           
  3957                           ;main.c: 95: Lcd_Clear();
  3958  000080  EC6E  F02F         	call	_Lcd_Clear	;wreg free
  3959                           
  3960                           ;main.c: 96: criaCaracteresCGRAM();
  3961  000084  EC2C  F028         	call	_criaCaracteresCGRAM	;wreg free
  3962                           
  3963                           ;main.c: 97: I2C_Master_Init(1000000);
  3964  000088  0E40               	movlw	64
  3965  00008A  0100               	movlb	0	; () banked
  3966  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3967  00008E  0E42               	movlw	66
  3968  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3969  000092  0E0F               	movlw	15
  3970  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3971  000096  0E00               	movlw	0
  3972  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3973  00009A  ECD5  F02B         	call	_I2C_Master_Init	;wreg free
  3974                           
  3975                           ;main.c: 98: delay(150);
  3976  00009E  0E00               	movlw	0
  3977  0000A0  0100               	movlb	0	; () banked
  3978  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3979  0000A4  0E96               	movlw	150
  3980  0000A6  6F60               	movwf	delay@x& (0+255),b
  3981  0000A8  EC97  F02E         	call	_delay	;wreg free
  3982                           
  3983                           ;main.c: 101: sprintf(line1, " TECHNOW Tecnologia");
  3984  0000AC  0EDA               	movlw	low _line1
  3985  0000AE  0100               	movlb	0	; () banked
  3986  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3987  0000B2  0E01               	movlw	high _line1
  3988  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3989  0000B6  0EB6               	movlw	low STR_69
  3990  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3991  0000BA  0E7C               	movlw	high STR_69
  3992  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3993  0000BE  EC13  F02D         	call	_sprintf	;wreg free
  3994                           
  3995                           ;main.c: 102: sprintf(line3, "Versao Soft.:");
  3996  0000C2  0EB0               	movlw	low _line3
  3997  0000C4  0100               	movlb	0	; () banked
  3998  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3999  0000C8  0E01               	movlw	high _line3
  4000  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4001  0000CC  0E97               	movlw	low STR_70
  4002  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  4003  0000D0  0E7E               	movlw	high STR_70
  4004  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4005  0000D4  EC13  F02D         	call	_sprintf	;wreg free
  4006                           
  4007                           ;main.c: 103: sprintf(&line4[9], "%s", "May 14 2019");
  4008  0000D8  0EA4               	movlw	low (_line4+9)
  4009  0000DA  0100               	movlb	0	; () banked
  4010  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  4011  0000DE  0E01               	movlw	high (_line4+9)
  4012  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4013  0000E2  0E26               	movlw	low (STR_82+7)
  4014  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  4015  0000E6  0E7F               	movlw	high (STR_82+7)
  4016  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4017  0000EA  0EA5               	movlw	low STR_58
  4018  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  4019  0000EE  0E7E               	movlw	high STR_58
  4020  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  4021  0000F2  EC13  F02D         	call	_sprintf	;wreg free
  4022                           
  4023                           ;main.c: 104: atualizaLCD(line1, line2, line3, line4);
  4024  0000F6  0EDA               	movlw	low _line1
  4025  0000F8  0100               	movlb	0	; () banked
  4026  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4027  0000FC  0E01               	movlw	high _line1
  4028  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4029  000100  0EC5               	movlw	low _line2
  4030  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4031  000104  0E01               	movlw	high _line2
  4032  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4033  000108  0EB0               	movlw	low _line3
  4034  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4035  00010C  0E01               	movlw	high _line3
  4036  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4037  000110  0E9B               	movlw	low _line4
  4038  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4039  000114  0E01               	movlw	high _line4
  4040  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4041  000118  EC17  F027         	call	_atualizaLCD	;wreg free
  4042                           
  4043                           ;main.c: 105: delay(300);
  4044  00011C  0E01               	movlw	1
  4045  00011E  0100               	movlb	0	; () banked
  4046  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  4047  000122  0E2C               	movlw	44
  4048  000124  6F60               	movwf	delay@x& (0+255),b
  4049  000126  EC97  F02E         	call	_delay	;wreg free
  4050                           
  4051                           ;main.c: 106: LATBbits.LATB5 = 1;
  4052  00012A  8A8A               	bsf	3978,5,c	;volatile
  4053                           
  4054                           ;main.c: 107: delay(2450);
  4055  00012C  0E09               	movlw	9
  4056  00012E  0100               	movlb	0	; () banked
  4057  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  4058  000132  0E92               	movlw	146
  4059  000134  6F60               	movwf	delay@x& (0+255),b
  4060  000136  EC97  F02E         	call	_delay	;wreg free
  4061                           
  4062                           ;main.c: 109: tempajt = readEEPROM_ext(1);
  4063  00013A  0E01               	movlw	1
  4064  00013C  ECC6  F02C         	call	_readEEPROM_ext
  4065  000140  0100               	movlb	0	; () banked
  4066  000142  6FEC               	movwf	_tempajt& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;main.c: 110: umidajt = readEEPROM_ext(2);
  4070  000144  0E02               	movlw	2
  4071  000146  ECC6  F02C         	call	_readEEPROM_ext
  4072  00014A  0100               	movlb	0	; () banked
  4073  00014C  6FEB               	movwf	_umidajt& (0+255),b
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;main.c: 111: trava_fase = readEEPROM_ext(3);
  4077  00014E  0E03               	movlw	3
  4078  000150  ECC6  F02C         	call	_readEEPROM_ext
  4079  000154  0100               	movlb	0	; () banked
  4080  000156  6FF8               	movwf	_trava_fase& (0+255),b
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;main.c: 112: fase = readEEPROM_ext(4);
  4084  000158  0E04               	movlw	4
  4085  00015A  ECC6  F02C         	call	_readEEPROM_ext
  4086  00015E  0100               	movlb	0	; () banked
  4087  000160  6FEE               	movwf	_fase& (0+255),b
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;main.c: 113: clima = readEEPROM_ext(5);
  4091  000162  0E05               	movlw	5
  4092  000164  ECC6  F02C         	call	_readEEPROM_ext
  4093  000168  0100               	movlb	0	; () banked
  4094  00016A  6FED               	movwf	_clima& (0+255),b
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 114: tipo_modo_trabalho = readEEPROM_ext(6);
  4098  00016C  0E06               	movlw	6
  4099  00016E  ECC6  F02C         	call	_readEEPROM_ext
  4100  000172  0100               	movlb	0	; () banked
  4101  000174  6FF6               	movwf	_tipo_modo_trabalho& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;main.c: 115: tipo_sensor_umidade = readEEPROM_ext(7);
  4105  000176  0E07               	movlw	7
  4106  000178  ECC6  F02C         	call	_readEEPROM_ext
  4107  00017C  0100               	movlb	0	; () banked
  4108  00017E  6FF7               	movwf	_tipo_sensor_umidade& (0+255),b
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 116: t_fim_fase1 = readEEPROM_ext(8);
  4112  000180  0E08               	movlw	8
  4113  000182  ECC6  F02C         	call	_readEEPROM_ext
  4114  000186  6E4E               	movwf	_t_fim_fase1,c
  4115                           
  4116                           ;main.c: 117: t_fim_fase2 = readEEPROM_ext(9);
  4117  000188  0E09               	movlw	9
  4118  00018A  ECC6  F02C         	call	_readEEPROM_ext
  4119  00018E  6E4D               	movwf	_t_fim_fase2,c
  4120                           
  4121                           ;main.c: 118: t_fim_fase3 = readEEPROM_ext(10);
  4122  000190  0E0A               	movlw	10
  4123  000192  ECC6  F02C         	call	_readEEPROM_ext
  4124  000196  6E4C               	movwf	_t_fim_fase3,c
  4125                           
  4126                           ;main.c: 119: h_venotinha = readEEPROM_ext(11);
  4127  000198  0E0B               	movlw	11
  4128  00019A  ECC6  F02C         	call	_readEEPROM_ext
  4129  00019E  0101               	movlb	1	; () banked
  4130  0001A0  6FF6               	movwf	_h_venotinha& (0+255),b
  4131                           
  4132                           ; BSR set to: 1
  4133                           ;main.c: 120: h_abafador = readEEPROM_ext(12);
  4134  0001A2  0E0C               	movlw	12
  4135  0001A4  ECC6  F02C         	call	_readEEPROM_ext
  4136  0001A8  0101               	movlb	1	; () banked
  4137  0001AA  6FF5               	movwf	_h_abafador& (0+255),b
  4138                           
  4139                           ; BSR set to: 1
  4140                           ;main.c: 121: h_flap = readEEPROM_ext(13);
  4141  0001AC  0E0D               	movlw	13
  4142  0001AE  ECC6  F02C         	call	_readEEPROM_ext
  4143  0001B2  0101               	movlb	1	; () banked
  4144  0001B4  6FF4               	movwf	_h_flap& (0+255),b
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;main.c: 122: buzzer = readEEPROM_ext(14);
  4148  0001B6  0E0E               	movlw	14
  4149  0001B8  ECC6  F02C         	call	_readEEPROM_ext
  4150  0001BC  0100               	movlb	0	; () banked
  4151  0001BE  6FFA               	movwf	_buzzer& (0+255),b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 123: fornalha = readEEPROM_ext(15);
  4155  0001C0  0E0F               	movlw	15
  4156  0001C2  ECC6  F02C         	call	_readEEPROM_ext
  4157  0001C6  0100               	movlb	0	; () banked
  4158  0001C8  6FF9               	movwf	_fornalha& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;main.c: 124: h_modo_seguranca = readEEPROM_ext(16);
  4162  0001CA  0E10               	movlw	16
  4163  0001CC  ECC6  F02C         	call	_readEEPROM_ext
  4164  0001D0  0100               	movlb	0	; () banked
  4165  0001D2  6FF1               	movwf	_h_modo_seguranca& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;main.c: 125: h_buzzer = readEEPROM_ext(17);
  4169  0001D4  0E11               	movlw	17
  4170  0001D6  ECC6  F02C         	call	_readEEPROM_ext
  4171  0001DA  0100               	movlb	0	; () banked
  4172  0001DC  6FF0               	movwf	_h_buzzer& (0+255),b
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;main.c: 126: t_flap_ligado = readEEPROM_ext(18);
  4176  0001DE  0E12               	movlw	18
  4177  0001E0  ECC6  F02C         	call	_readEEPROM_ext
  4178  0001E4  0100               	movlb	0	; () banked
  4179  0001E6  6FF5               	movwf	_t_flap_ligado& (0+255),b
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;main.c: 127: t_flap_intervalo = readEEPROM_ext(20);
  4183  0001E8  0E14               	movlw	20
  4184  0001EA  ECC6  F02C         	call	_readEEPROM_ext
  4185  0001EE  0100               	movlb	0	; () banked
  4186  0001F0  6FF4               	movwf	_t_flap_intervalo& (0+255),b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;main.c: 128: t_buzzer_religar = readEEPROM_ext(21);
  4190  0001F2  0E15               	movlw	21
  4191  0001F4  ECC6  F02C         	call	_readEEPROM_ext
  4192  0001F8  0100               	movlb	0	; () banked
  4193  0001FA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 129: t_temp_automatica = readEEPROM_ext(22);
  4197  0001FC  0E16               	movlw	22
  4198  0001FE  ECC6  F02C         	call	_readEEPROM_ext
  4199  000202  0100               	movlb	0	; () banked
  4200  000204  6FF3               	movwf	_t_temp_automatica& (0+255),b
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 130: wifi_habilita_alteracao = readEEPROM_ext(23);
  4204  000206  0E17               	movlw	23
  4205  000208  ECC6  F02C         	call	_readEEPROM_ext
  4206  00020C  0100               	movlb	0	; () banked
  4207  00020E  6FD9               	movwf	??_main& (0+255),b
  4208  000210  51D9               	movf	??_main& (0+255),w,b
  4209  000212  0101               	movlb	1	; () banked
  4210  000214  6FF1               	movwf	_wifi_habilita_alteracao& (0+255),b
  4211  000216  6BF2               	clrf	(_wifi_habilita_alteracao+1)& (0+255),b
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;main.c: 131: wifi_SENHA = readEEPROM_ext(25);
  4215  000218  0E19               	movlw	25
  4216  00021A  ECC6  F02C         	call	_readEEPROM_ext
  4217  00021E  0100               	movlb	0	; () banked
  4218  000220  6FD9               	movwf	??_main& (0+255),b
  4219  000222  51D9               	movf	??_main& (0+255),w,b
  4220  000224  0101               	movlb	1	; () banked
  4221  000226  6FEF               	movwf	_wifi_SENHA& (0+255),b
  4222  000228  6BF0               	clrf	(_wifi_SENHA+1)& (0+255),b
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;main.c: 132: h_subir_temp_automatica = readEEPROM_ext(27);
  4226  00022A  0E1B               	movlw	27
  4227  00022C  ECC6  F02C         	call	_readEEPROM_ext
  4228  000230  0100               	movlb	0	; () banked
  4229  000232  6FEF               	movwf	_h_subir_temp_automatica& (0+255),b
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 133: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4233  000234  0E1C               	movlw	28
  4234  000236  ECC6  F02C         	call	_readEEPROM_ext
  4235  00023A  0100               	movlb	0	; () banked
  4236  00023C  6FF2               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 135: char i = 0;
  4240  00023E  0E00               	movlw	0
  4241  000240  6FEA               	movwf	main@i& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;main.c: 136: for (i = 0; i < 15; i++) {
  4245  000242  0E00               	movlw	0
  4246  000244  6FEA               	movwf	main@i& (0+255),b
  4247  000246                     l9350:
  4248                           
  4249                           ; BSR set to: 0
  4250  000246  0E0E               	movlw	14
  4251  000248  65EA               	cpfsgt	main@i& (0+255),b
  4252  00024A  D001               	goto	l1271
  4253  00024C  D010               	goto	u14330
  4254  00024E                     l1271:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;main.c: 137: ssid[i] = (char) readEEPROM_ext(40 + i);
  4258                           
  4259                           ; BSR set to: 0
  4260  00024E  51EA               	movf	main@i& (0+255),w,b
  4261  000250  0D01               	mullw	1
  4262  000252  0EA1               	movlw	low _ssid
  4263  000254  24F3               	addwf	prodl,w,c
  4264  000256  6ED9               	movwf	fsr2l,c
  4265  000258  0E02               	movlw	high _ssid
  4266  00025A  20F4               	addwfc	prodh,w,c
  4267  00025C  6EDA               	movwf	fsr2h,c
  4268  00025E  51EA               	movf	main@i& (0+255),w,b
  4269  000260  0F28               	addlw	40
  4270  000262  ECC6  F02C         	call	_readEEPROM_ext
  4271  000266  6EDF               	movwf	indf2,c
  4272  000268  0100               	movlb	0	; () banked
  4273  00026A  2BEA               	incf	main@i& (0+255),f,b
  4274  00026C  D7EC               	goto	l9350
  4275  00026E                     u14330:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;main.c: 138: }
  4279                           ;main.c: 139: for (i = 0; i < 15; i++) {
  4280                           
  4281                           ; BSR set to: 0
  4282  00026E  0E00               	movlw	0
  4283  000270  6FEA               	movwf	main@i& (0+255),b
  4284  000272                     l9362:
  4285                           
  4286                           ; BSR set to: 0
  4287  000272  0E0E               	movlw	14
  4288  000274  65EA               	cpfsgt	main@i& (0+255),b
  4289  000276  D001               	goto	l1273
  4290  000278  D010               	goto	u14350
  4291  00027A                     l1273:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;main.c: 140: senha[i] = (char) readEEPROM_ext(60 + i);
  4295                           
  4296                           ; BSR set to: 0
  4297  00027A  51EA               	movf	main@i& (0+255),w,b
  4298  00027C  0D01               	mullw	1
  4299  00027E  0E92               	movlw	low _senha
  4300  000280  24F3               	addwf	prodl,w,c
  4301  000282  6ED9               	movwf	fsr2l,c
  4302  000284  0E02               	movlw	high _senha
  4303  000286  20F4               	addwfc	prodh,w,c
  4304  000288  6EDA               	movwf	fsr2h,c
  4305  00028A  51EA               	movf	main@i& (0+255),w,b
  4306  00028C  0F3C               	addlw	60
  4307  00028E  ECC6  F02C         	call	_readEEPROM_ext
  4308  000292  6EDF               	movwf	indf2,c
  4309  000294  0100               	movlb	0	; () banked
  4310  000296  2BEA               	incf	main@i& (0+255),f,b
  4311  000298  D7EC               	goto	l9362
  4312  00029A                     u14350:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;main.c: 141: }
  4316                           ;main.c: 143: i = readEEPROM_ext(30);
  4317                           
  4318                           ; BSR set to: 0
  4319  00029A  0E1E               	movlw	30
  4320  00029C  ECC6  F02C         	call	_readEEPROM_ext
  4321  0002A0  0100               	movlb	0	; () banked
  4322  0002A2  6FEA               	movwf	main@i& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 144: if (i != 187) {
  4326  0002A4  0EBB               	movlw	187
  4327  0002A6  19EA               	xorwf	main@i& (0+255),w,b
  4328  0002A8  B4D8               	btfsc	status,2,c
  4329  0002AA  D02C               	goto	l1278
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;main.c: 145: writeEEPROM_ext(30, 187);
  4333  0002AC  0EBB               	movlw	187
  4334  0002AE  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4335  0002B0  0E1E               	movlw	30
  4336  0002B2  EC57  F02D         	call	_writeEEPROM_ext
  4337  0002B6                     l1276:
  4338  0002B6  0004               	clrwdt		;# 
  4339                           
  4340                           ;main.c: 148: sprintf(line4, "ERRO EEPROM");
  4341  0002B8  0E9B               	movlw	low _line4
  4342  0002BA  0100               	movlb	0	; () banked
  4343  0002BC  6F81               	movwf	sprintf@wh& (0+255),b
  4344  0002BE  0E01               	movlw	high _line4
  4345  0002C0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4346  0002C2  0EB1               	movlw	low STR_73
  4347  0002C4  6F83               	movwf	sprintf@f& (0+255),b
  4348  0002C6  0E7E               	movlw	high STR_73
  4349  0002C8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4350  0002CA  EC13  F02D         	call	_sprintf	;wreg free
  4351                           
  4352                           ;main.c: 149: atualizaLCD(line1, line2, line3, line4);
  4353  0002CE  0EDA               	movlw	low _line1
  4354  0002D0  0100               	movlb	0	; () banked
  4355  0002D2  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4356  0002D4  0E01               	movlw	high _line1
  4357  0002D6  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4358  0002D8  0EC5               	movlw	low _line2
  4359  0002DA  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4360  0002DC  0E01               	movlw	high _line2
  4361  0002DE  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4362  0002E0  0EB0               	movlw	low _line3
  4363  0002E2  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4364  0002E4  0E01               	movlw	high _line3
  4365  0002E6  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4366  0002E8  0E9B               	movlw	low _line4
  4367  0002EA  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4368  0002EC  0E01               	movlw	high _line4
  4369  0002EE  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4370  0002F0  EC17  F027         	call	_atualizaLCD	;wreg free
  4371                           
  4372                           ;main.c: 150: delay(3000);
  4373  0002F4  0E0B               	movlw	11
  4374  0002F6  0100               	movlb	0	; () banked
  4375  0002F8  6F61               	movwf	(delay@x+1)& (0+255),b
  4376  0002FA  0EB8               	movlw	184
  4377  0002FC  6F60               	movwf	delay@x& (0+255),b
  4378  0002FE  EC97  F02E         	call	_delay	;wreg free
  4379  000302  D7D9               	goto	l1276
  4380  000304                     l1278:
  4381                           
  4382                           ;main.c: 151: }
  4383                           ;main.c: 152: }
  4384                           ;main.c: 154: while (1) {
  4385  000304  0004               	clrwdt		;# 
  4386                           
  4387                           ;main.c: 162: getSensors();
  4388  000306  EC83  F018         	call	_getSensors	;wreg free
  4389                           
  4390                           ;main.c: 163: controle();
  4391  00030A  EC75  F01D         	call	_controle	;wreg free
  4392                           
  4393                           ;main.c: 166: if (tipo_modo_trabalho == 1) {
  4394  00030E  0100               	movlb	0	; () banked
  4395  000310  05F6               	decf	_tipo_modo_trabalho& (0+255),w,b
  4396  000312  A4D8               	btfss	status,2,c
  4397  000314  D00F               	goto	l1280
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;main.c: 167: setUmidade('A', &umidajt, &tempajt, &clima);
  4401  000316  0EEB               	movlw	low _umidajt
  4402  000318  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4403  00031A  0E00               	movlw	high _umidajt
  4404  00031C  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4405  00031E  0EEC               	movlw	low _tempajt
  4406  000320  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4407  000322  0E00               	movlw	high _tempajt
  4408  000324  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4409  000326  0EED               	movlw	low _clima
  4410  000328  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4411  00032A  0E00               	movlw	high _clima
  4412  00032C  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4413  00032E  0E41               	movlw	65
  4414  000330  ECCD  F023         	call	_setUmidade
  4415  000334                     l1280:
  4416                           
  4417                           ;main.c: 168: }
  4418                           ;main.c: 170: faseAtual('F', &fase, &tempajt);
  4419  000334  0EEE               	movlw	low _fase
  4420  000336  0100               	movlb	0	; () banked
  4421  000338  6F60               	movwf	faseAtual@_fase& (0+255),b
  4422  00033A  0E00               	movlw	high _fase
  4423  00033C  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4424  00033E  0EEC               	movlw	low _tempajt
  4425  000340  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4426  000342  0E00               	movlw	high _tempajt
  4427  000344  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4428  000346  0E46               	movlw	70
  4429  000348  EC2E  F023         	call	_faseAtual
  4430                           
  4431                           ;main.c: 172: if (menu != 10) {
  4432  00034C  0E0A               	movlw	10
  4433  00034E  0100               	movlb	0	; () banked
  4434  000350  19FB               	xorwf	_menu& (0+255),w,b
  4435  000352  A4D8               	btfss	status,2,c
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;main.c: 173: enviaDadosWifi();
  4439  000354  ECE7  F015         	call	_enviaDadosWifi	;wreg free
  4440                           
  4441                           ;main.c: 174: }
  4442                           ;main.c: 178: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4443  000358  0E04               	movlw	4
  4444  00035A  EC2C  F02F         	call	_btPress
  4445  00035E  0900               	iorlw	0
  4446  000360  B4D8               	btfsc	status,2,c
  4447  000362  D359               	goto	l1283
  4448  000364  0EF9               	movlw	low _fornalha
  4449  000366  0100               	movlb	0	; () banked
  4450  000368  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4451  00036A  0E00               	movlw	high _fornalha
  4452  00036C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4453  00036E  0E00               	movlw	0
  4454  000370  6F67               	movwf	setRangeValor@_min& (0+255),b
  4455  000372  0E01               	movlw	1
  4456  000374  6F68               	movwf	setRangeValor@_max& (0+255),b
  4457  000376  0E0F               	movlw	15
  4458  000378  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4459  00037A  0E2B               	movlw	43
  4460  00037C  ECD3  F028         	call	_setRangeValor
  4461                           
  4462                           ;main.c: 180: switch (menu) {
  4463  000380  D34A               	goto	l1283
  4464  000382                     
  4465                           ;main.c: 182: sprintf(&line1[6], "|Sensor|Ajuste");
  4466  000382  0EE0               	movlw	low (_line1+6)
  4467  000384  0100               	movlb	0	; () banked
  4468  000386  6F81               	movwf	sprintf@wh& (0+255),b
  4469  000388  0E01               	movlw	high (_line1+6)
  4470  00038A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4471  00038C  0E18               	movlw	low STR_74
  4472  00038E  6F83               	movwf	sprintf@f& (0+255),b
  4473  000390  0E7E               	movlw	high STR_74
  4474  000392  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4475  000394  EC13  F02D         	call	_sprintf	;wreg free
  4476                           
  4477                           ;main.c: 183: line1[0] = 0x02;
  4478  000398  0E02               	movlw	2
  4479  00039A  0101               	movlb	1	; () banked
  4480  00039C  6FDA               	movwf	_line1& (0+255),b
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;main.c: 184: if (!buzzer) blink(line1, 1, 2);
  4484  00039E  0100               	movlb	0	; () banked
  4485  0003A0  51FA               	movf	_buzzer& (0+255),w,b
  4486  0003A2  A4D8               	btfss	status,2,c
  4487  0003A4  D00A               	goto	l1285
  4488                           
  4489                           ; BSR set to: 0
  4490  0003A6  0EDA               	movlw	low _line1
  4491  0003A8  6F60               	movwf	blink@line& (0+255),b
  4492  0003AA  0E01               	movlw	high _line1
  4493  0003AC  6F61               	movwf	(blink@line+1)& (0+255),b
  4494  0003AE  0E01               	movlw	1
  4495  0003B0  6F62               	movwf	blink@start& (0+255),b
  4496  0003B2  0E02               	movlw	2
  4497  0003B4  6F63               	movwf	blink@end& (0+255),b
  4498  0003B6  EC08  F02E         	call	_blink	;wreg free
  4499  0003BA                     l1285:
  4500                           
  4501                           ;main.c: 185: line1[2] = 'F';
  4502  0003BA  0E46               	movlw	70
  4503  0003BC  0101               	movlb	1	; () banked
  4504  0003BE  6FDC               	movwf	(_line1+2)& (0+255),b
  4505                           
  4506                           ; BSR set to: 1
  4507                           ;main.c: 186: if (!fornalha) blink(line1, 2, 3);
  4508  0003C0  0100               	movlb	0	; () banked
  4509  0003C2  51F9               	movf	_fornalha& (0+255),w,b
  4510  0003C4  A4D8               	btfss	status,2,c
  4511  0003C6  D00A               	goto	l1286
  4512                           
  4513                           ; BSR set to: 0
  4514  0003C8  0EDA               	movlw	low _line1
  4515  0003CA  6F60               	movwf	blink@line& (0+255),b
  4516  0003CC  0E01               	movlw	high _line1
  4517  0003CE  6F61               	movwf	(blink@line+1)& (0+255),b
  4518  0003D0  0E02               	movlw	2
  4519  0003D2  6F62               	movwf	blink@start& (0+255),b
  4520  0003D4  0E03               	movlw	3
  4521  0003D6  6F63               	movwf	blink@end& (0+255),b
  4522  0003D8  EC08  F02E         	call	_blink	;wreg free
  4523  0003DC                     l1286:
  4524                           
  4525                           ;main.c: 187: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4526  0003DC  0101               	movlb	1	; () banked
  4527  0003DE  519A               	movf	_wifi_conectado& (0+255),w,b
  4528  0003E0  A4D8               	btfss	status,2,c
  4529  0003E2  D005               	goto	l1288
  4530                           
  4531                           ; BSR set to: 1
  4532  0003E4  0E00               	movlw	0
  4533  0003E6  0100               	movlb	0	; () banked
  4534  0003E8  6FDD               	movwf	(_main$1633+1)& (0+255),b
  4535  0003EA  0E20               	movlw	32
  4536  0003EC  D004               	goto	L1
  4537  0003EE                     l1288:
  4538                           
  4539                           ; BSR set to: 0
  4540  0003EE  0E00               	movlw	0
  4541  0003F0  0100               	movlb	0	; () banked
  4542  0003F2  6FDD               	movwf	(_main$1633+1)& (0+255),b
  4543  0003F4  0E05               	movlw	5
  4544  0003F6                     L1:
  4545  0003F6  6FDC               	movwf	_main$1633& (0+255),b
  4546                           
  4547                           ; BSR set to: 0
  4548                           
  4549                           ; BSR set to: 0
  4550  0003F8  C0DC  F1DE         	movff	_main$1633,_line1+4
  4551                           
  4552                           ;main.c: 188: line1[5] = (trava_fase) ? 0x01 : ' ';
  4553  0003FC  51F8               	movf	_trava_fase& (0+255),w,b
  4554  0003FE  A4D8               	btfss	status,2,c
  4555  000400  D004               	goto	l1292
  4556                           
  4557                           ; BSR set to: 0
  4558  000402  0E00               	movlw	0
  4559  000404  6FDF               	movwf	(_main$1634+1)& (0+255),b
  4560  000406  0E20               	movlw	32
  4561  000408  D003               	goto	L2
  4562  00040A                     l1292:
  4563                           
  4564                           ; BSR set to: 0
  4565                           
  4566                           ; BSR set to: 0
  4567  00040A  0E00               	movlw	0
  4568  00040C  6FDF               	movwf	(_main$1634+1)& (0+255),b
  4569  00040E  0E01               	movlw	1
  4570  000410                     L2:
  4571  000410  6FDE               	movwf	_main$1634& (0+255),b
  4572                           
  4573                           ; BSR set to: 0
  4574                           
  4575                           ; BSR set to: 0
  4576  000412  C0DE  F1DF         	movff	_main$1634,_line1+5
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;main.c: 189: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4580  000416  0EC5               	movlw	low _line2
  4581  000418  6F81               	movwf	sprintf@wh& (0+255),b
  4582  00041A  0E01               	movlw	high _line2
  4583  00041C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4584  00041E  0E3D               	movlw	low STR_75
  4585  000420  6F83               	movwf	sprintf@f& (0+255),b
  4586  000422  0E7C               	movlw	high STR_75
  4587  000424  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4588  000426  C0FD  F085         	movff	_temp,?_sprintf+4
  4589  00042A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4590  00042C  C0EC  F087         	movff	_tempajt,?_sprintf+6
  4591  000430  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4592  000432  EC13  F02D         	call	_sprintf	;wreg free
  4593                           
  4594                           ;main.c: 190: line2[5] = 0x04;
  4595  000436  0E04               	movlw	4
  4596  000438  0101               	movlb	1	; () banked
  4597  00043A  6FCA               	movwf	(_line2+5)& (0+255),b
  4598                           
  4599                           ; BSR set to: 1
  4600                           ;main.c: 191: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4601  00043C  0100               	movlb	0	; () banked
  4602  00043E  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4603  000440  A4D8               	btfss	status,2,c
  4604  000442  D004               	goto	l1296
  4605                           
  4606                           ; BSR set to: 0
  4607  000444  0E00               	movlw	0
  4608  000446  6FE1               	movwf	(_main$1637+1)& (0+255),b
  4609  000448  0E46               	movlw	70
  4610  00044A  D003               	goto	L3
  4611  00044C                     l1296:
  4612                           
  4613                           ; BSR set to: 0
  4614                           
  4615                           ; BSR set to: 0
  4616  00044C  0E00               	movlw	0
  4617  00044E  6FE1               	movwf	(_main$1637+1)& (0+255),b
  4618  000450  0E25               	movlw	37
  4619  000452                     L3:
  4620  000452  6FE0               	movwf	_main$1637& (0+255),b
  4621                           
  4622                           ; BSR set to: 0
  4623                           
  4624                           ; BSR set to: 0
  4625  000454  0EB0               	movlw	low _line3
  4626  000456  6F81               	movwf	sprintf@wh& (0+255),b
  4627  000458  0E01               	movlw	high _line3
  4628  00045A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4629  00045C  0EE8               	movlw	low STR_76
  4630  00045E  6F83               	movwf	sprintf@f& (0+255),b
  4631  000460  0E7B               	movlw	high STR_76
  4632  000462  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4633  000464  C0FC  F085         	movff	_umid,?_sprintf+4
  4634  000468  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4635  00046A  C0EB  F087         	movff	_umidajt,?_sprintf+6
  4636  00046E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4637  000470  C0E0  F089         	movff	_main$1637,?_sprintf+8
  4638  000474  C0E1  F08A         	movff	_main$1637+1,?_sprintf+9
  4639  000478  EC13  F02D         	call	_sprintf	;wreg free
  4640                           
  4641                           ;main.c: 192: line3[5] = 0x03;
  4642  00047C  0E03               	movlw	3
  4643  00047E  0101               	movlb	1	; () banked
  4644  000480  6FB5               	movwf	(_line3+5)& (0+255),b
  4645                           
  4646                           ;main.c: 193: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4647  000482  0E9B               	movlw	low _line4
  4648  000484  0100               	movlb	0	; () banked
  4649  000486  6F81               	movwf	sprintf@wh& (0+255),b
  4650  000488  0E01               	movlw	high _line4
  4651  00048A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4652  00048C  0E33               	movlw	low STR_77
  4653  00048E  6F83               	movwf	sprintf@f& (0+255),b
  4654  000490  0E7F               	movlw	high STR_77
  4655  000492  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4656  000494  0EEE               	movlw	low _fase
  4657  000496  6F60               	movwf	faseAtual@_fase& (0+255),b
  4658  000498  0E00               	movlw	high _fase
  4659  00049A  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4660  00049C  0EEC               	movlw	low _tempajt
  4661  00049E  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4662  0004A0  0E00               	movlw	high _tempajt
  4663  0004A2  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4664  0004A4  0E3F               	movlw	63
  4665  0004A6  EC2E  F023         	call	_faseAtual
  4666  0004AA  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4667  0004AE  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4668  0004B2  EC13  F02D         	call	_sprintf	;wreg free
  4669                           
  4670                           ;main.c: 194: if (!f_falta_energia) {
  4671  0004B6  0100               	movlb	0	; () banked
  4672  0004B8  51FE               	movf	_f_falta_energia& (0+255),w,b
  4673  0004BA  A4D8               	btfss	status,2,c
  4674  0004BC  D00A               	goto	l1299
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;main.c: 195: sprintf(line4, " *FALTA DE ENERGIA*");
  4678  0004BE  0E9B               	movlw	low _line4
  4679  0004C0  6F81               	movwf	sprintf@wh& (0+255),b
  4680  0004C2  0E01               	movlw	high _line4
  4681  0004C4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4682  0004C6  0E52               	movlw	low STR_78
  4683  0004C8  6F83               	movwf	sprintf@f& (0+255),b
  4684  0004CA  0E7C               	movlw	high STR_78
  4685  0004CC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4686  0004CE  EC13  F02D         	call	_sprintf	;wreg free
  4687  0004D2                     l1299:
  4688                           
  4689                           ;main.c: 196: };
  4690                           ;main.c: 198: if (btPress(8)) {
  4691  0004D2  0E08               	movlw	8
  4692  0004D4  EC2C  F02F         	call	_btPress
  4693  0004D8  0900               	iorlw	0
  4694  0004DA  B4D8               	btfsc	status,2,c
  4695  0004DC  D006               	goto	l1300
  4696                           
  4697                           ;main.c: 199: menu = 1;
  4698  0004DE  0E01               	movlw	1
  4699  0004E0  0100               	movlb	0	; () banked
  4700  0004E2  6FFB               	movwf	_menu& (0+255),b
  4701                           
  4702                           ;main.c: 200: opcaomenu = 1;
  4703  0004E4  0E01               	movlw	1
  4704  0004E6  0101               	movlb	1	; () banked
  4705  0004E8  6F99               	movwf	_opcaomenu& (0+255),b
  4706  0004EA                     l1300:
  4707                           
  4708                           ;main.c: 201: }
  4709                           ;main.c: 202: if (btPress(2)) {
  4710                           
  4711                           ; BSR set to: 1
  4712  0004EA  0E02               	movlw	2
  4713  0004EC  EC2C  F02F         	call	_btPress
  4714  0004F0  0900               	iorlw	0
  4715  0004F2  B4D8               	btfsc	status,2,c
  4716  0004F4  D002               	goto	l1301
  4717                           
  4718                           ;main.c: 203: ajuste_parametro++;
  4719  0004F6  0101               	movlb	1	; () banked
  4720  0004F8  2B98               	incf	_ajuste_parametro& (0+255),f,b
  4721  0004FA                     l1301:
  4722                           
  4723                           ;main.c: 204: }
  4724                           ;main.c: 205: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4725                           
  4726                           ; BSR set to: 1
  4727  0004FA  0E01               	movlw	1
  4728  0004FC  EC2C  F02F         	call	_btPress
  4729  000500  0900               	iorlw	0
  4730  000502  B4D8               	btfsc	status,2,c
  4731  000504  D00E               	goto	l1302
  4732  000506  0EFA               	movlw	low _buzzer
  4733  000508  0100               	movlb	0	; () banked
  4734  00050A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4735  00050C  0E00               	movlw	high _buzzer
  4736  00050E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4737  000510  0E01               	movlw	1
  4738  000512  6F67               	movwf	setRangeValor@_min& (0+255),b
  4739  000514  0E01               	movlw	1
  4740  000516  6F68               	movwf	setRangeValor@_max& (0+255),b
  4741  000518  0E0E               	movlw	14
  4742  00051A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4743  00051C  0E2B               	movlw	43
  4744  00051E  ECD3  F028         	call	_setRangeValor
  4745  000522                     l1302:
  4746                           
  4747                           ;main.c: 206: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4748  000522  0E10               	movlw	16
  4749  000524  EC2C  F02F         	call	_btPress
  4750  000528  0900               	iorlw	0
  4751  00052A  B4D8               	btfsc	status,2,c
  4752  00052C  D084               	goto	l1304
  4753  00052E  0EFA               	movlw	low _buzzer
  4754  000530  0100               	movlb	0	; () banked
  4755  000532  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4756  000534  0E00               	movlw	high _buzzer
  4757  000536  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4758  000538  0E00               	movlw	0
  4759  00053A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4760  00053C  0E00               	movlw	0
  4761  00053E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4762  000540  0E0E               	movlw	14
  4763  000542  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4764  000544  0E2B               	movlw	43
  4765  000546  ECD3  F028         	call	_setRangeValor
  4766                           
  4767                           ;main.c: 209: switch (ajuste_parametro) {
  4768  00054A  D075               	goto	l1304
  4769  00054C                     
  4770                           ;main.c: 211: blink(line2, 15, 20);
  4771  00054C  0EC5               	movlw	low _line2
  4772  00054E  0100               	movlb	0	; () banked
  4773  000550  6F60               	movwf	blink@line& (0+255),b
  4774  000552  0E01               	movlw	high _line2
  4775  000554  6F61               	movwf	(blink@line+1)& (0+255),b
  4776  000556  0E0F               	movlw	15
  4777  000558  6F62               	movwf	blink@start& (0+255),b
  4778  00055A  0E14               	movlw	20
  4779  00055C  6F63               	movwf	blink@end& (0+255),b
  4780  00055E  EC08  F02E         	call	_blink	;wreg free
  4781                           
  4782                           ;main.c: 212: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4783  000562  0E40               	movlw	64
  4784  000564  EC2C  F02F         	call	_btPress
  4785  000568  0900               	iorlw	0
  4786  00056A  B4D8               	btfsc	status,2,c
  4787  00056C  D00E               	goto	l1306
  4788  00056E  0EEC               	movlw	low _tempajt
  4789  000570  0100               	movlb	0	; () banked
  4790  000572  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4791  000574  0E00               	movlw	high _tempajt
  4792  000576  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4793  000578  0E55               	movlw	85
  4794  00057A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4795  00057C  0EA0               	movlw	160
  4796  00057E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4797  000580  0E01               	movlw	1
  4798  000582  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4799  000584  0E2B               	movlw	43
  4800  000586  ECD3  F028         	call	_setRangeValor
  4801  00058A                     l1306:
  4802                           
  4803                           ;main.c: 213: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4804  00058A  0E20               	movlw	32
  4805  00058C  EC2C  F02F         	call	_btPress
  4806  000590  0900               	iorlw	0
  4807  000592  B4D8               	btfsc	status,2,c
  4808  000594  D261               	goto	l1315
  4809  000596  0EEC               	movlw	low _tempajt
  4810  000598  0100               	movlb	0	; () banked
  4811  00059A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4812  00059C  0E00               	movlw	high _tempajt
  4813  00059E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4814  0005A0  0E55               	movlw	85
  4815  0005A2  6F67               	movwf	setRangeValor@_min& (0+255),b
  4816  0005A4  0EA0               	movlw	160
  4817  0005A6  6F68               	movwf	setRangeValor@_max& (0+255),b
  4818  0005A8  0E01               	movlw	1
  4819  0005AA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4820  0005AC  0E2D               	movlw	45
  4821  0005AE  ECD3  F028         	call	_setRangeValor
  4822                           
  4823                           ;main.c: 214: break;
  4824  0005B2  D252               	goto	l1315
  4825  0005B4                     
  4826                           ;main.c: 216: if (tipo_modo_trabalho == 0) {
  4827  0005B4  0100               	movlb	0	; () banked
  4828  0005B6  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  4829  0005B8  A4D8               	btfss	status,2,c
  4830  0005BA  D037               	goto	l1310
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;main.c: 217: blink(line3, 15, 20);
  4834  0005BC  0EB0               	movlw	low _line3
  4835  0005BE  6F60               	movwf	blink@line& (0+255),b
  4836  0005C0  0E01               	movlw	high _line3
  4837  0005C2  6F61               	movwf	(blink@line+1)& (0+255),b
  4838  0005C4  0E0F               	movlw	15
  4839  0005C6  6F62               	movwf	blink@start& (0+255),b
  4840  0005C8  0E14               	movlw	20
  4841  0005CA  6F63               	movwf	blink@end& (0+255),b
  4842  0005CC  EC08  F02E         	call	_blink	;wreg free
  4843                           
  4844                           ;main.c: 218: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4845  0005D0  0E40               	movlw	64
  4846  0005D2  EC2C  F02F         	call	_btPress
  4847  0005D6  0900               	iorlw	0
  4848  0005D8  B4D8               	btfsc	status,2,c
  4849  0005DA  D010               	goto	l1311
  4850  0005DC  0EEB               	movlw	low _umidajt
  4851  0005DE  0100               	movlb	0	; () banked
  4852  0005E0  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4853  0005E2  0E00               	movlw	high _umidajt
  4854  0005E4  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4855  0005E6  0EEC               	movlw	low _tempajt
  4856  0005E8  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4857  0005EA  0E00               	movlw	high _tempajt
  4858  0005EC  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4859  0005EE  0EED               	movlw	low _clima
  4860  0005F0  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4861  0005F2  0E00               	movlw	high _clima
  4862  0005F4  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4863  0005F6  0E2B               	movlw	43
  4864  0005F8  ECCD  F023         	call	_setUmidade
  4865  0005FC                     l1311:
  4866                           
  4867                           ;main.c: 219: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4868  0005FC  0E20               	movlw	32
  4869  0005FE  EC2C  F02F         	call	_btPress
  4870  000602  0900               	iorlw	0
  4871  000604  B4D8               	btfsc	status,2,c
  4872  000606  D228               	goto	l1315
  4873  000608  0EEB               	movlw	low _umidajt
  4874  00060A  0100               	movlb	0	; () banked
  4875  00060C  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4876  00060E  0E00               	movlw	high _umidajt
  4877  000610  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4878  000612  0EEC               	movlw	low _tempajt
  4879  000614  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4880  000616  0E00               	movlw	high _tempajt
  4881  000618  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4882  00061A  0EED               	movlw	low _clima
  4883  00061C  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4884  00061E  0E00               	movlw	high _clima
  4885  000620  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4886  000622  0E2D               	movlw	45
  4887  000624  ECCD  F023         	call	_setUmidade
  4888                           
  4889                           ;main.c: 220: } else {
  4890  000628  D217               	goto	l1315
  4891  00062A                     l1310:
  4892                           
  4893                           ;main.c: 221: ajuste_parametro = 0;
  4894  00062A  0E00               	movlw	0
  4895  00062C  0101               	movlb	1	; () banked
  4896  00062E  D001               	goto	L4
  4897  000630                     
  4898                           ; BSR set to: 1
  4899                           ;main.c: 225: ajuste_parametro = 0;
  4900                           
  4901                           ; BSR set to: 1
  4902  000630  0E00               	movlw	0
  4903  000632                     L4:
  4904  000632  6F98               	movwf	_ajuste_parametro& (0+255),b
  4905                           
  4906                           ;main.c: 226: }
  4907  000634  D211               	goto	l1315
  4908  000636                     l1304:
  4909                           
  4910                           ; BSR set to: 1
  4911  000636  0101               	movlb	1	; () banked
  4912  000638  5198               	movf	_ajuste_parametro& (0+255),w,b
  4913                           
  4914                           ; Switch size 1, requested type "space"
  4915                           ; Number of cases is 2, Range of values is 1 to 2
  4916                           ; switch strategies available:
  4917                           ; Name         Instructions Cycles
  4918                           ; simple_byte            7     4 (average)
  4919                           ;	Chosen strategy is simple_byte
  4920  00063A  0A01               	xorlw	1	; case 1
  4921  00063C  B4D8               	btfsc	status,2,c
  4922  00063E  D786               	goto	l1305
  4923  000640  0A03               	xorlw	3	; case 2
  4924  000642  B4D8               	btfsc	status,2,c
  4925  000644  D7B7               	goto	l1309
  4926  000646  D7F4               	goto	l1314
  4927  000648                     
  4928                           ;main.c: 229: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4929                           
  4930                           ; BSR set to: 1
  4931  000648  0EDB               	movlw	low (_line1+1)
  4932  00064A  0100               	movlb	0	; () banked
  4933  00064C  6F81               	movwf	sprintf@wh& (0+255),b
  4934  00064E  0E01               	movlw	high (_line1+1)
  4935  000650  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4936  000652  0E2A               	movlw	low STR_79
  4937  000654  6F83               	movwf	sprintf@f& (0+255),b
  4938  000656  0E7D               	movlw	high STR_79
  4939  000658  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4940  00065A  C0EC  F085         	movff	_tempajt,?_sprintf+4
  4941  00065E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4942  000660  EC13  F02D         	call	_sprintf	;wreg free
  4943                           
  4944                           ;main.c: 230: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4945  000664  0100               	movlb	0	; () banked
  4946  000666  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
  4947  000668  A4D8               	btfss	status,2,c
  4948  00066A  D004               	goto	l1318
  4949                           
  4950                           ; BSR set to: 0
  4951  00066C  0E00               	movlw	0
  4952  00066E  6FE3               	movwf	(_main$1642+1)& (0+255),b
  4953  000670  0E46               	movlw	70
  4954  000672  D003               	goto	L5
  4955  000674                     l1318:
  4956                           
  4957                           ; BSR set to: 0
  4958                           
  4959                           ; BSR set to: 0
  4960  000674  0E00               	movlw	0
  4961  000676  6FE3               	movwf	(_main$1642+1)& (0+255),b
  4962  000678  0E25               	movlw	37
  4963  00067A                     L5:
  4964  00067A  6FE2               	movwf	_main$1642& (0+255),b
  4965                           
  4966                           ; BSR set to: 0
  4967                           
  4968                           ; BSR set to: 0
  4969  00067C  0EC6               	movlw	low (_line2+1)
  4970  00067E  6F81               	movwf	sprintf@wh& (0+255),b
  4971  000680  0E01               	movlw	high (_line2+1)
  4972  000682  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4973  000684  0E09               	movlw	low STR_80
  4974  000686  6F83               	movwf	sprintf@f& (0+255),b
  4975  000688  0E7E               	movlw	high STR_80
  4976  00068A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4977  00068C  C0EB  F085         	movff	_umidajt,?_sprintf+4
  4978  000690  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4979  000692  C0E2  F087         	movff	_main$1642,?_sprintf+6
  4980  000696  C0E3  F088         	movff	_main$1642+1,?_sprintf+7
  4981  00069A  EC13  F02D         	call	_sprintf	;wreg free
  4982                           
  4983                           ;main.c: 231: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4984  00069E  0EB1               	movlw	low (_line3+1)
  4985  0006A0  0100               	movlb	0	; () banked
  4986  0006A2  6F81               	movwf	sprintf@wh& (0+255),b
  4987  0006A4  0E01               	movlw	high (_line3+1)
  4988  0006A6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4989  0006A8  0E50               	movlw	low STR_81
  4990  0006AA  6F83               	movwf	sprintf@f& (0+255),b
  4991  0006AC  0E7F               	movlw	high STR_81
  4992  0006AE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4993  0006B0  0EEE               	movlw	low _fase
  4994  0006B2  6F60               	movwf	faseAtual@_fase& (0+255),b
  4995  0006B4  0E00               	movlw	high _fase
  4996  0006B6  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4997  0006B8  0EEC               	movlw	low _tempajt
  4998  0006BA  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4999  0006BC  0E00               	movlw	high _tempajt
  5000  0006BE  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5001  0006C0  0E3F               	movlw	63
  5002  0006C2  EC2E  F023         	call	_faseAtual
  5003  0006C6  C060  F085         	movff	?_faseAtual,?_sprintf+4
  5004  0006CA  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  5005  0006CE  EC13  F02D         	call	_sprintf	;wreg free
  5006                           
  5007                           ;main.c: 232: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  5008  0006D2  0E9C               	movlw	low (_line4+1)
  5009  0006D4  0100               	movlb	0	; () banked
  5010  0006D6  6F81               	movwf	sprintf@wh& (0+255),b
  5011  0006D8  0E01               	movlw	high (_line4+1)
  5012  0006DA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5013  0006DC  0E1F               	movlw	low STR_82
  5014  0006DE  6F83               	movwf	sprintf@f& (0+255),b
  5015  0006E0  0E7F               	movlw	high STR_82
  5016  0006E2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5017  0006E4  51ED               	movf	_clima& (0+255),w,b
  5018  0006E6  ECEF  F02C         	call	_climaAtual
  5019  0006EA  C060  F085         	movff	?_climaAtual,?_sprintf+4
  5020  0006EE  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  5021  0006F2  EC13  F02D         	call	_sprintf	;wreg free
  5022                           
  5023                           ;main.c: 233: break;
  5024  0006F6  D1B0               	goto	l1315
  5025  0006F8                     
  5026                           ;main.c: 235: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  5027  0006F8  0100               	movlb	0	; () banked
  5028  0006FA  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5029  0006FC  B4D8               	btfsc	status,2,c
  5030  0006FE  D004               	goto	l1323
  5031                           
  5032                           ; BSR set to: 0
  5033  000700  0EEA               	movlw	low STR_85
  5034  000702  6FE4               	movwf	_main$1649& (0+255),b
  5035  000704  0E7E               	movlw	high STR_85
  5036  000706  D003               	goto	L6
  5037  000708                     l1323:
  5038                           
  5039                           ; BSR set to: 0
  5040                           
  5041                           ; BSR set to: 0
  5042  000708  0E9F               	movlw	low STR_84
  5043  00070A  6FE4               	movwf	_main$1649& (0+255),b
  5044  00070C  0E7F               	movlw	high STR_84
  5045  00070E                     L6:
  5046  00070E  6FE5               	movwf	(_main$1649+1)& (0+255),b
  5047                           
  5048                           ; BSR set to: 0
  5049                           
  5050                           ; BSR set to: 0
  5051  000710  0EDB               	movlw	low (_line1+1)
  5052  000712  6F81               	movwf	sprintf@wh& (0+255),b
  5053  000714  0E01               	movlw	high (_line1+1)
  5054  000716  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5055  000718  0E59               	movlw	low STR_83
  5056  00071A  6F83               	movwf	sprintf@f& (0+255),b
  5057  00071C  0E7F               	movlw	high STR_83
  5058  00071E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5059  000720  C0E4  F085         	movff	_main$1649,?_sprintf+4
  5060  000724  C0E5  F086         	movff	_main$1649+1,?_sprintf+5
  5061  000728  EC13  F02D         	call	_sprintf	;wreg free
  5062                           
  5063                           ;main.c: 236: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  5064  00072C  0100               	movlb	0	; () banked
  5065  00072E  51F8               	movf	_trava_fase& (0+255),w,b
  5066  000730  A4D8               	btfss	status,2,c
  5067  000732  D004               	goto	l1327
  5068                           
  5069                           ; BSR set to: 0
  5070  000734  0EF5               	movlw	low STR_88
  5071  000736  6FE6               	movwf	_main$1654& (0+255),b
  5072  000738  0E7E               	movlw	high STR_88
  5073  00073A  D003               	goto	L7
  5074  00073C                     l1327:
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ; BSR set to: 0
  5079  00073C  0E73               	movlw	low STR_87
  5080  00073E  6FE6               	movwf	_main$1654& (0+255),b
  5081  000740  0E7F               	movlw	high STR_87
  5082  000742                     L7:
  5083  000742  6FE7               	movwf	(_main$1654+1)& (0+255),b
  5084                           
  5085                           ; BSR set to: 0
  5086                           
  5087                           ; BSR set to: 0
  5088  000744  0EC6               	movlw	low (_line2+1)
  5089  000746  6F81               	movwf	sprintf@wh& (0+255),b
  5090  000748  0E01               	movlw	high (_line2+1)
  5091  00074A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5092  00074C  0E29               	movlw	low STR_86
  5093  00074E  6F83               	movwf	sprintf@f& (0+255),b
  5094  000750  0E7F               	movlw	high STR_86
  5095  000752  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5096  000754  C0E6  F085         	movff	_main$1654,?_sprintf+4
  5097  000758  C0E7  F086         	movff	_main$1654+1,?_sprintf+5
  5098  00075C  EC13  F02D         	call	_sprintf	;wreg free
  5099                           
  5100                           ;main.c: 237: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  5101  000760  0100               	movlb	0	; () banked
  5102  000762  51FA               	movf	_buzzer& (0+255),w,b
  5103  000764  A4D8               	btfss	status,2,c
  5104  000766  D004               	goto	l1331
  5105                           
  5106                           ; BSR set to: 0
  5107  000768  0E0B               	movlw	low STR_91
  5108  00076A  6FE8               	movwf	_main$1659& (0+255),b
  5109  00076C  0E7F               	movlw	high STR_91
  5110  00076E  D003               	goto	L8
  5111  000770                     l1331:
  5112                           
  5113                           ; BSR set to: 0
  5114                           
  5115                           ; BSR set to: 0
  5116  000770  0EA6               	movlw	low STR_90
  5117  000772  6FE8               	movwf	_main$1659& (0+255),b
  5118  000774  0E7F               	movlw	high STR_90
  5119  000776                     L8:
  5120  000776  6FE9               	movwf	(_main$1659+1)& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           
  5124                           ; BSR set to: 0
  5125  000778  0EB1               	movlw	low (_line3+1)
  5126  00077A  6F81               	movwf	sprintf@wh& (0+255),b
  5127  00077C  0E01               	movlw	high (_line3+1)
  5128  00077E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5129  000780  0E00               	movlw	low STR_89
  5130  000782  6F83               	movwf	sprintf@f& (0+255),b
  5131  000784  0E7F               	movlw	high STR_89
  5132  000786  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5133  000788  C0E8  F085         	movff	_main$1659,?_sprintf+4
  5134  00078C  C0E9  F086         	movff	_main$1659+1,?_sprintf+5
  5135  000790  EC13  F02D         	call	_sprintf	;wreg free
  5136                           
  5137                           ;main.c: 238: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  5138  000794  0E9C               	movlw	low (_line4+1)
  5139  000796  0100               	movlb	0	; () banked
  5140  000798  6F81               	movwf	sprintf@wh& (0+255),b
  5141  00079A  0E01               	movlw	high (_line4+1)
  5142  00079C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5143  00079E  0E8E               	movlw	low STR_92
  5144  0007A0  6F83               	movwf	sprintf@f& (0+255),b
  5145  0007A2  0E7C               	movlw	high STR_92
  5146  0007A4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5147  0007A6  EC13  F02D         	call	_sprintf	;wreg free
  5148                           
  5149                           ;main.c: 239: break;
  5150  0007AA  D156               	goto	l1315
  5151  0007AC                     
  5152                           ;main.c: 241: sprintf(&line1[1], "CONFIG WIFI      >>");
  5153  0007AC  0EDB               	movlw	low (_line1+1)
  5154  0007AE  0100               	movlb	0	; () banked
  5155  0007B0  6F81               	movwf	sprintf@wh& (0+255),b
  5156  0007B2  0E01               	movlw	high (_line1+1)
  5157  0007B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5158  0007B6  0E7A               	movlw	low STR_93
  5159  0007B8  6F83               	movwf	sprintf@f& (0+255),b
  5160  0007BA  0E7C               	movlw	high STR_93
  5161  0007BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5162  0007BE  EC13  F02D         	call	_sprintf	;wreg free
  5163                           
  5164                           ;main.c: 242: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5165  0007C2  0EC6               	movlw	low (_line2+1)
  5166  0007C4  0100               	movlb	0	; () banked
  5167  0007C6  6F81               	movwf	sprintf@wh& (0+255),b
  5168  0007C8  0E01               	movlw	high (_line2+1)
  5169  0007CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5170  0007CC  0EA2               	movlw	low STR_94
  5171  0007CE  6F83               	movwf	sprintf@f& (0+255),b
  5172  0007D0  0E7C               	movlw	high STR_94
  5173  0007D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5174  0007D4  EC13  F02D         	call	_sprintf	;wreg free
  5175                           
  5176                           ;main.c: 243: break;
  5177  0007D8  D13F               	goto	l1315
  5178  0007DA                     
  5179                           ;main.c: 245: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5180  0007DA  0EDB               	movlw	low (_line1+1)
  5181  0007DC  0100               	movlb	0	; () banked
  5182  0007DE  6F81               	movwf	sprintf@wh& (0+255),b
  5183  0007E0  0E01               	movlw	high (_line1+1)
  5184  0007E2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5185  0007E4  0EA6               	movlw	low STR_95
  5186  0007E6  6F83               	movwf	sprintf@f& (0+255),b
  5187  0007E8  0E7D               	movlw	high STR_95
  5188  0007EA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5189  0007EC  C1F3  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5190  0007F0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5191  0007F2  C1F6  F087         	movff	_h_venotinha,?_sprintf+6
  5192  0007F6  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5193  0007F8  EC13  F02D         	call	_sprintf	;wreg free
  5194                           
  5195                           ;main.c: 246: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5196  0007FC  0EC6               	movlw	low (_line2+1)
  5197  0007FE  0100               	movlb	0	; () banked
  5198  000800  6F81               	movwf	sprintf@wh& (0+255),b
  5199  000802  0E01               	movlw	high (_line2+1)
  5200  000804  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5201  000806  0EB7               	movlw	low STR_96
  5202  000808  6F83               	movwf	sprintf@f& (0+255),b
  5203  00080A  0E7D               	movlw	high STR_96
  5204  00080C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5205  00080E  C0F7  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5206  000812  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5207  000814  C0F1  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5208  000818  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5209  00081A  EC13  F02D         	call	_sprintf	;wreg free
  5210                           
  5211                           ;main.c: 247: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5212  00081E  0EB1               	movlw	low (_line3+1)
  5213  000820  0100               	movlb	0	; () banked
  5214  000822  6F81               	movwf	sprintf@wh& (0+255),b
  5215  000824  0E01               	movlw	high (_line3+1)
  5216  000826  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5217  000828  0EC8               	movlw	low STR_97
  5218  00082A  6F83               	movwf	sprintf@f& (0+255),b
  5219  00082C  0E7D               	movlw	high STR_97
  5220  00082E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5221  000830  C1F5  F085         	movff	_h_abafador,?_sprintf+4
  5222  000834  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5223  000836  C0F0  F087         	movff	_h_buzzer,?_sprintf+6
  5224  00083A  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5225  00083C  EC13  F02D         	call	_sprintf	;wreg free
  5226                           
  5227                           ;main.c: 248: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5228  000840  0E9C               	movlw	low (_line4+1)
  5229  000842  0100               	movlb	0	; () banked
  5230  000844  6F81               	movwf	sprintf@wh& (0+255),b
  5231  000846  0E01               	movlw	high (_line4+1)
  5232  000848  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5233  00084A  0ED9               	movlw	low STR_98
  5234  00084C  6F83               	movwf	sprintf@f& (0+255),b
  5235  00084E  0E7D               	movlw	high STR_98
  5236  000850  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5237  000852  C1F4  F085         	movff	_h_flap,?_sprintf+4
  5238  000856  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5239  000858  C0F5  F087         	movff	_t_flap_ligado,?_sprintf+6
  5240  00085C  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5241  00085E  EC13  F02D         	call	_sprintf	;wreg free
  5242                           
  5243                           ;main.c: 249: break;
  5244  000862  D0FA               	goto	l1315
  5245  000864                     
  5246                           ;main.c: 251: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5247  000864  0EDB               	movlw	low (_line1+1)
  5248  000866  0100               	movlb	0	; () banked
  5249  000868  6F81               	movwf	sprintf@wh& (0+255),b
  5250  00086A  0E01               	movlw	high (_line1+1)
  5251  00086C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5252  00086E  0E3C               	movlw	low STR_99
  5253  000870  6F83               	movwf	sprintf@f& (0+255),b
  5254  000872  0E7D               	movlw	high STR_99
  5255  000874  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5256  000876  C0F4  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5257  00087A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5258  00087C  C1EF  F087         	movff	_wifi_SENHA,?_sprintf+6
  5259  000880  C1F0  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5260  000884  EC13  F02D         	call	_sprintf	;wreg free
  5261                           
  5262                           ;main.c: 252: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5263  000888  0EC6               	movlw	low (_line2+1)
  5264  00088A  0100               	movlb	0	; () banked
  5265  00088C  6F81               	movwf	sprintf@wh& (0+255),b
  5266  00088E  0E01               	movlw	high (_line2+1)
  5267  000890  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5268  000892  0E4E               	movlw	low STR_100
  5269  000894  6F83               	movwf	sprintf@f& (0+255),b
  5270  000896  0E7D               	movlw	high STR_100
  5271  000898  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5272  00089A  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5273  00089E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5274  0008A0  C0EF  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5275  0008A4  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5276  0008A6  EC13  F02D         	call	_sprintf	;wreg free
  5277                           
  5278                           ;main.c: 253: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5279  0008AA  0EB1               	movlw	low (_line3+1)
  5280  0008AC  0100               	movlb	0	; () banked
  5281  0008AE  6F81               	movwf	sprintf@wh& (0+255),b
  5282  0008B0  0E01               	movlw	high (_line3+1)
  5283  0008B2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5284  0008B4  0E60               	movlw	low STR_101
  5285  0008B6  6F83               	movwf	sprintf@f& (0+255),b
  5286  0008B8  0E7D               	movlw	high STR_101
  5287  0008BA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5288  0008BC  C0F3  F085         	movff	_t_temp_automatica,?_sprintf+4
  5289  0008C0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5290  0008C2  C0F2  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5291  0008C6  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5292  0008C8  EC13  F02D         	call	_sprintf	;wreg free
  5293                           
  5294                           ;main.c: 254: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5295  0008CC  0E9C               	movlw	low (_line4+1)
  5296  0008CE  0100               	movlb	0	; () banked
  5297  0008D0  6F81               	movwf	sprintf@wh& (0+255),b
  5298  0008D2  0E01               	movlw	high (_line4+1)
  5299  0008D4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5300  0008D6  0E3D               	movlw	low STR_102
  5301  0008D8  6F83               	movwf	sprintf@f& (0+255),b
  5302  0008DA  0E7F               	movlw	high STR_102
  5303  0008DC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5304  0008DE  C1F1  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5305  0008E2  C1F2  F086         	movff	_wifi_habilita_alteracao+1,?_sprintf+5
  5306  0008E6  EC13  F02D         	call	_sprintf	;wreg free
  5307                           
  5308                           ;main.c: 255: break;
  5309  0008EA  D0B6               	goto	l1315
  5310  0008EC                     
  5311                           ;main.c: 257: sprintf(line1, "REDE:%s", ssid);
  5312  0008EC  0EDA               	movlw	low _line1
  5313  0008EE  0100               	movlb	0	; () banked
  5314  0008F0  6F81               	movwf	sprintf@wh& (0+255),b
  5315  0008F2  0E01               	movlw	high _line1
  5316  0008F4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5317  0008F6  0E7B               	movlw	low STR_103
  5318  0008F8  6F83               	movwf	sprintf@f& (0+255),b
  5319  0008FA  0E7F               	movlw	high STR_103
  5320  0008FC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5321  0008FE  0EA1               	movlw	low _ssid
  5322  000900  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5323  000902  0E02               	movlw	high _ssid
  5324  000904  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5325  000906  EC13  F02D         	call	_sprintf	;wreg free
  5326                           
  5327                           ;main.c: 258: sprintf(line2, "SENHA:%s", senha);
  5328  00090A  0EC5               	movlw	low _line2
  5329  00090C  0100               	movlb	0	; () banked
  5330  00090E  6F81               	movwf	sprintf@wh& (0+255),b
  5331  000910  0E01               	movlw	high _line2
  5332  000912  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5333  000914  0E62               	movlw	low STR_104
  5334  000916  6F83               	movwf	sprintf@f& (0+255),b
  5335  000918  0E7F               	movlw	high STR_104
  5336  00091A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5337  00091C  0E92               	movlw	low _senha
  5338  00091E  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5339  000920  0E02               	movlw	high _senha
  5340  000922  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5341  000924  EC13  F02D         	call	_sprintf	;wreg free
  5342                           
  5343                           ;main.c: 260: sprintf(line3, "NS: %s", wifi_MAC);
  5344  000928  0EB0               	movlw	low _line3
  5345  00092A  0100               	movlb	0	; () banked
  5346  00092C  6F81               	movwf	sprintf@wh& (0+255),b
  5347  00092E  0E01               	movlw	high _line3
  5348  000930  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5349  000932  0EB4               	movlw	low STR_105
  5350  000934  6F83               	movwf	sprintf@f& (0+255),b
  5351  000936  0E7F               	movlw	high STR_105
  5352  000938  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5353  00093A  0EB0               	movlw	low _wifi_MAC
  5354  00093C  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5355  00093E  0E02               	movlw	high _wifi_MAC
  5356  000940  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5357  000942  EC13  F02D         	call	_sprintf	;wreg free
  5358                           
  5359                           ;main.c: 261: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5360  000946  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5361  00094A  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5362  00094E  0E00               	movlw	0
  5363  000950  0100               	movlb	0	; () banked
  5364  000952  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5365  000954  0E27               	movlw	39
  5366  000956  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5367  000958  ECAC  F02E         	call	___wmul	;wreg free
  5368  00095C  C060  F0DA         	movff	?___wmul,_main$2492
  5369  000960  C061  F0DB         	movff	?___wmul+1,_main$2492+1
  5370                           
  5371                           ;main.c: 261: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5372  000964  0E9B               	movlw	low _line4
  5373  000966  0100               	movlb	0	; () banked
  5374  000968  6F81               	movwf	sprintf@wh& (0+255),b
  5375  00096A  0E01               	movlw	high _line4
  5376  00096C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5377  00096E  0E95               	movlw	low STR_106
  5378  000970  6F83               	movwf	sprintf@f& (0+255),b
  5379  000972  0E7D               	movlw	high STR_106
  5380  000974  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5381  000976  C0DA  F085         	movff	_main$2492,?_sprintf+4
  5382  00097A  C0DB  F086         	movff	_main$2492+1,?_sprintf+5
  5383  00097E  EC13  F02D         	call	_sprintf	;wreg free
  5384                           
  5385                           ;main.c: 262: break;
  5386  000982  D06A               	goto	l1315
  5387  000984                     
  5388                           ;main.c: 264: sprintf(&line1[1], "CONFIGURAR       >>");
  5389  000984  0EDB               	movlw	low (_line1+1)
  5390  000986  0100               	movlb	0	; () banked
  5391  000988  6F81               	movwf	sprintf@wh& (0+255),b
  5392  00098A  0E01               	movlw	high (_line1+1)
  5393  00098C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5394  00098E  0E66               	movlw	low STR_107
  5395  000990  6F83               	movwf	sprintf@f& (0+255),b
  5396  000992  0E7C               	movlw	high STR_107
  5397  000994  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5398  000996  EC13  F02D         	call	_sprintf	;wreg free
  5399                           
  5400                           ;main.c: 265: break;
  5401  00099A  D05E               	goto	l1315
  5402  00099C                     
  5403                           ;main.c: 267: alterarConfigWifi();
  5404  00099C  EC0F  F01B         	call	_alterarConfigWifi	;wreg free
  5405                           
  5406                           ;main.c: 268: break;
  5407  0009A0  D05B               	goto	l1315
  5408  0009A2                     
  5409                           ;main.c: 270: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5410  0009A2  0EDB               	movlw	low (_line1+1)
  5411  0009A4  0100               	movlb	0	; () banked
  5412  0009A6  6F81               	movwf	sprintf@wh& (0+255),b
  5413  0009A8  0E01               	movlw	high (_line1+1)
  5414  0009AA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5415  0009AC  0E04               	movlw	low STR_108
  5416  0009AE  6F83               	movwf	sprintf@f& (0+255),b
  5417  0009B0  0E7D               	movlw	high STR_108
  5418  0009B2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5419  0009B4  C04E  F085         	movff	_t_fim_fase1,?_sprintf+4
  5420  0009B8  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5421  0009BA  EC13  F02D         	call	_sprintf	;wreg free
  5422                           
  5423                           ;main.c: 271: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5424  0009BE  0EC6               	movlw	low (_line2+1)
  5425  0009C0  0100               	movlb	0	; () banked
  5426  0009C2  6F81               	movwf	sprintf@wh& (0+255),b
  5427  0009C4  0E01               	movlw	high (_line2+1)
  5428  0009C6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5429  0009C8  0E17               	movlw	low STR_109
  5430  0009CA  6F83               	movwf	sprintf@f& (0+255),b
  5431  0009CC  0E7D               	movlw	high STR_109
  5432  0009CE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5433  0009D0  C04D  F085         	movff	_t_fim_fase2,?_sprintf+4
  5434  0009D4  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5435  0009D6  EC13  F02D         	call	_sprintf	;wreg free
  5436                           
  5437                           ;main.c: 272: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5438  0009DA  0EB1               	movlw	low (_line3+1)
  5439  0009DC  0100               	movlb	0	; () banked
  5440  0009DE  6F81               	movwf	sprintf@wh& (0+255),b
  5441  0009E0  0E01               	movlw	high (_line3+1)
  5442  0009E2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5443  0009E4  0EF1               	movlw	low STR_110
  5444  0009E6  6F83               	movwf	sprintf@f& (0+255),b
  5445  0009E8  0E7C               	movlw	high STR_110
  5446  0009EA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5447  0009EC  C04C  F085         	movff	_t_fim_fase3,?_sprintf+4
  5448  0009F0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5449  0009F2  EC13  F02D         	call	_sprintf	;wreg free
  5450                           
  5451                           ;main.c: 273: sprintf(line4, "*0 nao passa fase");
  5452  0009F6  0E9B               	movlw	low _line4
  5453  0009F8  0100               	movlb	0	; () banked
  5454  0009FA  6F81               	movwf	sprintf@wh& (0+255),b
  5455  0009FC  0E01               	movlw	high _line4
  5456  0009FE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5457  000A00  0E72               	movlw	low STR_111
  5458  000A02  6F83               	movwf	sprintf@f& (0+255),b
  5459  000A04  0E7D               	movlw	high STR_111
  5460  000A06  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5461  000A08  EC13  F02D         	call	_sprintf	;wreg free
  5462                           
  5463                           ;main.c: 274: break;
  5464  000A0C  D025               	goto	l1315
  5465  000A0E  0E00               	movlw	0
  5466  000A10  0100               	movlb	0	; () banked
  5467  000A12  6FFB               	movwf	_menu& (0+255),b
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;main.c: 277: }
  5471                           
  5472                           ;main.c: 276: break;
  5473  000A14  D021               	goto	l1315
  5474  000A16                     l1283:
  5475                           
  5476                           ; BSR set to: 0
  5477  000A16  0100               	movlb	0	; () banked
  5478  000A18  51FB               	movf	_menu& (0+255),w,b
  5479                           
  5480                           ; Switch size 1, requested type "space"
  5481                           ; Number of cases is 10, Range of values is 0 to 11
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte           31    16 (average)
  5485                           ;	Chosen strategy is simple_byte
  5486  000A1A  0A00               	xorlw	0	; case 0
  5487  000A1C  B4D8               	btfsc	status,2,c
  5488  000A1E  D4B1               	goto	l1284
  5489  000A20  0A01               	xorlw	1	; case 1
  5490  000A22  B4D8               	btfsc	status,2,c
  5491  000A24  D611               	goto	l1316
  5492  000A26  0A03               	xorlw	3	; case 2
  5493  000A28  B4D8               	btfsc	status,2,c
  5494  000A2A  D666               	goto	l1321
  5495  000A2C  0A01               	xorlw	1	; case 3
  5496  000A2E  B4D8               	btfsc	status,2,c
  5497  000A30  D6BD               	goto	l1334
  5498  000A32  0A06               	xorlw	6	; case 5
  5499  000A34  B4D8               	btfsc	status,2,c
  5500  000A36  D6D1               	goto	l1335
  5501  000A38  0A03               	xorlw	3	; case 6
  5502  000A3A  B4D8               	btfsc	status,2,c
  5503  000A3C  D713               	goto	l1336
  5504  000A3E  0A0E               	xorlw	14	; case 8
  5505  000A40  B4D8               	btfsc	status,2,c
  5506  000A42  D754               	goto	l1337
  5507  000A44  0A01               	xorlw	1	; case 9
  5508  000A46  B4D8               	btfsc	status,2,c
  5509  000A48  D79D               	goto	l1338
  5510  000A4A  0A03               	xorlw	3	; case 10
  5511  000A4C  B4D8               	btfsc	status,2,c
  5512  000A4E  D7A6               	goto	l1339
  5513  000A50  0A01               	xorlw	1	; case 11
  5514  000A52  B4D8               	btfsc	status,2,c
  5515  000A54  D7A6               	goto	l1340
  5516  000A56  D7DB               	goto	l1341
  5517  000A58                     l1315:
  5518                           
  5519                           ;main.c: 281: if (menu == 1 | menu == 2 | menu == 3) {
  5520                           
  5521                           ; BSR set to: 0
  5522  000A58  0100               	movlb	0	; () banked
  5523  000A5A  05FB               	decf	_menu& (0+255),w,b
  5524  000A5C  B4D8               	btfsc	status,2,c
  5525  000A5E  D008               	goto	u14610
  5526                           
  5527                           ; BSR set to: 0
  5528  000A60  0E02               	movlw	2
  5529  000A62  19FB               	xorwf	_menu& (0+255),w,b
  5530  000A64  B4D8               	btfsc	status,2,c
  5531  000A66  D004               	goto	u14610
  5532                           
  5533                           ; BSR set to: 0
  5534  000A68  0E03               	movlw	3
  5535  000A6A  19FB               	xorwf	_menu& (0+255),w,b
  5536  000A6C  A4D8               	btfss	status,2,c
  5537  000A6E  D1C9               	goto	l1342
  5538  000A70                     u14610:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;main.c: 282: ajuste_parametro = 0;
  5542                           
  5543                           ; BSR set to: 0
  5544  000A70  0E00               	movlw	0
  5545  000A72  0101               	movlb	1	; () banked
  5546  000A74  6F98               	movwf	_ajuste_parametro& (0+255),b
  5547                           
  5548                           ;main.c: 284: switch (opcaomenu) {
  5549  000A76  D188               	goto	l1345
  5550  000A78                     
  5551                           ; BSR set to: 1
  5552                           ;main.c: 286: opcaomenu = 10;
  5553                           
  5554                           ; BSR set to: 1
  5555  000A78  0E0A               	movlw	10
  5556  000A7A  D184               	goto	L11
  5557  000A7C                     
  5558                           ; BSR set to: 1
  5559                           ;main.c: 289: menu = 1;
  5560                           
  5561                           ; BSR set to: 1
  5562  000A7C  0E01               	movlw	1
  5563  000A7E  0100               	movlb	0	; () banked
  5564  000A80  6FFB               	movwf	_menu& (0+255),b
  5565                           
  5566                           ;main.c: 290: line1[0] = '>';
  5567  000A82  0E3E               	movlw	62
  5568  000A84  0101               	movlb	1	; () banked
  5569  000A86  6FDA               	movwf	_line1& (0+255),b
  5570                           
  5571                           ; BSR set to: 1
  5572                           ;main.c: 291: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  5573  000A88  0E40               	movlw	64
  5574  000A8A  EC2C  F02F         	call	_btPress
  5575  000A8E  0900               	iorlw	0
  5576  000A90  B4D8               	btfsc	status,2,c
  5577  000A92  D00E               	goto	l1349
  5578  000A94  0EEC               	movlw	low _tempajt
  5579  000A96  0100               	movlb	0	; () banked
  5580  000A98  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5581  000A9A  0E00               	movlw	high _tempajt
  5582  000A9C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5583  000A9E  0E55               	movlw	85
  5584  000AA0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5585  000AA2  0EA0               	movlw	160
  5586  000AA4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5587  000AA6  0E01               	movlw	1
  5588  000AA8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5589  000AAA  0E2B               	movlw	43
  5590  000AAC  ECD3  F028         	call	_setRangeValor
  5591  000AB0                     l1349:
  5592                           
  5593                           ;main.c: 292: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  5594  000AB0  0E20               	movlw	32
  5595  000AB2  EC2C  F02F         	call	_btPress
  5596  000AB6  0900               	iorlw	0
  5597  000AB8  B4D8               	btfsc	status,2,c
  5598  000ABA  D189               	goto	l1347
  5599  000ABC  0EEC               	movlw	low _tempajt
  5600  000ABE  0100               	movlb	0	; () banked
  5601  000AC0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5602  000AC2  0E00               	movlw	high _tempajt
  5603  000AC4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5604  000AC6  0E55               	movlw	85
  5605  000AC8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5606  000ACA  0EA0               	movlw	160
  5607  000ACC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5608  000ACE  0E01               	movlw	1
  5609  000AD0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5610  000AD2  0E2D               	movlw	45
  5611  000AD4  ECD3  F028         	call	_setRangeValor
  5612                           
  5613                           ;main.c: 293: break;
  5614  000AD8  D17A               	goto	l1347
  5615  000ADA                     
  5616                           ;main.c: 295: line2[0] = '>';
  5617  000ADA  0E3E               	movlw	62
  5618  000ADC  0101               	movlb	1	; () banked
  5619  000ADE  6FC5               	movwf	_line2& (0+255),b
  5620                           
  5621                           ;main.c: 296: if (tipo_modo_trabalho == 0) {
  5622  000AE0  0100               	movlb	0	; () banked
  5623  000AE2  51F6               	movf	_tipo_modo_trabalho& (0+255),w,b
  5624  000AE4  A4D8               	btfss	status,2,c
  5625  000AE6  D173               	goto	l1347
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;main.c: 297: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5629  000AE8  0E40               	movlw	64
  5630  000AEA  EC2C  F02F         	call	_btPress
  5631  000AEE  0900               	iorlw	0
  5632  000AF0  B4D8               	btfsc	status,2,c
  5633  000AF2  D010               	goto	l1353
  5634  000AF4  0EEB               	movlw	low _umidajt
  5635  000AF6  0100               	movlb	0	; () banked
  5636  000AF8  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5637  000AFA  0E00               	movlw	high _umidajt
  5638  000AFC  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5639  000AFE  0EEC               	movlw	low _tempajt
  5640  000B00  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5641  000B02  0E00               	movlw	high _tempajt
  5642  000B04  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5643  000B06  0EED               	movlw	low _clima
  5644  000B08  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5645  000B0A  0E00               	movlw	high _clima
  5646  000B0C  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5647  000B0E  0E2B               	movlw	43
  5648  000B10  ECCD  F023         	call	_setUmidade
  5649  000B14                     l1353:
  5650                           
  5651                           ;main.c: 298: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5652  000B14  0E20               	movlw	32
  5653  000B16  EC2C  F02F         	call	_btPress
  5654  000B1A  0900               	iorlw	0
  5655  000B1C  B4D8               	btfsc	status,2,c
  5656  000B1E  D157               	goto	l1347
  5657  000B20  0EEB               	movlw	low _umidajt
  5658  000B22  0100               	movlb	0	; () banked
  5659  000B24  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5660  000B26  0E00               	movlw	high _umidajt
  5661  000B28  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5662  000B2A  0EEC               	movlw	low _tempajt
  5663  000B2C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5664  000B2E  0E00               	movlw	high _tempajt
  5665  000B30  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5666  000B32  0EED               	movlw	low _clima
  5667  000B34  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5668  000B36  0E00               	movlw	high _clima
  5669  000B38  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5670  000B3A  0E2D               	movlw	45
  5671  000B3C  ECCD  F023         	call	_setUmidade
  5672                           
  5673                           ;main.c: 299: }
  5674                           ;main.c: 300: break;
  5675  000B40  D146               	goto	l1347
  5676  000B42                     
  5677                           ;main.c: 302: line3[0] = '>';
  5678  000B42  0E3E               	movlw	62
  5679  000B44  0101               	movlb	1	; () banked
  5680  000B46  6FB0               	movwf	_line3& (0+255),b
  5681                           
  5682                           ; BSR set to: 1
  5683                           ;main.c: 303: if (btPress(64)) {
  5684  000B48  0E40               	movlw	64
  5685  000B4A  EC2C  F02F         	call	_btPress
  5686  000B4E  0900               	iorlw	0
  5687  000B50  B4D8               	btfsc	status,2,c
  5688  000B52  D02A               	goto	l1356
  5689                           
  5690                           ;main.c: 304: setRangeValor('+', &fase, 1, 4, 4);
  5691  000B54  0EEE               	movlw	low _fase
  5692  000B56  0100               	movlb	0	; () banked
  5693  000B58  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5694  000B5A  0E00               	movlw	high _fase
  5695  000B5C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5696  000B5E  0E01               	movlw	1
  5697  000B60  6F67               	movwf	setRangeValor@_min& (0+255),b
  5698  000B62  0E04               	movlw	4
  5699  000B64  6F68               	movwf	setRangeValor@_max& (0+255),b
  5700  000B66  0E04               	movlw	4
  5701  000B68  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5702  000B6A  0E2B               	movlw	43
  5703  000B6C  ECD3  F028         	call	_setRangeValor
  5704                           
  5705                           ;main.c: 305: faseAtual('A', &fase, &tempajt);
  5706  000B70  0EEE               	movlw	low _fase
  5707  000B72  0100               	movlb	0	; () banked
  5708  000B74  6F60               	movwf	faseAtual@_fase& (0+255),b
  5709  000B76  0E00               	movlw	high _fase
  5710  000B78  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5711  000B7A  0EEC               	movlw	low _tempajt
  5712  000B7C  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5713  000B7E  0E00               	movlw	high _tempajt
  5714  000B80  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5715  000B82  0E41               	movlw	65
  5716  000B84  EC2E  F023         	call	_faseAtual
  5717                           
  5718                           ;main.c: 306: setUmidade('A', &umidajt, &tempajt, &clima);
  5719  000B88  0EEB               	movlw	low _umidajt
  5720  000B8A  0100               	movlb	0	; () banked
  5721  000B8C  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5722  000B8E  0E00               	movlw	high _umidajt
  5723  000B90  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5724  000B92  0EEC               	movlw	low _tempajt
  5725  000B94  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5726  000B96  0E00               	movlw	high _tempajt
  5727  000B98  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5728  000B9A  0EED               	movlw	low _clima
  5729  000B9C  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5730  000B9E  0E00               	movlw	high _clima
  5731  000BA0  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5732  000BA2  0E41               	movlw	65
  5733  000BA4  ECCD  F023         	call	_setUmidade
  5734  000BA8                     l1356:
  5735                           
  5736                           ;main.c: 307: }
  5737                           ;main.c: 308: if (btPress(32)) {
  5738  000BA8  0E20               	movlw	32
  5739  000BAA  EC2C  F02F         	call	_btPress
  5740  000BAE  0900               	iorlw	0
  5741  000BB0  B4D8               	btfsc	status,2,c
  5742  000BB2  D10D               	goto	l1347
  5743                           
  5744                           ;main.c: 309: setRangeValor('-', &fase, 1, 4, 4);
  5745  000BB4  0EEE               	movlw	low _fase
  5746  000BB6  0100               	movlb	0	; () banked
  5747  000BB8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5748  000BBA  0E00               	movlw	high _fase
  5749  000BBC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5750  000BBE  0E01               	movlw	1
  5751  000BC0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5752  000BC2  0E04               	movlw	4
  5753  000BC4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5754  000BC6  0E04               	movlw	4
  5755  000BC8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5756  000BCA  0E2D               	movlw	45
  5757  000BCC  ECD3  F028         	call	_setRangeValor
  5758                           
  5759                           ;main.c: 310: faseAtual('A', &fase, &tempajt);
  5760  000BD0  0EEE               	movlw	low _fase
  5761  000BD2  0100               	movlb	0	; () banked
  5762  000BD4  6F60               	movwf	faseAtual@_fase& (0+255),b
  5763  000BD6  0E00               	movlw	high _fase
  5764  000BD8  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5765  000BDA  0EEC               	movlw	low _tempajt
  5766  000BDC  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5767  000BDE  0E00               	movlw	high _tempajt
  5768  000BE0  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5769  000BE2  0E41               	movlw	65
  5770  000BE4  EC2E  F023         	call	_faseAtual
  5771                           
  5772                           ;main.c: 311: setUmidade('A', &umidajt, &tempajt, &clima);
  5773  000BE8  0EEB               	movlw	low _umidajt
  5774  000BEA  0100               	movlb	0	; () banked
  5775  000BEC  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5776  000BEE  0E00               	movlw	high _umidajt
  5777  000BF0  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5778  000BF2  0EEC               	movlw	low _tempajt
  5779  000BF4  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5780  000BF6  0E00               	movlw	high _tempajt
  5781  000BF8  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5782  000BFA  0EED               	movlw	low _clima
  5783  000BFC  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5784  000BFE  0E00               	movlw	high _clima
  5785  000C00  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5786  000C02  0E41               	movlw	65
  5787  000C04  ECCD  F023         	call	_setUmidade
  5788                           
  5789                           ;main.c: 312: }
  5790                           ;main.c: 313: break;
  5791  000C08  D0E2               	goto	l1347
  5792  000C0A                     
  5793                           ;main.c: 315: menu = 1;
  5794  000C0A  0E01               	movlw	1
  5795  000C0C  0100               	movlb	0	; () banked
  5796  000C0E  6FFB               	movwf	_menu& (0+255),b
  5797                           
  5798                           ;main.c: 316: line4[0] = '>';
  5799  000C10  0E3E               	movlw	62
  5800  000C12  0101               	movlb	1	; () banked
  5801  000C14  6F9B               	movwf	_line4& (0+255),b
  5802                           
  5803                           ; BSR set to: 1
  5804                           ;main.c: 317: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5805  000C16  0E40               	movlw	64
  5806  000C18  EC2C  F02F         	call	_btPress
  5807  000C1C  0900               	iorlw	0
  5808  000C1E  B4D8               	btfsc	status,2,c
  5809  000C20  D00E               	goto	l1359
  5810  000C22  0EED               	movlw	low _clima
  5811  000C24  0100               	movlb	0	; () banked
  5812  000C26  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5813  000C28  0E00               	movlw	high _clima
  5814  000C2A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5815  000C2C  0E01               	movlw	1
  5816  000C2E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5817  000C30  0E03               	movlw	3
  5818  000C32  6F68               	movwf	setRangeValor@_max& (0+255),b
  5819  000C34  0E05               	movlw	5
  5820  000C36  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5821  000C38  0E2B               	movlw	43
  5822  000C3A  ECD3  F028         	call	_setRangeValor
  5823  000C3E                     l1359:
  5824                           
  5825                           ;main.c: 318: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5826  000C3E  0E20               	movlw	32
  5827  000C40  EC2C  F02F         	call	_btPress
  5828  000C44  0900               	iorlw	0
  5829  000C46  B4D8               	btfsc	status,2,c
  5830  000C48  D0C2               	goto	l1347
  5831  000C4A  0EED               	movlw	low _clima
  5832  000C4C  0100               	movlb	0	; () banked
  5833  000C4E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5834  000C50  0E00               	movlw	high _clima
  5835  000C52  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5836  000C54  0E01               	movlw	1
  5837  000C56  6F67               	movwf	setRangeValor@_min& (0+255),b
  5838  000C58  0E03               	movlw	3
  5839  000C5A  6F68               	movwf	setRangeValor@_max& (0+255),b
  5840  000C5C  0E05               	movlw	5
  5841  000C5E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5842  000C60  0E2D               	movlw	45
  5843  000C62  ECD3  F028         	call	_setRangeValor
  5844                           
  5845                           ;main.c: 319: break;
  5846  000C66  D0B3               	goto	l1347
  5847  000C68                     
  5848                           ;main.c: 321: menu = 2;
  5849  000C68  0E02               	movlw	2
  5850  000C6A  0100               	movlb	0	; () banked
  5851  000C6C  6FFB               	movwf	_menu& (0+255),b
  5852                           
  5853                           ;main.c: 322: line1[0] = '>';
  5854  000C6E  0E3E               	movlw	62
  5855  000C70  0101               	movlb	1	; () banked
  5856  000C72  6FDA               	movwf	_line1& (0+255),b
  5857                           
  5858                           ; BSR set to: 1
  5859                           ;main.c: 323: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5860  000C74  0E40               	movlw	64
  5861  000C76  EC2C  F02F         	call	_btPress
  5862  000C7A  0900               	iorlw	0
  5863  000C7C  A4D8               	btfss	status,2,c
  5864  000C7E  D006               	goto	u14720
  5865  000C80  0E20               	movlw	32
  5866  000C82  EC2C  F02F         	call	_btPress
  5867  000C86  0900               	iorlw	0
  5868  000C88  B4D8               	btfsc	status,2,c
  5869  000C8A  D0A1               	goto	l1347
  5870  000C8C                     u14720:
  5871  000C8C  0EF6               	movlw	low _tipo_modo_trabalho
  5872  000C8E  0100               	movlb	0	; () banked
  5873  000C90  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5874  000C92  0E00               	movlw	high _tipo_modo_trabalho
  5875  000C94  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5876  000C96  0E00               	movlw	0
  5877  000C98  6F67               	movwf	setRangeValor@_min& (0+255),b
  5878  000C9A  0E01               	movlw	1
  5879  000C9C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5880  000C9E  0E06               	movlw	6
  5881  000CA0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5882  000CA2  0E2B               	movlw	43
  5883  000CA4  ECD3  F028         	call	_setRangeValor
  5884                           
  5885                           ;main.c: 324: break;
  5886  000CA8  D092               	goto	l1347
  5887  000CAA                     
  5888                           ;main.c: 326: line2[0] = '>';
  5889  000CAA  0E3E               	movlw	62
  5890  000CAC  0101               	movlb	1	; () banked
  5891  000CAE  6FC5               	movwf	_line2& (0+255),b
  5892                           
  5893                           ; BSR set to: 1
  5894                           ;main.c: 327: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5895  000CB0  0E40               	movlw	64
  5896  000CB2  EC2C  F02F         	call	_btPress
  5897  000CB6  0900               	iorlw	0
  5898  000CB8  A4D8               	btfss	status,2,c
  5899  000CBA  D006               	goto	u14740
  5900  000CBC  0E20               	movlw	32
  5901  000CBE  EC2C  F02F         	call	_btPress
  5902  000CC2  0900               	iorlw	0
  5903  000CC4  B4D8               	btfsc	status,2,c
  5904  000CC6  D083               	goto	l1347
  5905  000CC8                     u14740:
  5906  000CC8  0EF8               	movlw	low _trava_fase
  5907  000CCA  0100               	movlb	0	; () banked
  5908  000CCC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5909  000CCE  0E00               	movlw	high _trava_fase
  5910  000CD0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5911  000CD2  0E00               	movlw	0
  5912  000CD4  6F67               	movwf	setRangeValor@_min& (0+255),b
  5913  000CD6  0E01               	movlw	1
  5914  000CD8  6F68               	movwf	setRangeValor@_max& (0+255),b
  5915  000CDA  0E03               	movlw	3
  5916  000CDC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5917  000CDE  0E2B               	movlw	43
  5918  000CE0  ECD3  F028         	call	_setRangeValor
  5919                           
  5920                           ;main.c: 328: break;
  5921  000CE4  D074               	goto	l1347
  5922  000CE6                     
  5923                           ;main.c: 330: line3[0] = '>';
  5924  000CE6  0E3E               	movlw	62
  5925  000CE8  0101               	movlb	1	; () banked
  5926  000CEA  6FB0               	movwf	_line3& (0+255),b
  5927                           
  5928                           ; BSR set to: 1
  5929                           ;main.c: 331: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5930  000CEC  0E40               	movlw	64
  5931  000CEE  EC2C  F02F         	call	_btPress
  5932  000CF2  0900               	iorlw	0
  5933  000CF4  A4D8               	btfss	status,2,c
  5934  000CF6  D006               	goto	u14760
  5935  000CF8  0E20               	movlw	32
  5936  000CFA  EC2C  F02F         	call	_btPress
  5937  000CFE  0900               	iorlw	0
  5938  000D00  B4D8               	btfsc	status,2,c
  5939  000D02  D065               	goto	l1347
  5940  000D04                     u14760:
  5941  000D04  0EFA               	movlw	low _buzzer
  5942  000D06  0100               	movlb	0	; () banked
  5943  000D08  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5944  000D0A  0E00               	movlw	high _buzzer
  5945  000D0C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5946  000D0E  0E00               	movlw	0
  5947  000D10  6F67               	movwf	setRangeValor@_min& (0+255),b
  5948  000D12  0E01               	movlw	1
  5949  000D14  6F68               	movwf	setRangeValor@_max& (0+255),b
  5950  000D16  0E0E               	movlw	14
  5951  000D18  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5952  000D1A  0E2B               	movlw	43
  5953  000D1C  ECD3  F028         	call	_setRangeValor
  5954                           
  5955                           ;main.c: 332: break;
  5956  000D20  D056               	goto	l1347
  5957  000D22                     
  5958                           ;main.c: 334: menu = 2;
  5959  000D22  0E02               	movlw	2
  5960  000D24  0100               	movlb	0	; () banked
  5961  000D26  6FFB               	movwf	_menu& (0+255),b
  5962                           
  5963                           ;main.c: 335: line4[0] = '>';
  5964  000D28  0E3E               	movlw	62
  5965  000D2A  0101               	movlb	1	; () banked
  5966  000D2C  6F9B               	movwf	_line4& (0+255),b
  5967                           
  5968                           ; BSR set to: 1
  5969                           ;main.c: 336: if (btPress(2)) menu = 11;
  5970  000D2E  0E02               	movlw	2
  5971  000D30  EC2C  F02F         	call	_btPress
  5972  000D34  0900               	iorlw	0
  5973  000D36  B4D8               	btfsc	status,2,c
  5974  000D38  D04A               	goto	l1347
  5975  000D3A  0E0B               	movlw	11
  5976  000D3C  D00D               	goto	L10
  5977  000D3E                     
  5978                           ;main.c: 339: menu = 3;
  5979                           
  5980                           ; BSR set to: 0
  5981  000D3E  0E03               	movlw	3
  5982  000D40  0100               	movlb	0	; () banked
  5983  000D42  6FFB               	movwf	_menu& (0+255),b
  5984                           
  5985                           ;main.c: 340: line1[0] = '>';
  5986  000D44  0E3E               	movlw	62
  5987  000D46  0101               	movlb	1	; () banked
  5988  000D48  6FDA               	movwf	_line1& (0+255),b
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;main.c: 341: if (btPress(2)) menu = 8;
  5992  000D4A  0E02               	movlw	2
  5993  000D4C  EC2C  F02F         	call	_btPress
  5994  000D50  0900               	iorlw	0
  5995  000D52  B4D8               	btfsc	status,2,c
  5996  000D54  D03C               	goto	l1347
  5997  000D56  0E08               	movlw	8
  5998  000D58                     L10:
  5999  000D58  0100               	movlb	0	; () banked
  6000  000D5A  6FFB               	movwf	_menu& (0+255),b
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;main.c: 342: break;
  6004  000D5C  D038               	goto	l1347
  6005  000D5E                     
  6006                           ;main.c: 344: menu = 3;
  6007                           
  6008                           ; BSR set to: 0
  6009  000D5E  0E03               	movlw	3
  6010  000D60  0100               	movlb	0	; () banked
  6011  000D62  6FFB               	movwf	_menu& (0+255),b
  6012                           
  6013                           ;main.c: 345: line2[0] = '>';
  6014  000D64  0E3E               	movlw	62
  6015  000D66  0101               	movlb	1	; () banked
  6016  000D68  6FC5               	movwf	_line2& (0+255),b
  6017                           
  6018                           ; BSR set to: 1
  6019                           ;main.c: 346: if (btPress(2)) {
  6020  000D6A  0E02               	movlw	2
  6021  000D6C  EC2C  F02F         	call	_btPress
  6022  000D70  0900               	iorlw	0
  6023  000D72  B4D8               	btfsc	status,2,c
  6024  000D74  D02C               	goto	l1347
  6025                           
  6026                           ;main.c: 347: menu = 5;
  6027  000D76  0E05               	movlw	5
  6028  000D78  0100               	movlb	0	; () banked
  6029  000D7A  6FFB               	movwf	_menu& (0+255),b
  6030                           
  6031                           ;main.c: 348: opcaomenu = 1;
  6032  000D7C  0E01               	movlw	1
  6033  000D7E  0101               	movlb	1	; () banked
  6034  000D80  D001               	goto	L11
  6035  000D82                     
  6036                           ; BSR set to: 1
  6037                           ;main.c: 352: opcaomenu = 1;
  6038                           
  6039                           ; BSR set to: 1
  6040  000D82  0E01               	movlw	1
  6041  000D84                     L11:
  6042  000D84  6F99               	movwf	_opcaomenu& (0+255),b
  6043                           
  6044                           ; BSR set to: 1
  6045                           ;main.c: 354: }
  6046                           
  6047                           ;main.c: 353: break;
  6048  000D86  D023               	goto	l1347
  6049  000D88                     l1345:
  6050                           
  6051                           ; BSR set to: 1
  6052                           
  6053                           ; BSR set to: 1
  6054  000D88  5199               	movf	_opcaomenu& (0+255),w,b
  6055                           
  6056                           ; Switch size 1, requested type "space"
  6057                           ; Number of cases is 11, Range of values is 0 to 10
  6058                           ; switch strategies available:
  6059                           ; Name         Instructions Cycles
  6060                           ; simple_byte           34    18 (average)
  6061                           ;	Chosen strategy is simple_byte
  6062  000D8A  0A00               	xorlw	0	; case 0
  6063  000D8C  B4D8               	btfsc	status,2,c
  6064  000D8E  D674               	goto	l1346
  6065  000D90  0A01               	xorlw	1	; case 1
  6066  000D92  B4D8               	btfsc	status,2,c
  6067  000D94  D673               	goto	l1348
  6068  000D96  0A03               	xorlw	3	; case 2
  6069  000D98  B4D8               	btfsc	status,2,c
  6070  000D9A  D69F               	goto	l1351
  6071  000D9C  0A01               	xorlw	1	; case 3
  6072  000D9E  B4D8               	btfsc	status,2,c
  6073  000DA0  D6D0               	goto	l1355
  6074  000DA2  0A07               	xorlw	7	; case 4
  6075  000DA4  B4D8               	btfsc	status,2,c
  6076  000DA6  D731               	goto	l1358
  6077  000DA8  0A01               	xorlw	1	; case 5
  6078  000DAA  B4D8               	btfsc	status,2,c
  6079  000DAC  D75D               	goto	l1361
  6080  000DAE  0A03               	xorlw	3	; case 6
  6081  000DB0  B4D8               	btfsc	status,2,c
  6082  000DB2  D77B               	goto	l1365
  6083  000DB4  0A01               	xorlw	1	; case 7
  6084  000DB6  B4D8               	btfsc	status,2,c
  6085  000DB8  D796               	goto	l1369
  6086  000DBA  0A0F               	xorlw	15	; case 8
  6087  000DBC  B4D8               	btfsc	status,2,c
  6088  000DBE  D7B1               	goto	l1373
  6089  000DC0  0A01               	xorlw	1	; case 9
  6090  000DC2  B4D8               	btfsc	status,2,c
  6091  000DC4  D7BC               	goto	l1375
  6092  000DC6  0A03               	xorlw	3	; case 10
  6093  000DC8  B4D8               	btfsc	status,2,c
  6094  000DCA  D7C9               	goto	l1377
  6095  000DCC  D7DA               	goto	l1379
  6096  000DCE                     l1347:
  6097                           
  6098                           ;main.c: 356: if (btPress(16)) opcaomenu++;
  6099                           
  6100                           ; BSR set to: 1
  6101  000DCE  0E10               	movlw	16
  6102  000DD0  EC2C  F02F         	call	_btPress
  6103  000DD4  0900               	iorlw	0
  6104  000DD6  B4D8               	btfsc	status,2,c
  6105  000DD8  D002               	goto	l1380
  6106  000DDA  0101               	movlb	1	; () banked
  6107  000DDC  2B99               	incf	_opcaomenu& (0+255),f,b
  6108  000DDE                     l1380:
  6109                           
  6110                           ;main.c: 357: if (btPress(1)) opcaomenu--;
  6111                           
  6112                           ; BSR set to: 1
  6113  000DDE  0E01               	movlw	1
  6114  000DE0  EC2C  F02F         	call	_btPress
  6115  000DE4  0900               	iorlw	0
  6116  000DE6  B4D8               	btfsc	status,2,c
  6117  000DE8  D002               	goto	l1381
  6118  000DEA  0101               	movlb	1	; () banked
  6119  000DEC  0799               	decf	_opcaomenu& (0+255),f,b
  6120  000DEE                     l1381:
  6121                           
  6122                           ;main.c: 358: if (btPress(8)) menu = 0;
  6123                           
  6124                           ; BSR set to: 1
  6125  000DEE  0E08               	movlw	8
  6126  000DF0  EC2C  F02F         	call	_btPress
  6127  000DF4  0900               	iorlw	0
  6128  000DF6  B4D8               	btfsc	status,2,c
  6129  000DF8  EF07  F00B         	goto	l1468
  6130  000DFC  0E00               	movlw	0
  6131  000DFE  EF05  F00B         	goto	L13
  6132  000E02                     l1342:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;main.c: 363: if (menu == 5 | menu == 6) {
  6136                           
  6137                           ; BSR set to: 0
  6138  000E02  0E05               	movlw	5
  6139  000E04  19FB               	xorwf	_menu& (0+255),w,b
  6140  000E06  B4D8               	btfsc	status,2,c
  6141  000E08  D004               	goto	u14840
  6142                           
  6143                           ; BSR set to: 0
  6144  000E0A  0E06               	movlw	6
  6145  000E0C  19FB               	xorwf	_menu& (0+255),w,b
  6146  000E0E  A4D8               	btfss	status,2,c
  6147  000E10  D2F5               	goto	l1384
  6148  000E12                     u14840:
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;main.c: 364: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  6152                           
  6153                           ; BSR set to: 0
  6154  000E12  0E30               	movlw	48
  6155  000E14  0101               	movlb	1	; () banked
  6156  000E16  19F3               	xorwf	_senha_desbloqueio_func& (0+255),w,b
  6157  000E18  B4D8               	btfsc	status,2,c
  6158  000E1A  D2A4               	goto	l1388
  6159                           
  6160                           ; BSR set to: 1
  6161  000E1C  0E01               	movlw	1
  6162  000E1E  6F99               	movwf	_opcaomenu& (0+255),b
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;main.c: 365: switch (opcaomenu) {
  6166  000E20  D2A1               	goto	l1388
  6167  000E22                     
  6168                           ; BSR set to: 1
  6169                           ;main.c: 367: menu = 5;
  6170                           
  6171                           ; BSR set to: 1
  6172  000E22  0E05               	movlw	5
  6173  000E24  0100               	movlb	0	; () banked
  6174  000E26  6FFB               	movwf	_menu& (0+255),b
  6175                           
  6176                           ;main.c: 368: line1[0] = '>';
  6177  000E28  0E3E               	movlw	62
  6178  000E2A  0101               	movlb	1	; () banked
  6179  000E2C  6FDA               	movwf	_line1& (0+255),b
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;main.c: 369: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6183  000E2E  0E40               	movlw	64
  6184  000E30  EC2C  F02F         	call	_btPress
  6185  000E34  0900               	iorlw	0
  6186  000E36  B4D8               	btfsc	status,2,c
  6187  000E38  D00E               	goto	l1390
  6188  000E3A  0EF3               	movlw	low _senha_desbloqueio_func
  6189  000E3C  0100               	movlb	0	; () banked
  6190  000E3E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6191  000E40  0E01               	movlw	high _senha_desbloqueio_func
  6192  000E42  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6193  000E44  0E00               	movlw	0
  6194  000E46  6F67               	movwf	setRangeValor@_min& (0+255),b
  6195  000E48  0E32               	movlw	50
  6196  000E4A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6197  000E4C  0E00               	movlw	0
  6198  000E4E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6199  000E50  0E2B               	movlw	43
  6200  000E52  ECD3  F028         	call	_setRangeValor
  6201  000E56                     l1390:
  6202                           
  6203                           ;main.c: 370: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6204  000E56  0E20               	movlw	32
  6205  000E58  EC2C  F02F         	call	_btPress
  6206  000E5C  0900               	iorlw	0
  6207  000E5E  B4D8               	btfsc	status,2,c
  6208  000E60  D2B0               	goto	l1392
  6209  000E62  0EF3               	movlw	low _senha_desbloqueio_func
  6210  000E64  0100               	movlb	0	; () banked
  6211  000E66  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6212  000E68  0E01               	movlw	high _senha_desbloqueio_func
  6213  000E6A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6214  000E6C  0E00               	movlw	0
  6215  000E6E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6216  000E70  0E32               	movlw	50
  6217  000E72  6F68               	movwf	setRangeValor@_max& (0+255),b
  6218  000E74  0E00               	movlw	0
  6219  000E76  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6220  000E78  0E2D               	movlw	45
  6221  000E7A  ECD3  F028         	call	_setRangeValor
  6222                           
  6223                           ;main.c: 371: break;
  6224  000E7E  D2A1               	goto	l1392
  6225  000E80                     
  6226                           ;main.c: 373: line2[0] = '>';
  6227  000E80  0E3E               	movlw	62
  6228  000E82  0101               	movlb	1	; () banked
  6229  000E84  6FC5               	movwf	_line2& (0+255),b
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;main.c: 374: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6233  000E86  0E40               	movlw	64
  6234  000E88  EC2C  F02F         	call	_btPress
  6235  000E8C  0900               	iorlw	0
  6236  000E8E  B4D8               	btfsc	status,2,c
  6237  000E90  D00E               	goto	l1394
  6238  000E92  0EF7               	movlw	low _tipo_sensor_umidade
  6239  000E94  0100               	movlb	0	; () banked
  6240  000E96  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6241  000E98  0E00               	movlw	high _tipo_sensor_umidade
  6242  000E9A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6243  000E9C  0E00               	movlw	0
  6244  000E9E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6245  000EA0  0E01               	movlw	1
  6246  000EA2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6247  000EA4  0E07               	movlw	7
  6248  000EA6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6249  000EA8  0E2B               	movlw	43
  6250  000EAA  ECD3  F028         	call	_setRangeValor
  6251  000EAE                     l1394:
  6252                           
  6253                           ;main.c: 375: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6254  000EAE  0E20               	movlw	32
  6255  000EB0  EC2C  F02F         	call	_btPress
  6256  000EB4  0900               	iorlw	0
  6257  000EB6  B4D8               	btfsc	status,2,c
  6258  000EB8  D284               	goto	l1392
  6259  000EBA  0EF7               	movlw	low _tipo_sensor_umidade
  6260  000EBC  0100               	movlb	0	; () banked
  6261  000EBE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6262  000EC0  0E00               	movlw	high _tipo_sensor_umidade
  6263  000EC2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6264  000EC4  0E00               	movlw	0
  6265  000EC6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6266  000EC8  0E01               	movlw	1
  6267  000ECA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6268  000ECC  0E07               	movlw	7
  6269  000ECE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6270  000ED0  0E2D               	movlw	45
  6271  000ED2  ECD3  F028         	call	_setRangeValor
  6272                           
  6273                           ;main.c: 376: break;
  6274  000ED6  D275               	goto	l1392
  6275  000ED8                     
  6276                           ;main.c: 378: line3[0] = '>';
  6277  000ED8  0E3E               	movlw	62
  6278  000EDA  0101               	movlb	1	; () banked
  6279  000EDC  6FB0               	movwf	_line3& (0+255),b
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;main.c: 379: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6283  000EDE  0E40               	movlw	64
  6284  000EE0  EC2C  F02F         	call	_btPress
  6285  000EE4  0900               	iorlw	0
  6286  000EE6  B4D8               	btfsc	status,2,c
  6287  000EE8  D00E               	goto	l1397
  6288  000EEA  0EF5               	movlw	low _h_abafador
  6289  000EEC  0100               	movlb	0	; () banked
  6290  000EEE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6291  000EF0  0E01               	movlw	high _h_abafador
  6292  000EF2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6293  000EF4  0E01               	movlw	1
  6294  000EF6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6295  000EF8  0E0A               	movlw	10
  6296  000EFA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6297  000EFC  0E0C               	movlw	12
  6298  000EFE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6299  000F00  0E2B               	movlw	43
  6300  000F02  ECD3  F028         	call	_setRangeValor
  6301  000F06                     l1397:
  6302                           
  6303                           ;main.c: 380: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6304  000F06  0E20               	movlw	32
  6305  000F08  EC2C  F02F         	call	_btPress
  6306  000F0C  0900               	iorlw	0
  6307  000F0E  B4D8               	btfsc	status,2,c
  6308  000F10  D258               	goto	l1392
  6309  000F12  0EF5               	movlw	low _h_abafador
  6310  000F14  0100               	movlb	0	; () banked
  6311  000F16  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6312  000F18  0E01               	movlw	high _h_abafador
  6313  000F1A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6314  000F1C  0E01               	movlw	1
  6315  000F1E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6316  000F20  0E0A               	movlw	10
  6317  000F22  6F68               	movwf	setRangeValor@_max& (0+255),b
  6318  000F24  0E0C               	movlw	12
  6319  000F26  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6320  000F28  0E2D               	movlw	45
  6321  000F2A  ECD3  F028         	call	_setRangeValor
  6322                           
  6323                           ;main.c: 381: break;
  6324  000F2E  D249               	goto	l1392
  6325  000F30                     
  6326                           ;main.c: 383: line4[0] = '>';
  6327  000F30  0E3E               	movlw	62
  6328  000F32  0101               	movlb	1	; () banked
  6329  000F34  6F9B               	movwf	_line4& (0+255),b
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;main.c: 384: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6333  000F36  0E40               	movlw	64
  6334  000F38  EC2C  F02F         	call	_btPress
  6335  000F3C  0900               	iorlw	0
  6336  000F3E  B4D8               	btfsc	status,2,c
  6337  000F40  D00E               	goto	l1400
  6338  000F42  0EF4               	movlw	low _h_flap
  6339  000F44  0100               	movlb	0	; () banked
  6340  000F46  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6341  000F48  0E01               	movlw	high _h_flap
  6342  000F4A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6343  000F4C  0E01               	movlw	1
  6344  000F4E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6345  000F50  0E0A               	movlw	10
  6346  000F52  6F68               	movwf	setRangeValor@_max& (0+255),b
  6347  000F54  0E0D               	movlw	13
  6348  000F56  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6349  000F58  0E2B               	movlw	43
  6350  000F5A  ECD3  F028         	call	_setRangeValor
  6351  000F5E                     l1400:
  6352                           
  6353                           ;main.c: 385: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6354  000F5E  0E20               	movlw	32
  6355  000F60  EC2C  F02F         	call	_btPress
  6356  000F64  0900               	iorlw	0
  6357  000F66  B4D8               	btfsc	status,2,c
  6358  000F68  D22C               	goto	l1392
  6359  000F6A  0EF4               	movlw	low _h_flap
  6360  000F6C  0100               	movlb	0	; () banked
  6361  000F6E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6362  000F70  0E01               	movlw	high _h_flap
  6363  000F72  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6364  000F74  0E01               	movlw	1
  6365  000F76  6F67               	movwf	setRangeValor@_min& (0+255),b
  6366  000F78  0E0A               	movlw	10
  6367  000F7A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6368  000F7C  0E0D               	movlw	13
  6369  000F7E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6370  000F80  0E2D               	movlw	45
  6371  000F82  ECD3  F028         	call	_setRangeValor
  6372                           
  6373                           ;main.c: 386: break;
  6374  000F86  D21D               	goto	l1392
  6375  000F88                     
  6376                           ;main.c: 388: line1[11] = '>';
  6377  000F88  0E3E               	movlw	62
  6378  000F8A  0101               	movlb	1	; () banked
  6379  000F8C  6FE5               	movwf	(_line1+11)& (0+255),b
  6380                           
  6381                           ; BSR set to: 1
  6382                           ;main.c: 389: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6383  000F8E  0E40               	movlw	64
  6384  000F90  EC2C  F02F         	call	_btPress
  6385  000F94  0900               	iorlw	0
  6386  000F96  B4D8               	btfsc	status,2,c
  6387  000F98  D00E               	goto	l1403
  6388  000F9A  0EF6               	movlw	low _h_venotinha
  6389  000F9C  0100               	movlb	0	; () banked
  6390  000F9E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6391  000FA0  0E01               	movlw	high _h_venotinha
  6392  000FA2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6393  000FA4  0E01               	movlw	1
  6394  000FA6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6395  000FA8  0E0A               	movlw	10
  6396  000FAA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6397  000FAC  0E0B               	movlw	11
  6398  000FAE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6399  000FB0  0E2B               	movlw	43
  6400  000FB2  ECD3  F028         	call	_setRangeValor
  6401  000FB6                     l1403:
  6402                           
  6403                           ;main.c: 390: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6404  000FB6  0E20               	movlw	32
  6405  000FB8  EC2C  F02F         	call	_btPress
  6406  000FBC  0900               	iorlw	0
  6407  000FBE  B4D8               	btfsc	status,2,c
  6408  000FC0  D200               	goto	l1392
  6409  000FC2  0EF6               	movlw	low _h_venotinha
  6410  000FC4  0100               	movlb	0	; () banked
  6411  000FC6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6412  000FC8  0E01               	movlw	high _h_venotinha
  6413  000FCA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6414  000FCC  0E01               	movlw	1
  6415  000FCE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6416  000FD0  0E0A               	movlw	10
  6417  000FD2  6F68               	movwf	setRangeValor@_max& (0+255),b
  6418  000FD4  0E0B               	movlw	11
  6419  000FD6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6420  000FD8  0E2D               	movlw	45
  6421  000FDA  ECD3  F028         	call	_setRangeValor
  6422                           
  6423                           ;main.c: 391: break;
  6424  000FDE  D1F1               	goto	l1392
  6425  000FE0                     
  6426                           ;main.c: 393: line2[11] = '>';
  6427  000FE0  0E3E               	movlw	62
  6428  000FE2  0101               	movlb	1	; () banked
  6429  000FE4  6FD0               	movwf	(_line2+11)& (0+255),b
  6430                           
  6431                           ; BSR set to: 1
  6432                           ;main.c: 394: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6433  000FE6  0E40               	movlw	64
  6434  000FE8  EC2C  F02F         	call	_btPress
  6435  000FEC  0900               	iorlw	0
  6436  000FEE  B4D8               	btfsc	status,2,c
  6437  000FF0  D00E               	goto	l1406
  6438  000FF2  0EF1               	movlw	low _h_modo_seguranca
  6439  000FF4  0100               	movlb	0	; () banked
  6440  000FF6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6441  000FF8  0E00               	movlw	high _h_modo_seguranca
  6442  000FFA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6443  000FFC  0E00               	movlw	0
  6444  000FFE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6445  001000  0E0F               	movlw	15
  6446  001002  6F68               	movwf	setRangeValor@_max& (0+255),b
  6447  001004  0E10               	movlw	16
  6448  001006  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6449  001008  0E2B               	movlw	43
  6450  00100A  ECD3  F028         	call	_setRangeValor
  6451  00100E                     l1406:
  6452                           
  6453                           ;main.c: 395: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6454  00100E  0E20               	movlw	32
  6455  001010  EC2C  F02F         	call	_btPress
  6456  001014  0900               	iorlw	0
  6457  001016  B4D8               	btfsc	status,2,c
  6458  001018  D1D4               	goto	l1392
  6459  00101A  0EF1               	movlw	low _h_modo_seguranca
  6460  00101C  0100               	movlb	0	; () banked
  6461  00101E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6462  001020  0E00               	movlw	high _h_modo_seguranca
  6463  001022  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6464  001024  0E00               	movlw	0
  6465  001026  6F67               	movwf	setRangeValor@_min& (0+255),b
  6466  001028  0E0F               	movlw	15
  6467  00102A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6468  00102C  0E10               	movlw	16
  6469  00102E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6470  001030  0E2D               	movlw	45
  6471  001032  ECD3  F028         	call	_setRangeValor
  6472                           
  6473                           ;main.c: 396: break;
  6474  001036  D1C5               	goto	l1392
  6475  001038                     
  6476                           ;main.c: 398: line3[11] = '>';
  6477  001038  0E3E               	movlw	62
  6478  00103A  0101               	movlb	1	; () banked
  6479  00103C  6FBB               	movwf	(_line3+11)& (0+255),b
  6480                           
  6481                           ; BSR set to: 1
  6482                           ;main.c: 399: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6483  00103E  0E40               	movlw	64
  6484  001040  EC2C  F02F         	call	_btPress
  6485  001044  0900               	iorlw	0
  6486  001046  B4D8               	btfsc	status,2,c
  6487  001048  D00E               	goto	l1409
  6488  00104A  0EF0               	movlw	low _h_buzzer
  6489  00104C  0100               	movlb	0	; () banked
  6490  00104E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6491  001050  0E00               	movlw	high _h_buzzer
  6492  001052  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6493  001054  0E01               	movlw	1
  6494  001056  6F67               	movwf	setRangeValor@_min& (0+255),b
  6495  001058  0E0F               	movlw	15
  6496  00105A  6F68               	movwf	setRangeValor@_max& (0+255),b
  6497  00105C  0E11               	movlw	17
  6498  00105E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6499  001060  0E2B               	movlw	43
  6500  001062  ECD3  F028         	call	_setRangeValor
  6501  001066                     l1409:
  6502                           
  6503                           ;main.c: 400: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6504  001066  0E20               	movlw	32
  6505  001068  EC2C  F02F         	call	_btPress
  6506  00106C  0900               	iorlw	0
  6507  00106E  B4D8               	btfsc	status,2,c
  6508  001070  D1A8               	goto	l1392
  6509  001072  0EF0               	movlw	low _h_buzzer
  6510  001074  0100               	movlb	0	; () banked
  6511  001076  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6512  001078  0E00               	movlw	high _h_buzzer
  6513  00107A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6514  00107C  0E01               	movlw	1
  6515  00107E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6516  001080  0E0F               	movlw	15
  6517  001082  6F68               	movwf	setRangeValor@_max& (0+255),b
  6518  001084  0E11               	movlw	17
  6519  001086  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6520  001088  0E2D               	movlw	45
  6521  00108A  ECD3  F028         	call	_setRangeValor
  6522                           
  6523                           ;main.c: 401: break;
  6524  00108E  D199               	goto	l1392
  6525  001090                     
  6526                           ;main.c: 403: menu = 5;
  6527  001090  0E05               	movlw	5
  6528  001092  0100               	movlb	0	; () banked
  6529  001094  6FFB               	movwf	_menu& (0+255),b
  6530                           
  6531                           ;main.c: 404: line4[11] = '>';
  6532  001096  0E3E               	movlw	62
  6533  001098  0101               	movlb	1	; () banked
  6534  00109A  6FA6               	movwf	(_line4+11)& (0+255),b
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;main.c: 405: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6538  00109C  0E40               	movlw	64
  6539  00109E  EC2C  F02F         	call	_btPress
  6540  0010A2  0900               	iorlw	0
  6541  0010A4  B4D8               	btfsc	status,2,c
  6542  0010A6  D00E               	goto	l1412
  6543  0010A8  0EF5               	movlw	low _t_flap_ligado
  6544  0010AA  0100               	movlb	0	; () banked
  6545  0010AC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6546  0010AE  0E00               	movlw	high _t_flap_ligado
  6547  0010B0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6548  0010B2  0E01               	movlw	1
  6549  0010B4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6550  0010B6  0EFA               	movlw	250
  6551  0010B8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6552  0010BA  0E12               	movlw	18
  6553  0010BC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6554  0010BE  0E2B               	movlw	43
  6555  0010C0  ECD3  F028         	call	_setRangeValor
  6556  0010C4                     l1412:
  6557                           
  6558                           ;main.c: 406: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6559  0010C4  0E20               	movlw	32
  6560  0010C6  EC2C  F02F         	call	_btPress
  6561  0010CA  0900               	iorlw	0
  6562  0010CC  B4D8               	btfsc	status,2,c
  6563  0010CE  D179               	goto	l1392
  6564  0010D0  0EF5               	movlw	low _t_flap_ligado
  6565  0010D2  0100               	movlb	0	; () banked
  6566  0010D4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6567  0010D6  0E00               	movlw	high _t_flap_ligado
  6568  0010D8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6569  0010DA  0E01               	movlw	1
  6570  0010DC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6571  0010DE  0EFA               	movlw	250
  6572  0010E0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6573  0010E2  0E12               	movlw	18
  6574  0010E4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6575  0010E6  0E2D               	movlw	45
  6576  0010E8  ECD3  F028         	call	_setRangeValor
  6577                           
  6578                           ;main.c: 407: break;
  6579  0010EC  D16A               	goto	l1392
  6580  0010EE                     
  6581                           ;main.c: 409: menu = 6;
  6582  0010EE  0E06               	movlw	6
  6583  0010F0  0100               	movlb	0	; () banked
  6584  0010F2  6FFB               	movwf	_menu& (0+255),b
  6585                           
  6586                           ;main.c: 410: line1[0] = '>';
  6587  0010F4  0E3E               	movlw	62
  6588  0010F6  0101               	movlb	1	; () banked
  6589  0010F8  6FDA               	movwf	_line1& (0+255),b
  6590                           
  6591                           ; BSR set to: 1
  6592                           ;main.c: 411: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6593  0010FA  0E40               	movlw	64
  6594  0010FC  EC2C  F02F         	call	_btPress
  6595  001100  0900               	iorlw	0
  6596  001102  B4D8               	btfsc	status,2,c
  6597  001104  D00E               	goto	l1415
  6598  001106  0EF4               	movlw	low _t_flap_intervalo
  6599  001108  0100               	movlb	0	; () banked
  6600  00110A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6601  00110C  0E00               	movlw	high _t_flap_intervalo
  6602  00110E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6603  001110  0E00               	movlw	0
  6604  001112  6F67               	movwf	setRangeValor@_min& (0+255),b
  6605  001114  0EFA               	movlw	250
  6606  001116  6F68               	movwf	setRangeValor@_max& (0+255),b
  6607  001118  0E14               	movlw	20
  6608  00111A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6609  00111C  0E2B               	movlw	43
  6610  00111E  ECD3  F028         	call	_setRangeValor
  6611  001122                     l1415:
  6612                           
  6613                           ;main.c: 412: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6614  001122  0E20               	movlw	32
  6615  001124  EC2C  F02F         	call	_btPress
  6616  001128  0900               	iorlw	0
  6617  00112A  B4D8               	btfsc	status,2,c
  6618  00112C  D14A               	goto	l1392
  6619  00112E  0EF4               	movlw	low _t_flap_intervalo
  6620  001130  0100               	movlb	0	; () banked
  6621  001132  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6622  001134  0E00               	movlw	high _t_flap_intervalo
  6623  001136  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6624  001138  0E00               	movlw	0
  6625  00113A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6626  00113C  0EFA               	movlw	250
  6627  00113E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6628  001140  0E14               	movlw	20
  6629  001142  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6630  001144  0E2D               	movlw	45
  6631  001146  ECD3  F028         	call	_setRangeValor
  6632                           
  6633                           ;main.c: 413: break;
  6634  00114A  D13B               	goto	l1392
  6635  00114C                     
  6636                           ;main.c: 415: line2[0] = '>';
  6637  00114C  0E3E               	movlw	62
  6638  00114E  0101               	movlb	1	; () banked
  6639  001150  6FC5               	movwf	_line2& (0+255),b
  6640                           
  6641                           ; BSR set to: 1
  6642                           ;main.c: 416: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6643  001152  0E40               	movlw	64
  6644  001154  EC2C  F02F         	call	_btPress
  6645  001158  0900               	iorlw	0
  6646  00115A  B4D8               	btfsc	status,2,c
  6647  00115C  D00E               	goto	l1418
  6648  00115E  0EFF               	movlw	low _t_buzzer_religar
  6649  001160  0100               	movlb	0	; () banked
  6650  001162  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6651  001164  0E00               	movlw	high _t_buzzer_religar
  6652  001166  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6653  001168  0E00               	movlw	0
  6654  00116A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6655  00116C  0E1E               	movlw	30
  6656  00116E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6657  001170  0E15               	movlw	21
  6658  001172  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6659  001174  0E2B               	movlw	43
  6660  001176  ECD3  F028         	call	_setRangeValor
  6661  00117A                     l1418:
  6662                           
  6663                           ;main.c: 417: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6664  00117A  0E20               	movlw	32
  6665  00117C  EC2C  F02F         	call	_btPress
  6666  001180  0900               	iorlw	0
  6667  001182  B4D8               	btfsc	status,2,c
  6668  001184  D11E               	goto	l1392
  6669  001186  0EFF               	movlw	low _t_buzzer_religar
  6670  001188  0100               	movlb	0	; () banked
  6671  00118A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6672  00118C  0E00               	movlw	high _t_buzzer_religar
  6673  00118E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6674  001190  0E00               	movlw	0
  6675  001192  6F67               	movwf	setRangeValor@_min& (0+255),b
  6676  001194  0E1E               	movlw	30
  6677  001196  6F68               	movwf	setRangeValor@_max& (0+255),b
  6678  001198  0E15               	movlw	21
  6679  00119A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6680  00119C  0E2D               	movlw	45
  6681  00119E  ECD3  F028         	call	_setRangeValor
  6682                           
  6683                           ;main.c: 418: break;
  6684  0011A2  D10F               	goto	l1392
  6685  0011A4                     
  6686                           ;main.c: 420: line3[0] = '>';
  6687  0011A4  0E3E               	movlw	62
  6688  0011A6  0101               	movlb	1	; () banked
  6689  0011A8  6FB0               	movwf	_line3& (0+255),b
  6690                           
  6691                           ; BSR set to: 1
  6692                           ;main.c: 421: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6693  0011AA  0E40               	movlw	64
  6694  0011AC  EC2C  F02F         	call	_btPress
  6695  0011B0  0900               	iorlw	0
  6696  0011B2  B4D8               	btfsc	status,2,c
  6697  0011B4  D00E               	goto	l1421
  6698  0011B6  0EF3               	movlw	low _t_temp_automatica
  6699  0011B8  0100               	movlb	0	; () banked
  6700  0011BA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6701  0011BC  0E00               	movlw	high _t_temp_automatica
  6702  0011BE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6703  0011C0  0E00               	movlw	0
  6704  0011C2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6705  0011C4  0EFA               	movlw	250
  6706  0011C6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6707  0011C8  0E16               	movlw	22
  6708  0011CA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6709  0011CC  0E2B               	movlw	43
  6710  0011CE  ECD3  F028         	call	_setRangeValor
  6711  0011D2                     l1421:
  6712                           
  6713                           ;main.c: 422: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6714  0011D2  0E20               	movlw	32
  6715  0011D4  EC2C  F02F         	call	_btPress
  6716  0011D8  0900               	iorlw	0
  6717  0011DA  B4D8               	btfsc	status,2,c
  6718  0011DC  D0F2               	goto	l1392
  6719  0011DE  0EF3               	movlw	low _t_temp_automatica
  6720  0011E0  0100               	movlb	0	; () banked
  6721  0011E2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6722  0011E4  0E00               	movlw	high _t_temp_automatica
  6723  0011E6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6724  0011E8  0E00               	movlw	0
  6725  0011EA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6726  0011EC  0EFA               	movlw	250
  6727  0011EE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6728  0011F0  0E16               	movlw	22
  6729  0011F2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6730  0011F4  0E2D               	movlw	45
  6731  0011F6  ECD3  F028         	call	_setRangeValor
  6732                           
  6733                           ;main.c: 423: break;
  6734  0011FA  D0E3               	goto	l1392
  6735  0011FC                     
  6736                           ;main.c: 425: line4[0] = '>';
  6737  0011FC  0E3E               	movlw	62
  6738  0011FE  0101               	movlb	1	; () banked
  6739  001200  6F9B               	movwf	_line4& (0+255),b
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;main.c: 426: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6743  001202  0E40               	movlw	64
  6744  001204  EC2C  F02F         	call	_btPress
  6745  001208  0900               	iorlw	0
  6746  00120A  B4D8               	btfsc	status,2,c
  6747  00120C  D00E               	goto	l1424
  6748  00120E  0EF1               	movlw	low _wifi_habilita_alteracao
  6749  001210  0100               	movlb	0	; () banked
  6750  001212  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6751  001214  0E01               	movlw	high _wifi_habilita_alteracao
  6752  001216  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6753  001218  0E00               	movlw	0
  6754  00121A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6755  00121C  0E01               	movlw	1
  6756  00121E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6757  001220  0E17               	movlw	23
  6758  001222  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6759  001224  0E2B               	movlw	43
  6760  001226  ECD3  F028         	call	_setRangeValor
  6761  00122A                     l1424:
  6762                           
  6763                           ;main.c: 427: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6764  00122A  0E20               	movlw	32
  6765  00122C  EC2C  F02F         	call	_btPress
  6766  001230  0900               	iorlw	0
  6767  001232  B4D8               	btfsc	status,2,c
  6768  001234  D0C6               	goto	l1392
  6769  001236  0EF1               	movlw	low _wifi_habilita_alteracao
  6770  001238  0100               	movlb	0	; () banked
  6771  00123A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6772  00123C  0E01               	movlw	high _wifi_habilita_alteracao
  6773  00123E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6774  001240  0E00               	movlw	0
  6775  001242  6F67               	movwf	setRangeValor@_min& (0+255),b
  6776  001244  0E01               	movlw	1
  6777  001246  6F68               	movwf	setRangeValor@_max& (0+255),b
  6778  001248  0E17               	movlw	23
  6779  00124A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6780  00124C  0E2D               	movlw	45
  6781  00124E  ECD3  F028         	call	_setRangeValor
  6782                           
  6783                           ;main.c: 428: break;
  6784  001252  D0B7               	goto	l1392
  6785  001254                     
  6786                           ;main.c: 430: line1[11] = '>';
  6787  001254  0E3E               	movlw	62
  6788  001256  0101               	movlb	1	; () banked
  6789  001258  6FE5               	movwf	(_line1+11)& (0+255),b
  6790                           
  6791                           ; BSR set to: 1
  6792                           ;main.c: 431: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6793  00125A  0E40               	movlw	64
  6794  00125C  EC2C  F02F         	call	_btPress
  6795  001260  0900               	iorlw	0
  6796  001262  B4D8               	btfsc	status,2,c
  6797  001264  D00E               	goto	l1427
  6798  001266  0EEF               	movlw	low _wifi_SENHA
  6799  001268  0100               	movlb	0	; () banked
  6800  00126A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6801  00126C  0E01               	movlw	high _wifi_SENHA
  6802  00126E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6803  001270  0E01               	movlw	1
  6804  001272  6F67               	movwf	setRangeValor@_min& (0+255),b
  6805  001274  0EFA               	movlw	250
  6806  001276  6F68               	movwf	setRangeValor@_max& (0+255),b
  6807  001278  0E19               	movlw	25
  6808  00127A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6809  00127C  0E2B               	movlw	43
  6810  00127E  ECD3  F028         	call	_setRangeValor
  6811  001282                     l1427:
  6812                           
  6813                           ;main.c: 432: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6814  001282  0E20               	movlw	32
  6815  001284  EC2C  F02F         	call	_btPress
  6816  001288  0900               	iorlw	0
  6817  00128A  B4D8               	btfsc	status,2,c
  6818  00128C  D09A               	goto	l1392
  6819  00128E  0EEF               	movlw	low _wifi_SENHA
  6820  001290  0100               	movlb	0	; () banked
  6821  001292  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6822  001294  0E01               	movlw	high _wifi_SENHA
  6823  001296  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6824  001298  0E01               	movlw	1
  6825  00129A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6826  00129C  0EFA               	movlw	250
  6827  00129E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6828  0012A0  0E19               	movlw	25
  6829  0012A2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6830  0012A4  0E2D               	movlw	45
  6831  0012A6  ECD3  F028         	call	_setRangeValor
  6832                           
  6833                           ;main.c: 433: break;
  6834  0012AA  D08B               	goto	l1392
  6835  0012AC                     
  6836                           ;main.c: 435: line2[11] = '>';
  6837  0012AC  0E3E               	movlw	62
  6838  0012AE  0101               	movlb	1	; () banked
  6839  0012B0  6FD0               	movwf	(_line2+11)& (0+255),b
  6840                           
  6841                           ; BSR set to: 1
  6842                           ;main.c: 436: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6843  0012B2  0E40               	movlw	64
  6844  0012B4  EC2C  F02F         	call	_btPress
  6845  0012B8  0900               	iorlw	0
  6846  0012BA  B4D8               	btfsc	status,2,c
  6847  0012BC  D00E               	goto	l1430
  6848  0012BE  0EEF               	movlw	low _h_subir_temp_automatica
  6849  0012C0  0100               	movlb	0	; () banked
  6850  0012C2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6851  0012C4  0E00               	movlw	high _h_subir_temp_automatica
  6852  0012C6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6853  0012C8  0E00               	movlw	0
  6854  0012CA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6855  0012CC  0E0F               	movlw	15
  6856  0012CE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6857  0012D0  0E1B               	movlw	27
  6858  0012D2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6859  0012D4  0E2B               	movlw	43
  6860  0012D6  ECD3  F028         	call	_setRangeValor
  6861  0012DA                     l1430:
  6862                           
  6863                           ;main.c: 437: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6864  0012DA  0E20               	movlw	32
  6865  0012DC  EC2C  F02F         	call	_btPress
  6866  0012E0  0900               	iorlw	0
  6867  0012E2  B4D8               	btfsc	status,2,c
  6868  0012E4  D06E               	goto	l1392
  6869  0012E6  0EEF               	movlw	low _h_subir_temp_automatica
  6870  0012E8  0100               	movlb	0	; () banked
  6871  0012EA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6872  0012EC  0E00               	movlw	high _h_subir_temp_automatica
  6873  0012EE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6874  0012F0  0E00               	movlw	0
  6875  0012F2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6876  0012F4  0E0F               	movlw	15
  6877  0012F6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6878  0012F8  0E1B               	movlw	27
  6879  0012FA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6880  0012FC  0E2D               	movlw	45
  6881  0012FE  ECD3  F028         	call	_setRangeValor
  6882                           
  6883                           ;main.c: 438: break;
  6884  001302  D05F               	goto	l1392
  6885  001304                     
  6886                           ;main.c: 440: line3[11] = '>';
  6887  001304  0E3E               	movlw	62
  6888  001306  0101               	movlb	1	; () banked
  6889  001308  6FBB               	movwf	(_line3+11)& (0+255),b
  6890                           
  6891                           ; BSR set to: 1
  6892                           ;main.c: 441: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6893  00130A  0E40               	movlw	64
  6894  00130C  EC2C  F02F         	call	_btPress
  6895  001310  0900               	iorlw	0
  6896  001312  B4D8               	btfsc	status,2,c
  6897  001314  D00E               	goto	l1433
  6898  001316  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6899  001318  0100               	movlb	0	; () banked
  6900  00131A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6901  00131C  0E00               	movlw	high _t_religar_ventoinha_automatica
  6902  00131E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6903  001320  0E00               	movlw	0
  6904  001322  6F67               	movwf	setRangeValor@_min& (0+255),b
  6905  001324  0E3C               	movlw	60
  6906  001326  6F68               	movwf	setRangeValor@_max& (0+255),b
  6907  001328  0E1C               	movlw	28
  6908  00132A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6909  00132C  0E2B               	movlw	43
  6910  00132E  ECD3  F028         	call	_setRangeValor
  6911  001332                     l1433:
  6912                           
  6913                           ;main.c: 442: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6914  001332  0E20               	movlw	32
  6915  001334  EC2C  F02F         	call	_btPress
  6916  001338  0900               	iorlw	0
  6917  00133A  B4D8               	btfsc	status,2,c
  6918  00133C  D042               	goto	l1392
  6919  00133E  0EF2               	movlw	low _t_religar_ventoinha_automatica
  6920  001340  0100               	movlb	0	; () banked
  6921  001342  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6922  001344  0E00               	movlw	high _t_religar_ventoinha_automatica
  6923  001346  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6924  001348  0E00               	movlw	0
  6925  00134A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6926  00134C  0E3C               	movlw	60
  6927  00134E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6928  001350  0E1C               	movlw	28
  6929  001352  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6930  001354  0E2D               	movlw	45
  6931  001356  ECD3  F028         	call	_setRangeValor
  6932                           
  6933                           ;main.c: 443: break;
  6934  00135A  D033               	goto	l1392
  6935  00135C  0E01               	movlw	1
  6936  00135E  0101               	movlb	1	; () banked
  6937  001360  6F99               	movwf	_opcaomenu& (0+255),b
  6938                           
  6939                           ;main.c: 445: }
  6940  001362  D02F               	goto	l1392
  6941  001364                     l1388:
  6942                           
  6943                           ; BSR set to: 1
  6944                           
  6945                           ; BSR set to: 1
  6946  001364  5199               	movf	_opcaomenu& (0+255),w,b
  6947                           
  6948                           ; Switch size 1, requested type "space"
  6949                           ; Number of cases is 15, Range of values is 1 to 15
  6950                           ; switch strategies available:
  6951                           ; Name         Instructions Cycles
  6952                           ; simple_byte           46    24 (average)
  6953                           ;	Chosen strategy is simple_byte
  6954  001366  0A01               	xorlw	1	; case 1
  6955  001368  B4D8               	btfsc	status,2,c
  6956  00136A  D55B               	goto	l1389
  6957  00136C  0A03               	xorlw	3	; case 2
  6958  00136E  B4D8               	btfsc	status,2,c
  6959  001370  D587               	goto	l1393
  6960  001372  0A01               	xorlw	1	; case 3
  6961  001374  B4D8               	btfsc	status,2,c
  6962  001376  D5B0               	goto	l1396
  6963  001378  0A07               	xorlw	7	; case 4
  6964  00137A  B4D8               	btfsc	status,2,c
  6965  00137C  D5D9               	goto	l1399
  6966  00137E  0A01               	xorlw	1	; case 5
  6967  001380  B4D8               	btfsc	status,2,c
  6968  001382  D602               	goto	l1402
  6969  001384  0A03               	xorlw	3	; case 6
  6970  001386  B4D8               	btfsc	status,2,c
  6971  001388  D62B               	goto	l1405
  6972  00138A  0A01               	xorlw	1	; case 7
  6973  00138C  B4D8               	btfsc	status,2,c
  6974  00138E  D654               	goto	l1408
  6975  001390  0A0F               	xorlw	15	; case 8
  6976  001392  B4D8               	btfsc	status,2,c
  6977  001394  D67D               	goto	l1411
  6978  001396  0A01               	xorlw	1	; case 9
  6979  001398  B4D8               	btfsc	status,2,c
  6980  00139A  D6A9               	goto	l1414
  6981  00139C  0A03               	xorlw	3	; case 10
  6982  00139E  B4D8               	btfsc	status,2,c
  6983  0013A0  D6D5               	goto	l1417
  6984  0013A2  0A01               	xorlw	1	; case 11
  6985  0013A4  B4D8               	btfsc	status,2,c
  6986  0013A6  D6FE               	goto	l1420
  6987  0013A8  0A07               	xorlw	7	; case 12
  6988  0013AA  B4D8               	btfsc	status,2,c
  6989  0013AC  D727               	goto	l1423
  6990  0013AE  0A01               	xorlw	1	; case 13
  6991  0013B0  B4D8               	btfsc	status,2,c
  6992  0013B2  D750               	goto	l1426
  6993  0013B4  0A03               	xorlw	3	; case 14
  6994  0013B6  B4D8               	btfsc	status,2,c
  6995  0013B8  D779               	goto	l1429
  6996  0013BA  0A01               	xorlw	1	; case 15
  6997  0013BC  B4D8               	btfsc	status,2,c
  6998  0013BE  D7A2               	goto	l1432
  6999  0013C0  D7CD               	goto	l1435
  7000  0013C2                     l1392:
  7001                           
  7002                           ;main.c: 446: if (btPress(16)) opcaomenu++;
  7003                           
  7004                           ; BSR set to: 1
  7005  0013C2  0E10               	movlw	16
  7006  0013C4  EC2C  F02F         	call	_btPress
  7007  0013C8  0900               	iorlw	0
  7008  0013CA  B4D8               	btfsc	status,2,c
  7009  0013CC  D002               	goto	l1436
  7010  0013CE  0101               	movlb	1	; () banked
  7011  0013D0  2B99               	incf	_opcaomenu& (0+255),f,b
  7012  0013D2                     l1436:
  7013                           
  7014                           ;main.c: 447: if (btPress(1)) opcaomenu--;
  7015                           
  7016                           ; BSR set to: 1
  7017  0013D2  0E01               	movlw	1
  7018  0013D4  EC2C  F02F         	call	_btPress
  7019  0013D8  0900               	iorlw	0
  7020  0013DA  B4D8               	btfsc	status,2,c
  7021  0013DC  D002               	goto	l1437
  7022  0013DE  0101               	movlb	1	; () banked
  7023  0013E0  0799               	decf	_opcaomenu& (0+255),f,b
  7024  0013E2                     l1437:
  7025                           
  7026                           ;main.c: 448: if (btPress(8)) {
  7027                           
  7028                           ; BSR set to: 1
  7029  0013E2  0E08               	movlw	8
  7030  0013E4  EC2C  F02F         	call	_btPress
  7031  0013E8  0900               	iorlw	0
  7032  0013EA  B4D8               	btfsc	status,2,c
  7033  0013EC  D110               	goto	l1468
  7034                           
  7035                           ;main.c: 449: menu = 0;
  7036  0013EE  0E00               	movlw	0
  7037  0013F0  0100               	movlb	0	; () banked
  7038  0013F2  6FFB               	movwf	_menu& (0+255),b
  7039                           
  7040                           ;main.c: 450: senha_desbloqueio_func = 0;
  7041  0013F4  0E00               	movlw	0
  7042  0013F6  0101               	movlb	1	; () banked
  7043  0013F8  6FF3               	movwf	_senha_desbloqueio_func& (0+255),b
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;main.c: 451: }
  7047                           ;main.c: 452: } else
  7048  0013FA  D109               	goto	l1468
  7049  0013FC                     l1384:
  7050                           
  7051                           ;main.c: 456: if (menu == 8 || menu == 9) {
  7052                           
  7053                           ; BSR set to: 1
  7054  0013FC  0E08               	movlw	8
  7055  0013FE  0100               	movlb	0	; () banked
  7056  001400  19FB               	xorwf	_menu& (0+255),w,b
  7057  001402  B4D8               	btfsc	status,2,c
  7058  001404  D031               	goto	l1443
  7059                           
  7060                           ; BSR set to: 0
  7061  001406  0E09               	movlw	9
  7062  001408  19FB               	xorwf	_menu& (0+255),w,b
  7063  00140A  B4D8               	btfsc	status,2,c
  7064  00140C  D02D               	goto	l1443
  7065  00140E  D04D               	goto	l1440
  7066  001410                     
  7067                           ;main.c: 459: menu = 8;
  7068                           
  7069                           ; BSR set to: 0
  7070  001410  0E08               	movlw	8
  7071  001412  0100               	movlb	0	; () banked
  7072  001414  6FFB               	movwf	_menu& (0+255),b
  7073                           
  7074                           ;main.c: 460: break;
  7075  001416  D031               	goto	l1445
  7076  001418                     
  7077                           ;main.c: 462: menu = 9;
  7078                           
  7079                           ; BSR set to: 0
  7080  001418  0E09               	movlw	9
  7081  00141A  0100               	movlb	0	; () banked
  7082  00141C  6FFB               	movwf	_menu& (0+255),b
  7083                           
  7084                           ;main.c: 463: line1[0] = '>';
  7085  00141E  0E3E               	movlw	62
  7086  001420  0101               	movlb	1	; () banked
  7087  001422  6FDA               	movwf	_line1& (0+255),b
  7088                           
  7089                           ; BSR set to: 1
  7090                           ;main.c: 464: if (btPress(2)) {
  7091  001424  0E02               	movlw	2
  7092  001426  EC2C  F02F         	call	_btPress
  7093  00142A  0900               	iorlw	0
  7094  00142C  B4D8               	btfsc	status,2,c
  7095  00142E  D025               	goto	l1445
  7096                           
  7097                           ;main.c: 465: LATAbits.LATA4 = 1;
  7098  001430  8889               	bsf	3977,4,c	;volatile
  7099                           
  7100                           ;main.c: 466: delay(100);
  7101  001432  0E00               	movlw	0
  7102  001434  0100               	movlb	0	; () banked
  7103  001436  6F61               	movwf	(delay@x+1)& (0+255),b
  7104  001438  0E64               	movlw	100
  7105  00143A  6F60               	movwf	delay@x& (0+255),b
  7106  00143C  EC97  F02E         	call	_delay	;wreg free
  7107                           
  7108                           ;main.c: 467: LATAbits.LATA4 = 0;
  7109  001440  9889               	bcf	3977,4,c	;volatile
  7110                           
  7111                           ;main.c: 468: delay(800);
  7112  001442  0E03               	movlw	3
  7113  001444  0100               	movlb	0	; () banked
  7114  001446  6F61               	movwf	(delay@x+1)& (0+255),b
  7115  001448  0E20               	movlw	32
  7116  00144A  6F60               	movwf	delay@x& (0+255),b
  7117  00144C  EC97  F02E         	call	_delay	;wreg free
  7118                           
  7119                           ;main.c: 469: menu = 10;
  7120  001450  0E0A               	movlw	10
  7121  001452  0100               	movlb	0	; () banked
  7122  001454  6FFB               	movwf	_menu& (0+255),b
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;main.c: 470: f_wifi_processo = 0;
  7126  001456  0E00               	movlw	0
  7127  001458  0101               	movlb	1	; () banked
  7128  00145A  6F96               	movwf	_f_wifi_processo& (0+255),b
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;main.c: 471: t_wifi_restart = 15;
  7132  00145C  0E0F               	movlw	15
  7133  00145E  6F97               	movwf	_t_wifi_restart& (0+255),b
  7134                           
  7135                           ; BSR set to: 1
  7136                           ;main.c: 472: }
  7137                           ;main.c: 473: break;
  7138  001460  D00C               	goto	l1445
  7139  001462                     
  7140                           ; BSR set to: 1
  7141                           ;main.c: 475: opcaomenu = 1;
  7142                           
  7143                           ; BSR set to: 1
  7144  001462  0E01               	movlw	1
  7145  001464  6F99               	movwf	_opcaomenu& (0+255),b
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;main.c: 478: }
  7149                           
  7150                           ;main.c: 477: break;
  7151  001466  D009               	goto	l1445
  7152  001468                     l1443:
  7153                           
  7154                           ; BSR set to: 1
  7155  001468  0101               	movlb	1	; () banked
  7156  00146A  5199               	movf	_opcaomenu& (0+255),w,b
  7157                           
  7158                           ; Switch size 1, requested type "space"
  7159                           ; Number of cases is 2, Range of values is 1 to 2
  7160                           ; switch strategies available:
  7161                           ; Name         Instructions Cycles
  7162                           ; simple_byte            7     4 (average)
  7163                           ;	Chosen strategy is simple_byte
  7164  00146C  0A01               	xorlw	1	; case 1
  7165  00146E  B4D8               	btfsc	status,2,c
  7166  001470  D7CF               	goto	l1444
  7167  001472  0A03               	xorlw	3	; case 2
  7168  001474  B4D8               	btfsc	status,2,c
  7169  001476  D7D0               	goto	l1446
  7170  001478  D7F4               	goto	l1448
  7171  00147A                     l1445:
  7172                           
  7173                           ;main.c: 479: if (btPress(16)) opcaomenu++;
  7174                           
  7175                           ; BSR set to: 1
  7176  00147A  0E10               	movlw	16
  7177  00147C  EC2C  F02F         	call	_btPress
  7178  001480  0900               	iorlw	0
  7179  001482  B4D8               	btfsc	status,2,c
  7180  001484  D002               	goto	l1449
  7181  001486  0101               	movlb	1	; () banked
  7182  001488  2B99               	incf	_opcaomenu& (0+255),f,b
  7183  00148A                     l1449:
  7184                           
  7185                           ;main.c: 480: if (btPress(1)) opcaomenu--;
  7186                           
  7187                           ; BSR set to: 1
  7188  00148A  0E01               	movlw	1
  7189  00148C  EC2C  F02F         	call	_btPress
  7190  001490  0900               	iorlw	0
  7191  001492  B4D8               	btfsc	status,2,c
  7192  001494  D002               	goto	l1450
  7193  001496  0101               	movlb	1	; () banked
  7194  001498  0799               	decf	_opcaomenu& (0+255),f,b
  7195  00149A                     l1450:
  7196                           
  7197                           ;main.c: 481: if (btPress(8)) {
  7198                           
  7199                           ; BSR set to: 1
  7200  00149A  0E08               	movlw	8
  7201  00149C  EC2C  F02F         	call	_btPress
  7202  0014A0  0900               	iorlw	0
  7203  0014A2  B4D8               	btfsc	status,2,c
  7204  0014A4  D0B4               	goto	l1468
  7205                           
  7206                           ;main.c: 482: menu = 3;
  7207  0014A6  0E03               	movlw	3
  7208  0014A8  D0B0               	goto	L13
  7209  0014AA                     l1440:
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;main.c: 488: if (menu == 11) {
  7213                           
  7214                           ; BSR set to: 0
  7215  0014AA  0E0B               	movlw	11
  7216  0014AC  19FB               	xorwf	_menu& (0+255),w,b
  7217  0014AE  B4D8               	btfsc	status,2,c
  7218  0014B0  D089               	goto	l1454
  7219  0014B2  D0AD               	goto	l1468
  7220  0014B4                     
  7221                           ;main.c: 491: line1[0] = '>';
  7222                           
  7223                           ; BSR set to: 0
  7224  0014B4  0E3E               	movlw	62
  7225  0014B6  0101               	movlb	1	; () banked
  7226  0014B8  6FDA               	movwf	_line1& (0+255),b
  7227                           
  7228                           ; BSR set to: 1
  7229                           ;main.c: 492: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7230  0014BA  0E40               	movlw	64
  7231  0014BC  EC2C  F02F         	call	_btPress
  7232  0014C0  0900               	iorlw	0
  7233  0014C2  B4D8               	btfsc	status,2,c
  7234  0014C4  D00E               	goto	l1456
  7235  0014C6  0E4E               	movlw	low _t_fim_fase1
  7236  0014C8  0100               	movlb	0	; () banked
  7237  0014CA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7238  0014CC  0E00               	movlw	high _t_fim_fase1
  7239  0014CE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7240  0014D0  0E00               	movlw	0
  7241  0014D2  6F67               	movwf	setRangeValor@_min& (0+255),b
  7242  0014D4  0E1E               	movlw	30
  7243  0014D6  6F68               	movwf	setRangeValor@_max& (0+255),b
  7244  0014D8  0E08               	movlw	8
  7245  0014DA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7246  0014DC  0E2B               	movlw	43
  7247  0014DE  ECD3  F028         	call	_setRangeValor
  7248  0014E2                     l1456:
  7249                           
  7250                           ;main.c: 493: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7251  0014E2  0E20               	movlw	32
  7252  0014E4  EC2C  F02F         	call	_btPress
  7253  0014E8  0900               	iorlw	0
  7254  0014EA  B4D8               	btfsc	status,2,c
  7255  0014EC  D077               	goto	l1458
  7256  0014EE  0E4E               	movlw	low _t_fim_fase1
  7257  0014F0  0100               	movlb	0	; () banked
  7258  0014F2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7259  0014F4  0E00               	movlw	high _t_fim_fase1
  7260  0014F6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7261  0014F8  0E00               	movlw	0
  7262  0014FA  6F67               	movwf	setRangeValor@_min& (0+255),b
  7263  0014FC  0E1E               	movlw	30
  7264  0014FE  6F68               	movwf	setRangeValor@_max& (0+255),b
  7265  001500  0E08               	movlw	8
  7266  001502  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7267  001504  0E2D               	movlw	45
  7268  001506  ECD3  F028         	call	_setRangeValor
  7269                           
  7270                           ;main.c: 494: break;
  7271  00150A  D068               	goto	l1458
  7272  00150C                     
  7273                           ;main.c: 496: line2[0] = '>';
  7274  00150C  0E3E               	movlw	62
  7275  00150E  0101               	movlb	1	; () banked
  7276  001510  6FC5               	movwf	_line2& (0+255),b
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;main.c: 497: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7280  001512  0E40               	movlw	64
  7281  001514  EC2C  F02F         	call	_btPress
  7282  001518  0900               	iorlw	0
  7283  00151A  B4D8               	btfsc	status,2,c
  7284  00151C  D00E               	goto	l1460
  7285  00151E  0E4D               	movlw	low _t_fim_fase2
  7286  001520  0100               	movlb	0	; () banked
  7287  001522  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7288  001524  0E00               	movlw	high _t_fim_fase2
  7289  001526  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7290  001528  0E00               	movlw	0
  7291  00152A  6F67               	movwf	setRangeValor@_min& (0+255),b
  7292  00152C  0E1E               	movlw	30
  7293  00152E  6F68               	movwf	setRangeValor@_max& (0+255),b
  7294  001530  0E09               	movlw	9
  7295  001532  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7296  001534  0E2B               	movlw	43
  7297  001536  ECD3  F028         	call	_setRangeValor
  7298  00153A                     l1460:
  7299                           
  7300                           ;main.c: 498: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7301  00153A  0E20               	movlw	32
  7302  00153C  EC2C  F02F         	call	_btPress
  7303  001540  0900               	iorlw	0
  7304  001542  B4D8               	btfsc	status,2,c
  7305  001544  D04B               	goto	l1458
  7306  001546  0E4D               	movlw	low _t_fim_fase2
  7307  001548  0100               	movlb	0	; () banked
  7308  00154A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7309  00154C  0E00               	movlw	high _t_fim_fase2
  7310  00154E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7311  001550  0E00               	movlw	0
  7312  001552  6F67               	movwf	setRangeValor@_min& (0+255),b
  7313  001554  0E1E               	movlw	30
  7314  001556  6F68               	movwf	setRangeValor@_max& (0+255),b
  7315  001558  0E09               	movlw	9
  7316  00155A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7317  00155C  0E2D               	movlw	45
  7318  00155E  ECD3  F028         	call	_setRangeValor
  7319                           
  7320                           ;main.c: 499: break;
  7321  001562  D03C               	goto	l1458
  7322  001564                     
  7323                           ;main.c: 501: line3[0] = '>';
  7324  001564  0E3E               	movlw	62
  7325  001566  0101               	movlb	1	; () banked
  7326  001568  6FB0               	movwf	_line3& (0+255),b
  7327                           
  7328                           ; BSR set to: 1
  7329                           ;main.c: 502: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7330  00156A  0E40               	movlw	64
  7331  00156C  EC2C  F02F         	call	_btPress
  7332  001570  0900               	iorlw	0
  7333  001572  B4D8               	btfsc	status,2,c
  7334  001574  D00E               	goto	l1463
  7335  001576  0E4C               	movlw	low _t_fim_fase3
  7336  001578  0100               	movlb	0	; () banked
  7337  00157A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7338  00157C  0E00               	movlw	high _t_fim_fase3
  7339  00157E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7340  001580  0E00               	movlw	0
  7341  001582  6F67               	movwf	setRangeValor@_min& (0+255),b
  7342  001584  0E1E               	movlw	30
  7343  001586  6F68               	movwf	setRangeValor@_max& (0+255),b
  7344  001588  0E0A               	movlw	10
  7345  00158A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7346  00158C  0E2B               	movlw	43
  7347  00158E  ECD3  F028         	call	_setRangeValor
  7348  001592                     l1463:
  7349                           
  7350                           ;main.c: 503: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7351  001592  0E20               	movlw	32
  7352  001594  EC2C  F02F         	call	_btPress
  7353  001598  0900               	iorlw	0
  7354  00159A  B4D8               	btfsc	status,2,c
  7355  00159C  D01F               	goto	l1458
  7356  00159E  0E4C               	movlw	low _t_fim_fase3
  7357  0015A0  0100               	movlb	0	; () banked
  7358  0015A2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7359  0015A4  0E00               	movlw	high _t_fim_fase3
  7360  0015A6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7361  0015A8  0E00               	movlw	0
  7362  0015AA  6F67               	movwf	setRangeValor@_min& (0+255),b
  7363  0015AC  0E1E               	movlw	30
  7364  0015AE  6F68               	movwf	setRangeValor@_max& (0+255),b
  7365  0015B0  0E0A               	movlw	10
  7366  0015B2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7367  0015B4  0E2D               	movlw	45
  7368  0015B6  ECD3  F028         	call	_setRangeValor
  7369                           
  7370                           ;main.c: 504: break;
  7371  0015BA  D010               	goto	l1458
  7372  0015BC  0E01               	movlw	1
  7373  0015BE  0101               	movlb	1	; () banked
  7374  0015C0  6F99               	movwf	_opcaomenu& (0+255),b
  7375                           
  7376                           ;main.c: 506: }
  7377  0015C2  D00C               	goto	l1458
  7378  0015C4                     l1454:
  7379                           
  7380                           ; BSR set to: 1
  7381  0015C4  0101               	movlb	1	; () banked
  7382  0015C6  5199               	movf	_opcaomenu& (0+255),w,b
  7383                           
  7384                           ; Switch size 1, requested type "space"
  7385                           ; Number of cases is 3, Range of values is 1 to 3
  7386                           ; switch strategies available:
  7387                           ; Name         Instructions Cycles
  7388                           ; simple_byte           10     6 (average)
  7389                           ;	Chosen strategy is simple_byte
  7390  0015C8  0A01               	xorlw	1	; case 1
  7391  0015CA  B4D8               	btfsc	status,2,c
  7392  0015CC  D773               	goto	l1455
  7393  0015CE  0A03               	xorlw	3	; case 2
  7394  0015D0  B4D8               	btfsc	status,2,c
  7395  0015D2  D79C               	goto	l1459
  7396  0015D4  0A01               	xorlw	1	; case 3
  7397  0015D6  B4D8               	btfsc	status,2,c
  7398  0015D8  D7C5               	goto	l1462
  7399  0015DA  D7F0               	goto	l1465
  7400  0015DC                     l1458:
  7401                           
  7402                           ;main.c: 507: if (btPress(16)) opcaomenu++;
  7403                           
  7404                           ; BSR set to: 1
  7405  0015DC  0E10               	movlw	16
  7406  0015DE  EC2C  F02F         	call	_btPress
  7407  0015E2  0900               	iorlw	0
  7408  0015E4  B4D8               	btfsc	status,2,c
  7409  0015E6  D002               	goto	l1466
  7410  0015E8  0101               	movlb	1	; () banked
  7411  0015EA  2B99               	incf	_opcaomenu& (0+255),f,b
  7412  0015EC                     l1466:
  7413                           
  7414                           ;main.c: 508: if (btPress(1)) opcaomenu--;
  7415                           
  7416                           ; BSR set to: 1
  7417  0015EC  0E01               	movlw	1
  7418  0015EE  EC2C  F02F         	call	_btPress
  7419  0015F2  0900               	iorlw	0
  7420  0015F4  B4D8               	btfsc	status,2,c
  7421  0015F6  D002               	goto	l1467
  7422  0015F8  0101               	movlb	1	; () banked
  7423  0015FA  0799               	decf	_opcaomenu& (0+255),f,b
  7424  0015FC                     l1467:
  7425                           
  7426                           ;main.c: 509: if (btPress(8)) {
  7427                           
  7428                           ; BSR set to: 1
  7429  0015FC  0E08               	movlw	8
  7430  0015FE  EC2C  F02F         	call	_btPress
  7431  001602  0900               	iorlw	0
  7432  001604  B4D8               	btfsc	status,2,c
  7433  001606  D003               	goto	l1468
  7434                           
  7435                           ;main.c: 510: menu = 2;
  7436  001608  0E02               	movlw	2
  7437  00160A                     L13:
  7438  00160A  0100               	movlb	0	; () banked
  7439  00160C  6FFB               	movwf	_menu& (0+255),b
  7440  00160E                     l1468:
  7441                           
  7442                           ;main.c: 511: }
  7443                           ;main.c: 512: }
  7444                           ;main.c: 513: updateLeds();
  7445                           
  7446                           ; BSR set to: 0
  7447                           
  7448                           ; BSR set to: 0
  7449                           
  7450                           ; BSR set to: 0
  7451                           
  7452                           ; BSR set to: 0
  7453                           
  7454                           ; BSR set to: 0
  7455  00160E  EC21  F02E         	call	_updateLeds	;wreg free
  7456                           
  7457                           ;main.c: 514: atualizaLCD(line1, line2, line3, line4);
  7458  001612  0EDA               	movlw	low _line1
  7459  001614  0100               	movlb	0	; () banked
  7460  001616  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7461  001618  0E01               	movlw	high _line1
  7462  00161A  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7463  00161C  0EC5               	movlw	low _line2
  7464  00161E  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7465  001620  0E01               	movlw	high _line2
  7466  001622  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7467  001624  0EB0               	movlw	low _line3
  7468  001626  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7469  001628  0E01               	movlw	high _line3
  7470  00162A  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7471  00162C  0E9B               	movlw	low _line4
  7472  00162E  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7473  001630  0E01               	movlw	high _line4
  7474  001632  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7475  001634  EC17  F027         	call	_atualizaLCD	;wreg free
  7476  001638  EF82  F001         	goto	l1278
  7477  00163C                     __end_of_main:
  7478                           	opt stack 0
  7479                           tblptru	equ	0xFF8
  7480                           tblptrh	equ	0xFF7
  7481                           tblptrl	equ	0xFF6
  7482                           tablat	equ	0xFF5
  7483                           prodh	equ	0xFF4
  7484                           prodl	equ	0xFF3
  7485                           intcon	equ	0xFF2
  7486                           intcon2	equ	0xFF1
  7487                           intcon3	equ	0xFF0
  7488                           postinc0	equ	0xFEE
  7489                           wreg	equ	0xFE8
  7490                           postdec1	equ	0xFE5
  7491                           fsr1l	equ	0xFE1
  7492                           indf2	equ	0xFDF
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8
  7496                           
  7497 ;; *************** function _updateLeds *****************
  7498 ;; Defined at:
  7499 ;;		line 27 in file "src/Led_display.h"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7513 ;;      Params:         0       0       0       0       0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    8
  7520 ;; This function calls:
  7521 ;;		_I2C_Start
  7522 ;;		_I2C_Stop
  7523 ;;		_I2C_Write
  7524 ;; This function is called by:
  7525 ;;		_main
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text1
  7530  005C42                     __ptext1:
  7531                           	opt stack 0
  7532  005C42                     _updateLeds:
  7533                           	opt stack 22
  7534                           
  7535                           ;Led_display.h: 29: if (_led != leds) {
  7536                           
  7537                           ;incstack = 0
  7538  005C42  5045               	movf	_leds,w,c
  7539  005C44  1850               	xorwf	__led,w,c
  7540  005C46  B4D8               	btfsc	status,2,c
  7541  005C48  0012               	return	
  7542                           
  7543                           ;Led_display.h: 30: I2C_Start();
  7544  005C4A  EC87  F02F         	call	_I2C_Start	;wreg free
  7545                           
  7546                           ;Led_display.h: 31: I2C_Write(0x46);
  7547  005C4E  0E00               	movlw	0
  7548  005C50  0100               	movlb	0	; () banked
  7549  005C52  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7550  005C54  0E46               	movlw	70
  7551  005C56  6F61               	movwf	I2C_Write@d& (0+255),b
  7552  005C58  EC75  F02F         	call	_I2C_Write	;wreg free
  7553                           
  7554                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7555  005C5C  C045  F061         	movff	_leds,I2C_Write@d
  7556  005C60  0100               	movlb	0	; () banked
  7557  005C62  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7558  005C64  EC75  F02F         	call	_I2C_Write	;wreg free
  7559                           
  7560                           ;Led_display.h: 33: I2C_Stop();
  7561  005C68  EC83  F02F         	call	_I2C_Stop	;wreg free
  7562                           
  7563                           ;Led_display.h: 34: _led = leds;
  7564  005C6C  C045  F050         	movff	_leds,__led
  7565  005C70  0012               	return	
  7566  005C72                     __end_of_updateLeds:
  7567                           	opt stack 0
  7568                           tblptru	equ	0xFF8
  7569                           tblptrh	equ	0xFF7
  7570                           tblptrl	equ	0xFF6
  7571                           tablat	equ	0xFF5
  7572                           prodh	equ	0xFF4
  7573                           prodl	equ	0xFF3
  7574                           intcon	equ	0xFF2
  7575                           intcon2	equ	0xFF1
  7576                           intcon3	equ	0xFF0
  7577                           postinc0	equ	0xFEE
  7578                           wreg	equ	0xFE8
  7579                           postdec1	equ	0xFE5
  7580                           fsr1l	equ	0xFE1
  7581                           indf2	equ	0xFDF
  7582                           fsr2h	equ	0xFDA
  7583                           fsr2l	equ	0xFD9
  7584                           status	equ	0xFD8
  7585                           
  7586 ;; *************** function _setUmidade *****************
  7587 ;; Defined at:
  7588 ;;		line 44 in file "src/FuncoesControlador.h"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  tp              1    wreg     unsigned char 
  7591 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7592 ;;		 -> umidajt(1), 
  7593 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7594 ;;		 -> tempajt(1), 
  7595 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7596 ;;		 -> clima(1), 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  tp              1   14[BANK0 ] unsigned char 
  7599 ;;  _umd            1   25[BANK0 ] unsigned char 
  7600 ;;  _clim           1   24[BANK0 ] unsigned char 
  7601 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  1    wreg      void 
  7604 ;; Registers used:
  7605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7611 ;;      Params:         0       6       0       0       0       0       0       0       0
  7612 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7614 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7615 ;;Total ram usage:       18 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    9
  7618 ;; This function calls:
  7619 ;;		_tabelaUmidade
  7620 ;;		_writeEEPROM_ext
  7621 ;; This function is called by:
  7622 ;;		_main
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text2
  7627  00479A                     __ptext2:
  7628                           	opt stack 0
  7629  00479A                     _setUmidade:
  7630                           	opt stack 21
  7631                           
  7632                           ;incstack = 0
  7633                           ;setUmidade@tp stored from wreg
  7634  00479A  0100               	movlb	0	; () banked
  7635  00479C  6F6E               	movwf	setUmidade@tp& (0+255),b
  7636                           
  7637                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7638  00479E  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7639  0047A2  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7640  0047A6  50DF               	movf	indf2,w,c
  7641  0047A8  0100               	movlb	0	; () banked
  7642  0047AA  6F79               	movwf	setUmidade@_umd& (0+255),b
  7643                           
  7644                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7645  0047AC  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7646  0047B0  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7647  0047B4  50DF               	movf	indf2,w,c
  7648  0047B6  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7649                           
  7650                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7651  0047B8  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7652  0047BC  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7653  0047C0  50DF               	movf	indf2,w,c
  7654  0047C2  6F78               	movwf	setUmidade@_clim& (0+255),b
  7655                           
  7656                           ;FuncoesControlador.h: 49: switch (tp) {
  7657  0047C4  D05C               	goto	l906
  7658  0047C6                     
  7659                           ; BSR set to: 0
  7660                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7661                           
  7662                           ; BSR set to: 0
  7663  0047C6  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7664  0047C8  A4D8               	btfss	status,2,c
  7665  0047CA  D00F               	goto	l908
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7669  0047CC  0E64               	movlw	100
  7670  0047CE  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7671  0047D0  D005               	goto	l910
  7672                           
  7673                           ; BSR set to: 0
  7674  0047D2  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7675  0047D4  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7676  0047D8  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7677  0047DA  D004               	goto	l912
  7678  0047DC                     l910:
  7679                           
  7680                           ; BSR set to: 0
  7681                           
  7682                           ; BSR set to: 0
  7683  0047DC  0E00               	movlw	0
  7684  0047DE  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7685  0047E0  0E0A               	movlw	10
  7686  0047E2  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7687  0047E4                     l912:
  7688                           
  7689                           ; BSR set to: 0
  7690                           
  7691                           ; BSR set to: 0
  7692  0047E4  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7693                           
  7694                           ;FuncoesControlador.h: 53: } else {
  7695  0047E8  D00E               	goto	l913
  7696  0047EA                     l908:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 90 : ++_umd;
  7700                           
  7701                           ; BSR set to: 0
  7702  0047EA  0E78               	movlw	120
  7703  0047EC  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7704  0047EE  D005               	goto	l915
  7705                           
  7706                           ; BSR set to: 0
  7707  0047F0  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7708  0047F2  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7709  0047F6  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7710  0047F8  D004               	goto	l917
  7711  0047FA                     l915:
  7712                           
  7713                           ; BSR set to: 0
  7714                           
  7715                           ; BSR set to: 0
  7716  0047FA  0E00               	movlw	0
  7717  0047FC  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7718  0047FE  0E5A               	movlw	90
  7719  004800  6F71               	movwf	_setUmidade$1298& (0+255),b
  7720  004802                     l917:
  7721                           
  7722                           ; BSR set to: 0
  7723                           
  7724                           ; BSR set to: 0
  7725  004802  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7726  004806                     l913:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;FuncoesControlador.h: 55: }
  7730                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7731                           
  7732                           ; BSR set to: 0
  7733  004806  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7734  00480A  0E02               	movlw	2
  7735  00480C  EC57  F02D         	call	_writeEEPROM_ext
  7736                           
  7737                           ;FuncoesControlador.h: 58: break;
  7738  004810  D040               	goto	l918
  7739  004812                     
  7740                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7741  004812  0100               	movlb	0	; () banked
  7742  004814  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
  7743  004816  A4D8               	btfss	status,2,c
  7744  004818  D00F               	goto	l920
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7748  00481A  0E0A               	movlw	10
  7749  00481C  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7750  00481E  D005               	goto	l922
  7751                           
  7752                           ; BSR set to: 0
  7753  004820  0779               	decf	setUmidade@_umd& (0+255),f,b
  7754  004822  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7755  004826  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7756  004828  D004               	goto	l924
  7757  00482A                     l922:
  7758                           
  7759                           ; BSR set to: 0
  7760                           
  7761                           ; BSR set to: 0
  7762  00482A  0E00               	movlw	0
  7763  00482C  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7764  00482E  0E64               	movlw	100
  7765  004830  6F73               	movwf	_setUmidade$1299& (0+255),b
  7766  004832                     l924:
  7767                           
  7768                           ; BSR set to: 0
  7769                           
  7770                           ; BSR set to: 0
  7771  004832  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7772                           
  7773                           ;FuncoesControlador.h: 62: } else {
  7774  004836  D00E               	goto	l925
  7775  004838                     l920:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;FuncoesControlador.h: 63: _umd = (_umd <= 90) ? 120 : --_umd;
  7779                           
  7780                           ; BSR set to: 0
  7781  004838  0E5A               	movlw	90
  7782  00483A  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7783  00483C  D005               	goto	l927
  7784                           
  7785                           ; BSR set to: 0
  7786  00483E  0779               	decf	setUmidade@_umd& (0+255),f,b
  7787  004840  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7788  004844  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7789  004846  D004               	goto	l929
  7790  004848                     l927:
  7791                           
  7792                           ; BSR set to: 0
  7793                           
  7794                           ; BSR set to: 0
  7795  004848  0E00               	movlw	0
  7796  00484A  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7797  00484C  0E78               	movlw	120
  7798  00484E  6F75               	movwf	_setUmidade$1300& (0+255),b
  7799  004850                     l929:
  7800                           
  7801                           ; BSR set to: 0
  7802                           
  7803                           ; BSR set to: 0
  7804  004850  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7805  004854                     l925:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;FuncoesControlador.h: 64: }
  7809                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7810                           
  7811                           ; BSR set to: 0
  7812  004854  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7813  004858  0E02               	movlw	2
  7814  00485A  EC57  F02D         	call	_writeEEPROM_ext
  7815                           
  7816                           ;FuncoesControlador.h: 67: break;
  7817  00485E  D019               	goto	l918
  7818  004860                     
  7819                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7820  004860  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7821  004864  0100               	movlb	0	; () banked
  7822  004866  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7823  004868  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7824  00486C  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7825  00486E  C0F7  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7826  004872  EC1E  F00B         	call	_tabelaUmidade	;wreg free
  7827  004876  0100               	movlb	0	; () banked
  7828  004878  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7829  00487A  6F79               	movwf	setUmidade@_umd& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;FuncoesControlador.h: 71: }
  7833                           
  7834                           ;FuncoesControlador.h: 70: break;
  7835  00487C  D00A               	goto	l918
  7836  00487E                     l906:
  7837                           
  7838                           ; BSR set to: 0
  7839                           
  7840                           ; BSR set to: 0
  7841  00487E  516E               	movf	setUmidade@tp& (0+255),w,b
  7842                           
  7843                           ; Switch size 1, requested type "space"
  7844                           ; Number of cases is 3, Range of values is 43 to 65
  7845                           ; switch strategies available:
  7846                           ; Name         Instructions Cycles
  7847                           ; simple_byte           10     6 (average)
  7848                           ;	Chosen strategy is simple_byte
  7849  004880  0A2B               	xorlw	43	; case 43
  7850  004882  B4D8               	btfsc	status,2,c
  7851  004884  D7A0               	goto	l907
  7852  004886  0A06               	xorlw	6	; case 45
  7853  004888  B4D8               	btfsc	status,2,c
  7854  00488A  D7C3               	goto	l919
  7855  00488C  0A6C               	xorlw	108	; case 65
  7856  00488E  B4D8               	btfsc	status,2,c
  7857  004890  D7E7               	goto	l930
  7858  004892                     l918:
  7859                           
  7860                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7861                           
  7862                           ; BSR set to: 0
  7863  004892  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7864  004896  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7865  00489A  C079  FFDF         	movff	setUmidade@_umd,indf2
  7866  00489E  0012               	return		;funcret
  7867  0048A0                     __end_of_setUmidade:
  7868                           	opt stack 0
  7869                           tblptru	equ	0xFF8
  7870                           tblptrh	equ	0xFF7
  7871                           tblptrl	equ	0xFF6
  7872                           tablat	equ	0xFF5
  7873                           prodh	equ	0xFF4
  7874                           prodl	equ	0xFF3
  7875                           intcon	equ	0xFF2
  7876                           intcon2	equ	0xFF1
  7877                           intcon3	equ	0xFF0
  7878                           postinc0	equ	0xFEE
  7879                           wreg	equ	0xFE8
  7880                           postdec1	equ	0xFE5
  7881                           fsr1l	equ	0xFE1
  7882                           indf2	equ	0xFDF
  7883                           fsr2h	equ	0xFDA
  7884                           fsr2l	equ	0xFD9
  7885                           status	equ	0xFD8
  7886                           
  7887 ;; *************** function _tabelaUmidade *****************
  7888 ;; Defined at:
  7889 ;;		line 4 in file "src/TabelasUmidade.h"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  _tmp            2    0[BANK0 ] int 
  7892 ;;  _clima          2    2[BANK0 ] int 
  7893 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  _umd            1    7[BANK0 ] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2    0[BANK0 ] unsigned int 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7905 ;;      Params:         0       5       0       0       0       0       0       0       0
  7906 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7907 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7908 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7909 ;;Total ram usage:        8 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    6
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_setUmidade
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text3
  7920  00163C                     __ptext3:
  7921                           	opt stack 0
  7922  00163C                     _tabelaUmidade:
  7923                           	opt stack 23
  7924                           
  7925                           ;TabelasUmidade.h: 5: char _umd = 0;
  7926                           
  7927                           ;incstack = 0
  7928  00163C  0E00               	movlw	0
  7929  00163E  0100               	movlb	0	; () banked
  7930  001640  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7931                           
  7932                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7933  001642  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7934  001644  B4D8               	btfsc	status,2,c
  7935  001646  D306               	goto	l297
  7936  001648  D31A               	goto	l296
  7937  00164A                     
  7938                           ; BSR set to: 0
  7939                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7940                           
  7941                           ; BSR set to: 0
  7942  00164A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7943  00164C  D006               	goto	u8750
  7944  00164E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7945  001650  E106               	bnz	l6726
  7946  001652  0E5B               	movlw	91
  7947  001654  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7948  001656  B0D8               	btfsc	status,0,c
  7949  001658  D002               	goto	l299
  7950  00165A                     u8750:
  7951                           
  7952                           ; BSR set to: 0
  7953  00165A  0E55               	movlw	85
  7954  00165C  D04B               	goto	L24
  7955  00165E                     l299:
  7956  00165E                     l6726:
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;TabelasUmidade.h: 10: else
  7960                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7961  00165E  0E5B               	movlw	91
  7962  001660  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7963  001662  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7964  001664  A4D8               	btfss	status,2,c
  7965  001666  D002               	goto	l301
  7966  001668                     u8760:
  7967                           
  7968                           ; BSR set to: 0
  7969  001668  0E56               	movlw	86
  7970  00166A  D044               	goto	L24
  7971  00166C                     l301:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;TabelasUmidade.h: 12: else
  7975                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7976                           
  7977                           ; BSR set to: 0
  7978  00166C  0E5C               	movlw	92
  7979  00166E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7980  001670  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7981  001672  A4D8               	btfss	status,2,c
  7982  001674  D002               	goto	l303
  7983                           
  7984                           ; BSR set to: 0
  7985  001676  0E57               	movlw	87
  7986  001678  D03D               	goto	L24
  7987  00167A                     l303:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;TabelasUmidade.h: 14: else
  7991                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7992                           
  7993                           ; BSR set to: 0
  7994  00167A  0E5D               	movlw	93
  7995  00167C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7996  00167E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7997  001680  A4D8               	btfss	status,2,c
  7998  001682  D002               	goto	l305
  7999  001684                     u8780:
  8000                           
  8001                           ; BSR set to: 0
  8002  001684  0E58               	movlw	88
  8003  001686  D036               	goto	L24
  8004  001688                     l305:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;TabelasUmidade.h: 16: else
  8008                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  8009                           
  8010                           ; BSR set to: 0
  8011  001688  0E5E               	movlw	94
  8012  00168A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8013  00168C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8014  00168E  A4D8               	btfss	status,2,c
  8015  001690  D002               	goto	l307
  8016  001692                     u8790:
  8017                           
  8018                           ; BSR set to: 0
  8019  001692  0E59               	movlw	89
  8020  001694  D02F               	goto	L24
  8021  001696                     l307:
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;TabelasUmidade.h: 18: else
  8025                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  8026                           
  8027                           ; BSR set to: 0
  8028  001696  0E5F               	movlw	95
  8029  001698  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8030  00169A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8031  00169C  A4D8               	btfss	status,2,c
  8032  00169E  D002               	goto	l309
  8033  0016A0                     u8800:
  8034                           
  8035                           ; BSR set to: 0
  8036  0016A0  0E5A               	movlw	90
  8037  0016A2  D028               	goto	L24
  8038  0016A4                     l309:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;TabelasUmidade.h: 20: else
  8042                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  8043                           
  8044                           ; BSR set to: 0
  8045  0016A4  0E60               	movlw	96
  8046  0016A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8047  0016A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8048  0016AA  A4D8               	btfss	status,2,c
  8049  0016AC  D002               	goto	l311
  8050  0016AE                     u8810:
  8051                           
  8052                           ; BSR set to: 0
  8053  0016AE  0E5B               	movlw	91
  8054  0016B0  D021               	goto	L24
  8055  0016B2                     l311:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;TabelasUmidade.h: 22: else
  8059                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  8060                           
  8061                           ; BSR set to: 0
  8062  0016B2  0E61               	movlw	97
  8063  0016B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8064  0016B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8065  0016B8  A4D8               	btfss	status,2,c
  8066  0016BA  D002               	goto	l313
  8067  0016BC                     u8820:
  8068                           
  8069                           ; BSR set to: 0
  8070  0016BC  0E5C               	movlw	92
  8071  0016BE  D01A               	goto	L24
  8072  0016C0                     l313:
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;TabelasUmidade.h: 24: else
  8076                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  8077                           
  8078                           ; BSR set to: 0
  8079  0016C0  0E62               	movlw	98
  8080  0016C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8081  0016C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8082  0016C6  A4D8               	btfss	status,2,c
  8083  0016C8  D002               	goto	l315
  8084  0016CA                     u8830:
  8085                           
  8086                           ; BSR set to: 0
  8087  0016CA  0E5D               	movlw	93
  8088  0016CC  D013               	goto	L24
  8089  0016CE                     l315:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;TabelasUmidade.h: 26: else
  8093                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  8094                           
  8095                           ; BSR set to: 0
  8096  0016CE  0E63               	movlw	99
  8097  0016D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8098  0016D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8099  0016D4  A4D8               	btfss	status,2,c
  8100  0016D6  D002               	goto	l317
  8101  0016D8                     u8840:
  8102                           
  8103                           ; BSR set to: 0
  8104  0016D8  0E5E               	movlw	94
  8105  0016DA  D00C               	goto	L24
  8106  0016DC                     l317:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;TabelasUmidade.h: 28: else
  8110                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  8111                           
  8112                           ; BSR set to: 0
  8113  0016DC  0E64               	movlw	100
  8114  0016DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8115  0016E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8116  0016E2  B4D8               	btfsc	status,2,c
  8117  0016E4  EFB2  F00F         	goto	u10600
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;TabelasUmidade.h: 30: else
  8121                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  8122                           
  8123                           ; BSR set to: 0
  8124                           
  8125                           ; BSR set to: 0
  8126  0016E8  0E65               	movlw	101
  8127  0016EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8128  0016EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8129  0016EE  A4D8               	btfss	status,2,c
  8130  0016F0  D004               	goto	l321
  8131  0016F2  D7F2               	goto	u8840
  8132  0016F4                     L24:
  8133  0016F4  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  8134  0016F6  EF03  F013         	goto	l630
  8135  0016FA                     l321:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;TabelasUmidade.h: 32: else
  8139                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  8140                           
  8141                           ; BSR set to: 0
  8142  0016FA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8143  0016FC  D00E               	goto	l323
  8144  0016FE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8145  001700  E104               	bnz	u8870
  8146  001702  0E66               	movlw	102
  8147  001704  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8148  001706  A0D8               	btfss	status,0,c
  8149  001708  D008               	goto	l323
  8150  00170A                     u8870:
  8151                           
  8152                           ; BSR set to: 0
  8153  00170A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8154  00170C  D7E5               	goto	u8840
  8155  00170E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8156  001710  E104               	bnz	l6776
  8157  001712  0E6C               	movlw	108
  8158  001714  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8159  001716  A0D8               	btfss	status,0,c
  8160  001718  D7DF               	goto	u8840
  8161  00171A                     l323:
  8162  00171A                     l6776:
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;TabelasUmidade.h: 34: else
  8166                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  8167  00171A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8168  00171C  D010               	goto	l325
  8169  00171E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8170  001720  E104               	bnz	u8890
  8171  001722  0E6C               	movlw	108
  8172  001724  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8173  001726  A0D8               	btfss	status,0,c
  8174  001728  D00A               	goto	l325
  8175  00172A                     u8890:
  8176                           
  8177                           ; BSR set to: 0
  8178  00172A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8179  00172C  EFB2  F00F         	goto	u10600
  8180  001730  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8181  001732  E105               	bnz	l6782
  8182  001734  0E77               	movlw	119
  8183  001736  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8184  001738  A0D8               	btfss	status,0,c
  8185  00173A  EFB2  F00F         	goto	u10600
  8186  00173E                     l325:
  8187  00173E                     l6782:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;TabelasUmidade.h: 36: else
  8191                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  8192  00173E  0E77               	movlw	119
  8193  001740  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8194  001742  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8195  001744  B4D8               	btfsc	status,2,c
  8196  001746  EFA5  F00F         	goto	u10580
  8197                           
  8198                           ; BSR set to: 0
  8199  00174A  0E78               	movlw	120
  8200  00174C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8201  00174E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8202  001750  B4D8               	btfsc	status,2,c
  8203                           
  8204                           ; BSR set to: 0
  8205  001752  D3FB               	goto	u10580
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;TabelasUmidade.h: 38: else
  8209                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  8210                           
  8211                           ; BSR set to: 0
  8212                           
  8213                           ; BSR set to: 0
  8214  001754  0E79               	movlw	121
  8215  001756  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8216  001758  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8217  00175A  B4D8               	btfsc	status,2,c
  8218  00175C  D3EE               	goto	u10570
  8219                           
  8220                           ; BSR set to: 0
  8221  00175E  0E7A               	movlw	122
  8222  001760  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8223  001762  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8224  001764  B4D8               	btfsc	status,2,c
  8225                           
  8226                           ; BSR set to: 0
  8227  001766  D3E9               	goto	u10570
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;TabelasUmidade.h: 40: else
  8231                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8232                           
  8233                           ; BSR set to: 0
  8234                           
  8235                           ; BSR set to: 0
  8236  001768  0E7B               	movlw	123
  8237  00176A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8238  00176C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8239  00176E  B4D8               	btfsc	status,2,c
  8240  001770  EF3E  F011         	goto	u11210
  8241                           
  8242                           ; BSR set to: 0
  8243  001774  0E7C               	movlw	124
  8244  001776  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8245  001778  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8246  00177A  B4D8               	btfsc	status,2,c
  8247                           
  8248                           ; BSR set to: 0
  8249  00177C  EF3E  F011         	goto	u11210
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;TabelasUmidade.h: 42: else
  8253                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8254                           
  8255                           ; BSR set to: 0
  8256                           
  8257                           ; BSR set to: 0
  8258  001780  0E7D               	movlw	125
  8259  001782  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8260  001784  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8261  001786  B4D8               	btfsc	status,2,c
  8262  001788  EF2B  F011         	goto	u11190
  8263                           
  8264                           ; BSR set to: 0
  8265  00178C  0E7E               	movlw	126
  8266  00178E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8267  001790  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8268  001792  B4D8               	btfsc	status,2,c
  8269                           
  8270                           ; BSR set to: 0
  8271  001794  EF2B  F011         	goto	u11190
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;TabelasUmidade.h: 44: else
  8275                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8276                           
  8277                           ; BSR set to: 0
  8278                           
  8279                           ; BSR set to: 0
  8280  001798  0E7F               	movlw	127
  8281  00179A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8282  00179C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8283  00179E  B4D8               	btfsc	status,2,c
  8284  0017A0  EF23  F011         	goto	u11180
  8285                           
  8286                           ; BSR set to: 0
  8287  0017A4  0E80               	movlw	128
  8288  0017A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8289  0017A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8290  0017AA  B4D8               	btfsc	status,2,c
  8291                           
  8292                           ; BSR set to: 0
  8293  0017AC  EF23  F011         	goto	u11180
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;TabelasUmidade.h: 46: else
  8297                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8298                           
  8299                           ; BSR set to: 0
  8300                           
  8301                           ; BSR set to: 0
  8302  0017B0  0E81               	movlw	129
  8303  0017B2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8304  0017B4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8305  0017B6  B4D8               	btfsc	status,2,c
  8306  0017B8  D1BB               	goto	u9740
  8307                           
  8308                           ; BSR set to: 0
  8309  0017BA  0E82               	movlw	130
  8310  0017BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8311  0017BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8312  0017C0  B4D8               	btfsc	status,2,c
  8313                           
  8314                           ; BSR set to: 0
  8315  0017C2  D1B6               	goto	u9740
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;TabelasUmidade.h: 48: else
  8319                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8320                           
  8321                           ; BSR set to: 0
  8322                           
  8323                           ; BSR set to: 0
  8324  0017C4  0E83               	movlw	131
  8325  0017C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8326  0017C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8327  0017CA  B4D8               	btfsc	status,2,c
  8328  0017CC  D1BD               	goto	u9760
  8329                           
  8330                           ; BSR set to: 0
  8331  0017CE  0E84               	movlw	132
  8332  0017D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8333  0017D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8334  0017D4  B4D8               	btfsc	status,2,c
  8335                           
  8336                           ; BSR set to: 0
  8337  0017D6  D1B8               	goto	u9760
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;TabelasUmidade.h: 50: else
  8341                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8342                           
  8343                           ; BSR set to: 0
  8344                           
  8345                           ; BSR set to: 0
  8346  0017D8  0E85               	movlw	133
  8347  0017DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8348  0017DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8349  0017DE  B4D8               	btfsc	status,2,c
  8350  0017E0  D1BF               	goto	u9780
  8351                           
  8352                           ; BSR set to: 0
  8353  0017E2  0E86               	movlw	134
  8354  0017E4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8355  0017E6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8356  0017E8  B4D8               	btfsc	status,2,c
  8357                           
  8358                           ; BSR set to: 0
  8359  0017EA  D1BA               	goto	u9780
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;TabelasUmidade.h: 52: else
  8363                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8364                           
  8365                           ; BSR set to: 0
  8366                           
  8367                           ; BSR set to: 0
  8368  0017EC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8369  0017EE  D00E               	goto	l359
  8370  0017F0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8371  0017F2  E104               	bnz	u9070
  8372  0017F4  0E87               	movlw	135
  8373  0017F6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8374  0017F8  A0D8               	btfss	status,0,c
  8375  0017FA  D008               	goto	l359
  8376  0017FC                     u9070:
  8377                           
  8378                           ; BSR set to: 0
  8379  0017FC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8380  0017FE  D0ED               	goto	u9460
  8381  001800  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8382  001802  E104               	bnz	l6836
  8383  001804  0E93               	movlw	147
  8384  001806  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8385  001808  A0D8               	btfss	status,0,c
  8386  00180A  D0E7               	goto	u9460
  8387  00180C                     l359:
  8388  00180C                     l6836:
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;TabelasUmidade.h: 54: else
  8392                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8393  00180C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8394  00180E  D00E               	goto	l361
  8395  001810  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8396  001812  E104               	bnz	u9090
  8397  001814  0E93               	movlw	147
  8398  001816  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8399  001818  A0D8               	btfss	status,0,c
  8400  00181A  D008               	goto	l361
  8401  00181C                     u9090:
  8402                           
  8403                           ; BSR set to: 0
  8404  00181C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8405  00181E  D1B2               	goto	u9800
  8406  001820  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8407  001822  E104               	bnz	l6842
  8408  001824  0E97               	movlw	151
  8409  001826  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8410  001828  A0D8               	btfss	status,0,c
  8411  00182A  D1AC               	goto	u9800
  8412  00182C                     l361:
  8413  00182C                     l6842:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;TabelasUmidade.h: 56: else
  8417                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8418  00182C  0E97               	movlw	151
  8419  00182E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8420  001830  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8421  001832  B4D8               	btfsc	status,2,c
  8422  001834  D1B3               	goto	u9820
  8423                           
  8424                           ; BSR set to: 0
  8425  001836  0E98               	movlw	152
  8426  001838  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8427  00183A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8428  00183C  B4D8               	btfsc	status,2,c
  8429                           
  8430                           ; BSR set to: 0
  8431  00183E  D1AE               	goto	u9820
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;TabelasUmidade.h: 58: else
  8435                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8436                           
  8437                           ; BSR set to: 0
  8438                           
  8439                           ; BSR set to: 0
  8440  001840  0E99               	movlw	153
  8441  001842  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8442  001844  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8443  001846  B4D8               	btfsc	status,2,c
  8444  001848  D1B5               	goto	u9840
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;TabelasUmidade.h: 60: else
  8448                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8449                           
  8450                           ; BSR set to: 0
  8451                           
  8452                           ; BSR set to: 0
  8453  00184A  0E9A               	movlw	154
  8454  00184C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8455  00184E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8456  001850  B4D8               	btfsc	status,2,c
  8457  001852  D1C2               	goto	u9860
  8458                           
  8459                           ; BSR set to: 0
  8460  001854  0E9B               	movlw	155
  8461  001856  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8462  001858  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8463  00185A  B4D8               	btfsc	status,2,c
  8464                           
  8465                           ; BSR set to: 0
  8466  00185C  D1BD               	goto	u9860
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;TabelasUmidade.h: 62: else
  8470                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8471                           
  8472                           ; BSR set to: 0
  8473                           
  8474                           ; BSR set to: 0
  8475  00185E  0E9C               	movlw	156
  8476  001860  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8477  001862  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8478  001864  B4D8               	btfsc	status,2,c
  8479  001866  D1C4               	goto	u9880
  8480                           
  8481                           ; BSR set to: 0
  8482  001868  0E9D               	movlw	157
  8483  00186A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8484  00186C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8485  00186E  B4D8               	btfsc	status,2,c
  8486                           
  8487                           ; BSR set to: 0
  8488  001870  D1BF               	goto	u9880
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;TabelasUmidade.h: 64: else
  8492                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8493                           
  8494                           ; BSR set to: 0
  8495                           
  8496                           ; BSR set to: 0
  8497  001872  0E9E               	movlw	158
  8498  001874  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8499  001876  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8500  001878  B4D8               	btfsc	status,2,c
  8501  00187A  D0E4               	goto	u9550
  8502                           
  8503                           ; BSR set to: 0
  8504  00187C  0E9F               	movlw	159
  8505  00187E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8506  001880  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8507  001882  B4D8               	btfsc	status,2,c
  8508                           
  8509                           ; BSR set to: 0
  8510  001884  D0DF               	goto	u9550
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;TabelasUmidade.h: 66: else
  8514                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8515                           
  8516                           ; BSR set to: 0
  8517                           
  8518                           ; BSR set to: 0
  8519  001886  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8520  001888  EF03  F013         	goto	l630
  8521  00188C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8522  00188E  E101               	bnz	u9200
  8523  001890  D0E0               	goto	L25
  8524  001892                     u9200:
  8525  001892  D1C6               	goto	u9920
  8526  001894                     
  8527                           ; BSR set to: 0
  8528                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8529                           
  8530                           ; BSR set to: 0
  8531  001894  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8532  001896  D6F6               	goto	u8780
  8533  001898  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8534  00189A  E104               	bnz	l6878
  8535  00189C  0E5B               	movlw	91
  8536  00189E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8537  0018A0  A0D8               	btfss	status,0,c
  8538  0018A2  D6F0               	goto	u8780
  8539  0018A4                     l6878:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;TabelasUmidade.h: 72: else
  8543                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8544  0018A4  0E5B               	movlw	91
  8545  0018A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8546  0018A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8547  0018AA  B4D8               	btfsc	status,2,c
  8548  0018AC  D6F2               	goto	u8790
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;TabelasUmidade.h: 74: else
  8552                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8553                           
  8554                           ; BSR set to: 0
  8555                           
  8556                           ; BSR set to: 0
  8557  0018AE  0E5C               	movlw	92
  8558  0018B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8559  0018B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8560  0018B4  B4D8               	btfsc	status,2,c
  8561  0018B6  D6F4               	goto	u8800
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;TabelasUmidade.h: 76: else
  8565                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8566                           
  8567                           ; BSR set to: 0
  8568                           
  8569                           ; BSR set to: 0
  8570  0018B8  0E5D               	movlw	93
  8571  0018BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8572  0018BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8573  0018BE  B4D8               	btfsc	status,2,c
  8574  0018C0  D6F6               	goto	u8810
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;TabelasUmidade.h: 78: else
  8578                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8579                           
  8580                           ; BSR set to: 0
  8581                           
  8582                           ; BSR set to: 0
  8583  0018C2  0E5E               	movlw	94
  8584  0018C4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8585  0018C6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8586  0018C8  B4D8               	btfsc	status,2,c
  8587  0018CA  D6F8               	goto	u8820
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;TabelasUmidade.h: 80: else
  8591                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8592                           
  8593                           ; BSR set to: 0
  8594                           
  8595                           ; BSR set to: 0
  8596  0018CC  0E5F               	movlw	95
  8597  0018CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8598  0018D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8599  0018D2  B4D8               	btfsc	status,2,c
  8600  0018D4  D6FA               	goto	u8830
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;TabelasUmidade.h: 82: else
  8604                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8605                           
  8606                           ; BSR set to: 0
  8607                           
  8608                           ; BSR set to: 0
  8609  0018D6  0E60               	movlw	96
  8610  0018D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8611  0018DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8612  0018DC  B4D8               	btfsc	status,2,c
  8613  0018DE  D6FC               	goto	u8840
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;TabelasUmidade.h: 84: else
  8617                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8618                           
  8619                           ; BSR set to: 0
  8620                           
  8621                           ; BSR set to: 0
  8622  0018E0  0E61               	movlw	97
  8623  0018E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8624  0018E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8625  0018E6  B4D8               	btfsc	status,2,c
  8626  0018E8  D33D               	goto	u10600
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;TabelasUmidade.h: 86: else
  8630                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8631                           
  8632                           ; BSR set to: 0
  8633                           
  8634                           ; BSR set to: 0
  8635  0018EA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8636  0018EC  D00E               	goto	l400
  8637  0018EE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8638  0018F0  E104               	bnz	u9290
  8639  0018F2  0E62               	movlw	98
  8640  0018F4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8641  0018F6  A0D8               	btfss	status,0,c
  8642  0018F8  D008               	goto	l400
  8643  0018FA                     u9290:
  8644                           
  8645                           ; BSR set to: 0
  8646  0018FA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8647  0018FC  D326               	goto	u10580
  8648  0018FE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8649  001900  E104               	bnz	l6912
  8650  001902  0E65               	movlw	101
  8651  001904  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8652  001906  A0D8               	btfss	status,0,c
  8653  001908  D320               	goto	u10580
  8654  00190A                     l400:
  8655  00190A                     l6912:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;TabelasUmidade.h: 88: else
  8659                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8660  00190A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8661  00190C  D00E               	goto	l402
  8662  00190E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8663  001910  E104               	bnz	u9310
  8664  001912  0E65               	movlw	101
  8665  001914  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8666  001916  A0D8               	btfss	status,0,c
  8667  001918  D008               	goto	l402
  8668  00191A                     u9310:
  8669                           
  8670                           ; BSR set to: 0
  8671  00191A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8672  00191C  D30E               	goto	u10570
  8673  00191E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8674  001920  E104               	bnz	l6918
  8675  001922  0E78               	movlw	120
  8676  001924  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8677  001926  A0D8               	btfss	status,0,c
  8678  001928  D308               	goto	u10570
  8679  00192A                     l402:
  8680  00192A                     l6918:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;TabelasUmidade.h: 90: else
  8684                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8685  00192A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8686  00192C  D010               	goto	l404
  8687  00192E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8688  001930  E104               	bnz	u9330
  8689  001932  0E78               	movlw	120
  8690  001934  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8691  001936  A0D8               	btfss	status,0,c
  8692  001938  D00A               	goto	l404
  8693  00193A                     u9330:
  8694                           
  8695                           ; BSR set to: 0
  8696  00193A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8697  00193C  EF3E  F011         	goto	u11210
  8698  001940  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8699  001942  E105               	bnz	l6924
  8700  001944  0E7B               	movlw	123
  8701  001946  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8702  001948  A0D8               	btfss	status,0,c
  8703  00194A  EF3E  F011         	goto	u11210
  8704  00194E                     l404:
  8705  00194E                     l6924:
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;TabelasUmidade.h: 92: else
  8709                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8710  00194E  0E7B               	movlw	123
  8711  001950  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8712  001952  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8713  001954  B4D8               	btfsc	status,2,c
  8714  001956  EF2B  F011         	goto	u11190
  8715                           
  8716                           ; BSR set to: 0
  8717  00195A  0E7C               	movlw	124
  8718  00195C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8719  00195E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8720  001960  B4D8               	btfsc	status,2,c
  8721                           
  8722                           ; BSR set to: 0
  8723  001962  EF2B  F011         	goto	u11190
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;TabelasUmidade.h: 94: else
  8727                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8728                           
  8729                           ; BSR set to: 0
  8730                           
  8731                           ; BSR set to: 0
  8732  001966  0E7D               	movlw	125
  8733  001968  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8734  00196A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8735  00196C  B4D8               	btfsc	status,2,c
  8736  00196E  EF23  F011         	goto	u11180
  8737                           
  8738                           ; BSR set to: 0
  8739  001972  0E7E               	movlw	126
  8740  001974  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8741  001976  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8742  001978  B4D8               	btfsc	status,2,c
  8743                           
  8744                           ; BSR set to: 0
  8745  00197A  EF23  F011         	goto	u11180
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;TabelasUmidade.h: 96: else
  8749                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8750                           
  8751                           ; BSR set to: 0
  8752                           
  8753                           ; BSR set to: 0
  8754  00197E  0E7F               	movlw	127
  8755  001980  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8756  001982  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8757  001984  B4D8               	btfsc	status,2,c
  8758  001986  D0D4               	goto	u9740
  8759                           
  8760                           ; BSR set to: 0
  8761  001988  0E80               	movlw	128
  8762  00198A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8763  00198C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8764  00198E  B4D8               	btfsc	status,2,c
  8765                           
  8766                           ; BSR set to: 0
  8767  001990  D0CF               	goto	u9740
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;TabelasUmidade.h: 98: else
  8771                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8772                           
  8773                           ; BSR set to: 0
  8774                           
  8775                           ; BSR set to: 0
  8776  001992  0E81               	movlw	129
  8777  001994  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8778  001996  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8779  001998  B4D8               	btfsc	status,2,c
  8780  00199A  D0D6               	goto	u9760
  8781                           
  8782                           ; BSR set to: 0
  8783  00199C  0E82               	movlw	130
  8784  00199E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8785  0019A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8786  0019A2  B4D8               	btfsc	status,2,c
  8787                           
  8788                           ; BSR set to: 0
  8789  0019A4  D0D1               	goto	u9760
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;TabelasUmidade.h: 100: else
  8793                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8794                           
  8795                           ; BSR set to: 0
  8796                           
  8797                           ; BSR set to: 0
  8798  0019A6  0E83               	movlw	131
  8799  0019A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8800  0019AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8801  0019AC  B4D8               	btfsc	status,2,c
  8802  0019AE  D0D8               	goto	u9780
  8803                           
  8804                           ; BSR set to: 0
  8805  0019B0  0E84               	movlw	132
  8806  0019B2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8807  0019B4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8808  0019B6  B4D8               	btfsc	status,2,c
  8809                           
  8810                           ; BSR set to: 0
  8811  0019B8  D0D3               	goto	u9780
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;TabelasUmidade.h: 102: else
  8815                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8816                           
  8817                           ; BSR set to: 0
  8818                           
  8819                           ; BSR set to: 0
  8820  0019BA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8821  0019BC  D010               	goto	l426
  8822  0019BE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8823  0019C0  E104               	bnz	u9450
  8824  0019C2  0E85               	movlw	133
  8825  0019C4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8826  0019C6  A0D8               	btfss	status,0,c
  8827  0019C8  D00A               	goto	l426
  8828  0019CA                     u9450:
  8829                           
  8830                           ; BSR set to: 0
  8831  0019CA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8832  0019CC  D006               	goto	u9460
  8833  0019CE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8834  0019D0  E106               	bnz	l6960
  8835  0019D2  0E95               	movlw	149
  8836  0019D4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8837  0019D6  B0D8               	btfsc	status,0,c
  8838  0019D8  D002               	goto	l426
  8839  0019DA                     u9460:
  8840                           
  8841                           ; BSR set to: 0
  8842  0019DA  0E68               	movlw	104
  8843  0019DC  D68B               	goto	L24
  8844  0019DE                     l426:
  8845  0019DE                     l6960:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;TabelasUmidade.h: 104: else
  8849                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8850  0019DE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8851  0019E0  D00E               	goto	l428
  8852  0019E2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8853  0019E4  E104               	bnz	u9470
  8854  0019E6  0E95               	movlw	149
  8855  0019E8  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8856  0019EA  A0D8               	btfss	status,0,c
  8857  0019EC  D008               	goto	l428
  8858  0019EE                     u9470:
  8859                           
  8860                           ; BSR set to: 0
  8861  0019EE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8862  0019F0  D0C9               	goto	u9800
  8863  0019F2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8864  0019F4  E104               	bnz	l6966
  8865  0019F6  0E99               	movlw	153
  8866  0019F8  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8867  0019FA  A0D8               	btfss	status,0,c
  8868  0019FC  D0C3               	goto	u9800
  8869  0019FE                     l428:
  8870  0019FE                     l6966:
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;TabelasUmidade.h: 106: else
  8874                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8875  0019FE  0E99               	movlw	153
  8876  001A00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8877  001A02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8878  001A04  B4D8               	btfsc	status,2,c
  8879  001A06  D0CA               	goto	u9820
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;TabelasUmidade.h: 108: else
  8883                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ; BSR set to: 0
  8888  001A08  0E9A               	movlw	154
  8889  001A0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8890  001A0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8891  001A0E  B4D8               	btfsc	status,2,c
  8892  001A10  D0D1               	goto	u9840
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;TabelasUmidade.h: 110: else
  8896                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8897                           
  8898                           ; BSR set to: 0
  8899                           
  8900                           ; BSR set to: 0
  8901  001A12  0E9B               	movlw	155
  8902  001A14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8903  001A16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8904  001A18  B4D8               	btfsc	status,2,c
  8905  001A1A  D0DE               	goto	u9860
  8906                           
  8907                           ; BSR set to: 0
  8908  001A1C  0E9C               	movlw	156
  8909  001A1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8910  001A20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8911  001A22  B4D8               	btfsc	status,2,c
  8912                           
  8913                           ; BSR set to: 0
  8914  001A24  D0D9               	goto	u9860
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;TabelasUmidade.h: 112: else
  8918                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8919                           
  8920                           ; BSR set to: 0
  8921                           
  8922                           ; BSR set to: 0
  8923  001A26  0E9D               	movlw	157
  8924  001A28  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8925  001A2A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8926  001A2C  B4D8               	btfsc	status,2,c
  8927  001A2E  D0E0               	goto	u9880
  8928                           
  8929                           ; BSR set to: 0
  8930  001A30  0E9E               	movlw	158
  8931  001A32  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8932  001A34  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8933  001A36  B4D8               	btfsc	status,2,c
  8934                           
  8935                           ; BSR set to: 0
  8936  001A38  D0DB               	goto	u9880
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;TabelasUmidade.h: 114: else
  8940                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8941                           
  8942                           ; BSR set to: 0
  8943                           
  8944                           ; BSR set to: 0
  8945  001A3A  0E9F               	movlw	159
  8946  001A3C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8947  001A3E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8948  001A40  A4D8               	btfss	status,2,c
  8949  001A42  D002               	goto	l442
  8950  001A44                     u9550:
  8951                           
  8952                           ; BSR set to: 0
  8953  001A44  0E6E               	movlw	110
  8954  001A46  D656               	goto	L24
  8955  001A48                     l442:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;TabelasUmidade.h: 116: else
  8959                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8960                           
  8961                           ; BSR set to: 0
  8962  001A48  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8963  001A4A  EF03  F013         	goto	l630
  8964  001A4E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8965  001A50  E105               	bnz	u9560
  8966  001A52                     L25:
  8967  001A52  0EA0               	movlw	160
  8968  001A54  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8969  001A56  A0D8               	btfss	status,0,c
  8970  001A58  EF03  F013         	goto	l630
  8971  001A5C                     u9560:
  8972  001A5C  D0E1               	goto	u9920
  8973  001A5E                     
  8974                           ; BSR set to: 0
  8975                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8976                           
  8977                           ; BSR set to: 0
  8978  001A5E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8979  001A60  D61F               	goto	u8800
  8980  001A62  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8981  001A64  E104               	bnz	l6998
  8982  001A66  0E5B               	movlw	91
  8983  001A68  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8984  001A6A  A0D8               	btfss	status,0,c
  8985  001A6C  D619               	goto	u8800
  8986  001A6E                     l6998:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;TabelasUmidade.h: 122: else
  8990                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8991  001A6E  0E5B               	movlw	91
  8992  001A70  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8993  001A72  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8994  001A74  B4D8               	btfsc	status,2,c
  8995  001A76  D61B               	goto	u8810
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;TabelasUmidade.h: 124: else
  8999                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  9000                           
  9001                           ; BSR set to: 0
  9002                           
  9003                           ; BSR set to: 0
  9004  001A78  0E5C               	movlw	92
  9005  001A7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9006  001A7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9007  001A7E  B4D8               	btfsc	status,2,c
  9008  001A80  D61D               	goto	u8820
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;TabelasUmidade.h: 126: else
  9012                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  9013                           
  9014                           ; BSR set to: 0
  9015                           
  9016                           ; BSR set to: 0
  9017  001A82  0E5D               	movlw	93
  9018  001A84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9019  001A86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9020  001A88  B4D8               	btfsc	status,2,c
  9021  001A8A  D61F               	goto	u8830
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;TabelasUmidade.h: 128: else
  9025                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  9026                           
  9027                           ; BSR set to: 0
  9028                           
  9029                           ; BSR set to: 0
  9030  001A8C  0E5E               	movlw	94
  9031  001A8E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9032  001A90  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9033  001A92  B4D8               	btfsc	status,2,c
  9034  001A94  D621               	goto	u8840
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;TabelasUmidade.h: 130: else
  9038                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  9039                           
  9040                           ; BSR set to: 0
  9041                           
  9042                           ; BSR set to: 0
  9043  001A96  0E5F               	movlw	95
  9044  001A98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9045  001A9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9046  001A9C  B4D8               	btfsc	status,2,c
  9047  001A9E  D262               	goto	u10600
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;TabelasUmidade.h: 132: else
  9051                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  9052                           
  9053                           ; BSR set to: 0
  9054                           
  9055                           ; BSR set to: 0
  9056  001AA0  0E60               	movlw	96
  9057  001AA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9058  001AA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9059  001AA6  B4D8               	btfsc	status,2,c
  9060  001AA8  D25D               	goto	u10600
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;TabelasUmidade.h: 134: else
  9064                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  9065                           
  9066                           ; BSR set to: 0
  9067                           
  9068                           ; BSR set to: 0
  9069  001AAA  0E61               	movlw	97
  9070  001AAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9071  001AAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9072  001AB0  B4D8               	btfsc	status,2,c
  9073  001AB2  D24B               	goto	u10580
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;TabelasUmidade.h: 136: else
  9077                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  9078                           
  9079                           ; BSR set to: 0
  9080                           
  9081                           ; BSR set to: 0
  9082  001AB4  0E62               	movlw	98
  9083  001AB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9084  001AB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9085  001ABA  B4D8               	btfsc	status,2,c
  9086  001ABC  D246               	goto	u10580
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;TabelasUmidade.h: 138: else
  9090                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  9091                           
  9092                           ; BSR set to: 0
  9093                           
  9094                           ; BSR set to: 0
  9095  001ABE  0E63               	movlw	99
  9096  001AC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9097  001AC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9098  001AC4  B4D8               	btfsc	status,2,c
  9099  001AC6  D239               	goto	u10570
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;TabelasUmidade.h: 140: else
  9103                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  9104                           
  9105                           ; BSR set to: 0
  9106                           
  9107                           ; BSR set to: 0
  9108  001AC8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9109  001ACA  D00E               	goto	l466
  9110  001ACC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9111  001ACE  E104               	bnz	u9670
  9112  001AD0  0E64               	movlw	100
  9113  001AD2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9114  001AD4  A0D8               	btfss	status,0,c
  9115  001AD6  D008               	goto	l466
  9116  001AD8                     u9670:
  9117                           
  9118                           ; BSR set to: 0
  9119  001AD8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9120  001ADA  D3D0               	goto	u11210
  9121  001ADC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9122  001ADE  E104               	bnz	l7040
  9123  001AE0  0E68               	movlw	104
  9124  001AE2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9125  001AE4  A0D8               	btfss	status,0,c
  9126  001AE6  D3CA               	goto	u11210
  9127  001AE8                     l466:
  9128  001AE8                     l7040:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;TabelasUmidade.h: 142: else
  9132                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  9133  001AE8  0E68               	movlw	104
  9134  001AEA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9135  001AEC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9136  001AEE  B4D8               	btfsc	status,2,c
  9137  001AF0  D3B2               	goto	u11190
  9138                           
  9139                           ; BSR set to: 0
  9140  001AF2  0E69               	movlw	105
  9141  001AF4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9142  001AF6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9143  001AF8  B4D8               	btfsc	status,2,c
  9144                           
  9145                           ; BSR set to: 0
  9146  001AFA  D3AD               	goto	u11190
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;TabelasUmidade.h: 144: else
  9150                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  9151                           
  9152                           ; BSR set to: 0
  9153                           
  9154                           ; BSR set to: 0
  9155  001AFC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9156  001AFE  D00E               	goto	l472
  9157  001B00  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9158  001B02  E104               	bnz	u9710
  9159  001B04  0E6A               	movlw	106
  9160  001B06  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9161  001B08  A0D8               	btfss	status,0,c
  9162  001B0A  D008               	goto	l472
  9163  001B0C                     u9710:
  9164                           
  9165                           ; BSR set to: 0
  9166  001B0C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9167  001B0E  D39B               	goto	u11180
  9168  001B10  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9169  001B12  E104               	bnz	l7052
  9170  001B14  0E7B               	movlw	123
  9171  001B16  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9172  001B18  A0D8               	btfss	status,0,c
  9173  001B1A  D395               	goto	u11180
  9174  001B1C                     l472:
  9175  001B1C                     l7052:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;TabelasUmidade.h: 146: else
  9179                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  9180  001B1C  0E7B               	movlw	123
  9181  001B1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9182  001B20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9183  001B22  B4D8               	btfsc	status,2,c
  9184  001B24  D005               	goto	u9740
  9185                           
  9186                           ; BSR set to: 0
  9187  001B26  0E7C               	movlw	124
  9188  001B28  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9189  001B2A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9190  001B2C  A4D8               	btfss	status,2,c
  9191  001B2E  D002               	goto	l474
  9192  001B30                     u9740:
  9193                           
  9194                           ; BSR set to: 0
  9195                           
  9196                           ; BSR set to: 0
  9197  001B30  0E65               	movlw	101
  9198  001B32  D5E0               	goto	L24
  9199  001B34                     l474:
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;TabelasUmidade.h: 148: else
  9203                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  9204                           
  9205                           ; BSR set to: 0
  9206  001B34  0E7D               	movlw	125
  9207  001B36  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9208  001B38  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9209  001B3A  B4D8               	btfsc	status,2,c
  9210  001B3C  D005               	goto	u9760
  9211                           
  9212                           ; BSR set to: 0
  9213  001B3E  0E7E               	movlw	126
  9214  001B40  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9215  001B42  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9216  001B44  A4D8               	btfss	status,2,c
  9217  001B46  D002               	goto	l478
  9218  001B48                     u9760:
  9219                           
  9220                           ; BSR set to: 0
  9221                           
  9222                           ; BSR set to: 0
  9223  001B48  0E66               	movlw	102
  9224  001B4A  D5D4               	goto	L24
  9225  001B4C                     l478:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;TabelasUmidade.h: 150: else
  9229                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9230                           
  9231                           ; BSR set to: 0
  9232  001B4C  0E7F               	movlw	127
  9233  001B4E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9234  001B50  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9235  001B52  B4D8               	btfsc	status,2,c
  9236  001B54  D005               	goto	u9780
  9237                           
  9238                           ; BSR set to: 0
  9239  001B56  0E80               	movlw	128
  9240  001B58  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9241  001B5A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9242  001B5C  A4D8               	btfss	status,2,c
  9243  001B5E  D002               	goto	l482
  9244  001B60                     u9780:
  9245                           
  9246                           ; BSR set to: 0
  9247                           
  9248                           ; BSR set to: 0
  9249  001B60  0E67               	movlw	103
  9250  001B62  D5C8               	goto	L24
  9251  001B64                     l482:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;TabelasUmidade.h: 152: else
  9255                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9256                           
  9257                           ; BSR set to: 0
  9258  001B64  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9259  001B66  D010               	goto	l486
  9260  001B68  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9261  001B6A  E104               	bnz	u9790
  9262  001B6C  0E81               	movlw	129
  9263  001B6E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9264  001B70  A0D8               	btfss	status,0,c
  9265  001B72  D00A               	goto	l486
  9266  001B74                     u9790:
  9267                           
  9268                           ; BSR set to: 0
  9269  001B74  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9270  001B76  D006               	goto	u9800
  9271  001B78  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9272  001B7A  E106               	bnz	l7076
  9273  001B7C  0E8B               	movlw	139
  9274  001B7E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9275  001B80  B0D8               	btfsc	status,0,c
  9276  001B82  D002               	goto	l486
  9277  001B84                     u9800:
  9278                           
  9279                           ; BSR set to: 0
  9280  001B84  0E69               	movlw	105
  9281  001B86  D5B6               	goto	L24
  9282  001B88                     l486:
  9283  001B88                     l7076:
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;TabelasUmidade.h: 154: else
  9287                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9288  001B88  0E8B               	movlw	139
  9289  001B8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9290  001B8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9291  001B8E  B4D8               	btfsc	status,2,c
  9292  001B90  D005               	goto	u9820
  9293                           
  9294                           ; BSR set to: 0
  9295  001B92  0E8C               	movlw	140
  9296  001B94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9297  001B96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9298  001B98  A4D8               	btfss	status,2,c
  9299  001B9A  D002               	goto	l488
  9300  001B9C                     u9820:
  9301                           
  9302                           ; BSR set to: 0
  9303                           
  9304                           ; BSR set to: 0
  9305  001B9C  0E6A               	movlw	106
  9306  001B9E  D5AA               	goto	L24
  9307  001BA0                     l488:
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;TabelasUmidade.h: 156: else
  9311                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9312                           
  9313                           ; BSR set to: 0
  9314  001BA0  0E8D               	movlw	141
  9315  001BA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9316  001BA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9317  001BA6  B4D8               	btfsc	status,2,c
  9318  001BA8  D005               	goto	u9840
  9319                           
  9320                           ; BSR set to: 0
  9321  001BAA  0E92               	movlw	146
  9322  001BAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9323  001BAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9324  001BB0  A4D8               	btfss	status,2,c
  9325  001BB2  D002               	goto	l492
  9326  001BB4                     u9840:
  9327                           
  9328                           ; BSR set to: 0
  9329                           
  9330                           ; BSR set to: 0
  9331  001BB4  0E6B               	movlw	107
  9332  001BB6  D59E               	goto	L24
  9333  001BB8                     l492:
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;TabelasUmidade.h: 158: else
  9337                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9338                           
  9339                           ; BSR set to: 0
  9340  001BB8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9341  001BBA  D010               	goto	l496
  9342  001BBC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9343  001BBE  E104               	bnz	u9850
  9344  001BC0  0E93               	movlw	147
  9345  001BC2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9346  001BC4  A0D8               	btfss	status,0,c
  9347  001BC6  D00A               	goto	l496
  9348  001BC8                     u9850:
  9349                           
  9350                           ; BSR set to: 0
  9351  001BC8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9352  001BCA  D006               	goto	u9860
  9353  001BCC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9354  001BCE  E106               	bnz	l7094
  9355  001BD0  0E98               	movlw	152
  9356  001BD2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9357  001BD4  B0D8               	btfsc	status,0,c
  9358  001BD6  D002               	goto	l496
  9359  001BD8                     u9860:
  9360                           
  9361                           ; BSR set to: 0
  9362  001BD8  0E6C               	movlw	108
  9363  001BDA  D58C               	goto	L24
  9364  001BDC                     l496:
  9365  001BDC                     l7094:
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;TabelasUmidade.h: 160: else
  9369                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9370  001BDC  0E99               	movlw	153
  9371  001BDE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9372  001BE0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9373  001BE2  B4D8               	btfsc	status,2,c
  9374  001BE4  D005               	goto	u9880
  9375                           
  9376                           ; BSR set to: 0
  9377  001BE6  0E98               	movlw	152
  9378  001BE8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9379  001BEA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9380  001BEC  A4D8               	btfss	status,2,c
  9381  001BEE  D002               	goto	l498
  9382  001BF0                     u9880:
  9383                           
  9384                           ; BSR set to: 0
  9385                           
  9386                           ; BSR set to: 0
  9387  001BF0  0E6D               	movlw	109
  9388  001BF2  D580               	goto	L24
  9389  001BF4                     l498:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;TabelasUmidade.h: 162: else
  9393                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9394                           
  9395                           ; BSR set to: 0
  9396  001BF4  0E9B               	movlw	155
  9397  001BF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9398  001BF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9399  001BFA  B4D8               	btfsc	status,2,c
  9400  001BFC  D005               	goto	u9900
  9401                           
  9402                           ; BSR set to: 0
  9403  001BFE  0E9A               	movlw	154
  9404  001C00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9405  001C02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9406  001C04  A4D8               	btfss	status,2,c
  9407  001C06  D002               	goto	l502
  9408  001C08                     u9900:
  9409                           
  9410                           ; BSR set to: 0
  9411                           
  9412                           ; BSR set to: 0
  9413  001C08  0E6F               	movlw	111
  9414  001C0A  D574               	goto	L24
  9415  001C0C                     l502:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;TabelasUmidade.h: 164: else
  9419                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9420                           
  9421                           ; BSR set to: 0
  9422  001C0C  0E9D               	movlw	157
  9423  001C0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9424  001C10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9425  001C12  B4D8               	btfsc	status,2,c
  9426  001C14  D005               	goto	u9920
  9427                           
  9428                           ; BSR set to: 0
  9429  001C16  0E9C               	movlw	156
  9430  001C18  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9431  001C1A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9432  001C1C  A4D8               	btfss	status,2,c
  9433  001C1E  D002               	goto	l506
  9434  001C20                     u9920:
  9435                           
  9436                           ; BSR set to: 0
  9437                           
  9438                           ; BSR set to: 0
  9439  001C20  0E70               	movlw	112
  9440  001C22  D568               	goto	L24
  9441  001C24                     l506:
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;TabelasUmidade.h: 166: else
  9445                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9446                           
  9447                           ; BSR set to: 0
  9448  001C24  0E9F               	movlw	159
  9449  001C26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9450  001C28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9451  001C2A  B4D8               	btfsc	status,2,c
  9452  001C2C  D005               	goto	u9940
  9453                           
  9454                           ; BSR set to: 0
  9455  001C2E  0E9E               	movlw	158
  9456  001C30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9457  001C32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9458  001C34  A4D8               	btfss	status,2,c
  9459  001C36  D002               	goto	l510
  9460  001C38                     u9940:
  9461                           
  9462                           ; BSR set to: 0
  9463                           
  9464                           ; BSR set to: 0
  9465  001C38  0E71               	movlw	113
  9466  001C3A  D55C               	goto	L24
  9467  001C3C                     l510:
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;TabelasUmidade.h: 168: else
  9471                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9472                           
  9473                           ; BSR set to: 0
  9474  001C3C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9475  001C3E  EF03  F013         	goto	l630
  9476  001C42  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9477  001C44  E105               	bnz	u9950
  9478  001C46  0EA0               	movlw	160
  9479  001C48  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9480  001C4A  A0D8               	btfss	status,0,c
  9481  001C4C  EF03  F013         	goto	l630
  9482  001C50                     u9950:
  9483                           
  9484                           ; BSR set to: 0
  9485  001C50  0E73               	movlw	115
  9486  001C52  D550               	goto	L24
  9487  001C54                     l297:
  9488                           
  9489                           ; BSR set to: 0
  9490                           
  9491                           ; BSR set to: 0
  9492  001C54  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9493  001C58  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9494                           
  9495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9496                           ; Switch size 1, requested type "space"
  9497                           ; Number of cases is 1, Range of values is 0 to 0
  9498                           ; switch strategies available:
  9499                           ; Name         Instructions Cycles
  9500                           ; simple_byte            4     3 (average)
  9501                           ;	Chosen strategy is simple_byte
  9502  001C5C  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9503  001C5E  0A00               	xorlw	0	; case 0
  9504  001C60  A4D8               	btfss	status,2,c
  9505  001C62  EF03  F013         	goto	l630
  9506                           
  9507                           ; BSR set to: 0
  9508                           ; Switch size 1, requested type "space"
  9509                           ; Number of cases is 3, Range of values is 1 to 3
  9510                           ; switch strategies available:
  9511                           ; Name         Instructions Cycles
  9512                           ; simple_byte           10     6 (average)
  9513                           ;	Chosen strategy is simple_byte
  9514  001C66  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9515  001C68  0A01               	xorlw	1	; case 1
  9516  001C6A  B4D8               	btfsc	status,2,c
  9517  001C6C  D4EE               	goto	l298
  9518  001C6E  0A03               	xorlw	3	; case 2
  9519  001C70  B4D8               	btfsc	status,2,c
  9520  001C72  D610               	goto	l383
  9521  001C74  0A01               	xorlw	1	; case 3
  9522  001C76  B4D8               	btfsc	status,2,c
  9523  001C78  D6F2               	goto	l445
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9527  001C7A  EF03  F013         	goto	l630
  9528  001C7E                     l296:
  9529                           
  9530                           ; BSR set to: 0
  9531                           
  9532                           ; BSR set to: 0
  9533  001C7E  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9534  001C80  B4D8               	btfsc	status,2,c
  9535  001C82  EFF8  F012         	goto	l517
  9536  001C86  EF03  F013         	goto	l630
  9537  001C8A                     
  9538                           ; BSR set to: 0
  9539                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9540                           
  9541                           ; BSR set to: 0
  9542  001C8A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9543  001C8C  D517               	goto	u8820
  9544  001C8E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9545  001C90  E104               	bnz	l7134
  9546  001C92  0E5B               	movlw	91
  9547  001C94  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9548  001C96  A0D8               	btfss	status,0,c
  9549  001C98  D511               	goto	u8820
  9550  001C9A                     l7134:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;TabelasUmidade.h: 176: else
  9554                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9555  001C9A  0E5B               	movlw	91
  9556  001C9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9557  001C9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9558  001CA0  B4D8               	btfsc	status,2,c
  9559  001CA2  D50C               	goto	u8820
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;TabelasUmidade.h: 178: else
  9563                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9564                           
  9565                           ; BSR set to: 0
  9566                           
  9567                           ; BSR set to: 0
  9568  001CA4  0E5C               	movlw	92
  9569  001CA6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9570  001CA8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9571  001CAA  B4D8               	btfsc	status,2,c
  9572  001CAC  D4F9               	goto	u8800
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;TabelasUmidade.h: 180: else
  9576                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9577                           
  9578                           ; BSR set to: 0
  9579                           
  9580                           ; BSR set to: 0
  9581  001CAE  0E5D               	movlw	93
  9582  001CB0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9583  001CB2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9584  001CB4  B4D8               	btfsc	status,2,c
  9585  001CB6  D4ED               	goto	u8790
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;TabelasUmidade.h: 182: else
  9589                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9590                           
  9591                           ; BSR set to: 0
  9592                           
  9593                           ; BSR set to: 0
  9594  001CB8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9595  001CBA  D00E               	goto	l527
  9596  001CBC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9597  001CBE  E104               	bnz	u10010
  9598  001CC0  0E5E               	movlw	94
  9599  001CC2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9600  001CC4  A0D8               	btfss	status,0,c
  9601  001CC6  D008               	goto	l527
  9602  001CC8                     u10010:
  9603                           
  9604                           ; BSR set to: 0
  9605  001CC8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9606  001CCA  D4DC               	goto	u8780
  9607  001CCC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9608  001CCE  E104               	bnz	l7152
  9609  001CD0  0E65               	movlw	101
  9610  001CD2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9611  001CD4  A0D8               	btfss	status,0,c
  9612  001CD6  D4D6               	goto	u8780
  9613  001CD8                     l527:
  9614  001CD8                     l7152:
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;TabelasUmidade.h: 184: else
  9618                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9619  001CD8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9620  001CDA  D00E               	goto	l529
  9621  001CDC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9622  001CDE  E104               	bnz	u10030
  9623  001CE0  0E65               	movlw	101
  9624  001CE2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9625  001CE4  A0D8               	btfss	status,0,c
  9626  001CE6  D008               	goto	l529
  9627  001CE8                     u10030:
  9628                           
  9629                           ; BSR set to: 0
  9630  001CE8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9631  001CEA  D2FE               	goto	u11280
  9632  001CEC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9633  001CEE  E104               	bnz	l7158
  9634  001CF0  0E67               	movlw	103
  9635  001CF2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9636  001CF4  A0D8               	btfss	status,0,c
  9637  001CF6  D2F8               	goto	u11280
  9638  001CF8                     l529:
  9639  001CF8                     l7158:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;TabelasUmidade.h: 186: else
  9643                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9644  001CF8  0E67               	movlw	103
  9645  001CFA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9646  001CFC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9647  001CFE  B4D8               	btfsc	status,2,c
  9648  001D00  D303               	goto	u11300
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;TabelasUmidade.h: 188: else
  9652                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9653                           
  9654                           ; BSR set to: 0
  9655                           
  9656                           ; BSR set to: 0
  9657  001D02  0E68               	movlw	104
  9658  001D04  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9659  001D06  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9660  001D08  B4D8               	btfsc	status,2,c
  9661  001D0A  D306               	goto	u11310
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;TabelasUmidade.h: 190: else
  9665                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9666                           
  9667                           ; BSR set to: 0
  9668                           
  9669                           ; BSR set to: 0
  9670  001D0C  0E69               	movlw	105
  9671  001D0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9672  001D10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9673  001D12  B4D8               	btfsc	status,2,c
  9674  001D14  D179               	goto	u10710
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;TabelasUmidade.h: 192: else
  9678                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9679                           
  9680                           ; BSR set to: 0
  9681                           
  9682                           ; BSR set to: 0
  9683  001D16  0E6A               	movlw	106
  9684  001D18  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9685  001D1A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9686  001D1C  B4D8               	btfsc	status,2,c
  9687  001D1E  D30F               	goto	u11330
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;TabelasUmidade.h: 194: else
  9691                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9692                           
  9693                           ; BSR set to: 0
  9694                           
  9695                           ; BSR set to: 0
  9696  001D20  0E6B               	movlw	107
  9697  001D22  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9698  001D24  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9699  001D26  B4D8               	btfsc	status,2,c
  9700  001D28  D312               	goto	u11340
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;TabelasUmidade.h: 196: else
  9704                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9705                           
  9706                           ; BSR set to: 0
  9707                           
  9708                           ; BSR set to: 0
  9709  001D2A  0E6C               	movlw	108
  9710  001D2C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9711  001D2E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9712  001D30  A4D8               	btfss	status,2,c
  9713  001D32  D002               	goto	l541
  9714                           
  9715                           ; BSR set to: 0
  9716  001D34  0E43               	movlw	67
  9717  001D36  D4DE               	goto	L24
  9718  001D38                     l541:
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;TabelasUmidade.h: 198: else
  9722                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9723                           
  9724                           ; BSR set to: 0
  9725  001D38  0E6D               	movlw	109
  9726  001D3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9727  001D3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9728  001D3E  B4D8               	btfsc	status,2,c
  9729  001D40  D30E               	goto	u11350
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;TabelasUmidade.h: 200: else
  9733                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9734                           
  9735                           ; BSR set to: 0
  9736                           
  9737                           ; BSR set to: 0
  9738  001D42  0E6E               	movlw	110
  9739  001D44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9740  001D46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9741  001D48  B4D8               	btfsc	status,2,c
  9742  001D4A  D17E               	goto	u10750
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;TabelasUmidade.h: 202: else
  9746                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9747                           
  9748                           ; BSR set to: 0
  9749                           
  9750                           ; BSR set to: 0
  9751  001D4C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9752  001D4E  D00E               	goto	l547
  9753  001D50  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9754  001D52  E104               	bnz	u10130
  9755  001D54  0E6F               	movlw	111
  9756  001D56  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9757  001D58  A0D8               	btfss	status,0,c
  9758  001D5A  D008               	goto	l547
  9759  001D5C                     u10130:
  9760                           
  9761                           ; BSR set to: 0
  9762  001D5C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9763  001D5E  D317               	goto	u11380
  9764  001D60  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9765  001D62  E104               	bnz	l7196
  9766  001D64  0E73               	movlw	115
  9767  001D66  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9768  001D68  A0D8               	btfss	status,0,c
  9769  001D6A  D311               	goto	u11380
  9770  001D6C                     l547:
  9771  001D6C                     l7196:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;TabelasUmidade.h: 204: else
  9775                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9776  001D6C  0E73               	movlw	115
  9777  001D6E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9778  001D70  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9779  001D72  B4D8               	btfsc	status,2,c
  9780  001D74  D314               	goto	u11390
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;TabelasUmidade.h: 206: else
  9784                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9785                           
  9786                           ; BSR set to: 0
  9787                           
  9788                           ; BSR set to: 0
  9789  001D76  0E74               	movlw	116
  9790  001D78  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9791  001D7A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9792  001D7C  B4D8               	btfsc	status,2,c
  9793  001D7E  D317               	goto	u11400
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;TabelasUmidade.h: 208: else
  9797                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9798                           
  9799                           ; BSR set to: 0
  9800                           
  9801                           ; BSR set to: 0
  9802  001D80  0E75               	movlw	117
  9803  001D82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9804  001D84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9805  001D86  A4D8               	btfss	status,2,c
  9806  001D88  D002               	goto	l553
  9807                           
  9808                           ; BSR set to: 0
  9809  001D8A  0E36               	movlw	54
  9810  001D8C  D4B3               	goto	L24
  9811  001D8E                     l553:
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;TabelasUmidade.h: 210: else
  9815                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9816                           
  9817                           ; BSR set to: 0
  9818  001D8E  0E76               	movlw	118
  9819  001D90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9820  001D92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9821  001D94  B4D8               	btfsc	status,2,c
  9822  001D96  D323               	goto	u11430
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;TabelasUmidade.h: 212: else
  9826                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9827                           
  9828                           ; BSR set to: 0
  9829                           
  9830                           ; BSR set to: 0
  9831  001D98  0E77               	movlw	119
  9832  001D9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9833  001D9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9834  001D9E  B4D8               	btfsc	status,2,c
  9835  001DA0  D326               	goto	u11440
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;TabelasUmidade.h: 214: else
  9839                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9840                           
  9841                           ; BSR set to: 0
  9842                           
  9843                           ; BSR set to: 0
  9844  001DA2  0E78               	movlw	120
  9845  001DA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9846  001DA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9847  001DA8  B4D8               	btfsc	status,2,c
  9848  001DAA  D18D               	goto	u10840
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;TabelasUmidade.h: 216: else
  9852                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9853                           
  9854                           ; BSR set to: 0
  9855                           
  9856                           ; BSR set to: 0
  9857  001DAC  0E79               	movlw	121
  9858  001DAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9859  001DB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9860  001DB2  B4D8               	btfsc	status,2,c
  9861  001DB4  D32C               	goto	u11460
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;TabelasUmidade.h: 218: else
  9865                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9866                           
  9867                           ; BSR set to: 0
  9868                           
  9869                           ; BSR set to: 0
  9870  001DB6  0E7A               	movlw	122
  9871  001DB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9872  001DBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9873  001DBC  A4D8               	btfss	status,2,c
  9874  001DBE  D002               	goto	l563
  9875                           
  9876                           ; BSR set to: 0
  9877  001DC0  0E2E               	movlw	46
  9878  001DC2  D498               	goto	L24
  9879  001DC4                     l563:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;TabelasUmidade.h: 220: else
  9883                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9884                           
  9885                           ; BSR set to: 0
  9886  001DC4  0E7B               	movlw	123
  9887  001DC6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9888  001DC8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9889  001DCA  B4D8               	btfsc	status,2,c
  9890  001DCC  D328               	goto	u11470
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;TabelasUmidade.h: 222: else
  9894                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9895                           
  9896                           ; BSR set to: 0
  9897                           
  9898                           ; BSR set to: 0
  9899  001DCE  0E7C               	movlw	124
  9900  001DD0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9901  001DD2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9902  001DD4  B4D8               	btfsc	status,2,c
  9903  001DD6  D189               	goto	u10870
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;TabelasUmidade.h: 224: else
  9907                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9908                           
  9909                           ; BSR set to: 0
  9910                           
  9911                           ; BSR set to: 0
  9912  001DD8  0E7D               	movlw	125
  9913  001DDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9914  001DDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9915  001DDE  B4D8               	btfsc	status,2,c
  9916  001DE0  D326               	goto	u11480
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;TabelasUmidade.h: 226: else
  9920                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9921                           
  9922                           ; BSR set to: 0
  9923                           
  9924                           ; BSR set to: 0
  9925  001DE2  0E7E               	movlw	126
  9926  001DE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9927  001DE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9928  001DE8  B4D8               	btfsc	status,2,c
  9929  001DEA  D187               	goto	u10880
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;TabelasUmidade.h: 228: else
  9933                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9934                           
  9935                           ; BSR set to: 0
  9936                           
  9937                           ; BSR set to: 0
  9938  001DEC  0E7F               	movlw	127
  9939  001DEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9940  001DF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9941  001DF2  B4D8               	btfsc	status,2,c
  9942  001DF4  D32C               	goto	u11500
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;TabelasUmidade.h: 230: else
  9946                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9947                           
  9948                           ; BSR set to: 0
  9949                           
  9950                           ; BSR set to: 0
  9951  001DF6  0E80               	movlw	128
  9952  001DF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9953  001DFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9954  001DFC  B4D8               	btfsc	status,2,c
  9955  001DFE  D327               	goto	u11500
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;TabelasUmidade.h: 232: else
  9959                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9960                           
  9961                           ; BSR set to: 0
  9962                           
  9963                           ; BSR set to: 0
  9964  001E00  0E81               	movlw	129
  9965  001E02  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9966  001E04  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9967  001E06  B4D8               	btfsc	status,2,c
  9968  001E08  D32A               	goto	u11510
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;TabelasUmidade.h: 234: else
  9972                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9973                           
  9974                           ; BSR set to: 0
  9975                           
  9976                           ; BSR set to: 0
  9977  001E0A  0E82               	movlw	130
  9978  001E0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9979  001E0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9980  001E10  A4D8               	btfss	status,2,c
  9981  001E12  D002               	goto	l579
  9982                           
  9983                           ; BSR set to: 0
  9984  001E14  0E26               	movlw	38
  9985  001E16  D46E               	goto	L24
  9986  001E18                     l579:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;TabelasUmidade.h: 236: else
  9990                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9991                           
  9992                           ; BSR set to: 0
  9993  001E18  0E83               	movlw	131
  9994  001E1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9995  001E1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9996  001E1E  B4D8               	btfsc	status,2,c
  9997  001E20  D326               	goto	u11520
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;TabelasUmidade.h: 238: else
 10001                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
 10002                           
 10003                           ; BSR set to: 0
 10004                           
 10005                           ; BSR set to: 0
 10006  001E22  0E84               	movlw	132
 10007  001E24  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10008  001E26  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10009  001E28  B4D8               	btfsc	status,2,c
 10010  001E2A  D329               	goto	u11530
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;TabelasUmidade.h: 240: else
 10014                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
 10015                           
 10016                           ; BSR set to: 0
 10017                           
 10018                           ; BSR set to: 0
 10019  001E2C  0E85               	movlw	133
 10020  001E2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10021  001E30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10022  001E32  B4D8               	btfsc	status,2,c
 10023  001E34  D324               	goto	u11530
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;TabelasUmidade.h: 242: else
 10027                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
 10028                           
 10029                           ; BSR set to: 0
 10030                           
 10031                           ; BSR set to: 0
 10032  001E36  0E86               	movlw	134
 10033  001E38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10034  001E3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10035  001E3C  B4D8               	btfsc	status,2,c
 10036  001E3E  D31F               	goto	u11530
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;TabelasUmidade.h: 244: else
 10040                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
 10041                           
 10042                           ; BSR set to: 0
 10043                           
 10044                           ; BSR set to: 0
 10045  001E40  0E87               	movlw	135
 10046  001E42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10047  001E44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10048  001E46  B4D8               	btfsc	status,2,c
 10049  001E48  D322               	goto	u11540
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;TabelasUmidade.h: 246: else
 10053                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
 10054                           
 10055                           ; BSR set to: 0
 10056                           
 10057                           ; BSR set to: 0
 10058  001E4A  0E88               	movlw	136
 10059  001E4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10060  001E4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10061  001E50  B4D8               	btfsc	status,2,c
 10062  001E52  D325               	goto	u11550
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;TabelasUmidade.h: 248: else
 10066                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
 10067                           
 10068                           ; BSR set to: 0
 10069                           
 10070                           ; BSR set to: 0
 10071  001E54  0E89               	movlw	137
 10072  001E56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10073  001E58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10074  001E5A  B4D8               	btfsc	status,2,c
 10075  001E5C  D328               	goto	u11560
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;TabelasUmidade.h: 250: else
 10079                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
 10080                           
 10081                           ; BSR set to: 0
 10082                           
 10083                           ; BSR set to: 0
 10084  001E5E  0E8A               	movlw	138
 10085  001E60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10086  001E62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10087  001E64  B4D8               	btfsc	status,2,c
 10088  001E66  D32B               	goto	u11570
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;TabelasUmidade.h: 252: else
 10092                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
 10093                           
 10094                           ; BSR set to: 0
 10095                           
 10096                           ; BSR set to: 0
 10097  001E68  0E8B               	movlw	139
 10098  001E6A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10099  001E6C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10100  001E6E  B4D8               	btfsc	status,2,c
 10101  001E70  D32E               	goto	u11580
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;TabelasUmidade.h: 254: else
 10105                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
 10106                           
 10107                           ; BSR set to: 0
 10108                           
 10109                           ; BSR set to: 0
 10110  001E72  0E8C               	movlw	140
 10111  001E74  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10112  001E76  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10113  001E78  B4D8               	btfsc	status,2,c
 10114  001E7A  D331               	goto	u11590
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;TabelasUmidade.h: 256: else
 10118                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
 10119                           
 10120                           ; BSR set to: 0
 10121                           
 10122                           ; BSR set to: 0
 10123  001E7C  0E8D               	movlw	141
 10124  001E7E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10125  001E80  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10126  001E82  B4D8               	btfsc	status,2,c
 10127  001E84  D334               	goto	u11600
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;TabelasUmidade.h: 258: else
 10131                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
 10132                           
 10133                           ; BSR set to: 0
 10134                           
 10135                           ; BSR set to: 0
 10136  001E86  0E8E               	movlw	142
 10137  001E88  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10138  001E8A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10139  001E8C  B4D8               	btfsc	status,2,c
 10140  001E8E  D337               	goto	u11610
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;TabelasUmidade.h: 260: else
 10144                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
 10145                           
 10146                           ; BSR set to: 0
 10147                           
 10148                           ; BSR set to: 0
 10149  001E90  0E8F               	movlw	143
 10150  001E92  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10151  001E94  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10152  001E96  B4D8               	btfsc	status,2,c
 10153  001E98  D33A               	goto	u11620
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;TabelasUmidade.h: 262: else
 10157                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
 10158                           
 10159                           ; BSR set to: 0
 10160                           
 10161                           ; BSR set to: 0
 10162  001E9A  0E90               	movlw	144
 10163  001E9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10164  001E9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10165  001EA0  B4D8               	btfsc	status,2,c
 10166  001EA2  D33D               	goto	u11630
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;TabelasUmidade.h: 264: else
 10170                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
 10171                           
 10172                           ; BSR set to: 0
 10173                           
 10174                           ; BSR set to: 0
 10175  001EA4  0E91               	movlw	145
 10176  001EA6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10177  001EA8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10178  001EAA  B4D8               	btfsc	status,2,c
 10179  001EAC  D340               	goto	u11640
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;TabelasUmidade.h: 266: else
 10183                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
 10184                           
 10185                           ; BSR set to: 0
 10186                           
 10187                           ; BSR set to: 0
 10188  001EAE  0E92               	movlw	146
 10189  001EB0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10190  001EB2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10191  001EB4  B4D8               	btfsc	status,2,c
 10192  001EB6  D343               	goto	u11650
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;TabelasUmidade.h: 268: else
 10196                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
 10197                           
 10198                           ; BSR set to: 0
 10199                           
 10200                           ; BSR set to: 0
 10201  001EB8  0E93               	movlw	147
 10202  001EBA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10203  001EBC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10204  001EBE  B4D8               	btfsc	status,2,c
 10205  001EC0  D346               	goto	u11660
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;TabelasUmidade.h: 270: else
 10209                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
 10210                           
 10211                           ; BSR set to: 0
 10212                           
 10213                           ; BSR set to: 0
 10214  001EC2  0E94               	movlw	148
 10215  001EC4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10216  001EC6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10217  001EC8  B4D8               	btfsc	status,2,c
 10218  001ECA  D349               	goto	u11670
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;TabelasUmidade.h: 272: else
 10222                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
 10223                           
 10224                           ; BSR set to: 0
 10225                           
 10226                           ; BSR set to: 0
 10227  001ECC  0E95               	movlw	149
 10228  001ECE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10229  001ED0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10230  001ED2  B4D8               	btfsc	status,2,c
 10231  001ED4  D34C               	goto	u11680
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;TabelasUmidade.h: 274: else
 10235                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10236                           
 10237                           ; BSR set to: 0
 10238                           
 10239                           ; BSR set to: 0
 10240  001ED6  0E96               	movlw	150
 10241  001ED8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10242  001EDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10243  001EDC  B4D8               	btfsc	status,2,c
 10244  001EDE  D34F               	goto	u11690
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;TabelasUmidade.h: 276: else
 10248                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10249                           
 10250                           ; BSR set to: 0
 10251                           
 10252                           ; BSR set to: 0
 10253  001EE0  0E97               	movlw	151
 10254  001EE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10255  001EE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10256  001EE6  B4D8               	btfsc	status,2,c
 10257  001EE8  D352               	goto	u11700
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;TabelasUmidade.h: 278: else
 10261                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10262                           
 10263                           ; BSR set to: 0
 10264                           
 10265                           ; BSR set to: 0
 10266  001EEA  0E98               	movlw	152
 10267  001EEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10268  001EEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10269  001EF0  B4D8               	btfsc	status,2,c
 10270  001EF2  D355               	goto	u11710
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;TabelasUmidade.h: 280: else
 10274                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10275                           
 10276                           ; BSR set to: 0
 10277                           
 10278                           ; BSR set to: 0
 10279  001EF4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10280  001EF6  D00E               	goto	l625
 10281  001EF8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10282  001EFA  E104               	bnz	u10530
 10283  001EFC  0E99               	movlw	153
 10284  001EFE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10285  001F00  A0D8               	btfss	status,0,c
 10286  001F02  D008               	goto	l625
 10287  001F04                     u10530:
 10288                           
 10289                           ; BSR set to: 0
 10290  001F04  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10291  001F06  D35E               	goto	u11730
 10292  001F08  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10293  001F0A  E104               	bnz	l7354
 10294  001F0C  0E9D               	movlw	157
 10295  001F0E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10296  001F10  A0D8               	btfss	status,0,c
 10297  001F12  D358               	goto	u11730
 10298  001F14                     l625:
 10299  001F14                     l7354:
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;TabelasUmidade.h: 282: else
 10303                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10304  001F14  0E9D               	movlw	157
 10305  001F16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10306  001F18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10307  001F1A  B4D8               	btfsc	status,2,c
 10308  001F1C  D35B               	goto	u11740
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;TabelasUmidade.h: 284: else
 10312                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10313                           
 10314                           ; BSR set to: 0
 10315                           
 10316                           ; BSR set to: 0
 10317  001F1E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10318  001F20  D372               	goto	l630
 10319  001F22  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10320  001F24  E101               	bnz	u10560
 10321  001F26  D182               	goto	L26
 10322  001F28                     u10560:
 10323  001F28  D360               	goto	u11750
 10324  001F2A                     
 10325                           ; BSR set to: 0
 10326                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10327                           
 10328                           ; BSR set to: 0
 10329  001F2A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10330  001F2C  D006               	goto	u10570
 10331  001F2E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10332  001F30  E107               	bnz	l7366
 10333  001F32  0E5B               	movlw	91
 10334  001F34  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10335  001F36  B0D8               	btfsc	status,0,c
 10336  001F38  D003               	goto	l632
 10337  001F3A                     u10570:
 10338                           
 10339                           ; BSR set to: 0
 10340  001F3A  0E61               	movlw	97
 10341  001F3C  EF7A  F00B         	goto	L24
 10342  001F40                     l632:
 10343  001F40                     l7366:
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;TabelasUmidade.h: 289: else
 10347                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10348  001F40  0E5B               	movlw	91
 10349  001F42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10350  001F44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10351  001F46  A4D8               	btfss	status,2,c
 10352  001F48  D003               	goto	l634
 10353  001F4A                     u10580:
 10354                           
 10355                           ; BSR set to: 0
 10356  001F4A  0E60               	movlw	96
 10357  001F4C  EF7A  F00B         	goto	L24
 10358  001F50                     l634:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;TabelasUmidade.h: 291: else
 10362                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10363                           
 10364                           ; BSR set to: 0
 10365  001F50  0E5C               	movlw	92
 10366  001F52  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10367  001F54  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10368  001F56  B4D8               	btfsc	status,2,c
 10369  001F58  D005               	goto	u10600
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;TabelasUmidade.h: 293: else
 10373                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10374                           
 10375                           ; BSR set to: 0
 10376                           
 10377                           ; BSR set to: 0
 10378  001F5A  0E5C               	movlw	92
 10379  001F5C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10380  001F5E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10381  001F60  A4D8               	btfss	status,2,c
 10382  001F62  D003               	goto	l638
 10383  001F64                     u10600:
 10384                           
 10385                           ; BSR set to: 0
 10386  001F64  0E5F               	movlw	95
 10387  001F66  EF7A  F00B         	goto	L24
 10388  001F6A                     l638:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;TabelasUmidade.h: 295: else
 10392                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10393                           
 10394                           ; BSR set to: 0
 10395  001F6A  0E5D               	movlw	93
 10396  001F6C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10397  001F6E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10398  001F70  B4D8               	btfsc	status,2,c
 10399  001F72  EF6C  F00B         	goto	u8840
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;TabelasUmidade.h: 297: else
 10403                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10404                           
 10405                           ; BSR set to: 0
 10406                           
 10407                           ; BSR set to: 0
 10408  001F76  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10409  001F78  D010               	goto	l642
 10410  001F7A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10411  001F7C  E104               	bnz	u10620
 10412  001F7E  0E5E               	movlw	94
 10413  001F80  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10414  001F82  A0D8               	btfss	status,0,c
 10415  001F84  D00A               	goto	l642
 10416  001F86                     u10620:
 10417                           
 10418                           ; BSR set to: 0
 10419  001F86  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10420  001F88  EF65  F00B         	goto	u8830
 10421  001F8C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10422  001F8E  E105               	bnz	l7388
 10423  001F90  0E65               	movlw	101
 10424  001F92  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10425  001F94  A0D8               	btfss	status,0,c
 10426  001F96  EF65  F00B         	goto	u8830
 10427  001F9A                     l642:
 10428  001F9A                     l7388:
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;TabelasUmidade.h: 299: else
 10432                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10433  001F9A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10434  001F9C  D011               	goto	l644
 10435  001F9E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10436  001FA0  E104               	bnz	u10640
 10437  001FA2  0E65               	movlw	101
 10438  001FA4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10439  001FA6  A0D8               	btfss	status,0,c
 10440  001FA8  D00B               	goto	l644
 10441  001FAA                     u10640:
 10442                           
 10443                           ; BSR set to: 0
 10444  001FAA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10445  001FAC  D006               	goto	u10650
 10446  001FAE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10447  001FB0  E107               	bnz	l7394
 10448  001FB2  0E67               	movlw	103
 10449  001FB4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10450  001FB6  B0D8               	btfsc	status,0,c
 10451  001FB8  D003               	goto	l644
 10452  001FBA                     u10650:
 10453                           
 10454                           ; BSR set to: 0
 10455  001FBA  0E53               	movlw	83
 10456  001FBC  EF7A  F00B         	goto	L24
 10457  001FC0                     l644:
 10458  001FC0                     l7394:
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;TabelasUmidade.h: 301: else
 10462                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10463  001FC0  0E67               	movlw	103
 10464  001FC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10465  001FC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10466  001FC6  A4D8               	btfss	status,2,c
 10467  001FC8  D003               	goto	l646
 10468                           
 10469                           ; BSR set to: 0
 10470  001FCA  0E51               	movlw	81
 10471  001FCC  EF7A  F00B         	goto	L24
 10472  001FD0                     l646:
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;TabelasUmidade.h: 303: else
 10476                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10477                           
 10478                           ; BSR set to: 0
 10479  001FD0  0E68               	movlw	104
 10480  001FD2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10481  001FD4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10482  001FD6  B4D8               	btfsc	status,2,c
 10483  001FD8  D17F               	goto	u11270
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;TabelasUmidade.h: 305: else
 10487                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10488                           
 10489                           ; BSR set to: 0
 10490                           
 10491                           ; BSR set to: 0
 10492  001FDA  0E69               	movlw	105
 10493  001FDC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10494  001FDE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10495  001FE0  B4D8               	btfsc	status,2,c
 10496  001FE2  D18A               	goto	u11290
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;TabelasUmidade.h: 307: else
 10500                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10501                           
 10502                           ; BSR set to: 0
 10503                           
 10504                           ; BSR set to: 0
 10505  001FE4  0E6A               	movlw	106
 10506  001FE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10507  001FE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10508  001FEA  B4D8               	btfsc	status,2,c
 10509  001FEC  D195               	goto	u11310
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;TabelasUmidade.h: 309: else
 10513                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10514                           
 10515                           ; BSR set to: 0
 10516                           
 10517                           ; BSR set to: 0
 10518  001FEE  0E6B               	movlw	107
 10519  001FF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10520  001FF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10521  001FF4  A4D8               	btfss	status,2,c
 10522  001FF6  D003               	goto	l654
 10523                           
 10524                           ; BSR set to: 0
 10525  001FF8  0E49               	movlw	73
 10526  001FFA  EF7A  F00B         	goto	L24
 10527  001FFE                     l654:
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;TabelasUmidade.h: 311: else
 10531                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10532                           
 10533                           ; BSR set to: 0
 10534  001FFE  0E6C               	movlw	108
 10535  002000  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10536  002002  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10537  002004  A4D8               	btfss	status,2,c
 10538  002006  D003               	goto	l656
 10539  002008                     u10710:
 10540                           
 10541                           ; BSR set to: 0
 10542  002008  0E48               	movlw	72
 10543  00200A  EF7A  F00B         	goto	L24
 10544  00200E                     l656:
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;TabelasUmidade.h: 313: else
 10548                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10549                           
 10550                           ; BSR set to: 0
 10551  00200E  0E6D               	movlw	109
 10552  002010  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10553  002012  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10554  002014  A4D8               	btfss	status,2,c
 10555  002016  D003               	goto	l658
 10556                           
 10557                           ; BSR set to: 0
 10558  002018  0E47               	movlw	71
 10559  00201A  EF7A  F00B         	goto	L24
 10560  00201E                     l658:
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;TabelasUmidade.h: 315: else
 10564                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10565                           
 10566                           ; BSR set to: 0
 10567  00201E  0E6E               	movlw	110
 10568  002020  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10569  002022  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10570  002024  B4D8               	btfsc	status,2,c
 10571  002026  D18B               	goto	u11330
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;TabelasUmidade.h: 317: else
 10575                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10576                           
 10577                           ; BSR set to: 0
 10578                           
 10579                           ; BSR set to: 0
 10580  002028  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10581  00202A  D011               	goto	l662
 10582  00202C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10583  00202E  E104               	bnz	u10740
 10584  002030  0E6F               	movlw	111
 10585  002032  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10586  002034  A0D8               	btfss	status,0,c
 10587  002036  D00B               	goto	l662
 10588  002038                     u10740:
 10589                           
 10590                           ; BSR set to: 0
 10591  002038  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10592  00203A  D006               	goto	u10750
 10593  00203C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10594  00203E  E107               	bnz	l7432
 10595  002040  0E73               	movlw	115
 10596  002042  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10597  002044  B0D8               	btfsc	status,0,c
 10598  002046  D003               	goto	l662
 10599  002048                     u10750:
 10600                           
 10601                           ; BSR set to: 0
 10602  002048  0E41               	movlw	65
 10603  00204A  EF7A  F00B         	goto	L24
 10604  00204E                     l662:
 10605  00204E                     l7432:
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;TabelasUmidade.h: 319: else
 10609                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10610  00204E  0E73               	movlw	115
 10611  002050  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10612  002052  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10613  002054  A4D8               	btfss	status,2,c
 10614  002056  D003               	goto	l664
 10615                           
 10616                           ; BSR set to: 0
 10617  002058  0E3F               	movlw	63
 10618  00205A  EF7A  F00B         	goto	L24
 10619  00205E                     l664:
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;TabelasUmidade.h: 321: else
 10623                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10624                           
 10625                           ; BSR set to: 0
 10626  00205E  0E74               	movlw	116
 10627  002060  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10628  002062  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10629  002064  A4D8               	btfss	status,2,c
 10630  002066  D003               	goto	l666
 10631                           
 10632                           ; BSR set to: 0
 10633  002068  0E3D               	movlw	61
 10634  00206A  EF7A  F00B         	goto	L24
 10635  00206E                     l666:
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;TabelasUmidade.h: 323: else
 10639                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10640                           
 10641                           ; BSR set to: 0
 10642  00206E  0E75               	movlw	117
 10643  002070  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10644  002072  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10645  002074  A4D8               	btfss	status,2,c
 10646  002076  D003               	goto	l668
 10647                           
 10648                           ; BSR set to: 0
 10649  002078  0E3B               	movlw	59
 10650  00207A  EF7A  F00B         	goto	L24
 10651  00207E                     l668:
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;TabelasUmidade.h: 325: else
 10655                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10656                           
 10657                           ; BSR set to: 0
 10658  00207E  0E76               	movlw	118
 10659  002080  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10660  002082  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10661  002084  A4D8               	btfss	status,2,c
 10662  002086  D003               	goto	l670
 10663                           
 10664                           ; BSR set to: 0
 10665  002088  0E39               	movlw	57
 10666  00208A  EF7A  F00B         	goto	L24
 10667  00208E                     l670:
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;TabelasUmidade.h: 327: else
 10671                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10672                           
 10673                           ; BSR set to: 0
 10674  00208E  0E77               	movlw	119
 10675  002090  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10676  002092  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10677  002094  B4D8               	btfsc	status,2,c
 10678  002096  D193               	goto	u11410
 10679                           
 10680                           ; BSR set to: 0
 10681                           ;TabelasUmidade.h: 329: else
 10682                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10683                           
 10684                           ; BSR set to: 0
 10685                           
 10686                           ; BSR set to: 0
 10687  002098  0E78               	movlw	120
 10688  00209A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10689  00209C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10690  00209E  B4D8               	btfsc	status,2,c
 10691  0020A0  D196               	goto	u11420
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;TabelasUmidade.h: 331: else
 10695                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10696                           
 10697                           ; BSR set to: 0
 10698                           
 10699                           ; BSR set to: 0
 10700  0020A2  0E79               	movlw	121
 10701  0020A4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10702  0020A6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10703  0020A8  A4D8               	btfss	status,2,c
 10704  0020AA  D003               	goto	l676
 10705                           
 10706                           ; BSR set to: 0
 10707  0020AC  0E33               	movlw	51
 10708  0020AE  EF7A  F00B         	goto	L24
 10709  0020B2                     l676:
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;TabelasUmidade.h: 333: else
 10713                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10714                           
 10715                           ; BSR set to: 0
 10716  0020B2  0E7A               	movlw	122
 10717  0020B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10718  0020B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10719  0020B8  B4D8               	btfsc	status,2,c
 10720  0020BA  D199               	goto	u11440
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;TabelasUmidade.h: 335: else
 10724                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10725                           
 10726                           ; BSR set to: 0
 10727                           
 10728                           ; BSR set to: 0
 10729  0020BC  0E7B               	movlw	123
 10730  0020BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10731  0020C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10732  0020C2  A4D8               	btfss	status,2,c
 10733  0020C4  D003               	goto	l680
 10734  0020C6                     u10840:
 10735                           
 10736                           ; BSR set to: 0
 10737  0020C6  0E30               	movlw	48
 10738  0020C8  EF7A  F00B         	goto	L24
 10739  0020CC                     l680:
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;TabelasUmidade.h: 337: else
 10743                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10744                           
 10745                           ; BSR set to: 0
 10746  0020CC  0E7C               	movlw	124
 10747  0020CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10748  0020D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10749  0020D2  B4D8               	btfsc	status,2,c
 10750  0020D4  D19C               	goto	u11460
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;TabelasUmidade.h: 339: else
 10754                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10755                           
 10756                           ; BSR set to: 0
 10757                           
 10758                           ; BSR set to: 0
 10759  0020D6  0E7D               	movlw	125
 10760  0020D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10761  0020DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10762  0020DC  B4D8               	btfsc	status,2,c
 10763  0020DE  D19F               	goto	u11470
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;TabelasUmidade.h: 341: else
 10767                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10768                           
 10769                           ; BSR set to: 0
 10770                           
 10771                           ; BSR set to: 0
 10772  0020E0  0E7E               	movlw	126
 10773  0020E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10774  0020E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10775  0020E6  A4D8               	btfss	status,2,c
 10776  0020E8  D003               	goto	l686
 10777  0020EA                     u10870:
 10778                           
 10779                           ; BSR set to: 0
 10780  0020EA  0E2C               	movlw	44
 10781  0020EC  EF7A  F00B         	goto	L24
 10782  0020F0                     l686:
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;TabelasUmidade.h: 343: else
 10786                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10787                           
 10788                           ; BSR set to: 0
 10789  0020F0  0E7F               	movlw	127
 10790  0020F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10791  0020F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10792  0020F6  A4D8               	btfss	status,2,c
 10793  0020F8  D003               	goto	l688
 10794  0020FA                     u10880:
 10795                           
 10796                           ; BSR set to: 0
 10797  0020FA  0E2A               	movlw	42
 10798  0020FC  EF7A  F00B         	goto	L24
 10799  002100                     l688:
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;TabelasUmidade.h: 345: else
 10803                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10804                           
 10805                           ; BSR set to: 0
 10806  002100  0E80               	movlw	128
 10807  002102  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10808  002104  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10809  002106  B4D8               	btfsc	status,2,c
 10810  002108  D19A               	goto	u11490
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;TabelasUmidade.h: 347: else
 10814                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10815                           
 10816                           ; BSR set to: 0
 10817                           
 10818                           ; BSR set to: 0
 10819  00210A  0E81               	movlw	129
 10820  00210C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10821  00210E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10822  002110  B4D8               	btfsc	status,2,c
 10823  002112  D195               	goto	u11490
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;TabelasUmidade.h: 349: else
 10827                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10828                           
 10829                           ; BSR set to: 0
 10830                           
 10831                           ; BSR set to: 0
 10832  002114  0E82               	movlw	130
 10833  002116  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10834  002118  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10835  00211A  B4D8               	btfsc	status,2,c
 10836  00211C  D198               	goto	u11500
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;TabelasUmidade.h: 351: else
 10840                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10841                           
 10842                           ; BSR set to: 0
 10843                           
 10844                           ; BSR set to: 0
 10845  00211E  0E83               	movlw	131
 10846  002120  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10847  002122  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10848  002124  B4D8               	btfsc	status,2,c
 10849  002126  D193               	goto	u11500
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;TabelasUmidade.h: 353: else
 10853                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10854                           
 10855                           ; BSR set to: 0
 10856                           
 10857                           ; BSR set to: 0
 10858  002128  0E84               	movlw	132
 10859  00212A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10860  00212C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10861  00212E  B4D8               	btfsc	status,2,c
 10862  002130  D196               	goto	u11510
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;TabelasUmidade.h: 355: else
 10866                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10867                           
 10868                           ; BSR set to: 0
 10869                           
 10870                           ; BSR set to: 0
 10871  002132  0E85               	movlw	133
 10872  002134  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10873  002136  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10874  002138  B4D8               	btfsc	status,2,c
 10875  00213A  D191               	goto	u11510
 10876                           
 10877                           ; BSR set to: 0
 10878                           ;TabelasUmidade.h: 357: else
 10879                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10880                           
 10881                           ; BSR set to: 0
 10882                           
 10883                           ; BSR set to: 0
 10884  00213C  0E86               	movlw	134
 10885  00213E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10886  002140  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10887  002142  B4D8               	btfsc	status,2,c
 10888  002144  D19C               	goto	u11530
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;TabelasUmidade.h: 359: else
 10892                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10893                           
 10894                           ; BSR set to: 0
 10895                           
 10896                           ; BSR set to: 0
 10897  002146  0E87               	movlw	135
 10898  002148  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10899  00214A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10900  00214C  B4D8               	btfsc	status,2,c
 10901  00214E  D19F               	goto	u11540
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;TabelasUmidade.h: 361: else
 10905                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10906                           
 10907                           ; BSR set to: 0
 10908                           
 10909                           ; BSR set to: 0
 10910  002150  0E88               	movlw	136
 10911  002152  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10912  002154  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10913  002156  B4D8               	btfsc	status,2,c
 10914  002158  D1A2               	goto	u11550
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;TabelasUmidade.h: 363: else
 10918                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10919                           
 10920                           ; BSR set to: 0
 10921                           
 10922                           ; BSR set to: 0
 10923  00215A  0E89               	movlw	137
 10924  00215C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10925  00215E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10926  002160  B4D8               	btfsc	status,2,c
 10927  002162  D1A5               	goto	u11560
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;TabelasUmidade.h: 365: else
 10931                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10932                           
 10933                           ; BSR set to: 0
 10934                           
 10935                           ; BSR set to: 0
 10936  002164  0E8A               	movlw	138
 10937  002166  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10938  002168  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10939  00216A  B4D8               	btfsc	status,2,c
 10940  00216C  D1A8               	goto	u11570
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;TabelasUmidade.h: 367: else
 10944                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10945                           
 10946                           ; BSR set to: 0
 10947                           
 10948                           ; BSR set to: 0
 10949  00216E  0E8B               	movlw	139
 10950  002170  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10951  002172  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10952  002174  B4D8               	btfsc	status,2,c
 10953  002176  D1AB               	goto	u11580
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;TabelasUmidade.h: 369: else
 10957                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10958                           
 10959                           ; BSR set to: 0
 10960                           
 10961                           ; BSR set to: 0
 10962  002178  0E8C               	movlw	140
 10963  00217A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10964  00217C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10965  00217E  B4D8               	btfsc	status,2,c
 10966  002180  D1AE               	goto	u11590
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;TabelasUmidade.h: 371: else
 10970                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10971                           
 10972                           ; BSR set to: 0
 10973                           
 10974                           ; BSR set to: 0
 10975  002182  0E8D               	movlw	141
 10976  002184  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10977  002186  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10978  002188  B4D8               	btfsc	status,2,c
 10979  00218A  D1B1               	goto	u11600
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;TabelasUmidade.h: 373: else
 10983                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10984                           
 10985                           ; BSR set to: 0
 10986                           
 10987                           ; BSR set to: 0
 10988  00218C  0E8E               	movlw	142
 10989  00218E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10990  002190  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10991  002192  B4D8               	btfsc	status,2,c
 10992  002194  D1B4               	goto	u11610
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;TabelasUmidade.h: 375: else
 10996                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 10997                           
 10998                           ; BSR set to: 0
 10999                           
 11000                           ; BSR set to: 0
 11001  002196  0E8F               	movlw	143
 11002  002198  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11003  00219A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11004  00219C  B4D8               	btfsc	status,2,c
 11005  00219E  D1B7               	goto	u11620
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;TabelasUmidade.h: 377: else
 11009                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 11010                           
 11011                           ; BSR set to: 0
 11012                           
 11013                           ; BSR set to: 0
 11014  0021A0  0E90               	movlw	144
 11015  0021A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11016  0021A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11017  0021A6  B4D8               	btfsc	status,2,c
 11018  0021A8  D1BA               	goto	u11630
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;TabelasUmidade.h: 379: else
 11022                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 11023                           
 11024                           ; BSR set to: 0
 11025                           
 11026                           ; BSR set to: 0
 11027  0021AA  0E91               	movlw	145
 11028  0021AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11029  0021AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11030  0021B0  B4D8               	btfsc	status,2,c
 11031  0021B2  D1BD               	goto	u11640
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;TabelasUmidade.h: 381: else
 11035                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 11036                           
 11037                           ; BSR set to: 0
 11038                           
 11039                           ; BSR set to: 0
 11040  0021B4  0E92               	movlw	146
 11041  0021B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11042  0021B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11043  0021BA  B4D8               	btfsc	status,2,c
 11044  0021BC  D1C0               	goto	u11650
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;TabelasUmidade.h: 383: else
 11048                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 11049                           
 11050                           ; BSR set to: 0
 11051                           
 11052                           ; BSR set to: 0
 11053  0021BE  0E93               	movlw	147
 11054  0021C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11055  0021C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11056  0021C4  B4D8               	btfsc	status,2,c
 11057  0021C6  D1C3               	goto	u11660
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;TabelasUmidade.h: 385: else
 11061                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 11062                           
 11063                           ; BSR set to: 0
 11064                           
 11065                           ; BSR set to: 0
 11066  0021C8  0E94               	movlw	148
 11067  0021CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11068  0021CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11069  0021CE  B4D8               	btfsc	status,2,c
 11070  0021D0  D1C6               	goto	u11670
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;TabelasUmidade.h: 387: else
 11074                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 11075                           
 11076                           ; BSR set to: 0
 11077                           
 11078                           ; BSR set to: 0
 11079  0021D2  0E95               	movlw	149
 11080  0021D4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11081  0021D6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11082  0021D8  B4D8               	btfsc	status,2,c
 11083  0021DA  D1C9               	goto	u11680
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;TabelasUmidade.h: 389: else
 11087                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 11088                           
 11089                           ; BSR set to: 0
 11090                           
 11091                           ; BSR set to: 0
 11092  0021DC  0E96               	movlw	150
 11093  0021DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11094  0021E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11095  0021E2  B4D8               	btfsc	status,2,c
 11096  0021E4  D1CC               	goto	u11690
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;TabelasUmidade.h: 391: else
 11100                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 11101                           
 11102                           ; BSR set to: 0
 11103                           
 11104                           ; BSR set to: 0
 11105  0021E6  0E97               	movlw	151
 11106  0021E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11107  0021EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11108  0021EC  B4D8               	btfsc	status,2,c
 11109  0021EE  D1CF               	goto	u11700
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;TabelasUmidade.h: 393: else
 11113                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 11114                           
 11115                           ; BSR set to: 0
 11116                           
 11117                           ; BSR set to: 0
 11118  0021F0  0E98               	movlw	152
 11119  0021F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11120  0021F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11121  0021F6  B4D8               	btfsc	status,2,c
 11122  0021F8  D1D2               	goto	u11710
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;TabelasUmidade.h: 395: else
 11126                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11127                           
 11128                           ; BSR set to: 0
 11129                           
 11130                           ; BSR set to: 0
 11131  0021FA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11132  0021FC  D00E               	goto	l740
 11133  0021FE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11134  002200  E104               	bnz	u11140
 11135  002202  0E99               	movlw	153
 11136  002204  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11137  002206  A0D8               	btfss	status,0,c
 11138  002208  D008               	goto	l740
 11139  00220A                     u11140:
 11140                           
 11141                           ; BSR set to: 0
 11142  00220A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11143  00220C  D1DB               	goto	u11730
 11144  00220E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11145  002210  E104               	bnz	l7590
 11146  002212  0E9D               	movlw	157
 11147  002214  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11148  002216  A0D8               	btfss	status,0,c
 11149  002218  D1D5               	goto	u11730
 11150  00221A                     l740:
 11151  00221A                     l7590:
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;TabelasUmidade.h: 397: else
 11155                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 11156  00221A  0E9D               	movlw	157
 11157  00221C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11158  00221E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11159  002220  B4D8               	btfsc	status,2,c
 11160  002222  D1D8               	goto	u11740
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;TabelasUmidade.h: 399: else
 11164                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 11165                           
 11166                           ; BSR set to: 0
 11167                           
 11168                           ; BSR set to: 0
 11169  002224  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11170  002226  D1EF               	goto	l630
 11171  002228  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11172  00222A  E104               	bnz	u11170
 11173  00222C                     L26:
 11174  00222C  0E9E               	movlw	158
 11175  00222E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11176  002230  A0D8               	btfss	status,0,c
 11177  002232  D1E9               	goto	l630
 11178  002234                     u11170:
 11179  002234  D1DA               	goto	u11750
 11180  002236                     
 11181                           ; BSR set to: 0
 11182                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 11183                           
 11184                           ; BSR set to: 0
 11185  002236  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11186  002238  D006               	goto	u11180
 11187  00223A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11188  00223C  E107               	bnz	l7602
 11189  00223E  0E5D               	movlw	93
 11190  002240  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11191  002242  B0D8               	btfsc	status,0,c
 11192  002244  D003               	goto	l746
 11193  002246                     u11180:
 11194                           
 11195                           ; BSR set to: 0
 11196  002246  0E64               	movlw	100
 11197  002248  EF7A  F00B         	goto	L24
 11198  00224C                     l746:
 11199  00224C                     l7602:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;TabelasUmidade.h: 404: else
 11203                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 11204  00224C  0E5D               	movlw	93
 11205  00224E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11206  002250  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11207  002252  A4D8               	btfss	status,2,c
 11208  002254  D003               	goto	l748
 11209  002256                     u11190:
 11210                           
 11211                           ; BSR set to: 0
 11212  002256  0E63               	movlw	99
 11213  002258  EF7A  F00B         	goto	L24
 11214  00225C                     l748:
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;TabelasUmidade.h: 406: else
 11218                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 11219                           
 11220                           ; BSR set to: 0
 11221  00225C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11222  00225E  D011               	goto	l750
 11223  002260  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11224  002262  E104               	bnz	u11200
 11225  002264  0E5E               	movlw	94
 11226  002266  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11227  002268  A0D8               	btfss	status,0,c
 11228  00226A  D00B               	goto	l750
 11229  00226C                     u11200:
 11230                           
 11231                           ; BSR set to: 0
 11232  00226C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11233  00226E  D006               	goto	u11210
 11234  002270  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11235  002272  E107               	bnz	l7612
 11236  002274  0E65               	movlw	101
 11237  002276  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11238  002278  B0D8               	btfsc	status,0,c
 11239  00227A  D003               	goto	l750
 11240  00227C                     u11210:
 11241                           
 11242                           ; BSR set to: 0
 11243  00227C  0E62               	movlw	98
 11244  00227E  EF7A  F00B         	goto	L24
 11245  002282                     l750:
 11246  002282                     l7612:
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;TabelasUmidade.h: 408: else
 11250                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11251  002282  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11252  002284  D010               	goto	l752
 11253  002286  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11254  002288  E104               	bnz	u11220
 11255  00228A  0E65               	movlw	101
 11256  00228C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11257  00228E  A0D8               	btfss	status,0,c
 11258  002290  D00A               	goto	l752
 11259  002292                     u11220:
 11260                           
 11261                           ; BSR set to: 0
 11262  002292  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11263  002294  EF42  F00B         	goto	u8780
 11264  002298  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11265  00229A  E105               	bnz	l7618
 11266  00229C  0E67               	movlw	103
 11267  00229E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11268  0022A0  A0D8               	btfss	status,0,c
 11269  0022A2  EF42  F00B         	goto	u8780
 11270  0022A6                     l752:
 11271  0022A6                     l7618:
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;TabelasUmidade.h: 410: else
 11275                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11276  0022A6  0E67               	movlw	103
 11277  0022A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11278  0022AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11279  0022AC  B4D8               	btfsc	status,2,c
 11280  0022AE  EF34  F00B         	goto	u8760
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;TabelasUmidade.h: 412: else
 11284                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11285                           
 11286                           ; BSR set to: 0
 11287                           
 11288                           ; BSR set to: 0
 11289  0022B2  0E68               	movlw	104
 11290  0022B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11291  0022B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11292  0022B8  B4D8               	btfsc	status,2,c
 11293  0022BA  EF2D  F00B         	goto	u8750
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;TabelasUmidade.h: 414: else
 11297                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11298                           
 11299                           ; BSR set to: 0
 11300                           
 11301                           ; BSR set to: 0
 11302  0022BE  0E69               	movlw	105
 11303  0022C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11304  0022C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11305  0022C4  A4D8               	btfss	status,2,c
 11306  0022C6  D003               	goto	l758
 11307                           
 11308                           ; BSR set to: 0
 11309  0022C8  0E52               	movlw	82
 11310  0022CA  EF7A  F00B         	goto	L24
 11311  0022CE                     l758:
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;TabelasUmidade.h: 416: else
 11315                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11316                           
 11317                           ; BSR set to: 0
 11318  0022CE  0E6A               	movlw	106
 11319  0022D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11320  0022D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11321  0022D4  A4D8               	btfss	status,2,c
 11322  0022D6  D003               	goto	l760
 11323  0022D8                     u11270:
 11324                           
 11325                           ; BSR set to: 0
 11326  0022D8  0E50               	movlw	80
 11327  0022DA  EF7A  F00B         	goto	L24
 11328  0022DE                     l760:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;TabelasUmidade.h: 418: else
 11332                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11333                           
 11334                           ; BSR set to: 0
 11335  0022DE  0E6B               	movlw	107
 11336  0022E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11337  0022E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11338  0022E4  A4D8               	btfss	status,2,c
 11339  0022E6  D003               	goto	l762
 11340  0022E8                     u11280:
 11341                           
 11342                           ; BSR set to: 0
 11343  0022E8  0E4E               	movlw	78
 11344  0022EA  EF7A  F00B         	goto	L24
 11345  0022EE                     l762:
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;TabelasUmidade.h: 420: else
 11349                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11350                           
 11351                           ; BSR set to: 0
 11352  0022EE  0E6C               	movlw	108
 11353  0022F0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11354  0022F2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11355  0022F4  A4D8               	btfss	status,2,c
 11356  0022F6  D003               	goto	l764
 11357  0022F8                     u11290:
 11358                           
 11359                           ; BSR set to: 0
 11360  0022F8  0E4D               	movlw	77
 11361  0022FA  EF7A  F00B         	goto	L24
 11362  0022FE                     l764:
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;TabelasUmidade.h: 422: else
 11366                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11367                           
 11368                           ; BSR set to: 0
 11369  0022FE  0E6D               	movlw	109
 11370  002300  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11371  002302  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11372  002304  A4D8               	btfss	status,2,c
 11373  002306  D003               	goto	l766
 11374  002308                     u11300:
 11375                           
 11376                           ; BSR set to: 0
 11377  002308  0E4C               	movlw	76
 11378  00230A  EF7A  F00B         	goto	L24
 11379  00230E                     l766:
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;TabelasUmidade.h: 424: else
 11383                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11384                           
 11385                           ; BSR set to: 0
 11386  00230E  0E6E               	movlw	110
 11387  002310  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11388  002312  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11389  002314  A4D8               	btfss	status,2,c
 11390  002316  D003               	goto	l768
 11391  002318                     u11310:
 11392                           
 11393                           ; BSR set to: 0
 11394  002318  0E4B               	movlw	75
 11395  00231A  EF7A  F00B         	goto	L24
 11396  00231E                     l768:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;TabelasUmidade.h: 426: else
 11400                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11401                           
 11402                           ; BSR set to: 0
 11403  00231E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11404  002320  D011               	goto	l770
 11405  002322  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11406  002324  E104               	bnz	u11320
 11407  002326  0E6F               	movlw	111
 11408  002328  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11409  00232A  A0D8               	btfss	status,0,c
 11410  00232C  D00B               	goto	l770
 11411  00232E                     u11320:
 11412                           
 11413                           ; BSR set to: 0
 11414  00232E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11415  002330  D006               	goto	u11330
 11416  002332  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11417  002334  E107               	bnz	l7656
 11418  002336  0E73               	movlw	115
 11419  002338  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11420  00233A  B0D8               	btfsc	status,0,c
 11421  00233C  D003               	goto	l770
 11422  00233E                     u11330:
 11423                           
 11424                           ; BSR set to: 0
 11425  00233E  0E46               	movlw	70
 11426  002340  EF7A  F00B         	goto	L24
 11427  002344                     l770:
 11428  002344                     l7656:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;TabelasUmidade.h: 428: else
 11432                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11433  002344  0E73               	movlw	115
 11434  002346  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11435  002348  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11436  00234A  A4D8               	btfss	status,2,c
 11437  00234C  D003               	goto	l772
 11438  00234E                     u11340:
 11439                           
 11440                           ; BSR set to: 0
 11441  00234E  0E44               	movlw	68
 11442  002350  EF7A  F00B         	goto	L24
 11443  002354                     l772:
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;TabelasUmidade.h: 430: else
 11447                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11448                           
 11449                           ; BSR set to: 0
 11450  002354  0E74               	movlw	116
 11451  002356  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11452  002358  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11453  00235A  A4D8               	btfss	status,2,c
 11454  00235C  D003               	goto	l774
 11455  00235E                     u11350:
 11456                           
 11457                           ; BSR set to: 0
 11458  00235E  0E42               	movlw	66
 11459  002360  EF7A  F00B         	goto	L24
 11460  002364                     l774:
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;TabelasUmidade.h: 432: else
 11464                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11465                           
 11466                           ; BSR set to: 0
 11467  002364  0E75               	movlw	117
 11468  002366  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11469  002368  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11470  00236A  A4D8               	btfss	status,2,c
 11471  00236C  D003               	goto	l776
 11472                           
 11473                           ; BSR set to: 0
 11474  00236E  0E40               	movlw	64
 11475  002370  EF7A  F00B         	goto	L24
 11476  002374                     l776:
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;TabelasUmidade.h: 434: else
 11480                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11481                           
 11482                           ; BSR set to: 0
 11483  002374  0E76               	movlw	118
 11484  002376  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11485  002378  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11486  00237A  A4D8               	btfss	status,2,c
 11487  00237C  D003               	goto	l778
 11488                           
 11489                           ; BSR set to: 0
 11490  00237E  0E3E               	movlw	62
 11491  002380  EF7A  F00B         	goto	L24
 11492  002384                     l778:
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;TabelasUmidade.h: 436: else
 11496                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11497                           
 11498                           ; BSR set to: 0
 11499  002384  0E77               	movlw	119
 11500  002386  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11501  002388  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11502  00238A  A4D8               	btfss	status,2,c
 11503  00238C  D003               	goto	l780
 11504  00238E                     u11380:
 11505                           
 11506                           ; BSR set to: 0
 11507  00238E  0E3C               	movlw	60
 11508  002390  EF7A  F00B         	goto	L24
 11509  002394                     l780:
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;TabelasUmidade.h: 438: else
 11513                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11514                           
 11515                           ; BSR set to: 0
 11516  002394  0E78               	movlw	120
 11517  002396  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11518  002398  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11519  00239A  A4D8               	btfss	status,2,c
 11520  00239C  D003               	goto	l782
 11521  00239E                     u11390:
 11522                           
 11523                           ; BSR set to: 0
 11524  00239E  0E3A               	movlw	58
 11525  0023A0  EF7A  F00B         	goto	L24
 11526  0023A4                     l782:
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;TabelasUmidade.h: 440: else
 11530                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11531                           
 11532                           ; BSR set to: 0
 11533  0023A4  0E79               	movlw	121
 11534  0023A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11535  0023A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11536  0023AA  A4D8               	btfss	status,2,c
 11537  0023AC  D003               	goto	l784
 11538  0023AE                     u11400:
 11539                           
 11540                           ; BSR set to: 0
 11541  0023AE  0E38               	movlw	56
 11542  0023B0  EF7A  F00B         	goto	L24
 11543  0023B4                     l784:
 11544                           
 11545                           ; BSR set to: 0
 11546                           ;TabelasUmidade.h: 442: else
 11547                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11548                           
 11549                           ; BSR set to: 0
 11550  0023B4  0E7A               	movlw	122
 11551  0023B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11552  0023B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11553  0023BA  A4D8               	btfss	status,2,c
 11554  0023BC  D003               	goto	l786
 11555  0023BE                     u11410:
 11556                           
 11557                           ; BSR set to: 0
 11558  0023BE  0E37               	movlw	55
 11559  0023C0  EF7A  F00B         	goto	L24
 11560  0023C4                     l786:
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;TabelasUmidade.h: 444: else
 11564                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11565                           
 11566                           ; BSR set to: 0
 11567  0023C4  0E7B               	movlw	123
 11568  0023C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11569  0023C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11570  0023CA  A4D8               	btfss	status,2,c
 11571  0023CC  D003               	goto	l788
 11572  0023CE                     u11420:
 11573                           
 11574                           ; BSR set to: 0
 11575  0023CE  0E35               	movlw	53
 11576  0023D0  EF7A  F00B         	goto	L24
 11577  0023D4                     l788:
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;TabelasUmidade.h: 446: else
 11581                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11582                           
 11583                           ; BSR set to: 0
 11584  0023D4  0E7C               	movlw	124
 11585  0023D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11586  0023D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11587  0023DA  A4D8               	btfss	status,2,c
 11588  0023DC  D003               	goto	l790
 11589  0023DE                     u11430:
 11590                           
 11591                           ; BSR set to: 0
 11592  0023DE  0E34               	movlw	52
 11593  0023E0  EF7A  F00B         	goto	L24
 11594  0023E4                     l790:
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;TabelasUmidade.h: 448: else
 11598                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11599                           
 11600                           ; BSR set to: 0
 11601  0023E4  0E7D               	movlw	125
 11602  0023E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11603  0023E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11604  0023EA  A4D8               	btfss	status,2,c
 11605  0023EC  D003               	goto	l792
 11606  0023EE                     u11440:
 11607                           
 11608                           ; BSR set to: 0
 11609  0023EE  0E32               	movlw	50
 11610  0023F0  EF7A  F00B         	goto	L24
 11611  0023F4                     l792:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;TabelasUmidade.h: 450: else
 11615                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11616                           
 11617                           ; BSR set to: 0
 11618  0023F4  0E7E               	movlw	126
 11619  0023F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11620  0023F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11621  0023FA  A4D8               	btfss	status,2,c
 11622  0023FC  D003               	goto	l794
 11623                           
 11624                           ; BSR set to: 0
 11625  0023FE  0E31               	movlw	49
 11626  002400  EF7A  F00B         	goto	L24
 11627  002404                     l794:
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;TabelasUmidade.h: 452: else
 11631                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11632                           
 11633                           ; BSR set to: 0
 11634  002404  0E7F               	movlw	127
 11635  002406  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11636  002408  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11637  00240A  A4D8               	btfss	status,2,c
 11638  00240C  D003               	goto	l796
 11639  00240E                     u11460:
 11640                           
 11641                           ; BSR set to: 0
 11642  00240E  0E2F               	movlw	47
 11643  002410  EF7A  F00B         	goto	L24
 11644  002414                     l796:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;TabelasUmidade.h: 454: else
 11648                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11649                           
 11650                           ; BSR set to: 0
 11651  002414  0E80               	movlw	128
 11652  002416  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11653  002418  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11654  00241A  A4D8               	btfss	status,2,c
 11655  00241C  D003               	goto	l798
 11656  00241E                     u11470:
 11657                           
 11658                           ; BSR set to: 0
 11659  00241E  0E2D               	movlw	45
 11660  002420  EF7A  F00B         	goto	L24
 11661  002424                     l798:
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;TabelasUmidade.h: 456: else
 11665                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11666                           
 11667                           ; BSR set to: 0
 11668  002424  0E81               	movlw	129
 11669  002426  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11670  002428  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11671  00242A  A4D8               	btfss	status,2,c
 11672  00242C  D003               	goto	l800
 11673  00242E                     u11480:
 11674                           
 11675                           ; BSR set to: 0
 11676  00242E  0E2B               	movlw	43
 11677  002430  EF7A  F00B         	goto	L24
 11678  002434                     l800:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;TabelasUmidade.h: 458: else
 11682                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11683                           
 11684                           ; BSR set to: 0
 11685  002434  0E82               	movlw	130
 11686  002436  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11687  002438  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11688  00243A  A4D8               	btfss	status,2,c
 11689  00243C  D003               	goto	l802
 11690  00243E                     u11490:
 11691                           
 11692                           ; BSR set to: 0
 11693  00243E  0E29               	movlw	41
 11694  002440  EF7A  F00B         	goto	L24
 11695  002444                     l802:
 11696                           
 11697                           ; BSR set to: 0
 11698                           ;TabelasUmidade.h: 460: else
 11699                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11700                           
 11701                           ; BSR set to: 0
 11702  002444  0E83               	movlw	131
 11703  002446  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11704  002448  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11705  00244A  A4D8               	btfss	status,2,c
 11706  00244C  D003               	goto	l804
 11707  00244E                     u11500:
 11708                           
 11709                           ; BSR set to: 0
 11710  00244E  0E28               	movlw	40
 11711  002450  EF7A  F00B         	goto	L24
 11712  002454                     l804:
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;TabelasUmidade.h: 462: else
 11716                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11717                           
 11718                           ; BSR set to: 0
 11719  002454  0E84               	movlw	132
 11720  002456  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11721  002458  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11722  00245A  A4D8               	btfss	status,2,c
 11723  00245C  D003               	goto	l806
 11724  00245E                     u11510:
 11725                           
 11726                           ; BSR set to: 0
 11727  00245E  0E27               	movlw	39
 11728  002460  EF7A  F00B         	goto	L24
 11729  002464                     l806:
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;TabelasUmidade.h: 464: else
 11733                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11734                           
 11735                           ; BSR set to: 0
 11736  002464  0E85               	movlw	133
 11737  002466  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11738  002468  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11739  00246A  A4D8               	btfss	status,2,c
 11740  00246C  D003               	goto	l808
 11741  00246E                     u11520:
 11742                           
 11743                           ; BSR set to: 0
 11744  00246E  0E25               	movlw	37
 11745  002470  EF7A  F00B         	goto	L24
 11746  002474                     l808:
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;TabelasUmidade.h: 466: else
 11750                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11751                           
 11752                           ; BSR set to: 0
 11753  002474  0E86               	movlw	134
 11754  002476  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11755  002478  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11756  00247A  A4D8               	btfss	status,2,c
 11757  00247C  D003               	goto	l810
 11758  00247E                     u11530:
 11759                           
 11760                           ; BSR set to: 0
 11761  00247E  0E24               	movlw	36
 11762  002480  EF7A  F00B         	goto	L24
 11763  002484                     l810:
 11764                           
 11765                           ; BSR set to: 0
 11766                           ;TabelasUmidade.h: 468: else
 11767                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11768                           
 11769                           ; BSR set to: 0
 11770  002484  0E87               	movlw	135
 11771  002486  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11772  002488  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11773  00248A  A4D8               	btfss	status,2,c
 11774  00248C  D003               	goto	l812
 11775  00248E                     u11540:
 11776                           
 11777                           ; BSR set to: 0
 11778  00248E  0E23               	movlw	35
 11779  002490  EF7A  F00B         	goto	L24
 11780  002494                     l812:
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;TabelasUmidade.h: 470: else
 11784                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11785                           
 11786                           ; BSR set to: 0
 11787  002494  0E88               	movlw	136
 11788  002496  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11789  002498  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11790  00249A  A4D8               	btfss	status,2,c
 11791  00249C  D003               	goto	l814
 11792  00249E                     u11550:
 11793                           
 11794                           ; BSR set to: 0
 11795  00249E  0E22               	movlw	34
 11796  0024A0  EF7A  F00B         	goto	L24
 11797  0024A4                     l814:
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;TabelasUmidade.h: 472: else
 11801                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11802                           
 11803                           ; BSR set to: 0
 11804  0024A4  0E89               	movlw	137
 11805  0024A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11806  0024A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11807  0024AA  A4D8               	btfss	status,2,c
 11808  0024AC  D003               	goto	l816
 11809  0024AE                     u11560:
 11810                           
 11811                           ; BSR set to: 0
 11812  0024AE  0E21               	movlw	33
 11813  0024B0  EF7A  F00B         	goto	L24
 11814  0024B4                     l816:
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;TabelasUmidade.h: 474: else
 11818                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11819                           
 11820                           ; BSR set to: 0
 11821  0024B4  0E8A               	movlw	138
 11822  0024B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11823  0024B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11824  0024BA  A4D8               	btfss	status,2,c
 11825  0024BC  D003               	goto	l818
 11826  0024BE                     u11570:
 11827                           
 11828                           ; BSR set to: 0
 11829  0024BE  0E20               	movlw	32
 11830  0024C0  EF7A  F00B         	goto	L24
 11831  0024C4                     l818:
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;TabelasUmidade.h: 476: else
 11835                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11836                           
 11837                           ; BSR set to: 0
 11838  0024C4  0E8B               	movlw	139
 11839  0024C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11840  0024C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11841  0024CA  A4D8               	btfss	status,2,c
 11842  0024CC  D003               	goto	l820
 11843  0024CE                     u11580:
 11844                           
 11845                           ; BSR set to: 0
 11846  0024CE  0E1F               	movlw	31
 11847  0024D0  EF7A  F00B         	goto	L24
 11848  0024D4                     l820:
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;TabelasUmidade.h: 478: else
 11852                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11853                           
 11854                           ; BSR set to: 0
 11855  0024D4  0E8C               	movlw	140
 11856  0024D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11857  0024D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11858  0024DA  A4D8               	btfss	status,2,c
 11859  0024DC  D003               	goto	l822
 11860  0024DE                     u11590:
 11861                           
 11862                           ; BSR set to: 0
 11863  0024DE  0E1E               	movlw	30
 11864  0024E0  EF7A  F00B         	goto	L24
 11865  0024E4                     l822:
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;TabelasUmidade.h: 480: else
 11869                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11870                           
 11871                           ; BSR set to: 0
 11872  0024E4  0E8D               	movlw	141
 11873  0024E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11874  0024E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11875  0024EA  A4D8               	btfss	status,2,c
 11876  0024EC  D003               	goto	l824
 11877  0024EE                     u11600:
 11878                           
 11879                           ; BSR set to: 0
 11880  0024EE  0E1D               	movlw	29
 11881  0024F0  EF7A  F00B         	goto	L24
 11882  0024F4                     l824:
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;TabelasUmidade.h: 482: else
 11886                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11887                           
 11888                           ; BSR set to: 0
 11889  0024F4  0E8E               	movlw	142
 11890  0024F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11891  0024F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11892  0024FA  A4D8               	btfss	status,2,c
 11893  0024FC  D003               	goto	l826
 11894  0024FE                     u11610:
 11895                           
 11896                           ; BSR set to: 0
 11897  0024FE  0E1C               	movlw	28
 11898  002500  EF7A  F00B         	goto	L24
 11899  002504                     l826:
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;TabelasUmidade.h: 484: else
 11903                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11904                           
 11905                           ; BSR set to: 0
 11906  002504  0E8F               	movlw	143
 11907  002506  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11908  002508  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11909  00250A  A4D8               	btfss	status,2,c
 11910  00250C  D003               	goto	l828
 11911  00250E                     u11620:
 11912                           
 11913                           ; BSR set to: 0
 11914  00250E  0E1B               	movlw	27
 11915  002510  EF7A  F00B         	goto	L24
 11916  002514                     l828:
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;TabelasUmidade.h: 486: else
 11920                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11921                           
 11922                           ; BSR set to: 0
 11923  002514  0E90               	movlw	144
 11924  002516  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11925  002518  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11926  00251A  A4D8               	btfss	status,2,c
 11927  00251C  D003               	goto	l830
 11928  00251E                     u11630:
 11929                           
 11930                           ; BSR set to: 0
 11931  00251E  0E1A               	movlw	26
 11932  002520  EF7A  F00B         	goto	L24
 11933  002524                     l830:
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;TabelasUmidade.h: 488: else
 11937                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11938                           
 11939                           ; BSR set to: 0
 11940  002524  0E91               	movlw	145
 11941  002526  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11942  002528  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11943  00252A  A4D8               	btfss	status,2,c
 11944  00252C  D003               	goto	l832
 11945  00252E                     u11640:
 11946                           
 11947                           ; BSR set to: 0
 11948  00252E  0E19               	movlw	25
 11949  002530  EF7A  F00B         	goto	L24
 11950  002534                     l832:
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;TabelasUmidade.h: 490: else
 11954                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11955                           
 11956                           ; BSR set to: 0
 11957  002534  0E92               	movlw	146
 11958  002536  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11959  002538  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11960  00253A  A4D8               	btfss	status,2,c
 11961  00253C  D003               	goto	l834
 11962  00253E                     u11650:
 11963                           
 11964                           ; BSR set to: 0
 11965  00253E  0E18               	movlw	24
 11966  002540  EF7A  F00B         	goto	L24
 11967  002544                     l834:
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;TabelasUmidade.h: 492: else
 11971                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11972                           
 11973                           ; BSR set to: 0
 11974  002544  0E93               	movlw	147
 11975  002546  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11976  002548  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11977  00254A  A4D8               	btfss	status,2,c
 11978  00254C  D003               	goto	l836
 11979  00254E                     u11660:
 11980                           
 11981                           ; BSR set to: 0
 11982  00254E  0E17               	movlw	23
 11983  002550  EF7A  F00B         	goto	L24
 11984  002554                     l836:
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;TabelasUmidade.h: 494: else
 11988                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11989                           
 11990                           ; BSR set to: 0
 11991  002554  0E94               	movlw	148
 11992  002556  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11993  002558  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11994  00255A  A4D8               	btfss	status,2,c
 11995  00255C  D003               	goto	l838
 11996  00255E                     u11670:
 11997                           
 11998                           ; BSR set to: 0
 11999  00255E  0E16               	movlw	22
 12000  002560  EF7A  F00B         	goto	L24
 12001  002564                     l838:
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;TabelasUmidade.h: 496: else
 12005                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 12006                           
 12007                           ; BSR set to: 0
 12008  002564  0E95               	movlw	149
 12009  002566  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12010  002568  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12011  00256A  A4D8               	btfss	status,2,c
 12012  00256C  D003               	goto	l840
 12013  00256E                     u11680:
 12014                           
 12015                           ; BSR set to: 0
 12016  00256E  0E15               	movlw	21
 12017  002570  EF7A  F00B         	goto	L24
 12018  002574                     l840:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;TabelasUmidade.h: 498: else
 12022                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 12023                           
 12024                           ; BSR set to: 0
 12025  002574  0E96               	movlw	150
 12026  002576  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12027  002578  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12028  00257A  A4D8               	btfss	status,2,c
 12029  00257C  D003               	goto	l842
 12030  00257E                     u11690:
 12031                           
 12032                           ; BSR set to: 0
 12033  00257E  0E14               	movlw	20
 12034  002580  EF7A  F00B         	goto	L24
 12035  002584                     l842:
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;TabelasUmidade.h: 500: else
 12039                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 12040                           
 12041                           ; BSR set to: 0
 12042  002584  0E97               	movlw	151
 12043  002586  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12044  002588  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12045  00258A  A4D8               	btfss	status,2,c
 12046  00258C  D003               	goto	l844
 12047  00258E                     u11700:
 12048                           
 12049                           ; BSR set to: 0
 12050  00258E  0E13               	movlw	19
 12051  002590  EF7A  F00B         	goto	L24
 12052  002594                     l844:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;TabelasUmidade.h: 502: else
 12056                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 12057                           
 12058                           ; BSR set to: 0
 12059  002594  0E98               	movlw	152
 12060  002596  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12061  002598  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12062  00259A  A4D8               	btfss	status,2,c
 12063  00259C  D003               	goto	l846
 12064  00259E                     u11710:
 12065                           
 12066                           ; BSR set to: 0
 12067  00259E  0E12               	movlw	18
 12068  0025A0  EF7A  F00B         	goto	L24
 12069  0025A4                     l846:
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;TabelasUmidade.h: 504: else
 12073                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 12074                           
 12075                           ; BSR set to: 0
 12076  0025A4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12077  0025A6  D011               	goto	l848
 12078  0025A8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12079  0025AA  E104               	bnz	u11720
 12080  0025AC  0E99               	movlw	153
 12081  0025AE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12082  0025B0  A0D8               	btfss	status,0,c
 12083  0025B2  D00B               	goto	l848
 12084  0025B4                     u11720:
 12085                           
 12086                           ; BSR set to: 0
 12087  0025B4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12088  0025B6  D006               	goto	u11730
 12089  0025B8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12090  0025BA  E107               	bnz	l7814
 12091  0025BC  0E9D               	movlw	157
 12092  0025BE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12093  0025C0  B0D8               	btfsc	status,0,c
 12094  0025C2  D003               	goto	l848
 12095  0025C4                     u11730:
 12096                           
 12097                           ; BSR set to: 0
 12098  0025C4  0E11               	movlw	17
 12099  0025C6  EF7A  F00B         	goto	L24
 12100  0025CA                     l848:
 12101  0025CA                     l7814:
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;TabelasUmidade.h: 506: else
 12105                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 12106  0025CA  0E9D               	movlw	157
 12107  0025CC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 12108  0025CE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12109  0025D0  A4D8               	btfss	status,2,c
 12110  0025D2  D003               	goto	l850
 12111  0025D4                     u11740:
 12112                           
 12113                           ; BSR set to: 0
 12114  0025D4  0E10               	movlw	16
 12115  0025D6  EF7A  F00B         	goto	L24
 12116  0025DA                     l850:
 12117                           
 12118                           ; BSR set to: 0
 12119                           ;TabelasUmidade.h: 508: else
 12120                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 12121                           
 12122                           ; BSR set to: 0
 12123  0025DA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 12124  0025DC  D014               	goto	l630
 12125  0025DE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 12126  0025E0  E104               	bnz	u11750
 12127  0025E2  0E9E               	movlw	158
 12128  0025E4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 12129  0025E6  A0D8               	btfss	status,0,c
 12130  0025E8  D00E               	goto	l630
 12131  0025EA                     u11750:
 12132                           
 12133                           ; BSR set to: 0
 12134  0025EA  0E0F               	movlw	15
 12135  0025EC  EF7A  F00B         	goto	L24
 12136  0025F0                     l517:
 12137                           
 12138                           ; BSR set to: 0
 12139                           
 12140                           ; BSR set to: 0
 12141  0025F0  51ED               	movf	_clima& (0+255),w,b
 12142                           
 12143                           ; Switch size 1, requested type "space"
 12144                           ; Number of cases is 3, Range of values is 1 to 3
 12145                           ; switch strategies available:
 12146                           ; Name         Instructions Cycles
 12147                           ; simple_byte           10     6 (average)
 12148                           ;	Chosen strategy is simple_byte
 12149  0025F2  0A01               	xorlw	1	; case 1
 12150  0025F4  B4D8               	btfsc	status,2,c
 12151  0025F6  EF45  F00E         	goto	l518
 12152  0025FA  0A03               	xorlw	3	; case 2
 12153  0025FC  B4D8               	btfsc	status,2,c
 12154  0025FE  D495               	goto	l631
 12155  002600  0A01               	xorlw	1	; case 3
 12156  002602  B4D8               	btfsc	status,2,c
 12157  002604  D618               	goto	l745
 12158  002606                     l630:
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;TabelasUmidade.h: 512: }
 12162                           ;TabelasUmidade.h: 513: return _umd;
 12163                           
 12164                           ; BSR set to: 0
 12165                           
 12166                           ; BSR set to: 0
 12167  002606  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 12168  00260A  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 12169                           
 12170                           ; BSR set to: 0
 12171  00260C  0012               	return		;funcret
 12172  00260E                     __end_of_tabelaUmidade:
 12173                           	opt stack 0
 12174                           tblptru	equ	0xFF8
 12175                           tblptrh	equ	0xFF7
 12176                           tblptrl	equ	0xFF6
 12177                           tablat	equ	0xFF5
 12178                           prodh	equ	0xFF4
 12179                           prodl	equ	0xFF3
 12180                           intcon	equ	0xFF2
 12181                           intcon2	equ	0xFF1
 12182                           intcon3	equ	0xFF0
 12183                           postinc0	equ	0xFEE
 12184                           wreg	equ	0xFE8
 12185                           postdec1	equ	0xFE5
 12186                           fsr1l	equ	0xFE1
 12187                           indf2	equ	0xFDF
 12188                           fsr2h	equ	0xFDA
 12189                           fsr2l	equ	0xFD9
 12190                           status	equ	0xFD8
 12191                           
 12192 ;; *************** function _setRangeValor *****************
 12193 ;; Defined at:
 12194 ;;		line 76 in file "src/FuncoesControlador.h"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  _acao           1    wreg     unsigned char 
 12197 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 12198 ;;		 -> t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), t_religar_ventoinha_automatica(1), 
 12199 ;;		 -> h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1), t_buzzer_religar(1), 
 12200 ;;		 -> t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), h_modo_seguranca(1), 
 12201 ;;		 -> h_venotinha(1), h_flap(1), h_abafador(1), senha_desbloqueio_func(1), 
 12202 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 12203 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 12204 ;;		 -> clima(1), 
 12205 ;;  _min            1    7[BANK0 ] unsigned char 
 12206 ;;  _max            1    8[BANK0 ] unsigned char 
 12207 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  _acao           1   13[BANK0 ] unsigned char 
 12210 ;;  _aux            2   14[BANK0 ] int 
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12220 ;;      Params:         0       5       0       0       0       0       0       0       0
 12221 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12222 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12223 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12224 ;;Total ram usage:       11 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    9
 12227 ;; This function calls:
 12228 ;;		_writeEEPROM_ext
 12229 ;; This function is called by:
 12230 ;;		_main
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text4
 12235  0051A6                     __ptext4:
 12236                           	opt stack 0
 12237  0051A6                     _setRangeValor:
 12238                           	opt stack 21
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;incstack = 0
 12242                           ;setRangeValor@_acao stored from wreg
 12243  0051A6  0100               	movlb	0	; () banked
 12244  0051A8  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12245                           
 12246                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12247  0051AA  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12248  0051AE  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12249  0051B2  50DF               	movf	indf2,w,c
 12250  0051B4  0100               	movlb	0	; () banked
 12251  0051B6  6F6A               	movwf	??_setRangeValor& (0+255),b
 12252  0051B8  516A               	movf	??_setRangeValor& (0+255),w,b
 12253  0051BA  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12254  0051BC  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12255                           
 12256                           ;FuncoesControlador.h: 78: switch (_acao) {
 12257  0051BE  D02C               	goto	l934
 12258  0051C0                     
 12259                           ; BSR set to: 0
 12260                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12261                           
 12262                           ; BSR set to: 0
 12263  0051C0  5168               	movf	setRangeValor@_max& (0+255),w,b
 12264  0051C2  6F6A               	movwf	??_setRangeValor& (0+255),b
 12265  0051C4  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12266  0051C6  516A               	movf	??_setRangeValor& (0+255),w,b
 12267  0051C8  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12268  0051CA  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12269  0051CC  0A80               	xorlw	128
 12270  0051CE  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12271  0051D0  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12272  0051D2  0A80               	xorlw	128
 12273  0051D4  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12274  0051D6  B0D8               	btfsc	status,0,c
 12275  0051D8  D003               	goto	l937
 12276                           
 12277                           ; BSR set to: 0
 12278  0051DA  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12279  0051DC  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12280  0051DE  D013               	goto	L27
 12281  0051E0                     l937:
 12282                           
 12283                           ; BSR set to: 0
 12284  0051E0  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12285  0051E4  D017               	goto	L28
 12286  0051E6                     
 12287                           ; BSR set to: 0
 12288                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12289                           
 12290                           ; BSR set to: 0
 12291  0051E6  5167               	movf	setRangeValor@_min& (0+255),w,b
 12292  0051E8  6F6A               	movwf	??_setRangeValor& (0+255),b
 12293  0051EA  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12294  0051EC  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12295  0051EE  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12296  0051F0  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12297  0051F2  0A80               	xorlw	128
 12298  0051F4  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12299  0051F6  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12300  0051F8  0A80               	xorlw	128
 12301  0051FA  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12302  0051FC  B0D8               	btfsc	status,0,c
 12303  0051FE  D008               	goto	l943
 12304                           
 12305                           ; BSR set to: 0
 12306  005200  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12307  005202  A0D8               	btfss	status,0,c
 12308  005204  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12309  005206                     L27:
 12310  005206  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12311  00520A  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12312  00520E  D00B               	goto	l940
 12313  005210                     l943:
 12314                           
 12315                           ; BSR set to: 0
 12316  005210  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12317  005214                     L28:
 12318  005214  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;FuncoesControlador.h: 85: }
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;FuncoesControlador.h: 84: break;
 12325  005216  D007               	goto	l940
 12326  005218                     l934:
 12327                           
 12328                           ; BSR set to: 0
 12329                           
 12330                           ; BSR set to: 0
 12331  005218  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12332                           
 12333                           ; Switch size 1, requested type "space"
 12334                           ; Number of cases is 2, Range of values is 43 to 45
 12335                           ; switch strategies available:
 12336                           ; Name         Instructions Cycles
 12337                           ; simple_byte            7     4 (average)
 12338                           ;	Chosen strategy is simple_byte
 12339  00521A  0A2B               	xorlw	43	; case 43
 12340  00521C  B4D8               	btfsc	status,2,c
 12341  00521E  D7D0               	goto	l935
 12342  005220  0A06               	xorlw	6	; case 45
 12343  005222  B4D8               	btfsc	status,2,c
 12344  005224  D7E0               	goto	l941
 12345  005226                     l940:
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12349                           
 12350                           ; BSR set to: 0
 12351  005226  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12352  005228  B4D8               	btfsc	status,2,c
 12353  00522A  D005               	goto	l946
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12357  00522C  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12358  005230  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12359  005232  EC57  F02D         	call	_writeEEPROM_ext
 12360  005236                     l946:
 12361                           
 12362                           ;FuncoesControlador.h: 88: }
 12363                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12364  005236  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12365  00523A  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12366  00523E  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12367  005242  0012               	return		;funcret
 12368  005244                     __end_of_setRangeValor:
 12369                           	opt stack 0
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           intcon3	equ	0xFF0
 12379                           postinc0	equ	0xFEE
 12380                           wreg	equ	0xFE8
 12381                           postdec1	equ	0xFE5
 12382                           fsr1l	equ	0xFE1
 12383                           indf2	equ	0xFDF
 12384                           fsr2h	equ	0xFDA
 12385                           fsr2l	equ	0xFD9
 12386                           status	equ	0xFD8
 12387                           
 12388 ;; *************** function _readEEPROM_ext *****************
 12389 ;; Defined at:
 12390 ;;		line 26 in file "src/Eeprom_ext.h"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  adress          1    wreg     unsigned char 
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;  adress          1    5[BANK0 ] unsigned char 
 12395 ;;  data            1    6[BANK0 ] unsigned char 
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  1    wreg      unsigned char 
 12398 ;; Registers used:
 12399 ;;		wreg, status,2, status,0, cstack
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12405 ;;      Params:         0       0       0       0       0       0       0       0       0
 12406 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12407 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12408 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12409 ;;Total ram usage:        2 bytes
 12410 ;; Hardware stack levels used:    1
 12411 ;; Hardware stack levels required when called:    8
 12412 ;; This function calls:
 12413 ;;		_I2C_Read
 12414 ;;		_I2C_Restart
 12415 ;;		_I2C_Start
 12416 ;;		_I2C_Stop
 12417 ;;		_I2C_Write
 12418 ;; This function is called by:
 12419 ;;		_main
 12420 ;;		_readEEPROM16_ext
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           	psect	text5
 12425  00598C                     __ptext5:
 12426                           	opt stack 0
 12427  00598C                     _readEEPROM_ext:
 12428                           	opt stack 22
 12429                           
 12430                           ;incstack = 0
 12431                           ;readEEPROM_ext@adress stored from wreg
 12432  00598C  0100               	movlb	0	; () banked
 12433  00598E  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12434                           
 12435                           ;Eeprom_ext.h: 27: I2C_Start();
 12436  005990  EC87  F02F         	call	_I2C_Start	;wreg free
 12437                           
 12438                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12439  005994  0E00               	movlw	0
 12440  005996  0100               	movlb	0	; () banked
 12441  005998  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12442  00599A  0EA0               	movlw	160
 12443  00599C  6F61               	movwf	I2C_Write@d& (0+255),b
 12444  00599E  EC75  F02F         	call	_I2C_Write	;wreg free
 12445                           
 12446                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12447  0059A2  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12448  0059A6  0100               	movlb	0	; () banked
 12449  0059A8  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12450  0059AA  EC75  F02F         	call	_I2C_Write	;wreg free
 12451                           
 12452                           ;Eeprom_ext.h: 31: I2C_Restart();
 12453  0059AE  EC7F  F02F         	call	_I2C_Restart	;wreg free
 12454                           
 12455                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12456  0059B2  0E00               	movlw	0
 12457  0059B4  0100               	movlb	0	; () banked
 12458  0059B6  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12459  0059B8  0EA1               	movlw	161
 12460  0059BA  6F61               	movwf	I2C_Write@d& (0+255),b
 12461  0059BC  EC75  F02F         	call	_I2C_Write	;wreg free
 12462                           
 12463                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12464  0059C0  0E00               	movlw	0
 12465  0059C2  0100               	movlb	0	; () banked
 12466  0059C4  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12467  0059C6  0E00               	movlw	0
 12468  0059C8  6F61               	movwf	I2C_Read@a& (0+255),b
 12469  0059CA  ECEF  F02D         	call	_I2C_Read	;wreg free
 12470  0059CE  0100               	movlb	0	; () banked
 12471  0059D0  5161               	movf	?_I2C_Read& (0+255),w,b
 12472  0059D2  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12473                           
 12474                           ;Eeprom_ext.h: 34: I2C_Stop();
 12475  0059D4  EC83  F02F         	call	_I2C_Stop	;wreg free
 12476                           
 12477                           ;Eeprom_ext.h: 35: return data;
 12478  0059D8  0100               	movlb	0	; () banked
 12479  0059DA  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12480  0059DC  0012               	return	
 12481  0059DE                     __end_of_readEEPROM_ext:
 12482                           	opt stack 0
 12483                           tblptru	equ	0xFF8
 12484                           tblptrh	equ	0xFF7
 12485                           tblptrl	equ	0xFF6
 12486                           tablat	equ	0xFF5
 12487                           prodh	equ	0xFF4
 12488                           prodl	equ	0xFF3
 12489                           intcon	equ	0xFF2
 12490                           intcon2	equ	0xFF1
 12491                           intcon3	equ	0xFF0
 12492                           postinc0	equ	0xFEE
 12493                           wreg	equ	0xFE8
 12494                           postdec1	equ	0xFE5
 12495                           fsr1l	equ	0xFE1
 12496                           indf2	equ	0xFDF
 12497                           fsr2h	equ	0xFDA
 12498                           fsr2l	equ	0xFD9
 12499                           status	equ	0xFD8
 12500                           
 12501 ;; *************** function _I2C_Restart *****************
 12502 ;; Defined at:
 12503 ;;		line 30 in file "src/I2C.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;		None
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      void 
 12510 ;; Registers used:
 12511 ;;		wreg, status,2, status,0, cstack
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12517 ;;      Params:         0       0       0       0       0       0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12520 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12521 ;;Total ram usage:        0 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:    7
 12524 ;; This function calls:
 12525 ;;		_I2C_Wait
 12526 ;; This function is called by:
 12527 ;;		_readEEPROM_ext
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text6
 12532  005EFE                     __ptext6:
 12533                           	opt stack 0
 12534  005EFE                     _I2C_Restart:
 12535                           	opt stack 22
 12536                           
 12537                           ;I2C.c: 31: I2C_Wait();
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;incstack = 0
 12541  005EFE  EC54  F02F         	call	_I2C_Wait	;wreg free
 12542                           
 12543                           ;I2C.c: 32: RSEN = 1;
 12544  005F02  82C5               	bsf	4037,1,c	;volatile
 12545  005F04  0012               	return		;funcret
 12546  005F06                     __end_of_I2C_Restart:
 12547                           	opt stack 0
 12548                           tblptru	equ	0xFF8
 12549                           tblptrh	equ	0xFF7
 12550                           tblptrl	equ	0xFF6
 12551                           tablat	equ	0xFF5
 12552                           prodh	equ	0xFF4
 12553                           prodl	equ	0xFF3
 12554                           intcon	equ	0xFF2
 12555                           intcon2	equ	0xFF1
 12556                           intcon3	equ	0xFF0
 12557                           postinc0	equ	0xFEE
 12558                           wreg	equ	0xFE8
 12559                           postdec1	equ	0xFE5
 12560                           fsr1l	equ	0xFE1
 12561                           indf2	equ	0xFDF
 12562                           fsr2h	equ	0xFDA
 12563                           fsr2l	equ	0xFD9
 12564                           status	equ	0xFD8
 12565                           
 12566 ;; *************** function _I2C_Read *****************
 12567 ;; Defined at:
 12568 ;;		line 46 in file "src/I2C.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  a               2    1[BANK0 ] unsigned short 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;  temp            2    3[BANK0 ] unsigned short 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  2    1[BANK0 ] unsigned short 
 12575 ;; Registers used:
 12576 ;;		wreg, status,2, status,0, cstack
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12582 ;;      Params:         0       2       0       0       0       0       0       0       0
 12583 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12585 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12586 ;;Total ram usage:        4 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    7
 12589 ;; This function calls:
 12590 ;;		_I2C_Wait
 12591 ;; This function is called by:
 12592 ;;		_readEEPROM_ext
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text7
 12597  005BDE                     __ptext7:
 12598                           	opt stack 0
 12599  005BDE                     _I2C_Read:
 12600                           	opt stack 22
 12601                           
 12602                           ;I2C.c: 47: unsigned short temp;
 12603                           ;I2C.c: 48: I2C_Wait();
 12604                           
 12605                           ;incstack = 0
 12606  005BDE  EC54  F02F         	call	_I2C_Wait	;wreg free
 12607                           
 12608                           ;I2C.c: 49: RCEN = 1;
 12609  005BE2  86C5               	bsf	4037,3,c	;volatile
 12610                           
 12611                           ;I2C.c: 50: I2C_Wait();
 12612  005BE4  EC54  F02F         	call	_I2C_Wait	;wreg free
 12613                           
 12614                           ;I2C.c: 51: temp = SSPBUF;
 12615  005BE8  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12616  005BEC  0100               	movlb	0	; () banked
 12617  005BEE  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12618                           
 12619                           ;I2C.c: 52: I2C_Wait();
 12620  005BF0  EC54  F02F         	call	_I2C_Wait	;wreg free
 12621                           
 12622                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12623  005BF4  0100               	movlb	0	; () banked
 12624  005BF6  5161               	movf	I2C_Read@a& (0+255),w,b
 12625  005BF8  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12626  005BFA  A4D8               	btfss	status,2,c
 12627  005BFC  D002               	goto	u8720
 12628  005BFE  8AC5               	bsf	4037,5,c	;volatile
 12629  005C00  D001               	goto	u8735
 12630  005C02                     u8720:
 12631  005C02  9AC5               	bcf	4037,5,c	;volatile
 12632  005C04                     u8735:
 12633                           
 12634                           ;I2C.c: 54: ACKEN = 1;
 12635  005C04  88C5               	bsf	4037,4,c	;volatile
 12636                           
 12637                           ;I2C.c: 55: return temp;
 12638  005C06  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12639  005C0A  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12640  005C0E  0012               	return	
 12641  005C10                     __end_of_I2C_Read:
 12642                           	opt stack 0
 12643                           tblptru	equ	0xFF8
 12644                           tblptrh	equ	0xFF7
 12645                           tblptrl	equ	0xFF6
 12646                           tablat	equ	0xFF5
 12647                           prodh	equ	0xFF4
 12648                           prodl	equ	0xFF3
 12649                           intcon	equ	0xFF2
 12650                           intcon2	equ	0xFF1
 12651                           intcon3	equ	0xFF0
 12652                           postinc0	equ	0xFEE
 12653                           wreg	equ	0xFE8
 12654                           postdec1	equ	0xFE5
 12655                           fsr1l	equ	0xFE1
 12656                           indf2	equ	0xFDF
 12657                           fsr2h	equ	0xFDA
 12658                           fsr2l	equ	0xFD9
 12659                           status	equ	0xFD8
 12660                           
 12661 ;; *************** function _getSensors *****************
 12662 ;; Defined at:
 12663 ;;		line 22 in file "src/ADC.h"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;  auxx            3   77[BANK0 ] float 
 12668 ;;  aux             3   84[BANK0 ] float 
 12669 ;;  i               1   83[BANK0 ] unsigned char 
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  2  1223[None  ] int 
 12672 ;; Registers used:
 12673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12679 ;;      Params:         0       0       0       0       0       0       0       0       0
 12680 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12682 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12683 ;;Total ram usage:       18 bytes
 12684 ;; Hardware stack levels used:    1
 12685 ;; Hardware stack levels required when called:    8
 12686 ;; This function calls:
 12687 ;;		___ftadd
 12688 ;;		___ftdiv
 12689 ;;		___ftge
 12690 ;;		___ftmul
 12691 ;;		___fttol
 12692 ;;		___lwtoft
 12693 ;;		_readADC
 12694 ;; This function is called by:
 12695 ;;		_main
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text8
 12700  003106                     __ptext8:
 12701                           	opt stack 0
 12702  003106                     _getSensors:
 12703                           	opt stack 22
 12704                           
 12705                           ;ADC.h: 23: unsigned char i = 0;
 12706                           
 12707                           ;incstack = 0
 12708  003106  0E00               	movlw	0
 12709  003108  0100               	movlb	0	; () banked
 12710  00310A  6FB3               	movwf	getSensors@i& (0+255),b
 12711                           
 12712                           ;ADC.h: 24: float aux = 0;
 12713  00310C  0E00               	movlw	0
 12714  00310E  6FB4               	movwf	getSensors@aux& (0+255),b
 12715  003110  0E00               	movlw	0
 12716  003112  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12717  003114  0E00               	movlw	0
 12718  003116  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12719                           
 12720                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12721  003118  503C               	movf	_t_leitura_adc,w,c
 12722  00311A  A4D8               	btfss	status,2,c
 12723  00311C  D1F3               	goto	l1224
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;ADC.h: 27: t_leitura_adc = 10;
 12727  00311E  0E0A               	movlw	10
 12728  003120  6E3C               	movwf	_t_leitura_adc,c
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12732  003122  0E0A               	movlw	10
 12733  003124  603B               	cpfslt	_media_adc,c
 12734  003126  D005               	goto	l1226
 12735                           
 12736                           ; BSR set to: 0
 12737  003128  2A3B               	incf	_media_adc,f,c
 12738  00312A  C03B  F0AB         	movff	_media_adc,_getSensors$1521
 12739  00312E  6BAC               	clrf	(_getSensors$1521+1)& (0+255),b
 12740  003130  D004               	goto	l1228
 12741  003132                     l1226:
 12742                           
 12743                           ; BSR set to: 0
 12744                           
 12745                           ; BSR set to: 0
 12746  003132  0E00               	movlw	0
 12747  003134  6FAC               	movwf	(_getSensors$1521+1)& (0+255),b
 12748  003136  0E00               	movlw	0
 12749  003138  6FAB               	movwf	_getSensors$1521& (0+255),b
 12750  00313A                     l1228:
 12751                           
 12752                           ; BSR set to: 0
 12753                           
 12754                           ; BSR set to: 0
 12755  00313A  C0AB  F03B         	movff	_getSensors$1521,_media_adc
 12756                           
 12757                           ;ADC.h: 31: aux = 0;
 12758  00313E  0E00               	movlw	0
 12759  003140  6FB4               	movwf	getSensors@aux& (0+255),b
 12760  003142  0E00               	movlw	0
 12761  003144  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12762  003146  0E00               	movlw	0
 12763  003148  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12764                           
 12765                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12766  00314A  0E00               	movlw	0
 12767  00314C  6FB3               	movwf	getSensors@i& (0+255),b
 12768  00314E                     l9102:
 12769                           
 12770                           ; BSR set to: 0
 12771  00314E  0E0B               	movlw	11
 12772  003150  65B3               	cpfsgt	getSensors@i& (0+255),b
 12773  003152  D001               	goto	l1229
 12774  003154  D042               	goto	u14080
 12775  003156                     l1229:
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12779                           
 12780                           ; BSR set to: 0
 12781  003156  0E00               	movlw	0
 12782  003158  6F7E               	movwf	___ftadd@f2& (0+255),b
 12783  00315A  0E00               	movlw	0
 12784  00315C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12785  00315E  0E42               	movlw	66
 12786  003160  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12787  003162  0E00               	movlw	0
 12788  003164  6F6F               	movwf	___ftmul@f2& (0+255),b
 12789  003166  0E61               	movlw	97
 12790  003168  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12791  00316A  0E3F               	movlw	63
 12792  00316C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12793  00316E  0E00               	movlw	0
 12794  003170  EC22  F029         	call	_readADC
 12795  003174  C060  F069         	movff	?_readADC,___lwtoft@c
 12796  003178  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12797  00317C  ECD4  F02E         	call	___lwtoft	;wreg free
 12798  003180  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12799  003184  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12800  003188  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12801  00318C  EC4B  F025         	call	___ftmul	;wreg free
 12802  003190  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12803  003194  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12804  003198  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12805  00319C  ECE8  F020         	call	___ftadd	;wreg free
 12806  0031A0  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 12807  0031A4  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 12808  0031A8  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 12809                           
 12810                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12811  0031AC  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12812  0031B0  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12813  0031B4  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12814  0031B8  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 12815  0031BC  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 12816  0031C0  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 12817  0031C4  ECE8  F020         	call	___ftadd	;wreg free
 12818  0031C8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12819  0031CC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12820  0031D0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12821  0031D4  0100               	movlb	0	; () banked
 12822  0031D6  2BB3               	incf	getSensors@i& (0+255),f,b
 12823  0031D8  D7BA               	goto	l9102
 12824  0031DA                     u14080:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;ADC.h: 34: }
 12828                           ;ADC.h: 35: aux = (aux / 12);
 12829                           
 12830                           ; BSR set to: 0
 12831  0031DA  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12832  0031DE  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12833  0031E2  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12834  0031E6  0E00               	movlw	0
 12835  0031E8  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12836  0031EA  0E40               	movlw	64
 12837  0031EC  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12838  0031EE  0E41               	movlw	65
 12839  0031F0  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12840  0031F2  EC3B  F026         	call	___ftdiv	;wreg free
 12841  0031F6  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12842  0031FA  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12843  0031FE  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12844                           
 12845                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12846  003202  0E00               	movlw	0
 12847  003204  0100               	movlb	0	; () banked
 12848  003206  6F60               	movwf	___ftge@ff1& (0+255),b
 12849  003208  0E14               	movlw	20
 12850  00320A  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12851  00320C  0E42               	movlw	66
 12852  00320E  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12853  003210  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12854  003214  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12855  003218  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12856  00321C  EC05  F02A         	call	___ftge	;wreg free
 12857  003220  0100               	movlb	0	; () banked
 12858  003222  B0D8               	btfsc	status,0,c
 12859  003224  D015               	goto	l1232
 12860                           
 12861                           ; BSR set to: 0
 12862  003226  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12863  00322A  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12864  00322E  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12865  003232  0E00               	movlw	0
 12866  003234  6F7E               	movwf	___ftadd@f2& (0+255),b
 12867  003236  0E80               	movlw	128
 12868  003238  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12869  00323A  0E3F               	movlw	63
 12870  00323C  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12871  00323E  ECE8  F020         	call	___ftadd	;wreg free
 12872  003242  C07B  F0A5         	movff	?___ftadd,_getSensors$1523
 12873  003246  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1523+1
 12874  00324A  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1523+2
 12875  00324E  D007               	goto	l1234
 12876  003250                     l1232:
 12877  003250  0E00               	movlw	0
 12878  003252  0100               	movlb	0	; () banked
 12879  003254  6FA5               	movwf	_getSensors$1523& (0+255),b
 12880  003256  0E00               	movlw	0
 12881  003258  6FA6               	movwf	(_getSensors$1523+1)& (0+255),b
 12882  00325A  0E00               	movlw	0
 12883  00325C  6FA7               	movwf	(_getSensors$1523+2)& (0+255),b
 12884  00325E                     l1234:
 12885                           
 12886                           ; BSR set to: 0
 12887  00325E  503B               	movf	_media_adc,w,c
 12888  003260  0D03               	mullw	3
 12889  003262  0E21               	movlw	low __temp
 12890  003264  24F3               	addwf	prodl,w,c
 12891  003266  6ED9               	movwf	fsr2l,c
 12892  003268  0E02               	movlw	high __temp
 12893  00326A  20F4               	addwfc	prodh,w,c
 12894  00326C  6EDA               	movwf	fsr2h,c
 12895  00326E  C0A5  FFDE         	movff	_getSensors$1523,postinc2
 12896  003272  C0A6  FFDE         	movff	_getSensors$1523+1,postinc2
 12897  003276  C0A7  FFDE         	movff	_getSensors$1523+2,postinc2
 12898                           
 12899                           ;ADC.h: 40: aux = 0;
 12900  00327A  0E00               	movlw	0
 12901  00327C  0100               	movlb	0	; () banked
 12902  00327E  6FB4               	movwf	getSensors@aux& (0+255),b
 12903  003280  0E00               	movlw	0
 12904  003282  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12905  003284  0E00               	movlw	0
 12906  003286  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12910  003288  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 12911  00328A  A4D8               	btfss	status,2,c
 12912  00328C  D07E               	goto	l1235
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;ADC.h: 42: float auxx = 0;
 12916  00328E  0E00               	movlw	0
 12917  003290  6FAD               	movwf	getSensors@auxx& (0+255),b
 12918  003292  0E00               	movlw	0
 12919  003294  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12920  003296  0E00               	movlw	0
 12921  003298  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12922                           
 12923                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12924  00329A  0E00               	movlw	0
 12925  00329C  6FB3               	movwf	getSensors@i& (0+255),b
 12926  00329E                     l9126:
 12927                           
 12928                           ; BSR set to: 0
 12929  00329E  0E0B               	movlw	11
 12930  0032A0  65B3               	cpfsgt	getSensors@i& (0+255),b
 12931  0032A2  D001               	goto	l1236
 12932  0032A4  D0BA               	goto	u14150
 12933  0032A6                     l1236:
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12937                           
 12938                           ; BSR set to: 0
 12939  0032A6  0E75               	movlw	117
 12940  0032A8  6F7E               	movwf	___ftadd@f2& (0+255),b
 12941  0032AA  0E53               	movlw	83
 12942  0032AC  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12943  0032AE  0EBF               	movlw	191
 12944  0032B0  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12945  0032B2  0E00               	movlw	0
 12946  0032B4  6F6F               	movwf	___ftmul@f2& (0+255),b
 12947  0032B6  0EA0               	movlw	160
 12948  0032B8  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12949  0032BA  0E3B               	movlw	59
 12950  0032BC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12951  0032BE  0E01               	movlw	1
 12952  0032C0  EC22  F029         	call	_readADC
 12953  0032C4  C060  F069         	movff	?_readADC,___lwtoft@c
 12954  0032C8  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12955  0032CC  ECD4  F02E         	call	___lwtoft	;wreg free
 12956  0032D0  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12957  0032D4  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12958  0032D8  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12959  0032DC  EC4B  F025         	call	___ftmul	;wreg free
 12960  0032E0  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12961  0032E4  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12962  0032E8  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12963  0032EC  ECE8  F020         	call	___ftadd	;wreg free
 12964  0032F0  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12965  0032F4  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12966  0032F8  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12967  0032FC  0E06               	movlw	6
 12968  0032FE  0100               	movlb	0	; () banked
 12969  003300  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12970  003302  0E01               	movlw	1
 12971  003304  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12972  003306  0E3D               	movlw	61
 12973  003308  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12974  00330A  EC3B  F026         	call	___ftdiv	;wreg free
 12975  00330E  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12976  003312  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12977  003316  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12978                           
 12979                           ;ADC.h: 45: if (auxx < 10) {
 12980  00331A  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12981  00331E  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12982  003322  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12983  003326  0E00               	movlw	0
 12984  003328  0100               	movlb	0	; () banked
 12985  00332A  6F63               	movwf	___ftge@ff2& (0+255),b
 12986  00332C  0E20               	movlw	32
 12987  00332E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12988  003330  0E41               	movlw	65
 12989  003332  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12990  003334  EC05  F02A         	call	___ftge	;wreg free
 12991  003338  0100               	movlb	0	; () banked
 12992  00333A  B0D8               	btfsc	status,0,c
 12993  00333C  D00F               	goto	l1238
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;ADC.h: 46: aux += 0;
 12997  00333E  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12998  003342  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12999  003346  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13000  00334A  0E00               	movlw	0
 13001  00334C  6F7E               	movwf	___ftadd@f2& (0+255),b
 13002  00334E  0E00               	movlw	0
 13003  003350  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13004  003352  0E00               	movlw	0
 13005  003354  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13006  003356  ECE8  F020         	call	___ftadd	;wreg free
 13007  00335A  D00E               	goto	L29
 13008  00335C                     l1238:
 13009                           
 13010                           ;ADC.h: 48: aux += auxx;
 13011  00335C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13012  003360  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13013  003364  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13014  003368  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 13015  00336C  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 13016  003370  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 13017  003374  ECE8  F020         	call	___ftadd	;wreg free
 13018  003378                     L29:
 13019  003378  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13020  00337C  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13021  003380  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13022  003384  0100               	movlb	0	; () banked
 13023  003386  2BB3               	incf	getSensors@i& (0+255),f,b
 13024  003388  D78A               	goto	l9126
 13025  00338A                     l1235:
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 13029                           
 13030                           ; BSR set to: 0
 13031  00338A  0E00               	movlw	0
 13032  00338C  6FB3               	movwf	getSensors@i& (0+255),b
 13033  00338E                     l9142:
 13034                           
 13035                           ; BSR set to: 0
 13036  00338E  0E0B               	movlw	11
 13037  003390  65B3               	cpfsgt	getSensors@i& (0+255),b
 13038  003392  D001               	goto	l1241
 13039  003394  D042               	goto	u14150
 13040  003396                     l1241:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13044                           
 13045                           ; BSR set to: 0
 13046  003396  0E00               	movlw	0
 13047  003398  6F7E               	movwf	___ftadd@f2& (0+255),b
 13048  00339A  0E00               	movlw	0
 13049  00339C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 13050  00339E  0E42               	movlw	66
 13051  0033A0  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 13052  0033A2  0E00               	movlw	0
 13053  0033A4  6F6F               	movwf	___ftmul@f2& (0+255),b
 13054  0033A6  0E61               	movlw	97
 13055  0033A8  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 13056  0033AA  0E3F               	movlw	63
 13057  0033AC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 13058  0033AE  0E02               	movlw	2
 13059  0033B0  EC22  F029         	call	_readADC
 13060  0033B4  C060  F069         	movff	?_readADC,___lwtoft@c
 13061  0033B8  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 13062  0033BC  ECD4  F02E         	call	___lwtoft	;wreg free
 13063  0033C0  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 13064  0033C4  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 13065  0033C8  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 13066  0033CC  EC4B  F025         	call	___ftmul	;wreg free
 13067  0033D0  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 13068  0033D4  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 13069  0033D8  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 13070  0033DC  ECE8  F020         	call	___ftadd	;wreg free
 13071  0033E0  C07B  F0B0         	movff	?___ftadd,_getSensors$2491
 13072  0033E4  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2491+1
 13073  0033E8  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2491+2
 13074                           
 13075                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13076  0033EC  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13077  0033F0  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13078  0033F4  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13079  0033F8  C0B0  F07E         	movff	_getSensors$2491,___ftadd@f2
 13080  0033FC  C0B1  F07F         	movff	_getSensors$2491+1,___ftadd@f2+1
 13081  003400  C0B2  F080         	movff	_getSensors$2491+2,___ftadd@f2+2
 13082  003404  ECE8  F020         	call	___ftadd	;wreg free
 13083  003408  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13084  00340C  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13085  003410  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13086  003414  0100               	movlb	0	; () banked
 13087  003416  2BB3               	incf	getSensors@i& (0+255),f,b
 13088  003418  D7BA               	goto	l9142
 13089  00341A                     u14150:
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;ADC.h: 54: }
 13093                           ;ADC.h: 55: }
 13094                           ;ADC.h: 57: aux = (aux / 12);
 13095                           
 13096                           ; BSR set to: 0
 13097                           
 13098                           ; BSR set to: 0
 13099  00341A  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13100  00341E  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13101  003422  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13102  003426  0E00               	movlw	0
 13103  003428  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13104  00342A  0E40               	movlw	64
 13105  00342C  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13106  00342E  0E41               	movlw	65
 13107  003430  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13108  003432  EC3B  F026         	call	___ftdiv	;wreg free
 13109  003436  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 13110  00343A  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 13111  00343E  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 13112                           
 13113                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 13114  003442  0100               	movlb	0	; () banked
 13115  003444  05F7               	decf	_tipo_sensor_umidade& (0+255),w,b
 13116  003446  A4D8               	btfss	status,2,c
 13117  003448  D02E               	goto	l1245
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;ADC.h: 59: if (aux > 100) aux = 100;
 13121  00344A  0E00               	movlw	0
 13122  00344C  6F60               	movwf	___ftge@ff1& (0+255),b
 13123  00344E  0EC8               	movlw	200
 13124  003450  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13125  003452  0E42               	movlw	66
 13126  003454  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13127  003456  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 13128  00345A  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 13129  00345E  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 13130  003462  EC05  F02A         	call	___ftge	;wreg free
 13131  003466  0100               	movlb	0	; () banked
 13132  003468  B0D8               	btfsc	status,0,c
 13133  00346A  D006               	goto	l1244
 13134                           
 13135                           ; BSR set to: 0
 13136  00346C  0E00               	movlw	0
 13137  00346E  6FB4               	movwf	getSensors@aux& (0+255),b
 13138  003470  0EC8               	movlw	200
 13139  003472  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13140  003474  0E42               	movlw	66
 13141  003476  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13142  003478                     l1244:
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;ADC.h: 60: if (aux < 10) aux = 0;
 13146                           
 13147                           ; BSR set to: 0
 13148  003478  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13149  00347C  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13150  003480  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13151  003484  0E00               	movlw	0
 13152  003486  6F63               	movwf	___ftge@ff2& (0+255),b
 13153  003488  0E20               	movlw	32
 13154  00348A  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13155  00348C  0E41               	movlw	65
 13156  00348E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13157  003490  EC05  F02A         	call	___ftge	;wreg free
 13158  003494  0100               	movlb	0	; () banked
 13159  003496  B0D8               	btfsc	status,0,c
 13160  003498  D006               	goto	l1245
 13161                           
 13162                           ; BSR set to: 0
 13163  00349A  0E00               	movlw	0
 13164  00349C  6FB4               	movwf	getSensors@aux& (0+255),b
 13165  00349E  0E00               	movlw	0
 13166  0034A0  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13167  0034A2  0E00               	movlw	0
 13168  0034A4  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13169  0034A6                     l1245:
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;ADC.h: 61: }
 13173                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 13174                           
 13175                           ; BSR set to: 0
 13176                           
 13177                           ; BSR set to: 0
 13178  0034A6  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13179  0034AA  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13180  0034AE  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13181  0034B2  0E00               	movlw	0
 13182  0034B4  6F63               	movwf	___ftge@ff2& (0+255),b
 13183  0034B6  0E20               	movlw	32
 13184  0034B8  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13185  0034BA  0E42               	movlw	66
 13186  0034BC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13187  0034BE  EC05  F02A         	call	___ftge	;wreg free
 13188  0034C2  0100               	movlb	0	; () banked
 13189  0034C4  B0D8               	btfsc	status,0,c
 13190  0034C6  D003               	goto	u14200
 13191                           
 13192                           ; BSR set to: 0
 13193  0034C8  51F7               	movf	_tipo_sensor_umidade& (0+255),w,b
 13194  0034CA  B4D8               	btfsc	status,2,c
 13195  0034CC  D007               	goto	l1247
 13196  0034CE                     u14200:
 13197                           
 13198                           ; BSR set to: 0
 13199  0034CE  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1525
 13200  0034D2  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1525+1
 13201  0034D6  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1525+2
 13202  0034DA  D006               	goto	l1249
 13203  0034DC                     l1247:
 13204                           
 13205                           ; BSR set to: 0
 13206                           
 13207                           ; BSR set to: 0
 13208  0034DC  0E00               	movlw	0
 13209  0034DE  6FA8               	movwf	_getSensors$1525& (0+255),b
 13210  0034E0  0E00               	movlw	0
 13211  0034E2  6FA9               	movwf	(_getSensors$1525+1)& (0+255),b
 13212  0034E4  0E00               	movlw	0
 13213  0034E6  6FAA               	movwf	(_getSensors$1525+2)& (0+255),b
 13214  0034E8                     l1249:
 13215                           
 13216                           ; BSR set to: 0
 13217                           
 13218                           ; BSR set to: 0
 13219  0034E8  503B               	movf	_media_adc,w,c
 13220  0034EA  0D03               	mullw	3
 13221  0034EC  0E00               	movlw	low __umid
 13222  0034EE  24F3               	addwf	prodl,w,c
 13223  0034F0  6ED9               	movwf	fsr2l,c
 13224  0034F2  0E02               	movlw	high __umid
 13225  0034F4  20F4               	addwfc	prodh,w,c
 13226  0034F6  6EDA               	movwf	fsr2h,c
 13227  0034F8  C0A8  FFDE         	movff	_getSensors$1525,postinc2
 13228  0034FC  C0A9  FFDE         	movff	_getSensors$1525+1,postinc2
 13229  003500  C0AA  FFDE         	movff	_getSensors$1525+2,postinc2
 13230  003504                     l1224:
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;ADC.h: 63: }
 13234                           ;ADC.h: 67: i = 0;
 13235                           
 13236                           ; BSR set to: 0
 13237  003504  0E00               	movlw	0
 13238  003506  6FB3               	movwf	getSensors@i& (0+255),b
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;ADC.h: 68: aux = 0;
 13242  003508  0E00               	movlw	0
 13243  00350A  6FB4               	movwf	getSensors@aux& (0+255),b
 13244  00350C  0E00               	movlw	0
 13245  00350E  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13246  003510  0E00               	movlw	0
 13247  003512  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13251  003514  0E00               	movlw	0
 13252  003516  6FB3               	movwf	getSensors@i& (0+255),b
 13253  003518                     l9178:
 13254                           
 13255                           ; BSR set to: 0
 13256  003518  0E09               	movlw	9
 13257  00351A  65B3               	cpfsgt	getSensors@i& (0+255),b
 13258  00351C  D001               	goto	l1252
 13259  00351E  D01F               	goto	u14220
 13260  003520                     l1252:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;ADC.h: 70: aux += _temp[i];
 13264                           
 13265                           ; BSR set to: 0
 13266  003520  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13267  003524  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13268  003528  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13269  00352C  51B3               	movf	getSensors@i& (0+255),w,b
 13270  00352E  0D03               	mullw	3
 13271  003530  0E21               	movlw	low __temp
 13272  003532  24F3               	addwf	prodl,w,c
 13273  003534  6ED9               	movwf	fsr2l,c
 13274  003536  0E02               	movlw	high __temp
 13275  003538  20F4               	addwfc	prodh,w,c
 13276  00353A  6EDA               	movwf	fsr2h,c
 13277  00353C  CFDE F07E          	movff	postinc2,___ftadd@f2
 13278  003540  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13279  003544  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13280  003548  ECE8  F020         	call	___ftadd	;wreg free
 13281  00354C  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13282  003550  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13283  003554  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13284  003558  0100               	movlb	0	; () banked
 13285  00355A  2BB3               	incf	getSensors@i& (0+255),f,b
 13286  00355C  D7DD               	goto	l9178
 13287  00355E                     u14220:
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;ADC.h: 71: }
 13291                           ;ADC.h: 72: temp = (aux / 10);
 13292                           
 13293                           ; BSR set to: 0
 13294  00355E  0E00               	movlw	0
 13295  003560  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13296  003562  0E20               	movlw	32
 13297  003564  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13298  003566  0E41               	movlw	65
 13299  003568  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13300  00356A  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13301  00356E  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13302  003572  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13303  003576  EC3B  F026         	call	___ftdiv	;wreg free
 13304  00357A  C087  F096         	movff	?___ftdiv,___fttol@f1
 13305  00357E  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13306  003582  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13307  003586  ECCF  F024         	call	___fttol	;wreg free
 13308  00358A  0100               	movlb	0	; () banked
 13309  00358C  5196               	movf	?___fttol& (0+255),w,b
 13310  00358E  6FFD               	movwf	_temp& (0+255),b
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;ADC.h: 76: i = 0;
 13314  003590  0E00               	movlw	0
 13315  003592  6FB3               	movwf	getSensors@i& (0+255),b
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;ADC.h: 77: aux = 0;
 13319  003594  0E00               	movlw	0
 13320  003596  6FB4               	movwf	getSensors@aux& (0+255),b
 13321  003598  0E00               	movlw	0
 13322  00359A  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13323  00359C  0E00               	movlw	0
 13324  00359E  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13328  0035A0  0E00               	movlw	0
 13329  0035A2  6FB3               	movwf	getSensors@i& (0+255),b
 13330  0035A4                     l9196:
 13331                           
 13332                           ; BSR set to: 0
 13333  0035A4  0E09               	movlw	9
 13334  0035A6  65B3               	cpfsgt	getSensors@i& (0+255),b
 13335  0035A8  D001               	goto	l1254
 13336  0035AA  D01F               	goto	u14240
 13337  0035AC                     l1254:
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;ADC.h: 79: aux += _umid[i];
 13341                           
 13342                           ; BSR set to: 0
 13343  0035AC  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13344  0035B0  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13345  0035B4  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13346  0035B8  51B3               	movf	getSensors@i& (0+255),w,b
 13347  0035BA  0D03               	mullw	3
 13348  0035BC  0E00               	movlw	low __umid
 13349  0035BE  24F3               	addwf	prodl,w,c
 13350  0035C0  6ED9               	movwf	fsr2l,c
 13351  0035C2  0E02               	movlw	high __umid
 13352  0035C4  20F4               	addwfc	prodh,w,c
 13353  0035C6  6EDA               	movwf	fsr2h,c
 13354  0035C8  CFDE F07E          	movff	postinc2,___ftadd@f2
 13355  0035CC  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13356  0035D0  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13357  0035D4  ECE8  F020         	call	___ftadd	;wreg free
 13358  0035D8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13359  0035DC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13360  0035E0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13361  0035E4  0100               	movlb	0	; () banked
 13362  0035E6  2BB3               	incf	getSensors@i& (0+255),f,b
 13363  0035E8  D7DD               	goto	l9196
 13364  0035EA                     u14240:
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;ADC.h: 80: }
 13368                           ;ADC.h: 81: umid = (aux / 10);
 13369                           
 13370                           ; BSR set to: 0
 13371  0035EA  0E00               	movlw	0
 13372  0035EC  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13373  0035EE  0E20               	movlw	32
 13374  0035F0  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13375  0035F2  0E41               	movlw	65
 13376  0035F4  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13377  0035F6  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13378  0035FA  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13379  0035FE  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13380  003602  EC3B  F026         	call	___ftdiv	;wreg free
 13381  003606  C087  F096         	movff	?___ftdiv,___fttol@f1
 13382  00360A  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13383  00360E  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13384  003612  ECCF  F024         	call	___fttol	;wreg free
 13385  003616  0100               	movlb	0	; () banked
 13386  003618  5196               	movf	?___fttol& (0+255),w,b
 13387  00361A  6FFC               	movwf	_umid& (0+255),b
 13388                           
 13389                           ; BSR set to: 0
 13390  00361C  0012               	return		;funcret
 13391  00361E                     __end_of_getSensors:
 13392                           	opt stack 0
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           intcon2	equ	0xFF1
 13401                           intcon3	equ	0xFF0
 13402                           postinc0	equ	0xFEE
 13403                           wreg	equ	0xFE8
 13404                           postdec1	equ	0xFE5
 13405                           fsr1l	equ	0xFE1
 13406                           indf2	equ	0xFDF
 13407                           postinc2	equ	0xFDE
 13408                           postdec2	equ	0xFDD
 13409                           fsr2h	equ	0xFDA
 13410                           fsr2l	equ	0xFD9
 13411                           status	equ	0xFD8
 13412                           
 13413 ;; *************** function _readADC *****************
 13414 ;; Defined at:
 13415 ;;		line 10 in file "src/ADC.h"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  canal           1    wreg     unsigned char 
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  canal           1    8[BANK0 ] unsigned char 
 13420 ;;  digital         2    6[BANK0 ] int 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  2    0[BANK0 ] unsigned int 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13430 ;;      Params:         0       2       0       0       0       0       0       0       0
 13431 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13432 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13433 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13434 ;;Total ram usage:        9 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    6
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_getSensors
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text9
 13445  005244                     __ptext9:
 13446                           	opt stack 0
 13447  005244                     _readADC:
 13448                           	opt stack 23
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;incstack = 0
 13452                           ;readADC@canal stored from wreg
 13453  005244  0100               	movlb	0	; () banked
 13454  005246  6F68               	movwf	readADC@canal& (0+255),b
 13455                           
 13456                           ;ADC.h: 11: ADRESH = 0;
 13457  005248  0E00               	movlw	0
 13458  00524A  6EC4               	movwf	4036,c	;volatile
 13459                           
 13460                           ;ADC.h: 12: ADRESL = 0;
 13461  00524C  0E00               	movlw	0
 13462  00524E  6EC3               	movwf	4035,c	;volatile
 13463                           
 13464                           ;ADC.h: 13: int digital;
 13465                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13466  005250  C068  F062         	movff	readADC@canal,??_readADC
 13467  005254  0100               	movlb	0	; () banked
 13468  005256  90D8               	bcf	status,0,c
 13469  005258  3762               	rlcf	??_readADC& (0+255),f,b
 13470  00525A  90D8               	bcf	status,0,c
 13471  00525C  3762               	rlcf	??_readADC& (0+255),f,b
 13472  00525E  0E3C               	movlw	60
 13473  005260  1762               	andwf	??_readADC& (0+255),f,b
 13474  005262  50C2               	movf	4034,w,c	;volatile
 13475  005264  0BC3               	andlw	195
 13476  005266  1162               	iorwf	??_readADC& (0+255),w,b
 13477  005268  6EC2               	movwf	4034,c	;volatile
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13481  00526A  0E14               	movlw	20
 13482  00526C                     u15357:
 13483  00526C  2EE8               	decfsz	wreg,f,c
 13484  00526E  D7FE               	bra	u15357
 13485                           
 13486                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13487  005270  A2C2               	btfss	4034,1,c	;volatile
 13488  005272  D004               	goto	u11970
 13489  005274  0100               	movlb	0	; () banked
 13490  005276  6B62               	clrf	??_readADC& (0+255),b
 13491  005278  2B62               	incf	??_readADC& (0+255),f,b
 13492  00527A  D002               	goto	u11988
 13493  00527C                     u11970:
 13494  00527C  0100               	movlb	0	; () banked
 13495  00527E  6B62               	clrf	??_readADC& (0+255),b
 13496  005280                     u11988:
 13497  005280  0E01               	movlw	1
 13498  005282  6F63               	movwf	(??_readADC+1)& (0+255),b
 13499  005284  2B62               	incf	??_readADC& (0+255),f,b
 13500  005286  D002               	goto	u11994
 13501  005288                     u11995:
 13502  005288  90D8               	bcf	status,0,c
 13503  00528A  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13504  00528C                     u11994:
 13505  00528C  2F62               	decfsz	??_readADC& (0+255),f,b
 13506  00528E  D7FC               	goto	u11995
 13507  005290  A0C2               	btfss	4034,0,c	;volatile
 13508  005292  D004               	goto	u12000
 13509  005294  0100               	movlb	0	; () banked
 13510  005296  6B64               	clrf	(??_readADC+2)& (0+255),b
 13511  005298  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13512  00529A  D002               	goto	u12018
 13513  00529C                     u12000:
 13514  00529C  0100               	movlb	0	; () banked
 13515  00529E  6B64               	clrf	(??_readADC+2)& (0+255),b
 13516  0052A0                     u12018:
 13517  0052A0  0E01               	movlw	1
 13518  0052A2  6F65               	movwf	(??_readADC+3)& (0+255),b
 13519  0052A4  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13520  0052A6  D002               	goto	u12024
 13521  0052A8                     u12025:
 13522  0052A8  90D8               	bcf	status,0,c
 13523  0052AA  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13524  0052AC                     u12024:
 13525  0052AC  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13526  0052AE  D7FC               	goto	u12025
 13527  0052B0  0100               	movlb	0	; () banked
 13528  0052B2  5165               	movf	(??_readADC+3)& (0+255),w,b
 13529  0052B4  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13530  0052B6  12C2               	iorwf	4034,f,c	;volatile
 13531  0052B8                     
 13532                           ; BSR set to: 0
 13533  0052B8  B2C2               	btfsc	4034,1,c	;volatile
 13534  0052BA  D7FE               	goto	l1219
 13535                           
 13536                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13537  0052BC  50C3               	movf	4035,w,c	;volatile
 13538  0052BE  CFC4 F062          	movff	4036,??_readADC	;volatile
 13539  0052C2  0100               	movlb	0	; () banked
 13540  0052C4  6B63               	clrf	(??_readADC+1)& (0+255),b
 13541  0052C6  C062  F063         	movff	??_readADC,??_readADC+1
 13542  0052CA  6B62               	clrf	??_readADC& (0+255),b
 13543  0052CC  1162               	iorwf	??_readADC& (0+255),w,b
 13544  0052CE  6F66               	movwf	readADC@digital& (0+255),b
 13545  0052D0  5163               	movf	(??_readADC+1)& (0+255),w,b
 13546  0052D2  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;ADC.h: 19: return (digital);
 13550  0052D4  C066  F060         	movff	readADC@digital,?_readADC
 13551  0052D8  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13552  0052DC  0012               	return	
 13553  0052DE                     __end_of_readADC:
 13554                           	opt stack 0
 13555                           tblptru	equ	0xFF8
 13556                           tblptrh	equ	0xFF7
 13557                           tblptrl	equ	0xFF6
 13558                           tablat	equ	0xFF5
 13559                           prodh	equ	0xFF4
 13560                           prodl	equ	0xFF3
 13561                           intcon	equ	0xFF2
 13562                           intcon2	equ	0xFF1
 13563                           intcon3	equ	0xFF0
 13564                           postinc0	equ	0xFEE
 13565                           wreg	equ	0xFE8
 13566                           postdec1	equ	0xFE5
 13567                           fsr1l	equ	0xFE1
 13568                           indf2	equ	0xFDF
 13569                           postinc2	equ	0xFDE
 13570                           postdec2	equ	0xFDD
 13571                           fsr2h	equ	0xFDA
 13572                           fsr2l	equ	0xFD9
 13573                           status	equ	0xFD8
 13574                           
 13575 ;; *************** function ___lwtoft *****************
 13576 ;; Defined at:
 13577 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13578 ;; Parameters:    Size  Location     Type
 13579 ;;  c               2    9[BANK0 ] unsigned int 
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;		None
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  3    9[BANK0 ] float 
 13584 ;; Registers used:
 13585 ;;		wreg, status,2, status,0, cstack
 13586 ;; Tracked objects:
 13587 ;;		On entry : 0/0
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13591 ;;      Params:         0       3       0       0       0       0       0       0       0
 13592 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13594 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13595 ;;Total ram usage:        3 bytes
 13596 ;; Hardware stack levels used:    1
 13597 ;; Hardware stack levels required when called:    7
 13598 ;; This function calls:
 13599 ;;		___ftpack
 13600 ;; This function is called by:
 13601 ;;		_getSensors
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text10
 13606  005DA8                     __ptext10:
 13607                           	opt stack 0
 13608  005DA8                     ___lwtoft:
 13609                           	opt stack 22
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;incstack = 0
 13613  005DA8  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13614  005DAC  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13615  005DB0  0100               	movlb	0	; () banked
 13616  005DB2  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13617  005DB4  0E8E               	movlw	142
 13618  005DB6  6F63               	movwf	___ftpack@exp& (0+255),b
 13619  005DB8  0E00               	movlw	0
 13620  005DBA  6F64               	movwf	___ftpack@sign& (0+255),b
 13621  005DBC  ECD4  F027         	call	___ftpack	;wreg free
 13622  005DC0  C060  F069         	movff	?___ftpack,?___lwtoft
 13623  005DC4  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13624  005DC8  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13625  005DCC  0012               	return	
 13626  005DCE                     __end_of___lwtoft:
 13627                           	opt stack 0
 13628                           tblptru	equ	0xFF8
 13629                           tblptrh	equ	0xFF7
 13630                           tblptrl	equ	0xFF6
 13631                           tablat	equ	0xFF5
 13632                           prodh	equ	0xFF4
 13633                           prodl	equ	0xFF3
 13634                           intcon	equ	0xFF2
 13635                           intcon2	equ	0xFF1
 13636                           intcon3	equ	0xFF0
 13637                           postinc0	equ	0xFEE
 13638                           wreg	equ	0xFE8
 13639                           postdec1	equ	0xFE5
 13640                           fsr1l	equ	0xFE1
 13641                           indf2	equ	0xFDF
 13642                           postinc2	equ	0xFDE
 13643                           postdec2	equ	0xFDD
 13644                           fsr2h	equ	0xFDA
 13645                           fsr2l	equ	0xFD9
 13646                           status	equ	0xFD8
 13647                           
 13648 ;; *************** function ___fttol *****************
 13649 ;; Defined at:
 13650 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;  f1              3   54[BANK0 ] float 
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  lval            4   64[BANK0 ] unsigned long 
 13655 ;;  exp1            1   68[BANK0 ] unsigned char 
 13656 ;;  sign1           1   63[BANK0 ] unsigned char 
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  4   54[BANK0 ] long 
 13659 ;; Registers used:
 13660 ;;		wreg, status,2, status,0
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13666 ;;      Params:         0       4       0       0       0       0       0       0       0
 13667 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13668 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13669 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13670 ;;Total ram usage:       15 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; Hardware stack levels required when called:    6
 13673 ;; This function calls:
 13674 ;;		Nothing
 13675 ;; This function is called by:
 13676 ;;		_getSensors
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           	psect	text11
 13681  00499E                     __ptext11:
 13682                           	opt stack 0
 13683  00499E                     ___fttol:
 13684                           	opt stack 23
 13685                           
 13686                           ;incstack = 0
 13687  00499E  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13688  0049A2  0100               	movlb	0	; () banked
 13689  0049A4  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13690  0049A6  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13691  0049A8  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13692  0049AA  379A               	rlcf	??___fttol& (0+255),f,b
 13693  0049AC  E301               	bnc	u12391
 13694  0049AE  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13695  0049B0                     u12391:
 13696  0049B0  519A               	movf	??___fttol& (0+255),w,b
 13697  0049B2  6FA4               	movwf	___fttol@exp1& (0+255),b
 13698  0049B4  51A4               	movf	___fttol@exp1& (0+255),w,b
 13699  0049B6  A4D8               	btfss	status,2,c
 13700  0049B8  D009               	goto	l1908
 13701                           
 13702                           ; BSR set to: 0
 13703  0049BA  0E00               	movlw	0
 13704  0049BC  6F96               	movwf	?___fttol& (0+255),b
 13705  0049BE  0E00               	movlw	0
 13706  0049C0  6F97               	movwf	(?___fttol+1)& (0+255),b
 13707  0049C2  0E00               	movlw	0
 13708  0049C4  6F98               	movwf	(?___fttol+2)& (0+255),b
 13709  0049C6  0E00               	movlw	0
 13710  0049C8  6F99               	movwf	(?___fttol+3)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713  0049CA  0012               	return	
 13714  0049CC                     l1908:
 13715                           
 13716                           ; BSR set to: 0
 13717                           
 13718                           ; BSR set to: 0
 13719  0049CC  0E17               	movlw	23
 13720  0049CE  6F9A               	movwf	??___fttol& (0+255),b
 13721  0049D0  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13722  0049D4  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13723  0049D8  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13724  0049DC  299A               	incf	??___fttol& (0+255),w,b
 13725  0049DE  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13726  0049E0  D004               	goto	u12410
 13727  0049E2                     u12415:
 13728  0049E2  90D8               	bcf	status,0,c
 13729  0049E4  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13730  0049E6  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13731  0049E8  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13732  0049EA                     u12410:
 13733  0049EA  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13734  0049EC  D7FA               	goto	u12415
 13735  0049EE  0100               	movlb	0	; () banked
 13736  0049F0  519B               	movf	(??___fttol+1)& (0+255),w,b
 13737  0049F2  6F9F               	movwf	___fttol@sign1& (0+255),b
 13738                           
 13739                           ; BSR set to: 0
 13740  0049F4  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13741                           
 13742                           ; BSR set to: 0
 13743  0049F6  0EFF               	movlw	255
 13744  0049F8  1796               	andwf	___fttol@f1& (0+255),f,b
 13745  0049FA  0EFF               	movlw	255
 13746  0049FC  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13747  0049FE  0E00               	movlw	0
 13748  004A00  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13749                           
 13750                           ; BSR set to: 0
 13751  004A02  5196               	movf	___fttol@f1& (0+255),w,b
 13752  004A04  6FA0               	movwf	___fttol@lval& (0+255),b
 13753  004A06  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13754  004A08  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13755  004A0A  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13756  004A0C  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13757  004A0E  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13758                           
 13759                           ; BSR set to: 0
 13760  004A10  0E8E               	movlw	142
 13761  004A12  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13762                           
 13763                           ; BSR set to: 0
 13764  004A14  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13765  004A16  D016               	goto	l1910
 13766                           
 13767                           ; BSR set to: 0
 13768  004A18  51A4               	movf	___fttol@exp1& (0+255),w,b
 13769  004A1A  0A80               	xorlw	128
 13770  004A1C  0F8F               	addlw	143
 13771  004A1E  B0D8               	btfsc	status,0,c
 13772  004A20  D009               	goto	l1911
 13773                           
 13774                           ; BSR set to: 0
 13775  004A22  0E00               	movlw	0
 13776  004A24  6F96               	movwf	?___fttol& (0+255),b
 13777  004A26  0E00               	movlw	0
 13778  004A28  6F97               	movwf	(?___fttol+1)& (0+255),b
 13779  004A2A  0E00               	movlw	0
 13780  004A2C  6F98               	movwf	(?___fttol+2)& (0+255),b
 13781  004A2E  0E00               	movlw	0
 13782  004A30  6F99               	movwf	(?___fttol+3)& (0+255),b
 13783                           
 13784                           ; BSR set to: 0
 13785  004A32  0012               	return	
 13786  004A34                     l1911:
 13787                           
 13788                           ; BSR set to: 0
 13789                           
 13790                           ; BSR set to: 0
 13791                           
 13792                           ; BSR set to: 0
 13793  004A34  90D8               	bcf	status,0,c
 13794  004A36  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13795  004A38  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13796  004A3A  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13797  004A3C  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13798                           
 13799                           ; BSR set to: 0
 13800  004A3E  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13801  004A40  D7F9               	goto	l1911
 13802                           
 13803                           ; BSR set to: 0
 13804  004A42  D015               	goto	u12450
 13805  004A44                     l1910:
 13806                           
 13807                           ; BSR set to: 0
 13808                           
 13809                           ; BSR set to: 0
 13810  004A44  0E17               	movlw	23
 13811  004A46  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13812  004A48  D00F               	goto	l1916
 13813                           
 13814                           ; BSR set to: 0
 13815  004A4A  0E00               	movlw	0
 13816  004A4C  6F96               	movwf	?___fttol& (0+255),b
 13817  004A4E  0E00               	movlw	0
 13818  004A50  6F97               	movwf	(?___fttol+1)& (0+255),b
 13819  004A52  0E00               	movlw	0
 13820  004A54  6F98               	movwf	(?___fttol+2)& (0+255),b
 13821  004A56  0E00               	movlw	0
 13822  004A58  6F99               	movwf	(?___fttol+3)& (0+255),b
 13823                           
 13824                           ; BSR set to: 0
 13825  004A5A  0012               	return	
 13826  004A5C                     
 13827                           ; BSR set to: 0
 13828                           
 13829                           ; BSR set to: 0
 13830  004A5C  90D8               	bcf	status,0,c
 13831  004A5E  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13832  004A60  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13833  004A62  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13834  004A64  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13835  004A66  07A4               	decf	___fttol@exp1& (0+255),f,b
 13836  004A68                     l1916:
 13837                           
 13838                           ; BSR set to: 0
 13839                           
 13840                           ; BSR set to: 0
 13841  004A68  51A4               	movf	___fttol@exp1& (0+255),w,b
 13842  004A6A  A4D8               	btfss	status,2,c
 13843  004A6C  D7F7               	goto	l1917
 13844  004A6E                     u12450:
 13845                           
 13846                           ; BSR set to: 0
 13847                           
 13848                           ; BSR set to: 0
 13849                           
 13850                           ; BSR set to: 0
 13851  004A6E  519F               	movf	___fttol@sign1& (0+255),w,b
 13852  004A70  B4D8               	btfsc	status,2,c
 13853  004A72  D008               	goto	l1919
 13854                           
 13855                           ; BSR set to: 0
 13856  004A74  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13857  004A76  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13858  004A78  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13859  004A7A  6DA0               	negf	___fttol@lval& (0+255),b
 13860  004A7C  0E00               	movlw	0
 13861  004A7E  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13862  004A80  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13863  004A82  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13864  004A84                     l1919:
 13865                           
 13866                           ; BSR set to: 0
 13867                           
 13868                           ; BSR set to: 0
 13869  004A84  C0A0  F096         	movff	___fttol@lval,?___fttol
 13870  004A88  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13871  004A8C  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13872  004A90  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13873  004A94  0012               	return	
 13874  004A96                     __end_of___fttol:
 13875                           	opt stack 0
 13876                           tblptru	equ	0xFF8
 13877                           tblptrh	equ	0xFF7
 13878                           tblptrl	equ	0xFF6
 13879                           tablat	equ	0xFF5
 13880                           prodh	equ	0xFF4
 13881                           prodl	equ	0xFF3
 13882                           intcon	equ	0xFF2
 13883                           intcon2	equ	0xFF1
 13884                           intcon3	equ	0xFF0
 13885                           postinc0	equ	0xFEE
 13886                           wreg	equ	0xFE8
 13887                           postdec1	equ	0xFE5
 13888                           fsr1l	equ	0xFE1
 13889                           indf2	equ	0xFDF
 13890                           postinc2	equ	0xFDE
 13891                           postdec2	equ	0xFDD
 13892                           fsr2h	equ	0xFDA
 13893                           fsr2l	equ	0xFD9
 13894                           status	equ	0xFD8
 13895                           
 13896 ;; *************** function ___ftmul *****************
 13897 ;; Defined at:
 13898 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  f1              3   12[BANK0 ] float 
 13901 ;;  f2              3   15[BANK0 ] float 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13904 ;;  sign            1   26[BANK0 ] unsigned char 
 13905 ;;  cntr            1   25[BANK0 ] unsigned char 
 13906 ;;  exp             1   21[BANK0 ] unsigned char 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  3   12[BANK0 ] float 
 13909 ;; Registers used:
 13910 ;;		wreg, status,2, status,0, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13916 ;;      Params:         0       6       0       0       0       0       0       0       0
 13917 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13918 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13919 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13920 ;;Total ram usage:       15 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    7
 13923 ;; This function calls:
 13924 ;;		___ftpack
 13925 ;; This function is called by:
 13926 ;;		_getSensors
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text12
 13931  004A96                     __ptext12:
 13932                           	opt stack 0
 13933  004A96                     ___ftmul:
 13934                           	opt stack 22
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;incstack = 0
 13938  004A96  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13939  004A9A  0100               	movlb	0	; () banked
 13940  004A9C  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13941  004A9E  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13942  004AA0  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13943  004AA2  3772               	rlcf	??___ftmul& (0+255),f,b
 13944  004AA4  E301               	bnc	u12301
 13945  004AA6  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13946  004AA8                     u12301:
 13947  004AA8  5172               	movf	??___ftmul& (0+255),w,b
 13948  004AAA  6F75               	movwf	___ftmul@exp& (0+255),b
 13949  004AAC  5175               	movf	___ftmul@exp& (0+255),w,b
 13950  004AAE  A4D8               	btfss	status,2,c
 13951  004AB0  D007               	goto	l1887
 13952                           
 13953                           ; BSR set to: 0
 13954  004AB2  0E00               	movlw	0
 13955  004AB4  6F6C               	movwf	?___ftmul& (0+255),b
 13956  004AB6  0E00               	movlw	0
 13957  004AB8  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13958  004ABA  0E00               	movlw	0
 13959  004ABC  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13960                           
 13961                           ; BSR set to: 0
 13962  004ABE  0012               	return	
 13963  004AC0                     l1887:
 13964                           
 13965                           ; BSR set to: 0
 13966                           
 13967                           ; BSR set to: 0
 13968  004AC0  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13969  004AC4  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13970  004AC6  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13971  004AC8  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13972  004ACA  3772               	rlcf	??___ftmul& (0+255),f,b
 13973  004ACC  E301               	bnc	u12321
 13974  004ACE  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13975  004AD0                     u12321:
 13976  004AD0  5172               	movf	??___ftmul& (0+255),w,b
 13977  004AD2  6F7A               	movwf	___ftmul@sign& (0+255),b
 13978  004AD4  517A               	movf	___ftmul@sign& (0+255),w,b
 13979  004AD6  A4D8               	btfss	status,2,c
 13980  004AD8  D007               	goto	l1889
 13981                           
 13982                           ; BSR set to: 0
 13983  004ADA  0E00               	movlw	0
 13984  004ADC  6F6C               	movwf	?___ftmul& (0+255),b
 13985  004ADE  0E00               	movlw	0
 13986  004AE0  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13987  004AE2  0E00               	movlw	0
 13988  004AE4  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13989                           
 13990                           ; BSR set to: 0
 13991  004AE6  0012               	return	
 13992  004AE8                     l1889:
 13993                           
 13994                           ; BSR set to: 0
 13995                           
 13996                           ; BSR set to: 0
 13997  004AE8  517A               	movf	___ftmul@sign& (0+255),w,b
 13998  004AEA  0F7B               	addlw	123
 13999  004AEC  2775               	addwf	___ftmul@exp& (0+255),f,b
 14000                           
 14001                           ; BSR set to: 0
 14002  004AEE  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 14003  004AF2  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14004  004AF4  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 14005  004AF6  0E80               	movlw	128
 14006  004AF8  177A               	andwf	___ftmul@sign& (0+255),f,b
 14007                           
 14008                           ; BSR set to: 0
 14009  004AFA  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 14010                           
 14011                           ; BSR set to: 0
 14012  004AFC  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 14013                           
 14014                           ; BSR set to: 0
 14015  004AFE  0EFF               	movlw	255
 14016  004B00  176F               	andwf	___ftmul@f2& (0+255),f,b
 14017  004B02  0EFF               	movlw	255
 14018  004B04  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 14019  004B06  0E00               	movlw	0
 14020  004B08  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 14021                           
 14022                           ; BSR set to: 0
 14023  004B0A  0E00               	movlw	0
 14024  004B0C  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 14025  004B0E  0E00               	movlw	0
 14026  004B10  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 14027  004B12  0E00               	movlw	0
 14028  004B14  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 14029                           
 14030                           ; BSR set to: 0
 14031  004B16  0E07               	movlw	7
 14032  004B18  6F79               	movwf	___ftmul@cntr& (0+255),b
 14033  004B1A                     
 14034                           ; BSR set to: 0
 14035                           
 14036                           ; BSR set to: 0
 14037  004B1A  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14038  004B1C  D006               	goto	l1891
 14039                           
 14040                           ; BSR set to: 0
 14041  004B1E  516F               	movf	___ftmul@f2& (0+255),w,b
 14042  004B20  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14043  004B22  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14044  004B24  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14045  004B26  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14046  004B28  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14047  004B2A                     l1891:
 14048                           
 14049                           ; BSR set to: 0
 14050                           
 14051                           ; BSR set to: 0
 14052  004B2A  90D8               	bcf	status,0,c
 14053  004B2C  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14054  004B2E  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14055  004B30  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14056  004B32  90D8               	bcf	status,0,c
 14057  004B34  376F               	rlcf	___ftmul@f2& (0+255),f,b
 14058  004B36  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14059  004B38  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14060                           
 14061                           ; BSR set to: 0
 14062  004B3A  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14063  004B3C  D7EE               	goto	l1890
 14064                           
 14065                           ; BSR set to: 0
 14066                           
 14067                           ; BSR set to: 0
 14068  004B3E  0E09               	movlw	9
 14069  004B40  6F79               	movwf	___ftmul@cntr& (0+255),b
 14070  004B42                     
 14071                           ; BSR set to: 0
 14072                           
 14073                           ; BSR set to: 0
 14074  004B42  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14075  004B44  D006               	goto	l1894
 14076                           
 14077                           ; BSR set to: 0
 14078  004B46  516F               	movf	___ftmul@f2& (0+255),w,b
 14079  004B48  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14080  004B4A  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14081  004B4C  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14082  004B4E  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14083  004B50  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14084  004B52                     l1894:
 14085                           
 14086                           ; BSR set to: 0
 14087                           
 14088                           ; BSR set to: 0
 14089  004B52  90D8               	bcf	status,0,c
 14090  004B54  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14091  004B56  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14092  004B58  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14093  004B5A  90D8               	bcf	status,0,c
 14094  004B5C  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14095  004B5E  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14096  004B60  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14097                           
 14098                           ; BSR set to: 0
 14099  004B62  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14100  004B64  D7EE               	goto	l1893
 14101                           
 14102                           ; BSR set to: 0
 14103                           
 14104                           ; BSR set to: 0
 14105  004B66  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 14106  004B6A  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14107  004B6E  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14108  004B72  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 14109  004B76  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 14110  004B7A  ECD4  F027         	call	___ftpack	;wreg free
 14111  004B7E  C060  F06C         	movff	?___ftpack,?___ftmul
 14112  004B82  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 14113  004B86  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 14114  004B8A  0012               	return	
 14115  004B8C                     __end_of___ftmul:
 14116                           	opt stack 0
 14117                           tblptru	equ	0xFF8
 14118                           tblptrh	equ	0xFF7
 14119                           tblptrl	equ	0xFF6
 14120                           tablat	equ	0xFF5
 14121                           prodh	equ	0xFF4
 14122                           prodl	equ	0xFF3
 14123                           intcon	equ	0xFF2
 14124                           intcon2	equ	0xFF1
 14125                           intcon3	equ	0xFF0
 14126                           postinc0	equ	0xFEE
 14127                           wreg	equ	0xFE8
 14128                           postdec1	equ	0xFE5
 14129                           fsr1l	equ	0xFE1
 14130                           indf2	equ	0xFDF
 14131                           postinc2	equ	0xFDE
 14132                           postdec2	equ	0xFDD
 14133                           fsr2h	equ	0xFDA
 14134                           fsr2l	equ	0xFD9
 14135                           status	equ	0xFD8
 14136                           
 14137 ;; *************** function ___ftge *****************
 14138 ;; Defined at:
 14139 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  ff1             3    0[BANK0 ] float 
 14142 ;;  ff2             3    3[BANK0 ] float 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;		None
 14145 ;; Return value:  Size  Location     Type
 14146 ;;		None               void
 14147 ;; Registers used:
 14148 ;;		wreg, status,2, status,0
 14149 ;; Tracked objects:
 14150 ;;		On entry : 0/0
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14154 ;;      Params:         0       6       0       0       0       0       0       0       0
 14155 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14156 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14157 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14158 ;;Total ram usage:        9 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; Hardware stack levels required when called:    6
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_getSensors
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text13
 14169  00540A                     __ptext13:
 14170                           	opt stack 0
 14171  00540A                     ___ftge:
 14172                           	opt stack 23
 14173                           
 14174                           ;incstack = 0
 14175  00540A  0100               	movlb	0	; () banked
 14176  00540C  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14177  00540E  D016               	goto	l1880
 14178                           
 14179                           ; BSR set to: 0
 14180  005410  C060  F066         	movff	___ftge@ff1,??___ftge
 14181  005414  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 14182  005418  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 14183  00541C  1F66               	comf	??___ftge& (0+255),f,b
 14184  00541E  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14185  005420  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14186  005422  2B66               	incf	??___ftge& (0+255),f,b
 14187  005424  0E00               	movlw	0
 14188  005426  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14189  005428  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14190  00542A  0E00               	movlw	0
 14191  00542C  2566               	addwf	??___ftge& (0+255),w,b
 14192  00542E  6F60               	movwf	___ftge@ff1& (0+255),b
 14193  005430  0E00               	movlw	0
 14194  005432  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14195  005434  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14196  005436  0E80               	movlw	128
 14197  005438  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14198  00543A  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14199  00543C                     l1880:
 14200                           
 14201                           ; BSR set to: 0
 14202                           
 14203                           ; BSR set to: 0
 14204  00543C  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14205  00543E  D016               	goto	l1881
 14206                           
 14207                           ; BSR set to: 0
 14208  005440  C063  F066         	movff	___ftge@ff2,??___ftge
 14209  005444  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14210  005448  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14211  00544C  1F66               	comf	??___ftge& (0+255),f,b
 14212  00544E  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14213  005450  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14214  005452  2B66               	incf	??___ftge& (0+255),f,b
 14215  005454  0E00               	movlw	0
 14216  005456  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14217  005458  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14218  00545A  0E00               	movlw	0
 14219  00545C  2566               	addwf	??___ftge& (0+255),w,b
 14220  00545E  6F63               	movwf	___ftge@ff2& (0+255),b
 14221  005460  0E00               	movlw	0
 14222  005462  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14223  005464  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14224  005466  0E80               	movlw	128
 14225  005468  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14226  00546A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14227  00546C                     l1881:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  00546C  0E00               	movlw	0
 14233  00546E  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14234  005470  0E00               	movlw	0
 14235  005472  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14236  005474  0E80               	movlw	128
 14237  005476  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14238                           
 14239                           ; BSR set to: 0
 14240  005478  0E00               	movlw	0
 14241  00547A  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14242  00547C  0E00               	movlw	0
 14243  00547E  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14244  005480  0E80               	movlw	128
 14245  005482  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14246  005484  5163               	movf	___ftge@ff2& (0+255),w,b
 14247  005486  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14248  005488  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14249  00548A  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14250  00548C  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14251  00548E  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14252  005490  B0D8               	btfsc	status,0,c
 14253  005492  D002               	goto	l6144
 14254                           
 14255                           ; BSR set to: 0
 14256  005494  90D8               	bcf	status,0,c
 14257  005496  0012               	return	
 14258  005498                     l6144:
 14259                           
 14260                           ; BSR set to: 0
 14261                           
 14262                           ; BSR set to: 0
 14263  005498  80D8               	bsf	status,0,c
 14264                           
 14265                           ; BSR set to: 0
 14266  00549A  0012               	return	
 14267  00549C                     __end_of___ftge:
 14268                           	opt stack 0
 14269                           tblptru	equ	0xFF8
 14270                           tblptrh	equ	0xFF7
 14271                           tblptrl	equ	0xFF6
 14272                           tablat	equ	0xFF5
 14273                           prodh	equ	0xFF4
 14274                           prodl	equ	0xFF3
 14275                           intcon	equ	0xFF2
 14276                           intcon2	equ	0xFF1
 14277                           intcon3	equ	0xFF0
 14278                           postinc0	equ	0xFEE
 14279                           wreg	equ	0xFE8
 14280                           postdec1	equ	0xFE5
 14281                           fsr1l	equ	0xFE1
 14282                           indf2	equ	0xFDF
 14283                           postinc2	equ	0xFDE
 14284                           postdec2	equ	0xFDD
 14285                           fsr2h	equ	0xFDA
 14286                           fsr2l	equ	0xFD9
 14287                           status	equ	0xFD8
 14288                           
 14289 ;; *************** function ___ftdiv *****************
 14290 ;; Defined at:
 14291 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;  f1              3   39[BANK0 ] float 
 14294 ;;  f2              3   42[BANK0 ] float 
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;  f3              3   49[BANK0 ] float 
 14297 ;;  sign            1   53[BANK0 ] unsigned char 
 14298 ;;  exp             1   52[BANK0 ] unsigned char 
 14299 ;;  cntr            1   48[BANK0 ] unsigned char 
 14300 ;; Return value:  Size  Location     Type
 14301 ;;                  3   39[BANK0 ] float 
 14302 ;; Registers used:
 14303 ;;		wreg, status,2, status,0, cstack
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14309 ;;      Params:         0       6       0       0       0       0       0       0       0
 14310 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14311 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14312 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14313 ;;Total ram usage:       15 bytes
 14314 ;; Hardware stack levels used:    1
 14315 ;; Hardware stack levels required when called:    7
 14316 ;; This function calls:
 14317 ;;		___ftpack
 14318 ;; This function is called by:
 14319 ;;		_getSensors
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text14
 14324  004C76                     __ptext14:
 14325                           	opt stack 0
 14326  004C76                     ___ftdiv:
 14327                           	opt stack 22
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;incstack = 0
 14331  004C76  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14332  004C7A  0100               	movlb	0	; () banked
 14333  004C7C  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14334  004C7E  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14335  004C80  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14336  004C82  378D               	rlcf	??___ftdiv& (0+255),f,b
 14337  004C84  E301               	bnc	u12251
 14338  004C86  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14339  004C88                     u12251:
 14340  004C88  518D               	movf	??___ftdiv& (0+255),w,b
 14341  004C8A  6F94               	movwf	___ftdiv@exp& (0+255),b
 14342  004C8C  5194               	movf	___ftdiv@exp& (0+255),w,b
 14343  004C8E  A4D8               	btfss	status,2,c
 14344  004C90  D007               	goto	l1872
 14345                           
 14346                           ; BSR set to: 0
 14347  004C92  0E00               	movlw	0
 14348  004C94  6F87               	movwf	?___ftdiv& (0+255),b
 14349  004C96  0E00               	movlw	0
 14350  004C98  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14351  004C9A  0E00               	movlw	0
 14352  004C9C  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14353                           
 14354                           ; BSR set to: 0
 14355  004C9E  0012               	return	
 14356  004CA0                     l1872:
 14357                           
 14358                           ; BSR set to: 0
 14359                           
 14360                           ; BSR set to: 0
 14361  004CA0  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14362  004CA4  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14363  004CA6  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14364  004CA8  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14365  004CAA  378D               	rlcf	??___ftdiv& (0+255),f,b
 14366  004CAC  E301               	bnc	u12271
 14367  004CAE  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14368  004CB0                     u12271:
 14369  004CB0  518D               	movf	??___ftdiv& (0+255),w,b
 14370  004CB2  6F95               	movwf	___ftdiv@sign& (0+255),b
 14371  004CB4  5195               	movf	___ftdiv@sign& (0+255),w,b
 14372  004CB6  A4D8               	btfss	status,2,c
 14373  004CB8  D007               	goto	l1874
 14374                           
 14375                           ; BSR set to: 0
 14376  004CBA  0E00               	movlw	0
 14377  004CBC  6F87               	movwf	?___ftdiv& (0+255),b
 14378  004CBE  0E00               	movlw	0
 14379  004CC0  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14380  004CC2  0E00               	movlw	0
 14381  004CC4  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14382                           
 14383                           ; BSR set to: 0
 14384  004CC6  0012               	return	
 14385  004CC8                     l1874:
 14386                           
 14387                           ; BSR set to: 0
 14388                           
 14389                           ; BSR set to: 0
 14390  004CC8  0E00               	movlw	0
 14391  004CCA  6F91               	movwf	___ftdiv@f3& (0+255),b
 14392  004CCC  0E00               	movlw	0
 14393  004CCE  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14394  004CD0  0E00               	movlw	0
 14395  004CD2  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14396                           
 14397                           ; BSR set to: 0
 14398  004CD4  5195               	movf	___ftdiv@sign& (0+255),w,b
 14399  004CD6  0F89               	addlw	137
 14400  004CD8  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14401                           
 14402                           ; BSR set to: 0
 14403  004CDA  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14404                           
 14405                           ; BSR set to: 0
 14406  004CDE  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14407  004CE0  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  004CE2  0E80               	movlw	128
 14411  004CE4  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14412                           
 14413                           ; BSR set to: 0
 14414  004CE6  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14415                           
 14416                           ; BSR set to: 0
 14417  004CE8  0EFF               	movlw	255
 14418  004CEA  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14419  004CEC  0EFF               	movlw	255
 14420  004CEE  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14421  004CF0  0E00               	movlw	0
 14422  004CF2  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14423                           
 14424                           ; BSR set to: 0
 14425  004CF4  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14426                           
 14427                           ; BSR set to: 0
 14428  004CF6  0EFF               	movlw	255
 14429  004CF8  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14430  004CFA  0EFF               	movlw	255
 14431  004CFC  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14432  004CFE  0E00               	movlw	0
 14433  004D00  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14434                           
 14435                           ; BSR set to: 0
 14436  004D02  0E18               	movlw	24
 14437  004D04  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14438  004D06                     
 14439                           ; BSR set to: 0
 14440                           
 14441                           ; BSR set to: 0
 14442  004D06  90D8               	bcf	status,0,c
 14443  004D08  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14444  004D0A  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14445  004D0C  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14446                           
 14447                           ; BSR set to: 0
 14448  004D0E  518A               	movf	___ftdiv@f2& (0+255),w,b
 14449  004D10  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14450  004D12  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14451  004D14  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14452  004D16  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14453  004D18  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14454  004D1A  A0D8               	btfss	status,0,c
 14455  004D1C  D007               	goto	l1876
 14456                           
 14457                           ; BSR set to: 0
 14458  004D1E  518A               	movf	___ftdiv@f2& (0+255),w,b
 14459  004D20  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14460  004D22  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14461  004D24  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14462  004D26  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14463  004D28  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14464                           
 14465                           ; BSR set to: 0
 14466  004D2A  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14467  004D2C                     l1876:
 14468                           
 14469                           ; BSR set to: 0
 14470  004D2C  90D8               	bcf	status,0,c
 14471  004D2E  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14472  004D30  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14473  004D32  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14474                           
 14475                           ; BSR set to: 0
 14476  004D34  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14477  004D36  D7E7               	goto	l1875
 14478                           
 14479                           ; BSR set to: 0
 14480                           
 14481                           ; BSR set to: 0
 14482  004D38  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14483  004D3C  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14484  004D40  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14485  004D44  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14486  004D48  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14487  004D4C  ECD4  F027         	call	___ftpack	;wreg free
 14488  004D50  C060  F087         	movff	?___ftpack,?___ftdiv
 14489  004D54  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14490  004D58  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14491  004D5C  0012               	return	
 14492  004D5E                     __end_of___ftdiv:
 14493                           	opt stack 0
 14494                           tblptru	equ	0xFF8
 14495                           tblptrh	equ	0xFF7
 14496                           tblptrl	equ	0xFF6
 14497                           tablat	equ	0xFF5
 14498                           prodh	equ	0xFF4
 14499                           prodl	equ	0xFF3
 14500                           intcon	equ	0xFF2
 14501                           intcon2	equ	0xFF1
 14502                           intcon3	equ	0xFF0
 14503                           postinc0	equ	0xFEE
 14504                           wreg	equ	0xFE8
 14505                           postdec1	equ	0xFE5
 14506                           fsr1l	equ	0xFE1
 14507                           indf2	equ	0xFDF
 14508                           postinc2	equ	0xFDE
 14509                           postdec2	equ	0xFDD
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function ___ftadd *****************
 14515 ;; Defined at:
 14516 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;  f1              3   27[BANK0 ] float 
 14519 ;;  f2              3   30[BANK0 ] float 
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;  exp1            1   38[BANK0 ] unsigned char 
 14522 ;;  exp2            1   37[BANK0 ] unsigned char 
 14523 ;;  sign            1   36[BANK0 ] unsigned char 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  3   27[BANK0 ] float 
 14526 ;; Registers used:
 14527 ;;		wreg, status,2, status,0, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14533 ;;      Params:         0       6       0       0       0       0       0       0       0
 14534 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14535 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14536 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14537 ;;Total ram usage:       12 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    7
 14540 ;; This function calls:
 14541 ;;		___ftpack
 14542 ;; This function is called by:
 14543 ;;		_getSensors
 14544 ;; This function uses a non-reentrant model
 14545 ;;
 14546                           
 14547                           	psect	text15
 14548  0041D0                     __ptext15:
 14549                           	opt stack 0
 14550  0041D0                     ___ftadd:
 14551                           	opt stack 22
 14552                           
 14553                           ;incstack = 0
 14554  0041D0  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14555  0041D4  0100               	movlb	0	; () banked
 14556  0041D6  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14557  0041D8  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14558  0041DA  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14559  0041DC  3781               	rlcf	??___ftadd& (0+255),f,b
 14560  0041DE  E301               	bnc	u12041
 14561  0041E0  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14562  0041E2                     u12041:
 14563  0041E2  5181               	movf	??___ftadd& (0+255),w,b
 14564  0041E4  6F86               	movwf	___ftadd@exp1& (0+255),b
 14565  0041E6  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14566  0041EA  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14567  0041EC  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14568  0041EE  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14569  0041F0  3781               	rlcf	??___ftadd& (0+255),f,b
 14570  0041F2  E301               	bnc	u12051
 14571  0041F4  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14572  0041F6                     u12051:
 14573  0041F6  5181               	movf	??___ftadd& (0+255),w,b
 14574  0041F8  6F85               	movwf	___ftadd@exp2& (0+255),b
 14575                           
 14576                           ; BSR set to: 0
 14577  0041FA  5186               	movf	___ftadd@exp1& (0+255),w,b
 14578  0041FC  B4D8               	btfsc	status,2,c
 14579  0041FE  D00B               	goto	u12080
 14580                           
 14581                           ; BSR set to: 0
 14582  004200  5185               	movf	___ftadd@exp2& (0+255),w,b
 14583  004202  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14584  004204  B0D8               	btfsc	status,0,c
 14585  004206  D00E               	goto	l1839
 14586                           
 14587                           ; BSR set to: 0
 14588  004208  5186               	movf	___ftadd@exp1& (0+255),w,b
 14589  00420A  0800               	sublw	0
 14590  00420C  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14591  00420E  6F81               	movwf	??___ftadd& (0+255),b
 14592  004210  0E18               	movlw	24
 14593  004212  6581               	cpfsgt	??___ftadd& (0+255),b
 14594  004214  D007               	goto	l1839
 14595  004216                     u12080:
 14596                           
 14597                           ; BSR set to: 0
 14598  004216  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14599  00421A  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14600  00421E  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14601  004222  0012               	return	
 14602  004224                     l1839:
 14603                           
 14604                           ; BSR set to: 0
 14605                           
 14606                           ; BSR set to: 0
 14607  004224  5185               	movf	___ftadd@exp2& (0+255),w,b
 14608  004226  B4D8               	btfsc	status,2,c
 14609  004228  D00B               	goto	u12110
 14610                           
 14611                           ; BSR set to: 0
 14612  00422A  5186               	movf	___ftadd@exp1& (0+255),w,b
 14613  00422C  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14614  00422E  B0D8               	btfsc	status,0,c
 14615  004230  D00E               	goto	l1843
 14616                           
 14617                           ; BSR set to: 0
 14618  004232  5185               	movf	___ftadd@exp2& (0+255),w,b
 14619  004234  0800               	sublw	0
 14620  004236  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14621  004238  6F81               	movwf	??___ftadd& (0+255),b
 14622  00423A  0E18               	movlw	24
 14623  00423C  6581               	cpfsgt	??___ftadd& (0+255),b
 14624  00423E  D007               	goto	l1843
 14625  004240                     u12110:
 14626                           
 14627                           ; BSR set to: 0
 14628  004240  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14629  004244  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14630  004248  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14631  00424C  0012               	return	
 14632  00424E                     l1843:
 14633                           
 14634                           ; BSR set to: 0
 14635                           
 14636                           ; BSR set to: 0
 14637  00424E  0E06               	movlw	6
 14638  004250  6F84               	movwf	___ftadd@sign& (0+255),b
 14639                           
 14640                           ; BSR set to: 0
 14641  004252  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14642                           
 14643                           ; BSR set to: 0
 14644  004254  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14645                           
 14646                           ; BSR set to: 0
 14647                           
 14648                           ; BSR set to: 0
 14649  004256  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14650                           
 14651                           ; BSR set to: 0
 14652  004258  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14653                           
 14654                           ; BSR set to: 0
 14655  00425A  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14656                           
 14657                           ; BSR set to: 0
 14658  00425C  0EFF               	movlw	255
 14659  00425E  177B               	andwf	___ftadd@f1& (0+255),f,b
 14660  004260  0EFF               	movlw	255
 14661  004262  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14662  004264  0E00               	movlw	0
 14663  004266  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14664  004268  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14665                           
 14666                           ; BSR set to: 0
 14667  00426A  0EFF               	movlw	255
 14668  00426C  177E               	andwf	___ftadd@f2& (0+255),f,b
 14669  00426E  0EFF               	movlw	255
 14670  004270  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14671  004272  0E00               	movlw	0
 14672  004274  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14673                           
 14674                           ; BSR set to: 0
 14675  004276  5185               	movf	___ftadd@exp2& (0+255),w,b
 14676  004278  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14677  00427A  B0D8               	btfsc	status,0,c
 14678  00427C  D01B               	goto	l1848
 14679  00427E                     u12140:
 14680                           
 14681                           ; BSR set to: 0
 14682                           
 14683                           ; BSR set to: 0
 14684  00427E  90D8               	bcf	status,0,c
 14685  004280  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14686  004282  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14687  004284  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14688  004286  0785               	decf	___ftadd@exp2& (0+255),f,b
 14689                           
 14690                           ; BSR set to: 0
 14691  004288  5186               	movf	___ftadd@exp1& (0+255),w,b
 14692  00428A  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14693  00428C  B4D8               	btfsc	status,2,c
 14694  00428E  D00D               	goto	l1853
 14695                           
 14696                           ; BSR set to: 0
 14697  004290  0784               	decf	___ftadd@sign& (0+255),f,b
 14698  004292  C084  F081         	movff	___ftadd@sign,??___ftadd
 14699  004296  0E07               	movlw	7
 14700  004298  1781               	andwf	??___ftadd& (0+255),f,b
 14701  00429A  B4D8               	btfsc	status,2,c
 14702  00429C  D006               	goto	l1853
 14703  00429E  D7EF               	goto	u12140
 14704  0042A0                     
 14705                           ; BSR set to: 0
 14706                           
 14707                           ; BSR set to: 0
 14708  0042A0  90D8               	bcf	status,0,c
 14709  0042A2  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14710  0042A4  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14711  0042A6  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14712  0042A8  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14713  0042AA                     l1853:
 14714                           
 14715                           ; BSR set to: 0
 14716                           
 14717                           ; BSR set to: 0
 14718  0042AA  5185               	movf	___ftadd@exp2& (0+255),w,b
 14719  0042AC  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14720  0042AE  B4D8               	btfsc	status,2,c
 14721  0042B0  D01F               	goto	u12210
 14722  0042B2  D7F6               	goto	l1854
 14723  0042B4                     l1848:
 14724                           
 14725                           ; BSR set to: 0
 14726                           
 14727                           ; BSR set to: 0
 14728  0042B4  5186               	movf	___ftadd@exp1& (0+255),w,b
 14729  0042B6  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14730  0042B8  B0D8               	btfsc	status,0,c
 14731  0042BA  D01A               	goto	u12210
 14732  0042BC                     u12180:
 14733                           
 14734                           ; BSR set to: 0
 14735                           
 14736                           ; BSR set to: 0
 14737  0042BC  90D8               	bcf	status,0,c
 14738  0042BE  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14739  0042C0  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14740  0042C2  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14741  0042C4  0786               	decf	___ftadd@exp1& (0+255),f,b
 14742                           
 14743                           ; BSR set to: 0
 14744  0042C6  5186               	movf	___ftadd@exp1& (0+255),w,b
 14745  0042C8  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14746  0042CA  B4D8               	btfsc	status,2,c
 14747  0042CC  D00D               	goto	l1862
 14748                           
 14749                           ; BSR set to: 0
 14750  0042CE  0784               	decf	___ftadd@sign& (0+255),f,b
 14751  0042D0  C084  F081         	movff	___ftadd@sign,??___ftadd
 14752  0042D4  0E07               	movlw	7
 14753  0042D6  1781               	andwf	??___ftadd& (0+255),f,b
 14754  0042D8  B4D8               	btfsc	status,2,c
 14755  0042DA  D006               	goto	l1862
 14756  0042DC  D7EF               	goto	u12180
 14757  0042DE                     
 14758                           ; BSR set to: 0
 14759                           
 14760                           ; BSR set to: 0
 14761  0042DE  90D8               	bcf	status,0,c
 14762  0042E0  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14763  0042E2  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14764  0042E4  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14765  0042E6  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14766  0042E8                     l1862:
 14767                           
 14768                           ; BSR set to: 0
 14769                           
 14770                           ; BSR set to: 0
 14771  0042E8  5185               	movf	___ftadd@exp2& (0+255),w,b
 14772  0042EA  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14773  0042EC  A4D8               	btfss	status,2,c
 14774  0042EE  D7F7               	goto	l1863
 14775  0042F0                     u12210:
 14776                           
 14777                           ; BSR set to: 0
 14778                           
 14779                           ; BSR set to: 0
 14780                           
 14781                           ; BSR set to: 0
 14782  0042F0  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14783  0042F2  D00C               	goto	l1865
 14784                           
 14785                           ; BSR set to: 0
 14786  0042F4  0EFF               	movlw	255
 14787  0042F6  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14788  0042F8  0EFF               	movlw	255
 14789  0042FA  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14790  0042FC  0EFF               	movlw	255
 14791  0042FE  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14792  004300  0E01               	movlw	1
 14793  004302  277B               	addwf	___ftadd@f1& (0+255),f,b
 14794  004304  0E00               	movlw	0
 14795  004306  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14796  004308  0E00               	movlw	0
 14797  00430A  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14798  00430C                     l1865:
 14799                           
 14800                           ; BSR set to: 0
 14801  00430C  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14802  00430E  D00C               	goto	l1866
 14803                           
 14804                           ; BSR set to: 0
 14805  004310  0EFF               	movlw	255
 14806  004312  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14807  004314  0EFF               	movlw	255
 14808  004316  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14809  004318  0EFF               	movlw	255
 14810  00431A  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14811  00431C  0E01               	movlw	1
 14812  00431E  277E               	addwf	___ftadd@f2& (0+255),f,b
 14813  004320  0E00               	movlw	0
 14814  004322  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14815  004324  0E00               	movlw	0
 14816  004326  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14817  004328                     l1866:
 14818                           
 14819                           ; BSR set to: 0
 14820                           
 14821                           ; BSR set to: 0
 14822  004328  0E00               	movlw	0
 14823  00432A  6F84               	movwf	___ftadd@sign& (0+255),b
 14824                           
 14825                           ; BSR set to: 0
 14826  00432C  517B               	movf	___ftadd@f1& (0+255),w,b
 14827  00432E  277E               	addwf	___ftadd@f2& (0+255),f,b
 14828  004330  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14829  004332  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14830  004334  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14831  004336  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14832                           
 14833                           ; BSR set to: 0
 14834  004338  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14835  00433A  D00E               	goto	l1867
 14836                           
 14837                           ; BSR set to: 0
 14838  00433C  0EFF               	movlw	255
 14839  00433E  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14840  004340  0EFF               	movlw	255
 14841  004342  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14842  004344  0EFF               	movlw	255
 14843  004346  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14844  004348  0E01               	movlw	1
 14845  00434A  277E               	addwf	___ftadd@f2& (0+255),f,b
 14846  00434C  0E00               	movlw	0
 14847  00434E  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14848  004350  0E00               	movlw	0
 14849  004352  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14850                           
 14851                           ; BSR set to: 0
 14852  004354  0E01               	movlw	1
 14853  004356  6F84               	movwf	___ftadd@sign& (0+255),b
 14854  004358                     l1867:
 14855                           
 14856                           ; BSR set to: 0
 14857                           
 14858                           ; BSR set to: 0
 14859  004358  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14860  00435C  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14861  004360  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14862  004364  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14863  004368  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14864  00436C  ECD4  F027         	call	___ftpack	;wreg free
 14865  004370  C060  F07B         	movff	?___ftpack,?___ftadd
 14866  004374  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14867  004378  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14868  00437C  0012               	return	
 14869  00437E                     __end_of___ftadd:
 14870                           	opt stack 0
 14871                           tblptru	equ	0xFF8
 14872                           tblptrh	equ	0xFF7
 14873                           tblptrl	equ	0xFF6
 14874                           tablat	equ	0xFF5
 14875                           prodh	equ	0xFF4
 14876                           prodl	equ	0xFF3
 14877                           intcon	equ	0xFF2
 14878                           intcon2	equ	0xFF1
 14879                           intcon3	equ	0xFF0
 14880                           postinc0	equ	0xFEE
 14881                           wreg	equ	0xFE8
 14882                           postdec1	equ	0xFE5
 14883                           fsr1l	equ	0xFE1
 14884                           indf2	equ	0xFDF
 14885                           postinc2	equ	0xFDE
 14886                           postdec2	equ	0xFDD
 14887                           fsr2h	equ	0xFDA
 14888                           fsr2l	equ	0xFD9
 14889                           status	equ	0xFD8
 14890                           
 14891 ;; *************** function ___ftpack *****************
 14892 ;; Defined at:
 14893 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;  arg             3    0[BANK0 ] unsigned um
 14896 ;;  exp             1    3[BANK0 ] unsigned char 
 14897 ;;  sign            1    4[BANK0 ] unsigned char 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;		None
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  3    0[BANK0 ] float 
 14902 ;; Registers used:
 14903 ;;		wreg, status,2, status,0
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14909 ;;      Params:         0       5       0       0       0       0       0       0       0
 14910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14911 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14912 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14913 ;;Total ram usage:        8 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; Hardware stack levels required when called:    6
 14916 ;; This function calls:
 14917 ;;		Nothing
 14918 ;; This function is called by:
 14919 ;;		___ftadd
 14920 ;;		___ftdiv
 14921 ;;		___ftmul
 14922 ;;		___lwtoft
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           	psect	text16
 14927  004FA8                     __ptext16:
 14928                           	opt stack 0
 14929  004FA8                     ___ftpack:
 14930                           	opt stack 22
 14931                           
 14932                           ;incstack = 0
 14933  004FA8  0100               	movlb	0	; () banked
 14934  004FAA  5163               	movf	___ftpack@exp& (0+255),w,b
 14935  004FAC  B4D8               	btfsc	status,2,c
 14936  004FAE  D005               	goto	u8630
 14937                           
 14938                           ; BSR set to: 0
 14939  004FB0  5160               	movf	___ftpack@arg& (0+255),w,b
 14940  004FB2  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14941  004FB4  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14942  004FB6  A4D8               	btfss	status,2,c
 14943  004FB8  D00C               	goto	l1808
 14944  004FBA                     u8630:
 14945                           
 14946                           ; BSR set to: 0
 14947                           
 14948                           ; BSR set to: 0
 14949  004FBA  0E00               	movlw	0
 14950  004FBC  6F60               	movwf	?___ftpack& (0+255),b
 14951  004FBE  0E00               	movlw	0
 14952  004FC0  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14953  004FC2  0E00               	movlw	0
 14954  004FC4  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14955                           
 14956                           ; BSR set to: 0
 14957  004FC6  0012               	return	
 14958  004FC8                     
 14959                           ; BSR set to: 0
 14960                           
 14961                           ; BSR set to: 0
 14962  004FC8  2B63               	incf	___ftpack@exp& (0+255),f,b
 14963  004FCA  90D8               	bcf	status,0,c
 14964  004FCC  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14965  004FCE  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14966  004FD0  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14967  004FD2                     l1808:
 14968                           
 14969                           ; BSR set to: 0
 14970                           
 14971                           ; BSR set to: 0
 14972  004FD2  0E00               	movlw	0
 14973  004FD4  1560               	andwf	___ftpack@arg& (0+255),w,b
 14974  004FD6  6F65               	movwf	??___ftpack& (0+255),b
 14975  004FD8  0E00               	movlw	0
 14976  004FDA  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14977  004FDC  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14978  004FDE  0EFE               	movlw	254
 14979  004FE0  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14980  004FE2  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14981  004FE4  5165               	movf	??___ftpack& (0+255),w,b
 14982  004FE6  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14983  004FE8  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14984  004FEA  B4D8               	btfsc	status,2,c
 14985  004FEC  D00C               	goto	l1811
 14986  004FEE  D7EC               	goto	l1809
 14987  004FF0                     
 14988                           ; BSR set to: 0
 14989                           
 14990                           ; BSR set to: 0
 14991  004FF0  2B63               	incf	___ftpack@exp& (0+255),f,b
 14992                           
 14993                           ; BSR set to: 0
 14994  004FF2  0E01               	movlw	1
 14995  004FF4  2760               	addwf	___ftpack@arg& (0+255),f,b
 14996  004FF6  0E00               	movlw	0
 14997  004FF8  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14998  004FFA  0E00               	movlw	0
 14999  004FFC  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 15000  004FFE  90D8               	bcf	status,0,c
 15001  005000  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 15002  005002  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 15003  005004  3360               	rrcf	___ftpack@arg& (0+255),f,b
 15004  005006                     l1811:
 15005                           
 15006                           ; BSR set to: 0
 15007                           
 15008                           ; BSR set to: 0
 15009  005006  0E00               	movlw	0
 15010  005008  1560               	andwf	___ftpack@arg& (0+255),w,b
 15011  00500A  6F65               	movwf	??___ftpack& (0+255),b
 15012  00500C  0E00               	movlw	0
 15013  00500E  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 15014  005010  6F66               	movwf	(??___ftpack+1)& (0+255),b
 15015  005012  0EFF               	movlw	255
 15016  005014  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 15017  005016  6F67               	movwf	(??___ftpack+2)& (0+255),b
 15018  005018  5165               	movf	??___ftpack& (0+255),w,b
 15019  00501A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 15020  00501C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 15021  00501E  B4D8               	btfsc	status,2,c
 15022  005020  D006               	goto	l1814
 15023  005022  D7E6               	goto	l1812
 15024  005024                     
 15025                           ; BSR set to: 0
 15026                           
 15027                           ; BSR set to: 0
 15028  005024  0763               	decf	___ftpack@exp& (0+255),f,b
 15029  005026  90D8               	bcf	status,0,c
 15030  005028  3760               	rlcf	___ftpack@arg& (0+255),f,b
 15031  00502A  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 15032  00502C  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 15033  00502E                     l1814:
 15034                           
 15035                           ; BSR set to: 0
 15036                           
 15037                           ; BSR set to: 0
 15038  00502E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 15039  005030  D003               	goto	u8670
 15040                           
 15041                           ; BSR set to: 0
 15042  005032  0E02               	movlw	2
 15043  005034  6163               	cpfslt	___ftpack@exp& (0+255),b
 15044  005036  D7F6               	goto	l1815
 15045  005038                     u8670:
 15046                           
 15047                           ; BSR set to: 0
 15048                           
 15049                           ; BSR set to: 0
 15050  005038  A163               	btfss	___ftpack@exp& (0+255),0,b
 15051                           
 15052                           ; BSR set to: 0
 15053  00503A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 15054                           
 15055                           ; BSR set to: 0
 15056                           
 15057                           ; BSR set to: 0
 15058  00503C  90D8               	bcf	status,0,c
 15059  00503E  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15060  005040  5163               	movf	___ftpack@exp& (0+255),w,b
 15061  005042  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15062                           
 15063                           ; BSR set to: 0
 15064  005044  5164               	movf	___ftpack@sign& (0+255),w,b
 15065  005046  A4D8               	btfss	status,2,c
 15066                           
 15067                           ; BSR set to: 0
 15068  005048  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15069                           
 15070                           ; BSR set to: 0
 15071                           
 15072                           ; BSR set to: 0
 15073  00504A  C060  F060         	movff	___ftpack@arg,?___ftpack
 15074  00504E  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15075  005052  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15076  005056  0012               	return	
 15077  005058                     __end_of___ftpack:
 15078                           	opt stack 0
 15079                           tblptru	equ	0xFF8
 15080                           tblptrh	equ	0xFF7
 15081                           tblptrl	equ	0xFF6
 15082                           tablat	equ	0xFF5
 15083                           prodh	equ	0xFF4
 15084                           prodl	equ	0xFF3
 15085                           intcon	equ	0xFF2
 15086                           intcon2	equ	0xFF1
 15087                           intcon3	equ	0xFF0
 15088                           postinc0	equ	0xFEE
 15089                           wreg	equ	0xFE8
 15090                           postdec1	equ	0xFE5
 15091                           fsr1l	equ	0xFE1
 15092                           indf2	equ	0xFDF
 15093                           postinc2	equ	0xFDE
 15094                           postdec2	equ	0xFDD
 15095                           fsr2h	equ	0xFDA
 15096                           fsr2l	equ	0xFD9
 15097                           status	equ	0xFD8
 15098                           
 15099 ;; *************** function _faseAtual *****************
 15100 ;; Defined at:
 15101 ;;		line 8 in file "src/FuncoesControlador.h"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  tp              1    wreg     unsigned char 
 15104 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 15105 ;;		 -> fase(1), 
 15106 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 15107 ;;		 -> tempajt(1), 
 15108 ;; Auto vars:     Size  Location     Type
 15109 ;;  tp              1    5[BANK0 ] unsigned char 
 15110 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 15111 ;;  _fasee          1    4[BANK0 ] unsigned char 
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  2    0[BANK0 ] PTR unsigned char 
 15114 ;; Registers used:
 15115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15116 ;; Tracked objects:
 15117 ;;		On entry : 0/0
 15118 ;;		On exit  : 0/0
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15121 ;;      Params:         0       4       0       0       0       0       0       0       0
 15122 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15124 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15125 ;;Total ram usage:        7 bytes
 15126 ;; Hardware stack levels used:    1
 15127 ;; Hardware stack levels required when called:    6
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_main
 15132 ;; This function uses a non-reentrant model
 15133 ;;
 15134                           
 15135                           	psect	text17
 15136  00465C                     __ptext17:
 15137                           	opt stack 0
 15138  00465C                     _faseAtual:
 15139                           	opt stack 24
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;incstack = 0
 15143                           ;faseAtual@tp stored from wreg
 15144  00465C  0100               	movlb	0	; () banked
 15145  00465E  6F65               	movwf	faseAtual@tp& (0+255),b
 15146                           
 15147                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 15148  004660  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15149  004664  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15150  004668  50DF               	movf	indf2,w,c
 15151  00466A  0100               	movlb	0	; () banked
 15152  00466C  6F64               	movwf	faseAtual@_fasee& (0+255),b
 15153                           
 15154                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 15155  00466E  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15156  004672  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15157  004676  50DF               	movf	indf2,w,c
 15158  004678  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;FuncoesControlador.h: 11: if (tp == '?') {
 15162  00467A  0E3F               	movlw	63
 15163  00467C  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15164  00467E  B4D8               	btfsc	status,2,c
 15165  004680  D01A               	goto	l869
 15166  004682  D027               	goto	l868
 15167  004684                     
 15168                           ; BSR set to: 0
 15169                           
 15170                           ; BSR set to: 0
 15171  004684  0EDF               	movlw	low STR_1
 15172  004686  6F60               	movwf	?_faseAtual& (0+255),b
 15173  004688  0E7E               	movlw	high STR_1
 15174  00468A  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15175                           
 15176                           ; BSR set to: 0
 15177  00468C  0012               	return	
 15178  00468E                     
 15179                           ; BSR set to: 0
 15180                           
 15181                           ; BSR set to: 0
 15182  00468E  0EBD               	movlw	low STR_2
 15183  004690  6F60               	movwf	?_faseAtual& (0+255),b
 15184  004692  0E7E               	movlw	high STR_2
 15185  004694  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15186                           
 15187                           ; BSR set to: 0
 15188  004696  0012               	return	
 15189  004698                     
 15190                           ; BSR set to: 0
 15191                           
 15192                           ; BSR set to: 0
 15193  004698  0ED4               	movlw	low STR_3
 15194  00469A  6F60               	movwf	?_faseAtual& (0+255),b
 15195  00469C  0E7E               	movlw	high STR_3
 15196  00469E  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15197                           
 15198                           ; BSR set to: 0
 15199  0046A0  0012               	return	
 15200  0046A2                     
 15201                           ; BSR set to: 0
 15202                           
 15203                           ; BSR set to: 0
 15204  0046A2  0E15               	movlw	low STR_4
 15205  0046A4  6F60               	movwf	?_faseAtual& (0+255),b
 15206  0046A6  0E7F               	movlw	high STR_4
 15207  0046A8  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15208                           
 15209                           ; BSR set to: 0
 15210  0046AA  0012               	return	
 15211  0046AC                     
 15212                           ; BSR set to: 0
 15213                           
 15214                           ; BSR set to: 0
 15215  0046AC  0EE7               	movlw	low STR_5
 15216  0046AE  6F60               	movwf	?_faseAtual& (0+255),b
 15217  0046B0  0E7F               	movlw	high STR_5
 15218  0046B2  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;FuncoesControlador.h: 18: }
 15222                           
 15223                           ; BSR set to: 0
 15224  0046B4  0012               	return	
 15225  0046B6                     l869:
 15226                           
 15227                           ; BSR set to: 0
 15228                           
 15229                           ; BSR set to: 0
 15230  0046B6  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15231                           
 15232                           ; Switch size 1, requested type "space"
 15233                           ; Number of cases is 4, Range of values is 1 to 4
 15234                           ; switch strategies available:
 15235                           ; Name         Instructions Cycles
 15236                           ; simple_byte           13     7 (average)
 15237                           ;	Chosen strategy is simple_byte
 15238  0046B8  0A01               	xorlw	1	; case 1
 15239  0046BA  B4D8               	btfsc	status,2,c
 15240  0046BC  D7E3               	goto	l870
 15241  0046BE  0A03               	xorlw	3	; case 2
 15242  0046C0  B4D8               	btfsc	status,2,c
 15243  0046C2  D7E5               	goto	l872
 15244  0046C4  0A01               	xorlw	1	; case 3
 15245  0046C6  B4D8               	btfsc	status,2,c
 15246  0046C8  D7E7               	goto	l873
 15247  0046CA  0A07               	xorlw	7	; case 4
 15248  0046CC  B4D8               	btfsc	status,2,c
 15249  0046CE  D7E9               	goto	l874
 15250  0046D0  D7ED               	goto	l875
 15251  0046D2                     l868:
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15255                           
 15256                           ; BSR set to: 0
 15257  0046D2  0E46               	movlw	70
 15258  0046D4  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15259  0046D6  A4D8               	btfss	status,2,c
 15260  0046D8  D031               	goto	l878
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15264  0046DA  0E65               	movlw	101
 15265  0046DC  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15266  0046DE  D007               	goto	l879
 15267                           
 15268                           ; BSR set to: 0
 15269  0046E0  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15270  0046E4  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15271  0046E8  0E01               	movlw	1
 15272  0046EA  6EDF               	movwf	indf2,c
 15273  0046EC  0012               	return	
 15274  0046EE                     l879:
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15278                           
 15279                           ; BSR set to: 0
 15280  0046EE  0E64               	movlw	100
 15281  0046F0  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15282  0046F2  D00A               	goto	l881
 15283                           
 15284                           ; BSR set to: 0
 15285  0046F4  0E6F               	movlw	111
 15286  0046F6  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15287  0046F8  D007               	goto	l881
 15288                           
 15289                           ; BSR set to: 0
 15290  0046FA  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15291  0046FE  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15292  004702  0E02               	movlw	2
 15293  004704  6EDF               	movwf	indf2,c
 15294  004706  0012               	return	
 15295  004708                     l881:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15299                           
 15300                           ; BSR set to: 0
 15301  004708  0E6E               	movlw	110
 15302  00470A  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15303  00470C  D00A               	goto	l883
 15304                           
 15305                           ; BSR set to: 0
 15306  00470E  0E86               	movlw	134
 15307  004710  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15308  004712  D007               	goto	l883
 15309                           
 15310                           ; BSR set to: 0
 15311  004714  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15312  004718  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15313  00471C  0E03               	movlw	3
 15314  00471E  6EDF               	movwf	indf2,c
 15315  004720  0012               	return	
 15316  004722                     l883:
 15317                           
 15318                           ; BSR set to: 0
 15319                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15320                           
 15321                           ; BSR set to: 0
 15322  004722  0E85               	movlw	133
 15323  004724  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15324  004726  0012               	return	
 15325                           
 15326                           ; BSR set to: 0
 15327  004728  0EA1               	movlw	161
 15328  00472A  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15329  00472C  0012               	return	
 15330                           
 15331                           ; BSR set to: 0
 15332  00472E  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15333  004732  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15334  004736  0E04               	movlw	4
 15335  004738  6EDF               	movwf	indf2,c
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;FuncoesControlador.h: 25: } else
 15339                           
 15340                           ; BSR set to: 0
 15341                           
 15342                           ; BSR set to: 0
 15343                           
 15344                           ; BSR set to: 0
 15345  00473A  0012               	return	
 15346  00473C                     l878:
 15347                           
 15348                           ; BSR set to: 0
 15349                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15350                           
 15351                           ; BSR set to: 0
 15352  00473C  0E41               	movlw	65
 15353  00473E  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15354  004740  A4D8               	btfss	status,2,c
 15355  004742  0012               	return	
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15359  004744  05EE               	decf	_fase& (0+255),w,b
 15360  004746  A4D8               	btfss	status,2,c
 15361  004748  D007               	goto	l888
 15362                           
 15363                           ; BSR set to: 0
 15364  00474A  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15365  00474E  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15366  004752  0E55               	movlw	85
 15367  004754  6EDF               	movwf	indf2,c
 15368  004756  0012               	return	
 15369  004758                     l888:
 15370                           
 15371                           ; BSR set to: 0
 15372                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15373                           
 15374                           ; BSR set to: 0
 15375  004758  0E02               	movlw	2
 15376  00475A  19EE               	xorwf	_fase& (0+255),w,b
 15377  00475C  A4D8               	btfss	status,2,c
 15378  00475E  D007               	goto	l890
 15379                           
 15380                           ; BSR set to: 0
 15381  004760  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15382  004764  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15383  004768  0E65               	movlw	101
 15384  00476A  6EDF               	movwf	indf2,c
 15385  00476C  0012               	return	
 15386  00476E                     l890:
 15387                           
 15388                           ; BSR set to: 0
 15389                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15390                           
 15391                           ; BSR set to: 0
 15392  00476E  0E03               	movlw	3
 15393  004770  19EE               	xorwf	_fase& (0+255),w,b
 15394  004772  A4D8               	btfss	status,2,c
 15395  004774  D007               	goto	l892
 15396                           
 15397                           ; BSR set to: 0
 15398  004776  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15399  00477A  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15400  00477E  0E6F               	movlw	111
 15401  004780  6EDF               	movwf	indf2,c
 15402  004782  0012               	return	
 15403  004784                     l892:
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15407                           
 15408                           ; BSR set to: 0
 15409  004784  0E04               	movlw	4
 15410  004786  19EE               	xorwf	_fase& (0+255),w,b
 15411  004788  A4D8               	btfss	status,2,c
 15412  00478A  0012               	return	
 15413                           
 15414                           ; BSR set to: 0
 15415  00478C  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15416  004790  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15417  004794  0E86               	movlw	134
 15418  004796  6EDF               	movwf	indf2,c
 15419                           
 15420                           ; BSR set to: 0
 15421                           
 15422                           ; BSR set to: 0
 15423                           
 15424                           ; BSR set to: 0
 15425                           
 15426                           ; BSR set to: 0
 15427                           
 15428                           ; BSR set to: 0
 15429                           
 15430                           ; BSR set to: 0
 15431  004798  0012               	return	
 15432  00479A                     __end_of_faseAtual:
 15433                           	opt stack 0
 15434                           tblptru	equ	0xFF8
 15435                           tblptrh	equ	0xFF7
 15436                           tblptrl	equ	0xFF6
 15437                           tablat	equ	0xFF5
 15438                           prodh	equ	0xFF4
 15439                           prodl	equ	0xFF3
 15440                           intcon	equ	0xFF2
 15441                           intcon2	equ	0xFF1
 15442                           intcon3	equ	0xFF0
 15443                           postinc0	equ	0xFEE
 15444                           wreg	equ	0xFE8
 15445                           postdec1	equ	0xFE5
 15446                           fsr1l	equ	0xFE1
 15447                           indf2	equ	0xFDF
 15448                           postinc2	equ	0xFDE
 15449                           postdec2	equ	0xFDD
 15450                           fsr2h	equ	0xFDA
 15451                           fsr2l	equ	0xFD9
 15452                           status	equ	0xFD8
 15453                           
 15454 ;; *************** function _enviaDadosWifi *****************
 15455 ;; Defined at:
 15456 ;;		line 189 in file "src/conexaoWifi.h"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;		None
 15459 ;; Auto vars:     Size  Location     Type
 15460 ;;  AUX            15  103[BANK0 ] unsigned char [15]
 15461 ;;  i               1  120[BANK0 ] unsigned char 
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  1    wreg      void 
 15464 ;; Registers used:
 15465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15471 ;;      Params:         0       0       0       0       0       0       0       0       0
 15472 ;;      Locals:         0      18       0       0       0       0       0       0       0
 15473 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15474 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15475 ;;Total ram usage:       20 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    9
 15478 ;; This function calls:
 15479 ;;		___wmul
 15480 ;;		_delay
 15481 ;;		_getMac
 15482 ;;		_limpaBuffer
 15483 ;;		_printf
 15484 ;;		_sprintf
 15485 ;;		_strlen
 15486 ;;		_strstr
 15487 ;; This function is called by:
 15488 ;;		_main
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text18
 15493  002BCE                     __ptext18:
 15494                           	opt stack 0
 15495  002BCE                     _enviaDadosWifi:
 15496                           	opt stack 21
 15497                           
 15498                           ;conexaoWifi.h: 190: if (t_wifi_restart == 0) {
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;incstack = 0
 15502  002BCE  0101               	movlb	1	; () banked
 15503  002BD0  5197               	movf	_t_wifi_restart& (0+255),w,b
 15504  002BD2  A4D8               	btfss	status,2,c
 15505  002BD4  D005               	goto	l1027
 15506                           
 15507                           ; BSR set to: 1
 15508                           ;conexaoWifi.h: 191: f_wifi_processo = 0;
 15509  002BD6  0E00               	movlw	0
 15510  002BD8  6F96               	movwf	_f_wifi_processo& (0+255),b
 15511                           
 15512                           ;conexaoWifi.h: 192: t_wifi_restart = 10;
 15513  002BDA  0E0A               	movlw	10
 15514  002BDC  6F97               	movwf	_t_wifi_restart& (0+255),b
 15515                           
 15516                           ;conexaoWifi.h: 193: } else if (strlen(wifi_MAC) == 12) {
 15517  002BDE  0012               	return	
 15518  002BE0                     l1027:
 15519                           
 15520                           ; BSR set to: 1
 15521                           
 15522                           ; BSR set to: 1
 15523  002BE0  0EB0               	movlw	low _wifi_MAC
 15524  002BE2  0100               	movlb	0	; () banked
 15525  002BE4  6F60               	movwf	strlen@s& (0+255),b
 15526  002BE6  0E02               	movlw	high _wifi_MAC
 15527  002BE8  6F61               	movwf	(strlen@s+1)& (0+255),b
 15528  002BEA  EC71  F02C         	call	_strlen	;wreg free
 15529  002BEE  0E0C               	movlw	12
 15530  002BF0  0100               	movlb	0	; () banked
 15531  002BF2  1960               	xorwf	?_strlen& (0+255),w,b
 15532  002BF4  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15533  002BF6  B4D8               	btfsc	status,2,c
 15534  002BF8  D214               	goto	l1030
 15535  002BFA  D27C               	goto	l1062
 15536  002BFC                     
 15537                           ;conexaoWifi.h: 196: limpaBuffer();
 15538                           
 15539                           ; BSR set to: 0
 15540  002BFC  EC78  F02D         	call	_limpaBuffer	;wreg free
 15541                           
 15542                           ;conexaoWifi.h: 197: printf("AT+CWMODE=1\r\n");
 15543  002C00  0E35               	movlw	low STR_44
 15544  002C02  0100               	movlb	0	; () banked
 15545  002C04  6F81               	movwf	printf@f& (0+255),b
 15546  002C06  0E7E               	movlw	high STR_44
 15547  002C08  6F82               	movwf	(printf@f+1)& (0+255),b
 15548  002C0A  ECB7  F02D         	call	_printf	;wreg free
 15549                           
 15550                           ;conexaoWifi.h: 198: wifi_conectado = 0;
 15551  002C0E  0E00               	movlw	0
 15552  002C10  0101               	movlb	1	; () banked
 15553  002C12  6F9A               	movwf	_wifi_conectado& (0+255),b
 15554                           
 15555                           ; BSR set to: 1
 15556                           ;conexaoWifi.h: 199: f_wifi_processo++;
 15557  002C14  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15558                           
 15559                           ;conexaoWifi.h: 200: break;
 15560  002C16  0012               	return	
 15561  002C18                     
 15562                           ; BSR set to: 1
 15563                           ;conexaoWifi.h: 202: if (strstr(bufferSerial, "OK") != (0)) {
 15564                           
 15565                           ; BSR set to: 1
 15566  002C18  0E42               	movlw	low _bufferSerial
 15567  002C1A  0100               	movlb	0	; () banked
 15568  002C1C  6F6F               	movwf	strstr@s1& (0+255),b
 15569  002C1E  0E02               	movlw	high _bufferSerial
 15570  002C20  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15571  002C22  0EF6               	movlw	low STR_13
 15572  002C24  6F71               	movwf	strstr@s2& (0+255),b
 15573  002C26  0E7F               	movlw	high STR_13
 15574  002C28  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15575  002C2A  EC82  F028         	call	_strstr	;wreg free
 15576  002C2E  0100               	movlb	0	; () banked
 15577  002C30  516F               	movf	?_strstr& (0+255),w,b
 15578  002C32  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15579  002C34  B4D8               	btfsc	status,2,c
 15580  002C36  0012               	return	
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;conexaoWifi.h: 203: f_wifi_processo++;
 15584  002C38  0101               	movlb	1	; () banked
 15585  002C3A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15586                           
 15587                           ; BSR set to: 1
 15588                           ;conexaoWifi.h: 204: }
 15589                           ;conexaoWifi.h: 205: break;
 15590  002C3C  0012               	return	
 15591  002C3E                     
 15592                           ; BSR set to: 1
 15593                           ;conexaoWifi.h: 207: limpaBuffer();
 15594                           
 15595                           ; BSR set to: 1
 15596  002C3E  EC78  F02D         	call	_limpaBuffer	;wreg free
 15597                           
 15598                           ;conexaoWifi.h: 208: printf("AT+CIPMUX=0\r\n");
 15599  002C42  0E27               	movlw	low STR_46
 15600  002C44  0100               	movlb	0	; () banked
 15601  002C46  6F81               	movwf	printf@f& (0+255),b
 15602  002C48  0E7E               	movlw	high STR_46
 15603  002C4A  6F82               	movwf	(printf@f+1)& (0+255),b
 15604  002C4C  ECB7  F02D         	call	_printf	;wreg free
 15605                           
 15606                           ;conexaoWifi.h: 209: f_wifi_processo++;
 15607  002C50  0101               	movlb	1	; () banked
 15608  002C52  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15609                           
 15610                           ;conexaoWifi.h: 210: break;
 15611  002C54  0012               	return	
 15612  002C56                     
 15613                           ; BSR set to: 1
 15614                           ;conexaoWifi.h: 212: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "link"
      +                          ) != (0)) {
 15615                           
 15616                           ; BSR set to: 1
 15617  002C56  0E42               	movlw	low _bufferSerial
 15618  002C58  0100               	movlb	0	; () banked
 15619  002C5A  6F6F               	movwf	strstr@s1& (0+255),b
 15620  002C5C  0E02               	movlw	high _bufferSerial
 15621  002C5E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15622  002C60  0EDD               	movlw	low STR_48
 15623  002C62  6F71               	movwf	strstr@s2& (0+255),b
 15624  002C64  0E7F               	movlw	high STR_48
 15625  002C66  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15626  002C68  EC82  F028         	call	_strstr	;wreg free
 15627  002C6C  0100               	movlb	0	; () banked
 15628  002C6E  516F               	movf	?_strstr& (0+255),w,b
 15629  002C70  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15630  002C72  B4D8               	btfsc	status,2,c
 15631  002C74  D002               	goto	u13100
 15632  002C76  0E01               	movlw	1
 15633  002C78  D001               	goto	u13102
 15634  002C7A                     u13100:
 15635  002C7A  0E00               	movlw	0
 15636  002C7C                     u13102:
 15637  002C7C  6FC5               	movwf	??_enviaDadosWifi& (0+255),b
 15638  002C7E  0E42               	movlw	low _bufferSerial
 15639  002C80  6F6F               	movwf	strstr@s1& (0+255),b
 15640  002C82  0E02               	movlw	high _bufferSerial
 15641  002C84  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15642  002C86  0EF6               	movlw	low STR_13
 15643  002C88  6F71               	movwf	strstr@s2& (0+255),b
 15644  002C8A  0E7F               	movlw	high STR_13
 15645  002C8C  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15646  002C8E  EC82  F028         	call	_strstr	;wreg free
 15647  002C92  0100               	movlb	0	; () banked
 15648  002C94  516F               	movf	?_strstr& (0+255),w,b
 15649  002C96  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15650  002C98  B4D8               	btfsc	status,2,c
 15651  002C9A  D002               	goto	u13110
 15652  002C9C  0E01               	movlw	1
 15653  002C9E  D001               	goto	u13112
 15654  002CA0                     u13110:
 15655  002CA0  0E00               	movlw	0
 15656  002CA2                     u13112:
 15657  002CA2  11C5               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15658  002CA4  A0E8               	btfss	wreg,0,c
 15659  002CA6  0012               	return	
 15660                           
 15661                           ; BSR set to: 0
 15662                           ;conexaoWifi.h: 213: f_wifi_processo++;
 15663  002CA8  0101               	movlb	1	; () banked
 15664  002CAA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15665                           
 15666                           ; BSR set to: 1
 15667                           ;conexaoWifi.h: 214: }
 15668                           ;conexaoWifi.h: 215: break;
 15669  002CAC  0012               	return	
 15670  002CAE                     
 15671                           ; BSR set to: 1
 15672                           ;conexaoWifi.h: 217: limpaBuffer();
 15673                           
 15674                           ; BSR set to: 1
 15675  002CAE  EC78  F02D         	call	_limpaBuffer	;wreg free
 15676                           
 15677                           ;conexaoWifi.h: 218: delay(10);
 15678  002CB2  0E00               	movlw	0
 15679  002CB4  0100               	movlb	0	; () banked
 15680  002CB6  6F61               	movwf	(delay@x+1)& (0+255),b
 15681  002CB8  0E0A               	movlw	10
 15682  002CBA  6F60               	movwf	delay@x& (0+255),b
 15683  002CBC  EC97  F02E         	call	_delay	;wreg free
 15684                           
 15685                           ;conexaoWifi.h: 219: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15686  002CC0  0EFE               	movlw	low STR_49
 15687  002CC2  0100               	movlb	0	; () banked
 15688  002CC4  6F81               	movwf	printf@f& (0+255),b
 15689  002CC6  0E7B               	movlw	high STR_49
 15690  002CC8  6F82               	movwf	(printf@f+1)& (0+255),b
 15691  002CCA  0EA1               	movlw	low _ssid
 15692  002CCC  6F83               	movwf	(?_printf+2)& (0+255),b
 15693  002CCE  0E02               	movlw	high _ssid
 15694  002CD0  6F84               	movwf	(?_printf+3)& (0+255),b
 15695  002CD2  0E92               	movlw	low _senha
 15696  002CD4  6F85               	movwf	(?_printf+4)& (0+255),b
 15697  002CD6  0E02               	movlw	high _senha
 15698  002CD8  6F86               	movwf	(?_printf+5)& (0+255),b
 15699  002CDA  ECB7  F02D         	call	_printf	;wreg free
 15700                           
 15701                           ;conexaoWifi.h: 220: f_wifi_processo++;
 15702  002CDE  0101               	movlb	1	; () banked
 15703  002CE0  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;conexaoWifi.h: 221: t_wifi_restart = 35;
 15707  002CE2  0E23               	movlw	35
 15708  002CE4  6F97               	movwf	_t_wifi_restart& (0+255),b
 15709                           
 15710                           ;conexaoWifi.h: 222: break;
 15711  002CE6  0012               	return	
 15712  002CE8                     
 15713                           ; BSR set to: 1
 15714                           ;conexaoWifi.h: 225: f_wifi_processo++;
 15715                           
 15716                           ; BSR set to: 1
 15717  002CE8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15718                           
 15719                           ;conexaoWifi.h: 227: break;
 15720  002CEA  0012               	return	
 15721  002CEC                     
 15722                           ; BSR set to: 1
 15723                           ;conexaoWifi.h: 229: limpaBuffer();
 15724                           
 15725                           ; BSR set to: 1
 15726  002CEC  EC78  F02D         	call	_limpaBuffer	;wreg free
 15727                           
 15728                           ;conexaoWifi.h: 230: if (t_wifi_restart <= 15) {
 15729  002CF0  0E10               	movlw	16
 15730  002CF2  0101               	movlb	1	; () banked
 15731  002CF4  6197               	cpfslt	_t_wifi_restart& (0+255),b
 15732  002CF6  0012               	return	
 15733                           
 15734                           ; BSR set to: 1
 15735                           ;conexaoWifi.h: 231: printf("AT+CIPSTATUS\r\n");
 15736  002CF8  0EFA               	movlw	low STR_50
 15737  002CFA  0100               	movlb	0	; () banked
 15738  002CFC  6F81               	movwf	printf@f& (0+255),b
 15739  002CFE  0E7D               	movlw	high STR_50
 15740  002D00  6F82               	movwf	(printf@f+1)& (0+255),b
 15741  002D02  ECB7  F02D         	call	_printf	;wreg free
 15742                           
 15743                           ;conexaoWifi.h: 232: f_wifi_processo++;
 15744  002D06  0101               	movlb	1	; () banked
 15745  002D08  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;conexaoWifi.h: 233: }
 15749                           ;conexaoWifi.h: 234: break;
 15750  002D0A  0012               	return	
 15751  002D0C                     
 15752                           ; BSR set to: 1
 15753                           ;conexaoWifi.h: 236: if (strstr(bufferSerial, "2") != (0) | strstr(bufferSerial, "4") !=
      +                           (0)) {
 15754                           
 15755                           ; BSR set to: 1
 15756  002D0C  0E42               	movlw	low _bufferSerial
 15757  002D0E  0100               	movlb	0	; () banked
 15758  002D10  6F6F               	movwf	strstr@s1& (0+255),b
 15759  002D12  0E02               	movlw	high _bufferSerial
 15760  002D14  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15761  002D16  0EFD               	movlw	low STR_52
 15762  002D18  6F71               	movwf	strstr@s2& (0+255),b
 15763  002D1A  0E7F               	movlw	high STR_52
 15764  002D1C  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15765  002D1E  EC82  F028         	call	_strstr	;wreg free
 15766  002D22  0100               	movlb	0	; () banked
 15767  002D24  516F               	movf	?_strstr& (0+255),w,b
 15768  002D26  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15769  002D28  B4D8               	btfsc	status,2,c
 15770  002D2A  D002               	goto	u13140
 15771  002D2C  0E01               	movlw	1
 15772  002D2E  D001               	goto	u13142
 15773  002D30                     u13140:
 15774  002D30  0E00               	movlw	0
 15775  002D32                     u13142:
 15776  002D32  6FC5               	movwf	??_enviaDadosWifi& (0+255),b
 15777  002D34  0E42               	movlw	low _bufferSerial
 15778  002D36  6F6F               	movwf	strstr@s1& (0+255),b
 15779  002D38  0E02               	movlw	high _bufferSerial
 15780  002D3A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15781  002D3C  0EFB               	movlw	low STR_51
 15782  002D3E  6F71               	movwf	strstr@s2& (0+255),b
 15783  002D40  0E7F               	movlw	high STR_51
 15784  002D42  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15785  002D44  EC82  F028         	call	_strstr	;wreg free
 15786  002D48  0100               	movlb	0	; () banked
 15787  002D4A  516F               	movf	?_strstr& (0+255),w,b
 15788  002D4C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15789  002D4E  B4D8               	btfsc	status,2,c
 15790  002D50  D002               	goto	u13150
 15791  002D52  0E01               	movlw	1
 15792  002D54  D001               	goto	u13152
 15793  002D56                     u13150:
 15794  002D56  0E00               	movlw	0
 15795  002D58                     u13152:
 15796  002D58  11C5               	iorwf	??_enviaDadosWifi& (0+255),w,b
 15797  002D5A  A0E8               	btfss	wreg,0,c
 15798  002D5C  0012               	return	
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;conexaoWifi.h: 237: wifi_conectado = 1;
 15802  002D5E  0E01               	movlw	1
 15803  002D60  0101               	movlb	1	; () banked
 15804  002D62  6F9A               	movwf	_wifi_conectado& (0+255),b
 15805                           
 15806                           ; BSR set to: 1
 15807                           ;conexaoWifi.h: 238: f_wifi_processo++;
 15808  002D64  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;conexaoWifi.h: 239: }
 15812                           ;conexaoWifi.h: 240: break;
 15813  002D66  0012               	return	
 15814  002D68                     
 15815                           ; BSR set to: 1
 15816                           ;conexaoWifi.h: 242: limpaBuffer();
 15817                           
 15818                           ; BSR set to: 1
 15819  002D68  EC78  F02D         	call	_limpaBuffer	;wreg free
 15820                           
 15821                           ;conexaoWifi.h: 245: printf("AT+CIPSTART=\"TCP\",\"api-technow.herokuapp.com\",80\r\n");
 15822  002D6C  0E39               	movlw	low STR_53
 15823  002D6E  0100               	movlb	0	; () banked
 15824  002D70  6F81               	movwf	printf@f& (0+255),b
 15825  002D72  0E7B               	movlw	high STR_53
 15826  002D74  6F82               	movwf	(printf@f+1)& (0+255),b
 15827  002D76  ECB7  F02D         	call	_printf	;wreg free
 15828                           
 15829                           ;conexaoWifi.h: 246: f_wifi_processo++;
 15830  002D7A  0101               	movlb	1	; () banked
 15831  002D7C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15832                           
 15833                           ;conexaoWifi.h: 247: break;
 15834  002D7E  0012               	return	
 15835  002D80                     
 15836                           ; BSR set to: 1
 15837                           ;conexaoWifi.h: 249: if (strstr(bufferSerial, "OK") != (0)) {
 15838                           
 15839                           ; BSR set to: 1
 15840  002D80  0E42               	movlw	low _bufferSerial
 15841  002D82  0100               	movlb	0	; () banked
 15842  002D84  6F6F               	movwf	strstr@s1& (0+255),b
 15843  002D86  0E02               	movlw	high _bufferSerial
 15844  002D88  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15845  002D8A  0EF6               	movlw	low STR_13
 15846  002D8C  6F71               	movwf	strstr@s2& (0+255),b
 15847  002D8E  0E7F               	movlw	high STR_13
 15848  002D90  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15849  002D92  EC82  F028         	call	_strstr	;wreg free
 15850  002D96  0100               	movlb	0	; () banked
 15851  002D98  516F               	movf	?_strstr& (0+255),w,b
 15852  002D9A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15853  002D9C  B4D8               	btfsc	status,2,c
 15854  002D9E  0012               	return	
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;conexaoWifi.h: 250: f_wifi_processo++;
 15858  002DA0  0101               	movlb	1	; () banked
 15859  002DA2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15860                           
 15861                           ; BSR set to: 1
 15862                           ;conexaoWifi.h: 251: }
 15863                           ;conexaoWifi.h: 252: break;
 15864  002DA4  0012               	return	
 15865  002DA6                     
 15866                           ; BSR set to: 1
 15867                           ;conexaoWifi.h: 254: limpaBuffer();
 15868                           
 15869                           ; BSR set to: 1
 15870  002DA6  EC78  F02D         	call	_limpaBuffer	;wreg free
 15871                           
 15872                           ;conexaoWifi.h: 255: printf("AT+CIPSENDEX=250\r\n");
 15873  002DAA  0EDE               	movlw	low STR_55
 15874  002DAC  0100               	movlb	0	; () banked
 15875  002DAE  6F81               	movwf	printf@f& (0+255),b
 15876  002DB0  0E7C               	movlw	high STR_55
 15877  002DB2  6F82               	movwf	(printf@f+1)& (0+255),b
 15878  002DB4  ECB7  F02D         	call	_printf	;wreg free
 15879                           
 15880                           ;conexaoWifi.h: 256: f_wifi_processo++;
 15881  002DB8  0101               	movlb	1	; () banked
 15882  002DBA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15883                           
 15884                           ;conexaoWifi.h: 257: break;
 15885  002DBC  0012               	return	
 15886  002DBE                     
 15887                           ; BSR set to: 1
 15888                           ;conexaoWifi.h: 259: if (strstr(bufferSerial, ">") != (0)) {
 15889                           
 15890                           ; BSR set to: 1
 15891  002DBE  0E42               	movlw	low _bufferSerial
 15892  002DC0  0100               	movlb	0	; () banked
 15893  002DC2  6F6F               	movwf	strstr@s1& (0+255),b
 15894  002DC4  0E02               	movlw	high _bufferSerial
 15895  002DC6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 15896  002DC8  0E78               	movlw	low (STR_107+18)
 15897  002DCA  6F71               	movwf	strstr@s2& (0+255),b
 15898  002DCC  0E7C               	movlw	high (STR_107+18)
 15899  002DCE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 15900  002DD0  EC82  F028         	call	_strstr	;wreg free
 15901  002DD4  0100               	movlb	0	; () banked
 15902  002DD6  516F               	movf	?_strstr& (0+255),w,b
 15903  002DD8  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 15904  002DDA  B4D8               	btfsc	status,2,c
 15905  002DDC  0012               	return	
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;conexaoWifi.h: 260: f_wifi_processo++;
 15909  002DDE  0101               	movlb	1	; () banked
 15910  002DE0  2B96               	incf	_f_wifi_processo& (0+255),f,b
 15911                           
 15912                           ; BSR set to: 1
 15913                           ;conexaoWifi.h: 261: }
 15914                           ;conexaoWifi.h: 262: break;
 15915  002DE2  0012               	return	
 15916  002DE4                     
 15917                           ; BSR set to: 1
 15918                           ;conexaoWifi.h: 264: limpaBuffer();
 15919                           
 15920                           ; BSR set to: 1
 15921  002DE4  EC78  F02D         	call	_limpaBuffer	;wreg free
 15922                           
 15923                           ;conexaoWifi.h: 265: char i = 0;
 15924  002DE8  0E00               	movlw	0
 15925  002DEA  0100               	movlb	0	; () banked
 15926  002DEC  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;conexaoWifi.h: 266: char AUX[15];
 15930                           ;conexaoWifi.h: 267: sprintf(AUX, "%s", "May 14 2019");
 15931  002DEE  0EC7               	movlw	low enviaDadosWifi@AUX
 15932  002DF0  6F81               	movwf	sprintf@wh& (0+255),b
 15933  002DF2  0E00               	movlw	high enviaDadosWifi@AUX
 15934  002DF4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15935  002DF6  0E26               	movlw	low (STR_82+7)
 15936  002DF8  6F83               	movwf	sprintf@f& (0+255),b
 15937  002DFA  0E7F               	movlw	high (STR_82+7)
 15938  002DFC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15939  002DFE  0EA5               	movlw	low STR_58
 15940  002E00  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15941  002E02  0E7E               	movlw	high STR_58
 15942  002E04  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15943  002E06  EC13  F02D         	call	_sprintf	;wreg free
 15944                           
 15945                           ;conexaoWifi.h: 268: for (i = 0; i < strlen(AUX); i++) {
 15946  002E0A  0E00               	movlw	0
 15947  002E0C  0100               	movlb	0	; () banked
 15948  002E0E  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15949  002E10  D017               	goto	l1051
 15950  002E12                     
 15951                           ; BSR set to: 0
 15952                           ;conexaoWifi.h: 269: if (AUX[i] == ' ') AUX[i] = '-';
 15953                           
 15954                           ; BSR set to: 0
 15955  002E12  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15956  002E14  0D01               	mullw	1
 15957  002E16  0EC7               	movlw	low enviaDadosWifi@AUX
 15958  002E18  24F3               	addwf	prodl,w,c
 15959  002E1A  6ED9               	movwf	fsr2l,c
 15960  002E1C  0E00               	movlw	high enviaDadosWifi@AUX
 15961  002E1E  20F4               	addwfc	prodh,w,c
 15962  002E20  6EDA               	movwf	fsr2h,c
 15963  002E22  0E20               	movlw	32
 15964  002E24  18DE               	xorwf	postinc2,w,c
 15965  002E26  A4D8               	btfss	status,2,c
 15966  002E28  D00A               	goto	l1053
 15967                           
 15968                           ; BSR set to: 0
 15969  002E2A  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15970  002E2C  0D01               	mullw	1
 15971  002E2E  0EC7               	movlw	low enviaDadosWifi@AUX
 15972  002E30  24F3               	addwf	prodl,w,c
 15973  002E32  6ED9               	movwf	fsr2l,c
 15974  002E34  0E00               	movlw	high enviaDadosWifi@AUX
 15975  002E36  20F4               	addwfc	prodh,w,c
 15976  002E38  6EDA               	movwf	fsr2h,c
 15977  002E3A  0E2D               	movlw	45
 15978  002E3C  6EDF               	movwf	indf2,c
 15979  002E3E                     l1053:
 15980                           
 15981                           ; BSR set to: 0
 15982                           
 15983                           ; BSR set to: 0
 15984  002E3E  2BD8               	incf	enviaDadosWifi@i& (0+255),f,b
 15985  002E40                     l1051:
 15986                           
 15987                           ; BSR set to: 0
 15988                           
 15989                           ; BSR set to: 0
 15990  002E40  0EC7               	movlw	low enviaDadosWifi@AUX
 15991  002E42  6F60               	movwf	strlen@s& (0+255),b
 15992  002E44  0E00               	movlw	high enviaDadosWifi@AUX
 15993  002E46  6F61               	movwf	(strlen@s+1)& (0+255),b
 15994  002E48  EC71  F02C         	call	_strlen	;wreg free
 15995  002E4C  0100               	movlb	0	; () banked
 15996  002E4E  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15997  002E50  6FC5               	movwf	??_enviaDadosWifi& (0+255),b
 15998  002E52  6BC6               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 15999  002E54  5160               	movf	?_strlen& (0+255),w,b
 16000  002E56  5DC5               	subwf	??_enviaDadosWifi& (0+255),w,b
 16001  002E58  5161               	movf	(?_strlen+1)& (0+255),w,b
 16002  002E5A  59C6               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16003  002E5C  A0D8               	btfss	status,0,c
 16004  002E5E  D7D9               	goto	l1052
 16005                           
 16006                           ; BSR set to: 0
 16007                           ;conexaoWifi.h: 270: }
 16008                           ;conexaoWifi.h: 273: printf("GET /api/controller?i=%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%s/%
      +                          d/%s/%d&p=%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d HTTP/1.1\r\nHost: api-technow.her
      +                          okuapp.com\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_trabal
      +                          ho, tra
 16009                           
 16010                           ; BSR set to: 0
 16011  002E60  C1EF  F060         	movff	_wifi_SENHA,___wmul@multiplier
 16012  002E64  C1F0  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 16013  002E68  0E00               	movlw	0
 16014  002E6A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16015  002E6C  0E27               	movlw	39
 16016  002E6E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 16017  002E70  ECAC  F02E         	call	___wmul	;wreg free
 16018  002E74  C060  F0D6         	movff	?___wmul,_enviaDadosWifi$2490
 16019  002E78  C061  F0D7         	movff	?___wmul+1,_enviaDadosWifi$2490+1
 16020                           
 16021                           ;conexaoWifi.h: 270: }
 16022                           ;conexaoWifi.h: 273: printf("GET /api/controller?i=%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%s/%
      +                          d/%s/%d&p=%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d/%d HTTP/1.1\r\nHost: api-technow.her
      +                          okuapp.com\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_trabal
      +                          ho, tra
 16023  002E7C  0E97               	movlw	low STR_59
 16024  002E7E  0100               	movlb	0	; () banked
 16025  002E80  6F81               	movwf	printf@f& (0+255),b
 16026  002E82  0E7A               	movlw	high STR_59
 16027  002E84  6F82               	movwf	(printf@f+1)& (0+255),b
 16028  002E86  C0FD  F083         	movff	_temp,?_printf+2
 16029  002E8A  6B84               	clrf	(?_printf+3)& (0+255),b
 16030  002E8C  C0EC  F085         	movff	_tempajt,?_printf+4
 16031  002E90  6B86               	clrf	(?_printf+5)& (0+255),b
 16032  002E92  C0FC  F087         	movff	_umid,?_printf+6
 16033  002E96  6B88               	clrf	(?_printf+7)& (0+255),b
 16034  002E98  C0EB  F089         	movff	_umidajt,?_printf+8
 16035  002E9C  6B8A               	clrf	(?_printf+9)& (0+255),b
 16036  002E9E  C0F9  F08B         	movff	_fornalha,?_printf+10
 16037  002EA2  6B8C               	clrf	(?_printf+11)& (0+255),b
 16038  002EA4  C0FA  F08D         	movff	_buzzer,?_printf+12
 16039  002EA8  6B8E               	clrf	(?_printf+13)& (0+255),b
 16040  002EAA  C0F6  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 16041  002EAE  6B90               	clrf	(?_printf+15)& (0+255),b
 16042  002EB0  C0F8  F091         	movff	_trava_fase,?_printf+16
 16043  002EB4  6B92               	clrf	(?_printf+17)& (0+255),b
 16044  002EB6  C0EE  F093         	movff	_fase,?_printf+18
 16045  002EBA  6B94               	clrf	(?_printf+19)& (0+255),b
 16046  002EBC  C0ED  F095         	movff	_clima,?_printf+20
 16047  002EC0  6B96               	clrf	(?_printf+21)& (0+255),b
 16048  002EC2  C0F7  F097         	movff	_tipo_sensor_umidade,?_printf+22
 16049  002EC6  6B98               	clrf	(?_printf+23)& (0+255),b
 16050  002EC8  0EB0               	movlw	low _wifi_MAC
 16051  002ECA  6F99               	movwf	(?_printf+24)& (0+255),b
 16052  002ECC  0E02               	movlw	high _wifi_MAC
 16053  002ECE  6F9A               	movwf	(?_printf+25)& (0+255),b
 16054  002ED0  C0D6  F09B         	movff	_enviaDadosWifi$2490,?_printf+26
 16055  002ED4  C0D7  F09C         	movff	_enviaDadosWifi$2490+1,?_printf+27
 16056  002ED8  0EC7               	movlw	low enviaDadosWifi@AUX
 16057  002EDA  6F9D               	movwf	(?_printf+28)& (0+255),b
 16058  002EDC  0E00               	movlw	high enviaDadosWifi@AUX
 16059  002EDE  6F9E               	movwf	(?_printf+29)& (0+255),b
 16060  002EE0  C0FE  F09F         	movff	_f_falta_energia,?_printf+30
 16061  002EE4  6BA0               	clrf	(?_printf+31)& (0+255),b
 16062  002EE6  C1F3  F0A1         	movff	_senha_desbloqueio_func,?_printf+32
 16063  002EEA  6BA2               	clrf	(?_printf+33)& (0+255),b
 16064  002EEC  C0F7  F0A3         	movff	_tipo_sensor_umidade,?_printf+34
 16065  002EF0  6BA4               	clrf	(?_printf+35)& (0+255),b
 16066  002EF2  C1F5  F0A5         	movff	_h_abafador,?_printf+36
 16067  002EF6  6BA6               	clrf	(?_printf+37)& (0+255),b
 16068  002EF8  C1F4  F0A7         	movff	_h_flap,?_printf+38
 16069  002EFC  6BA8               	clrf	(?_printf+39)& (0+255),b
 16070  002EFE  C1F6  F0A9         	movff	_h_venotinha,?_printf+40
 16071  002F02  6BAA               	clrf	(?_printf+41)& (0+255),b
 16072  002F04  C0F1  F0AB         	movff	_h_modo_seguranca,?_printf+42
 16073  002F08  6BAC               	clrf	(?_printf+43)& (0+255),b
 16074  002F0A  C0F0  F0AD         	movff	_h_buzzer,?_printf+44
 16075  002F0E  6BAE               	clrf	(?_printf+45)& (0+255),b
 16076  002F10  C0F5  F0AF         	movff	_t_flap_ligado,?_printf+46
 16077  002F14  6BB0               	clrf	(?_printf+47)& (0+255),b
 16078  002F16  C0F4  F0B1         	movff	_t_flap_intervalo,?_printf+48
 16079  002F1A  6BB2               	clrf	(?_printf+49)& (0+255),b
 16080  002F1C  C0FF  F0B3         	movff	_t_buzzer_religar,?_printf+50
 16081  002F20  6BB4               	clrf	(?_printf+51)& (0+255),b
 16082  002F22  C0F3  F0B5         	movff	_t_temp_automatica,?_printf+52
 16083  002F26  6BB6               	clrf	(?_printf+53)& (0+255),b
 16084  002F28  C1F1  F0B7         	movff	_wifi_habilita_alteracao,?_printf+54
 16085  002F2C  C1F2  F0B8         	movff	_wifi_habilita_alteracao+1,?_printf+55
 16086  002F30  C1EF  F0B9         	movff	_wifi_SENHA,?_printf+56
 16087  002F34  C1F0  F0BA         	movff	_wifi_SENHA+1,?_printf+57
 16088  002F38  C0EF  F0BB         	movff	_h_subir_temp_automatica,?_printf+58
 16089  002F3C  6BBC               	clrf	(?_printf+59)& (0+255),b
 16090  002F3E  C0F2  F0BD         	movff	_t_religar_ventoinha_automatica,?_printf+60
 16091  002F42  6BBE               	clrf	(?_printf+61)& (0+255),b
 16092  002F44  ECB7  F02D         	call	_printf	;wreg free
 16093                           
 16094                           ;conexaoWifi.h: 274: f_wifi_processo++;
 16095  002F48  0101               	movlb	1	; () banked
 16096  002F4A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16097                           
 16098                           ;conexaoWifi.h: 275: break;
 16099  002F4C  0012               	return	
 16100  002F4E                     
 16101                           ; BSR set to: 1
 16102                           ;conexaoWifi.h: 279: if (strstr(bufferSerial, "200") != (0) | strstr(bufferSerial, "save
      +                          ") != (0)) {
 16103                           
 16104                           ; BSR set to: 1
 16105  002F4E  0E42               	movlw	low _bufferSerial
 16106  002F50  0100               	movlb	0	; () banked
 16107  002F52  6F6F               	movwf	strstr@s1& (0+255),b
 16108  002F54  0E02               	movlw	high _bufferSerial
 16109  002F56  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16110  002F58  0ED8               	movlw	low STR_61
 16111  002F5A  6F71               	movwf	strstr@s2& (0+255),b
 16112  002F5C  0E7F               	movlw	high STR_61
 16113  002F5E  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16114  002F60  EC82  F028         	call	_strstr	;wreg free
 16115  002F64  0100               	movlb	0	; () banked
 16116  002F66  516F               	movf	?_strstr& (0+255),w,b
 16117  002F68  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16118  002F6A  B4D8               	btfsc	status,2,c
 16119  002F6C  D002               	goto	u13210
 16120  002F6E  0E01               	movlw	1
 16121  002F70  D001               	goto	u13212
 16122  002F72                     u13210:
 16123  002F72  0E00               	movlw	0
 16124  002F74                     u13212:
 16125  002F74  6FC5               	movwf	??_enviaDadosWifi& (0+255),b
 16126  002F76  0E42               	movlw	low _bufferSerial
 16127  002F78  6F6F               	movwf	strstr@s1& (0+255),b
 16128  002F7A  0E02               	movlw	high _bufferSerial
 16129  002F7C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16130  002F7E  0EEB               	movlw	low STR_60
 16131  002F80  6F71               	movwf	strstr@s2& (0+255),b
 16132  002F82  0E7F               	movlw	high STR_60
 16133  002F84  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16134  002F86  EC82  F028         	call	_strstr	;wreg free
 16135  002F8A  0100               	movlb	0	; () banked
 16136  002F8C  516F               	movf	?_strstr& (0+255),w,b
 16137  002F8E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16138  002F90  B4D8               	btfsc	status,2,c
 16139  002F92  D002               	goto	u13220
 16140  002F94  0E01               	movlw	1
 16141  002F96  D001               	goto	u13222
 16142  002F98                     u13220:
 16143  002F98  0E00               	movlw	0
 16144  002F9A                     u13222:
 16145  002F9A  11C5               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16146  002F9C  A0E8               	btfss	wreg,0,c
 16147  002F9E  0012               	return	
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;conexaoWifi.h: 280: f_wifi_processo++;
 16151  002FA0  0101               	movlb	1	; () banked
 16152  002FA2  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16153                           
 16154                           ; BSR set to: 1
 16155                           ;conexaoWifi.h: 281: }
 16156                           ;conexaoWifi.h: 282: break;
 16157  002FA4  0012               	return	
 16158  002FA6                     
 16159                           ; BSR set to: 1
 16160                           ;conexaoWifi.h: 284: limpaBuffer();
 16161                           
 16162                           ; BSR set to: 1
 16163  002FA6  EC78  F02D         	call	_limpaBuffer	;wreg free
 16164                           
 16165                           ;conexaoWifi.h: 285: printf("AT+CIPCLOSE\r\n");
 16166  002FAA  0E5F               	movlw	low STR_62
 16167  002FAC  0100               	movlb	0	; () banked
 16168  002FAE  6F81               	movwf	printf@f& (0+255),b
 16169  002FB0  0E7E               	movlw	high STR_62
 16170  002FB2  6F82               	movwf	(printf@f+1)& (0+255),b
 16171  002FB4  ECB7  F02D         	call	_printf	;wreg free
 16172                           
 16173                           ;conexaoWifi.h: 286: f_wifi_processo++;
 16174  002FB8  0101               	movlb	1	; () banked
 16175  002FBA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16176                           
 16177                           ;conexaoWifi.h: 287: break;
 16178  002FBC  0012               	return	
 16179  002FBE                     
 16180                           ; BSR set to: 1
 16181                           ;conexaoWifi.h: 289: if (strstr(bufferSerial, "OK") != (0) | strstr(bufferSerial, "CLOSE
      +                          D") != (0)) {
 16182                           
 16183                           ; BSR set to: 1
 16184  002FBE  0E42               	movlw	low _bufferSerial
 16185  002FC0  0100               	movlb	0	; () banked
 16186  002FC2  6F6F               	movwf	strstr@s1& (0+255),b
 16187  002FC4  0E02               	movlw	high _bufferSerial
 16188  002FC6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16189  002FC8  0E91               	movlw	low STR_64
 16190  002FCA  6F71               	movwf	strstr@s2& (0+255),b
 16191  002FCC  0E7F               	movlw	high STR_64
 16192  002FCE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16193  002FD0  EC82  F028         	call	_strstr	;wreg free
 16194  002FD4  0100               	movlb	0	; () banked
 16195  002FD6  516F               	movf	?_strstr& (0+255),w,b
 16196  002FD8  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16197  002FDA  B4D8               	btfsc	status,2,c
 16198  002FDC  D002               	goto	u13240
 16199  002FDE  0E01               	movlw	1
 16200  002FE0  D001               	goto	u13242
 16201  002FE2                     u13240:
 16202  002FE2  0E00               	movlw	0
 16203  002FE4                     u13242:
 16204  002FE4  6FC5               	movwf	??_enviaDadosWifi& (0+255),b
 16205  002FE6  0E42               	movlw	low _bufferSerial
 16206  002FE8  6F6F               	movwf	strstr@s1& (0+255),b
 16207  002FEA  0E02               	movlw	high _bufferSerial
 16208  002FEC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16209  002FEE  0EF6               	movlw	low STR_13
 16210  002FF0  6F71               	movwf	strstr@s2& (0+255),b
 16211  002FF2  0E7F               	movlw	high STR_13
 16212  002FF4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16213  002FF6  EC82  F028         	call	_strstr	;wreg free
 16214  002FFA  0100               	movlb	0	; () banked
 16215  002FFC  516F               	movf	?_strstr& (0+255),w,b
 16216  002FFE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16217  003000  B4D8               	btfsc	status,2,c
 16218  003002  D002               	goto	u13250
 16219  003004  0E01               	movlw	1
 16220  003006  D001               	goto	u13252
 16221  003008                     u13250:
 16222  003008  0E00               	movlw	0
 16223  00300A                     u13252:
 16224  00300A  11C5               	iorwf	??_enviaDadosWifi& (0+255),w,b
 16225  00300C  A0E8               	btfss	wreg,0,c
 16226  00300E  0012               	return	
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;conexaoWifi.h: 290: f_wifi_processo = 6;
 16230  003010  0E06               	movlw	6
 16231  003012  0101               	movlb	1	; () banked
 16232  003014  6F96               	movwf	_f_wifi_processo& (0+255),b
 16233                           
 16234                           ;conexaoWifi.h: 291: t_wifi_restart = 25;
 16235  003016  0E19               	movlw	25
 16236  003018  6F97               	movwf	_t_wifi_restart& (0+255),b
 16237                           
 16238                           ; BSR set to: 1
 16239                           ;conexaoWifi.h: 292: }
 16240                           ;conexaoWifi.h: 293: break;
 16241  00301A  0012               	return	
 16242  00301C                     
 16243                           ; BSR set to: 1
 16244                           ;conexaoWifi.h: 295: f_wifi_processo = 0;
 16245                           
 16246                           ; BSR set to: 1
 16247  00301C  0E00               	movlw	0
 16248  00301E  6F96               	movwf	_f_wifi_processo& (0+255),b
 16249                           
 16250                           ;conexaoWifi.h: 296: }
 16251  003020  0012               	return	
 16252  003022                     l1030:
 16253                           
 16254                           ; BSR set to: 1
 16255  003022  0101               	movlb	1	; () banked
 16256  003024  5196               	movf	_f_wifi_processo& (0+255),w,b
 16257                           
 16258                           ; Switch size 1, requested type "space"
 16259                           ; Number of cases is 16, Range of values is 0 to 15
 16260                           ; switch strategies available:
 16261                           ; Name         Instructions Cycles
 16262                           ; simple_byte           49    25 (average)
 16263                           ;	Chosen strategy is simple_byte
 16264  003026  0A00               	xorlw	0	; case 0
 16265  003028  B4D8               	btfsc	status,2,c
 16266  00302A  D5E8               	goto	l1031
 16267  00302C  0A01               	xorlw	1	; case 1
 16268  00302E  B4D8               	btfsc	status,2,c
 16269  003030  D5F3               	goto	l1033
 16270  003032  0A03               	xorlw	3	; case 2
 16271  003034  B4D8               	btfsc	status,2,c
 16272  003036  D603               	goto	l1035
 16273  003038  0A01               	xorlw	1	; case 3
 16274  00303A  B4D8               	btfsc	status,2,c
 16275  00303C  D60C               	goto	l1036
 16276  00303E  0A07               	xorlw	7	; case 4
 16277  003040  B4D8               	btfsc	status,2,c
 16278  003042  D635               	goto	l1038
 16279  003044  0A01               	xorlw	1	; case 5
 16280  003046  B4D8               	btfsc	status,2,c
 16281  003048  D64F               	goto	l1039
 16282  00304A  0A03               	xorlw	3	; case 6
 16283  00304C  B4D8               	btfsc	status,2,c
 16284  00304E  D64E               	goto	l1040
 16285  003050  0A01               	xorlw	1	; case 7
 16286  003052  B4D8               	btfsc	status,2,c
 16287  003054  D65B               	goto	l1042
 16288  003056  0A0F               	xorlw	15	; case 8
 16289  003058  B4D8               	btfsc	status,2,c
 16290  00305A  D686               	goto	l1044
 16291  00305C  0A01               	xorlw	1	; case 9
 16292  00305E  B4D8               	btfsc	status,2,c
 16293  003060  D68F               	goto	l1045
 16294  003062  0A03               	xorlw	3	; case 10
 16295  003064  B4D8               	btfsc	status,2,c
 16296  003066  D69F               	goto	l1047
 16297  003068  0A01               	xorlw	1	; case 11
 16298  00306A  B4D8               	btfsc	status,2,c
 16299  00306C  D6A8               	goto	l1048
 16300  00306E  0A07               	xorlw	7	; case 12
 16301  003070  B4D8               	btfsc	status,2,c
 16302  003072  D6B8               	goto	l1050
 16303  003074  0A01               	xorlw	1	; case 13
 16304  003076  B4D8               	btfsc	status,2,c
 16305  003078  D76A               	goto	l1055
 16306  00307A  0A03               	xorlw	3	; case 14
 16307  00307C  B4D8               	btfsc	status,2,c
 16308  00307E  D793               	goto	l1057
 16309  003080  0A01               	xorlw	1	; case 15
 16310  003082  B4D8               	btfsc	status,2,c
 16311  003084  D79C               	goto	l1058
 16312  003086  D7CA               	goto	l1060
 16313  003088                     
 16314                           ; BSR set to: 1
 16315                           ;conexaoWifi.h: 300: limpaBuffer();
 16316                           
 16317                           ; BSR set to: 1
 16318  003088  EC78  F02D         	call	_limpaBuffer	;wreg free
 16319                           
 16320                           ;conexaoWifi.h: 301: printf("AT+CIFSR\r\n");
 16321  00308C  0EC9               	movlw	low STR_65
 16322  00308E  0100               	movlb	0	; () banked
 16323  003090  6F81               	movwf	printf@f& (0+255),b
 16324  003092  0E7E               	movlw	high STR_65
 16325  003094  6F82               	movwf	(printf@f+1)& (0+255),b
 16326  003096  ECB7  F02D         	call	_printf	;wreg free
 16327                           
 16328                           ;conexaoWifi.h: 302: f_wifi_processo++;
 16329  00309A  0101               	movlb	1	; () banked
 16330  00309C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 16331                           
 16332                           ;conexaoWifi.h: 303: break;
 16333  00309E  0012               	return	
 16334  0030A0                     
 16335                           ; BSR set to: 1
 16336                           ;conexaoWifi.h: 305: if (strstr(bufferSerial, "MAC") != (0)) {
 16337                           
 16338                           ; BSR set to: 1
 16339  0030A0  0E42               	movlw	low _bufferSerial
 16340  0030A2  0100               	movlb	0	; () banked
 16341  0030A4  6F6F               	movwf	strstr@s1& (0+255),b
 16342  0030A6  0E02               	movlw	high _bufferSerial
 16343  0030A8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16344  0030AA  0EEF               	movlw	low STR_66
 16345  0030AC  6F71               	movwf	strstr@s2& (0+255),b
 16346  0030AE  0E7F               	movlw	high STR_66
 16347  0030B0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16348  0030B2  EC82  F028         	call	_strstr	;wreg free
 16349  0030B6  0100               	movlb	0	; () banked
 16350  0030B8  516F               	movf	?_strstr& (0+255),w,b
 16351  0030BA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 16352  0030BC  B4D8               	btfsc	status,2,c
 16353  0030BE  0012               	return	
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;conexaoWifi.h: 306: getMac(strstr(bufferSerial, "MAC"), wifi_MAC);
 16357  0030C0  0E42               	movlw	low _bufferSerial
 16358  0030C2  6F6F               	movwf	strstr@s1& (0+255),b
 16359  0030C4  0E02               	movlw	high _bufferSerial
 16360  0030C6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 16361  0030C8  0EEF               	movlw	low STR_66
 16362  0030CA  6F71               	movwf	strstr@s2& (0+255),b
 16363  0030CC  0E7F               	movlw	high STR_66
 16364  0030CE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 16365  0030D0  EC82  F028         	call	_strstr	;wreg free
 16366  0030D4  C06F  F073         	movff	?_strstr,getMac@mac
 16367  0030D8  C070  F074         	movff	?_strstr+1,getMac@mac+1
 16368  0030DC  0EB0               	movlw	low _wifi_MAC
 16369  0030DE  0100               	movlb	0	; () banked
 16370  0030E0  6F75               	movwf	getMac@var& (0+255),b
 16371  0030E2  0E02               	movlw	high _wifi_MAC
 16372  0030E4  6F76               	movwf	(getMac@var+1)& (0+255),b
 16373  0030E6  ECBF  F021         	call	_getMac	;wreg free
 16374                           
 16375                           ;conexaoWifi.h: 307: }
 16376                           ;conexaoWifi.h: 308: break;
 16377  0030EA  0012               	return	
 16378  0030EC                     
 16379                           ;conexaoWifi.h: 310: f_wifi_processo = 0;
 16380  0030EC  0E00               	movlw	0
 16381  0030EE  0101               	movlb	1	; () banked
 16382  0030F0  6F96               	movwf	_f_wifi_processo& (0+255),b
 16383                           
 16384                           ; BSR set to: 1
 16385                           ;conexaoWifi.h: 312: }
 16386                           
 16387                           ;conexaoWifi.h: 311: break;
 16388  0030F2  0012               	return	
 16389  0030F4                     l1062:
 16390                           
 16391                           ; BSR set to: 1
 16392  0030F4  0101               	movlb	1	; () banked
 16393  0030F6  5196               	movf	_f_wifi_processo& (0+255),w,b
 16394                           
 16395                           ; Switch size 1, requested type "space"
 16396                           ; Number of cases is 2, Range of values is 0 to 1
 16397                           ; switch strategies available:
 16398                           ; Name         Instructions Cycles
 16399                           ; simple_byte            7     4 (average)
 16400                           ;	Chosen strategy is simple_byte
 16401  0030F8  0A00               	xorlw	0	; case 0
 16402  0030FA  B4D8               	btfsc	status,2,c
 16403  0030FC  D7C5               	goto	l1063
 16404  0030FE  0A01               	xorlw	1	; case 1
 16405  003100  B4D8               	btfsc	status,2,c
 16406  003102  D7CE               	goto	l1065
 16407  003104  D7F3               	goto	l1067
 16408  003106                     __end_of_enviaDadosWifi:
 16409                           	opt stack 0
 16410                           tblptru	equ	0xFF8
 16411                           tblptrh	equ	0xFF7
 16412                           tblptrl	equ	0xFF6
 16413                           tablat	equ	0xFF5
 16414                           prodh	equ	0xFF4
 16415                           prodl	equ	0xFF3
 16416                           intcon	equ	0xFF2
 16417                           intcon2	equ	0xFF1
 16418                           intcon3	equ	0xFF0
 16419                           postinc0	equ	0xFEE
 16420                           wreg	equ	0xFE8
 16421                           postdec1	equ	0xFE5
 16422                           fsr1l	equ	0xFE1
 16423                           indf2	equ	0xFDF
 16424                           postinc2	equ	0xFDE
 16425                           postdec2	equ	0xFDD
 16426                           fsr2h	equ	0xFDA
 16427                           fsr2l	equ	0xFD9
 16428                           status	equ	0xFD8
 16429                           
 16430 ;; *************** function _getMac *****************
 16431 ;; Defined at:
 16432 ;;		line 28 in file "src/conexaoWifi.h"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;  mac             2   19[BANK0 ] PTR unsigned char 
 16435 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 16436 ;;		 -> bufferSerial(80), 
 16437 ;;  var             2   21[BANK0 ] PTR unsigned char 
 16438 ;;		 -> wifi_MAC(24), 
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  i               1   27[BANK0 ] unsigned char 
 16441 ;;  men             1   26[BANK0 ] unsigned char 
 16442 ;;  j               1   25[BANK0 ] unsigned char 
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16452 ;;      Params:         0       4       0       0       0       0       0       0       0
 16453 ;;      Locals:         0       3       0       0       0       0       0       0       0
 16454 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16455 ;;      Totals:         0       9       0       0       0       0       0       0       0
 16456 ;;Total ram usage:        9 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; Hardware stack levels required when called:    7
 16459 ;; This function calls:
 16460 ;;		_strlen
 16461 ;; This function is called by:
 16462 ;;		_enviaDadosWifi
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text19
 16467  00437E                     __ptext19:
 16468                           	opt stack 0
 16469  00437E                     _getMac:
 16470                           	opt stack 22
 16471                           
 16472                           ;conexaoWifi.h: 29: unsigned char i = 0;
 16473                           
 16474                           ;incstack = 0
 16475  00437E  0E00               	movlw	0
 16476  004380  0100               	movlb	0	; () banked
 16477  004382  6F7B               	movwf	getMac@i& (0+255),b
 16478                           
 16479                           ;conexaoWifi.h: 30: unsigned char j = 0;
 16480  004384  0E00               	movlw	0
 16481  004386  6F79               	movwf	getMac@j& (0+255),b
 16482                           
 16483                           ;conexaoWifi.h: 31: unsigned char men = 0;
 16484  004388  0E00               	movlw	0
 16485  00438A  6F7A               	movwf	getMac@men& (0+255),b
 16486                           
 16487                           ;conexaoWifi.h: 32: for (i = 0; i < strlen(mac); i++) {
 16488  00438C  0E00               	movlw	0
 16489  00438E  6F7B               	movwf	getMac@i& (0+255),b
 16490  004390  D09D               	goto	l965
 16491  004392                     
 16492                           ; BSR set to: 0
 16493                           ;conexaoWifi.h: 33: if (mac[i] == '"' && men == 0) {
 16494                           
 16495                           ; BSR set to: 0
 16496  004392  517B               	movf	getMac@i& (0+255),w,b
 16497  004394  0D01               	mullw	1
 16498  004396  C073  F077         	movff	getMac@mac,??_getMac
 16499  00439A  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16500  00439E  50F3               	movf	prodl,w,c
 16501  0043A0  2777               	addwf	??_getMac& (0+255),f,b
 16502  0043A2  50F4               	movf	prodh,w,c
 16503  0043A4  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16504  0043A6  C077  FFF6         	movff	??_getMac,tblptrl
 16505  0043AA  C078  FFF7         	movff	??_getMac+1,tblptrh
 16506  0043AE  6AF8               	clrf	tblptru,c
 16507  0043B0  0E07               	movlw	(high __ramtop+-1)
 16508  0043B2  64F7               	cpfsgt	tblptrh,c
 16509  0043B4  D003               	bra	u11767
 16510  0043B6  0008               	tblrd		*
 16511  0043B8  50F5               	movf	tablat,w,c
 16512  0043BA  D005               	bra	u11760
 16513  0043BC                     u11767:
 16514  0043BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16515  0043C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16516  0043C4  50EF               	movf	indf0,w,c
 16517  0043C6                     u11760:
 16518  0043C6  0A22               	xorlw	34
 16519  0043C8  A4D8               	btfss	status,2,c
 16520  0043CA  D007               	goto	l967
 16521  0043CC  0100               	movlb	0	; () banked
 16522  0043CE  517A               	movf	getMac@men& (0+255),w,b
 16523  0043D0  A4D8               	btfss	status,2,c
 16524  0043D2  D003               	goto	l967
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;conexaoWifi.h: 34: men = 1;
 16528  0043D4  0E01               	movlw	1
 16529  0043D6  6F7A               	movwf	getMac@men& (0+255),b
 16530                           
 16531                           ;conexaoWifi.h: 35: } else if (mac[i] == '"' && men == 1) {
 16532  0043D8  D077               	goto	l972
 16533  0043DA                     l967:
 16534                           
 16535                           ; BSR set to: 0
 16536  0043DA  0100               	movlb	0	; () banked
 16537  0043DC  517B               	movf	getMac@i& (0+255),w,b
 16538  0043DE  0D01               	mullw	1
 16539  0043E0  C073  F077         	movff	getMac@mac,??_getMac
 16540  0043E4  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16541  0043E8  50F3               	movf	prodl,w,c
 16542  0043EA  2777               	addwf	??_getMac& (0+255),f,b
 16543  0043EC  50F4               	movf	prodh,w,c
 16544  0043EE  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16545  0043F0  C077  FFF6         	movff	??_getMac,tblptrl
 16546  0043F4  C078  FFF7         	movff	??_getMac+1,tblptrh
 16547  0043F8  6AF8               	clrf	tblptru,c
 16548  0043FA  0E07               	movlw	(high __ramtop+-1)
 16549  0043FC  64F7               	cpfsgt	tblptrh,c
 16550  0043FE  D003               	bra	u11797
 16551  004400  0008               	tblrd		*
 16552  004402  50F5               	movf	tablat,w,c
 16553  004404  D005               	bra	u11790
 16554  004406                     u11797:
 16555  004406  CFF6 FFE9          	movff	tblptrl,fsr0l
 16556  00440A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16557  00440E  50EF               	movf	indf0,w,c
 16558  004410                     u11790:
 16559  004410  0A22               	xorlw	34
 16560  004412  A4D8               	btfss	status,2,c
 16561  004414  D00F               	goto	l969
 16562  004416  0100               	movlb	0	; () banked
 16563  004418  057A               	decf	getMac@men& (0+255),w,b
 16564  00441A  A4D8               	btfss	status,2,c
 16565  00441C  D00B               	goto	l969
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;conexaoWifi.h: 36: var[j] = '\0';
 16569  00441E  5179               	movf	getMac@j& (0+255),w,b
 16570  004420  0D01               	mullw	1
 16571  004422  50F3               	movf	prodl,w,c
 16572  004424  2575               	addwf	getMac@var& (0+255),w,b
 16573  004426  6ED9               	movwf	fsr2l,c
 16574  004428  50F4               	movf	prodh,w,c
 16575  00442A  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16576  00442C  6EDA               	movwf	fsr2h,c
 16577  00442E  0E00               	movlw	0
 16578  004430  6EDF               	movwf	indf2,c
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;conexaoWifi.h: 37: return;
 16582  004432  0012               	return	
 16583  004434                     l969:
 16584                           
 16585                           ; BSR set to: 0
 16586  004434  0100               	movlb	0	; () banked
 16587  004436  517A               	movf	getMac@men& (0+255),w,b
 16588  004438  B4D8               	btfsc	status,2,c
 16589  00443A  D046               	goto	l972
 16590                           
 16591                           ; BSR set to: 0
 16592  00443C  517B               	movf	getMac@i& (0+255),w,b
 16593  00443E  0D01               	mullw	1
 16594  004440  C073  F077         	movff	getMac@mac,??_getMac
 16595  004444  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16596  004448  50F3               	movf	prodl,w,c
 16597  00444A  2777               	addwf	??_getMac& (0+255),f,b
 16598  00444C  50F4               	movf	prodh,w,c
 16599  00444E  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16600  004450  C077  FFF6         	movff	??_getMac,tblptrl
 16601  004454  C078  FFF7         	movff	??_getMac+1,tblptrh
 16602  004458  6AF8               	clrf	tblptru,c
 16603  00445A  0E07               	movlw	(high __ramtop+-1)
 16604  00445C  64F7               	cpfsgt	tblptrh,c
 16605  00445E  D003               	bra	u11837
 16606  004460  0008               	tblrd		*
 16607  004462  50F5               	movf	tablat,w,c
 16608  004464  D005               	bra	u11830
 16609  004466                     u11837:
 16610  004466  CFF6 FFE9          	movff	tblptrl,fsr0l
 16611  00446A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16612  00446E  50EF               	movf	indf0,w,c
 16613  004470                     u11830:
 16614  004470  0A3A               	xorlw	58
 16615  004472  B4D8               	btfsc	status,2,c
 16616  004474  D029               	goto	l972
 16617  004476  0E0C               	movlw	12
 16618  004478  0100               	movlb	0	; () banked
 16619  00447A  6179               	cpfslt	getMac@j& (0+255),b
 16620  00447C  D025               	goto	l972
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;conexaoWifi.h: 39: var[j++] = mac[i];
 16624  00447E  517B               	movf	getMac@i& (0+255),w,b
 16625  004480  0D01               	mullw	1
 16626  004482  C073  F077         	movff	getMac@mac,??_getMac
 16627  004486  C074  F078         	movff	getMac@mac+1,??_getMac+1
 16628  00448A  50F3               	movf	prodl,w,c
 16629  00448C  2777               	addwf	??_getMac& (0+255),f,b
 16630  00448E  50F4               	movf	prodh,w,c
 16631  004490  2378               	addwfc	(??_getMac+1)& (0+255),f,b
 16632  004492  C077  FFF6         	movff	??_getMac,tblptrl
 16633  004496  C078  FFF7         	movff	??_getMac+1,tblptrh
 16634  00449A  6AF8               	clrf	tblptru,c
 16635  00449C  5179               	movf	getMac@j& (0+255),w,b
 16636  00449E  0D01               	mullw	1
 16637  0044A0  50F3               	movf	prodl,w,c
 16638  0044A2  2575               	addwf	getMac@var& (0+255),w,b
 16639  0044A4  6ED9               	movwf	fsr2l,c
 16640  0044A6  50F4               	movf	prodh,w,c
 16641  0044A8  2176               	addwfc	(getMac@var+1)& (0+255),w,b
 16642  0044AA  6EDA               	movwf	fsr2h,c
 16643  0044AC  0E07               	movlw	(high __ramtop+-1)
 16644  0044AE  64F7               	cpfsgt	tblptrh,c
 16645  0044B0  D003               	bra	u11867
 16646  0044B2  0008               	tblrd		*
 16647  0044B4  50F5               	movf	tablat,w,c
 16648  0044B6  D005               	bra	u11860
 16649  0044B8                     u11867:
 16650  0044B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16651  0044BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16652  0044C0  50EF               	movf	indf0,w,c
 16653  0044C2                     u11860:
 16654  0044C2  6EDF               	movwf	indf2,c
 16655  0044C4  0100               	movlb	0	; () banked
 16656  0044C6  2B79               	incf	getMac@j& (0+255),f,b
 16657  0044C8                     l972:
 16658                           
 16659                           ; BSR set to: 0
 16660                           
 16661                           ; BSR set to: 0
 16662                           
 16663                           ; BSR set to: 0
 16664  0044C8  0100               	movlb	0	; () banked
 16665  0044CA  2B7B               	incf	getMac@i& (0+255),f,b
 16666  0044CC                     l965:
 16667                           
 16668                           ; BSR set to: 0
 16669                           
 16670                           ; BSR set to: 0
 16671  0044CC  C073  F060         	movff	getMac@mac,strlen@s
 16672  0044D0  C074  F061         	movff	getMac@mac+1,strlen@s+1
 16673  0044D4  EC71  F02C         	call	_strlen	;wreg free
 16674  0044D8  0100               	movlb	0	; () banked
 16675  0044DA  517B               	movf	getMac@i& (0+255),w,b
 16676  0044DC  6F77               	movwf	??_getMac& (0+255),b
 16677  0044DE  6B78               	clrf	(??_getMac+1)& (0+255),b
 16678  0044E0  5160               	movf	?_strlen& (0+255),w,b
 16679  0044E2  5D77               	subwf	??_getMac& (0+255),w,b
 16680  0044E4  5161               	movf	(?_strlen+1)& (0+255),w,b
 16681  0044E6  5978               	subwfb	(??_getMac+1)& (0+255),w,b
 16682  0044E8  B0D8               	btfsc	status,0,c
 16683  0044EA  0012               	return	
 16684  0044EC  D752               	goto	l966
 16685  0044EE                     __end_of_getMac:
 16686                           	opt stack 0
 16687                           tblptru	equ	0xFF8
 16688                           tblptrh	equ	0xFF7
 16689                           tblptrl	equ	0xFF6
 16690                           tablat	equ	0xFF5
 16691                           prodh	equ	0xFF4
 16692                           prodl	equ	0xFF3
 16693                           intcon	equ	0xFF2
 16694                           intcon2	equ	0xFF1
 16695                           intcon3	equ	0xFF0
 16696                           indf0	equ	0xFEF
 16697                           postinc0	equ	0xFEE
 16698                           fsr0h	equ	0xFEA
 16699                           fsr0l	equ	0xFE9
 16700                           wreg	equ	0xFE8
 16701                           postdec1	equ	0xFE5
 16702                           fsr1l	equ	0xFE1
 16703                           indf2	equ	0xFDF
 16704                           postinc2	equ	0xFDE
 16705                           postdec2	equ	0xFDD
 16706                           fsr2h	equ	0xFDA
 16707                           fsr2l	equ	0xFD9
 16708                           status	equ	0xFD8
 16709                           
 16710 ;; *************** function _criaCaracteresCGRAM *****************
 16711 ;; Defined at:
 16712 ;;		line 180 in file "src/lcd.h"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;		None
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16717 ;;  i               1   67[BANK0 ] unsigned char 
 16718 ;;  j               1   66[BANK0 ] unsigned char 
 16719 ;;  k               1   65[BANK0 ] unsigned char 
 16720 ;; Return value:  Size  Location     Type
 16721 ;;                  1    wreg      void 
 16722 ;; Registers used:
 16723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16724 ;; Tracked objects:
 16725 ;;		On entry : 0/0
 16726 ;;		On exit  : 0/0
 16727 ;;		Unchanged: 0/0
 16728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16729 ;;      Params:         0       0       0       0       0       0       0       0       0
 16730 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16731 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16732 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16733 ;;Total ram usage:       64 bytes
 16734 ;; Hardware stack levels used:    1
 16735 ;; Hardware stack levels required when called:    8
 16736 ;; This function calls:
 16737 ;;		_Lcd_Cmd
 16738 ;;		_Lcd_Write_Char
 16739 ;; This function is called by:
 16740 ;;		_main
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744                           	psect	text20
 16745  005058                     __ptext20:
 16746                           	opt stack 0
 16747  005058                     _criaCaracteresCGRAM:
 16748                           	opt stack 22
 16749                           
 16750                           ;lcd.h: 187: const char character[7][8] = {
 16751                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16752                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16753                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16754                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16755                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16756                           ;lcd.h: 196: };
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;incstack = 0
 16760  005058  0E95               	movlw	low criaCaracteresCGRAM@F3896
 16761  00505A  6EF6               	movwf	tblptrl,c
 16762  00505C                     	if	1	;There is more than 1 active tblptr byte
 16763  00505C  0E77               	movlw	high criaCaracteresCGRAM@F3896
 16764  00505E  6EF7               	movwf	tblptrh,c
 16765  005060                     	endif
 16766  005060                     	if	0	;There are less than 3 active tblptr bytes
 16767  005060                     	endif
 16768  005060  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16769  005064  0E37               	movlw	55
 16770  005066                     u12560:
 16771  005066  0009               	tblrd		*+
 16772  005068  CFF5 FFDE          	movff	tablat,postinc2
 16773  00506C  06E8               	decf	wreg,f,c
 16774  00506E  E2FB               	bc	u12560
 16775                           
 16776                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16777  005070  0E04               	movlw	4
 16778  005072  ECE7  F02E         	call	_Lcd_Cmd
 16779                           
 16780                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16781  005076  0E00               	movlw	0
 16782  005078  ECE7  F02E         	call	_Lcd_Cmd
 16783                           
 16784                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16785  00507C  0E21               	movlw	33
 16786  00507E                     u15367:
 16787  00507E  2EE8               	decfsz	wreg,f,c
 16788  005080  D7FE               	bra	u15367
 16789  005082  F000               	nop	
 16790                           
 16791                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16792  005084  0E00               	movlw	0
 16793  005086  0100               	movlb	0	; () banked
 16794  005088  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797  00508A  0E00               	movlw	0
 16798  00508C  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16799                           
 16800                           ; BSR set to: 0
 16801  00508E  0E00               	movlw	0
 16802  005090  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16803                           
 16804                           ; BSR set to: 0
 16805                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16806  005092  0E00               	movlw	0
 16807  005094  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16808  005096                     l8292:
 16809                           
 16810                           ; BSR set to: 0
 16811  005096  0E04               	movlw	4
 16812  005098  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16813  00509A  D001               	goto	l267
 16814  00509C  0012               	return	
 16815  00509E                     l267:
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;lcd.h: 202: if (k == 1) i = 0;
 16819                           
 16820                           ; BSR set to: 0
 16821  00509E  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16822  0050A0  A4D8               	btfss	status,2,c
 16823  0050A2  D002               	goto	l269
 16824                           
 16825                           ; BSR set to: 0
 16826  0050A4  0E00               	movlw	0
 16827  0050A6  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16828  0050A8                     l269:
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16832  0050A8  0E00               	movlw	0
 16833  0050AA  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16834  0050AC                     l8300:
 16835                           
 16836                           ; BSR set to: 0
 16837  0050AC  0E07               	movlw	7
 16838  0050AE  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16839  0050B0  D001               	goto	l270
 16840  0050B2  D025               	goto	u12610
 16841  0050B4                     l270:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16845                           
 16846                           ; BSR set to: 0
 16847  0050B4  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16848  0050B6  A4D8               	btfss	status,2,c
 16849  0050B8  D005               	goto	l273
 16850                           
 16851                           ; BSR set to: 0
 16852  0050BA  0E00               	movlw	0
 16853  0050BC  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16854  0050BE  0E00               	movlw	0
 16855  0050C0  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16856  0050C2  D017               	goto	l275
 16857  0050C4                     l273:
 16858                           
 16859                           ; BSR set to: 0
 16860                           
 16861                           ; BSR set to: 0
 16862  0050C4  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16863  0050C6  0D08               	mullw	8
 16864  0050C8  0E67               	movlw	low criaCaracteresCGRAM@character
 16865  0050CA  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16866  0050CC  0E00               	movlw	high criaCaracteresCGRAM@character
 16867  0050CE  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16868  0050D0  50F3               	movf	prodl,w,c
 16869  0050D2  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16870  0050D4  50F4               	movf	prodh,w,c
 16871  0050D6  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16872  0050D8  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16873  0050DA  0D01               	mullw	1
 16874  0050DC  50F3               	movf	prodl,w,c
 16875  0050DE  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16876  0050E0  6ED9               	movwf	fsr2l,c
 16877  0050E2  50F4               	movf	prodh,w,c
 16878  0050E4  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16879  0050E6  6EDA               	movwf	fsr2h,c
 16880  0050E8  50DF               	movf	indf2,w,c
 16881  0050EA  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16882  0050EC  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16883  0050EE  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16884  0050F0  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16885  0050F2                     l275:
 16886                           
 16887                           ; BSR set to: 0
 16888                           
 16889                           ; BSR set to: 0
 16890  0050F2  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16891  0050F4  EC98  F02D         	call	_Lcd_Write_Char
 16892  0050F8  0100               	movlb	0	; () banked
 16893  0050FA  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16894  0050FC  D7D7               	goto	l8300
 16895  0050FE                     u12610:
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;lcd.h: 205: }
 16899                           ;lcd.h: 206: k++;
 16900                           
 16901                           ; BSR set to: 0
 16902  0050FE  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16903  005100  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16904  005102  D7C9               	goto	l8292
 16905  005104                     __end_of_criaCaracteresCGRAM:
 16906                           	opt stack 0
 16907                           tblptru	equ	0xFF8
 16908                           tblptrh	equ	0xFF7
 16909                           tblptrl	equ	0xFF6
 16910                           tablat	equ	0xFF5
 16911                           prodh	equ	0xFF4
 16912                           prodl	equ	0xFF3
 16913                           intcon	equ	0xFF2
 16914                           intcon2	equ	0xFF1
 16915                           intcon3	equ	0xFF0
 16916                           indf0	equ	0xFEF
 16917                           postinc0	equ	0xFEE
 16918                           fsr0h	equ	0xFEA
 16919                           fsr0l	equ	0xFE9
 16920                           wreg	equ	0xFE8
 16921                           postdec1	equ	0xFE5
 16922                           fsr1l	equ	0xFE1
 16923                           indf2	equ	0xFDF
 16924                           postinc2	equ	0xFDE
 16925                           postdec2	equ	0xFDD
 16926                           fsr2h	equ	0xFDA
 16927                           fsr2l	equ	0xFD9
 16928                           status	equ	0xFD8
 16929                           
 16930 ;; *************** function _controle *****************
 16931 ;; Defined at:
 16932 ;;		line 148 in file "src/Controle.h"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;		None
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;		None
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16946 ;;      Params:         0       0       0       0       0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16948 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16949 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16950 ;;Total ram usage:        7 bytes
 16951 ;; Hardware stack levels used:    1
 16952 ;; Hardware stack levels required when called:    8
 16953 ;; This function calls:
 16954 ;;		_acaoFlap
 16955 ;;		_setLed
 16956 ;; This function is called by:
 16957 ;;		_main
 16958 ;; This function uses a non-reentrant model
 16959 ;;
 16960                           
 16961                           	psect	text21
 16962  003AEA                     __ptext21:
 16963                           	opt stack 0
 16964  003AEA                     _controle:
 16965                           	opt stack 22
 16966                           
 16967                           ;Controle.h: 150: if (f_falta_energia == 0) {
 16968                           
 16969                           ; BSR set to: 0
 16970                           ;incstack = 0
 16971  003AEA  0100               	movlb	0	; () banked
 16972  003AEC  51FE               	movf	_f_falta_energia& (0+255),w,b
 16973  003AEE  A4D8               	btfss	status,2,c
 16974  003AF0  D02B               	goto	l1156
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;Controle.h: 151: LATBbits.LATB5 = blinkk;
 16978  003AF2  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16979  003AF4  D002               	bra	u13685
 16980  003AF6  8A8A               	bsf	3978,5,c	;volatile
 16981  003AF8  D001               	bra	u13687
 16982  003AFA                     u13685:
 16983  003AFA  9A8A               	bcf	3978,5,c	;volatile
 16984  003AFC                     u13687:
 16985                           
 16986                           ;Controle.h: 152: LATEbits.LE0 = 0;
 16987  003AFC  908D               	bcf	3981,0,c	;volatile
 16988                           
 16989                           ;Controle.h: 153: LATDbits.LD0 = 1;
 16990  003AFE  808C               	bsf	3980,0,c	;volatile
 16991                           
 16992                           ;Controle.h: 154: LATDbits.LD1 = 0;
 16993  003B00  928C               	bcf	3980,1,c	;volatile
 16994                           
 16995                           ;Controle.h: 155: acaoFlap(1, 10, 0);
 16996  003B02  0E00               	movlw	0
 16997  003B04  0100               	movlb	0	; () banked
 16998  003B06  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16999  003B08  0E0A               	movlw	10
 17000  003B0A  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17001  003B0C  0E00               	movlw	0
 17002  003B0E  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17003  003B10  0E00               	movlw	0
 17004  003B12  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17005  003B14  0E01               	movlw	1
 17006  003B16  EC4E  F02A         	call	_acaoFlap
 17007                           
 17008                           ;Controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 17009  003B1A  0441               	decf	_f_buzzer_falta_energia,w,c
 17010  003B1C  A4D8               	btfss	status,2,c
 17011  003B1E  D008               	goto	l1157
 17012  003B20  0100               	movlb	0	; () banked
 17013  003B22  51FA               	movf	_buzzer& (0+255),w,b
 17014  003B24  A4D8               	btfss	status,2,c
 17015  003B26  D004               	goto	l1157
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;Controle.h: 157: buzzer = 1;
 17019  003B28  0E01               	movlw	1
 17020  003B2A  6FFA               	movwf	_buzzer& (0+255),b
 17021                           
 17022                           ;Controle.h: 158: f_buzzer_falta_energia = 0;
 17023  003B2C  0E00               	movlw	0
 17024  003B2E  6E41               	movwf	_f_buzzer_falta_energia,c
 17025  003B30                     l1157:
 17026                           
 17027                           ;Controle.h: 159: }
 17028                           ;Controle.h: 160: if (buzzer) {
 17029  003B30  0100               	movlb	0	; () banked
 17030  003B32  51FA               	movf	_buzzer& (0+255),w,b
 17031  003B34  B4D8               	btfsc	status,2,c
 17032  003B36  D006               	goto	l1158
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;Controle.h: 161: LATCbits.LC1 = blinkk;
 17036  003B38  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17037  003B3A  D002               	bra	u13725
 17038  003B3C  828B               	bsf	3979,1,c	;volatile
 17039  003B3E  D001               	bra	u13727
 17040  003B40                     u13725:
 17041  003B40  928B               	bcf	3979,1,c	;volatile
 17042  003B42                     u13727:
 17043                           
 17044                           ;Controle.h: 162: } else {
 17045  003B42  0012               	return	
 17046  003B44                     l1158:
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;Controle.h: 163: LATCbits.LC1 = 0;
 17050  003B44  928B               	bcf	3979,1,c	;volatile
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;Controle.h: 164: }
 17054                           ;Controle.h: 165: return;
 17055  003B46  0012               	return	
 17056  003B48                     l1156:
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;Controle.h: 167: f_buzzer_falta_energia = 1;
 17060                           
 17061                           ; BSR set to: 0
 17062  003B48  0E01               	movlw	1
 17063  003B4A  6E41               	movwf	_f_buzzer_falta_energia,c
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;Controle.h: 168: }
 17067                           ;Controle.h: 172: LATBbits.LATB5 = 1;
 17068                           
 17069                           ; BSR set to: 0
 17070  003B4C  8A8A               	bsf	3978,5,c	;volatile
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;Controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 17074  003B4E  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17075  003B50  C0FD  F068         	movff	_temp,??_controle
 17076  003B54  6B69               	clrf	(??_controle+1)& (0+255),b
 17077  003B56  2768               	addwf	??_controle& (0+255),f,b
 17078  003B58  0E00               	movlw	0
 17079  003B5A  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17080  003B5C  51EC               	movf	_tempajt& (0+255),w,b
 17081  003B5E  6F6A               	movwf	(??_controle+2)& (0+255),b
 17082  003B60  6B6B               	clrf	(??_controle+3)& (0+255),b
 17083  003B62  5168               	movf	??_controle& (0+255),w,b
 17084  003B64  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17085  003B66  516B               	movf	(??_controle+3)& (0+255),w,b
 17086  003B68  0A80               	xorlw	128
 17087  003B6A  6F6C               	movwf	(??_controle+4)& (0+255),b
 17088  003B6C  5169               	movf	(??_controle+1)& (0+255),w,b
 17089  003B6E  0A80               	xorlw	128
 17090  003B70  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17091  003B72  B0D8               	btfsc	status,0,c
 17092  003B74  D01B               	goto	u13740
 17093                           
 17094                           ; BSR set to: 0
 17095  003B76  51EC               	movf	_tempajt& (0+255),w,b
 17096  003B78  6F68               	movwf	??_controle& (0+255),b
 17097  003B7A  6B69               	clrf	(??_controle+1)& (0+255),b
 17098  003B7C  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17099  003B7E  6F6A               	movwf	(??_controle+2)& (0+255),b
 17100  003B80  6B6B               	clrf	(??_controle+3)& (0+255),b
 17101  003B82  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17102  003B84  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17103  003B86  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17104  003B88  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17105  003B8A  51FD               	movf	_temp& (0+255),w,b
 17106  003B8C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17107  003B8E  6B6D               	clrf	(??_controle+5)& (0+255),b
 17108  003B90  516A               	movf	(??_controle+2)& (0+255),w,b
 17109  003B92  276C               	addwf	(??_controle+4)& (0+255),f,b
 17110  003B94  516B               	movf	(??_controle+3)& (0+255),w,b
 17111  003B96  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17112  003B98  5168               	movf	??_controle& (0+255),w,b
 17113  003B9A  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17114  003B9C  516D               	movf	(??_controle+5)& (0+255),w,b
 17115  003B9E  0A80               	xorlw	128
 17116  003BA0  6F6E               	movwf	(??_controle+6)& (0+255),b
 17117  003BA2  5169               	movf	(??_controle+1)& (0+255),w,b
 17118  003BA4  0A80               	xorlw	128
 17119  003BA6  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17120  003BA8  A0D8               	btfss	status,0,c
 17121  003BAA  D024               	goto	l1162
 17122  003BAC                     u13740:
 17123                           
 17124                           ; BSR set to: 0
 17125                           
 17126                           ; BSR set to: 0
 17127  003BAC  51F1               	movf	_h_modo_seguranca& (0+255),w,b
 17128  003BAE  B4D8               	btfsc	status,2,c
 17129  003BB0  D021               	goto	l1162
 17130                           
 17131                           ; BSR set to: 0
 17132                           ;Controle.h: 175: setLed(8, 1);
 17133  003BB2  0E01               	movlw	1
 17134  003BB4  6F60               	movwf	setLed@acao& (0+255),b
 17135  003BB6  0E08               	movlw	8
 17136  003BB8  EC1D  F02F         	call	_setLed
 17137                           
 17138                           ;Controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 17139  003BBC  0E00               	movlw	0
 17140  003BBE  0100               	movlb	0	; () banked
 17141  003BC0  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17142  003BC2  0E0A               	movlw	10
 17143  003BC4  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17144  003BC6  0E00               	movlw	0
 17145  003BC8  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17146  003BCA  0E00               	movlw	0
 17147  003BCC  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17148  003BCE  0E00               	movlw	0
 17149  003BD0  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17150  003BD2  0E01               	movlw	1
 17151  003BD4  EC4E  F02A         	call	_acaoFlap
 17152                           
 17153                           ;Controle.h: 177: if (t_controle_modo_seguranca == 0) {
 17154  003BD8  5033               	movf	_t_controle_modo_seguranca,w,c
 17155  003BDA  1034               	iorwf	_t_controle_modo_seguranca+1,w,c
 17156  003BDC  A4D8               	btfss	status,2,c
 17157  003BDE  D043               	goto	l1169
 17158                           
 17159                           ;Controle.h: 178: t_controle_modo_seguranca = 1800;
 17160  003BE0  0E07               	movlw	7
 17161  003BE2  6E34               	movwf	_t_controle_modo_seguranca+1,c
 17162  003BE4  0E08               	movlw	8
 17163  003BE6  6E33               	movwf	_t_controle_modo_seguranca,c
 17164                           
 17165                           ;Controle.h: 179: md_seguranca = ~md_seguranca;
 17166  003BE8  B24F               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17167  003BEA  D002               	goto	u13770
 17168  003BEC  824F               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17169  003BEE  D03B               	goto	l1169
 17170  003BF0                     u13770:
 17171  003BF0  924F               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 17172                           
 17173                           ;Controle.h: 180: }
 17174                           ;Controle.h: 181: } else {
 17175  003BF2  D039               	goto	l1169
 17176  003BF4                     l1162:
 17177                           
 17178                           ;Controle.h: 182: setLed(8, 0);
 17179  003BF4  0E00               	movlw	0
 17180  003BF6  0100               	movlb	0	; () banked
 17181  003BF8  6F60               	movwf	setLed@acao& (0+255),b
 17182  003BFA  0E08               	movlw	8
 17183  003BFC  EC1D  F02F         	call	_setLed
 17184                           
 17185                           ;Controle.h: 183: if (umid >= (umidajt + h_flap)) {
 17186  003C00  0101               	movlb	1	; () banked
 17187  003C02  51F4               	movf	_h_flap& (0+255),w,b
 17188  003C04  C0EB  F068         	movff	_umidajt,??_controle
 17189  003C08  0100               	movlb	0	; () banked
 17190  003C0A  6B69               	clrf	(??_controle+1)& (0+255),b
 17191  003C0C  2768               	addwf	??_controle& (0+255),f,b
 17192  003C0E  0E00               	movlw	0
 17193  003C10  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17194  003C12  51FC               	movf	_umid& (0+255),w,b
 17195  003C14  6F6A               	movwf	(??_controle+2)& (0+255),b
 17196  003C16  6B6B               	clrf	(??_controle+3)& (0+255),b
 17197  003C18  5168               	movf	??_controle& (0+255),w,b
 17198  003C1A  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17199  003C1C  516B               	movf	(??_controle+3)& (0+255),w,b
 17200  003C1E  0A80               	xorlw	128
 17201  003C20  6F6C               	movwf	(??_controle+4)& (0+255),b
 17202  003C22  5169               	movf	(??_controle+1)& (0+255),w,b
 17203  003C24  0A80               	xorlw	128
 17204  003C26  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17205  003C28  A0D8               	btfss	status,0,c
 17206  003C2A  D00D               	goto	l1167
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;Controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 17210  003C2C  C0F5  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 17211  003C30  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17212  003C32  51F4               	movf	_t_flap_intervalo& (0+255),w,b
 17213  003C34  0D0A               	mullw	10
 17214  003C36  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 17215  003C3A  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 17216  003C3E  0E01               	movlw	1
 17217  003C40  EC4E  F02A         	call	_acaoFlap
 17218                           
 17219                           ;Controle.h: 185: } else if (umid <= umidajt) {
 17220  003C44  D010               	goto	l1169
 17221  003C46                     l1167:
 17222  003C46  0100               	movlb	0	; () banked
 17223  003C48  51FC               	movf	_umid& (0+255),w,b
 17224  003C4A  5DEB               	subwf	_umidajt& (0+255),w,b
 17225  003C4C  A0D8               	btfss	status,0,c
 17226  003C4E  D00B               	goto	l1169
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;Controle.h: 186: acaoFlap(0, 200, 600);
 17230  003C50  0E00               	movlw	0
 17231  003C52  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 17232  003C54  0EC8               	movlw	200
 17233  003C56  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 17234  003C58  0E02               	movlw	2
 17235  003C5A  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 17236  003C5C  0E58               	movlw	88
 17237  003C5E  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 17238  003C60  0E00               	movlw	0
 17239  003C62  EC4E  F02A         	call	_acaoFlap
 17240  003C66                     l1169:
 17241                           
 17242                           ;Controle.h: 187: }
 17243                           ;Controle.h: 188: }
 17244                           ;Controle.h: 189: if (temp > 0) {
 17245  003C66  0100               	movlb	0	; () banked
 17246  003C68  51FD               	movf	_temp& (0+255),w,b
 17247  003C6A  B4D8               	btfsc	status,2,c
 17248  003C6C  D041               	goto	l1170
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;Controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 17252  003C6E  0101               	movlb	1	; () banked
 17253  003C70  51F5               	movf	_h_abafador& (0+255),w,b
 17254  003C72  C0FD  F068         	movff	_temp,??_controle
 17255  003C76  0100               	movlb	0	; () banked
 17256  003C78  6B69               	clrf	(??_controle+1)& (0+255),b
 17257  003C7A  2768               	addwf	??_controle& (0+255),f,b
 17258  003C7C  0E00               	movlw	0
 17259  003C7E  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17260  003C80  51EC               	movf	_tempajt& (0+255),w,b
 17261  003C82  6F6A               	movwf	(??_controle+2)& (0+255),b
 17262  003C84  6B6B               	clrf	(??_controle+3)& (0+255),b
 17263  003C86  5168               	movf	??_controle& (0+255),w,b
 17264  003C88  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17265  003C8A  516B               	movf	(??_controle+3)& (0+255),w,b
 17266  003C8C  0A80               	xorlw	128
 17267  003C8E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17268  003C90  5169               	movf	(??_controle+1)& (0+255),w,b
 17269  003C92  0A80               	xorlw	128
 17270  003C94  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17271  003C96  A0D8               	btfss	status,0,c
 17272  003C98  D002               	goto	l1171
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;Controle.h: 191: LATEbits.LE0 = 1;
 17276  003C9A  808D               	bsf	3981,0,c	;volatile
 17277  003C9C  D008               	goto	L30
 17278  003C9E                     l1171:
 17279                           
 17280                           ; BSR set to: 0
 17281                           
 17282                           ; BSR set to: 0
 17283  003C9E  51EC               	movf	_tempajt& (0+255),w,b
 17284  003CA0  5DFD               	subwf	_temp& (0+255),w,b
 17285  003CA2  A0D8               	btfss	status,0,c
 17286  003CA4  D003               	goto	l1173
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;Controle.h: 194: LATEbits.LE0 = 0;
 17290  003CA6  908D               	bcf	3981,0,c	;volatile
 17291                           
 17292                           ;Controle.h: 195: LATDbits.LD0 = 1;
 17293  003CA8  808C               	bsf	3980,0,c	;volatile
 17294                           
 17295                           ;Controle.h: 196: } else {
 17296  003CAA  D002               	goto	l1174
 17297  003CAC                     l1173:
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;Controle.h: 197: LATEbits.LE0 = 0;
 17301  003CAC  908D               	bcf	3981,0,c	;volatile
 17302  003CAE                     L30:
 17303                           
 17304                           ;Controle.h: 198: LATDbits.LD0 = 0;
 17305  003CAE  908C               	bcf	3980,0,c	;volatile
 17306  003CB0                     l1174:
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;Controle.h: 199: }
 17310                           ;Controle.h: 201: if (fornalha == 1) {
 17311                           
 17312                           ; BSR set to: 0
 17313                           
 17314                           ; BSR set to: 0
 17315  003CB0  05F9               	decf	_fornalha& (0+255),w,b
 17316  003CB2  A4D8               	btfss	status,2,c
 17317  003CB4  D01F               	goto	L31
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;Controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 17321  003CB6  0101               	movlb	1	; () banked
 17322  003CB8  51F6               	movf	_h_venotinha& (0+255),w,b
 17323  003CBA  C0FD  F068         	movff	_temp,??_controle
 17324  003CBE  0100               	movlb	0	; () banked
 17325  003CC0  6B69               	clrf	(??_controle+1)& (0+255),b
 17326  003CC2  2768               	addwf	??_controle& (0+255),f,b
 17327  003CC4  0E00               	movlw	0
 17328  003CC6  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17329  003CC8  51EC               	movf	_tempajt& (0+255),w,b
 17330  003CCA  6F6A               	movwf	(??_controle+2)& (0+255),b
 17331  003CCC  6B6B               	clrf	(??_controle+3)& (0+255),b
 17332  003CCE  5168               	movf	??_controle& (0+255),w,b
 17333  003CD0  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17334  003CD2  516B               	movf	(??_controle+3)& (0+255),w,b
 17335  003CD4  0A80               	xorlw	128
 17336  003CD6  6F6C               	movwf	(??_controle+4)& (0+255),b
 17337  003CD8  5169               	movf	(??_controle+1)& (0+255),w,b
 17338  003CDA  0A80               	xorlw	128
 17339  003CDC  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17340  003CDE  A0D8               	btfss	status,0,c
 17341  003CE0  D002               	goto	l1176
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;Controle.h: 203: LATDbits.LD1 = 1;
 17345  003CE2  828C               	bsf	3980,1,c	;volatile
 17346                           
 17347                           ;Controle.h: 205: } else if (temp >= tempajt) {
 17348  003CE4  D008               	goto	l1180
 17349  003CE6                     l1176:
 17350                           
 17351                           ; BSR set to: 0
 17352                           
 17353                           ; BSR set to: 0
 17354  003CE6  51EC               	movf	_tempajt& (0+255),w,b
 17355  003CE8  5DFD               	subwf	_temp& (0+255),w,b
 17356  003CEA  A0D8               	btfss	status,0,c
 17357  003CEC  D004               	goto	l1180
 17358  003CEE  D002               	goto	L31
 17359  003CF0                     l1170:
 17360                           
 17361                           ; BSR set to: 0
 17362                           ;Controle.h: 213: LATEbits.LE0 = 0;
 17363  003CF0  908D               	bcf	3981,0,c	;volatile
 17364                           
 17365                           ;Controle.h: 214: LATDbits.LD0 = 1;
 17366  003CF2  808C               	bsf	3980,0,c	;volatile
 17367  003CF4                     L31:
 17368                           
 17369                           ;Controle.h: 215: LATDbits.LD1 = 0;
 17370  003CF4  928C               	bcf	3980,1,c	;volatile
 17371  003CF6                     l1180:
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;Controle.h: 216: }
 17375                           ;Controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 17376                           
 17377                           ; BSR set to: 0
 17378  003CF6  05F9               	decf	_fornalha& (0+255),w,b
 17379  003CF8  A4D8               	btfss	status,2,c
 17380  003CFA  D007               	goto	l1181
 17381                           
 17382                           ; BSR set to: 0
 17383  003CFC  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17384  003CFE  B4D8               	btfsc	status,2,c
 17385  003D00  D004               	goto	l1181
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;Controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 17389  003D02  C0F2  F035         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 17390  003D06  6A36               	clrf	_t_controle_religar_ventoinha+1,c
 17391                           
 17392                           ;Controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 17393  003D08  D009               	goto	l1183
 17394  003D0A                     l1181:
 17395                           
 17396                           ; BSR set to: 0
 17397                           
 17398                           ; BSR set to: 0
 17399  003D0A  5035               	movf	_t_controle_religar_ventoinha,w,c
 17400  003D0C  1036               	iorwf	_t_controle_religar_ventoinha+1,w,c
 17401  003D0E  A4D8               	btfss	status,2,c
 17402  003D10  D005               	goto	l1183
 17403                           
 17404                           ; BSR set to: 0
 17405  003D12  51F2               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17406  003D14  B4D8               	btfsc	status,2,c
 17407  003D16  D002               	goto	l1183
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;Controle.h: 222: fornalha = 1;
 17411  003D18  0E01               	movlw	1
 17412  003D1A  6FF9               	movwf	_fornalha& (0+255),b
 17413  003D1C                     l1183:
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;Controle.h: 223: }
 17417                           ;Controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 17418                           
 17419                           ; BSR set to: 0
 17420                           
 17421                           ; BSR set to: 0
 17422  003D1C  05FA               	decf	_buzzer& (0+255),w,b
 17423  003D1E  A4D8               	btfss	status,2,c
 17424  003D20  D043               	goto	l1188
 17425                           
 17426                           ; BSR set to: 0
 17427  003D22  503F               	movf	_t_controle_buzzer,w,c
 17428  003D24  A4D8               	btfss	status,2,c
 17429  003D26  D040               	goto	l1188
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;Controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 17433  003D28  51F0               	movf	_h_buzzer& (0+255),w,b
 17434  003D2A  C0FD  F068         	movff	_temp,??_controle
 17435  003D2E  6B69               	clrf	(??_controle+1)& (0+255),b
 17436  003D30  2768               	addwf	??_controle& (0+255),f,b
 17437  003D32  0E00               	movlw	0
 17438  003D34  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17439  003D36  51EC               	movf	_tempajt& (0+255),w,b
 17440  003D38  6F6A               	movwf	(??_controle+2)& (0+255),b
 17441  003D3A  6B6B               	clrf	(??_controle+3)& (0+255),b
 17442  003D3C  5168               	movf	??_controle& (0+255),w,b
 17443  003D3E  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17444  003D40  516B               	movf	(??_controle+3)& (0+255),w,b
 17445  003D42  0A80               	xorlw	128
 17446  003D44  6F6C               	movwf	(??_controle+4)& (0+255),b
 17447  003D46  5169               	movf	(??_controle+1)& (0+255),w,b
 17448  003D48  0A80               	xorlw	128
 17449  003D4A  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17450  003D4C  B0D8               	btfsc	status,0,c
 17451  003D4E  D01B               	goto	u13940
 17452                           
 17453                           ; BSR set to: 0
 17454  003D50  51EC               	movf	_tempajt& (0+255),w,b
 17455  003D52  6F68               	movwf	??_controle& (0+255),b
 17456  003D54  6B69               	clrf	(??_controle+1)& (0+255),b
 17457  003D56  51F0               	movf	_h_buzzer& (0+255),w,b
 17458  003D58  6F6A               	movwf	(??_controle+2)& (0+255),b
 17459  003D5A  6B6B               	clrf	(??_controle+3)& (0+255),b
 17460  003D5C  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17461  003D5E  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17462  003D60  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17463  003D62  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17464  003D64  51FD               	movf	_temp& (0+255),w,b
 17465  003D66  6F6C               	movwf	(??_controle+4)& (0+255),b
 17466  003D68  6B6D               	clrf	(??_controle+5)& (0+255),b
 17467  003D6A  516A               	movf	(??_controle+2)& (0+255),w,b
 17468  003D6C  276C               	addwf	(??_controle+4)& (0+255),f,b
 17469  003D6E  516B               	movf	(??_controle+3)& (0+255),w,b
 17470  003D70  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17471  003D72  5168               	movf	??_controle& (0+255),w,b
 17472  003D74  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17473  003D76  516D               	movf	(??_controle+5)& (0+255),w,b
 17474  003D78  0A80               	xorlw	128
 17475  003D7A  6F6E               	movwf	(??_controle+6)& (0+255),b
 17476  003D7C  5169               	movf	(??_controle+1)& (0+255),w,b
 17477  003D7E  0A80               	xorlw	128
 17478  003D80  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17479  003D82  A0D8               	btfss	status,0,c
 17480  003D84  D010               	goto	l1185
 17481  003D86                     u13940:
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;Controle.h: 228: t_controle_buzzer = 10;
 17485                           
 17486                           ; BSR set to: 0
 17487  003D86  0E0A               	movlw	10
 17488  003D88  6E3F               	movwf	_t_controle_buzzer,c
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;Controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 17492  003D8A  A28B               	btfss	3979,1,c	;volatile
 17493  003D8C  D002               	goto	u13950
 17494  003D8E  0E01               	movlw	1
 17495  003D90  D001               	goto	u13956
 17496  003D92                     u13950:
 17497  003D92  0E00               	movlw	0
 17498  003D94                     u13956:
 17499  003D94  0AFF               	xorlw	255
 17500  003D96  6F68               	movwf	??_controle& (0+255),b
 17501  003D98  4768               	rlncf	??_controle& (0+255),f,b
 17502  003D9A  508B               	movf	3979,w,c	;volatile
 17503  003D9C  1968               	xorwf	??_controle& (0+255),w,b
 17504  003D9E  0BFD               	andlw	-3
 17505  003DA0  1968               	xorwf	??_controle& (0+255),w,b
 17506  003DA2  6E8B               	movwf	3979,c	;volatile
 17507                           
 17508                           ;Controle.h: 230: } else {
 17509  003DA4  D001               	goto	l1188
 17510  003DA6                     l1185:
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;Controle.h: 231: LATCbits.LC1 = 0;
 17514  003DA6  928B               	bcf	3979,1,c	;volatile
 17515  003DA8                     l1188:
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;Controle.h: 232: }
 17519                           ;Controle.h: 233: }
 17520                           ;Controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 17521                           
 17522                           ; BSR set to: 0
 17523                           
 17524                           ; BSR set to: 0
 17525  003DA8  05FA               	decf	_buzzer& (0+255),w,b
 17526  003DAA  A4D8               	btfss	status,2,c
 17527  003DAC  D007               	goto	l1189
 17528                           
 17529                           ; BSR set to: 0
 17530  003DAE  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17531  003DB0  B4D8               	btfsc	status,2,c
 17532  003DB2  D004               	goto	l1189
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;Controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 17536  003DB4  C0FF  F037         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 17537  003DB8  6A38               	clrf	_t_controle_religar_buzzer+1,c
 17538                           
 17539                           ;Controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 17540  003DBA  D009               	goto	l1191
 17541  003DBC                     l1189:
 17542                           
 17543                           ; BSR set to: 0
 17544                           
 17545                           ; BSR set to: 0
 17546  003DBC  5037               	movf	_t_controle_religar_buzzer,w,c
 17547  003DBE  1038               	iorwf	_t_controle_religar_buzzer+1,w,c
 17548  003DC0  A4D8               	btfss	status,2,c
 17549  003DC2  D005               	goto	l1191
 17550                           
 17551                           ; BSR set to: 0
 17552  003DC4  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17553  003DC6  B4D8               	btfsc	status,2,c
 17554  003DC8  D002               	goto	l1191
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;Controle.h: 237: buzzer = 1;
 17558  003DCA  0E01               	movlw	1
 17559  003DCC  6FFA               	movwf	_buzzer& (0+255),b
 17560  003DCE                     l1191:
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;Controle.h: 238: }
 17564                           ;Controle.h: 239: if (!buzzer) {
 17565                           
 17566                           ; BSR set to: 0
 17567  003DCE  51FA               	movf	_buzzer& (0+255),w,b
 17568  003DD0  B4D8               	btfsc	status,2,c
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;Controle.h: 240: LATCbits.LC1 = 0;
 17572  003DD2  928B               	bcf	3979,1,c	;volatile
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;Controle.h: 241: }
 17576                           ;Controle.h: 245: if (temp + 3 < tempajt) {
 17577                           
 17578                           ; BSR set to: 0
 17579  003DD4  51EC               	movf	_tempajt& (0+255),w,b
 17580  003DD6  6F68               	movwf	??_controle& (0+255),b
 17581  003DD8  6B69               	clrf	(??_controle+1)& (0+255),b
 17582  003DDA  51FD               	movf	_temp& (0+255),w,b
 17583  003DDC  6F6A               	movwf	(??_controle+2)& (0+255),b
 17584  003DDE  6B6B               	clrf	(??_controle+3)& (0+255),b
 17585  003DE0  0E03               	movlw	3
 17586  003DE2  276A               	addwf	(??_controle+2)& (0+255),f,b
 17587  003DE4  0E00               	movlw	0
 17588  003DE6  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17589  003DE8  5168               	movf	??_controle& (0+255),w,b
 17590  003DEA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17591  003DEC  516B               	movf	(??_controle+3)& (0+255),w,b
 17592  003DEE  0A80               	xorlw	128
 17593  003DF0  6F6C               	movwf	(??_controle+4)& (0+255),b
 17594  003DF2  5169               	movf	(??_controle+1)& (0+255),w,b
 17595  003DF4  0A80               	xorlw	128
 17596  003DF6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17597  003DF8  B0D8               	btfsc	status,0,c
 17598  003DFA  D00C               	goto	l1193
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;Controle.h: 246: setLed(16, 1);
 17602  003DFC  0E01               	movlw	1
 17603  003DFE  6F60               	movwf	setLed@acao& (0+255),b
 17604  003E00  0E10               	movlw	16
 17605  003E02  EC1D  F02F         	call	_setLed
 17606                           
 17607                           ;Controle.h: 247: setLed(32, 0);
 17608  003E06  0E00               	movlw	0
 17609  003E08  0100               	movlb	0	; () banked
 17610  003E0A  6F60               	movwf	setLed@acao& (0+255),b
 17611  003E0C  0E20               	movlw	32
 17612  003E0E  EC1D  F02F         	call	_setLed
 17613                           
 17614                           ;Controle.h: 248: } else if (temp - 3 > tempajt) {
 17615  003E12  D031               	goto	l1196
 17616  003E14                     l1193:
 17617  003E14  0EFD               	movlw	253
 17618  003E16  0100               	movlb	0	; () banked
 17619  003E18  6F68               	movwf	??_controle& (0+255),b
 17620  003E1A  0EFF               	movlw	255
 17621  003E1C  6F69               	movwf	(??_controle+1)& (0+255),b
 17622  003E1E  51FD               	movf	_temp& (0+255),w,b
 17623  003E20  6F6A               	movwf	(??_controle+2)& (0+255),b
 17624  003E22  6B6B               	clrf	(??_controle+3)& (0+255),b
 17625  003E24  5168               	movf	??_controle& (0+255),w,b
 17626  003E26  276A               	addwf	(??_controle+2)& (0+255),f,b
 17627  003E28  5169               	movf	(??_controle+1)& (0+255),w,b
 17628  003E2A  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17629  003E2C  51EC               	movf	_tempajt& (0+255),w,b
 17630  003E2E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17631  003E30  6B6D               	clrf	(??_controle+5)& (0+255),b
 17632  003E32  516A               	movf	(??_controle+2)& (0+255),w,b
 17633  003E34  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17634  003E36  516D               	movf	(??_controle+5)& (0+255),w,b
 17635  003E38  0A80               	xorlw	128
 17636  003E3A  6F6E               	movwf	(??_controle+6)& (0+255),b
 17637  003E3C  516B               	movf	(??_controle+3)& (0+255),w,b
 17638  003E3E  0A80               	xorlw	128
 17639  003E40  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17640  003E42  B0D8               	btfsc	status,0,c
 17641  003E44  D00C               	goto	l1195
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;Controle.h: 249: setLed(32, 1);
 17645  003E46  0E01               	movlw	1
 17646  003E48  6F60               	movwf	setLed@acao& (0+255),b
 17647  003E4A  0E20               	movlw	32
 17648  003E4C  EC1D  F02F         	call	_setLed
 17649                           
 17650                           ;Controle.h: 250: setLed(16, 0);
 17651  003E50  0E00               	movlw	0
 17652  003E52  0100               	movlb	0	; () banked
 17653  003E54  6F60               	movwf	setLed@acao& (0+255),b
 17654  003E56  0E10               	movlw	16
 17655  003E58  EC1D  F02F         	call	_setLed
 17656                           
 17657                           ;Controle.h: 251: } else {
 17658  003E5C  D00C               	goto	l1196
 17659  003E5E                     l1195:
 17660                           
 17661                           ;Controle.h: 252: setLed(32, 0);
 17662  003E5E  0E00               	movlw	0
 17663  003E60  0100               	movlb	0	; () banked
 17664  003E62  6F60               	movwf	setLed@acao& (0+255),b
 17665  003E64  0E20               	movlw	32
 17666  003E66  EC1D  F02F         	call	_setLed
 17667                           
 17668                           ;Controle.h: 253: setLed(16, 0);
 17669  003E6A  0E00               	movlw	0
 17670  003E6C  0100               	movlb	0	; () banked
 17671  003E6E  6F60               	movwf	setLed@acao& (0+255),b
 17672  003E70  0E10               	movlw	16
 17673  003E72  EC1D  F02F         	call	_setLed
 17674  003E76                     l1196:
 17675                           
 17676                           ;Controle.h: 254: }
 17677                           ;Controle.h: 256: if (umid + 3 < umidajt) {
 17678  003E76  0100               	movlb	0	; () banked
 17679  003E78  51EB               	movf	_umidajt& (0+255),w,b
 17680  003E7A  6F68               	movwf	??_controle& (0+255),b
 17681  003E7C  6B69               	clrf	(??_controle+1)& (0+255),b
 17682  003E7E  51FC               	movf	_umid& (0+255),w,b
 17683  003E80  6F6A               	movwf	(??_controle+2)& (0+255),b
 17684  003E82  6B6B               	clrf	(??_controle+3)& (0+255),b
 17685  003E84  0E03               	movlw	3
 17686  003E86  276A               	addwf	(??_controle+2)& (0+255),f,b
 17687  003E88  0E00               	movlw	0
 17688  003E8A  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17689  003E8C  5168               	movf	??_controle& (0+255),w,b
 17690  003E8E  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17691  003E90  516B               	movf	(??_controle+3)& (0+255),w,b
 17692  003E92  0A80               	xorlw	128
 17693  003E94  6F6C               	movwf	(??_controle+4)& (0+255),b
 17694  003E96  5169               	movf	(??_controle+1)& (0+255),w,b
 17695  003E98  0A80               	xorlw	128
 17696  003E9A  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17697  003E9C  B0D8               	btfsc	status,0,c
 17698  003E9E  D00C               	goto	l1197
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;Controle.h: 257: setLed(1, 0);
 17702  003EA0  0E00               	movlw	0
 17703  003EA2  6F60               	movwf	setLed@acao& (0+255),b
 17704  003EA4  0E01               	movlw	1
 17705  003EA6  EC1D  F02F         	call	_setLed
 17706                           
 17707                           ;Controle.h: 258: setLed(2, 1);
 17708  003EAA  0E01               	movlw	1
 17709  003EAC  0100               	movlb	0	; () banked
 17710  003EAE  6F60               	movwf	setLed@acao& (0+255),b
 17711  003EB0  0E02               	movlw	2
 17712  003EB2  EC1D  F02F         	call	_setLed
 17713                           
 17714                           ;Controle.h: 259: } else if (umid - 3 > umidajt) {
 17715  003EB6  0012               	return	
 17716  003EB8                     l1197:
 17717  003EB8  0EFD               	movlw	253
 17718  003EBA  0100               	movlb	0	; () banked
 17719  003EBC  6F68               	movwf	??_controle& (0+255),b
 17720  003EBE  0EFF               	movlw	255
 17721  003EC0  6F69               	movwf	(??_controle+1)& (0+255),b
 17722  003EC2  51FC               	movf	_umid& (0+255),w,b
 17723  003EC4  6F6A               	movwf	(??_controle+2)& (0+255),b
 17724  003EC6  6B6B               	clrf	(??_controle+3)& (0+255),b
 17725  003EC8  5168               	movf	??_controle& (0+255),w,b
 17726  003ECA  276A               	addwf	(??_controle+2)& (0+255),f,b
 17727  003ECC  5169               	movf	(??_controle+1)& (0+255),w,b
 17728  003ECE  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17729  003ED0  51EB               	movf	_umidajt& (0+255),w,b
 17730  003ED2  6F6C               	movwf	(??_controle+4)& (0+255),b
 17731  003ED4  6B6D               	clrf	(??_controle+5)& (0+255),b
 17732  003ED6  516A               	movf	(??_controle+2)& (0+255),w,b
 17733  003ED8  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17734  003EDA  516D               	movf	(??_controle+5)& (0+255),w,b
 17735  003EDC  0A80               	xorlw	128
 17736  003EDE  6F6E               	movwf	(??_controle+6)& (0+255),b
 17737  003EE0  516B               	movf	(??_controle+3)& (0+255),w,b
 17738  003EE2  0A80               	xorlw	128
 17739  003EE4  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17740  003EE6  B0D8               	btfsc	status,0,c
 17741  003EE8  D00C               	goto	l1199
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;Controle.h: 260: setLed(1, 1);
 17745  003EEA  0E01               	movlw	1
 17746  003EEC  6F60               	movwf	setLed@acao& (0+255),b
 17747  003EEE  0E01               	movlw	1
 17748  003EF0  EC1D  F02F         	call	_setLed
 17749                           
 17750                           ;Controle.h: 261: setLed(2, 0);
 17751  003EF4  0E00               	movlw	0
 17752  003EF6  0100               	movlb	0	; () banked
 17753  003EF8  6F60               	movwf	setLed@acao& (0+255),b
 17754  003EFA  0E02               	movlw	2
 17755  003EFC  EC1D  F02F         	call	_setLed
 17756                           
 17757                           ;Controle.h: 262: } else {
 17758  003F00  0012               	return	
 17759  003F02                     l1199:
 17760                           
 17761                           ;Controle.h: 263: setLed(1, 0);
 17762  003F02  0E00               	movlw	0
 17763  003F04  0100               	movlb	0	; () banked
 17764  003F06  6F60               	movwf	setLed@acao& (0+255),b
 17765  003F08  0E01               	movlw	1
 17766  003F0A  EC1D  F02F         	call	_setLed
 17767                           
 17768                           ;Controle.h: 264: setLed(2, 0);
 17769  003F0E  0E00               	movlw	0
 17770  003F10  0100               	movlb	0	; () banked
 17771  003F12  6F60               	movwf	setLed@acao& (0+255),b
 17772  003F14  0E02               	movlw	2
 17773  003F16  EC1D  F02F         	call	_setLed
 17774  003F1A  0012               	return	
 17775  003F1C                     __end_of_controle:
 17776                           	opt stack 0
 17777                           tblptru	equ	0xFF8
 17778                           tblptrh	equ	0xFF7
 17779                           tblptrl	equ	0xFF6
 17780                           tablat	equ	0xFF5
 17781                           prodh	equ	0xFF4
 17782                           prodl	equ	0xFF3
 17783                           intcon	equ	0xFF2
 17784                           intcon2	equ	0xFF1
 17785                           intcon3	equ	0xFF0
 17786                           indf0	equ	0xFEF
 17787                           postinc0	equ	0xFEE
 17788                           fsr0h	equ	0xFEA
 17789                           fsr0l	equ	0xFE9
 17790                           wreg	equ	0xFE8
 17791                           postdec1	equ	0xFE5
 17792                           fsr1l	equ	0xFE1
 17793                           indf2	equ	0xFDF
 17794                           postinc2	equ	0xFDE
 17795                           postdec2	equ	0xFDD
 17796                           fsr2h	equ	0xFDA
 17797                           fsr2l	equ	0xFD9
 17798                           status	equ	0xFD8
 17799                           
 17800 ;; *************** function _acaoFlap *****************
 17801 ;; Defined at:
 17802 ;;		line 123 in file "src/Controle.h"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;  acao            1    wreg     unsigned char 
 17805 ;;  tempo_ativad    2    2[BANK0 ] int 
 17806 ;;  tempo_aguard    2    4[BANK0 ] int 
 17807 ;; Auto vars:     Size  Location     Type
 17808 ;;  acao            1    7[BANK0 ] unsigned char 
 17809 ;; Return value:  Size  Location     Type
 17810 ;;                  1    wreg      void 
 17811 ;; Registers used:
 17812 ;;		wreg, status,2, status,0, cstack
 17813 ;; Tracked objects:
 17814 ;;		On entry : 0/0
 17815 ;;		On exit  : 0/0
 17816 ;;		Unchanged: 0/0
 17817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17818 ;;      Params:         0       4       0       0       0       0       0       0       0
 17819 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17820 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17821 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17822 ;;Total ram usage:        6 bytes
 17823 ;; Hardware stack levels used:    1
 17824 ;; Hardware stack levels required when called:    7
 17825 ;; This function calls:
 17826 ;;		_setLed
 17827 ;; This function is called by:
 17828 ;;		_controle
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           	psect	text22
 17833  00549C                     __ptext22:
 17834                           	opt stack 0
 17835  00549C                     _acaoFlap:
 17836                           	opt stack 22
 17837                           
 17838                           ;incstack = 0
 17839                           ;acaoFlap@acao stored from wreg
 17840  00549C  0100               	movlb	0	; () banked
 17841  00549E  6F67               	movwf	acaoFlap@acao& (0+255),b
 17842                           
 17843                           ;Controle.h: 124: if (acao != _acao_flap) {
 17844  0054A0  5042               	movf	__acao_flap,w,c
 17845  0054A2  0100               	movlb	0	; () banked
 17846  0054A4  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17847  0054A6  B4D8               	btfsc	status,2,c
 17848  0054A8  D007               	goto	l1147
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;Controle.h: 125: t_controle_flap = 0;
 17852  0054AA  0E00               	movlw	0
 17853  0054AC  6E3A               	movwf	_t_controle_flap+1,c
 17854  0054AE  0E00               	movlw	0
 17855  0054B0  6E39               	movwf	_t_controle_flap,c
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;Controle.h: 126: _acao_flap = acao;
 17859  0054B2  C067  F042         	movff	acaoFlap@acao,__acao_flap
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;Controle.h: 127: return;
 17863  0054B6  0012               	return	
 17864  0054B8                     l1147:
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;Controle.h: 128: }
 17868                           ;Controle.h: 129: if (acao) {
 17869                           
 17870                           ; BSR set to: 0
 17871  0054B8  5167               	movf	acaoFlap@acao& (0+255),w,b
 17872  0054BA  B4D8               	btfsc	status,2,c
 17873  0054BC  D006               	goto	l1149
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;Controle.h: 130: setLed(4, 1);
 17877  0054BE  0E01               	movlw	1
 17878  0054C0  6F60               	movwf	setLed@acao& (0+255),b
 17879  0054C2  0E04               	movlw	4
 17880  0054C4  EC1D  F02F         	call	_setLed
 17881                           
 17882                           ;Controle.h: 131: } else {
 17883  0054C8  D006               	goto	l1150
 17884  0054CA                     l1149:
 17885                           
 17886                           ;Controle.h: 132: setLed(4, 0);
 17887  0054CA  0E00               	movlw	0
 17888  0054CC  0100               	movlb	0	; () banked
 17889  0054CE  6F60               	movwf	setLed@acao& (0+255),b
 17890  0054D0  0E04               	movlw	4
 17891  0054D2  EC1D  F02F         	call	_setLed
 17892  0054D6                     l1150:
 17893                           
 17894                           ;Controle.h: 133: }
 17895                           ;Controle.h: 135: if (!t_controle_flap) {
 17896  0054D6  5039               	movf	_t_controle_flap,w,c
 17897  0054D8  103A               	iorwf	_t_controle_flap+1,w,c
 17898  0054DA  A4D8               	btfss	status,2,c
 17899  0054DC  D007               	goto	l1151
 17900                           
 17901                           ;Controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17902  0054DE  0100               	movlb	0	; () banked
 17903  0054E0  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17904  0054E2  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17905  0054E4  6E39               	movwf	_t_controle_flap,c
 17906  0054E6  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17907  0054E8  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17908  0054EA  6E3A               	movwf	_t_controle_flap+1,c
 17909  0054EC                     l1151:
 17910                           
 17911                           ;Controle.h: 137: }
 17912                           ;Controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17913  0054EC  5039               	movf	_t_controle_flap,w,c
 17914  0054EE  0100               	movlb	0	; () banked
 17915  0054F0  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17916  0054F2  503A               	movf	_t_controle_flap+1,w,c
 17917  0054F4  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17918  0054F6  B0D8               	btfsc	status,0,c
 17919  0054F8  D015               	goto	l1152
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;Controle.h: 140: LATAbits.LA5 = !acao;
 17923  0054FA  5167               	movf	acaoFlap@acao& (0+255),w,b
 17924  0054FC  A4D8               	btfss	status,2,c
 17925  0054FE  D003               	goto	u11940
 17926  005500  6B66               	clrf	??_acaoFlap& (0+255),b
 17927  005502  2B66               	incf	??_acaoFlap& (0+255),f,b
 17928  005504  D002               	goto	u11958
 17929  005506                     u11940:
 17930  005506  0100               	movlb	0	; () banked
 17931  005508  6B66               	clrf	??_acaoFlap& (0+255),b
 17932  00550A                     u11958:
 17933  00550A  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17934  00550C  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17935  00550E  5089               	movf	3977,w,c	;volatile
 17936  005510  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17937  005512  0BDF               	andlw	-33
 17938  005514  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17939  005516  6E89               	movwf	3977,c	;volatile
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;Controle.h: 141: LATCbits.LC2 = acao;
 17943  005518  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17944  00551A  D002               	bra	u11965
 17945  00551C  948B               	bcf	3979,2,c	;volatile
 17946  00551E  D001               	bra	u11966
 17947  005520                     u11965:
 17948  005520  848B               	bsf	3979,2,c	;volatile
 17949  005522                     u11966:
 17950                           
 17951                           ;Controle.h: 142: } else {
 17952  005522  0012               	return	
 17953  005524                     l1152:
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;Controle.h: 143: LATAbits.LA5 = 0;
 17957  005524  9A89               	bcf	3977,5,c	;volatile
 17958                           
 17959                           ;Controle.h: 144: LATCbits.LC2 = 0;
 17960  005526  948B               	bcf	3979,2,c	;volatile
 17961  005528  0012               	return	
 17962  00552A                     __end_of_acaoFlap:
 17963                           	opt stack 0
 17964                           tblptru	equ	0xFF8
 17965                           tblptrh	equ	0xFF7
 17966                           tblptrl	equ	0xFF6
 17967                           tablat	equ	0xFF5
 17968                           prodh	equ	0xFF4
 17969                           prodl	equ	0xFF3
 17970                           intcon	equ	0xFF2
 17971                           intcon2	equ	0xFF1
 17972                           intcon3	equ	0xFF0
 17973                           indf0	equ	0xFEF
 17974                           postinc0	equ	0xFEE
 17975                           fsr0h	equ	0xFEA
 17976                           fsr0l	equ	0xFE9
 17977                           wreg	equ	0xFE8
 17978                           postdec1	equ	0xFE5
 17979                           fsr1l	equ	0xFE1
 17980                           indf2	equ	0xFDF
 17981                           postinc2	equ	0xFDE
 17982                           postdec2	equ	0xFDD
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987 ;; *************** function _setLed *****************
 17988 ;; Defined at:
 17989 ;;		line 18 in file "src/Led_display.h"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;  led             1    wreg     unsigned char 
 17992 ;;  acao            1    0[BANK0 ] unsigned char 
 17993 ;; Auto vars:     Size  Location     Type
 17994 ;;  led             1    1[BANK0 ] unsigned char 
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      void 
 17997 ;; Registers used:
 17998 ;;		wreg, status,2, status,0
 17999 ;; Tracked objects:
 18000 ;;		On entry : 0/0
 18001 ;;		On exit  : 0/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18004 ;;      Params:         0       1       0       0       0       0       0       0       0
 18005 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18007 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18008 ;;Total ram usage:        2 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; Hardware stack levels required when called:    6
 18011 ;; This function calls:
 18012 ;;		Nothing
 18013 ;; This function is called by:
 18014 ;;		_acaoFlap
 18015 ;;		_controle
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           	psect	text23
 18020  005E3A                     __ptext23:
 18021                           	opt stack 0
 18022  005E3A                     _setLed:
 18023                           	opt stack 23
 18024                           
 18025                           ;incstack = 0
 18026                           ;setLed@led stored from wreg
 18027  005E3A  0100               	movlb	0	; () banked
 18028  005E3C  6F61               	movwf	setLed@led& (0+255),b
 18029                           
 18030                           ;Led_display.h: 19: if (acao) {
 18031  005E3E  0100               	movlb	0	; () banked
 18032  005E40  5160               	movf	setLed@acao& (0+255),w,b
 18033  005E42  B4D8               	btfsc	status,2,c
 18034  005E44  D004               	goto	l213
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;Led_display.h: 20: leds = leds | led;
 18038  005E46  5045               	movf	_leds,w,c
 18039  005E48  1161               	iorwf	setLed@led& (0+255),w,b
 18040  005E4A  6E45               	movwf	_leds,c
 18041                           
 18042                           ;Led_display.h: 22: } else {
 18043  005E4C  0012               	return	
 18044  005E4E                     l213:
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;Led_display.h: 23: leds = leds&~led;
 18048                           
 18049                           ; BSR set to: 0
 18050  005E4E  5161               	movf	setLed@led& (0+255),w,b
 18051  005E50  0AFF               	xorlw	255
 18052  005E52  1445               	andwf	_leds,w,c
 18053  005E54  6E45               	movwf	_leds,c
 18054  005E56  0012               	return	
 18055  005E58                     __end_of_setLed:
 18056                           	opt stack 0
 18057                           tblptru	equ	0xFF8
 18058                           tblptrh	equ	0xFF7
 18059                           tblptrl	equ	0xFF6
 18060                           tablat	equ	0xFF5
 18061                           prodh	equ	0xFF4
 18062                           prodl	equ	0xFF3
 18063                           intcon	equ	0xFF2
 18064                           intcon2	equ	0xFF1
 18065                           intcon3	equ	0xFF0
 18066                           indf0	equ	0xFEF
 18067                           postinc0	equ	0xFEE
 18068                           fsr0h	equ	0xFEA
 18069                           fsr0l	equ	0xFE9
 18070                           wreg	equ	0xFE8
 18071                           postdec1	equ	0xFE5
 18072                           fsr1l	equ	0xFE1
 18073                           indf2	equ	0xFDF
 18074                           postinc2	equ	0xFDE
 18075                           postdec2	equ	0xFDD
 18076                           fsr2h	equ	0xFDA
 18077                           fsr2l	equ	0xFD9
 18078                           status	equ	0xFD8
 18079                           
 18080 ;; *************** function _climaAtual *****************
 18081 ;; Defined at:
 18082 ;;		line 34 in file "src/FuncoesControlador.h"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;  c               1    wreg     unsigned char 
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  c               1    2[BANK0 ] unsigned char 
 18087 ;; Return value:  Size  Location     Type
 18088 ;;                  2    0[BANK0 ] PTR unsigned char 
 18089 ;; Registers used:
 18090 ;;		wreg, status,2, status,0
 18091 ;; Tracked objects:
 18092 ;;		On entry : 0/0
 18093 ;;		On exit  : 0/0
 18094 ;;		Unchanged: 0/0
 18095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18096 ;;      Params:         0       2       0       0       0       0       0       0       0
 18097 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18099 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18100 ;;Total ram usage:        3 bytes
 18101 ;; Hardware stack levels used:    1
 18102 ;; Hardware stack levels required when called:    6
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		_main
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           	psect	text24
 18111  0059DE                     __ptext24:
 18112                           	opt stack 0
 18113  0059DE                     _climaAtual:
 18114                           	opt stack 24
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;incstack = 0
 18118                           ;climaAtual@c stored from wreg
 18119  0059DE  0100               	movlb	0	; () banked
 18120  0059E0  6F62               	movwf	climaAtual@c& (0+255),b
 18121                           
 18122                           ;FuncoesControlador.h: 35: switch (c) {
 18123  0059E2  D015               	goto	l897
 18124  0059E4  0EC8               	movlw	low STR_6
 18125  0059E6  0100               	movlb	0	; () banked
 18126  0059E8  6F60               	movwf	?_climaAtual& (0+255),b
 18127  0059EA  0E7F               	movlw	high STR_6
 18128  0059EC  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18129                           
 18130                           ; BSR set to: 0
 18131  0059EE  0012               	return	
 18132  0059F0                     
 18133                           ; BSR set to: 0
 18134                           
 18135                           ; BSR set to: 0
 18136  0059F0  0E98               	movlw	low STR_7
 18137  0059F2  6F60               	movwf	?_climaAtual& (0+255),b
 18138  0059F4  0E7F               	movlw	high STR_7
 18139  0059F6  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18140                           
 18141                           ; BSR set to: 0
 18142  0059F8  0012               	return	
 18143  0059FA                     
 18144                           ; BSR set to: 0
 18145                           
 18146                           ; BSR set to: 0
 18147  0059FA  0EE2               	movlw	low STR_8
 18148  0059FC  6F60               	movwf	?_climaAtual& (0+255),b
 18149  0059FE  0E7F               	movlw	high STR_8
 18150  005A00  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18151                           
 18152                           ; BSR set to: 0
 18153  005A02  0012               	return	
 18154  005A04                     
 18155                           ; BSR set to: 0
 18156                           
 18157                           ; BSR set to: 0
 18158  005A04  0EF3               	movlw	low STR_9
 18159  005A06  6F60               	movwf	?_climaAtual& (0+255),b
 18160  005A08  0E7F               	movlw	high STR_9
 18161  005A0A  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;FuncoesControlador.h: 41: }
 18165                           
 18166                           ; BSR set to: 0
 18167  005A0C  0012               	return	
 18168  005A0E                     l897:
 18169                           
 18170                           ; BSR set to: 0
 18171  005A0E  0100               	movlb	0	; () banked
 18172  005A10  5162               	movf	climaAtual@c& (0+255),w,b
 18173                           
 18174                           ; Switch size 1, requested type "space"
 18175                           ; Number of cases is 3, Range of values is 1 to 3
 18176                           ; switch strategies available:
 18177                           ; Name         Instructions Cycles
 18178                           ; simple_byte           10     6 (average)
 18179                           ;	Chosen strategy is simple_byte
 18180  005A12  0A01               	xorlw	1	; case 1
 18181  005A14  B4D8               	btfsc	status,2,c
 18182  005A16  D7E6               	goto	l898
 18183  005A18  0A03               	xorlw	3	; case 2
 18184  005A1A  B4D8               	btfsc	status,2,c
 18185  005A1C  D7E9               	goto	l900
 18186  005A1E  0A01               	xorlw	1	; case 3
 18187  005A20  B4D8               	btfsc	status,2,c
 18188  005A22  D7EB               	goto	l901
 18189  005A24  D7EF               	goto	l902
 18190  005A26                     __end_of_climaAtual:
 18191                           	opt stack 0
 18192                           tblptru	equ	0xFF8
 18193                           tblptrh	equ	0xFF7
 18194                           tblptrl	equ	0xFF6
 18195                           tablat	equ	0xFF5
 18196                           prodh	equ	0xFF4
 18197                           prodl	equ	0xFF3
 18198                           intcon	equ	0xFF2
 18199                           intcon2	equ	0xFF1
 18200                           intcon3	equ	0xFF0
 18201                           indf0	equ	0xFEF
 18202                           postinc0	equ	0xFEE
 18203                           fsr0h	equ	0xFEA
 18204                           fsr0l	equ	0xFE9
 18205                           wreg	equ	0xFE8
 18206                           postdec1	equ	0xFE5
 18207                           fsr1l	equ	0xFE1
 18208                           indf2	equ	0xFDF
 18209                           postinc2	equ	0xFDE
 18210                           postdec2	equ	0xFDD
 18211                           fsr2h	equ	0xFDA
 18212                           fsr2l	equ	0xFD9
 18213                           status	equ	0xFD8
 18214                           
 18215 ;; *************** function _btPress *****************
 18216 ;; Defined at:
 18217 ;;		line 26 in file "src/Teclado.h"
 18218 ;; Parameters:    Size  Location     Type
 18219 ;;  bt              1    wreg     unsigned char 
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;  bt              1    0[BANK0 ] unsigned char 
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      unsigned char 
 18224 ;; Registers used:
 18225 ;;		wreg, status,2, status,0
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18231 ;;      Params:         0       0       0       0       0       0       0       0       0
 18232 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18234 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18235 ;;Total ram usage:        1 bytes
 18236 ;; Hardware stack levels used:    1
 18237 ;; Hardware stack levels required when called:    6
 18238 ;; This function calls:
 18239 ;;		Nothing
 18240 ;; This function is called by:
 18241 ;;		_main
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           	psect	text25
 18246  005E58                     __ptext25:
 18247                           	opt stack 0
 18248  005E58                     _btPress:
 18249                           	opt stack 24
 18250                           
 18251                           ; BSR set to: 0
 18252                           ;incstack = 0
 18253                           ;btPress@bt stored from wreg
 18254  005E58  0100               	movlb	0	; () banked
 18255  005E5A  6F60               	movwf	btPress@bt& (0+255),b
 18256                           
 18257                           ;Teclado.h: 27: if (bt_flag == bt) {
 18258  005E5C  0100               	movlb	0	; () banked
 18259  005E5E  5160               	movf	btPress@bt& (0+255),w,b
 18260  005E60  1844               	xorwf	_bt_flag,w,c
 18261  005E62  B4D8               	btfsc	status,2,c
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 18265  005E64  A481               	btfss	3969,2,c	;volatile
 18266  005E66  D004               	goto	l292
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;Teclado.h: 29: bt_flag = 0;
 18270  005E68  0E00               	movlw	0
 18271  005E6A  6E44               	movwf	_bt_flag,c
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;Teclado.h: 30: return 1;
 18275  005E6C  0E01               	movlw	1
 18276                           
 18277                           ; BSR set to: 0
 18278  005E6E  0012               	return	
 18279  005E70                     l292:
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;Teclado.h: 31: }
 18283                           ;Teclado.h: 32: }
 18284                           ;Teclado.h: 33: return 0;
 18285                           
 18286                           ; BSR set to: 0
 18287                           
 18288                           ; BSR set to: 0
 18289  005E70  0E00               	movlw	0
 18290  005E72  0012               	return	
 18291  005E74                     __end_of_btPress:
 18292                           	opt stack 0
 18293                           tblptru	equ	0xFF8
 18294                           tblptrh	equ	0xFF7
 18295                           tblptrl	equ	0xFF6
 18296                           tablat	equ	0xFF5
 18297                           prodh	equ	0xFF4
 18298                           prodl	equ	0xFF3
 18299                           intcon	equ	0xFF2
 18300                           intcon2	equ	0xFF1
 18301                           intcon3	equ	0xFF0
 18302                           indf0	equ	0xFEF
 18303                           postinc0	equ	0xFEE
 18304                           fsr0h	equ	0xFEA
 18305                           fsr0l	equ	0xFE9
 18306                           wreg	equ	0xFE8
 18307                           postdec1	equ	0xFE5
 18308                           fsr1l	equ	0xFE1
 18309                           indf2	equ	0xFDF
 18310                           postinc2	equ	0xFDE
 18311                           postdec2	equ	0xFDD
 18312                           fsr2h	equ	0xFDA
 18313                           fsr2l	equ	0xFD9
 18314                           status	equ	0xFD8
 18315                           
 18316 ;; *************** function _blink *****************
 18317 ;; Defined at:
 18318 ;;		line 212 in file "src/lcd.h"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  line            2    0[BANK0 ] PTR unsigned char 
 18321 ;;		 -> line3(21), line2(21), line1(21), 
 18322 ;;  start           1    2[BANK0 ] unsigned char 
 18323 ;;  end             1    3[BANK0 ] unsigned char 
 18324 ;; Auto vars:     Size  Location     Type
 18325 ;;  i               1    4[BANK0 ] unsigned char 
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  1    wreg      void 
 18328 ;; Registers used:
 18329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18335 ;;      Params:         0       4       0       0       0       0       0       0       0
 18336 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18338 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18339 ;;Total ram usage:        5 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:    6
 18342 ;; This function calls:
 18343 ;;		Nothing
 18344 ;; This function is called by:
 18345 ;;		_main
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text26
 18350  005C10                     __ptext26:
 18351                           	opt stack 0
 18352  005C10                     _blink:
 18353                           	opt stack 24
 18354                           
 18355                           ;lcd.h: 213: if (blinkk) {
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;incstack = 0
 18359  005C10  A44F               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 18360  005C12  0012               	return	
 18361                           
 18362                           ;lcd.h: 214: char i = 0;
 18363  005C14  0E00               	movlw	0
 18364  005C16  0100               	movlb	0	; () banked
 18365  005C18  6F64               	movwf	blink@i& (0+255),b
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 18369  005C1A  0762               	decf	blink@start& (0+255),f,b
 18370  005C1C  C062  F064         	movff	blink@start,blink@i
 18371  005C20  D00B               	goto	l280
 18372  005C22                     
 18373                           ; BSR set to: 0
 18374                           ;lcd.h: 216: line[i] = ' ';
 18375                           
 18376                           ; BSR set to: 0
 18377  005C22  5164               	movf	blink@i& (0+255),w,b
 18378  005C24  0D01               	mullw	1
 18379  005C26  50F3               	movf	prodl,w,c
 18380  005C28  2560               	addwf	blink@line& (0+255),w,b
 18381  005C2A  6ED9               	movwf	fsr2l,c
 18382  005C2C  50F4               	movf	prodh,w,c
 18383  005C2E  2161               	addwfc	(blink@line+1)& (0+255),w,b
 18384  005C30  6EDA               	movwf	fsr2h,c
 18385  005C32  0E20               	movlw	32
 18386  005C34  6EDF               	movwf	indf2,c
 18387                           
 18388                           ; BSR set to: 0
 18389  005C36  2B64               	incf	blink@i& (0+255),f,b
 18390  005C38                     l280:
 18391                           
 18392                           ; BSR set to: 0
 18393                           
 18394                           ; BSR set to: 0
 18395  005C38  5163               	movf	blink@end& (0+255),w,b
 18396  005C3A  5D64               	subwf	blink@i& (0+255),w,b
 18397  005C3C  B0D8               	btfsc	status,0,c
 18398  005C3E  0012               	return	
 18399  005C40  D7F0               	goto	l281
 18400  005C42                     __end_of_blink:
 18401                           	opt stack 0
 18402                           tblptru	equ	0xFF8
 18403                           tblptrh	equ	0xFF7
 18404                           tblptrl	equ	0xFF6
 18405                           tablat	equ	0xFF5
 18406                           prodh	equ	0xFF4
 18407                           prodl	equ	0xFF3
 18408                           intcon	equ	0xFF2
 18409                           intcon2	equ	0xFF1
 18410                           intcon3	equ	0xFF0
 18411                           indf0	equ	0xFEF
 18412                           postinc0	equ	0xFEE
 18413                           fsr0h	equ	0xFEA
 18414                           fsr0l	equ	0xFE9
 18415                           wreg	equ	0xFE8
 18416                           postdec1	equ	0xFE5
 18417                           fsr1l	equ	0xFE1
 18418                           indf2	equ	0xFDF
 18419                           postinc2	equ	0xFDE
 18420                           postdec2	equ	0xFDD
 18421                           fsr2h	equ	0xFDA
 18422                           fsr2l	equ	0xFD9
 18423                           status	equ	0xFD8
 18424                           
 18425 ;; *************** function _alterarConfigWifi *****************
 18426 ;; Defined at:
 18427 ;;		line 67 in file "src/conexaoWifi.h"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;		None
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  i               1  101[BANK0 ] unsigned char 
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      void 
 18434 ;; Registers used:
 18435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18441 ;;      Params:         0       0       0       0       0       0       0       0       0
 18442 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18443 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18444 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18445 ;;Total ram usage:        1 bytes
 18446 ;; Hardware stack levels used:    1
 18447 ;; Hardware stack levels required when called:   10
 18448 ;; This function calls:
 18449 ;;		_atualizaLCD
 18450 ;;		_delay
 18451 ;;		_filtroStr
 18452 ;;		_limpaBuffer
 18453 ;;		_printf
 18454 ;;		_sprintf
 18455 ;;		_strlen
 18456 ;;		_strstr
 18457 ;;		_writeEEPROM_ext
 18458 ;; This function is called by:
 18459 ;;		_main
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           	psect	text27
 18464  00361E                     __ptext27:
 18465                           	opt stack 0
 18466  00361E                     _alterarConfigWifi:
 18467                           	opt stack 20
 18468                           
 18469                           ;conexaoWifi.h: 69: if (t_wifi_restart == 0) {
 18470                           
 18471                           ;incstack = 0
 18472  00361E  0101               	movlb	1	; () banked
 18473  003620  5197               	movf	_t_wifi_restart& (0+255),w,b
 18474  003622  A4D8               	btfss	status,2,c
 18475  003624  D007               	goto	l986
 18476                           
 18477                           ; BSR set to: 1
 18478                           ;conexaoWifi.h: 70: menu = 8;
 18479  003626  0E08               	movlw	8
 18480  003628  0100               	movlb	0	; () banked
 18481  00362A  6FFB               	movwf	_menu& (0+255),b
 18482                           
 18483                           ;conexaoWifi.h: 71: opcaomenu = 1;
 18484  00362C  0E01               	movlw	1
 18485  00362E  0101               	movlb	1	; () banked
 18486  003630  6F99               	movwf	_opcaomenu& (0+255),b
 18487                           
 18488                           ; BSR set to: 1
 18489                           ;conexaoWifi.h: 73: } else {
 18490                           
 18491                           ; BSR set to: 1
 18492                           ;conexaoWifi.h: 72: return;
 18493  003632  0012               	return	
 18494  003634                     l986:
 18495                           
 18496                           ; BSR set to: 1
 18497                           ;conexaoWifi.h: 74: delay(10);
 18498                           
 18499                           ; BSR set to: 1
 18500  003634  0E00               	movlw	0
 18501  003636  0100               	movlb	0	; () banked
 18502  003638  6F61               	movwf	(delay@x+1)& (0+255),b
 18503  00363A  0E0A               	movlw	10
 18504  00363C  6F60               	movwf	delay@x& (0+255),b
 18505  00363E  EC97  F02E         	call	_delay	;wreg free
 18506                           
 18507                           ;conexaoWifi.h: 75: switch (f_wifi_processo) {
 18508  003642  D223               	goto	l989
 18509  003644                     
 18510                           ;conexaoWifi.h: 77: limpaBuffer();
 18511  003644  EC78  F02D         	call	_limpaBuffer	;wreg free
 18512                           
 18513                           ;conexaoWifi.h: 78: printf("AT+CWMODE=2\r\n");
 18514  003648  0E51               	movlw	low STR_12
 18515  00364A  0100               	movlb	0	; () banked
 18516  00364C  6F81               	movwf	printf@f& (0+255),b
 18517  00364E  0E7E               	movlw	high STR_12
 18518  003650  6F82               	movwf	(printf@f+1)& (0+255),b
 18519  003652  ECB7  F02D         	call	_printf	;wreg free
 18520                           
 18521                           ;conexaoWifi.h: 79: wifi_conectado = 0;
 18522  003656  0E00               	movlw	0
 18523  003658  0101               	movlb	1	; () banked
 18524  00365A  6F9A               	movwf	_wifi_conectado& (0+255),b
 18525                           
 18526                           ; BSR set to: 1
 18527                           ;conexaoWifi.h: 80: f_wifi_processo++;
 18528  00365C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18529                           
 18530                           ;conexaoWifi.h: 81: break;
 18531  00365E  0012               	return	
 18532  003660                     
 18533                           ; BSR set to: 1
 18534                           ;conexaoWifi.h: 83: if (strstr(bufferSerial, "OK") != (0)) {
 18535                           
 18536                           ; BSR set to: 1
 18537  003660  0E42               	movlw	low _bufferSerial
 18538  003662  0100               	movlb	0	; () banked
 18539  003664  6F6F               	movwf	strstr@s1& (0+255),b
 18540  003666  0E02               	movlw	high _bufferSerial
 18541  003668  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18542  00366A  0EF6               	movlw	low STR_13
 18543  00366C  6F71               	movwf	strstr@s2& (0+255),b
 18544  00366E  0E7F               	movlw	high STR_13
 18545  003670  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18546  003672  EC82  F028         	call	_strstr	;wreg free
 18547  003676  0100               	movlb	0	; () banked
 18548  003678  516F               	movf	?_strstr& (0+255),w,b
 18549  00367A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18550  00367C  B4D8               	btfsc	status,2,c
 18551  00367E  0012               	return	
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;conexaoWifi.h: 84: f_wifi_processo++;
 18555  003680  0101               	movlb	1	; () banked
 18556  003682  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18557                           
 18558                           ; BSR set to: 1
 18559                           ;conexaoWifi.h: 85: }
 18560                           ;conexaoWifi.h: 86: break;
 18561  003684  0012               	return	
 18562  003686                     
 18563                           ; BSR set to: 1
 18564                           ;conexaoWifi.h: 88: limpaBuffer();
 18565                           
 18566                           ; BSR set to: 1
 18567  003686  EC78  F02D         	call	_limpaBuffer	;wreg free
 18568                           
 18569                           ;conexaoWifi.h: 89: printf("AT+CIPMUX=1\r\n");
 18570  00368A  0E43               	movlw	low STR_14
 18571  00368C  0100               	movlb	0	; () banked
 18572  00368E  6F81               	movwf	printf@f& (0+255),b
 18573  003690  0E7E               	movlw	high STR_14
 18574  003692  6F82               	movwf	(printf@f+1)& (0+255),b
 18575  003694  ECB7  F02D         	call	_printf	;wreg free
 18576                           
 18577                           ;conexaoWifi.h: 90: f_wifi_processo++;
 18578  003698  0101               	movlb	1	; () banked
 18579  00369A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18580                           
 18581                           ;conexaoWifi.h: 91: break;
 18582  00369C  0012               	return	
 18583  00369E                     
 18584                           ; BSR set to: 1
 18585                           ;conexaoWifi.h: 93: if (strstr(bufferSerial, "OK") != (0)) {
 18586                           
 18587                           ; BSR set to: 1
 18588  00369E  0E42               	movlw	low _bufferSerial
 18589  0036A0  0100               	movlb	0	; () banked
 18590  0036A2  6F6F               	movwf	strstr@s1& (0+255),b
 18591  0036A4  0E02               	movlw	high _bufferSerial
 18592  0036A6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18593  0036A8  0EF6               	movlw	low STR_13
 18594  0036AA  6F71               	movwf	strstr@s2& (0+255),b
 18595  0036AC  0E7F               	movlw	high STR_13
 18596  0036AE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18597  0036B0  EC82  F028         	call	_strstr	;wreg free
 18598  0036B4  0100               	movlb	0	; () banked
 18599  0036B6  516F               	movf	?_strstr& (0+255),w,b
 18600  0036B8  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18601  0036BA  B4D8               	btfsc	status,2,c
 18602  0036BC  0012               	return	
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;conexaoWifi.h: 94: f_wifi_processo++;
 18606  0036BE  0101               	movlb	1	; () banked
 18607  0036C0  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18608                           
 18609                           ; BSR set to: 1
 18610                           ;conexaoWifi.h: 95: }
 18611                           ;conexaoWifi.h: 96: break;
 18612  0036C2  0012               	return	
 18613  0036C4                     
 18614                           ; BSR set to: 1
 18615                           ;conexaoWifi.h: 98: limpaBuffer();
 18616                           
 18617                           ; BSR set to: 1
 18618  0036C4  EC78  F02D         	call	_limpaBuffer	;wreg free
 18619                           
 18620                           ;conexaoWifi.h: 99: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18621  0036C8  0E99               	movlw	low STR_16
 18622  0036CA  0100               	movlb	0	; () banked
 18623  0036CC  6F81               	movwf	printf@f& (0+255),b
 18624  0036CE  0E7B               	movlw	high STR_16
 18625  0036D0  6F82               	movwf	(printf@f+1)& (0+255),b
 18626  0036D2  ECB7  F02D         	call	_printf	;wreg free
 18627                           
 18628                           ;conexaoWifi.h: 100: f_wifi_processo++;
 18629  0036D6  0101               	movlb	1	; () banked
 18630  0036D8  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18631                           
 18632                           ;conexaoWifi.h: 101: break;
 18633  0036DA  0012               	return	
 18634  0036DC                     
 18635                           ; BSR set to: 1
 18636                           ;conexaoWifi.h: 103: if (strstr(bufferSerial, "OK") != (0)) {
 18637                           
 18638                           ; BSR set to: 1
 18639  0036DC  0E42               	movlw	low _bufferSerial
 18640  0036DE  0100               	movlb	0	; () banked
 18641  0036E0  6F6F               	movwf	strstr@s1& (0+255),b
 18642  0036E2  0E02               	movlw	high _bufferSerial
 18643  0036E4  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18644  0036E6  0EF6               	movlw	low STR_13
 18645  0036E8  6F71               	movwf	strstr@s2& (0+255),b
 18646  0036EA  0E7F               	movlw	high STR_13
 18647  0036EC  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18648  0036EE  EC82  F028         	call	_strstr	;wreg free
 18649  0036F2  0100               	movlb	0	; () banked
 18650  0036F4  516F               	movf	?_strstr& (0+255),w,b
 18651  0036F6  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18652  0036F8  B4D8               	btfsc	status,2,c
 18653  0036FA  0012               	return	
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;conexaoWifi.h: 104: f_wifi_processo++;
 18657  0036FC  0101               	movlb	1	; () banked
 18658  0036FE  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18659                           
 18660                           ; BSR set to: 1
 18661                           ;conexaoWifi.h: 105: }
 18662                           ;conexaoWifi.h: 106: break;
 18663  003700  0012               	return	
 18664  003702                     
 18665                           ; BSR set to: 1
 18666                           ;conexaoWifi.h: 108: limpaBuffer();
 18667                           
 18668                           ; BSR set to: 1
 18669  003702  EC78  F02D         	call	_limpaBuffer	;wreg free
 18670                           
 18671                           ;conexaoWifi.h: 109: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18672  003706  0EBC               	movlw	low STR_18
 18673  003708  0100               	movlb	0	; () banked
 18674  00370A  6F81               	movwf	printf@f& (0+255),b
 18675  00370C  0E7B               	movlw	high STR_18
 18676  00370E  6F82               	movwf	(printf@f+1)& (0+255),b
 18677  003710  ECB7  F02D         	call	_printf	;wreg free
 18678                           
 18679                           ;conexaoWifi.h: 110: f_wifi_processo++;
 18680  003714  0101               	movlb	1	; () banked
 18681  003716  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18682                           
 18683                           ;conexaoWifi.h: 111: break;
 18684  003718  0012               	return	
 18685  00371A                     
 18686                           ; BSR set to: 1
 18687                           ;conexaoWifi.h: 113: if (strstr(bufferSerial, "OK") != (0)) {
 18688                           
 18689                           ; BSR set to: 1
 18690  00371A  0E42               	movlw	low _bufferSerial
 18691  00371C  0100               	movlb	0	; () banked
 18692  00371E  6F6F               	movwf	strstr@s1& (0+255),b
 18693  003720  0E02               	movlw	high _bufferSerial
 18694  003722  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18695  003724  0EF6               	movlw	low STR_13
 18696  003726  6F71               	movwf	strstr@s2& (0+255),b
 18697  003728  0E7F               	movlw	high STR_13
 18698  00372A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18699  00372C  EC82  F028         	call	_strstr	;wreg free
 18700  003730  0100               	movlb	0	; () banked
 18701  003732  516F               	movf	?_strstr& (0+255),w,b
 18702  003734  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18703  003736  B4D8               	btfsc	status,2,c
 18704  003738  0012               	return	
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;conexaoWifi.h: 114: f_wifi_processo++;
 18708  00373A  0101               	movlb	1	; () banked
 18709  00373C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18710                           
 18711                           ; BSR set to: 1
 18712                           ;conexaoWifi.h: 115: }
 18713                           ;conexaoWifi.h: 116: break;
 18714  00373E  0012               	return	
 18715  003740                     
 18716                           ; BSR set to: 1
 18717                           ;conexaoWifi.h: 118: limpaBuffer();
 18718                           
 18719                           ; BSR set to: 1
 18720  003740  EC78  F02D         	call	_limpaBuffer	;wreg free
 18721                           
 18722                           ;conexaoWifi.h: 119: printf("AT+CIPSERVER=1,8080\r\n");
 18723  003744  0ED2               	movlw	low STR_20
 18724  003746  0100               	movlb	0	; () banked
 18725  003748  6F81               	movwf	printf@f& (0+255),b
 18726  00374A  0E7B               	movlw	high STR_20
 18727  00374C  6F82               	movwf	(printf@f+1)& (0+255),b
 18728  00374E  ECB7  F02D         	call	_printf	;wreg free
 18729                           
 18730                           ;conexaoWifi.h: 120: f_wifi_processo++;
 18731  003752  0101               	movlb	1	; () banked
 18732  003754  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18733                           
 18734                           ;conexaoWifi.h: 121: break;
 18735  003756  0012               	return	
 18736  003758                     
 18737                           ; BSR set to: 1
 18738                           ;conexaoWifi.h: 123: if (strstr(bufferSerial, "OK") != (0)) {
 18739                           
 18740                           ; BSR set to: 1
 18741  003758  0E42               	movlw	low _bufferSerial
 18742  00375A  0100               	movlb	0	; () banked
 18743  00375C  6F6F               	movwf	strstr@s1& (0+255),b
 18744  00375E  0E02               	movlw	high _bufferSerial
 18745  003760  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18746  003762  0EF6               	movlw	low STR_13
 18747  003764  6F71               	movwf	strstr@s2& (0+255),b
 18748  003766  0E7F               	movlw	high STR_13
 18749  003768  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18750  00376A  EC82  F028         	call	_strstr	;wreg free
 18751  00376E  0100               	movlb	0	; () banked
 18752  003770  516F               	movf	?_strstr& (0+255),w,b
 18753  003772  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18754  003774  B4D8               	btfsc	status,2,c
 18755  003776  0012               	return	
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;conexaoWifi.h: 124: f_wifi_processo++;
 18759  003778  0101               	movlb	1	; () banked
 18760  00377A  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18761                           
 18762                           ; BSR set to: 1
 18763                           ;conexaoWifi.h: 125: t_wifi_restart = 180;
 18764  00377C  0EB4               	movlw	180
 18765  00377E  6F97               	movwf	_t_wifi_restart& (0+255),b
 18766                           
 18767                           ; BSR set to: 1
 18768                           ;conexaoWifi.h: 126: }
 18769                           ;conexaoWifi.h: 127: break;
 18770  003780  0012               	return	
 18771  003782                     
 18772                           ; BSR set to: 1
 18773                           ;conexaoWifi.h: 129: sprintf(line1, "Conecte-se a rede e");
 18774                           
 18775                           ; BSR set to: 1
 18776  003782  0EDA               	movlw	low _line1
 18777  003784  0100               	movlb	0	; () banked
 18778  003786  6F81               	movwf	sprintf@wh& (0+255),b
 18779  003788  0E01               	movlw	high _line1
 18780  00378A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18781  00378C  0ECA               	movlw	low STR_22
 18782  00378E  6F83               	movwf	sprintf@f& (0+255),b
 18783  003790  0E7C               	movlw	high STR_22
 18784  003792  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18785  003794  EC13  F02D         	call	_sprintf	;wreg free
 18786                           
 18787                           ;conexaoWifi.h: 130: sprintf(line2, "acesse o IP para");
 18788  003798  0EC5               	movlw	low _line2
 18789  00379A  0100               	movlb	0	; () banked
 18790  00379C  6F81               	movwf	sprintf@wh& (0+255),b
 18791  00379E  0E01               	movlw	high _line2
 18792  0037A0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18793  0037A2  0E84               	movlw	low STR_23
 18794  0037A4  6F83               	movwf	sprintf@f& (0+255),b
 18795  0037A6  0E7D               	movlw	high STR_23
 18796  0037A8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18797  0037AA  EC13  F02D         	call	_sprintf	;wreg free
 18798                           
 18799                           ;conexaoWifi.h: 131: sprintf(line3, "configurar o WIFI...");
 18800  0037AE  0EB0               	movlw	low _line3
 18801  0037B0  0100               	movlb	0	; () banked
 18802  0037B2  6F81               	movwf	sprintf@wh& (0+255),b
 18803  0037B4  0E01               	movlw	high _line3
 18804  0037B6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18805  0037B8  0E28               	movlw	low STR_24
 18806  0037BA  6F83               	movwf	sprintf@f& (0+255),b
 18807  0037BC  0E7C               	movlw	high STR_24
 18808  0037BE  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18809  0037C0  EC13  F02D         	call	_sprintf	;wreg free
 18810                           
 18811                           ;conexaoWifi.h: 132: sprintf(line4, "10.1.1.1:8080");
 18812  0037C4  0E9B               	movlw	low _line4
 18813  0037C6  0100               	movlb	0	; () banked
 18814  0037C8  6F81               	movwf	sprintf@wh& (0+255),b
 18815  0037CA  0E01               	movlw	high _line4
 18816  0037CC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18817  0037CE  0E89               	movlw	low STR_25
 18818  0037D0  6F83               	movwf	sprintf@f& (0+255),b
 18819  0037D2  0E7E               	movlw	high STR_25
 18820  0037D4  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18821  0037D6  EC13  F02D         	call	_sprintf	;wreg free
 18822                           
 18823                           ;conexaoWifi.h: 133: if ((strstr(bufferSerial, "+IPD") != (0)) || (strstr(bufferSerial, 
      +                          "Accept") != (0)) || (strstr(bufferSerial, "CONNECT") != (0))) {
 18824  0037DA  0E42               	movlw	low _bufferSerial
 18825  0037DC  0100               	movlb	0	; () banked
 18826  0037DE  6F6F               	movwf	strstr@s1& (0+255),b
 18827  0037E0  0E02               	movlw	high _bufferSerial
 18828  0037E2  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18829  0037E4  0ECE               	movlw	low STR_26
 18830  0037E6  6F71               	movwf	strstr@s2& (0+255),b
 18831  0037E8  0E7F               	movlw	high STR_26
 18832  0037EA  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18833  0037EC  EC82  F028         	call	_strstr	;wreg free
 18834  0037F0  0100               	movlb	0	; () banked
 18835  0037F2  516F               	movf	?_strstr& (0+255),w,b
 18836  0037F4  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18837  0037F6  A4D8               	btfss	status,2,c
 18838  0037F8  D01E               	goto	u12980
 18839                           
 18840                           ; BSR set to: 0
 18841  0037FA  0E42               	movlw	low _bufferSerial
 18842  0037FC  6F6F               	movwf	strstr@s1& (0+255),b
 18843  0037FE  0E02               	movlw	high _bufferSerial
 18844  003800  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18845  003802  0EBB               	movlw	low STR_27
 18846  003804  6F71               	movwf	strstr@s2& (0+255),b
 18847  003806  0E7F               	movlw	high STR_27
 18848  003808  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18849  00380A  EC82  F028         	call	_strstr	;wreg free
 18850  00380E  0100               	movlb	0	; () banked
 18851  003810  516F               	movf	?_strstr& (0+255),w,b
 18852  003812  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18853  003814  A4D8               	btfss	status,2,c
 18854  003816  D00F               	goto	u12980
 18855                           
 18856                           ; BSR set to: 0
 18857  003818  0E42               	movlw	low _bufferSerial
 18858  00381A  6F6F               	movwf	strstr@s1& (0+255),b
 18859  00381C  0E02               	movlw	high _bufferSerial
 18860  00381E  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18861  003820  0E6B               	movlw	low STR_28
 18862  003822  6F71               	movwf	strstr@s2& (0+255),b
 18863  003824  0E7F               	movlw	high STR_28
 18864  003826  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18865  003828  EC82  F028         	call	_strstr	;wreg free
 18866  00382C  0100               	movlb	0	; () banked
 18867  00382E  516F               	movf	?_strstr& (0+255),w,b
 18868  003830  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18869  003832  B4D8               	btfsc	status,2,c
 18870  003834  0012               	return	
 18871  003836                     u12980:
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;conexaoWifi.h: 134: delay(400);
 18875                           
 18876                           ; BSR set to: 0
 18877  003836  0E01               	movlw	1
 18878  003838  6F61               	movwf	(delay@x+1)& (0+255),b
 18879  00383A  0E90               	movlw	144
 18880  00383C  6F60               	movwf	delay@x& (0+255),b
 18881  00383E  EC97  F02E         	call	_delay	;wreg free
 18882                           
 18883                           ;conexaoWifi.h: 135: f_wifi_processo++;
 18884  003842  0101               	movlb	1	; () banked
 18885  003844  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18886                           
 18887                           ; BSR set to: 1
 18888                           ;conexaoWifi.h: 136: }
 18889                           ;conexaoWifi.h: 137: break;
 18890  003846  0012               	return	
 18891  003848                     
 18892                           ; BSR set to: 1
 18893                           ;conexaoWifi.h: 139: limpaBuffer();
 18894                           
 18895                           ; BSR set to: 1
 18896  003848  EC78  F02D         	call	_limpaBuffer	;wreg free
 18897                           
 18898                           ;conexaoWifi.h: 140: printf("AT+CIPSENDEX=0,800\r\n");
 18899  00384C  0E13               	movlw	low STR_29
 18900  00384E  0100               	movlb	0	; () banked
 18901  003850  6F81               	movwf	printf@f& (0+255),b
 18902  003852  0E7C               	movlw	high STR_29
 18903  003854  6F82               	movwf	(printf@f+1)& (0+255),b
 18904  003856  ECB7  F02D         	call	_printf	;wreg free
 18905                           
 18906                           ;conexaoWifi.h: 141: f_wifi_processo++;
 18907  00385A  0101               	movlb	1	; () banked
 18908  00385C  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18909                           
 18910                           ;conexaoWifi.h: 142: break;
 18911  00385E  0012               	return	
 18912  003860                     
 18913                           ; BSR set to: 1
 18914                           ;conexaoWifi.h: 144: if (strstr(bufferSerial, ">") != (0)) {
 18915                           
 18916                           ; BSR set to: 1
 18917  003860  0E42               	movlw	low _bufferSerial
 18918  003862  0100               	movlb	0	; () banked
 18919  003864  6F6F               	movwf	strstr@s1& (0+255),b
 18920  003866  0E02               	movlw	high _bufferSerial
 18921  003868  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18922  00386A  0E78               	movlw	low (STR_107+18)
 18923  00386C  6F71               	movwf	strstr@s2& (0+255),b
 18924  00386E  0E7C               	movlw	high (STR_107+18)
 18925  003870  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18926  003872  EC82  F028         	call	_strstr	;wreg free
 18927  003876  0100               	movlb	0	; () banked
 18928  003878  516F               	movf	?_strstr& (0+255),w,b
 18929  00387A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18930  00387C  B4D8               	btfsc	status,2,c
 18931  00387E  0012               	return	
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;conexaoWifi.h: 145: f_wifi_processo++;
 18935  003880  0101               	movlb	1	; () banked
 18936  003882  2B96               	incf	_f_wifi_processo& (0+255),f,b
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;conexaoWifi.h: 146: }
 18940                           ;conexaoWifi.h: 147: break;
 18941  003884  0012               	return	
 18942  003886                     
 18943                           ; BSR set to: 1
 18944                           ;conexaoWifi.h: 149: limpaBuffer();
 18945                           
 18946                           ; BSR set to: 1
 18947  003886  EC78  F02D         	call	_limpaBuffer	;wreg free
 18948                           
 18949                           ;conexaoWifi.h: 150: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18950  00388A  0E6C               	movlw	low STR_31
 18951  00388C  0100               	movlb	0	; () banked
 18952  00388E  6F81               	movwf	printf@f& (0+255),b
 18953  003890  0E7B               	movlw	high STR_31
 18954  003892  6F82               	movwf	(printf@f+1)& (0+255),b
 18955  003894  ECB7  F02D         	call	_printf	;wreg free
 18956                           
 18957                           ;conexaoWifi.h: 151: delay(100);
 18958  003898  0E00               	movlw	0
 18959  00389A  0100               	movlb	0	; () banked
 18960  00389C  6F61               	movwf	(delay@x+1)& (0+255),b
 18961  00389E  0E64               	movlw	100
 18962  0038A0  6F60               	movwf	delay@x& (0+255),b
 18963  0038A2  EC97  F02E         	call	_delay	;wreg free
 18964                           
 18965                           ;conexaoWifi.h: 152: printf("<html><head><title>WIFI</title><style>*{font-size: 35px;fon
      +                          t-family:sans-serif;}form{height:450px;display:flex;flex-direction:column;justify-conten
      +                          t:space-around;align-items:center;margin:0 auto;}button{width:280px;height:60px;color:Wh
      +                          ite;bac
 18966  0038A6  0ED7               	movlw	low STR_32
 18967  0038A8  0100               	movlb	0	; () banked
 18968  0038AA  6F81               	movwf	printf@f& (0+255),b
 18969  0038AC  0E77               	movlw	high STR_32
 18970  0038AE  6F82               	movwf	(printf@f+1)& (0+255),b
 18971  0038B0  ECB7  F02D         	call	_printf	;wreg free
 18972                           
 18973                           ;conexaoWifi.h: 153: delay(800);
 18974  0038B4  0E03               	movlw	3
 18975  0038B6  0100               	movlb	0	; () banked
 18976  0038B8  6F61               	movwf	(delay@x+1)& (0+255),b
 18977  0038BA  0E20               	movlw	32
 18978  0038BC  6F60               	movwf	delay@x& (0+255),b
 18979  0038BE  EC97  F02E         	call	_delay	;wreg free
 18980                           
 18981                           ;conexaoWifi.h: 154: printf("AT+CIPCLOSE=0\r\n");
 18982  0038C2  0EEA               	movlw	low STR_33
 18983  0038C4  0100               	movlb	0	; () banked
 18984  0038C6  6F81               	movwf	printf@f& (0+255),b
 18985  0038C8  0E7D               	movlw	high STR_33
 18986  0038CA  6F82               	movwf	(printf@f+1)& (0+255),b
 18987  0038CC  ECB7  F02D         	call	_printf	;wreg free
 18988                           
 18989                           ;conexaoWifi.h: 155: delay(300);
 18990  0038D0  0E01               	movlw	1
 18991  0038D2  0100               	movlb	0	; () banked
 18992  0038D4  6F61               	movwf	(delay@x+1)& (0+255),b
 18993  0038D6  0E2C               	movlw	44
 18994  0038D8  6F60               	movwf	delay@x& (0+255),b
 18995  0038DA  EC97  F02E         	call	_delay	;wreg free
 18996                           
 18997                           ;conexaoWifi.h: 156: t_wifi_restart = 180;
 18998  0038DE  0EB4               	movlw	180
 18999  0038E0  0101               	movlb	1	; () banked
 19000  0038E2  6F97               	movwf	_t_wifi_restart& (0+255),b
 19001                           
 19002                           ; BSR set to: 1
 19003                           ;conexaoWifi.h: 157: limpaBuffer();
 19004  0038E4  EC78  F02D         	call	_limpaBuffer	;wreg free
 19005                           
 19006                           ;conexaoWifi.h: 158: f_wifi_processo++;
 19007  0038E8  0101               	movlb	1	; () banked
 19008  0038EA  2B96               	incf	_f_wifi_processo& (0+255),f,b
 19009                           
 19010                           ;conexaoWifi.h: 159: break;
 19011  0038EC  0012               	return	
 19012  0038EE                     
 19013                           ; BSR set to: 1
 19014                           ;conexaoWifi.h: 161: sprintf(line4, "Aguardando...");
 19015                           
 19016                           ; BSR set to: 1
 19017  0038EE  0E9B               	movlw	low _line4
 19018  0038F0  0100               	movlb	0	; () banked
 19019  0038F2  6F81               	movwf	sprintf@wh& (0+255),b
 19020  0038F4  0E01               	movlw	high _line4
 19021  0038F6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19022  0038F8  0E7B               	movlw	low STR_34
 19023  0038FA  6F83               	movwf	sprintf@f& (0+255),b
 19024  0038FC  0E7E               	movlw	high STR_34
 19025  0038FE  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19026  003900  EC13  F02D         	call	_sprintf	;wreg free
 19027                           
 19028                           ;conexaoWifi.h: 162: if ((strstr(bufferSerial, "ssid") != (0)) && (strstr(bufferSerial, 
      +                          "fimstr") != (0))) {
 19029  003904  0E42               	movlw	low _bufferSerial
 19030  003906  0100               	movlb	0	; () banked
 19031  003908  6F6F               	movwf	strstr@s1& (0+255),b
 19032  00390A  0E02               	movlw	high _bufferSerial
 19033  00390C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19034  00390E  0ED3               	movlw	low STR_35
 19035  003910  6F71               	movwf	strstr@s2& (0+255),b
 19036  003912  0E7F               	movlw	high STR_35
 19037  003914  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19038  003916  EC82  F028         	call	_strstr	;wreg free
 19039  00391A  0100               	movlb	0	; () banked
 19040  00391C  516F               	movf	?_strstr& (0+255),w,b
 19041  00391E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19042  003920  B4D8               	btfsc	status,2,c
 19043  003922  0012               	return	
 19044                           
 19045                           ; BSR set to: 0
 19046  003924  0E42               	movlw	low _bufferSerial
 19047  003926  6F6F               	movwf	strstr@s1& (0+255),b
 19048  003928  0E02               	movlw	high _bufferSerial
 19049  00392A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19050  00392C  0EAD               	movlw	low STR_36
 19051  00392E  6F71               	movwf	strstr@s2& (0+255),b
 19052  003930  0E7F               	movlw	high STR_36
 19053  003932  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19054  003934  EC82  F028         	call	_strstr	;wreg free
 19055  003938  0100               	movlb	0	; () banked
 19056  00393A  516F               	movf	?_strstr& (0+255),w,b
 19057  00393C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19058  00393E  B4D8               	btfsc	status,2,c
 19059  003940  0012               	return	
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;conexaoWifi.h: 163: filtroStr("ssid=", "&", bufferSerial, ssid);
 19063  003942  0EC2               	movlw	low STR_37
 19064  003944  6F91               	movwf	filtroStr@inicio& (0+255),b
 19065  003946  0E7F               	movlw	high STR_37
 19066  003948  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19067  00394A  0EF9               	movlw	low STR_38
 19068  00394C  6F93               	movwf	filtroStr@fim& (0+255),b
 19069  00394E  0E7F               	movlw	high STR_38
 19070  003950  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19071  003952  0E42               	movlw	low _bufferSerial
 19072  003954  6F95               	movwf	filtroStr@str& (0+255),b
 19073  003956  0E02               	movlw	high _bufferSerial
 19074  003958  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19075  00395A  0EA1               	movlw	low _ssid
 19076  00395C  6F97               	movwf	filtroStr@strdest& (0+255),b
 19077  00395E  0E02               	movlw	high _ssid
 19078  003960  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19079  003962  EC77  F022         	call	_filtroStr	;wreg free
 19080                           
 19081                           ;conexaoWifi.h: 164: filtroStr("senha=", "&", bufferSerial, senha);
 19082  003966  0E8A               	movlw	low STR_39
 19083  003968  0100               	movlb	0	; () banked
 19084  00396A  6F91               	movwf	filtroStr@inicio& (0+255),b
 19085  00396C  0E7F               	movlw	high STR_39
 19086  00396E  6F92               	movwf	(filtroStr@inicio+1)& (0+255),b
 19087  003970  0EF9               	movlw	low STR_38
 19088  003972  6F93               	movwf	filtroStr@fim& (0+255),b
 19089  003974  0E7F               	movlw	high STR_38
 19090  003976  6F94               	movwf	(filtroStr@fim+1)& (0+255),b
 19091  003978  0E42               	movlw	low _bufferSerial
 19092  00397A  6F95               	movwf	filtroStr@str& (0+255),b
 19093  00397C  0E02               	movlw	high _bufferSerial
 19094  00397E  6F96               	movwf	(filtroStr@str+1)& (0+255),b
 19095  003980  0E92               	movlw	low _senha
 19096  003982  6F97               	movwf	filtroStr@strdest& (0+255),b
 19097  003984  0E02               	movlw	high _senha
 19098  003986  6F98               	movwf	(filtroStr@strdest+1)& (0+255),b
 19099  003988  EC77  F022         	call	_filtroStr	;wreg free
 19100                           
 19101                           ;conexaoWifi.h: 166: sprintf(line1, "%s", ssid);
 19102  00398C  0EDA               	movlw	low _line1
 19103  00398E  0100               	movlb	0	; () banked
 19104  003990  6F81               	movwf	sprintf@wh& (0+255),b
 19105  003992  0E01               	movlw	high _line1
 19106  003994  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19107  003996  0E26               	movlw	low (STR_82+7)
 19108  003998  6F83               	movwf	sprintf@f& (0+255),b
 19109  00399A  0E7F               	movlw	high (STR_82+7)
 19110  00399C  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19111  00399E  0EA1               	movlw	low _ssid
 19112  0039A0  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19113  0039A2  0E02               	movlw	high _ssid
 19114  0039A4  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19115  0039A6  EC13  F02D         	call	_sprintf	;wreg free
 19116                           
 19117                           ;conexaoWifi.h: 167: sprintf(line2, "%s", senha);
 19118  0039AA  0EC5               	movlw	low _line2
 19119  0039AC  0100               	movlb	0	; () banked
 19120  0039AE  6F81               	movwf	sprintf@wh& (0+255),b
 19121  0039B0  0E01               	movlw	high _line2
 19122  0039B2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19123  0039B4  0E26               	movlw	low (STR_82+7)
 19124  0039B6  6F83               	movwf	sprintf@f& (0+255),b
 19125  0039B8  0E7F               	movlw	high (STR_82+7)
 19126  0039BA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19127  0039BC  0E92               	movlw	low _senha
 19128  0039BE  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19129  0039C0  0E02               	movlw	high _senha
 19130  0039C2  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19131  0039C4  EC13  F02D         	call	_sprintf	;wreg free
 19132                           
 19133                           ;conexaoWifi.h: 168: sprintf(line4, "OK...        ");
 19134  0039C8  0E9B               	movlw	low _line4
 19135  0039CA  0100               	movlb	0	; () banked
 19136  0039CC  6F81               	movwf	sprintf@wh& (0+255),b
 19137  0039CE  0E01               	movlw	high _line4
 19138  0039D0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19139  0039D2  0E6D               	movlw	low STR_43
 19140  0039D4  6F83               	movwf	sprintf@f& (0+255),b
 19141  0039D6  0E7E               	movlw	high STR_43
 19142  0039D8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19143  0039DA  EC13  F02D         	call	_sprintf	;wreg free
 19144                           
 19145                           ;conexaoWifi.h: 169: atualizaLCD(line1, line2, line3, line4);
 19146  0039DE  0EDA               	movlw	low _line1
 19147  0039E0  0100               	movlb	0	; () banked
 19148  0039E2  6F68               	movwf	atualizaLCD@line1& (0+255),b
 19149  0039E4  0E01               	movlw	high _line1
 19150  0039E6  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 19151  0039E8  0EC5               	movlw	low _line2
 19152  0039EA  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 19153  0039EC  0E01               	movlw	high _line2
 19154  0039EE  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 19155  0039F0  0EB0               	movlw	low _line3
 19156  0039F2  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 19157  0039F4  0E01               	movlw	high _line3
 19158  0039F6  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 19159  0039F8  0E9B               	movlw	low _line4
 19160  0039FA  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 19161  0039FC  0E01               	movlw	high _line4
 19162  0039FE  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 19163  003A00  EC17  F027         	call	_atualizaLCD	;wreg free
 19164                           
 19165                           ;conexaoWifi.h: 171: if (strlen(ssid) > 3) {
 19166  003A04  0EA1               	movlw	low _ssid
 19167  003A06  0100               	movlb	0	; () banked
 19168  003A08  6F60               	movwf	strlen@s& (0+255),b
 19169  003A0A  0E02               	movlw	high _ssid
 19170  003A0C  6F61               	movwf	(strlen@s+1)& (0+255),b
 19171  003A0E  EC71  F02C         	call	_strlen	;wreg free
 19172  003A12  0100               	movlb	0	; () banked
 19173  003A14  5161               	movf	(?_strlen+1)& (0+255),w,b
 19174  003A16  E104               	bnz	u13020
 19175  003A18  0E04               	movlw	4
 19176  003A1A  5D60               	subwf	?_strlen& (0+255),w,b
 19177  003A1C  A0D8               	btfss	status,0,c
 19178  003A1E  D030               	goto	u13060
 19179  003A20                     u13020:
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;conexaoWifi.h: 172: unsigned char i = 0;
 19183  003A20  0E00               	movlw	0
 19184  003A22  6FC5               	movwf	alterarConfigWifi@i& (0+255),b
 19185                           
 19186                           ;conexaoWifi.h: 173: for (i = 0; i < 15; i++) {
 19187  003A24  0E00               	movlw	0
 19188  003A26  6FC5               	movwf	alterarConfigWifi@i& (0+255),b
 19189  003A28                     l8644:
 19190                           
 19191                           ; BSR set to: 0
 19192  003A28  0E0E               	movlw	14
 19193  003A2A  65C5               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19194  003A2C  D001               	goto	l1017
 19195  003A2E  D011               	goto	u13040
 19196  003A30                     l1017:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;conexaoWifi.h: 174: writeEEPROM_ext((40 + i), ssid[i]);
 19200                           
 19201                           ; BSR set to: 0
 19202  003A30  51C5               	movf	alterarConfigWifi@i& (0+255),w,b
 19203  003A32  0D01               	mullw	1
 19204  003A34  0EA1               	movlw	low _ssid
 19205  003A36  24F3               	addwf	prodl,w,c
 19206  003A38  6ED9               	movwf	fsr2l,c
 19207  003A3A  0E02               	movlw	high _ssid
 19208  003A3C  20F4               	addwfc	prodh,w,c
 19209  003A3E  6EDA               	movwf	fsr2h,c
 19210  003A40  50DF               	movf	indf2,w,c
 19211  003A42  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19212  003A44  51C5               	movf	alterarConfigWifi@i& (0+255),w,b
 19213  003A46  0F28               	addlw	40
 19214  003A48  EC57  F02D         	call	_writeEEPROM_ext
 19215  003A4C  0100               	movlb	0	; () banked
 19216  003A4E  2BC5               	incf	alterarConfigWifi@i& (0+255),f,b
 19217  003A50  D7EB               	goto	l8644
 19218  003A52                     u13040:
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;conexaoWifi.h: 175: }
 19222                           ;conexaoWifi.h: 176: for (i = 0; i < 15; i++) {
 19223                           
 19224                           ; BSR set to: 0
 19225  003A52  0E00               	movlw	0
 19226  003A54  6FC5               	movwf	alterarConfigWifi@i& (0+255),b
 19227  003A56                     l8656:
 19228                           
 19229                           ; BSR set to: 0
 19230  003A56  0E0E               	movlw	14
 19231  003A58  65C5               	cpfsgt	alterarConfigWifi@i& (0+255),b
 19232  003A5A  D001               	goto	l1019
 19233  003A5C  D011               	goto	u13060
 19234  003A5E                     l1019:
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;conexaoWifi.h: 177: writeEEPROM_ext((60 + i), senha[i]);
 19238                           
 19239                           ; BSR set to: 0
 19240  003A5E  51C5               	movf	alterarConfigWifi@i& (0+255),w,b
 19241  003A60  0D01               	mullw	1
 19242  003A62  0E92               	movlw	low _senha
 19243  003A64  24F3               	addwf	prodl,w,c
 19244  003A66  6ED9               	movwf	fsr2l,c
 19245  003A68  0E02               	movlw	high _senha
 19246  003A6A  20F4               	addwfc	prodh,w,c
 19247  003A6C  6EDA               	movwf	fsr2h,c
 19248  003A6E  50DF               	movf	indf2,w,c
 19249  003A70  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 19250  003A72  51C5               	movf	alterarConfigWifi@i& (0+255),w,b
 19251  003A74  0F3C               	addlw	60
 19252  003A76  EC57  F02D         	call	_writeEEPROM_ext
 19253  003A7A  0100               	movlb	0	; () banked
 19254  003A7C  2BC5               	incf	alterarConfigWifi@i& (0+255),f,b
 19255  003A7E  D7EB               	goto	l8656
 19256  003A80                     u13060:
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;conexaoWifi.h: 178: }
 19260                           ;conexaoWifi.h: 179: }
 19261                           ;conexaoWifi.h: 180: while (1) {
 19262                           
 19263                           ; BSR set to: 0
 19264  003A80  D7FF               	goto	u13060
 19265  003A82  0E00               	movlw	0
 19266  003A84  0101               	movlb	1	; () banked
 19267  003A86  6F96               	movwf	_f_wifi_processo& (0+255),b
 19268                           
 19269                           ;conexaoWifi.h: 185: }
 19270  003A88  0012               	return	
 19271  003A8A                     l989:
 19272                           
 19273                           ; BSR set to: 1
 19274  003A8A  0101               	movlb	1	; () banked
 19275  003A8C  5196               	movf	_f_wifi_processo& (0+255),w,b
 19276                           
 19277                           ; Switch size 1, requested type "space"
 19278                           ; Number of cases is 15, Range of values is 0 to 14
 19279                           ; switch strategies available:
 19280                           ; Name         Instructions Cycles
 19281                           ; simple_byte           46    24 (average)
 19282                           ;	Chosen strategy is simple_byte
 19283  003A8E  0A00               	xorlw	0	; case 0
 19284  003A90  B4D8               	btfsc	status,2,c
 19285  003A92  D5D8               	goto	l990
 19286  003A94  0A01               	xorlw	1	; case 1
 19287  003A96  B4D8               	btfsc	status,2,c
 19288  003A98  D5E3               	goto	l992
 19289  003A9A  0A03               	xorlw	3	; case 2
 19290  003A9C  B4D8               	btfsc	status,2,c
 19291  003A9E  D5F3               	goto	l994
 19292  003AA0  0A01               	xorlw	1	; case 3
 19293  003AA2  B4D8               	btfsc	status,2,c
 19294  003AA4  D5FC               	goto	l995
 19295  003AA6  0A07               	xorlw	7	; case 4
 19296  003AA8  B4D8               	btfsc	status,2,c
 19297  003AAA  D60C               	goto	l997
 19298  003AAC  0A01               	xorlw	1	; case 5
 19299  003AAE  B4D8               	btfsc	status,2,c
 19300  003AB0  D615               	goto	l998
 19301  003AB2  0A03               	xorlw	3	; case 6
 19302  003AB4  B4D8               	btfsc	status,2,c
 19303  003AB6  D625               	goto	l1000
 19304  003AB8  0A01               	xorlw	1	; case 7
 19305  003ABA  B4D8               	btfsc	status,2,c
 19306  003ABC  D62E               	goto	l1001
 19307  003ABE  0A0F               	xorlw	15	; case 8
 19308  003AC0  B4D8               	btfsc	status,2,c
 19309  003AC2  D63E               	goto	l1003
 19310  003AC4  0A01               	xorlw	1	; case 9
 19311  003AC6  B4D8               	btfsc	status,2,c
 19312  003AC8  D647               	goto	l1004
 19313  003ACA  0A03               	xorlw	3	; case 10
 19314  003ACC  B4D8               	btfsc	status,2,c
 19315  003ACE  D659               	goto	l1006
 19316  003AD0  0A01               	xorlw	1	; case 11
 19317  003AD2  B4D8               	btfsc	status,2,c
 19318  003AD4  D6B9               	goto	l1010
 19319  003AD6  0A07               	xorlw	7	; case 12
 19320  003AD8  B4D8               	btfsc	status,2,c
 19321  003ADA  D6C2               	goto	l1011
 19322  003ADC  0A01               	xorlw	1	; case 13
 19323  003ADE  B4D8               	btfsc	status,2,c
 19324  003AE0  D6D2               	goto	l1013
 19325  003AE2  0A03               	xorlw	3	; case 14
 19326  003AE4  B4D8               	btfsc	status,2,c
 19327  003AE6  D703               	goto	l1014
 19328  003AE8  D7CC               	goto	l1024
 19329  003AEA                     __end_of_alterarConfigWifi:
 19330                           	opt stack 0
 19331                           tblptru	equ	0xFF8
 19332                           tblptrh	equ	0xFF7
 19333                           tblptrl	equ	0xFF6
 19334                           tablat	equ	0xFF5
 19335                           prodh	equ	0xFF4
 19336                           prodl	equ	0xFF3
 19337                           intcon	equ	0xFF2
 19338                           intcon2	equ	0xFF1
 19339                           intcon3	equ	0xFF0
 19340                           indf0	equ	0xFEF
 19341                           postinc0	equ	0xFEE
 19342                           fsr0h	equ	0xFEA
 19343                           fsr0l	equ	0xFE9
 19344                           wreg	equ	0xFE8
 19345                           postdec1	equ	0xFE5
 19346                           fsr1l	equ	0xFE1
 19347                           indf2	equ	0xFDF
 19348                           postinc2	equ	0xFDE
 19349                           postdec2	equ	0xFDD
 19350                           fsr2h	equ	0xFDA
 19351                           fsr2l	equ	0xFD9
 19352                           status	equ	0xFD8
 19353                           
 19354 ;; *************** function _writeEEPROM_ext *****************
 19355 ;; Defined at:
 19356 ;;		line 14 in file "src/Eeprom_ext.h"
 19357 ;; Parameters:    Size  Location     Type
 19358 ;;  adress          1    wreg     unsigned char 
 19359 ;;  data            1    3[BANK0 ] unsigned char 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  adress          1    4[BANK0 ] unsigned char 
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, status,2, status,0, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19371 ;;      Params:         0       1       0       0       0       0       0       0       0
 19372 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19374 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19375 ;;Total ram usage:        2 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:    8
 19378 ;; This function calls:
 19379 ;;		_I2C_Start
 19380 ;;		_I2C_Stop
 19381 ;;		_I2C_Write
 19382 ;;		_delay
 19383 ;; This function is called by:
 19384 ;;		_setUmidade
 19385 ;;		_setRangeValor
 19386 ;;		_alterarConfigWifi
 19387 ;;		_main
 19388 ;;		_writeEEPROM16_ext
 19389 ;; This function uses a non-reentrant model
 19390 ;;
 19391                           
 19392                           	psect	text28
 19393  005AAE                     __ptext28:
 19394                           	opt stack 0
 19395  005AAE                     _writeEEPROM_ext:
 19396                           	opt stack 22
 19397                           
 19398                           ;incstack = 0
 19399                           ;writeEEPROM_ext@adress stored from wreg
 19400  005AAE  0100               	movlb	0	; () banked
 19401  005AB0  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 19402                           
 19403                           ;Eeprom_ext.h: 16: I2C_Start();
 19404  005AB2  EC87  F02F         	call	_I2C_Start	;wreg free
 19405                           
 19406                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 19407  005AB6  0E00               	movlw	0
 19408  005AB8  0100               	movlb	0	; () banked
 19409  005ABA  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 19410  005ABC  0EA0               	movlw	160
 19411  005ABE  6F61               	movwf	I2C_Write@d& (0+255),b
 19412  005AC0  EC75  F02F         	call	_I2C_Write	;wreg free
 19413                           
 19414                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 19415  005AC4  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 19416  005AC8  0100               	movlb	0	; () banked
 19417  005ACA  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19418  005ACC  EC75  F02F         	call	_I2C_Write	;wreg free
 19419                           
 19420                           ;Eeprom_ext.h: 20: I2C_Write(data);
 19421  005AD0  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 19422  005AD4  0100               	movlb	0	; () banked
 19423  005AD6  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19424  005AD8  EC75  F02F         	call	_I2C_Write	;wreg free
 19425                           
 19426                           ;Eeprom_ext.h: 21: I2C_Stop();
 19427  005ADC  EC83  F02F         	call	_I2C_Stop	;wreg free
 19428                           
 19429                           ;Eeprom_ext.h: 22: delay(105);
 19430  005AE0  0E00               	movlw	0
 19431  005AE2  0100               	movlb	0	; () banked
 19432  005AE4  6F61               	movwf	(delay@x+1)& (0+255),b
 19433  005AE6  0E69               	movlw	105
 19434  005AE8  6F60               	movwf	delay@x& (0+255),b
 19435  005AEA  EC97  F02E         	call	_delay	;wreg free
 19436  005AEE  0012               	return		;funcret
 19437  005AF0                     __end_of_writeEEPROM_ext:
 19438                           	opt stack 0
 19439                           tblptru	equ	0xFF8
 19440                           tblptrh	equ	0xFF7
 19441                           tblptrl	equ	0xFF6
 19442                           tablat	equ	0xFF5
 19443                           prodh	equ	0xFF4
 19444                           prodl	equ	0xFF3
 19445                           intcon	equ	0xFF2
 19446                           intcon2	equ	0xFF1
 19447                           intcon3	equ	0xFF0
 19448                           indf0	equ	0xFEF
 19449                           postinc0	equ	0xFEE
 19450                           fsr0h	equ	0xFEA
 19451                           fsr0l	equ	0xFE9
 19452                           wreg	equ	0xFE8
 19453                           postdec1	equ	0xFE5
 19454                           fsr1l	equ	0xFE1
 19455                           indf2	equ	0xFDF
 19456                           postinc2	equ	0xFDE
 19457                           postdec2	equ	0xFDD
 19458                           fsr2h	equ	0xFDA
 19459                           fsr2l	equ	0xFD9
 19460                           status	equ	0xFD8
 19461                           
 19462 ;; *************** function _I2C_Write *****************
 19463 ;; Defined at:
 19464 ;;		line 41 in file "src/I2C.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;  d               2    1[BANK0 ] unsigned int 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;		None
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      void 
 19471 ;; Registers used:
 19472 ;;		wreg, status,2, status,0, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19478 ;;      Params:         0       2       0       0       0       0       0       0       0
 19479 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19481 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19482 ;;Total ram usage:        2 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; Hardware stack levels required when called:    7
 19485 ;; This function calls:
 19486 ;;		_I2C_Wait
 19487 ;; This function is called by:
 19488 ;;		_updateLeds
 19489 ;;		_writeEEPROM_ext
 19490 ;;		_readEEPROM_ext
 19491 ;; This function uses a non-reentrant model
 19492 ;;
 19493                           
 19494                           	psect	text29
 19495  005EEA                     __ptext29:
 19496                           	opt stack 0
 19497  005EEA                     _I2C_Write:
 19498                           	opt stack 22
 19499                           
 19500                           ;I2C.c: 42: I2C_Wait();
 19501                           
 19502                           ;incstack = 0
 19503  005EEA  EC54  F02F         	call	_I2C_Wait	;wreg free
 19504                           
 19505                           ;I2C.c: 43: SSPBUF = d;
 19506  005EEE  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19507  005EF2  0012               	return		;funcret
 19508  005EF4                     __end_of_I2C_Write:
 19509                           	opt stack 0
 19510                           tblptru	equ	0xFF8
 19511                           tblptrh	equ	0xFF7
 19512                           tblptrl	equ	0xFF6
 19513                           tablat	equ	0xFF5
 19514                           prodh	equ	0xFF4
 19515                           prodl	equ	0xFF3
 19516                           intcon	equ	0xFF2
 19517                           intcon2	equ	0xFF1
 19518                           intcon3	equ	0xFF0
 19519                           indf0	equ	0xFEF
 19520                           postinc0	equ	0xFEE
 19521                           fsr0h	equ	0xFEA
 19522                           fsr0l	equ	0xFE9
 19523                           wreg	equ	0xFE8
 19524                           postdec1	equ	0xFE5
 19525                           fsr1l	equ	0xFE1
 19526                           indf2	equ	0xFDF
 19527                           postinc2	equ	0xFDE
 19528                           postdec2	equ	0xFDD
 19529                           fsr2h	equ	0xFDA
 19530                           fsr2l	equ	0xFD9
 19531                           status	equ	0xFD8
 19532                           
 19533 ;; *************** function _I2C_Stop *****************
 19534 ;; Defined at:
 19535 ;;		line 35 in file "src/I2C.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;		None
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;		None
 19540 ;; Return value:  Size  Location     Type
 19541 ;;                  1    wreg      void 
 19542 ;; Registers used:
 19543 ;;		wreg, status,2, status,0, cstack
 19544 ;; Tracked objects:
 19545 ;;		On entry : 0/0
 19546 ;;		On exit  : 0/0
 19547 ;;		Unchanged: 0/0
 19548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19549 ;;      Params:         0       0       0       0       0       0       0       0       0
 19550 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19551 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19552 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19553 ;;Total ram usage:        0 bytes
 19554 ;; Hardware stack levels used:    1
 19555 ;; Hardware stack levels required when called:    7
 19556 ;; This function calls:
 19557 ;;		_I2C_Wait
 19558 ;; This function is called by:
 19559 ;;		_updateLeds
 19560 ;;		_writeEEPROM_ext
 19561 ;;		_readEEPROM_ext
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text30
 19566  005F06                     __ptext30:
 19567                           	opt stack 0
 19568  005F06                     _I2C_Stop:
 19569                           	opt stack 22
 19570                           
 19571                           ;I2C.c: 36: I2C_Wait();
 19572                           
 19573                           ;incstack = 0
 19574  005F06  EC54  F02F         	call	_I2C_Wait	;wreg free
 19575                           
 19576                           ;I2C.c: 37: PEN = 1;
 19577  005F0A  84C5               	bsf	4037,2,c	;volatile
 19578  005F0C  0012               	return		;funcret
 19579  005F0E                     __end_of_I2C_Stop:
 19580                           	opt stack 0
 19581                           tblptru	equ	0xFF8
 19582                           tblptrh	equ	0xFF7
 19583                           tblptrl	equ	0xFF6
 19584                           tablat	equ	0xFF5
 19585                           prodh	equ	0xFF4
 19586                           prodl	equ	0xFF3
 19587                           intcon	equ	0xFF2
 19588                           intcon2	equ	0xFF1
 19589                           intcon3	equ	0xFF0
 19590                           indf0	equ	0xFEF
 19591                           postinc0	equ	0xFEE
 19592                           fsr0h	equ	0xFEA
 19593                           fsr0l	equ	0xFE9
 19594                           wreg	equ	0xFE8
 19595                           postdec1	equ	0xFE5
 19596                           fsr1l	equ	0xFE1
 19597                           indf2	equ	0xFDF
 19598                           postinc2	equ	0xFDE
 19599                           postdec2	equ	0xFDD
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _I2C_Start *****************
 19605 ;; Defined at:
 19606 ;;		line 25 in file "src/I2C.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		wreg, status,2, status,0, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19623 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19624 ;;Total ram usage:        0 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:    7
 19627 ;; This function calls:
 19628 ;;		_I2C_Wait
 19629 ;; This function is called by:
 19630 ;;		_updateLeds
 19631 ;;		_writeEEPROM_ext
 19632 ;;		_readEEPROM_ext
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text31
 19637  005F0E                     __ptext31:
 19638                           	opt stack 0
 19639  005F0E                     _I2C_Start:
 19640                           	opt stack 22
 19641                           
 19642                           ;I2C.c: 26: I2C_Wait();
 19643                           
 19644                           ;incstack = 0
 19645  005F0E  EC54  F02F         	call	_I2C_Wait	;wreg free
 19646                           
 19647                           ;I2C.c: 27: SEN = 1;
 19648  005F12  80C5               	bsf	4037,0,c	;volatile
 19649  005F14  0012               	return		;funcret
 19650  005F16                     __end_of_I2C_Start:
 19651                           	opt stack 0
 19652                           tblptru	equ	0xFF8
 19653                           tblptrh	equ	0xFF7
 19654                           tblptrl	equ	0xFF6
 19655                           tablat	equ	0xFF5
 19656                           prodh	equ	0xFF4
 19657                           prodl	equ	0xFF3
 19658                           intcon	equ	0xFF2
 19659                           intcon2	equ	0xFF1
 19660                           intcon3	equ	0xFF0
 19661                           indf0	equ	0xFEF
 19662                           postinc0	equ	0xFEE
 19663                           fsr0h	equ	0xFEA
 19664                           fsr0l	equ	0xFE9
 19665                           wreg	equ	0xFE8
 19666                           postdec1	equ	0xFE5
 19667                           fsr1l	equ	0xFE1
 19668                           indf2	equ	0xFDF
 19669                           postinc2	equ	0xFDE
 19670                           postdec2	equ	0xFDD
 19671                           fsr2h	equ	0xFDA
 19672                           fsr2l	equ	0xFD9
 19673                           status	equ	0xFD8
 19674                           
 19675 ;; *************** function _I2C_Wait *****************
 19676 ;; Defined at:
 19677 ;;		line 21 in file "src/I2C.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;		None
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;		None
 19682 ;; Return value:  Size  Location     Type
 19683 ;;                  1    wreg      void 
 19684 ;; Registers used:
 19685 ;;		wreg, status,2, status,0
 19686 ;; Tracked objects:
 19687 ;;		On entry : 0/0
 19688 ;;		On exit  : 0/0
 19689 ;;		Unchanged: 0/0
 19690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19691 ;;      Params:         0       0       0       0       0       0       0       0       0
 19692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19693 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19694 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19695 ;;Total ram usage:        1 bytes
 19696 ;; Hardware stack levels used:    1
 19697 ;; Hardware stack levels required when called:    6
 19698 ;; This function calls:
 19699 ;;		Nothing
 19700 ;; This function is called by:
 19701 ;;		_I2C_Start
 19702 ;;		_I2C_Restart
 19703 ;;		_I2C_Stop
 19704 ;;		_I2C_Write
 19705 ;;		_I2C_Read
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text32
 19710  005EA8                     __ptext32:
 19711                           	opt stack 0
 19712  005EA8                     _I2C_Wait:
 19713                           	opt stack 22
 19714                           
 19715                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19716                           
 19717                           ;incstack = 0
 19718  005EA8  B4C7               	btfsc	4039,2,c	;volatile
 19719  005EAA  D7FE               	goto	_I2C_Wait
 19720  005EAC  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19721  005EB0  0E1F               	movlw	31
 19722  005EB2  0100               	movlb	0	; () banked
 19723  005EB4  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19724  005EB6  B4D8               	btfsc	status,2,c
 19725  005EB8  0012               	return	
 19726  005EBA  D7F6               	goto	_I2C_Wait
 19727  005EBC                     __end_of_I2C_Wait:
 19728                           	opt stack 0
 19729                           tblptru	equ	0xFF8
 19730                           tblptrh	equ	0xFF7
 19731                           tblptrl	equ	0xFF6
 19732                           tablat	equ	0xFF5
 19733                           prodh	equ	0xFF4
 19734                           prodl	equ	0xFF3
 19735                           intcon	equ	0xFF2
 19736                           intcon2	equ	0xFF1
 19737                           intcon3	equ	0xFF0
 19738                           indf0	equ	0xFEF
 19739                           postinc0	equ	0xFEE
 19740                           fsr0h	equ	0xFEA
 19741                           fsr0l	equ	0xFE9
 19742                           wreg	equ	0xFE8
 19743                           postdec1	equ	0xFE5
 19744                           fsr1l	equ	0xFE1
 19745                           indf2	equ	0xFDF
 19746                           postinc2	equ	0xFDE
 19747                           postdec2	equ	0xFDD
 19748                           fsr2h	equ	0xFDA
 19749                           fsr2l	equ	0xFD9
 19750                           status	equ	0xFD8
 19751                           
 19752 ;; *************** function _printf *****************
 19753 ;; Defined at:
 19754 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19755 ;; Parameters:    Size  Location     Type
 19756 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19757 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(162), 
 19758 ;;		 -> STR_55(19), STR_53(51), STR_50(15), STR_49(21), 
 19759 ;;		 -> STR_46(14), STR_44(14), STR_33(16), STR_32(704), 
 19760 ;;		 -> STR_31(45), STR_29(21), STR_20(22), STR_18(22), 
 19761 ;;		 -> STR_16(35), STR_14(14), STR_12(14), 
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;  pb              4   97[BANK0 ] struct __prbuf
 19764 ;;  ap              2   95[BANK0 ] PTR void [1]
 19765 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  2   33[BANK0 ] int 
 19768 ;; Registers used:
 19769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19775 ;;      Params:         0      62       0       0       0       0       0       0       0
 19776 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19778 ;;      Totals:         0      68       0       0       0       0       0       0       0
 19779 ;;Total ram usage:       68 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:    8
 19782 ;; This function calls:
 19783 ;;		__doprnt
 19784 ;; This function is called by:
 19785 ;;		_alterarConfigWifi
 19786 ;;		_enviaDadosWifi
 19787 ;;		_main
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text33
 19792  005B6E                     __ptext33:
 19793                           	opt stack 0
 19794  005B6E                     _printf:
 19795                           	opt stack 22
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;incstack = 0
 19799  005B6E  0E00               	movlw	0
 19800  005B70  0100               	movlb	0	; () banked
 19801  005B72  6FC1               	movwf	printf@pb& (0+255),b
 19802  005B74  0E00               	movlw	0
 19803  005B76  6FC2               	movwf	(printf@pb+1)& (0+255),b
 19804  005B78  0ECE               	movlw	low _putch
 19805  005B7A  6FC3               	movwf	(printf@pb+2)& (0+255),b
 19806  005B7C  0E5E               	movlw	high _putch
 19807  005B7E  6FC4               	movwf	(printf@pb+3)& (0+255),b
 19808  005B80  0E83               	movlw	low (?_printf+2)
 19809  005B82  6FBF               	movwf	printf@ap& (0+255),b
 19810  005B84  0E00               	movlw	high (?_printf+2)
 19811  005B86  6FC0               	movwf	(printf@ap+1)& (0+255),b
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;	Return value of _printf is never used
 19815  005B88  0EC1               	movlw	low printf@pb
 19816  005B8A  6F6C               	movwf	__doprnt@pb& (0+255),b
 19817  005B8C  0E00               	movlw	high printf@pb
 19818  005B8E  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19819  005B90  C081  F06E         	movff	printf@f,__doprnt@f
 19820  005B94  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19821  005B98  0EBF               	movlw	low printf@ap
 19822  005B9A  6F70               	movwf	__doprnt@ap& (0+255),b
 19823  005B9C  0E00               	movlw	high printf@ap
 19824  005B9E  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19825  005BA0  EC07  F013         	call	__doprnt	;wreg free
 19826  005BA4  0012               	return	
 19827  005BA6                     __end_of_printf:
 19828                           	opt stack 0
 19829                           tblptru	equ	0xFF8
 19830                           tblptrh	equ	0xFF7
 19831                           tblptrl	equ	0xFF6
 19832                           tablat	equ	0xFF5
 19833                           prodh	equ	0xFF4
 19834                           prodl	equ	0xFF3
 19835                           intcon	equ	0xFF2
 19836                           intcon2	equ	0xFF1
 19837                           intcon3	equ	0xFF0
 19838                           indf0	equ	0xFEF
 19839                           postinc0	equ	0xFEE
 19840                           fsr0h	equ	0xFEA
 19841                           fsr0l	equ	0xFE9
 19842                           wreg	equ	0xFE8
 19843                           postdec1	equ	0xFE5
 19844                           fsr1l	equ	0xFE1
 19845                           indf2	equ	0xFDF
 19846                           postinc2	equ	0xFDE
 19847                           postdec2	equ	0xFDD
 19848                           fsr2h	equ	0xFDA
 19849                           fsr2l	equ	0xFD9
 19850                           status	equ	0xFD8
 19851                           
 19852 ;; *************** function _limpaBuffer *****************
 19853 ;; Defined at:
 19854 ;;		line 21 in file "src/conexaoWifi.h"
 19855 ;; Parameters:    Size  Location     Type
 19856 ;;		None
 19857 ;; Auto vars:     Size  Location     Type
 19858 ;;		None
 19859 ;; Return value:  Size  Location     Type
 19860 ;;                  1    wreg      void 
 19861 ;; Registers used:
 19862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19863 ;; Tracked objects:
 19864 ;;		On entry : 0/0
 19865 ;;		On exit  : 0/0
 19866 ;;		Unchanged: 0/0
 19867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19868 ;;      Params:         0       0       0       0       0       0       0       0       0
 19869 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19870 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19871 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19872 ;;Total ram usage:        0 bytes
 19873 ;; Hardware stack levels used:    1
 19874 ;; Hardware stack levels required when called:    7
 19875 ;; This function calls:
 19876 ;;		_delay
 19877 ;;		_memset
 19878 ;; This function is called by:
 19879 ;;		_alterarConfigWifi
 19880 ;;		_enviaDadosWifi
 19881 ;; This function uses a non-reentrant model
 19882 ;;
 19883                           
 19884                           	psect	text34
 19885  005AF0                     __ptext34:
 19886                           	opt stack 0
 19887  005AF0                     _limpaBuffer:
 19888                           	opt stack 22
 19889                           
 19890                           ;conexaoWifi.h: 22: delay(5);
 19891                           
 19892                           ;incstack = 0
 19893  005AF0  0E00               	movlw	0
 19894  005AF2  0100               	movlb	0	; () banked
 19895  005AF4  6F61               	movwf	(delay@x+1)& (0+255),b
 19896  005AF6  0E05               	movlw	5
 19897  005AF8  6F60               	movwf	delay@x& (0+255),b
 19898  005AFA  EC97  F02E         	call	_delay	;wreg free
 19899                           
 19900                           ;conexaoWifi.h: 23: memset(bufferSerial, 0, sizeof (bufferSerial));
 19901  005AFE  0E42               	movlw	low _bufferSerial
 19902  005B00  0100               	movlb	0	; () banked
 19903  005B02  6F60               	movwf	memset@p1& (0+255),b
 19904  005B04  0E02               	movlw	high _bufferSerial
 19905  005B06  6F61               	movwf	(memset@p1+1)& (0+255),b
 19906  005B08  0E00               	movlw	0
 19907  005B0A  6F63               	movwf	(memset@c+1)& (0+255),b
 19908  005B0C  0E00               	movlw	0
 19909  005B0E  6F62               	movwf	memset@c& (0+255),b
 19910  005B10  0E00               	movlw	0
 19911  005B12  6F65               	movwf	(memset@n+1)& (0+255),b
 19912  005B14  0E50               	movlw	80
 19913  005B16  6F64               	movwf	memset@n& (0+255),b
 19914  005B18  EC39  F02E         	call	_memset	;wreg free
 19915                           
 19916                           ;conexaoWifi.h: 24: cbf = 0;
 19917  005B1C  0E00               	movlw	0
 19918  005B1E  6E43               	movwf	_cbf,c
 19919                           
 19920                           ;conexaoWifi.h: 25: delay(5);
 19921  005B20  0E00               	movlw	0
 19922  005B22  0100               	movlb	0	; () banked
 19923  005B24  6F61               	movwf	(delay@x+1)& (0+255),b
 19924  005B26  0E05               	movlw	5
 19925  005B28  6F60               	movwf	delay@x& (0+255),b
 19926  005B2A  EC97  F02E         	call	_delay	;wreg free
 19927  005B2E  0012               	return		;funcret
 19928  005B30                     __end_of_limpaBuffer:
 19929                           	opt stack 0
 19930                           tblptru	equ	0xFF8
 19931                           tblptrh	equ	0xFF7
 19932                           tblptrl	equ	0xFF6
 19933                           tablat	equ	0xFF5
 19934                           prodh	equ	0xFF4
 19935                           prodl	equ	0xFF3
 19936                           intcon	equ	0xFF2
 19937                           intcon2	equ	0xFF1
 19938                           intcon3	equ	0xFF0
 19939                           indf0	equ	0xFEF
 19940                           postinc0	equ	0xFEE
 19941                           fsr0h	equ	0xFEA
 19942                           fsr0l	equ	0xFE9
 19943                           wreg	equ	0xFE8
 19944                           postdec1	equ	0xFE5
 19945                           fsr1l	equ	0xFE1
 19946                           indf2	equ	0xFDF
 19947                           postinc2	equ	0xFDE
 19948                           postdec2	equ	0xFDD
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953 ;; *************** function _memset *****************
 19954 ;; Defined at:
 19955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;  p1              2    0[BANK0 ] PTR void 
 19958 ;;		 -> bufferSerial(80), 
 19959 ;;  c               2    2[BANK0 ] int 
 19960 ;;  n               2    4[BANK0 ] unsigned int 
 19961 ;; Auto vars:     Size  Location     Type
 19962 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19963 ;;		 -> bufferSerial(80), 
 19964 ;; Return value:  Size  Location     Type
 19965 ;;                  2    0[BANK0 ] PTR void 
 19966 ;; Registers used:
 19967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19968 ;; Tracked objects:
 19969 ;;		On entry : 0/0
 19970 ;;		On exit  : 0/0
 19971 ;;		Unchanged: 0/0
 19972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19973 ;;      Params:         0       6       0       0       0       0       0       0       0
 19974 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19975 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19976 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19977 ;;Total ram usage:        8 bytes
 19978 ;; Hardware stack levels used:    1
 19979 ;; Hardware stack levels required when called:    6
 19980 ;; This function calls:
 19981 ;;		Nothing
 19982 ;; This function is called by:
 19983 ;;		_limpaBuffer
 19984 ;; This function uses a non-reentrant model
 19985 ;;
 19986                           
 19987                           	psect	text35
 19988  005C72                     __ptext35:
 19989                           	opt stack 0
 19990  005C72                     _memset:
 19991                           	opt stack 22
 19992                           
 19993                           ;incstack = 0
 19994  005C72  C060  F066         	movff	memset@p1,memset@p
 19995  005C76  C061  F067         	movff	memset@p1+1,memset@p+1
 19996  005C7A  D009               	goto	l2026
 19997  005C7C                     l6558:
 19998  005C7C  C066  FFD9         	movff	memset@p,fsr2l
 19999  005C80  C067  FFDA         	movff	memset@p+1,fsr2h
 20000  005C84  C062  FFDF         	movff	memset@c,indf2
 20001  005C88  0100               	movlb	0	; () banked
 20002  005C8A  4B66               	infsnz	memset@p& (0+255),f,b
 20003  005C8C  2B67               	incf	(memset@p+1)& (0+255),f,b
 20004  005C8E                     l2026:
 20005                           
 20006                           ; BSR set to: 0
 20007  005C8E  0100               	movlb	0	; () banked
 20008  005C90  0764               	decf	memset@n& (0+255),f,b
 20009  005C92  A0D8               	btfss	status,0,c
 20010  005C94  0765               	decf	(memset@n+1)& (0+255),f,b
 20011  005C96  2964               	incf	memset@n& (0+255),w,b
 20012  005C98  E1F1               	bnz	l6558
 20013  005C9A  2965               	incf	(memset@n+1)& (0+255),w,b
 20014  005C9C  B4D8               	btfsc	status,2,c
 20015  005C9E  0012               	return	
 20016  005CA0  D7ED               	goto	l2027
 20017  005CA2                     __end_of_memset:
 20018                           	opt stack 0
 20019                           tblptru	equ	0xFF8
 20020                           tblptrh	equ	0xFF7
 20021                           tblptrl	equ	0xFF6
 20022                           tablat	equ	0xFF5
 20023                           prodh	equ	0xFF4
 20024                           prodl	equ	0xFF3
 20025                           intcon	equ	0xFF2
 20026                           intcon2	equ	0xFF1
 20027                           intcon3	equ	0xFF0
 20028                           indf0	equ	0xFEF
 20029                           postinc0	equ	0xFEE
 20030                           fsr0h	equ	0xFEA
 20031                           fsr0l	equ	0xFE9
 20032                           wreg	equ	0xFE8
 20033                           postdec1	equ	0xFE5
 20034                           fsr1l	equ	0xFE1
 20035                           indf2	equ	0xFDF
 20036                           postinc2	equ	0xFDE
 20037                           postdec2	equ	0xFDD
 20038                           fsr2h	equ	0xFDA
 20039                           fsr2l	equ	0xFD9
 20040                           status	equ	0xFD8
 20041                           
 20042 ;; *************** function _delay *****************
 20043 ;; Defined at:
 20044 ;;		line 18 in file "src/function.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;  x               2    0[BANK0 ] int 
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;		None
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      void 
 20051 ;; Registers used:
 20052 ;;		wreg, status,2, status,0
 20053 ;; Tracked objects:
 20054 ;;		On entry : 0/0
 20055 ;;		On exit  : 0/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20058 ;;      Params:         0       2       0       0       0       0       0       0       0
 20059 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20060 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20061 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20062 ;;Total ram usage:        3 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; Hardware stack levels required when called:    6
 20065 ;; This function calls:
 20066 ;;		Nothing
 20067 ;; This function is called by:
 20068 ;;		_writeEEPROM_ext
 20069 ;;		_limpaBuffer
 20070 ;;		_alterarConfigWifi
 20071 ;;		_enviaDadosWifi
 20072 ;;		_main
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           	psect	text36
 20077  005D2E                     __ptext36:
 20078                           	opt stack 0
 20079  005D2E                     _delay:
 20080                           	opt stack 23
 20081                           
 20082                           ;function.c: 19: while (x--) {
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;incstack = 0
 20086  005D2E  D00A               	goto	l1476
 20087  005D30                     l6552:
 20088                           
 20089                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 20090  005D30  0E03               	movlw	3
 20091  005D32  0100               	movlb	0	; () banked
 20092  005D34  6F62               	movwf	??_delay& (0+255),b
 20093  005D36  0E97               	movlw	151
 20094  005D38                     u15377:
 20095  005D38  2EE8               	decfsz	wreg,f,c
 20096  005D3A  D7FE               	bra	u15377
 20097  005D3C  2F62               	decfsz	??_delay& (0+255),f,b
 20098  005D3E  D7FC               	bra	u15377
 20099  005D40  D000               	nop2	
 20100  005D42  0004               	clrwdt		;# 
 20101  005D44                     l1476:
 20102  005D44  0100               	movlb	0	; () banked
 20103  005D46  0760               	decf	delay@x& (0+255),f,b
 20104  005D48  A0D8               	btfss	status,0,c
 20105  005D4A  0761               	decf	(delay@x+1)& (0+255),f,b
 20106  005D4C  2960               	incf	delay@x& (0+255),w,b
 20107  005D4E  E1F0               	bnz	l6552
 20108  005D50  2961               	incf	(delay@x+1)& (0+255),w,b
 20109  005D52  B4D8               	btfsc	status,2,c
 20110  005D54  0012               	return	
 20111  005D56  D7EC               	goto	l1477
 20112  005D58                     __end_of_delay:
 20113                           	opt stack 0
 20114                           tblptru	equ	0xFF8
 20115                           tblptrh	equ	0xFF7
 20116                           tblptrl	equ	0xFF6
 20117                           tablat	equ	0xFF5
 20118                           prodh	equ	0xFF4
 20119                           prodl	equ	0xFF3
 20120                           intcon	equ	0xFF2
 20121                           intcon2	equ	0xFF1
 20122                           intcon3	equ	0xFF0
 20123                           indf0	equ	0xFEF
 20124                           postinc0	equ	0xFEE
 20125                           fsr0h	equ	0xFEA
 20126                           fsr0l	equ	0xFE9
 20127                           wreg	equ	0xFE8
 20128                           postdec1	equ	0xFE5
 20129                           fsr1l	equ	0xFE1
 20130                           indf2	equ	0xFDF
 20131                           postinc2	equ	0xFDE
 20132                           postdec2	equ	0xFDD
 20133                           fsr2h	equ	0xFDA
 20134                           fsr2l	equ	0xFD9
 20135                           status	equ	0xFD8
 20136                           
 20137 ;; *************** function _filtroStr *****************
 20138 ;; Defined at:
 20139 ;;		line 44 in file "src/conexaoWifi.h"
 20140 ;; Parameters:    Size  Location     Type
 20141 ;;  inicio          2   49[BANK0 ] PTR unsigned char 
 20142 ;;		 -> STR_39(7), STR_37(6), 
 20143 ;;  fim             2   51[BANK0 ] PTR unsigned char 
 20144 ;;		 -> STR_40(2), STR_38(2), 
 20145 ;;  str             2   53[BANK0 ] PTR unsigned char 
 20146 ;;		 -> bufferSerial(80), 
 20147 ;;  strdest         2   55[BANK0 ] PTR unsigned char 
 20148 ;;		 -> senha(15), ssid(15), 
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  _str           82    0[BANK1 ] unsigned char [82]
 20151 ;;  aux            60   82[BANK1 ] unsigned char [60]
 20152 ;;  p               2  147[BANK1 ] PTR unsigned char 
 20153 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20154 ;;		 -> bufferSerial(80), 
 20155 ;;  i               1  149[BANK1 ] unsigned char 
 20156 ;;  x               1  146[BANK1 ] unsigned char 
 20157 ;;  count           1  145[BANK1 ] unsigned char 
 20158 ;;  y               1  144[BANK1 ] unsigned char 
 20159 ;; Return value:  Size  Location     Type
 20160 ;;                  1    wreg      void 
 20161 ;; Registers used:
 20162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20163 ;; Tracked objects:
 20164 ;;		On entry : 0/0
 20165 ;;		On exit  : 0/0
 20166 ;;		Unchanged: 0/0
 20167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20168 ;;      Params:         0       8       0       0       0       0       0       0       0
 20169 ;;      Locals:         0       0     150       0       0       0       0       0       0
 20170 ;;      Temps:          0       5       0       0       0       0       0       0       0
 20171 ;;      Totals:         0      13     150       0       0       0       0       0       0
 20172 ;;Total ram usage:      163 bytes
 20173 ;; Hardware stack levels used:    1
 20174 ;; Hardware stack levels required when called:    9
 20175 ;; This function calls:
 20176 ;;		_sprintf
 20177 ;;		_strcpy
 20178 ;;		_strlen
 20179 ;;		_strncpy
 20180 ;;		_strstr
 20181 ;;		_strtok
 20182 ;; This function is called by:
 20183 ;;		_alterarConfigWifi
 20184 ;; This function uses a non-reentrant model
 20185 ;;
 20186                           
 20187                           	psect	text37
 20188  0044EE                     __ptext37:
 20189                           	opt stack 0
 20190  0044EE                     _filtroStr:
 20191                           	opt stack 20
 20192                           
 20193                           ;conexaoWifi.h: 45: char i = 0;
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;incstack = 0
 20197  0044EE  0E00               	movlw	0
 20198  0044F0  0101               	movlb	1	; () banked
 20199  0044F2  6F95               	movwf	filtroStr@i& (0+255),b
 20200                           
 20201                           ;conexaoWifi.h: 46: char x = 0;
 20202  0044F4  0E00               	movlw	0
 20203  0044F6  6F92               	movwf	filtroStr@x& (0+255),b
 20204                           
 20205                           ;conexaoWifi.h: 47: char y = 0;
 20206  0044F8  0E00               	movlw	0
 20207  0044FA  6F90               	movwf	filtroStr@y& (0+255),b
 20208                           
 20209                           ;conexaoWifi.h: 48: char count = 0;
 20210  0044FC  0E00               	movlw	0
 20211  0044FE  6F91               	movwf	filtroStr@count& (0+255),b
 20212                           
 20213                           ; BSR set to: 1
 20214                           ;conexaoWifi.h: 49: char *p;
 20215                           ;conexaoWifi.h: 50: char _str[82];
 20216                           ;conexaoWifi.h: 51: char aux[60];
 20217                           ;conexaoWifi.h: 53: strncpy(_str, str, 80);
 20218  004500  0E00               	movlw	low filtroStr@_str
 20219  004502  0100               	movlb	0	; () banked
 20220  004504  6F60               	movwf	strncpy@to& (0+255),b
 20221  004506  0E01               	movlw	high filtroStr@_str
 20222  004508  6F61               	movwf	(strncpy@to+1)& (0+255),b
 20223  00450A  C095  F062         	movff	filtroStr@str,strncpy@from
 20224  00450E  C096  F063         	movff	filtroStr@str+1,strncpy@from+1
 20225  004512  0E00               	movlw	0
 20226  004514  6F65               	movwf	(strncpy@size+1)& (0+255),b
 20227  004516  0E50               	movlw	80
 20228  004518  6F64               	movwf	strncpy@size& (0+255),b
 20229  00451A  EC40  F02C         	call	_strncpy	;wreg free
 20230                           
 20231                           ;conexaoWifi.h: 54: p = strstr(_str, inicio);
 20232  00451E  0E00               	movlw	low filtroStr@_str
 20233  004520  0100               	movlb	0	; () banked
 20234  004522  6F6F               	movwf	strstr@s1& (0+255),b
 20235  004524  0E01               	movlw	high filtroStr@_str
 20236  004526  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20237  004528  C091  F071         	movff	filtroStr@inicio,strstr@s2
 20238  00452C  C092  F072         	movff	filtroStr@inicio+1,strstr@s2+1
 20239  004530  EC82  F028         	call	_strstr	;wreg free
 20240  004534  C06F  F193         	movff	?_strstr,filtroStr@p
 20241  004538  C070  F194         	movff	?_strstr+1,filtroStr@p+1
 20242                           
 20243                           ;conexaoWifi.h: 55: strcpy(p, strtok(p, fim));
 20244  00453C  C193  F071         	movff	filtroStr@p,strcpy@to
 20245  004540  C194  F072         	movff	filtroStr@p+1,strcpy@to+1
 20246  004544  C193  F06D         	movff	filtroStr@p,strtok@s1
 20247  004548  C194  F06E         	movff	filtroStr@p+1,strtok@s1+1
 20248  00454C  C093  F06F         	movff	filtroStr@fim,strtok@s2
 20249  004550  C094  F070         	movff	filtroStr@fim+1,strtok@s2+1
 20250  004554  EC50  F024         	call	_strtok	;wreg free
 20251  004558  C06D  F073         	movff	?_strtok,strcpy@from
 20252  00455C  C06E  F074         	movff	?_strtok+1,strcpy@from+1
 20253  004560  EC0D  F02C         	call	_strcpy	;wreg free
 20254                           
 20255                           ;conexaoWifi.h: 56: sprintf(aux, "%s", p);
 20256  004564  0E52               	movlw	low filtroStr@aux
 20257  004566  0100               	movlb	0	; () banked
 20258  004568  6F81               	movwf	sprintf@wh& (0+255),b
 20259  00456A  0E01               	movlw	high filtroStr@aux
 20260  00456C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20261  00456E  0E26               	movlw	low (STR_82+7)
 20262  004570  6F83               	movwf	sprintf@f& (0+255),b
 20263  004572  0E7F               	movlw	high (STR_82+7)
 20264  004574  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20265  004576  C193  F085         	movff	filtroStr@p,?_sprintf+4
 20266  00457A  C194  F086         	movff	filtroStr@p+1,?_sprintf+5
 20267  00457E  EC13  F02D         	call	_sprintf	;wreg free
 20268                           
 20269                           ;conexaoWifi.h: 58: x = strlen(inicio);
 20270  004582  C091  F060         	movff	filtroStr@inicio,strlen@s
 20271  004586  C092  F061         	movff	filtroStr@inicio+1,strlen@s+1
 20272  00458A  EC71  F02C         	call	_strlen	;wreg free
 20273  00458E  0100               	movlb	0	; () banked
 20274  004590  5160               	movf	?_strlen& (0+255),w,b
 20275  004592  0101               	movlb	1	; () banked
 20276  004594  6F92               	movwf	filtroStr@x& (0+255),b
 20277                           
 20278                           ; BSR set to: 1
 20279                           ;conexaoWifi.h: 59: y = strlen(aux);
 20280  004596  0E52               	movlw	low filtroStr@aux
 20281  004598  0100               	movlb	0	; () banked
 20282  00459A  6F60               	movwf	strlen@s& (0+255),b
 20283  00459C  0E01               	movlw	high filtroStr@aux
 20284  00459E  6F61               	movwf	(strlen@s+1)& (0+255),b
 20285  0045A0  EC71  F02C         	call	_strlen	;wreg free
 20286  0045A4  0100               	movlb	0	; () banked
 20287  0045A6  5160               	movf	?_strlen& (0+255),w,b
 20288  0045A8  0101               	movlb	1	; () banked
 20289  0045AA  6F90               	movwf	filtroStr@y& (0+255),b
 20290                           
 20291                           ; BSR set to: 1
 20292                           ;conexaoWifi.h: 61: for (i = x; i < (x + y); i++) {
 20293  0045AC  C192  F195         	movff	filtroStr@x,filtroStr@i
 20294  0045B0  D02F               	goto	l976
 20295  0045B2                     
 20296                           ;conexaoWifi.h: 62: strdest[count++] = (char) (aux[i] == '+') ? ' ' : aux[i];
 20297                           
 20298                           ; BSR set to: 1
 20299  0045B2  0101               	movlb	1	; () banked
 20300  0045B4  5195               	movf	filtroStr@i& (0+255),w,b
 20301  0045B6  0D01               	mullw	1
 20302  0045B8  0E52               	movlw	low filtroStr@aux
 20303  0045BA  24F3               	addwf	prodl,w,c
 20304  0045BC  6ED9               	movwf	fsr2l,c
 20305  0045BE  0E01               	movlw	high filtroStr@aux
 20306  0045C0  20F4               	addwfc	prodh,w,c
 20307  0045C2  6EDA               	movwf	fsr2h,c
 20308  0045C4  0E2B               	movlw	43
 20309  0045C6  18DE               	xorwf	postinc2,w,c
 20310  0045C8  B4D8               	btfsc	status,2,c
 20311  0045CA  D010               	goto	l979
 20312                           
 20313                           ; BSR set to: 1
 20314  0045CC  5195               	movf	filtroStr@i& (0+255),w,b
 20315  0045CE  0D01               	mullw	1
 20316  0045D0  0E52               	movlw	low filtroStr@aux
 20317  0045D2  24F3               	addwf	prodl,w,c
 20318  0045D4  6ED9               	movwf	fsr2l,c
 20319  0045D6  0E01               	movlw	high filtroStr@aux
 20320  0045D8  20F4               	addwfc	prodh,w,c
 20321  0045DA  6EDA               	movwf	fsr2h,c
 20322  0045DC  50DF               	movf	indf2,w,c
 20323  0045DE  0100               	movlb	0	; () banked
 20324  0045E0  6F99               	movwf	??_filtroStr& (0+255),b
 20325  0045E2  5199               	movf	??_filtroStr& (0+255),w,b
 20326  0045E4  0101               	movlb	1	; () banked
 20327  0045E6  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20328  0045E8  6B8F               	clrf	(_filtroStr$1335+1)& (0+255),b
 20329  0045EA  D004               	goto	l981
 20330  0045EC                     l979:
 20331                           
 20332                           ; BSR set to: 1
 20333                           
 20334                           ; BSR set to: 1
 20335  0045EC  0E00               	movlw	0
 20336  0045EE  6F8F               	movwf	(_filtroStr$1335+1)& (0+255),b
 20337  0045F0  0E20               	movlw	32
 20338  0045F2  6F8E               	movwf	_filtroStr$1335& (0+255),b
 20339  0045F4                     l981:
 20340                           
 20341                           ; BSR set to: 1
 20342                           
 20343                           ; BSR set to: 1
 20344  0045F4  5191               	movf	filtroStr@count& (0+255),w,b
 20345  0045F6  0D01               	mullw	1
 20346  0045F8  50F3               	movf	prodl,w,c
 20347  0045FA  0100               	movlb	0	; () banked
 20348  0045FC  2597               	addwf	filtroStr@strdest& (0+255),w,b
 20349  0045FE  6ED9               	movwf	fsr2l,c
 20350  004600  50F4               	movf	prodh,w,c
 20351  004602  2198               	addwfc	(filtroStr@strdest+1)& (0+255),w,b
 20352  004604  6EDA               	movwf	fsr2h,c
 20353  004606  C18E  FFDF         	movff	_filtroStr$1335,indf2
 20354                           
 20355                           ; BSR set to: 0
 20356  00460A  0101               	movlb	1	; () banked
 20357  00460C  2B91               	incf	filtroStr@count& (0+255),f,b
 20358                           
 20359                           ; BSR set to: 1
 20360  00460E  2B95               	incf	filtroStr@i& (0+255),f,b
 20361  004610                     l976:
 20362                           
 20363                           ; BSR set to: 1
 20364                           
 20365                           ; BSR set to: 1
 20366  004610  5190               	movf	filtroStr@y& (0+255),w,b
 20367  004612  C192  F099         	movff	filtroStr@x,??_filtroStr
 20368  004616  0100               	movlb	0	; () banked
 20369  004618  6B9A               	clrf	(??_filtroStr+1)& (0+255),b
 20370  00461A  2799               	addwf	??_filtroStr& (0+255),f,b
 20371  00461C  0E00               	movlw	0
 20372  00461E  239A               	addwfc	(??_filtroStr+1)& (0+255),f,b
 20373  004620  0101               	movlb	1	; () banked
 20374  004622  5195               	movf	filtroStr@i& (0+255),w,b
 20375  004624  0100               	movlb	0	; () banked
 20376  004626  6F9B               	movwf	(??_filtroStr+2)& (0+255),b
 20377  004628  6B9C               	clrf	(??_filtroStr+3)& (0+255),b
 20378  00462A  5199               	movf	??_filtroStr& (0+255),w,b
 20379  00462C  5D9B               	subwf	(??_filtroStr+2)& (0+255),w,b
 20380  00462E  519C               	movf	(??_filtroStr+3)& (0+255),w,b
 20381  004630  0A80               	xorlw	128
 20382  004632  6F9D               	movwf	(??_filtroStr+4)& (0+255),b
 20383  004634  519A               	movf	(??_filtroStr+1)& (0+255),w,b
 20384  004636  0A80               	xorlw	128
 20385  004638  599D               	subwfb	(??_filtroStr+4)& (0+255),w,b
 20386  00463A  A0D8               	btfss	status,0,c
 20387  00463C  D7BA               	goto	l977
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;conexaoWifi.h: 63: }
 20391                           ;conexaoWifi.h: 64: sprintf(strdest, "%s", strdest);
 20392                           
 20393                           ; BSR set to: 0
 20394  00463E  C097  F081         	movff	filtroStr@strdest,sprintf@wh
 20395  004642  C098  F082         	movff	filtroStr@strdest+1,sprintf@wh+1
 20396  004646  0E26               	movlw	low (STR_82+7)
 20397  004648  6F83               	movwf	sprintf@f& (0+255),b
 20398  00464A  0E7F               	movlw	high (STR_82+7)
 20399  00464C  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20400  00464E  C097  F085         	movff	filtroStr@strdest,?_sprintf+4
 20401  004652  C098  F086         	movff	filtroStr@strdest+1,?_sprintf+5
 20402  004656  EC13  F02D         	call	_sprintf	;wreg free
 20403  00465A  0012               	return		;funcret
 20404  00465C                     __end_of_filtroStr:
 20405                           	opt stack 0
 20406                           tblptru	equ	0xFF8
 20407                           tblptrh	equ	0xFF7
 20408                           tblptrl	equ	0xFF6
 20409                           tablat	equ	0xFF5
 20410                           prodh	equ	0xFF4
 20411                           prodl	equ	0xFF3
 20412                           intcon	equ	0xFF2
 20413                           intcon2	equ	0xFF1
 20414                           intcon3	equ	0xFF0
 20415                           indf0	equ	0xFEF
 20416                           postinc0	equ	0xFEE
 20417                           fsr0h	equ	0xFEA
 20418                           fsr0l	equ	0xFE9
 20419                           wreg	equ	0xFE8
 20420                           postdec1	equ	0xFE5
 20421                           fsr1l	equ	0xFE1
 20422                           indf2	equ	0xFDF
 20423                           postinc2	equ	0xFDE
 20424                           postdec2	equ	0xFDD
 20425                           fsr2h	equ	0xFDA
 20426                           fsr2l	equ	0xFD9
 20427                           status	equ	0xFD8
 20428                           
 20429 ;; *************** function _strtok *****************
 20430 ;; Defined at:
 20431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strtok.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;  s1              2   13[BANK0 ] PTR unsigned char 
 20434 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20435 ;;		 -> bufferSerial(80), 
 20436 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
 20437 ;;		 -> STR_40(2), STR_38(2), 
 20438 ;; Auto vars:     Size  Location     Type
 20439 ;;		None
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  2   13[BANK0 ] PTR unsigned char 
 20442 ;; Registers used:
 20443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20449 ;;      Params:         0       4       0       0       0       0       0       0       0
 20450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20452 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20453 ;;Total ram usage:        4 bytes
 20454 ;; Hardware stack levels used:    1
 20455 ;; Hardware stack levels required when called:    8
 20456 ;; This function calls:
 20457 ;;		_strcspn
 20458 ;;		_strspn
 20459 ;; This function is called by:
 20460 ;;		_filtroStr
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           	psect	text38
 20465  0048A0                     __ptext38:
 20466                           	opt stack 0
 20467  0048A0                     _strtok:
 20468                           	opt stack 20
 20469                           
 20470                           ;incstack = 0
 20471  0048A0  0100               	movlb	0	; () banked
 20472  0048A2  516D               	movf	strtok@s1& (0+255),w,b
 20473  0048A4  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20474  0048A6  A4D8               	btfss	status,2,c
 20475  0048A8  D004               	goto	l2211
 20476                           
 20477                           ; BSR set to: 0
 20478  0048AA  C031  F06D         	movff	strtok@sp,strtok@s1
 20479  0048AE  C032  F06E         	movff	strtok@sp+1,strtok@s1+1
 20480  0048B2                     l2211:
 20481                           
 20482                           ; BSR set to: 0
 20483  0048B2  516D               	movf	strtok@s1& (0+255),w,b
 20484  0048B4  116E               	iorwf	(strtok@s1+1)& (0+255),w,b
 20485  0048B6  A4D8               	btfss	status,2,c
 20486  0048B8  D005               	goto	l2212
 20487                           
 20488                           ; BSR set to: 0
 20489  0048BA  0E00               	movlw	0
 20490  0048BC  6F6D               	movwf	?_strtok& (0+255),b
 20491  0048BE  0E00               	movlw	0
 20492  0048C0  6F6E               	movwf	(?_strtok+1)& (0+255),b
 20493                           
 20494                           ; BSR set to: 0
 20495  0048C2  0012               	return	
 20496  0048C4                     l2212:
 20497                           
 20498                           ; BSR set to: 0
 20499                           
 20500                           ; BSR set to: 0
 20501  0048C4  C06D  F066         	movff	strtok@s1,strspn@s1
 20502  0048C8  C06E  F067         	movff	strtok@s1+1,strspn@s1+1
 20503  0048CC  C06F  F068         	movff	strtok@s2,strspn@s2
 20504  0048D0  C070  F069         	movff	strtok@s2+1,strspn@s2+1
 20505  0048D4  EC95  F02A         	call	_strspn	;wreg free
 20506  0048D8  0100               	movlb	0	; () banked
 20507  0048DA  5166               	movf	?_strspn& (0+255),w,b
 20508  0048DC  276D               	addwf	strtok@s1& (0+255),f,b
 20509  0048DE  5167               	movf	(?_strspn+1)& (0+255),w,b
 20510  0048E0  236E               	addwfc	(strtok@s1+1)& (0+255),f,b
 20511                           
 20512                           ; BSR set to: 0
 20513  0048E2  C06D  FFF6         	movff	strtok@s1,tblptrl
 20514  0048E6  C06E  FFF7         	movff	strtok@s1+1,tblptrh
 20515  0048EA  6AF8               	clrf	tblptru,c
 20516  0048EC  0E07               	movlw	(high __ramtop+-1)
 20517  0048EE  64F7               	cpfsgt	tblptrh,c
 20518  0048F0  D003               	bra	u8547
 20519  0048F2  0008               	tblrd		*
 20520  0048F4  50F5               	movf	tablat,w,c
 20521  0048F6  D005               	bra	u8540
 20522  0048F8                     u8547:
 20523  0048F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20524  0048FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20525  004900  50EF               	movf	indf0,w,c
 20526  004902                     u8540:
 20527  004902  0900               	iorlw	0
 20528  004904  A4D8               	btfss	status,2,c
 20529  004906  D009               	goto	l2214
 20530  004908  0E00               	movlw	0
 20531  00490A  6E31               	movwf	strtok@sp,c
 20532  00490C  0E00               	movlw	0
 20533  00490E  6E32               	movwf	strtok@sp+1,c
 20534  004910  C031  F06D         	movff	strtok@sp,?_strtok
 20535  004914  C032  F06E         	movff	strtok@sp+1,?_strtok+1
 20536  004918  0012               	return	
 20537  00491A                     l2214:
 20538  00491A  C06D  F066         	movff	strtok@s1,strcspn@s1
 20539  00491E  C06E  F067         	movff	strtok@s1+1,strcspn@s1+1
 20540  004922  C06F  F068         	movff	strtok@s2,strcspn@s2
 20541  004926  C070  F069         	movff	strtok@s2+1,strcspn@s2+1
 20542  00492A  ECD7  F02A         	call	_strcspn	;wreg free
 20543  00492E  0100               	movlb	0	; () banked
 20544  004930  5166               	movf	?_strcspn& (0+255),w,b
 20545  004932  256D               	addwf	strtok@s1& (0+255),w,b
 20546  004934  6E31               	movwf	strtok@sp,c
 20547  004936  5167               	movf	(?_strcspn+1)& (0+255),w,b
 20548  004938  216E               	addwfc	(strtok@s1+1)& (0+255),w,b
 20549  00493A  6E32               	movwf	strtok@sp+1,c
 20550                           
 20551                           ; BSR set to: 0
 20552  00493C  C031  FFF6         	movff	strtok@sp,tblptrl
 20553  004940  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20554  004944  6AF8               	clrf	tblptru,c
 20555  004946  0E07               	movlw	(high __ramtop+-1)
 20556  004948  64F7               	cpfsgt	tblptrh,c
 20557  00494A  D003               	bra	u8567
 20558  00494C  0008               	tblrd		*
 20559  00494E  50F5               	movf	tablat,w,c
 20560  004950  D005               	bra	u8560
 20561  004952                     u8567:
 20562  004952  CFF6 FFE9          	movff	tblptrl,fsr0l
 20563  004956  CFF7 FFEA          	movff	tblptrh,fsr0h
 20564  00495A  50EF               	movf	indf0,w,c
 20565  00495C                     u8560:
 20566  00495C  0900               	iorlw	0
 20567  00495E  B4D8               	btfsc	status,2,c
 20568  004960  D015               	goto	l2215
 20569  004962  C031  FFF6         	movff	strtok@sp,tblptrl
 20570  004966  C032  FFF7         	movff	strtok@sp+1,tblptrh
 20571  00496A  6AF8               	clrf	tblptru,c
 20572  00496C  0E07               	movlw	(high __ramtop+-1)
 20573  00496E  64F7               	cpfsgt	tblptrh,c
 20574  004970  D004               	bra	u8587
 20575  004972  0E00               	movlw	0
 20576  004974  6EF5               	movwf	tablat,c
 20577  004976  000C               	tblwt		*
 20578  004978  D006               	bra	u8580
 20579  00497A                     u8587:
 20580  00497A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20581  00497E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20582  004982  0E00               	movlw	0
 20583  004984  6EEF               	movwf	indf0,c
 20584  004986                     u8580:
 20585  004986  4A31               	infsnz	strtok@sp,f,c
 20586  004988  2A32               	incf	strtok@sp+1,f,c
 20587  00498A  D004               	goto	l2216
 20588  00498C                     l2215:
 20589  00498C  0E00               	movlw	0
 20590  00498E  6E31               	movwf	strtok@sp,c
 20591  004990  0E00               	movlw	0
 20592  004992  6E32               	movwf	strtok@sp+1,c
 20593  004994                     l2216:
 20594  004994  C06D  F06D         	movff	strtok@s1,?_strtok
 20595  004998  C06E  F06E         	movff	strtok@s1+1,?_strtok+1
 20596  00499C  0012               	return	
 20597  00499E                     __end_of_strtok:
 20598                           	opt stack 0
 20599                           tblptru	equ	0xFF8
 20600                           tblptrh	equ	0xFF7
 20601                           tblptrl	equ	0xFF6
 20602                           tablat	equ	0xFF5
 20603                           prodh	equ	0xFF4
 20604                           prodl	equ	0xFF3
 20605                           intcon	equ	0xFF2
 20606                           intcon2	equ	0xFF1
 20607                           intcon3	equ	0xFF0
 20608                           indf0	equ	0xFEF
 20609                           postinc0	equ	0xFEE
 20610                           fsr0h	equ	0xFEA
 20611                           fsr0l	equ	0xFE9
 20612                           wreg	equ	0xFE8
 20613                           postdec1	equ	0xFE5
 20614                           fsr1l	equ	0xFE1
 20615                           indf2	equ	0xFDF
 20616                           postinc2	equ	0xFDE
 20617                           postdec2	equ	0xFDD
 20618                           fsr2h	equ	0xFDA
 20619                           fsr2l	equ	0xFD9
 20620                           status	equ	0xFD8
 20621                           
 20622 ;; *************** function _strspn *****************
 20623 ;; Defined at:
 20624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strspn.c"
 20625 ;; Parameters:    Size  Location     Type
 20626 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20627 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20628 ;;		 -> bufferSerial(80), 
 20629 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20630 ;;		 -> STR_40(2), STR_38(2), 
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;  i               2   11[BANK0 ] unsigned int 
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  2    6[BANK0 ] unsigned int 
 20635 ;; Registers used:
 20636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20637 ;; Tracked objects:
 20638 ;;		On entry : 0/0
 20639 ;;		On exit  : 0/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20642 ;;      Params:         0       4       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20644 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20645 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        7 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:    7
 20649 ;; This function calls:
 20650 ;;		_strchr
 20651 ;; This function is called by:
 20652 ;;		_strtok
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           	psect	text39
 20657  00552A                     __ptext39:
 20658                           	opt stack 0
 20659  00552A                     _strspn:
 20660                           	opt stack 20
 20661                           
 20662                           ;incstack = 0
 20663  00552A  0E00               	movlw	0
 20664  00552C  0100               	movlb	0	; () banked
 20665  00552E  6F6C               	movwf	(strspn@i+1)& (0+255),b
 20666  005530  0E00               	movlw	0
 20667  005532  6F6B               	movwf	strspn@i& (0+255),b
 20668  005534  D004               	goto	l2265
 20669  005536                     
 20670                           ; BSR set to: 0
 20671                           
 20672                           ; BSR set to: 0
 20673  005536  4B66               	infsnz	strspn@s1& (0+255),f,b
 20674  005538  2B67               	incf	(strspn@s1+1)& (0+255),f,b
 20675  00553A  4B6B               	infsnz	strspn@i& (0+255),f,b
 20676  00553C  2B6C               	incf	(strspn@i+1)& (0+255),f,b
 20677  00553E                     l2265:
 20678                           
 20679                           ; BSR set to: 0
 20680                           
 20681                           ; BSR set to: 0
 20682  00553E  C066  FFF6         	movff	strspn@s1,tblptrl
 20683  005542  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20684  005546  6AF8               	clrf	tblptru,c
 20685  005548  0E07               	movlw	(high __ramtop+-1)
 20686  00554A  64F7               	cpfsgt	tblptrh,c
 20687  00554C  D003               	bra	u8317
 20688  00554E  0008               	tblrd		*
 20689  005550  50F5               	movf	tablat,w,c
 20690  005552  D005               	bra	u8310
 20691  005554                     u8317:
 20692  005554  CFF6 FFE9          	movff	tblptrl,fsr0l
 20693  005558  CFF7 FFEA          	movff	tblptrh,fsr0h
 20694  00555C  50EF               	movf	indf0,w,c
 20695  00555E                     u8310:
 20696  00555E  0900               	iorlw	0
 20697  005560  B4D8               	btfsc	status,2,c
 20698  005562  D020               	goto	u8340
 20699  005564  C068  F060         	movff	strspn@s2,strchr@ptr
 20700  005568  C069  F061         	movff	strspn@s2+1,strchr@ptr+1
 20701  00556C  C066  FFF6         	movff	strspn@s1,tblptrl
 20702  005570  C067  FFF7         	movff	strspn@s1+1,tblptrh
 20703  005574  6AF8               	clrf	tblptru,c
 20704  005576  0E07               	movlw	(high __ramtop+-1)
 20705  005578  64F7               	cpfsgt	tblptrh,c
 20706  00557A  D003               	bra	u8337
 20707  00557C  0008               	tblrd		*
 20708  00557E  50F5               	movf	tablat,w,c
 20709  005580  D005               	bra	u8330
 20710  005582                     u8337:
 20711  005582  CFF6 FFE9          	movff	tblptrl,fsr0l
 20712  005586  CFF7 FFEA          	movff	tblptrh,fsr0h
 20713  00558A  50EF               	movf	indf0,w,c
 20714  00558C                     u8330:
 20715  00558C  0100               	movlb	0	; () banked
 20716  00558E  6F6A               	movwf	??_strspn& (0+255),b
 20717  005590  516A               	movf	??_strspn& (0+255),w,b
 20718  005592  6F62               	movwf	strchr@chr& (0+255),b
 20719  005594  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20720  005596  EC9D  F02B         	call	_strchr	;wreg free
 20721  00559A  0100               	movlb	0	; () banked
 20722  00559C  5160               	movf	?_strchr& (0+255),w,b
 20723  00559E  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20724  0055A0  A4D8               	btfss	status,2,c
 20725  0055A2  D7C9               	goto	l2266
 20726  0055A4                     u8340:
 20727                           
 20728                           ; BSR set to: 0
 20729  0055A4  C06B  F066         	movff	strspn@i,?_strspn
 20730  0055A8  C06C  F067         	movff	strspn@i+1,?_strspn+1
 20731  0055AC  0012               	return		;funcret
 20732  0055AE                     __end_of_strspn:
 20733                           	opt stack 0
 20734                           tblptru	equ	0xFF8
 20735                           tblptrh	equ	0xFF7
 20736                           tblptrl	equ	0xFF6
 20737                           tablat	equ	0xFF5
 20738                           prodh	equ	0xFF4
 20739                           prodl	equ	0xFF3
 20740                           intcon	equ	0xFF2
 20741                           intcon2	equ	0xFF1
 20742                           intcon3	equ	0xFF0
 20743                           indf0	equ	0xFEF
 20744                           postinc0	equ	0xFEE
 20745                           fsr0h	equ	0xFEA
 20746                           fsr0l	equ	0xFE9
 20747                           wreg	equ	0xFE8
 20748                           postdec1	equ	0xFE5
 20749                           fsr1l	equ	0xFE1
 20750                           indf2	equ	0xFDF
 20751                           postinc2	equ	0xFDE
 20752                           postdec2	equ	0xFDD
 20753                           fsr2h	equ	0xFDA
 20754                           fsr2l	equ	0xFD9
 20755                           status	equ	0xFD8
 20756                           
 20757 ;; *************** function _strcspn *****************
 20758 ;; Defined at:
 20759 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcspn.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 20762 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20763 ;;		 -> bufferSerial(80), 
 20764 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 20765 ;;		 -> STR_40(2), STR_38(2), 
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;  i               2   11[BANK0 ] unsigned int 
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  2    6[BANK0 ] unsigned int 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20777 ;;      Params:         0       4       0       0       0       0       0       0       0
 20778 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20779 ;;      Temps:          0       1       0       0       0       0       0       0       0
 20780 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20781 ;;Total ram usage:        7 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:    7
 20784 ;; This function calls:
 20785 ;;		_strchr
 20786 ;; This function is called by:
 20787 ;;		_strtok
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text40
 20792  0055AE                     __ptext40:
 20793                           	opt stack 0
 20794  0055AE                     _strcspn:
 20795                           	opt stack 20
 20796                           
 20797                           ;incstack = 0
 20798  0055AE  0E00               	movlw	0
 20799  0055B0  0100               	movlb	0	; () banked
 20800  0055B2  6F6C               	movwf	(strcspn@i+1)& (0+255),b
 20801  0055B4  0E00               	movlw	0
 20802  0055B6  6F6B               	movwf	strcspn@i& (0+255),b
 20803  0055B8  D004               	goto	l2246
 20804  0055BA                     
 20805                           ; BSR set to: 0
 20806                           
 20807                           ; BSR set to: 0
 20808  0055BA  4B66               	infsnz	strcspn@s1& (0+255),f,b
 20809  0055BC  2B67               	incf	(strcspn@s1+1)& (0+255),f,b
 20810  0055BE  4B6B               	infsnz	strcspn@i& (0+255),f,b
 20811  0055C0  2B6C               	incf	(strcspn@i+1)& (0+255),f,b
 20812  0055C2                     l2246:
 20813                           
 20814                           ; BSR set to: 0
 20815                           
 20816                           ; BSR set to: 0
 20817  0055C2  C066  FFF6         	movff	strcspn@s1,tblptrl
 20818  0055C6  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20819  0055CA  6AF8               	clrf	tblptru,c
 20820  0055CC  0E07               	movlw	(high __ramtop+-1)
 20821  0055CE  64F7               	cpfsgt	tblptrh,c
 20822  0055D0  D003               	bra	u8357
 20823  0055D2  0008               	tblrd		*
 20824  0055D4  50F5               	movf	tablat,w,c
 20825  0055D6  D005               	bra	u8350
 20826  0055D8                     u8357:
 20827  0055D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 20828  0055DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 20829  0055E0  50EF               	movf	indf0,w,c
 20830  0055E2                     u8350:
 20831  0055E2  0900               	iorlw	0
 20832  0055E4  B4D8               	btfsc	status,2,c
 20833  0055E6  D020               	goto	u8380
 20834  0055E8  C068  F060         	movff	strcspn@s2,strchr@ptr
 20835  0055EC  C069  F061         	movff	strcspn@s2+1,strchr@ptr+1
 20836  0055F0  C066  FFF6         	movff	strcspn@s1,tblptrl
 20837  0055F4  C067  FFF7         	movff	strcspn@s1+1,tblptrh
 20838  0055F8  6AF8               	clrf	tblptru,c
 20839  0055FA  0E07               	movlw	(high __ramtop+-1)
 20840  0055FC  64F7               	cpfsgt	tblptrh,c
 20841  0055FE  D003               	bra	u8377
 20842  005600  0008               	tblrd		*
 20843  005602  50F5               	movf	tablat,w,c
 20844  005604  D005               	bra	u8370
 20845  005606                     u8377:
 20846  005606  CFF6 FFE9          	movff	tblptrl,fsr0l
 20847  00560A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20848  00560E  50EF               	movf	indf0,w,c
 20849  005610                     u8370:
 20850  005610  0100               	movlb	0	; () banked
 20851  005612  6F6A               	movwf	??_strcspn& (0+255),b
 20852  005614  516A               	movf	??_strcspn& (0+255),w,b
 20853  005616  6F62               	movwf	strchr@chr& (0+255),b
 20854  005618  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20855  00561A  EC9D  F02B         	call	_strchr	;wreg free
 20856  00561E  0100               	movlb	0	; () banked
 20857  005620  5160               	movf	?_strchr& (0+255),w,b
 20858  005622  1161               	iorwf	(?_strchr+1)& (0+255),w,b
 20859  005624  B4D8               	btfsc	status,2,c
 20860  005626  D7C9               	goto	l2247
 20861  005628                     u8380:
 20862                           
 20863                           ; BSR set to: 0
 20864  005628  C06B  F066         	movff	strcspn@i,?_strcspn
 20865  00562C  C06C  F067         	movff	strcspn@i+1,?_strcspn+1
 20866  005630  0012               	return		;funcret
 20867  005632                     __end_of_strcspn:
 20868                           	opt stack 0
 20869                           tblptru	equ	0xFF8
 20870                           tblptrh	equ	0xFF7
 20871                           tblptrl	equ	0xFF6
 20872                           tablat	equ	0xFF5
 20873                           prodh	equ	0xFF4
 20874                           prodl	equ	0xFF3
 20875                           intcon	equ	0xFF2
 20876                           intcon2	equ	0xFF1
 20877                           intcon3	equ	0xFF0
 20878                           indf0	equ	0xFEF
 20879                           postinc0	equ	0xFEE
 20880                           fsr0h	equ	0xFEA
 20881                           fsr0l	equ	0xFE9
 20882                           wreg	equ	0xFE8
 20883                           postdec1	equ	0xFE5
 20884                           fsr1l	equ	0xFE1
 20885                           indf2	equ	0xFDF
 20886                           postinc2	equ	0xFDE
 20887                           postdec2	equ	0xFDD
 20888                           fsr2h	equ	0xFDA
 20889                           fsr2l	equ	0xFD9
 20890                           status	equ	0xFD8
 20891                           
 20892 ;; *************** function _strstr *****************
 20893 ;; Defined at:
 20894 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 20895 ;; Parameters:    Size  Location     Type
 20896 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 20897 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 20898 ;;		 -> bufferSerial(80), 
 20899 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 20900 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 20901 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 20902 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 20903 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 20904 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 20905 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 20906 ;;		 -> STR_15(3), STR_13(3), 
 20907 ;; Auto vars:     Size  Location     Type
 20908 ;;		None
 20909 ;; Return value:  Size  Location     Type
 20910 ;;                  2   15[BANK0 ] PTR unsigned char 
 20911 ;; Registers used:
 20912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20913 ;; Tracked objects:
 20914 ;;		On entry : 0/0
 20915 ;;		On exit  : 0/0
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20918 ;;      Params:         0       4       0       0       0       0       0       0       0
 20919 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20921 ;;      Totals:         0       4       0       0       0       0       0       0       0
 20922 ;;Total ram usage:        4 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; Hardware stack levels required when called:    7
 20925 ;; This function calls:
 20926 ;;		_strchr
 20927 ;;		_strlen
 20928 ;;		_strncmp
 20929 ;; This function is called by:
 20930 ;;		_filtroStr
 20931 ;;		_alterarConfigWifi
 20932 ;;		_enviaDadosWifi
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           	psect	text41
 20937  005104                     __ptext41:
 20938                           	opt stack 0
 20939  005104                     _strstr:
 20940                           	opt stack 22
 20941                           
 20942                           ;incstack = 0
 20943  005104  D032               	goto	l2196
 20944  005106  C06F  F066         	movff	strstr@s1,strncmp@s1
 20945  00510A  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 20946  00510E  C071  F068         	movff	strstr@s2,strncmp@s2
 20947  005112  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 20948  005116  C071  F060         	movff	strstr@s2,strlen@s
 20949  00511A  C072  F061         	movff	strstr@s2+1,strlen@s+1
 20950  00511E  EC71  F02C         	call	_strlen	;wreg free
 20951  005122  C060  F06A         	movff	?_strlen,strncmp@len
 20952  005126  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 20953  00512A  ECAF  F026         	call	_strncmp	;wreg free
 20954  00512E  0100               	movlb	0	; () banked
 20955  005130  5166               	movf	?_strncmp& (0+255),w,b
 20956  005132  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 20957  005134  A4D8               	btfss	status,2,c
 20958  005136  D005               	goto	l2198
 20959                           
 20960                           ; BSR set to: 0
 20961  005138  C06F  F06F         	movff	strstr@s1,?_strstr
 20962  00513C  C070  F070         	movff	strstr@s1+1,?_strstr+1
 20963                           
 20964                           ; BSR set to: 0
 20965  005140  0012               	return	
 20966  005142                     l2198:
 20967                           
 20968                           ; BSR set to: 0
 20969                           
 20970                           ; BSR set to: 0
 20971  005142  0E01               	movlw	1
 20972  005144  256F               	addwf	strstr@s1& (0+255),w,b
 20973  005146  6F60               	movwf	strchr@ptr& (0+255),b
 20974  005148  0E00               	movlw	0
 20975  00514A  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 20976  00514C  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 20977  00514E  C071  FFF6         	movff	strstr@s2,tblptrl
 20978  005152  C072  FFF7         	movff	strstr@s2+1,tblptrh
 20979  005156                     	if	0	;tblptru may be non-zero
 20980  005156                     	endif
 20981  005156                     	if	0	;tblptru may be non-zero
 20982  005156                     	endif
 20983  005156  0008               	tblrd		*
 20984  005158  50F5               	movf	tablat,w,c
 20985  00515A  6F62               	movwf	strchr@chr& (0+255),b
 20986  00515C  6B63               	clrf	(strchr@chr+1)& (0+255),b
 20987  00515E  EC9D  F02B         	call	_strchr	;wreg free
 20988  005162  C060  F06F         	movff	?_strchr,strstr@s1
 20989  005166  C061  F070         	movff	?_strchr+1,strstr@s1+1
 20990  00516A                     l2196:
 20991  00516A  0100               	movlb	0	; () banked
 20992  00516C  516F               	movf	strstr@s1& (0+255),w,b
 20993  00516E  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 20994  005170  B4D8               	btfsc	status,2,c
 20995  005172  D013               	goto	u8510
 20996                           
 20997                           ; BSR set to: 0
 20998  005174  C06F  FFF6         	movff	strstr@s1,tblptrl
 20999  005178  C070  FFF7         	movff	strstr@s1+1,tblptrh
 21000  00517C  6AF8               	clrf	tblptru,c
 21001  00517E  0E07               	movlw	(high __ramtop+-1)
 21002  005180  64F7               	cpfsgt	tblptrh,c
 21003  005182  D003               	bra	u8507
 21004  005184  0008               	tblrd		*
 21005  005186  50F5               	movf	tablat,w,c
 21006  005188  D005               	bra	u8500
 21007  00518A                     u8507:
 21008  00518A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21009  00518E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21010  005192  50EF               	movf	indf0,w,c
 21011  005194                     u8500:
 21012  005194  0900               	iorlw	0
 21013  005196  A4D8               	btfss	status,2,c
 21014  005198  D7B6               	goto	l2197
 21015  00519A                     u8510:
 21016  00519A  0E00               	movlw	0
 21017  00519C  0100               	movlb	0	; () banked
 21018  00519E  6F6F               	movwf	?_strstr& (0+255),b
 21019  0051A0  0E00               	movlw	0
 21020  0051A2  6F70               	movwf	(?_strstr+1)& (0+255),b
 21021  0051A4  0012               	return	
 21022  0051A6                     __end_of_strstr:
 21023                           	opt stack 0
 21024                           tblptru	equ	0xFF8
 21025                           tblptrh	equ	0xFF7
 21026                           tblptrl	equ	0xFF6
 21027                           tablat	equ	0xFF5
 21028                           prodh	equ	0xFF4
 21029                           prodl	equ	0xFF3
 21030                           intcon	equ	0xFF2
 21031                           intcon2	equ	0xFF1
 21032                           intcon3	equ	0xFF0
 21033                           indf0	equ	0xFEF
 21034                           postinc0	equ	0xFEE
 21035                           fsr0h	equ	0xFEA
 21036                           fsr0l	equ	0xFE9
 21037                           wreg	equ	0xFE8
 21038                           postdec1	equ	0xFE5
 21039                           fsr1l	equ	0xFE1
 21040                           indf2	equ	0xFDF
 21041                           postinc2	equ	0xFDE
 21042                           postdec2	equ	0xFDD
 21043                           fsr2h	equ	0xFDA
 21044                           fsr2l	equ	0xFD9
 21045                           status	equ	0xFD8
 21046                           
 21047 ;; *************** function _strncmp *****************
 21048 ;; Defined at:
 21049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 21050 ;; Parameters:    Size  Location     Type
 21051 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21052 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21053 ;;		 -> bufferSerial(80), 
 21054 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21055 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21056 ;;		 -> STR_61(5), STR_60(4), STR_56(2), STR_54(3), 
 21057 ;;		 -> STR_52(2), STR_51(2), STR_48(5), STR_47(3), 
 21058 ;;		 -> STR_45(3), STR_39(7), STR_37(6), STR_36(7), 
 21059 ;;		 -> STR_35(5), STR_30(2), STR_28(8), STR_27(7), 
 21060 ;;		 -> STR_26(5), STR_21(3), STR_19(3), STR_17(3), 
 21061 ;;		 -> STR_15(3), STR_13(3), 
 21062 ;;  len             2   10[BANK0 ] unsigned int 
 21063 ;; Auto vars:     Size  Location     Type
 21064 ;;		None
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  2    6[BANK0 ] int 
 21067 ;; Registers used:
 21068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21069 ;; Tracked objects:
 21070 ;;		On entry : 0/0
 21071 ;;		On exit  : 0/0
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21074 ;;      Params:         0       6       0       0       0       0       0       0       0
 21075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21076 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21077 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21078 ;;Total ram usage:        9 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:    6
 21081 ;; This function calls:
 21082 ;;		Nothing
 21083 ;; This function is called by:
 21084 ;;		_strstr
 21085 ;; This function uses a non-reentrant model
 21086 ;;
 21087                           
 21088                           	psect	text42
 21089  004D5E                     __ptext42:
 21090                           	opt stack 0
 21091  004D5E                     _strncmp:
 21092                           	opt stack 22
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;incstack = 0
 21096  004D5E  D059               	goto	l2254
 21097  004D60                     l6440:
 21098  004D60  C066  FFF6         	movff	strncmp@s1,tblptrl
 21099  004D64  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21100  004D68  6AF8               	clrf	tblptru,c
 21101  004D6A  0E07               	movlw	(high __ramtop+-1)
 21102  004D6C  64F7               	cpfsgt	tblptrh,c
 21103  004D6E  D003               	bra	u8267
 21104  004D70  0008               	tblrd		*
 21105  004D72  50F5               	movf	tablat,w,c
 21106  004D74  D005               	bra	u8260
 21107  004D76                     u8267:
 21108  004D76  CFF6 FFE9          	movff	tblptrl,fsr0l
 21109  004D7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21110  004D7E  50EF               	movf	indf0,w,c
 21111  004D80                     u8260:
 21112  004D80  0900               	iorlw	0
 21113  004D82  B4D8               	btfsc	status,2,c
 21114  004D84  D01B               	goto	u8280
 21115  004D86  C068  FFF6         	movff	strncmp@s2,tblptrl
 21116  004D8A  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21117  004D8E                     	if	0	;tblptru may be non-zero
 21118  004D8E                     	endif
 21119  004D8E                     	if	0	;tblptru may be non-zero
 21120  004D8E                     	endif
 21121  004D8E  0008               	tblrd		*
 21122  004D90  CFF5 F06C          	movff	tablat,??_strncmp
 21123  004D94  C066  FFF6         	movff	strncmp@s1,tblptrl
 21124  004D98  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21125  004D9C  6AF8               	clrf	tblptru,c
 21126  004D9E  0100               	movlb	0	; () banked
 21127  004DA0  0E07               	movlw	(high __ramtop+-1)
 21128  004DA2  64F7               	cpfsgt	tblptrh,c
 21129  004DA4  D003               	bra	u8287
 21130  004DA6  0008               	tblrd		*
 21131  004DA8  50F5               	movf	tablat,w,c
 21132  004DAA  D005               	bra	u8285
 21133  004DAC                     u8287:
 21134  004DAC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21135  004DB0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21136  004DB4  50EF               	movf	indf0,w,c
 21137  004DB6                     u8285:
 21138  004DB6  196C               	xorwf	??_strncmp& (0+255),w,b
 21139  004DB8  B4D8               	btfsc	status,2,c
 21140  004DBA  D026               	goto	l2256
 21141  004DBC                     u8280:
 21142  004DBC  C068  FFF6         	movff	strncmp@s2,tblptrl
 21143  004DC0  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21144  004DC4                     	if	0	;tblptru may be non-zero
 21145  004DC4                     	endif
 21146  004DC4                     	if	0	;tblptru may be non-zero
 21147  004DC4                     	endif
 21148  004DC4  0008               	tblrd		*
 21149  004DC6  50F5               	movf	tablat,w,c
 21150  004DC8  0100               	movlb	0	; () banked
 21151  004DCA  6F6C               	movwf	??_strncmp& (0+255),b
 21152  004DCC  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21153  004DCE  1F6C               	comf	??_strncmp& (0+255),f,b
 21154  004DD0  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21155  004DD2  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21156  004DD4  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21157  004DD6  C066  FFF6         	movff	strncmp@s1,tblptrl
 21158  004DDA  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21159  004DDE  6AF8               	clrf	tblptru,c
 21160  004DE0  0E07               	movlw	(high __ramtop+-1)
 21161  004DE2  64F7               	cpfsgt	tblptrh,c
 21162  004DE4  D003               	bra	u8297
 21163  004DE6  0008               	tblrd		*
 21164  004DE8  50F5               	movf	tablat,w,c
 21165  004DEA  D005               	bra	u8290
 21166  004DEC                     u8297:
 21167  004DEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21168  004DF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21169  004DF4  50EF               	movf	indf0,w,c
 21170  004DF6                     u8290:
 21171  004DF6  0100               	movlb	0	; () banked
 21172  004DF8  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21173  004DFA  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21174  004DFC  256C               	addwf	??_strncmp& (0+255),w,b
 21175  004DFE  6F66               	movwf	?_strncmp& (0+255),b
 21176  004E00  0E00               	movlw	0
 21177  004E02  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21178  004E04  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21179                           
 21180                           ; BSR set to: 0
 21181  004E06  0012               	return	
 21182  004E08                     l2256:
 21183                           
 21184                           ; BSR set to: 0
 21185  004E08  0100               	movlb	0	; () banked
 21186  004E0A  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21187  004E0C  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21188  004E0E  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21189  004E10  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21190  004E12                     l2254:
 21191                           
 21192                           ; BSR set to: 0
 21193  004E12  0100               	movlb	0	; () banked
 21194  004E14  076A               	decf	strncmp@len& (0+255),f,b
 21195  004E16  A0D8               	btfss	status,0,c
 21196  004E18  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21197  004E1A  296A               	incf	strncmp@len& (0+255),w,b
 21198  004E1C  E1A1               	bnz	l6440
 21199  004E1E  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21200  004E20  A4D8               	btfss	status,2,c
 21201  004E22  D79E               	goto	l2255
 21202                           
 21203                           ; BSR set to: 0
 21204                           
 21205                           ; BSR set to: 0
 21206  004E24  0E00               	movlw	0
 21207  004E26  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21208  004E28  0E00               	movlw	0
 21209  004E2A  6F66               	movwf	?_strncmp& (0+255),b
 21210  004E2C  0012               	return	
 21211  004E2E                     __end_of_strncmp:
 21212                           	opt stack 0
 21213                           tblptru	equ	0xFF8
 21214                           tblptrh	equ	0xFF7
 21215                           tblptrl	equ	0xFF6
 21216                           tablat	equ	0xFF5
 21217                           prodh	equ	0xFF4
 21218                           prodl	equ	0xFF3
 21219                           intcon	equ	0xFF2
 21220                           intcon2	equ	0xFF1
 21221                           intcon3	equ	0xFF0
 21222                           indf0	equ	0xFEF
 21223                           postinc0	equ	0xFEE
 21224                           fsr0h	equ	0xFEA
 21225                           fsr0l	equ	0xFE9
 21226                           wreg	equ	0xFE8
 21227                           postdec1	equ	0xFE5
 21228                           fsr1l	equ	0xFE1
 21229                           indf2	equ	0xFDF
 21230                           postinc2	equ	0xFDE
 21231                           postdec2	equ	0xFDD
 21232                           fsr2h	equ	0xFDA
 21233                           fsr2l	equ	0xFD9
 21234                           status	equ	0xFD8
 21235                           
 21236 ;; *************** function _strlen *****************
 21237 ;; Defined at:
 21238 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21241 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21242 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21243 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21244 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21245 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21246 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21247 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21248 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21249 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21250 ;; Auto vars:     Size  Location     Type
 21251 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21252 ;;		 -> STR_67(4), STR_66(4), STR_64(7), STR_63(3), 
 21253 ;;		 -> STR_61(5), STR_60(4), enviaDadosWifi@AUX(15), STR_56(2), 
 21254 ;;		 -> STR_54(3), STR_52(2), STR_51(2), STR_48(5), 
 21255 ;;		 -> STR_47(3), STR_45(3), wifi_MAC(24), STR_40(2), 
 21256 ;;		 -> STR_39(7), STR_38(2), STR_37(6), ssid(15), 
 21257 ;;		 -> STR_36(7), STR_35(5), STR_30(2), STR_28(8), 
 21258 ;;		 -> STR_27(7), STR_26(5), STR_21(3), STR_19(3), 
 21259 ;;		 -> STR_17(3), STR_15(3), NULL(0), STR_13(3), 
 21260 ;;		 -> filtroStr@aux(60), filtroStr@_str(82), bufferSerial(80), 
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  2    0[BANK0 ] unsigned int 
 21263 ;; Registers used:
 21264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21270 ;;      Params:         0       2       0       0       0       0       0       0       0
 21271 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21272 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21273 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21274 ;;Total ram usage:        6 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:    6
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_getMac
 21281 ;;		_filtroStr
 21282 ;;		_alterarConfigWifi
 21283 ;;		_enviaDadosWifi
 21284 ;;		_strstr
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           	psect	text43
 21289  0058E2                     __ptext43:
 21290                           	opt stack 0
 21291  0058E2                     _strlen:
 21292                           	opt stack 22
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;incstack = 0
 21296  0058E2  C060  F064         	movff	strlen@s,strlen@cp
 21297  0058E6  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21298  0058EA  D003               	goto	l2174
 21299  0058EC  0100               	movlb	0	; () banked
 21300  0058EE  4B64               	infsnz	strlen@cp& (0+255),f,b
 21301  0058F0  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21302  0058F2                     l2174:
 21303                           
 21304                           ; BSR set to: 0
 21305  0058F2  C064  FFF6         	movff	strlen@cp,tblptrl
 21306  0058F6  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21307  0058FA  6AF8               	clrf	tblptru,c
 21308  0058FC  0E07               	movlw	(high __ramtop+-1)
 21309  0058FE  64F7               	cpfsgt	tblptrh,c
 21310  005900  D003               	bra	u7877
 21311  005902  0008               	tblrd		*
 21312  005904  50F5               	movf	tablat,w,c
 21313  005906  D005               	bra	u7870
 21314  005908                     u7877:
 21315  005908  CFF6 FFE9          	movff	tblptrl,fsr0l
 21316  00590C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21317  005910  50EF               	movf	indf0,w,c
 21318  005912                     u7870:
 21319  005912  0900               	iorlw	0
 21320  005914  A4D8               	btfss	status,2,c
 21321  005916  D7EA               	goto	l2175
 21322  005918  C060  F062         	movff	strlen@s,??_strlen
 21323  00591C  C061  F063         	movff	strlen@s+1,??_strlen+1
 21324  005920  0100               	movlb	0	; () banked
 21325  005922  1F62               	comf	??_strlen& (0+255),f,b
 21326  005924  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21327  005926  4B62               	infsnz	??_strlen& (0+255),f,b
 21328  005928  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21329  00592A  5164               	movf	strlen@cp& (0+255),w,b
 21330  00592C  2562               	addwf	??_strlen& (0+255),w,b
 21331  00592E  6F60               	movwf	?_strlen& (0+255),b
 21332  005930  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21333  005932  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21334  005934  6F61               	movwf	(?_strlen+1)& (0+255),b
 21335  005936  0012               	return	
 21336  005938                     __end_of_strlen:
 21337                           	opt stack 0
 21338                           tblptru	equ	0xFF8
 21339                           tblptrh	equ	0xFF7
 21340                           tblptrl	equ	0xFF6
 21341                           tablat	equ	0xFF5
 21342                           prodh	equ	0xFF4
 21343                           prodl	equ	0xFF3
 21344                           intcon	equ	0xFF2
 21345                           intcon2	equ	0xFF1
 21346                           intcon3	equ	0xFF0
 21347                           indf0	equ	0xFEF
 21348                           postinc0	equ	0xFEE
 21349                           fsr0h	equ	0xFEA
 21350                           fsr0l	equ	0xFE9
 21351                           wreg	equ	0xFE8
 21352                           postdec1	equ	0xFE5
 21353                           fsr1l	equ	0xFE1
 21354                           indf2	equ	0xFDF
 21355                           postinc2	equ	0xFDE
 21356                           postdec2	equ	0xFDD
 21357                           fsr2h	equ	0xFDA
 21358                           fsr2l	equ	0xFD9
 21359                           status	equ	0xFD8
 21360                           
 21361 ;; *************** function _strchr *****************
 21362 ;; Defined at:
 21363 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 21364 ;; Parameters:    Size  Location     Type
 21365 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21366 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21367 ;;		 -> bufferSerial(80), 
 21368 ;;  chr             2    2[BANK0 ] int 
 21369 ;; Auto vars:     Size  Location     Type
 21370 ;;		None
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  2    0[BANK0 ] PTR unsigned char 
 21373 ;; Registers used:
 21374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21380 ;;      Params:         0       4       0       0       0       0       0       0       0
 21381 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21382 ;;      Temps:          0       2       0       0       0       0       0       0       0
 21383 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21384 ;;Total ram usage:        6 bytes
 21385 ;; Hardware stack levels used:    1
 21386 ;; Hardware stack levels required when called:    6
 21387 ;; This function calls:
 21388 ;;		Nothing
 21389 ;; This function is called by:
 21390 ;;		_strstr
 21391 ;;		_strcspn
 21392 ;;		_strspn
 21393 ;; This function uses a non-reentrant model
 21394 ;;
 21395                           
 21396                           	psect	text44
 21397  00573A                     __ptext44:
 21398                           	opt stack 0
 21399  00573A                     _strchr:
 21400                           	opt stack 22
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;incstack = 0
 21404  00573A  C060  FFF6         	movff	strchr@ptr,tblptrl
 21405  00573E  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 21406  005742  6AF8               	clrf	tblptru,c
 21407  005744  0E07               	movlw	(high __ramtop+-1)
 21408  005746  64F7               	cpfsgt	tblptrh,c
 21409  005748  D003               	bra	u7817
 21410  00574A  0008               	tblrd		*
 21411  00574C  50F5               	movf	tablat,w,c
 21412  00574E  D005               	bra	u7810
 21413  005750                     u7817:
 21414  005750  CFF6 FFE9          	movff	tblptrl,fsr0l
 21415  005754  CFF7 FFEA          	movff	tblptrh,fsr0h
 21416  005758  50EF               	movf	indf0,w,c
 21417  00575A                     u7810:
 21418  00575A  0100               	movlb	0	; () banked
 21419  00575C  1962               	xorwf	strchr@chr& (0+255),w,b
 21420  00575E  A4D8               	btfss	status,2,c
 21421  005760  D005               	goto	l2239
 21422                           
 21423                           ; BSR set to: 0
 21424  005762  C060  F060         	movff	strchr@ptr,?_strchr
 21425  005766  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21426                           
 21427                           ; BSR set to: 0
 21428  00576A  0012               	return	
 21429  00576C                     l2239:
 21430                           
 21431                           ; BSR set to: 0
 21432                           
 21433                           ; BSR set to: 0
 21434  00576C  5160               	movf	strchr@ptr& (0+255),w,b
 21435  00576E  6F64               	movwf	??_strchr& (0+255),b
 21436  005770  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 21437  005772  6F65               	movwf	(??_strchr+1)& (0+255),b
 21438  005774  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21439  005776  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21440  005778  C064  FFF6         	movff	??_strchr,tblptrl
 21441  00577C  C065  FFF7         	movff	??_strchr+1,tblptrh
 21442  005780  6AF8               	clrf	tblptru,c
 21443  005782  0E07               	movlw	(high __ramtop+-1)
 21444  005784  64F7               	cpfsgt	tblptrh,c
 21445  005786  D003               	bra	u7837
 21446  005788  0008               	tblrd		*
 21447  00578A  50F5               	movf	tablat,w,c
 21448  00578C  D005               	bra	u7830
 21449  00578E                     u7837:
 21450  00578E  CFF6 FFE9          	movff	tblptrl,fsr0l
 21451  005792  CFF7 FFEA          	movff	tblptrh,fsr0h
 21452  005796  50EF               	movf	indf0,w,c
 21453  005798                     u7830:
 21454  005798  0900               	iorlw	0
 21455  00579A  A4D8               	btfss	status,2,c
 21456  00579C  D7CE               	goto	_strchr
 21457  00579E  0E00               	movlw	0
 21458  0057A0  0100               	movlb	0	; () banked
 21459  0057A2  6F60               	movwf	?_strchr& (0+255),b
 21460  0057A4  0E00               	movlw	0
 21461  0057A6  6F61               	movwf	(?_strchr+1)& (0+255),b
 21462  0057A8  0012               	return	
 21463  0057AA                     __end_of_strchr:
 21464                           	opt stack 0
 21465                           tblptru	equ	0xFF8
 21466                           tblptrh	equ	0xFF7
 21467                           tblptrl	equ	0xFF6
 21468                           tablat	equ	0xFF5
 21469                           prodh	equ	0xFF4
 21470                           prodl	equ	0xFF3
 21471                           intcon	equ	0xFF2
 21472                           intcon2	equ	0xFF1
 21473                           intcon3	equ	0xFF0
 21474                           indf0	equ	0xFEF
 21475                           postinc0	equ	0xFEE
 21476                           fsr0h	equ	0xFEA
 21477                           fsr0l	equ	0xFE9
 21478                           wreg	equ	0xFE8
 21479                           postdec1	equ	0xFE5
 21480                           fsr1l	equ	0xFE1
 21481                           indf2	equ	0xFDF
 21482                           postinc2	equ	0xFDE
 21483                           postdec2	equ	0xFDD
 21484                           fsr2h	equ	0xFDA
 21485                           fsr2l	equ	0xFD9
 21486                           status	equ	0xFD8
 21487                           
 21488 ;; *************** function _strncpy *****************
 21489 ;; Defined at:
 21490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncpy.c"
 21491 ;; Parameters:    Size  Location     Type
 21492 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21493 ;;		 -> filtroStr@_str(82), 
 21494 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21495 ;;		 -> bufferSerial(80), 
 21496 ;;  size            2    4[BANK0 ] unsigned int 
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;  cp              2    6[BANK0 ] PTR unsigned char 
 21499 ;;		 -> filtroStr@_str(82), 
 21500 ;; Return value:  Size  Location     Type
 21501 ;;                  2    0[BANK0 ] PTR unsigned char 
 21502 ;; Registers used:
 21503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21504 ;; Tracked objects:
 21505 ;;		On entry : 0/0
 21506 ;;		On exit  : 0/0
 21507 ;;		Unchanged: 0/0
 21508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21509 ;;      Params:         0       6       0       0       0       0       0       0       0
 21510 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21512 ;;      Totals:         0       8       0       0       0       0       0       0       0
 21513 ;;Total ram usage:        8 bytes
 21514 ;; Hardware stack levels used:    1
 21515 ;; Hardware stack levels required when called:    6
 21516 ;; This function calls:
 21517 ;;		Nothing
 21518 ;; This function is called by:
 21519 ;;		_filtroStr
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523                           	psect	text45
 21524  005880                     __ptext45:
 21525                           	opt stack 0
 21526  005880                     _strncpy:
 21527                           	opt stack 22
 21528                           
 21529                           ; BSR set to: 0
 21530                           ;incstack = 0
 21531  005880  C060  F066         	movff	strncpy@to,strncpy@cp
 21532  005884  C061  F067         	movff	strncpy@to+1,strncpy@cp+1
 21533  005888  D015               	goto	l2182
 21534  00588A  0100               	movlb	0	; () banked
 21535  00588C  0764               	decf	strncpy@size& (0+255),f,b
 21536  00588E  A0D8               	btfss	status,0,c
 21537  005890  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21538                           
 21539                           ; BSR set to: 0
 21540  005892  C062  FFD9         	movff	strncpy@from,fsr2l
 21541  005896  C063  FFDA         	movff	strncpy@from+1,fsr2h
 21542  00589A  4B62               	infsnz	strncpy@from& (0+255),f,b
 21543  00589C  2B63               	incf	(strncpy@from+1)& (0+255),f,b
 21544  00589E  C066  FFE1         	movff	strncpy@cp,fsr1l
 21545  0058A2  C067  FFE2         	movff	strncpy@cp+1,fsr1h
 21546  0058A6  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21547  0058A8  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21548  0058AA  CFDF FFE7          	movff	indf2,indf1
 21549  0058AE  50E7               	movf	indf1,w,c
 21550  0058B0  B4D8               	btfsc	status,2,c
 21551  0058B2  D00E               	goto	l2184
 21552  0058B4                     l2182:
 21553                           
 21554                           ; BSR set to: 0
 21555                           
 21556                           ; BSR set to: 0
 21557  0058B4  0100               	movlb	0	; () banked
 21558  0058B6  5164               	movf	strncpy@size& (0+255),w,b
 21559  0058B8  1165               	iorwf	(strncpy@size+1)& (0+255),w,b
 21560  0058BA  B4D8               	btfsc	status,2,c
 21561  0058BC  D009               	goto	l2184
 21562  0058BE  D7E5               	goto	l2181
 21563  0058C0                     l6574:
 21564                           
 21565                           ; BSR set to: 0
 21566  0058C0  C066  FFD9         	movff	strncpy@cp,fsr2l
 21567  0058C4  C067  FFDA         	movff	strncpy@cp+1,fsr2h
 21568  0058C8  0E00               	movlw	0
 21569  0058CA  6EDF               	movwf	indf2,c
 21570                           
 21571                           ; BSR set to: 0
 21572  0058CC  4B66               	infsnz	strncpy@cp& (0+255),f,b
 21573  0058CE  2B67               	incf	(strncpy@cp+1)& (0+255),f,b
 21574  0058D0                     l2184:
 21575                           
 21576                           ; BSR set to: 0
 21577                           
 21578                           ; BSR set to: 0
 21579  0058D0  0764               	decf	strncpy@size& (0+255),f,b
 21580  0058D2  A0D8               	btfss	status,0,c
 21581  0058D4  0765               	decf	(strncpy@size+1)& (0+255),f,b
 21582  0058D6  2964               	incf	strncpy@size& (0+255),w,b
 21583  0058D8  E1F3               	bnz	l6574
 21584  0058DA  2965               	incf	(strncpy@size+1)& (0+255),w,b
 21585  0058DC  B4D8               	btfsc	status,2,c
 21586  0058DE  0012               	return	
 21587  0058E0  D7EF               	goto	l2185
 21588  0058E2                     __end_of_strncpy:
 21589                           	opt stack 0
 21590                           tblptru	equ	0xFF8
 21591                           tblptrh	equ	0xFF7
 21592                           tblptrl	equ	0xFF6
 21593                           tablat	equ	0xFF5
 21594                           prodh	equ	0xFF4
 21595                           prodl	equ	0xFF3
 21596                           intcon	equ	0xFF2
 21597                           intcon2	equ	0xFF1
 21598                           intcon3	equ	0xFF0
 21599                           indf0	equ	0xFEF
 21600                           postinc0	equ	0xFEE
 21601                           fsr0h	equ	0xFEA
 21602                           fsr0l	equ	0xFE9
 21603                           wreg	equ	0xFE8
 21604                           indf1	equ	0xFE7
 21605                           postdec1	equ	0xFE5
 21606                           fsr1h	equ	0xFE2
 21607                           fsr1l	equ	0xFE1
 21608                           indf2	equ	0xFDF
 21609                           postinc2	equ	0xFDE
 21610                           postdec2	equ	0xFDD
 21611                           fsr2h	equ	0xFDA
 21612                           fsr2l	equ	0xFD9
 21613                           status	equ	0xFD8
 21614                           
 21615 ;; *************** function _strcpy *****************
 21616 ;; Defined at:
 21617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strcpy.c"
 21618 ;; Parameters:    Size  Location     Type
 21619 ;;  to              2   17[BANK0 ] PTR unsigned char 
 21620 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21621 ;;		 -> bufferSerial(80), 
 21622 ;;  from            2   19[BANK0 ] PTR const unsigned char 
 21623 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21624 ;;		 -> bufferSerial(80), 
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 21627 ;;		 -> STR_40(2), STR_38(2), NULL(0), filtroStr@_str(82), 
 21628 ;;		 -> bufferSerial(80), 
 21629 ;; Return value:  Size  Location     Type
 21630 ;;                  2   17[BANK0 ] PTR unsigned char 
 21631 ;; Registers used:
 21632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21633 ;; Tracked objects:
 21634 ;;		On entry : 0/0
 21635 ;;		On exit  : 0/0
 21636 ;;		Unchanged: 0/0
 21637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21638 ;;      Params:         0       4       0       0       0       0       0       0       0
 21639 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21640 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21641 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21642 ;;Total ram usage:        7 bytes
 21643 ;; Hardware stack levels used:    1
 21644 ;; Hardware stack levels required when called:    6
 21645 ;; This function calls:
 21646 ;;		Nothing
 21647 ;; This function is called by:
 21648 ;;		_filtroStr
 21649 ;; This function uses a non-reentrant model
 21650 ;;
 21651                           
 21652                           	psect	text46
 21653  00581A                     __ptext46:
 21654                           	opt stack 0
 21655  00581A                     _strcpy:
 21656                           	opt stack 22
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;incstack = 0
 21660  00581A  C071  F076         	movff	strcpy@to,strcpy@cp
 21661  00581E  C072  F077         	movff	strcpy@to+1,strcpy@cp+1
 21662  005822  D005               	goto	l2168
 21663  005824  0100               	movlb	0	; () banked
 21664  005826  4B76               	infsnz	strcpy@cp& (0+255),f,b
 21665  005828  2B77               	incf	(strcpy@cp+1)& (0+255),f,b
 21666  00582A  4B73               	infsnz	strcpy@from& (0+255),f,b
 21667  00582C  2B74               	incf	(strcpy@from+1)& (0+255),f,b
 21668  00582E                     l2168:
 21669                           
 21670                           ; BSR set to: 0
 21671  00582E  C073  FFF6         	movff	strcpy@from,tblptrl
 21672  005832  C074  FFF7         	movff	strcpy@from+1,tblptrh
 21673  005836  6AF8               	clrf	tblptru,c
 21674  005838  0E07               	movlw	(high __ramtop+-1)
 21675  00583A  64F7               	cpfsgt	tblptrh,c
 21676  00583C  D003               	bra	u8597
 21677  00583E  0008               	tblrd		*
 21678  005840  50F5               	movf	tablat,w,c
 21679  005842  D005               	bra	u8590
 21680  005844                     u8597:
 21681  005844  CFF6 FFE9          	movff	tblptrl,fsr0l
 21682  005848  CFF7 FFEA          	movff	tblptrh,fsr0h
 21683  00584C  50EF               	movf	indf0,w,c
 21684  00584E                     u8590:
 21685  00584E  C076  FFF6         	movff	strcpy@cp,tblptrl
 21686  005852  C077  FFF7         	movff	strcpy@cp+1,tblptrh
 21687  005856  6AF8               	clrf	tblptru,c
 21688  005858  0100               	movlb	0	; () banked
 21689  00585A  6F75               	movwf	??_strcpy& (0+255),b
 21690  00585C  0E07               	movlw	(high __ramtop+-1)
 21691  00585E  64F7               	cpfsgt	tblptrh,c
 21692  005860  D004               	bra	u8607
 21693  005862  C075  FFF5         	movff	??_strcpy,tablat
 21694  005866  000C               	tblwt		*
 21695  005868  D006               	bra	u8600
 21696  00586A                     u8607:
 21697  00586A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21698  00586E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21699  005872  C075  FFEF         	movff	??_strcpy,indf0
 21700  005876                     u8600:
 21701  005876  0100               	movlb	0	; () banked
 21702  005878  5175               	movf	??_strcpy& (0+255),w,b
 21703  00587A  B4D8               	btfsc	status,2,c
 21704  00587C  0012               	return	
 21705  00587E  D7D2               	goto	l2169
 21706  005880                     __end_of_strcpy:
 21707                           	opt stack 0
 21708                           tblptru	equ	0xFF8
 21709                           tblptrh	equ	0xFF7
 21710                           tblptrl	equ	0xFF6
 21711                           tablat	equ	0xFF5
 21712                           prodh	equ	0xFF4
 21713                           prodl	equ	0xFF3
 21714                           intcon	equ	0xFF2
 21715                           intcon2	equ	0xFF1
 21716                           intcon3	equ	0xFF0
 21717                           indf0	equ	0xFEF
 21718                           postinc0	equ	0xFEE
 21719                           fsr0h	equ	0xFEA
 21720                           fsr0l	equ	0xFE9
 21721                           wreg	equ	0xFE8
 21722                           indf1	equ	0xFE7
 21723                           postdec1	equ	0xFE5
 21724                           fsr1h	equ	0xFE2
 21725                           fsr1l	equ	0xFE1
 21726                           indf2	equ	0xFDF
 21727                           postinc2	equ	0xFDE
 21728                           postdec2	equ	0xFDD
 21729                           fsr2h	equ	0xFDA
 21730                           fsr2l	equ	0xFD9
 21731                           status	equ	0xFD8
 21732                           
 21733 ;; *************** function _sprintf *****************
 21734 ;; Defined at:
 21735 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 21738 ;;		 -> enviaDadosWifi@AUX(15), senha(15), ssid(15), line4(21), 
 21739 ;;		 -> line3(21), line2(21), line1(21), filtroStr@aux(60), 
 21740 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 21741 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21742 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21743 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21744 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21745 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21746 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21747 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21748 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21749 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21750 ;;		 -> STR_57(3), STR_43(14), STR_42(3), STR_41(3), 
 21751 ;;		 -> STR_34(14), STR_25(14), STR_24(21), STR_23(17), 
 21752 ;;		 -> STR_22(20), STR_11(3), STR_10(3), 
 21753 ;; Auto vars:     Size  Location     Type
 21754 ;;  pb              4   45[BANK0 ] struct __prbuf
 21755 ;;  ap              2   43[BANK0 ] PTR void [1]
 21756 ;;		 -> ?_sprintf(2), ?_printf(2), 
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  2   33[BANK0 ] int 
 21759 ;; Registers used:
 21760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21766 ;;      Params:         0      10       0       0       0       0       0       0       0
 21767 ;;      Locals:         0       6       0       0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21769 ;;      Totals:         0      16       0       0       0       0       0       0       0
 21770 ;;Total ram usage:       16 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:    8
 21773 ;; This function calls:
 21774 ;;		__doprnt
 21775 ;; This function is called by:
 21776 ;;		_filtroStr
 21777 ;;		_alterarConfigWifi
 21778 ;;		_enviaDadosWifi
 21779 ;;		_main
 21780 ;; This function uses a non-reentrant model
 21781 ;;
 21782                           
 21783                           	psect	text47
 21784  005A26                     __ptext47:
 21785                           	opt stack 0
 21786  005A26                     _sprintf:
 21787                           	opt stack 22
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;incstack = 0
 21791  005A26  C081  F08D         	movff	sprintf@wh,sprintf@pb
 21792  005A2A  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 21793  005A2E  0E00               	movlw	0
 21794  005A30  0100               	movlb	0	; () banked
 21795  005A32  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 21796  005A34  0E00               	movlw	0
 21797  005A36  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 21798  005A38  0E85               	movlw	low (?_sprintf+4)
 21799  005A3A  6F8B               	movwf	sprintf@ap& (0+255),b
 21800  005A3C  0E00               	movlw	high (?_sprintf+4)
 21801  005A3E  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 21802                           
 21803                           ; BSR set to: 0
 21804  005A40  0E8D               	movlw	low sprintf@pb
 21805  005A42  6F6C               	movwf	__doprnt@pb& (0+255),b
 21806  005A44  0E00               	movlw	high sprintf@pb
 21807  005A46  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 21808  005A48  C083  F06E         	movff	sprintf@f,__doprnt@f
 21809  005A4C  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 21810  005A50  0E8B               	movlw	low sprintf@ap
 21811  005A52  6F70               	movwf	__doprnt@ap& (0+255),b
 21812  005A54  0E00               	movlw	high sprintf@ap
 21813  005A56  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 21814  005A58  EC07  F013         	call	__doprnt	;wreg free
 21815  005A5C  C08D  FFD9         	movff	sprintf@pb,fsr2l
 21816  005A60  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 21817  005A64  0E00               	movlw	0
 21818  005A66  6EDF               	movwf	indf2,c
 21819  005A68  0012               	return	
 21820  005A6A                     __end_of_sprintf:
 21821                           	opt stack 0
 21822                           tblptru	equ	0xFF8
 21823                           tblptrh	equ	0xFF7
 21824                           tblptrl	equ	0xFF6
 21825                           tablat	equ	0xFF5
 21826                           prodh	equ	0xFF4
 21827                           prodl	equ	0xFF3
 21828                           intcon	equ	0xFF2
 21829                           intcon2	equ	0xFF1
 21830                           intcon3	equ	0xFF0
 21831                           indf0	equ	0xFEF
 21832                           postinc0	equ	0xFEE
 21833                           fsr0h	equ	0xFEA
 21834                           fsr0l	equ	0xFE9
 21835                           wreg	equ	0xFE8
 21836                           indf1	equ	0xFE7
 21837                           postdec1	equ	0xFE5
 21838                           fsr1h	equ	0xFE2
 21839                           fsr1l	equ	0xFE1
 21840                           indf2	equ	0xFDF
 21841                           postinc2	equ	0xFDE
 21842                           postdec2	equ	0xFDD
 21843                           fsr2h	equ	0xFDA
 21844                           fsr2l	equ	0xFD9
 21845                           status	equ	0xFD8
 21846                           
 21847 ;; *************** function __doprnt *****************
 21848 ;; Defined at:
 21849 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 21852 ;;		 -> sprintf@pb(4), printf@pb(4), 
 21853 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 21854 ;;		 -> STR_111(18), STR_110(19), STR_109(19), STR_108(19), 
 21855 ;;		 -> STR_107(20), STR_106(17), STR_105(7), STR_104(9), 
 21856 ;;		 -> STR_103(8), STR_102(10), STR_101(18), STR_100(18), 
 21857 ;;		 -> STR_99(18), STR_98(17), STR_97(17), STR_96(17), 
 21858 ;;		 -> STR_95(17), STR_94(20), STR_93(20), STR_92(20), 
 21859 ;;		 -> STR_89(11), STR_86(10), STR_83(9), STR_82(10), 
 21860 ;;		 -> STR_81(9), STR_80(15), STR_79(18), STR_78(20), 
 21861 ;;		 -> STR_77(10), STR_76(22), STR_75(21), STR_74(15), 
 21862 ;;		 -> STR_73(12), STR_71(3), STR_70(14), STR_69(20), 
 21863 ;;		 -> STR_68(9), STR_65(11), STR_62(14), STR_59(162), 
 21864 ;;		 -> STR_57(3), STR_55(19), STR_53(51), STR_50(15), 
 21865 ;;		 -> STR_49(21), STR_46(14), STR_44(14), STR_43(14), 
 21866 ;;		 -> STR_42(3), STR_41(3), STR_34(14), STR_33(16), 
 21867 ;;		 -> STR_32(704), STR_31(45), STR_29(21), STR_25(14), 
 21868 ;;		 -> STR_24(21), STR_23(17), STR_22(20), STR_20(22), 
 21869 ;;		 -> STR_18(22), STR_16(35), STR_14(14), STR_12(14), 
 21870 ;;		 -> STR_11(3), STR_10(3), 
 21871 ;;  ap              2   16[BANK0 ] PTR PTR void 
 21872 ;;		 -> sprintf@ap(2), printf@ap(2), 
 21873 ;; Auto vars:     Size  Location     Type
 21874 ;;  tmpval          4    0        struct .
 21875 ;;  width           2   30[BANK0 ] int 
 21876 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 21877 ;;		 -> ?_sprintf(2), ?_printf(2), STR_112(7), _doprnt@c(1), 
 21878 ;;		 -> STR_91(10), STR_90(7), STR_88(11), STR_87(8), 
 21879 ;;		 -> STR_85(11), STR_84(7), STR_72(12), STR_58(12), 
 21880 ;;		 -> enviaDadosWifi@AUX(15), wifi_MAC(24), STR_40(2), senha(15), 
 21881 ;;		 -> STR_38(2), ssid(15), line4(21), line3(21), 
 21882 ;;		 -> line2(21), line1(21), NULL(0), filtroStr@aux(60), 
 21883 ;;		 -> filtroStr@_str(82), bufferSerial(80), STR_9(3), STR_8(5), 
 21884 ;;		 -> STR_7(7), STR_6(6), STR_5(4), STR_4(10), 
 21885 ;;		 -> STR_3(11), STR_2(12), STR_1(11), 
 21886 ;;  len             2   26[BANK0 ] unsigned int 
 21887 ;;  val             2   24[BANK0 ] unsigned int 
 21888 ;;  c               1   32[BANK0 ] char 
 21889 ;;  flag            1   23[BANK0 ] unsigned char 
 21890 ;;  prec            1   22[BANK0 ] char 
 21891 ;; Return value:  Size  Location     Type
 21892 ;;                  2   12[BANK0 ] int 
 21893 ;; Registers used:
 21894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21895 ;; Tracked objects:
 21896 ;;		On entry : 0/0
 21897 ;;		On exit  : 0/0
 21898 ;;		Unchanged: 0/0
 21899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21900 ;;      Params:         0       6       0       0       0       0       0       0       0
 21901 ;;      Locals:         0      11       0       0       0       0       0       0       0
 21902 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21903 ;;      Totals:         0      21       0       0       0       0       0       0       0
 21904 ;;Total ram usage:       21 bytes
 21905 ;; Hardware stack levels used:    1
 21906 ;; Hardware stack levels required when called:    7
 21907 ;; This function calls:
 21908 ;;		Absolute function
 21909 ;;		___lwdiv
 21910 ;;		___lwmod
 21911 ;;		___wmul
 21912 ;;		_isdigit
 21913 ;;		_putch
 21914 ;; This function is called by:
 21915 ;;		_printf
 21916 ;;		_sprintf
 21917 ;; This function uses a non-reentrant model
 21918 ;;
 21919                           
 21920                           	psect	text48
 21921  00260E                     __ptext48:
 21922                           	opt stack 0
 21923  00260E                     __doprnt:
 21924                           	opt stack 22
 21925                           
 21926                           ;doprnt.c: 499: signed char c;
 21927                           ;doprnt.c: 501: int width;
 21928                           ;doprnt.c: 506: signed char prec;
 21929                           ;doprnt.c: 508: unsigned char flag;
 21930                           ;doprnt.c: 523: union {
 21931                           ;doprnt.c: 524: unsigned long vd;
 21932                           ;doprnt.c: 525: double integ;
 21933                           ;doprnt.c: 526: } tmpval;
 21934                           ;doprnt.c: 528: unsigned int val;
 21935                           ;doprnt.c: 529: unsigned len;
 21936                           ;doprnt.c: 530: const char * cp;
 21937                           ;doprnt.c: 536: while(c = *f++) {
 21938                           
 21939                           ;incstack = 0
 21940  00260E  D2CC               	goto	u8240
 21941  002610                     
 21942                           ;doprnt.c: 538: if(c != '%')
 21943  002610  0E25               	movlw	37
 21944  002612  0100               	movlb	0	; () banked
 21945  002614  1980               	xorwf	__doprnt@c& (0+255),w,b
 21946  002616  B4D8               	btfsc	status,2,c
 21947  002618  D033               	goto	l1540
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;doprnt.c: 540: {
 21951                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 21952  00261A  EE20 F002          	lfsr	2,2
 21953  00261E  516C               	movf	__doprnt@pb& (0+255),w,b
 21954  002620  26D9               	addwf	fsr2l,f,c
 21955  002622  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21956  002624  22DA               	addwfc	fsr2h,f,c
 21957  002626  50DE               	movf	postinc2,w,c
 21958  002628  10DE               	iorwf	postinc2,w,c
 21959  00262A  B4D8               	btfsc	status,2,c
 21960  00262C  D013               	goto	l1541
 21961                           
 21962                           ; BSR set to: 0
 21963  00262E  EE20 F002          	lfsr	2,2
 21964  002632  516C               	movf	__doprnt@pb& (0+255),w,b
 21965  002634  26D9               	addwf	fsr2l,f,c
 21966  002636  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21967  002638  22DA               	addwfc	fsr2h,f,c
 21968  00263A  D801               	call	u7938
 21969  00263C  D2B5               	goto	u8240
 21970  00263E                     u7938:
 21971  00263E  0005               	push	
 21972  002640  6EFA               	movwf	pclath,c
 21973  002642  50DE               	movf	postinc2,w,c
 21974  002644  6EFD               	movwf	tosl,c
 21975  002646  50DE               	movf	postinc2,w,c
 21976  002648  6EFE               	movwf	tosh,c
 21977  00264A  50F8               	movf	tblptru,w,c
 21978  00264C  6EFF               	movwf	tosu,c
 21979  00264E  50FA               	movf	pclath,w,c
 21980  002650  5180               	movf	__doprnt@c& (0+255),w,b
 21981  002652  0012               	return		;indir
 21982  002654                     l1541:
 21983  002654  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21984  002658  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21985  00265C  CFDE F072          	movff	postinc2,??__doprnt
 21986  002660  CFDD F073          	movff	postdec2,??__doprnt+1
 21987  002664  C072  FFD9         	movff	??__doprnt,fsr2l
 21988  002668  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21989  00266C  C080  FFDF         	movff	__doprnt@c,indf2
 21990  002670  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21991  002674  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21992  002678  2ADE               	incf	postinc2,f,c
 21993  00267A  0E00               	movlw	0
 21994  00267C  22DD               	addwfc	postdec2,f,c
 21995                           
 21996                           ;doprnt.c: 542: continue;
 21997  00267E  D294               	goto	u8240
 21998  002680                     l1540:
 21999                           
 22000                           ;doprnt.c: 543: }
 22001                           ;doprnt.c: 546: width = 0;
 22002  002680  0E00               	movlw	0
 22003  002682  0100               	movlb	0	; () banked
 22004  002684  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22005  002686  0E00               	movlw	0
 22006  002688  6F7E               	movwf	__doprnt@width& (0+255),b
 22007                           
 22008                           ;doprnt.c: 548: flag = 0;
 22009  00268A  0E00               	movlw	0
 22010  00268C  6F77               	movwf	__doprnt@flag& (0+255),b
 22011                           
 22012                           ; BSR set to: 0
 22013                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 22014  00268E  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22015  002692  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22016  002696                     	if	0	;tblptru may be non-zero
 22017  002696                     	endif
 22018  002696                     	if	0	;tblptru may be non-zero
 22019  002696                     	endif
 22020  002696  0008               	tblrd		*
 22021  002698  50F5               	movf	tablat,w,c
 22022  00269A  EC0C  F02F         	call	_isdigit
 22023  00269E  A0D8               	btfss	status,0,c
 22024  0026A0  D13C               	goto	l1546
 22025                           
 22026                           ;doprnt.c: 598: width = 0;
 22027  0026A2  0E00               	movlw	0
 22028  0026A4  0100               	movlb	0	; () banked
 22029  0026A6  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22030  0026A8  0E00               	movlw	0
 22031  0026AA  6F7E               	movwf	__doprnt@width& (0+255),b
 22032  0026AC                     
 22033                           ;doprnt.c: 600: width *= 10;
 22034                           
 22035                           ; BSR set to: 0
 22036  0026AC  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 22037  0026B0  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 22038  0026B4  0E00               	movlw	0
 22039  0026B6  0100               	movlb	0	; () banked
 22040  0026B8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22041  0026BA  0E0A               	movlw	10
 22042  0026BC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 22043  0026BE  ECAC  F02E         	call	___wmul	;wreg free
 22044  0026C2  C060  F07E         	movff	?___wmul,__doprnt@width
 22045  0026C6  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 22046                           
 22047                           ;doprnt.c: 601: width += *f++ - '0';
 22048  0026CA  0ED0               	movlw	208
 22049  0026CC  0100               	movlb	0	; () banked
 22050  0026CE  6F72               	movwf	??__doprnt& (0+255),b
 22051  0026D0  0EFF               	movlw	255
 22052  0026D2  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22053  0026D4  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22054  0026D8  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22055  0026DC                     	if	0	;tblptru may be non-zero
 22056  0026DC                     	endif
 22057  0026DC                     	if	0	;tblptru may be non-zero
 22058  0026DC                     	endif
 22059  0026DC  0008               	tblrd		*
 22060  0026DE  50F5               	movf	tablat,w,c
 22061  0026E0  6F74               	movwf	(??__doprnt+2)& (0+255),b
 22062  0026E2  6B75               	clrf	(??__doprnt+3)& (0+255),b
 22063  0026E4  5172               	movf	??__doprnt& (0+255),w,b
 22064  0026E6  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 22065  0026E8  5173               	movf	(??__doprnt+1)& (0+255),w,b
 22066  0026EA  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 22067  0026EC  5174               	movf	(??__doprnt+2)& (0+255),w,b
 22068  0026EE  277E               	addwf	__doprnt@width& (0+255),f,b
 22069  0026F0  5175               	movf	(??__doprnt+3)& (0+255),w,b
 22070  0026F2  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 22071                           
 22072                           ; BSR set to: 0
 22073  0026F4  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22074  0026F6  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22078  0026F8  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22079  0026FC  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22080  002700                     	if	0	;tblptru may be non-zero
 22081  002700                     	endif
 22082  002700                     	if	0	;tblptru may be non-zero
 22083  002700                     	endif
 22084  002700  0008               	tblrd		*
 22085  002702  50F5               	movf	tablat,w,c
 22086  002704  EC0C  F02F         	call	_isdigit
 22087  002708  A0D8               	btfss	status,0,c
 22088  00270A  D107               	goto	l1546
 22089  00270C  D7CF               	goto	l1544
 22090  00270E                     
 22091                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 22092  00270E  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22093  002712  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22094  002716  CFDF F072          	movff	indf2,??__doprnt
 22095  00271A  0E02               	movlw	2
 22096  00271C  26DE               	addwf	postinc2,f,c
 22097  00271E  CFDF F073          	movff	indf2,??__doprnt+1
 22098  002722  0E00               	movlw	0
 22099  002724  22DD               	addwfc	postdec2,f,c
 22100  002726  C072  FFD9         	movff	??__doprnt,fsr2l
 22101  00272A  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22102  00272E  CFDE F07C          	movff	postinc2,__doprnt@cp
 22103  002732  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 22104                           
 22105                           ;doprnt.c: 740: if(!cp)
 22106  002736  0100               	movlb	0	; () banked
 22107  002738  517C               	movf	__doprnt@cp& (0+255),w,b
 22108  00273A  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 22109  00273C  A4D8               	btfss	status,2,c
 22110  00273E  D004               	goto	l1553
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;doprnt.c: 741: cp = "(null)";
 22114  002740  0E83               	movlw	low STR_112
 22115  002742  6F7C               	movwf	__doprnt@cp& (0+255),b
 22116  002744  0E7F               	movlw	high STR_112
 22117  002746  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22118  002748                     l1553:
 22119                           
 22120                           ; BSR set to: 0
 22121                           ;doprnt.c: 745: len = 0;
 22122                           
 22123                           ; BSR set to: 0
 22124  002748  0E00               	movlw	0
 22125  00274A  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22126  00274C  0E00               	movlw	0
 22127  00274E  6F7A               	movwf	__doprnt@len& (0+255),b
 22128                           
 22129                           ;doprnt.c: 746: while(cp[len])
 22130  002750  D003               	goto	l1554
 22131  002752                     
 22132                           ;doprnt.c: 747: len++;
 22133                           
 22134                           ; BSR set to: 0
 22135  002752  0100               	movlb	0	; () banked
 22136  002754  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 22137  002756  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 22138  002758                     l1554:
 22139                           
 22140                           ; BSR set to: 0
 22141                           
 22142                           ; BSR set to: 0
 22143  002758  517A               	movf	__doprnt@len& (0+255),w,b
 22144  00275A  257C               	addwf	__doprnt@cp& (0+255),w,b
 22145  00275C  6F72               	movwf	??__doprnt& (0+255),b
 22146  00275E  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22147  002760  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 22148  002762  6F73               	movwf	(??__doprnt+1)& (0+255),b
 22149  002764  C072  FFF6         	movff	??__doprnt,tblptrl
 22150  002768  C073  FFF7         	movff	??__doprnt+1,tblptrh
 22151  00276C  6AF8               	clrf	tblptru,c
 22152  00276E  0E07               	movlw	(high __ramtop+-1)
 22153  002770  64F7               	cpfsgt	tblptrh,c
 22154  002772  D003               	bra	u7977
 22155  002774  0008               	tblrd		*
 22156  002776  50F5               	movf	tablat,w,c
 22157  002778  D005               	bra	u7970
 22158  00277A                     u7977:
 22159  00277A  CFF6 FFE9          	movff	tblptrl,fsr0l
 22160  00277E  CFF7 FFEA          	movff	tblptrh,fsr0h
 22161  002782  50EF               	movf	indf0,w,c
 22162  002784                     u7970:
 22163  002784  0900               	iorlw	0
 22164  002786  A4D8               	btfss	status,2,c
 22165  002788  D7E4               	goto	l1555
 22166  00278A                     u7980:
 22167                           
 22168                           ;doprnt.c: 757: if(width > len)
 22169                           
 22170                           ;doprnt.c: 750: dostring:
 22171  00278A  0100               	movlb	0	; () banked
 22172  00278C  517E               	movf	__doprnt@width& (0+255),w,b
 22173  00278E  5D7A               	subwf	__doprnt@len& (0+255),w,b
 22174  002790  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22175  002792  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 22176  002794  B0D8               	btfsc	status,0,c
 22177  002796  D005               	goto	l1558
 22178                           
 22179                           ; BSR set to: 0
 22180                           ;doprnt.c: 758: width -= len;
 22181  002798  517A               	movf	__doprnt@len& (0+255),w,b
 22182  00279A  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22183  00279C  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 22184  00279E  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22185  0027A0  D037               	goto	l1563
 22186  0027A2                     l1558:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;doprnt.c: 759: else
 22190                           ;doprnt.c: 760: width = 0;
 22191                           
 22192                           ; BSR set to: 0
 22193  0027A2  0E00               	movlw	0
 22194  0027A4  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22195  0027A6  0E00               	movlw	0
 22196  0027A8  6F7E               	movwf	__doprnt@width& (0+255),b
 22197                           
 22198                           ; BSR set to: 0
 22199                           ;doprnt.c: 764: while(width--)
 22200  0027AA  D032               	goto	l1563
 22201  0027AC                     l6328:
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22205  0027AC  EE20 F002          	lfsr	2,2
 22206  0027B0  516C               	movf	__doprnt@pb& (0+255),w,b
 22207  0027B2  26D9               	addwf	fsr2l,f,c
 22208  0027B4  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22209  0027B6  22DA               	addwfc	fsr2h,f,c
 22210  0027B8  50DE               	movf	postinc2,w,c
 22211  0027BA  10DE               	iorwf	postinc2,w,c
 22212  0027BC  B4D8               	btfsc	status,2,c
 22213  0027BE  D013               	goto	l1562
 22214                           
 22215                           ; BSR set to: 0
 22216  0027C0  EE20 F002          	lfsr	2,2
 22217  0027C4  516C               	movf	__doprnt@pb& (0+255),w,b
 22218  0027C6  26D9               	addwf	fsr2l,f,c
 22219  0027C8  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22220  0027CA  22DA               	addwfc	fsr2h,f,c
 22221  0027CC  D801               	call	u8018
 22222  0027CE  D020               	goto	l1563
 22223  0027D0                     u8018:
 22224  0027D0  0005               	push	
 22225  0027D2  6EFA               	movwf	pclath,c
 22226  0027D4  50DE               	movf	postinc2,w,c
 22227  0027D6  6EFD               	movwf	tosl,c
 22228  0027D8  50DE               	movf	postinc2,w,c
 22229  0027DA  6EFE               	movwf	tosh,c
 22230  0027DC  50F8               	movf	tblptru,w,c
 22231  0027DE  6EFF               	movwf	tosu,c
 22232  0027E0  50FA               	movf	pclath,w,c
 22233  0027E2  0E20               	movlw	32
 22234  0027E4  0012               	return		;indir
 22235  0027E6                     l1562:
 22236  0027E6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22237  0027EA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22238  0027EE  CFDE F072          	movff	postinc2,??__doprnt
 22239  0027F2  CFDD F073          	movff	postdec2,??__doprnt+1
 22240  0027F6  C072  FFD9         	movff	??__doprnt,fsr2l
 22241  0027FA  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22242  0027FE  0E20               	movlw	32
 22243  002800  6EDF               	movwf	indf2,c
 22244  002802  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22245  002806  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22246  00280A  2ADE               	incf	postinc2,f,c
 22247  00280C  0E00               	movlw	0
 22248  00280E  22DD               	addwfc	postdec2,f,c
 22249  002810                     l1563:
 22250  002810  0100               	movlb	0	; () banked
 22251  002812  077E               	decf	__doprnt@width& (0+255),f,b
 22252  002814  A0D8               	btfss	status,0,c
 22253  002816  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22254  002818  297E               	incf	__doprnt@width& (0+255),w,b
 22255  00281A  E1C8               	bnz	l6328
 22256  00281C  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 22257  00281E  B4D8               	btfsc	status,2,c
 22258  002820  D058               	goto	l1568
 22259  002822  D7C4               	goto	l1561
 22260  002824                     l6338:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 22264  002824  EE20 F002          	lfsr	2,2
 22265  002828  516C               	movf	__doprnt@pb& (0+255),w,b
 22266  00282A  26D9               	addwf	fsr2l,f,c
 22267  00282C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22268  00282E  22DA               	addwfc	fsr2h,f,c
 22269  002830  50DE               	movf	postinc2,w,c
 22270  002832  10DE               	iorwf	postinc2,w,c
 22271  002834  B4D8               	btfsc	status,2,c
 22272  002836  D026               	goto	l1567
 22273                           
 22274                           ; BSR set to: 0
 22275  002838  EE20 F002          	lfsr	2,2
 22276  00283C  516C               	movf	__doprnt@pb& (0+255),w,b
 22277  00283E  26D9               	addwf	fsr2l,f,c
 22278  002840  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22279  002842  22DA               	addwfc	fsr2h,f,c
 22280  002844  D801               	call	u8048
 22281  002846  D01A               	goto	u8049
 22282  002848                     u8048:
 22283  002848  0005               	push	
 22284  00284A  6EFA               	movwf	pclath,c
 22285  00284C  50DE               	movf	postinc2,w,c
 22286  00284E  6EFD               	movwf	tosl,c
 22287  002850  50DE               	movf	postinc2,w,c
 22288  002852  6EFE               	movwf	tosh,c
 22289  002854  50F8               	movf	tblptru,w,c
 22290  002856  6EFF               	movwf	tosu,c
 22291  002858  50FA               	movf	pclath,w,c
 22292  00285A  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22293  00285E  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22294  002862  6AF8               	clrf	tblptru,c
 22295  002864  0E07               	movlw	(high __ramtop+-1)
 22296  002866  64F7               	cpfsgt	tblptrh,c
 22297  002868  D003               	bra	u8057
 22298  00286A  0008               	tblrd		*
 22299  00286C  50F5               	movf	tablat,w,c
 22300  00286E  D005               	bra	u8050
 22301  002870                     u8057:
 22302  002870  CFF6 FFE9          	movff	tblptrl,fsr0l
 22303  002874  CFF7 FFEA          	movff	tblptrh,fsr0h
 22304  002878  50EF               	movf	indf0,w,c
 22305  00287A                     u8050:
 22306  00287A  0012               	return		;indir
 22307  00287C                     u8049:
 22308  00287C  0100               	movlb	0	; () banked
 22309  00287E  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22310  002880  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22311  002882  D027               	goto	l1568
 22312  002884                     l1567:
 22313                           
 22314                           ; BSR set to: 0
 22315                           
 22316                           ; BSR set to: 0
 22317  002884  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 22318  002888  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 22319  00288C  6AF8               	clrf	tblptru,c
 22320  00288E  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22321  002892  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22322  002896  CFDE F072          	movff	postinc2,??__doprnt
 22323  00289A  CFDD F073          	movff	postdec2,??__doprnt+1
 22324  00289E  C072  FFD9         	movff	??__doprnt,fsr2l
 22325  0028A2  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22326  0028A6  0E07               	movlw	(high __ramtop+-1)
 22327  0028A8  64F7               	cpfsgt	tblptrh,c
 22328  0028AA  D003               	bra	u8067
 22329  0028AC  0008               	tblrd		*
 22330  0028AE  50F5               	movf	tablat,w,c
 22331  0028B0  D005               	bra	u8060
 22332  0028B2                     u8067:
 22333  0028B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22334  0028B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22335  0028BA  50EF               	movf	indf0,w,c
 22336  0028BC                     u8060:
 22337  0028BC  6EDF               	movwf	indf2,c
 22338  0028BE  0100               	movlb	0	; () banked
 22339  0028C0  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 22340  0028C2  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 22341                           
 22342                           ; BSR set to: 0
 22343  0028C4  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22344  0028C8  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22345  0028CC  2ADE               	incf	postinc2,f,c
 22346  0028CE  0E00               	movlw	0
 22347  0028D0  22DD               	addwfc	postdec2,f,c
 22348  0028D2                     l1568:
 22349                           
 22350                           ; BSR set to: 0
 22351                           
 22352                           ; BSR set to: 0
 22353                           
 22354                           ; BSR set to: 0
 22355  0028D2  077A               	decf	__doprnt@len& (0+255),f,b
 22356  0028D4  A0D8               	btfss	status,0,c
 22357  0028D6  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 22358  0028D8  297A               	incf	__doprnt@len& (0+255),w,b
 22359  0028DA  E1A4               	bnz	l6338
 22360  0028DC  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 22361  0028DE  B4D8               	btfsc	status,2,c
 22362  0028E0  D163               	goto	u8240
 22363  0028E2  D7A0               	goto	l1566
 22364  0028E4                     
 22365                           ; BSR set to: 0
 22366                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 22367                           
 22368                           ; BSR set to: 0
 22369  0028E4  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22370  0028E8  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22371  0028EC  CFDF F072          	movff	indf2,??__doprnt
 22372  0028F0  0E02               	movlw	2
 22373  0028F2  26DE               	addwf	postinc2,f,c
 22374  0028F4  CFDF F073          	movff	indf2,??__doprnt+1
 22375  0028F8  0E00               	movlw	0
 22376  0028FA  22DD               	addwfc	postdec2,f,c
 22377  0028FC  C072  FFD9         	movff	??__doprnt,fsr2l
 22378  002900  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22379  002904  50DF               	movf	indf2,w,c
 22380  002906  6F80               	movwf	__doprnt@c& (0+255),b
 22381  002908                     
 22382                           ; BSR set to: 0
 22383                           ;doprnt.c: 805: cp = (char *)&c;
 22384                           
 22385                           ; BSR set to: 0
 22386  002908  0E80               	movlw	low __doprnt@c
 22387  00290A  6F7C               	movwf	__doprnt@cp& (0+255),b
 22388  00290C  0E00               	movlw	high __doprnt@c
 22389  00290E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;doprnt.c: 806: len = 1;
 22393  002910  0E00               	movlw	0
 22394  002912  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 22395  002914  0E01               	movlw	1
 22396  002916  6F7A               	movwf	__doprnt@len& (0+255),b
 22397                           
 22398                           ;doprnt.c: 807: goto dostring;
 22399  002918  D738               	goto	u7980
 22400  00291A                     l1546:
 22401                           
 22402                           ; BSR set to: 0
 22403  00291A  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22404  00291E  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22405  002922  0100               	movlb	0	; () banked
 22406  002924  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22407  002926  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22408  002928                     	if	0	;tblptru may be non-zero
 22409  002928                     	endif
 22410  002928                     	if	0	;tblptru may be non-zero
 22411  002928                     	endif
 22412  002928  0008               	tblrd		*
 22413  00292A  CFF5 F080          	movff	tablat,__doprnt@c
 22414  00292E  5180               	movf	__doprnt@c& (0+255),w,b
 22415                           
 22416                           ; Switch size 1, requested type "space"
 22417                           ; Number of cases is 5, Range of values is 0 to 115
 22418                           ; switch strategies available:
 22419                           ; Name         Instructions Cycles
 22420                           ; simple_byte           16     9 (average)
 22421                           ;	Chosen strategy is simple_byte
 22422  002930  0A00               	xorlw	0	; case 0
 22423  002932  B4D8               	btfsc	status,2,c
 22424  002934  D146               	goto	u8250
 22425  002936  0A63               	xorlw	99	; case 99
 22426  002938  B4D8               	btfsc	status,2,c
 22427  00293A  D7D4               	goto	l1570
 22428  00293C  0A07               	xorlw	7	; case 100
 22429  00293E  B4D8               	btfsc	status,2,c
 22430  002940  D007               	goto	l1551
 22431  002942  0A0D               	xorlw	13	; case 105
 22432  002944  B4D8               	btfsc	status,2,c
 22433  002946  D004               	goto	l1551
 22434  002948  0A1A               	xorlw	26	; case 115
 22435  00294A  B4D8               	btfsc	status,2,c
 22436  00294C  D6E0               	goto	l1552
 22437  00294E  D7DC               	goto	l1571
 22438  002950                     l1551:
 22439                           
 22440                           ;doprnt.c: 1253: {
 22441                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 22442                           
 22443                           ; BSR set to: 0
 22444  002950  C070  FFD9         	movff	__doprnt@ap,fsr2l
 22445  002954  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 22446  002958  CFDF F072          	movff	indf2,??__doprnt
 22447  00295C  0E02               	movlw	2
 22448  00295E  26DE               	addwf	postinc2,f,c
 22449  002960  CFDF F073          	movff	indf2,??__doprnt+1
 22450  002964  0E00               	movlw	0
 22451  002966  22DD               	addwfc	postdec2,f,c
 22452  002968  C072  FFD9         	movff	??__doprnt,fsr2l
 22453  00296C  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22454  002970  CFDE F078          	movff	postinc2,__doprnt@val
 22455  002974  CFDD F079          	movff	postdec2,__doprnt@val+1
 22456                           
 22457                           ;doprnt.c: 1261: if((int)val < 0) {
 22458  002978  0100               	movlb	0	; () banked
 22459  00297A  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 22460  00297C  D006               	goto	l1572
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;doprnt.c: 1262: flag |= 0x03;
 22464  00297E  0E03               	movlw	3
 22465  002980  1377               	iorwf	__doprnt@flag& (0+255),f,b
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;doprnt.c: 1263: val = -val;
 22469  002982  6D78               	negf	__doprnt@val& (0+255),b
 22470  002984  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 22471  002986  B0D8               	btfsc	status,0,c
 22472  002988  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 22473  00298A                     l1572:
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;doprnt.c: 1264: }
 22477                           ;doprnt.c: 1266: }
 22478                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22479                           
 22480                           ; BSR set to: 0
 22481  00298A  0E01               	movlw	1
 22482  00298C  6F80               	movwf	__doprnt@c& (0+255),b
 22483  00298E                     l6372:
 22484                           
 22485                           ; BSR set to: 0
 22486  00298E  0E05               	movlw	5
 22487  002990  1980               	xorwf	__doprnt@c& (0+255),w,b
 22488  002992  B4D8               	btfsc	status,2,c
 22489  002994  D012               	goto	u8110
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;doprnt.c: 1306: if(val < dpowers[c])
 22493                           
 22494                           ; BSR set to: 0
 22495                           
 22496                           ; BSR set to: 0
 22497  002996  5180               	movf	__doprnt@c& (0+255),w,b
 22498  002998  0D02               	mullw	2
 22499  00299A  0ECD               	movlw	low _dpowers
 22500  00299C  24F3               	addwf	prodl,w,c
 22501  00299E  6EF6               	movwf	tblptrl,c
 22502  0029A0  0E77               	movlw	high _dpowers
 22503  0029A2  20F4               	addwfc	prodh,w,c
 22504  0029A4  6EF7               	movwf	tblptrh,c
 22505  0029A6                     	if	0	;There are less than 3 active tblptr bytes
 22506  0029A6                     	endif
 22507  0029A6  0009               	tblrd		*+
 22508  0029A8  50F5               	movf	tablat,w,c
 22509  0029AA  5D78               	subwf	__doprnt@val& (0+255),w,b
 22510  0029AC  0009               	tblrd		*+
 22511  0029AE  50F5               	movf	tablat,w,c
 22512  0029B0  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 22513  0029B2  A0D8               	btfss	status,0,c
 22514  0029B4  D002               	goto	u8110
 22515                           
 22516                           ; BSR set to: 0
 22517                           
 22518                           ; BSR set to: 0
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;doprnt.c: 1307: break;
 22522  0029B6  2B80               	incf	__doprnt@c& (0+255),f,b
 22523  0029B8  D7EA               	goto	l6372
 22524  0029BA                     u8110:
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;doprnt.c: 1345: if(width && flag & 0x03)
 22528                           
 22529                           ; BSR set to: 0
 22530  0029BA  517E               	movf	__doprnt@width& (0+255),w,b
 22531  0029BC  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22532  0029BE  B4D8               	btfsc	status,2,c
 22533  0029C0  D009               	goto	l1576
 22534                           
 22535                           ; BSR set to: 0
 22536  0029C2  C077  F072         	movff	__doprnt@flag,??__doprnt
 22537  0029C6  0E03               	movlw	3
 22538  0029C8  1772               	andwf	??__doprnt& (0+255),f,b
 22539  0029CA  B4D8               	btfsc	status,2,c
 22540  0029CC  D003               	goto	l1576
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;doprnt.c: 1346: width--;
 22544  0029CE  077E               	decf	__doprnt@width& (0+255),f,b
 22545  0029D0  A0D8               	btfss	status,0,c
 22546  0029D2  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22547  0029D4                     l1576:
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;doprnt.c: 1381: if(width > c)
 22551                           
 22552                           ; BSR set to: 0
 22553  0029D4  0E80               	movlw	128
 22554  0029D6  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22555  0029D8  0E7F               	movlw	127
 22556  0029DA  6F72               	movwf	??__doprnt& (0+255),b
 22557  0029DC  517E               	movf	__doprnt@width& (0+255),w,b
 22558  0029DE  5D80               	subwf	__doprnt@c& (0+255),w,b
 22559  0029E0  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 22560  0029E2  0A80               	xorlw	128
 22561  0029E4  5972               	subwfb	??__doprnt& (0+255),w,b
 22562  0029E6  B0D8               	btfsc	status,0,c
 22563  0029E8  D007               	goto	l1577
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;doprnt.c: 1382: width -= c;
 22567  0029EA  5180               	movf	__doprnt@c& (0+255),w,b
 22568  0029EC  5F7E               	subwf	__doprnt@width& (0+255),f,b
 22569  0029EE  0E00               	movlw	0
 22570  0029F0  BF80               	btfsc	__doprnt@c& (0+255),7,b
 22571  0029F2  0EFF               	movlw	255
 22572  0029F4  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 22573  0029F6  D004               	goto	l1578
 22574  0029F8                     l1577:
 22575                           
 22576                           ; BSR set to: 0
 22577                           ;doprnt.c: 1383: else
 22578                           ;doprnt.c: 1384: width = 0;
 22579                           
 22580                           ; BSR set to: 0
 22581  0029F8  0E00               	movlw	0
 22582  0029FA  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 22583  0029FC  0E00               	movlw	0
 22584  0029FE  6F7E               	movwf	__doprnt@width& (0+255),b
 22585  002A00                     l1578:
 22586                           
 22587                           ; BSR set to: 0
 22588                           ;doprnt.c: 1422: {
 22589                           ;doprnt.c: 1424: if(width
 22590                           ;doprnt.c: 1428: )
 22591                           
 22592                           ; BSR set to: 0
 22593  002A00  517E               	movf	__doprnt@width& (0+255),w,b
 22594  002A02  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22595  002A04  B4D8               	btfsc	status,2,c
 22596  002A06  D03A               	goto	u8180
 22597  002A08                     u8150:
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 22601                           
 22602                           ; BSR set to: 0
 22603                           
 22604                           ;doprnt.c: 1429: do
 22605  002A08  EE20 F002          	lfsr	2,2
 22606  002A0C  516C               	movf	__doprnt@pb& (0+255),w,b
 22607  002A0E  26D9               	addwf	fsr2l,f,c
 22608  002A10  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22609  002A12  22DA               	addwfc	fsr2h,f,c
 22610  002A14  50DE               	movf	postinc2,w,c
 22611  002A16  10DE               	iorwf	postinc2,w,c
 22612  002A18  B4D8               	btfsc	status,2,c
 22613  002A1A  D013               	goto	l1581
 22614                           
 22615                           ; BSR set to: 0
 22616  002A1C  EE20 F002          	lfsr	2,2
 22617  002A20  516C               	movf	__doprnt@pb& (0+255),w,b
 22618  002A22  26D9               	addwf	fsr2l,f,c
 22619  002A24  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22620  002A26  22DA               	addwfc	fsr2h,f,c
 22621  002A28  D801               	call	u8178
 22622  002A2A  D020               	goto	l1582
 22623  002A2C                     u8178:
 22624  002A2C  0005               	push	
 22625  002A2E  6EFA               	movwf	pclath,c
 22626  002A30  50DE               	movf	postinc2,w,c
 22627  002A32  6EFD               	movwf	tosl,c
 22628  002A34  50DE               	movf	postinc2,w,c
 22629  002A36  6EFE               	movwf	tosh,c
 22630  002A38  50F8               	movf	tblptru,w,c
 22631  002A3A  6EFF               	movwf	tosu,c
 22632  002A3C  50FA               	movf	pclath,w,c
 22633  002A3E  0E20               	movlw	32
 22634  002A40  0012               	return		;indir
 22635  002A42                     l1581:
 22636  002A42  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22637  002A46  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22638  002A4A  CFDE F072          	movff	postinc2,??__doprnt
 22639  002A4E  CFDD F073          	movff	postdec2,??__doprnt+1
 22640  002A52  C072  FFD9         	movff	??__doprnt,fsr2l
 22641  002A56  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22642  002A5A  0E20               	movlw	32
 22643  002A5C  6EDF               	movwf	indf2,c
 22644  002A5E  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22645  002A62  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22646  002A66  2ADE               	incf	postinc2,f,c
 22647  002A68  0E00               	movlw	0
 22648  002A6A  22DD               	addwfc	postdec2,f,c
 22649  002A6C                     l1582:
 22650                           
 22651                           ;doprnt.c: 1431: while(--width);
 22652  002A6C  0100               	movlb	0	; () banked
 22653  002A6E  077E               	decf	__doprnt@width& (0+255),f,b
 22654  002A70  A0D8               	btfss	status,0,c
 22655  002A72  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 22656  002A74  517E               	movf	__doprnt@width& (0+255),w,b
 22657  002A76  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 22658  002A78  A4D8               	btfss	status,2,c
 22659  002A7A  D7C6               	goto	u8150
 22660  002A7C                     u8180:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;doprnt.c: 1438: if(flag & 0x03)
 22664                           
 22665                           ; BSR set to: 0
 22666                           
 22667                           ; BSR set to: 0
 22668  002A7C  C077  F072         	movff	__doprnt@flag,??__doprnt
 22669  002A80  0E03               	movlw	3
 22670  002A82  1772               	andwf	??__doprnt& (0+255),f,b
 22671  002A84  B4D8               	btfsc	status,2,c
 22672  002A86  D032               	goto	l1586
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 22676  002A88  EE20 F002          	lfsr	2,2
 22677  002A8C  516C               	movf	__doprnt@pb& (0+255),w,b
 22678  002A8E  26D9               	addwf	fsr2l,f,c
 22679  002A90  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22680  002A92  22DA               	addwfc	fsr2h,f,c
 22681  002A94  50DE               	movf	postinc2,w,c
 22682  002A96  10DE               	iorwf	postinc2,w,c
 22683  002A98  B4D8               	btfsc	status,2,c
 22684  002A9A  D013               	goto	l1585
 22685                           
 22686                           ; BSR set to: 0
 22687  002A9C  EE20 F002          	lfsr	2,2
 22688  002AA0  516C               	movf	__doprnt@pb& (0+255),w,b
 22689  002AA2  26D9               	addwf	fsr2l,f,c
 22690  002AA4  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22691  002AA6  22DA               	addwfc	fsr2h,f,c
 22692  002AA8  D801               	call	u8218
 22693  002AAA  D020               	goto	l1586
 22694  002AAC                     u8218:
 22695  002AAC  0005               	push	
 22696  002AAE  6EFA               	movwf	pclath,c
 22697  002AB0  50DE               	movf	postinc2,w,c
 22698  002AB2  6EFD               	movwf	tosl,c
 22699  002AB4  50DE               	movf	postinc2,w,c
 22700  002AB6  6EFE               	movwf	tosh,c
 22701  002AB8  50F8               	movf	tblptru,w,c
 22702  002ABA  6EFF               	movwf	tosu,c
 22703  002ABC  50FA               	movf	pclath,w,c
 22704  002ABE  0E2D               	movlw	45
 22705  002AC0  0012               	return		;indir
 22706  002AC2                     l1585:
 22707  002AC2  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22708  002AC6  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22709  002ACA  CFDE F072          	movff	postinc2,??__doprnt
 22710  002ACE  CFDD F073          	movff	postdec2,??__doprnt+1
 22711  002AD2  C072  FFD9         	movff	??__doprnt,fsr2l
 22712  002AD6  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22713  002ADA  0E2D               	movlw	45
 22714  002ADC  6EDF               	movwf	indf2,c
 22715  002ADE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22716  002AE2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22717  002AE6  2ADE               	incf	postinc2,f,c
 22718  002AE8  0E00               	movlw	0
 22719  002AEA  22DD               	addwfc	postdec2,f,c
 22720  002AEC                     l1586:
 22721                           
 22722                           ;doprnt.c: 1469: }
 22723                           ;doprnt.c: 1472: prec = c;
 22724  002AEC  C080  F076         	movff	__doprnt@c,__doprnt@prec
 22725                           
 22726                           ;doprnt.c: 1474: while(prec--) {
 22727  002AF0  D056               	goto	l1590
 22728  002AF2                     
 22729                           ;doprnt.c: 1478: {
 22730                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22731  002AF2  0100               	movlb	0	; () banked
 22732  002AF4  5176               	movf	__doprnt@prec& (0+255),w,b
 22733  002AF6  0D02               	mullw	2
 22734  002AF8  0ECD               	movlw	low _dpowers
 22735  002AFA  24F3               	addwf	prodl,w,c
 22736  002AFC  6EF6               	movwf	tblptrl,c
 22737  002AFE  0E77               	movlw	high _dpowers
 22738  002B00  20F4               	addwfc	prodh,w,c
 22739  002B02  6EF7               	movwf	tblptrh,c
 22740  002B04                     	if	0	;There are less than 3 active tblptr bytes
 22741  002B04                     	endif
 22742  002B04  0009               	tblrd		*+
 22743  002B06  CFF5 F062          	movff	tablat,___lwdiv@divisor
 22744  002B0A  000A               	tblrd		*-
 22745  002B0C  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 22746  002B10  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 22747  002B14  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 22748  002B18  EC9C  F02C         	call	___lwdiv
 22749  002B1C  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 22750  002B20  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 22751  002B24  0E00               	movlw	0
 22752  002B26  0100               	movlb	0	; () banked
 22753  002B28  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 22754  002B2A  0E0A               	movlw	10
 22755  002B2C  6F69               	movwf	___lwmod@divisor& (0+255),b
 22756  002B2E  EC35  F02D         	call	___lwmod	;wreg free
 22757  002B32  0100               	movlb	0	; () banked
 22758  002B34  5167               	movf	?___lwmod& (0+255),w,b
 22759  002B36  0F30               	addlw	48
 22760  002B38  6F80               	movwf	__doprnt@c& (0+255),b
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;doprnt.c: 1523: }
 22764                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 22765  002B3A  EE20 F002          	lfsr	2,2
 22766  002B3E  516C               	movf	__doprnt@pb& (0+255),w,b
 22767  002B40  26D9               	addwf	fsr2l,f,c
 22768  002B42  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22769  002B44  22DA               	addwfc	fsr2h,f,c
 22770  002B46  50DE               	movf	postinc2,w,c
 22771  002B48  10DE               	iorwf	postinc2,w,c
 22772  002B4A  B4D8               	btfsc	status,2,c
 22773  002B4C  D013               	goto	l1589
 22774                           
 22775                           ; BSR set to: 0
 22776  002B4E  EE20 F002          	lfsr	2,2
 22777  002B52  516C               	movf	__doprnt@pb& (0+255),w,b
 22778  002B54  26D9               	addwf	fsr2l,f,c
 22779  002B56  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 22780  002B58  22DA               	addwfc	fsr2h,f,c
 22781  002B5A  D801               	call	u8238
 22782  002B5C  D020               	goto	l1590
 22783  002B5E                     u8238:
 22784  002B5E  0005               	push	
 22785  002B60  6EFA               	movwf	pclath,c
 22786  002B62  50DE               	movf	postinc2,w,c
 22787  002B64  6EFD               	movwf	tosl,c
 22788  002B66  50DE               	movf	postinc2,w,c
 22789  002B68  6EFE               	movwf	tosh,c
 22790  002B6A  50F8               	movf	tblptru,w,c
 22791  002B6C  6EFF               	movwf	tosu,c
 22792  002B6E  50FA               	movf	pclath,w,c
 22793  002B70  5180               	movf	__doprnt@c& (0+255),w,b
 22794  002B72  0012               	return		;indir
 22795  002B74                     l1589:
 22796  002B74  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22797  002B78  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22798  002B7C  CFDE F072          	movff	postinc2,??__doprnt
 22799  002B80  CFDD F073          	movff	postdec2,??__doprnt+1
 22800  002B84  C072  FFD9         	movff	??__doprnt,fsr2l
 22801  002B88  C073  FFDA         	movff	??__doprnt+1,fsr2h
 22802  002B8C  C080  FFDF         	movff	__doprnt@c,indf2
 22803  002B90  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 22804  002B94  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 22805  002B98  2ADE               	incf	postinc2,f,c
 22806  002B9A  0E00               	movlw	0
 22807  002B9C  22DD               	addwfc	postdec2,f,c
 22808  002B9E                     l1590:
 22809  002B9E  0100               	movlb	0	; () banked
 22810  002BA0  0776               	decf	__doprnt@prec& (0+255),f,b
 22811  002BA2  2976               	incf	__doprnt@prec& (0+255),w,b
 22812  002BA4  A4D8               	btfss	status,2,c
 22813  002BA6  D7A5               	goto	l1588
 22814  002BA8                     u8240:
 22815                           
 22816                           ; BSR set to: 0
 22817                           
 22818                           ; BSR set to: 0
 22819  002BA8  C06E  FFF6         	movff	__doprnt@f,tblptrl
 22820  002BAC  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 22821  002BB0  0100               	movlb	0	; () banked
 22822  002BB2  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 22823  002BB4  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 22824  002BB6                     	if	0	;tblptru may be non-zero
 22825  002BB6                     	endif
 22826  002BB6                     	if	0	;tblptru may be non-zero
 22827  002BB6                     	endif
 22828  002BB6  0008               	tblrd		*
 22829  002BB8  CFF5 F080          	movff	tablat,__doprnt@c
 22830  002BBC  5180               	movf	__doprnt@c& (0+255),w,b
 22831  002BBE  A4D8               	btfss	status,2,c
 22832  002BC0  D527               	goto	l1539
 22833  002BC2                     u8250:
 22834                           
 22835                           ;doprnt.c: 1540: return 0;
 22836                           
 22837                           ; BSR set to: 0
 22838                           
 22839                           ;doprnt.c: 1525: }
 22840                           ;doprnt.c: 1533: }
 22841                           ;doprnt.c: 1535: alldone:
 22842                           
 22843                           ; BSR set to: 0
 22844  002BC2  0E00               	movlw	0
 22845  002BC4  0100               	movlb	0	; () banked
 22846  002BC6  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 22847  002BC8  0E00               	movlw	0
 22848  002BCA  6F6C               	movwf	?__doprnt& (0+255),b
 22849  002BCC  0012               	return	
 22850  002BCE                     __end_of__doprnt:
 22851                           	opt stack 0
 22852                           tosu	equ	0xFFF
 22853                           tosh	equ	0xFFE
 22854                           tosl	equ	0xFFD
 22855                           pclath	equ	0xFFA
 22856                           tblptru	equ	0xFF8
 22857                           tblptrh	equ	0xFF7
 22858                           tblptrl	equ	0xFF6
 22859                           tablat	equ	0xFF5
 22860                           prodh	equ	0xFF4
 22861                           prodl	equ	0xFF3
 22862                           intcon	equ	0xFF2
 22863                           intcon2	equ	0xFF1
 22864                           intcon3	equ	0xFF0
 22865                           indf0	equ	0xFEF
 22866                           postinc0	equ	0xFEE
 22867                           fsr0h	equ	0xFEA
 22868                           fsr0l	equ	0xFE9
 22869                           wreg	equ	0xFE8
 22870                           indf1	equ	0xFE7
 22871                           postdec1	equ	0xFE5
 22872                           fsr1h	equ	0xFE2
 22873                           fsr1l	equ	0xFE1
 22874                           indf2	equ	0xFDF
 22875                           postinc2	equ	0xFDE
 22876                           postdec2	equ	0xFDD
 22877                           fsr2h	equ	0xFDA
 22878                           fsr2l	equ	0xFD9
 22879                           status	equ	0xFD8
 22880                           
 22881 ;; *************** function _putch *****************
 22882 ;; Defined at:
 22883 ;;		line 36 in file "src/USART.h"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  c               1    wreg     unsigned char 
 22886 ;; Auto vars:     Size  Location     Type
 22887 ;;  c               1    0[BANK0 ] unsigned char 
 22888 ;; Return value:  Size  Location     Type
 22889 ;;                  1    wreg      void 
 22890 ;; Registers used:
 22891 ;;		wreg
 22892 ;; Tracked objects:
 22893 ;;		On entry : 0/0
 22894 ;;		On exit  : 0/0
 22895 ;;		Unchanged: 0/0
 22896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22897 ;;      Params:         0       0       0       0       0       0       0       0       0
 22898 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22900 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22901 ;;Total ram usage:        1 bytes
 22902 ;; Hardware stack levels used:    1
 22903 ;; Hardware stack levels required when called:    6
 22904 ;; This function calls:
 22905 ;;		Nothing
 22906 ;; This function is called by:
 22907 ;;		_printf
 22908 ;;		__doprnt
 22909 ;; This function uses a non-reentrant model
 22910 ;;
 22911                           
 22912                           	psect	text49
 22913  005ECE                     __ptext49:
 22914                           	opt stack 0
 22915  005ECE                     _putch:
 22916                           	opt stack 22
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;incstack = 0
 22920                           ;putch@c stored from wreg
 22921  005ECE  0100               	movlb	0	; () banked
 22922  005ED0  6F60               	movwf	putch@c& (0+255),b
 22923  005ED2                     
 22924                           ;USART.h: 38: while (!TXSTAbits.TRMT);
 22925  005ED2  A2AC               	btfss	4012,1,c	;volatile
 22926  005ED4  D7FE               	goto	l6164
 22927                           
 22928                           ;USART.h: 39: TXREG = c;
 22929  005ED6  C060  FFAD         	movff	putch@c,4013	;volatile
 22930  005EDA  0012               	return		;funcret
 22931  005EDC                     __end_of_putch:
 22932                           	opt stack 0
 22933                           tosu	equ	0xFFF
 22934                           tosh	equ	0xFFE
 22935                           tosl	equ	0xFFD
 22936                           pclath	equ	0xFFA
 22937                           tblptru	equ	0xFF8
 22938                           tblptrh	equ	0xFF7
 22939                           tblptrl	equ	0xFF6
 22940                           tablat	equ	0xFF5
 22941                           prodh	equ	0xFF4
 22942                           prodl	equ	0xFF3
 22943                           intcon	equ	0xFF2
 22944                           intcon2	equ	0xFF1
 22945                           intcon3	equ	0xFF0
 22946                           indf0	equ	0xFEF
 22947                           postinc0	equ	0xFEE
 22948                           fsr0h	equ	0xFEA
 22949                           fsr0l	equ	0xFE9
 22950                           wreg	equ	0xFE8
 22951                           indf1	equ	0xFE7
 22952                           postdec1	equ	0xFE5
 22953                           fsr1h	equ	0xFE2
 22954                           fsr1l	equ	0xFE1
 22955                           indf2	equ	0xFDF
 22956                           postinc2	equ	0xFDE
 22957                           postdec2	equ	0xFDD
 22958                           fsr2h	equ	0xFDA
 22959                           fsr2l	equ	0xFD9
 22960                           status	equ	0xFD8
 22961                           
 22962 ;; *************** function _isdigit *****************
 22963 ;; Defined at:
 22964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 22965 ;; Parameters:    Size  Location     Type
 22966 ;;  c               1    wreg     unsigned char 
 22967 ;; Auto vars:     Size  Location     Type
 22968 ;;  c               1    2[BANK0 ] unsigned char 
 22969 ;; Return value:  Size  Location     Type
 22970 ;;		None               void
 22971 ;; Registers used:
 22972 ;;		wreg, status,2, status,0
 22973 ;; Tracked objects:
 22974 ;;		On entry : 0/0
 22975 ;;		On exit  : 0/0
 22976 ;;		Unchanged: 0/0
 22977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22978 ;;      Params:         0       0       0       0       0       0       0       0       0
 22979 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22980 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22981 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22982 ;;Total ram usage:        3 bytes
 22983 ;; Hardware stack levels used:    1
 22984 ;; Hardware stack levels required when called:    6
 22985 ;; This function calls:
 22986 ;;		Nothing
 22987 ;; This function is called by:
 22988 ;;		__doprnt
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text50
 22993  005E18                     __ptext50:
 22994                           	opt stack 0
 22995  005E18                     _isdigit:
 22996                           	opt stack 22
 22997                           
 22998                           ;incstack = 0
 22999                           ;isdigit@c stored from wreg
 23000  005E18  0100               	movlb	0	; () banked
 23001  005E1A  6F62               	movwf	isdigit@c& (0+255),b
 23002  005E1C  0E00               	movlw	0
 23003  005E1E  0100               	movlb	0	; () banked
 23004  005E20  6F61               	movwf	_isdigit$1991& (0+255),b
 23005                           
 23006                           ; BSR set to: 0
 23007  005E22  0E3A               	movlw	58
 23008  005E24  6162               	cpfslt	isdigit@c& (0+255),b
 23009  005E26  D005               	goto	l1923
 23010                           
 23011                           ; BSR set to: 0
 23012  005E28  0E2F               	movlw	47
 23013  005E2A  6562               	cpfsgt	isdigit@c& (0+255),b
 23014  005E2C  D002               	goto	l1923
 23015                           
 23016                           ; BSR set to: 0
 23017  005E2E  0E01               	movlw	1
 23018  005E30  6F61               	movwf	_isdigit$1991& (0+255),b
 23019  005E32                     l1923:
 23020                           
 23021                           ; BSR set to: 0
 23022                           
 23023                           ; BSR set to: 0
 23024  005E32  C061  F060         	movff	_isdigit$1991,??_isdigit
 23025  005E36  3160               	rrcf	??_isdigit& (0+255),w,b
 23026  005E38  0012               	return	
 23027  005E3A                     __end_of_isdigit:
 23028                           	opt stack 0
 23029                           tosu	equ	0xFFF
 23030                           tosh	equ	0xFFE
 23031                           tosl	equ	0xFFD
 23032                           pclath	equ	0xFFA
 23033                           tblptru	equ	0xFF8
 23034                           tblptrh	equ	0xFF7
 23035                           tblptrl	equ	0xFF6
 23036                           tablat	equ	0xFF5
 23037                           prodh	equ	0xFF4
 23038                           prodl	equ	0xFF3
 23039                           intcon	equ	0xFF2
 23040                           intcon2	equ	0xFF1
 23041                           intcon3	equ	0xFF0
 23042                           indf0	equ	0xFEF
 23043                           postinc0	equ	0xFEE
 23044                           fsr0h	equ	0xFEA
 23045                           fsr0l	equ	0xFE9
 23046                           wreg	equ	0xFE8
 23047                           indf1	equ	0xFE7
 23048                           postdec1	equ	0xFE5
 23049                           fsr1h	equ	0xFE2
 23050                           fsr1l	equ	0xFE1
 23051                           indf2	equ	0xFDF
 23052                           postinc2	equ	0xFDE
 23053                           postdec2	equ	0xFDD
 23054                           fsr2h	equ	0xFDA
 23055                           fsr2l	equ	0xFD9
 23056                           status	equ	0xFD8
 23057                           
 23058 ;; *************** function ___wmul *****************
 23059 ;; Defined at:
 23060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 23061 ;; Parameters:    Size  Location     Type
 23062 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23063 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;  product         2    4[BANK0 ] unsigned int 
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  2    0[BANK0 ] unsigned int 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0, prodl, prodh
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23075 ;;      Params:         0       4       0       0       0       0       0       0       0
 23076 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23078 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23079 ;;Total ram usage:        6 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:    6
 23082 ;; This function calls:
 23083 ;;		Nothing
 23084 ;; This function is called by:
 23085 ;;		_enviaDadosWifi
 23086 ;;		_main
 23087 ;;		__doprnt
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text51
 23092  005D58                     __ptext51:
 23093                           	opt stack 0
 23094  005D58                     ___wmul:
 23095                           	opt stack 22
 23096                           
 23097                           ; BSR set to: 0
 23098                           ;incstack = 0
 23099  005D58  0100               	movlb	0	; () banked
 23100  005D5A  5160               	movf	___wmul@multiplier& (0+255),w,b
 23101  005D5C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23102  005D5E  CFF3 F064          	movff	prodl,___wmul@product
 23103  005D62  CFF4 F065          	movff	prodh,___wmul@product+1
 23104  005D66  5160               	movf	___wmul@multiplier& (0+255),w,b
 23105  005D68  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23106  005D6A  50F3               	movf	prodl,w,c
 23107  005D6C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23108  005D6E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23109  005D70  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23110  005D72  50F3               	movf	prodl,w,c
 23111  005D74  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23112                           
 23113                           ; BSR set to: 0
 23114  005D76  C064  F060         	movff	___wmul@product,?___wmul
 23115  005D7A  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23116  005D7E  0012               	return	
 23117  005D80                     __end_of___wmul:
 23118                           	opt stack 0
 23119                           tosu	equ	0xFFF
 23120                           tosh	equ	0xFFE
 23121                           tosl	equ	0xFFD
 23122                           pclath	equ	0xFFA
 23123                           tblptru	equ	0xFF8
 23124                           tblptrh	equ	0xFF7
 23125                           tblptrl	equ	0xFF6
 23126                           tablat	equ	0xFF5
 23127                           prodh	equ	0xFF4
 23128                           prodl	equ	0xFF3
 23129                           intcon	equ	0xFF2
 23130                           intcon2	equ	0xFF1
 23131                           intcon3	equ	0xFF0
 23132                           indf0	equ	0xFEF
 23133                           postinc0	equ	0xFEE
 23134                           fsr0h	equ	0xFEA
 23135                           fsr0l	equ	0xFE9
 23136                           wreg	equ	0xFE8
 23137                           indf1	equ	0xFE7
 23138                           postdec1	equ	0xFE5
 23139                           fsr1h	equ	0xFE2
 23140                           fsr1l	equ	0xFE1
 23141                           indf2	equ	0xFDF
 23142                           postinc2	equ	0xFDE
 23143                           postdec2	equ	0xFDD
 23144                           fsr2h	equ	0xFDA
 23145                           fsr2l	equ	0xFD9
 23146                           status	equ	0xFD8
 23147                           
 23148 ;; *************** function ___lwmod *****************
 23149 ;; Defined at:
 23150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;  dividend        2    7[BANK0 ] unsigned int 
 23153 ;;  divisor         2    9[BANK0 ] unsigned int 
 23154 ;; Auto vars:     Size  Location     Type
 23155 ;;  counter         1   11[BANK0 ] unsigned char 
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  2    7[BANK0 ] unsigned int 
 23158 ;; Registers used:
 23159 ;;		wreg, status,2, status,0
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23165 ;;      Params:         0       4       0       0       0       0       0       0       0
 23166 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23168 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23169 ;;Total ram usage:        5 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:    6
 23172 ;; This function calls:
 23173 ;;		Nothing
 23174 ;; This function is called by:
 23175 ;;		__doprnt
 23176 ;; This function uses a non-reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text52
 23180  005A6A                     __ptext52:
 23181                           	opt stack 0
 23182  005A6A                     ___lwmod:
 23183                           	opt stack 22
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;incstack = 0
 23187  005A6A  0100               	movlb	0	; () banked
 23188  005A6C  5169               	movf	___lwmod@divisor& (0+255),w,b
 23189  005A6E  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 23190  005A70  B4D8               	btfsc	status,2,c
 23191  005A72  D018               	goto	l2017
 23192                           
 23193                           ; BSR set to: 0
 23194  005A74  0E01               	movlw	1
 23195  005A76  6F6B               	movwf	___lwmod@counter& (0+255),b
 23196  005A78  D004               	goto	l2012
 23197  005A7A                     
 23198                           ; BSR set to: 0
 23199                           
 23200                           ; BSR set to: 0
 23201  005A7A  90D8               	bcf	status,0,c
 23202  005A7C  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 23203  005A7E  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 23204  005A80  2B6B               	incf	___lwmod@counter& (0+255),f,b
 23205  005A82                     l2012:
 23206                           
 23207                           ; BSR set to: 0
 23208                           
 23209                           ; BSR set to: 0
 23210  005A82  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 23211  005A84  D7FA               	goto	l2013
 23212  005A86                     u7790:
 23213                           
 23214                           ; BSR set to: 0
 23215                           
 23216                           ; BSR set to: 0
 23217                           
 23218                           ; BSR set to: 0
 23219  005A86  5169               	movf	___lwmod@divisor& (0+255),w,b
 23220  005A88  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 23221  005A8A  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23222  005A8C  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 23223  005A8E  A0D8               	btfss	status,0,c
 23224  005A90  D004               	goto	l2016
 23225                           
 23226                           ; BSR set to: 0
 23227  005A92  5169               	movf	___lwmod@divisor& (0+255),w,b
 23228  005A94  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 23229  005A96  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 23230  005A98  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 23231  005A9A                     l2016:
 23232                           
 23233                           ; BSR set to: 0
 23234                           
 23235                           ; BSR set to: 0
 23236  005A9A  90D8               	bcf	status,0,c
 23237  005A9C  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 23238  005A9E  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 23239                           
 23240                           ; BSR set to: 0
 23241  005AA0  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 23242  005AA2  D7F1               	goto	u7790
 23243  005AA4                     l2017:
 23244                           
 23245                           ; BSR set to: 0
 23246                           
 23247                           ; BSR set to: 0
 23248  005AA4  C067  F067         	movff	___lwmod@dividend,?___lwmod
 23249  005AA8  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 23250                           
 23251                           ; BSR set to: 0
 23252  005AAC  0012               	return		;funcret
 23253  005AAE                     __end_of___lwmod:
 23254                           	opt stack 0
 23255                           tosu	equ	0xFFF
 23256                           tosh	equ	0xFFE
 23257                           tosl	equ	0xFFD
 23258                           pclath	equ	0xFFA
 23259                           tblptru	equ	0xFF8
 23260                           tblptrh	equ	0xFF7
 23261                           tblptrl	equ	0xFF6
 23262                           tablat	equ	0xFF5
 23263                           prodh	equ	0xFF4
 23264                           prodl	equ	0xFF3
 23265                           intcon	equ	0xFF2
 23266                           intcon2	equ	0xFF1
 23267                           intcon3	equ	0xFF0
 23268                           indf0	equ	0xFEF
 23269                           postinc0	equ	0xFEE
 23270                           fsr0h	equ	0xFEA
 23271                           fsr0l	equ	0xFE9
 23272                           wreg	equ	0xFE8
 23273                           indf1	equ	0xFE7
 23274                           postdec1	equ	0xFE5
 23275                           fsr1h	equ	0xFE2
 23276                           fsr1l	equ	0xFE1
 23277                           indf2	equ	0xFDF
 23278                           postinc2	equ	0xFDE
 23279                           postdec2	equ	0xFDD
 23280                           fsr2h	equ	0xFDA
 23281                           fsr2l	equ	0xFD9
 23282                           status	equ	0xFD8
 23283                           
 23284 ;; *************** function ___lwdiv *****************
 23285 ;; Defined at:
 23286 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 23287 ;; Parameters:    Size  Location     Type
 23288 ;;  dividend        2    0[BANK0 ] unsigned int 
 23289 ;;  divisor         2    2[BANK0 ] unsigned int 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;  quotient        2    4[BANK0 ] unsigned int 
 23292 ;;  counter         1    6[BANK0 ] unsigned char 
 23293 ;; Return value:  Size  Location     Type
 23294 ;;                  2    0[BANK0 ] unsigned int 
 23295 ;; Registers used:
 23296 ;;		wreg, status,2, status,0
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/0
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23302 ;;      Params:         0       4       0       0       0       0       0       0       0
 23303 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23305 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23306 ;;Total ram usage:        7 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:    6
 23309 ;; This function calls:
 23310 ;;		Nothing
 23311 ;; This function is called by:
 23312 ;;		__doprnt
 23313 ;; This function uses a non-reentrant model
 23314 ;;
 23315                           
 23316                           	psect	text53
 23317  005938                     __ptext53:
 23318                           	opt stack 0
 23319  005938                     ___lwdiv:
 23320                           	opt stack 22
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;incstack = 0
 23324  005938  0E00               	movlw	0
 23325  00593A  0100               	movlb	0	; () banked
 23326  00593C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 23327  00593E  0E00               	movlw	0
 23328  005940  6F64               	movwf	___lwdiv@quotient& (0+255),b
 23329                           
 23330                           ; BSR set to: 0
 23331  005942  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23332  005944  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 23333  005946  B4D8               	btfsc	status,2,c
 23334  005948  D01C               	goto	l2007
 23335                           
 23336                           ; BSR set to: 0
 23337  00594A  0E01               	movlw	1
 23338  00594C  6F66               	movwf	___lwdiv@counter& (0+255),b
 23339  00594E  D004               	goto	l2002
 23340  005950                     
 23341                           ; BSR set to: 0
 23342                           
 23343                           ; BSR set to: 0
 23344  005950  90D8               	bcf	status,0,c
 23345  005952  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 23346  005954  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 23347  005956  2B66               	incf	___lwdiv@counter& (0+255),f,b
 23348  005958                     l2002:
 23349                           
 23350                           ; BSR set to: 0
 23351                           
 23352                           ; BSR set to: 0
 23353  005958  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 23354  00595A  D7FA               	goto	l2003
 23355  00595C                     u7760:
 23356                           
 23357                           ; BSR set to: 0
 23358                           
 23359                           ; BSR set to: 0
 23360                           
 23361                           ; BSR set to: 0
 23362  00595C  90D8               	bcf	status,0,c
 23363  00595E  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 23364  005960  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 23365                           
 23366                           ; BSR set to: 0
 23367  005962  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23368  005964  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 23369  005966  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23370  005968  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 23371  00596A  A0D8               	btfss	status,0,c
 23372  00596C  D005               	goto	l2006
 23373                           
 23374                           ; BSR set to: 0
 23375  00596E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 23376  005970  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 23377  005972  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 23378  005974  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 23379                           
 23380                           ; BSR set to: 0
 23381  005976  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 23382  005978                     l2006:
 23383                           
 23384                           ; BSR set to: 0
 23385                           
 23386                           ; BSR set to: 0
 23387  005978  90D8               	bcf	status,0,c
 23388  00597A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 23389  00597C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 23390                           
 23391                           ; BSR set to: 0
 23392  00597E  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 23393  005980  D7ED               	goto	u7760
 23394  005982                     l2007:
 23395                           
 23396                           ; BSR set to: 0
 23397                           
 23398                           ; BSR set to: 0
 23399  005982  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 23400  005986  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23401                           
 23402                           ; BSR set to: 0
 23403  00598A  0012               	return		;funcret
 23404  00598C                     __end_of___lwdiv:
 23405                           	opt stack 0
 23406                           tosu	equ	0xFFF
 23407                           tosh	equ	0xFFE
 23408                           tosl	equ	0xFFD
 23409                           pclath	equ	0xFFA
 23410                           tblptru	equ	0xFF8
 23411                           tblptrh	equ	0xFF7
 23412                           tblptrl	equ	0xFF6
 23413                           tablat	equ	0xFF5
 23414                           prodh	equ	0xFF4
 23415                           prodl	equ	0xFF3
 23416                           intcon	equ	0xFF2
 23417                           intcon2	equ	0xFF1
 23418                           intcon3	equ	0xFF0
 23419                           indf0	equ	0xFEF
 23420                           postinc0	equ	0xFEE
 23421                           fsr0h	equ	0xFEA
 23422                           fsr0l	equ	0xFE9
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postdec1	equ	0xFE5
 23426                           fsr1h	equ	0xFE2
 23427                           fsr1l	equ	0xFE1
 23428                           indf2	equ	0xFDF
 23429                           postinc2	equ	0xFDE
 23430                           postdec2	equ	0xFDD
 23431                           fsr2h	equ	0xFDA
 23432                           fsr2l	equ	0xFD9
 23433                           status	equ	0xFD8
 23434                           
 23435 ;; *************** function _atualizaLCD *****************
 23436 ;; Defined at:
 23437 ;;		line 159 in file "src/lcd.h"
 23438 ;; Parameters:    Size  Location     Type
 23439 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 23440 ;;		 -> line1(21), 
 23441 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 23442 ;;		 -> line2(21), 
 23443 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 23444 ;;		 -> line3(21), 
 23445 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 23446 ;;		 -> line4(21), 
 23447 ;; Auto vars:     Size  Location     Type
 23448 ;;  i               1   16[BANK0 ] unsigned char 
 23449 ;; Return value:  Size  Location     Type
 23450 ;;                  1    wreg      void 
 23451 ;; Registers used:
 23452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23453 ;; Tracked objects:
 23454 ;;		On entry : 0/0
 23455 ;;		On exit  : 0/0
 23456 ;;		Unchanged: 0/0
 23457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23458 ;;      Params:         0       8       0       0       0       0       0       0       0
 23459 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23461 ;;      Totals:         0       9       0       0       0       0       0       0       0
 23462 ;;Total ram usage:        9 bytes
 23463 ;; Hardware stack levels used:    1
 23464 ;; Hardware stack levels required when called:    9
 23465 ;; This function calls:
 23466 ;;		_Lcd_Set_Cursor
 23467 ;;		_Lcd_Write_String
 23468 ;; This function is called by:
 23469 ;;		_alterarConfigWifi
 23470 ;;		_main
 23471 ;; This function uses a non-reentrant model
 23472 ;;
 23473                           
 23474                           	psect	text54
 23475  004E2E                     __ptext54:
 23476                           	opt stack 0
 23477  004E2E                     _atualizaLCD:
 23478                           	opt stack 21
 23479                           
 23480                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;incstack = 0
 23484  004E2E  0E01               	movlw	1
 23485  004E30  0100               	movlb	0	; () banked
 23486  004E32  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23487  004E34  0E01               	movlw	1
 23488  004E36  EC7A  F027         	call	_Lcd_Set_Cursor
 23489                           
 23490                           ;lcd.h: 163: Lcd_Write_String(line1);
 23491  004E3A  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 23492  004E3E  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 23493  004E42  EC69  F02E         	call	_Lcd_Write_String	;wreg free
 23494                           
 23495                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 23496  004E46  0E01               	movlw	1
 23497  004E48  0100               	movlb	0	; () banked
 23498  004E4A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23499  004E4C  0E02               	movlw	2
 23500  004E4E  EC7A  F027         	call	_Lcd_Set_Cursor
 23501                           
 23502                           ;lcd.h: 165: Lcd_Write_String(line2);
 23503  004E52  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 23504  004E56  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 23505  004E5A  EC69  F02E         	call	_Lcd_Write_String	;wreg free
 23506                           
 23507                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 23508  004E5E  0E00               	movlw	0
 23509  004E60  0100               	movlb	0	; () banked
 23510  004E62  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23511  004E64  0E03               	movlw	3
 23512  004E66  EC7A  F027         	call	_Lcd_Set_Cursor
 23513                           
 23514                           ;lcd.h: 167: Lcd_Write_String(line3);
 23515  004E6A  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 23516  004E6E  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 23517  004E72  EC69  F02E         	call	_Lcd_Write_String	;wreg free
 23518                           
 23519                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 23520  004E76  0E00               	movlw	0
 23521  004E78  0100               	movlb	0	; () banked
 23522  004E7A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23523  004E7C  0E04               	movlw	4
 23524  004E7E  EC7A  F027         	call	_Lcd_Set_Cursor
 23525                           
 23526                           ;lcd.h: 169: Lcd_Write_String(line4);
 23527  004E82  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 23528  004E86  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 23529  004E8A  EC69  F02E         	call	_Lcd_Write_String	;wreg free
 23530                           
 23531                           ;lcd.h: 171: char i = 0;
 23532  004E8E  0E00               	movlw	0
 23533  004E90  0100               	movlb	0	; () banked
 23534  004E92  6F70               	movwf	atualizaLCD@i& (0+255),b
 23535                           
 23536                           ; BSR set to: 0
 23537                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 23538  004E94  0E00               	movlw	0
 23539  004E96  6F70               	movwf	atualizaLCD@i& (0+255),b
 23540  004E98                     l6694:
 23541                           
 23542                           ; BSR set to: 0
 23543  004E98  0E13               	movlw	19
 23544  004E9A  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 23545  004E9C  D001               	goto	l260
 23546  004E9E  0012               	return	
 23547  004EA0                     l260:
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;lcd.h: 173: line1[i] = ' ';
 23551                           
 23552                           ; BSR set to: 0
 23553  004EA0  5170               	movf	atualizaLCD@i& (0+255),w,b
 23554  004EA2  0D01               	mullw	1
 23555  004EA4  50F3               	movf	prodl,w,c
 23556  004EA6  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 23557  004EA8  6ED9               	movwf	fsr2l,c
 23558  004EAA  50F4               	movf	prodh,w,c
 23559  004EAC  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 23560  004EAE  6EDA               	movwf	fsr2h,c
 23561  004EB0  0E20               	movlw	32
 23562  004EB2  6EDF               	movwf	indf2,c
 23563                           
 23564                           ;lcd.h: 174: line2[i] = ' ';
 23565  004EB4  5170               	movf	atualizaLCD@i& (0+255),w,b
 23566  004EB6  0D01               	mullw	1
 23567  004EB8  50F3               	movf	prodl,w,c
 23568  004EBA  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 23569  004EBC  6ED9               	movwf	fsr2l,c
 23570  004EBE  50F4               	movf	prodh,w,c
 23571  004EC0  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 23572  004EC2  6EDA               	movwf	fsr2h,c
 23573  004EC4  0E20               	movlw	32
 23574  004EC6  6EDF               	movwf	indf2,c
 23575                           
 23576                           ;lcd.h: 175: line3[i] = ' ';
 23577  004EC8  5170               	movf	atualizaLCD@i& (0+255),w,b
 23578  004ECA  0D01               	mullw	1
 23579  004ECC  50F3               	movf	prodl,w,c
 23580  004ECE  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 23581  004ED0  6ED9               	movwf	fsr2l,c
 23582  004ED2  50F4               	movf	prodh,w,c
 23583  004ED4  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 23584  004ED6  6EDA               	movwf	fsr2h,c
 23585  004ED8  0E20               	movlw	32
 23586  004EDA  6EDF               	movwf	indf2,c
 23587                           
 23588                           ;lcd.h: 176: line4[i] = ' ';
 23589  004EDC  5170               	movf	atualizaLCD@i& (0+255),w,b
 23590  004EDE  0D01               	mullw	1
 23591  004EE0  50F3               	movf	prodl,w,c
 23592  004EE2  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 23593  004EE4  6ED9               	movwf	fsr2l,c
 23594  004EE6  50F4               	movf	prodh,w,c
 23595  004EE8  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 23596  004EEA  6EDA               	movwf	fsr2h,c
 23597  004EEC  0E20               	movlw	32
 23598  004EEE  6EDF               	movwf	indf2,c
 23599                           
 23600                           ; BSR set to: 0
 23601  004EF0  2B70               	incf	atualizaLCD@i& (0+255),f,b
 23602  004EF2  D7D2               	goto	l6694
 23603  004EF4                     __end_of_atualizaLCD:
 23604                           	opt stack 0
 23605                           tosu	equ	0xFFF
 23606                           tosh	equ	0xFFE
 23607                           tosl	equ	0xFFD
 23608                           pclath	equ	0xFFA
 23609                           tblptru	equ	0xFF8
 23610                           tblptrh	equ	0xFF7
 23611                           tblptrl	equ	0xFF6
 23612                           tablat	equ	0xFF5
 23613                           prodh	equ	0xFF4
 23614                           prodl	equ	0xFF3
 23615                           intcon	equ	0xFF2
 23616                           intcon2	equ	0xFF1
 23617                           intcon3	equ	0xFF0
 23618                           indf0	equ	0xFEF
 23619                           postinc0	equ	0xFEE
 23620                           fsr0h	equ	0xFEA
 23621                           fsr0l	equ	0xFE9
 23622                           wreg	equ	0xFE8
 23623                           indf1	equ	0xFE7
 23624                           postdec1	equ	0xFE5
 23625                           fsr1h	equ	0xFE2
 23626                           fsr1l	equ	0xFE1
 23627                           indf2	equ	0xFDF
 23628                           postinc2	equ	0xFDE
 23629                           postdec2	equ	0xFDD
 23630                           fsr2h	equ	0xFDA
 23631                           fsr2l	equ	0xFD9
 23632                           status	equ	0xFD8
 23633                           
 23634 ;; *************** function _Lcd_Write_String *****************
 23635 ;; Defined at:
 23636 ;;		line 137 in file "src/lcd.h"
 23637 ;; Parameters:    Size  Location     Type
 23638 ;;  a               2    4[BANK0 ] PTR unsigned char 
 23639 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 23640 ;; Auto vars:     Size  Location     Type
 23641 ;;  i               1    6[BANK0 ] unsigned char 
 23642 ;; Return value:  Size  Location     Type
 23643 ;;                  1    wreg      void 
 23644 ;; Registers used:
 23645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23646 ;; Tracked objects:
 23647 ;;		On entry : 0/0
 23648 ;;		On exit  : 0/0
 23649 ;;		Unchanged: 0/0
 23650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23651 ;;      Params:         0       2       0       0       0       0       0       0       0
 23652 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23654 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23655 ;;Total ram usage:        3 bytes
 23656 ;; Hardware stack levels used:    1
 23657 ;; Hardware stack levels required when called:    8
 23658 ;; This function calls:
 23659 ;;		_Lcd_Write_Char
 23660 ;; This function is called by:
 23661 ;;		_atualizaLCD
 23662 ;; This function uses a non-reentrant model
 23663 ;;
 23664                           
 23665                           	psect	text55
 23666  005CD2                     __ptext55:
 23667                           	opt stack 0
 23668  005CD2                     _Lcd_Write_String:
 23669                           	opt stack 21
 23670                           
 23671                           ;lcd.h: 138: unsigned char i = 0;
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;incstack = 0
 23675  005CD2  0E00               	movlw	0
 23676  005CD4  0100               	movlb	0	; () banked
 23677  005CD6  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23678                           
 23679                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 23680  005CD8  0E00               	movlw	0
 23681  005CDA  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23682  005CDC                     l6540:
 23683                           
 23684                           ; BSR set to: 0
 23685  005CDC  0E13               	movlw	19
 23686  005CDE  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 23687  005CE0  D001               	goto	l255
 23688  005CE2  0012               	return	
 23689  005CE4                     l255:
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 23693                           
 23694                           ; BSR set to: 0
 23695  005CE4  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 23696  005CE6  0D01               	mullw	1
 23697  005CE8  50F3               	movf	prodl,w,c
 23698  005CEA  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 23699  005CEC  6ED9               	movwf	fsr2l,c
 23700  005CEE  50F4               	movf	prodh,w,c
 23701  005CF0  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 23702  005CF2  6EDA               	movwf	fsr2h,c
 23703  005CF4  50DF               	movf	indf2,w,c
 23704  005CF6  EC98  F02D         	call	_Lcd_Write_Char
 23705  005CFA  0100               	movlb	0	; () banked
 23706  005CFC  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 23707  005CFE  D7EE               	goto	l6540
 23708  005D00                     __end_of_Lcd_Write_String:
 23709                           	opt stack 0
 23710                           tosu	equ	0xFFF
 23711                           tosh	equ	0xFFE
 23712                           tosl	equ	0xFFD
 23713                           pclath	equ	0xFFA
 23714                           tblptru	equ	0xFF8
 23715                           tblptrh	equ	0xFF7
 23716                           tblptrl	equ	0xFF6
 23717                           tablat	equ	0xFF5
 23718                           prodh	equ	0xFF4
 23719                           prodl	equ	0xFF3
 23720                           intcon	equ	0xFF2
 23721                           intcon2	equ	0xFF1
 23722                           intcon3	equ	0xFF0
 23723                           indf0	equ	0xFEF
 23724                           postinc0	equ	0xFEE
 23725                           fsr0h	equ	0xFEA
 23726                           fsr0l	equ	0xFE9
 23727                           wreg	equ	0xFE8
 23728                           indf1	equ	0xFE7
 23729                           postdec1	equ	0xFE5
 23730                           fsr1h	equ	0xFE2
 23731                           fsr1l	equ	0xFE1
 23732                           indf2	equ	0xFDF
 23733                           postinc2	equ	0xFDE
 23734                           postdec2	equ	0xFDD
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function _Lcd_Write_Char *****************
 23740 ;; Defined at:
 23741 ;;		line 122 in file "src/lcd.h"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;  a               1    wreg     unsigned char 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;  a               1    3[BANK0 ] unsigned char 
 23746 ;;  y               1    2[BANK0 ] unsigned char 
 23747 ;;  tempp           1    1[BANK0 ] unsigned char 
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		wreg, status,2, status,0, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0
 23758 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23760 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23761 ;;Total ram usage:        3 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:    7
 23764 ;; This function calls:
 23765 ;;		_Lcd_Port
 23766 ;; This function is called by:
 23767 ;;		_Lcd_Write_String
 23768 ;;		_criaCaracteresCGRAM
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           	psect	text56
 23773  005B30                     __ptext56:
 23774                           	opt stack 0
 23775  005B30                     _Lcd_Write_Char:
 23776                           	opt stack 22
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;incstack = 0
 23780                           ;Lcd_Write_Char@a stored from wreg
 23781  005B30  0100               	movlb	0	; () banked
 23782  005B32  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 23783                           
 23784                           ;lcd.h: 123: char tempp, y;
 23785                           ;lcd.h: 124: tempp = a & 0x0F;
 23786  005B34  0100               	movlb	0	; () banked
 23787  005B36  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23788  005B38  0B0F               	andlw	15
 23789  005B3A  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 23790                           
 23791                           ;lcd.h: 125: y = a & 0xF0;
 23792  005B3C  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23793  005B3E  0BF0               	andlw	240
 23794  005B40  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 23795                           
 23796                           ; BSR set to: 0
 23797                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 23798  005B42  8483               	bsf	3971,2,c	;volatile
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;lcd.h: 127: Lcd_Port(y >> 4);
 23802  005B44  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 23803  005B46  0B0F               	andlw	15
 23804  005B48  EC51  F02E         	call	_Lcd_Port
 23805                           
 23806                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 23807  005B4C  8683               	bsf	3971,3,c	;volatile
 23808                           
 23809                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23810  005B4E  0E1A               	movlw	26
 23811  005B50                     u15387:
 23812  005B50  2EE8               	decfsz	wreg,f,c
 23813  005B52  D7FE               	bra	u15387
 23814  005B54  D000               	nop2	
 23815                           
 23816                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 23817  005B56  9683               	bcf	3971,3,c	;volatile
 23818                           
 23819                           ;lcd.h: 131: Lcd_Port(tempp);
 23820  005B58  0100               	movlb	0	; () banked
 23821  005B5A  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 23822  005B5C  EC51  F02E         	call	_Lcd_Port
 23823                           
 23824                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 23825  005B60  8683               	bsf	3971,3,c	;volatile
 23826                           
 23827                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23828  005B62  0E1A               	movlw	26
 23829  005B64                     u15397:
 23830  005B64  2EE8               	decfsz	wreg,f,c
 23831  005B66  D7FE               	bra	u15397
 23832  005B68  D000               	nop2	
 23833                           
 23834                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 23835  005B6A  9683               	bcf	3971,3,c	;volatile
 23836  005B6C  0012               	return		;funcret
 23837  005B6E                     __end_of_Lcd_Write_Char:
 23838                           	opt stack 0
 23839                           tosu	equ	0xFFF
 23840                           tosh	equ	0xFFE
 23841                           tosl	equ	0xFFD
 23842                           pclath	equ	0xFFA
 23843                           tblptru	equ	0xFF8
 23844                           tblptrh	equ	0xFF7
 23845                           tblptrl	equ	0xFF6
 23846                           tablat	equ	0xFF5
 23847                           prodh	equ	0xFF4
 23848                           prodl	equ	0xFF3
 23849                           intcon	equ	0xFF2
 23850                           intcon2	equ	0xFF1
 23851                           intcon3	equ	0xFF0
 23852                           indf0	equ	0xFEF
 23853                           postinc0	equ	0xFEE
 23854                           fsr0h	equ	0xFEA
 23855                           fsr0l	equ	0xFE9
 23856                           wreg	equ	0xFE8
 23857                           indf1	equ	0xFE7
 23858                           postdec1	equ	0xFE5
 23859                           fsr1h	equ	0xFE2
 23860                           fsr1l	equ	0xFE1
 23861                           indf2	equ	0xFDF
 23862                           postinc2	equ	0xFDE
 23863                           postdec2	equ	0xFDD
 23864                           fsr2h	equ	0xFDA
 23865                           fsr2l	equ	0xFD9
 23866                           status	equ	0xFD8
 23867                           
 23868 ;; *************** function _Lcd_Set_Cursor *****************
 23869 ;; Defined at:
 23870 ;;		line 87 in file "src/lcd.h"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  a               1    wreg     unsigned char 
 23873 ;;  b               1    3[BANK0 ] unsigned char 
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;  a               1    4[BANK0 ] unsigned char 
 23876 ;;  temp            1    7[BANK0 ] unsigned char 
 23877 ;;  y               1    6[BANK0 ] unsigned char 
 23878 ;;  z               1    5[BANK0 ] unsigned char 
 23879 ;; Return value:  Size  Location     Type
 23880 ;;                  1    wreg      void 
 23881 ;; Registers used:
 23882 ;;		wreg, status,2, status,0, cstack
 23883 ;; Tracked objects:
 23884 ;;		On entry : 0/0
 23885 ;;		On exit  : 0/0
 23886 ;;		Unchanged: 0/0
 23887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23888 ;;      Params:         0       1       0       0       0       0       0       0       0
 23889 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23891 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23892 ;;Total ram usage:        5 bytes
 23893 ;; Hardware stack levels used:    1
 23894 ;; Hardware stack levels required when called:    8
 23895 ;; This function calls:
 23896 ;;		_Lcd_Cmd
 23897 ;; This function is called by:
 23898 ;;		_atualizaLCD
 23899 ;; This function uses a non-reentrant model
 23900 ;;
 23901                           
 23902                           	psect	text57
 23903  004EF4                     __ptext57:
 23904                           	opt stack 0
 23905  004EF4                     _Lcd_Set_Cursor:
 23906                           	opt stack 21
 23907                           
 23908                           ;incstack = 0
 23909                           ;Lcd_Set_Cursor@a stored from wreg
 23910  004EF4  0100               	movlb	0	; () banked
 23911  004EF6  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 23912                           
 23913                           ;lcd.h: 88: char temp, z, y;
 23914                           ;lcd.h: 89: switch (a) {
 23915  004EF8  D048               	goto	l242
 23916  004EFA                     
 23917                           ;lcd.h: 91: temp = 0x80 + b - 1;
 23918  004EFA  0100               	movlb	0	; () banked
 23919  004EFC  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23920  004EFE  0F7F               	addlw	127
 23921  004F00  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23922                           
 23923                           ;lcd.h: 92: z = temp >> 4;
 23924  004F02  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23925  004F04  0B0F               	andlw	15
 23926  004F06  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23927                           
 23928                           ;lcd.h: 93: y = temp & 0x0F;
 23929  004F08  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23930  004F0A  0B0F               	andlw	15
 23931  004F0C  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;lcd.h: 94: Lcd_Cmd(z);
 23935  004F0E  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23936  004F10  ECE7  F02E         	call	_Lcd_Cmd
 23937                           
 23938                           ;lcd.h: 95: Lcd_Cmd(y);
 23939  004F14  0100               	movlb	0	; () banked
 23940  004F16  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23941  004F18  ECE7  F02E         	call	_Lcd_Cmd
 23942                           
 23943                           ;lcd.h: 96: break;
 23944  004F1C  0012               	return	
 23945  004F1E                     
 23946                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 23947  004F1E  0100               	movlb	0	; () banked
 23948  004F20  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23949  004F22  0FBF               	addlw	191
 23950  004F24  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23951                           
 23952                           ;lcd.h: 99: z = temp >> 4;
 23953  004F26  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23954  004F28  0B0F               	andlw	15
 23955  004F2A  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23956                           
 23957                           ;lcd.h: 100: y = temp & 0x0F;
 23958  004F2C  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23959  004F2E  0B0F               	andlw	15
 23960  004F30  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;lcd.h: 101: Lcd_Cmd(z);
 23964  004F32  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23965  004F34  ECE7  F02E         	call	_Lcd_Cmd
 23966                           
 23967                           ;lcd.h: 102: Lcd_Cmd(y);
 23968  004F38  0100               	movlb	0	; () banked
 23969  004F3A  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23970  004F3C  ECE7  F02E         	call	_Lcd_Cmd
 23971                           
 23972                           ;lcd.h: 103: break;
 23973  004F40  0012               	return	
 23974  004F42                     
 23975                           ;lcd.h: 105: temp = 0x94 + b;
 23976  004F42  0100               	movlb	0	; () banked
 23977  004F44  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23978  004F46  0F94               	addlw	148
 23979  004F48  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23980                           
 23981                           ;lcd.h: 106: z = temp >> 4;
 23982  004F4A  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23983  004F4C  0B0F               	andlw	15
 23984  004F4E  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23985                           
 23986                           ;lcd.h: 107: y = temp & 0x0F;
 23987  004F50  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23988  004F52  0B0F               	andlw	15
 23989  004F54  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;lcd.h: 108: Lcd_Cmd(z);
 23993  004F56  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23994  004F58  ECE7  F02E         	call	_Lcd_Cmd
 23995                           
 23996                           ;lcd.h: 109: Lcd_Cmd(y);
 23997  004F5C  0100               	movlb	0	; () banked
 23998  004F5E  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23999  004F60  ECE7  F02E         	call	_Lcd_Cmd
 24000                           
 24001                           ;lcd.h: 110: break;
 24002  004F64  0012               	return	
 24003  004F66                     
 24004                           ;lcd.h: 112: temp = 0xD4 + b;
 24005  004F66  0100               	movlb	0	; () banked
 24006  004F68  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 24007  004F6A  0FD4               	addlw	212
 24008  004F6C  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 24009                           
 24010                           ;lcd.h: 113: z = temp >> 4;
 24011  004F6E  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 24012  004F70  0B0F               	andlw	15
 24013  004F72  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 24014                           
 24015                           ;lcd.h: 114: y = temp & 0x0F;
 24016  004F74  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 24017  004F76  0B0F               	andlw	15
 24018  004F78  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;lcd.h: 115: Lcd_Cmd(z);
 24022  004F7A  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 24023  004F7C  ECE7  F02E         	call	_Lcd_Cmd
 24024                           
 24025                           ;lcd.h: 116: Lcd_Cmd(y);
 24026  004F80  0100               	movlb	0	; () banked
 24027  004F82  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 24028  004F84  ECE7  F02E         	call	_Lcd_Cmd
 24029                           
 24030                           ;lcd.h: 119: }
 24031                           
 24032                           ;lcd.h: 118: default:return;
 24033                           
 24034                           ;lcd.h: 117: break;
 24035  004F88  0012               	return	
 24036  004F8A                     l242:
 24037  004F8A  0100               	movlb	0	; () banked
 24038  004F8C  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 24039                           
 24040                           ; Switch size 1, requested type "space"
 24041                           ; Number of cases is 4, Range of values is 1 to 4
 24042                           ; switch strategies available:
 24043                           ; Name         Instructions Cycles
 24044                           ; simple_byte           13     7 (average)
 24045                           ;	Chosen strategy is simple_byte
 24046  004F8E  0A01               	xorlw	1	; case 1
 24047  004F90  B4D8               	btfsc	status,2,c
 24048  004F92  D7B3               	goto	l243
 24049  004F94  0A03               	xorlw	3	; case 2
 24050  004F96  B4D8               	btfsc	status,2,c
 24051  004F98  D7C2               	goto	l245
 24052  004F9A  0A01               	xorlw	1	; case 3
 24053  004F9C  B4D8               	btfsc	status,2,c
 24054  004F9E  D7D1               	goto	l246
 24055  004FA0  0A07               	xorlw	7	; case 4
 24056  004FA2  A4D8               	btfss	status,2,c
 24057  004FA4  0012               	return	
 24058  004FA6  D7DF               	goto	l247
 24059  004FA8                     __end_of_Lcd_Set_Cursor:
 24060                           	opt stack 0
 24061                           tosu	equ	0xFFF
 24062                           tosh	equ	0xFFE
 24063                           tosl	equ	0xFFD
 24064                           pclath	equ	0xFFA
 24065                           tblptru	equ	0xFF8
 24066                           tblptrh	equ	0xFF7
 24067                           tblptrl	equ	0xFF6
 24068                           tablat	equ	0xFF5
 24069                           prodh	equ	0xFF4
 24070                           prodl	equ	0xFF3
 24071                           intcon	equ	0xFF2
 24072                           intcon2	equ	0xFF1
 24073                           intcon3	equ	0xFF0
 24074                           indf0	equ	0xFEF
 24075                           postinc0	equ	0xFEE
 24076                           fsr0h	equ	0xFEA
 24077                           fsr0l	equ	0xFE9
 24078                           wreg	equ	0xFE8
 24079                           indf1	equ	0xFE7
 24080                           postdec1	equ	0xFE5
 24081                           fsr1h	equ	0xFE2
 24082                           fsr1l	equ	0xFE1
 24083                           indf2	equ	0xFDF
 24084                           postinc2	equ	0xFDE
 24085                           postdec2	equ	0xFDD
 24086                           fsr2h	equ	0xFDA
 24087                           fsr2l	equ	0xFD9
 24088                           status	equ	0xFD8
 24089                           
 24090 ;; *************** function _UART_Init *****************
 24091 ;; Defined at:
 24092 ;;		line 9 in file "src/USART.h"
 24093 ;; Parameters:    Size  Location     Type
 24094 ;;		None
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;		None
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  1    wreg      void 
 24099 ;; Registers used:
 24100 ;;		wreg, status,2
 24101 ;; Tracked objects:
 24102 ;;		On entry : 0/0
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24106 ;;      Params:         0       0       0       0       0       0       0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24109 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24110 ;;Total ram usage:        0 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:    6
 24113 ;; This function calls:
 24114 ;;		Nothing
 24115 ;; This function is called by:
 24116 ;;		_main
 24117 ;; This function uses a non-reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text58
 24121  005E74                     __ptext58:
 24122                           	opt stack 0
 24123  005E74                     _UART_Init:
 24124                           	opt stack 24
 24125                           
 24126                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 24127                           
 24128                           ;incstack = 0
 24129  005E74  9C94               	bcf	3988,6,c	;volatile
 24130                           
 24131                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 24132  005E76  8E94               	bsf	3988,7,c	;volatile
 24133                           
 24134                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 24135  005E78  8AAC               	bsf	4012,5,c	;volatile
 24136                           
 24137                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 24138  005E7A  84AC               	bsf	4012,2,c	;volatile
 24139                           
 24140                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 24141  005E7C  98AC               	bcf	4012,4,c	;volatile
 24142                           
 24143                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 24144  005E7E  8EAB               	bsf	4011,7,c	;volatile
 24145                           
 24146                           ;USART.h: 20: RCSTAbits.CREN = 1;
 24147  005E80  88AB               	bsf	4011,4,c	;volatile
 24148                           
 24149                           ;USART.h: 26: SPBRG = 25;
 24150  005E82  0E19               	movlw	25
 24151  005E84  6EAF               	movwf	4015,c	;volatile
 24152                           
 24153                           ;USART.h: 29: INTCONbits.GIE = 1;
 24154  005E86  8EF2               	bsf	intcon,7,c	;volatile
 24155                           
 24156                           ;USART.h: 30: INTCONbits.PEIE = 1;
 24157  005E88  8CF2               	bsf	intcon,6,c	;volatile
 24158                           
 24159                           ;USART.h: 32: PIR1bits.RCIF = 0;
 24160  005E8A  9A9E               	bcf	3998,5,c	;volatile
 24161                           
 24162                           ;USART.h: 33: PIE1bits.RCIE = 1;
 24163  005E8C  8A9D               	bsf	3997,5,c	;volatile
 24164  005E8E  0012               	return		;funcret
 24165  005E90                     __end_of_UART_Init:
 24166                           	opt stack 0
 24167                           tosu	equ	0xFFF
 24168                           tosh	equ	0xFFE
 24169                           tosl	equ	0xFFD
 24170                           pclath	equ	0xFFA
 24171                           tblptru	equ	0xFF8
 24172                           tblptrh	equ	0xFF7
 24173                           tblptrl	equ	0xFF6
 24174                           tablat	equ	0xFF5
 24175                           prodh	equ	0xFF4
 24176                           prodl	equ	0xFF3
 24177                           intcon	equ	0xFF2
 24178                           intcon2	equ	0xFF1
 24179                           intcon3	equ	0xFF0
 24180                           indf0	equ	0xFEF
 24181                           postinc0	equ	0xFEE
 24182                           fsr0h	equ	0xFEA
 24183                           fsr0l	equ	0xFE9
 24184                           wreg	equ	0xFE8
 24185                           indf1	equ	0xFE7
 24186                           postdec1	equ	0xFE5
 24187                           fsr1h	equ	0xFE2
 24188                           fsr1l	equ	0xFE1
 24189                           indf2	equ	0xFDF
 24190                           postinc2	equ	0xFDE
 24191                           postdec2	equ	0xFDD
 24192                           fsr2h	equ	0xFDA
 24193                           fsr2l	equ	0xFD9
 24194                           status	equ	0xFD8
 24195                           
 24196 ;; *************** function _Lcd_Init *****************
 24197 ;; Defined at:
 24198 ;;		line 17 in file "src/lcd.h"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;		None
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;		None
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  1    wreg      void 
 24205 ;; Registers used:
 24206 ;;		wreg, status,2, cstack
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24212 ;;      Params:         0       0       0       0       0       0       0       0       0
 24213 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24214 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24215 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24216 ;;Total ram usage:        1 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:    8
 24219 ;; This function calls:
 24220 ;;		_Lcd_Cmd
 24221 ;;		_Lcd_Port
 24222 ;; This function is called by:
 24223 ;;		_main
 24224 ;; This function uses a non-reentrant model
 24225 ;;
 24226                           
 24227                           	psect	text59
 24228  005632                     __ptext59:
 24229                           	opt stack 0
 24230  005632                     _Lcd_Init:
 24231                           	opt stack 22
 24232                           
 24233                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 24234                           
 24235                           ;incstack = 0
 24236  005632  9E95               	bcf	3989,7,c	;volatile
 24237                           
 24238                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 24239  005634  9C95               	bcf	3989,6,c	;volatile
 24240                           
 24241                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 24242  005636  9A95               	bcf	3989,5,c	;volatile
 24243                           
 24244                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 24245  005638  9895               	bcf	3989,4,c	;volatile
 24246                           
 24247                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 24248  00563A  9695               	bcf	3989,3,c	;volatile
 24249                           
 24250                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 24251  00563C  9495               	bcf	3989,2,c	;volatile
 24252                           
 24253                           ;lcd.h: 35: Lcd_Port(0x00);
 24254  00563E  0E00               	movlw	0
 24255  005640  EC51  F02E         	call	_Lcd_Port
 24256                           
 24257                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 24258  005644  0E34               	movlw	52
 24259  005646  0100               	movlb	0	; () banked
 24260  005648  6F63               	movwf	??_Lcd_Init& (0+255),b
 24261  00564A  0EF1               	movlw	241
 24262  00564C                     u15407:
 24263  00564C  2EE8               	decfsz	wreg,f,c
 24264  00564E  D7FE               	bra	u15407
 24265  005650  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24266  005652  D7FC               	bra	u15407
 24267  005654  D000               	nop2	
 24268                           
 24269                           ;lcd.h: 37: Lcd_Cmd(0x03);
 24270  005656  0E03               	movlw	3
 24271  005658  ECE7  F02E         	call	_Lcd_Cmd
 24272                           
 24273                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 24274  00565C  0E0D               	movlw	13
 24275  00565E  0100               	movlb	0	; () banked
 24276  005660  6F63               	movwf	??_Lcd_Init& (0+255),b
 24277  005662  0EFB               	movlw	251
 24278  005664                     u15417:
 24279  005664  2EE8               	decfsz	wreg,f,c
 24280  005666  D7FE               	bra	u15417
 24281  005668  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24282  00566A  D7FC               	bra	u15417
 24283  00566C  D000               	nop2	
 24284                           
 24285                           ;lcd.h: 39: Lcd_Cmd(0x03);
 24286  00566E  0E03               	movlw	3
 24287  005670  ECE7  F02E         	call	_Lcd_Cmd
 24288                           
 24289                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 24290  005674  0E1D               	movlw	29
 24291  005676  0100               	movlb	0	; () banked
 24292  005678  6F63               	movwf	??_Lcd_Init& (0+255),b
 24293  00567A  0E91               	movlw	145
 24294  00567C                     u15427:
 24295  00567C  2EE8               	decfsz	wreg,f,c
 24296  00567E  D7FE               	bra	u15427
 24297  005680  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24298  005682  D7FC               	bra	u15427
 24299                           
 24300                           ;lcd.h: 41: Lcd_Cmd(0x03);
 24301  005684  0E03               	movlw	3
 24302  005686  ECE7  F02E         	call	_Lcd_Cmd
 24303                           
 24304                           ;lcd.h: 43: Lcd_Cmd(0x02);
 24305  00568A  0E02               	movlw	2
 24306  00568C  ECE7  F02E         	call	_Lcd_Cmd
 24307                           
 24308                           ;lcd.h: 44: Lcd_Cmd(0x02);
 24309  005690  0E02               	movlw	2
 24310  005692  ECE7  F02E         	call	_Lcd_Cmd
 24311                           
 24312                           ;lcd.h: 45: Lcd_Cmd(0x08);
 24313  005696  0E08               	movlw	8
 24314  005698  ECE7  F02E         	call	_Lcd_Cmd
 24315                           
 24316                           ;lcd.h: 46: Lcd_Cmd(0x00);
 24317  00569C  0E00               	movlw	0
 24318  00569E  ECE7  F02E         	call	_Lcd_Cmd
 24319                           
 24320                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 24321  0056A2  0E0C               	movlw	12
 24322  0056A4  ECE7  F02E         	call	_Lcd_Cmd
 24323                           
 24324                           ;lcd.h: 48: Lcd_Cmd(0x00);
 24325  0056A8  0E00               	movlw	0
 24326  0056AA  ECE7  F02E         	call	_Lcd_Cmd
 24327                           
 24328                           ;lcd.h: 49: Lcd_Cmd(0x06);
 24329  0056AE  0E06               	movlw	6
 24330  0056B0  ECE7  F02E         	call	_Lcd_Cmd
 24331  0056B4  0012               	return		;funcret
 24332  0056B6                     __end_of_Lcd_Init:
 24333                           	opt stack 0
 24334                           tosu	equ	0xFFF
 24335                           tosh	equ	0xFFE
 24336                           tosl	equ	0xFFD
 24337                           pclath	equ	0xFFA
 24338                           tblptru	equ	0xFF8
 24339                           tblptrh	equ	0xFF7
 24340                           tblptrl	equ	0xFF6
 24341                           tablat	equ	0xFF5
 24342                           prodh	equ	0xFF4
 24343                           prodl	equ	0xFF3
 24344                           intcon	equ	0xFF2
 24345                           intcon2	equ	0xFF1
 24346                           intcon3	equ	0xFF0
 24347                           indf0	equ	0xFEF
 24348                           postinc0	equ	0xFEE
 24349                           fsr0h	equ	0xFEA
 24350                           fsr0l	equ	0xFE9
 24351                           wreg	equ	0xFE8
 24352                           indf1	equ	0xFE7
 24353                           postdec1	equ	0xFE5
 24354                           fsr1h	equ	0xFE2
 24355                           fsr1l	equ	0xFE1
 24356                           indf2	equ	0xFDF
 24357                           postinc2	equ	0xFDE
 24358                           postdec2	equ	0xFDD
 24359                           fsr2h	equ	0xFDA
 24360                           fsr2l	equ	0xFD9
 24361                           status	equ	0xFD8
 24362                           
 24363 ;; *************** function _Lcd_Clear *****************
 24364 ;; Defined at:
 24365 ;;		line 82 in file "src/lcd.h"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;		None
 24368 ;; Auto vars:     Size  Location     Type
 24369 ;;		None
 24370 ;; Return value:  Size  Location     Type
 24371 ;;                  1    wreg      void 
 24372 ;; Registers used:
 24373 ;;		wreg, status,2, cstack
 24374 ;; Tracked objects:
 24375 ;;		On entry : 0/0
 24376 ;;		On exit  : 0/0
 24377 ;;		Unchanged: 0/0
 24378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24379 ;;      Params:         0       0       0       0       0       0       0       0       0
 24380 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24381 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24382 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24383 ;;Total ram usage:        0 bytes
 24384 ;; Hardware stack levels used:    1
 24385 ;; Hardware stack levels required when called:    8
 24386 ;; This function calls:
 24387 ;;		_Lcd_Cmd
 24388 ;; This function is called by:
 24389 ;;		_main
 24390 ;; This function uses a non-reentrant model
 24391 ;;
 24392                           
 24393                           	psect	text60
 24394  005EDC                     __ptext60:
 24395                           	opt stack 0
 24396  005EDC                     _Lcd_Clear:
 24397                           	opt stack 22
 24398                           
 24399                           ;lcd.h: 83: Lcd_Cmd(0);
 24400                           
 24401                           ;incstack = 0
 24402  005EDC  0E00               	movlw	0
 24403  005EDE  ECE7  F02E         	call	_Lcd_Cmd
 24404                           
 24405                           ;lcd.h: 84: Lcd_Cmd(1);
 24406  005EE2  0E01               	movlw	1
 24407  005EE4  ECE7  F02E         	call	_Lcd_Cmd
 24408  005EE8  0012               	return		;funcret
 24409  005EEA                     __end_of_Lcd_Clear:
 24410                           	opt stack 0
 24411                           tosu	equ	0xFFF
 24412                           tosh	equ	0xFFE
 24413                           tosl	equ	0xFFD
 24414                           pclath	equ	0xFFA
 24415                           tblptru	equ	0xFF8
 24416                           tblptrh	equ	0xFF7
 24417                           tblptrl	equ	0xFF6
 24418                           tablat	equ	0xFF5
 24419                           prodh	equ	0xFF4
 24420                           prodl	equ	0xFF3
 24421                           intcon	equ	0xFF2
 24422                           intcon2	equ	0xFF1
 24423                           intcon3	equ	0xFF0
 24424                           indf0	equ	0xFEF
 24425                           postinc0	equ	0xFEE
 24426                           fsr0h	equ	0xFEA
 24427                           fsr0l	equ	0xFE9
 24428                           wreg	equ	0xFE8
 24429                           indf1	equ	0xFE7
 24430                           postdec1	equ	0xFE5
 24431                           fsr1h	equ	0xFE2
 24432                           fsr1l	equ	0xFE1
 24433                           indf2	equ	0xFDF
 24434                           postinc2	equ	0xFDE
 24435                           postdec2	equ	0xFDD
 24436                           fsr2h	equ	0xFDA
 24437                           fsr2l	equ	0xFD9
 24438                           status	equ	0xFD8
 24439                           
 24440 ;; *************** function _Lcd_Cmd *****************
 24441 ;; Defined at:
 24442 ;;		line 74 in file "src/lcd.h"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;  a               1    wreg     unsigned char 
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;  a               1    2[BANK0 ] unsigned char 
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, status,2, cstack
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24456 ;;      Params:         0       0       0       0       0       0       0       0       0
 24457 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24458 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24459 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24460 ;;Total ram usage:        2 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:    7
 24463 ;; This function calls:
 24464 ;;		_Lcd_Port
 24465 ;; This function is called by:
 24466 ;;		_Lcd_Init
 24467 ;;		_Lcd_Clear
 24468 ;;		_Lcd_Set_Cursor
 24469 ;;		_criaCaracteresCGRAM
 24470 ;; This function uses a non-reentrant model
 24471 ;;
 24472                           
 24473                           	psect	text61
 24474  005DCE                     __ptext61:
 24475                           	opt stack 0
 24476  005DCE                     _Lcd_Cmd:
 24477                           	opt stack 22
 24478                           
 24479                           ;incstack = 0
 24480                           ;Lcd_Cmd@a stored from wreg
 24481  005DCE  0100               	movlb	0	; () banked
 24482  005DD0  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 24483                           
 24484                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 24485  005DD2  9483               	bcf	3971,2,c	;volatile
 24486                           
 24487                           ;lcd.h: 76: Lcd_Port(a);
 24488  005DD4  0100               	movlb	0	; () banked
 24489  005DD6  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 24490  005DD8  EC51  F02E         	call	_Lcd_Port
 24491                           
 24492                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 24493  005DDC  8683               	bsf	3971,3,c	;volatile
 24494                           
 24495                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 24496  005DDE  0E0B               	movlw	11
 24497  005DE0  0100               	movlb	0	; () banked
 24498  005DE2  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 24499  005DE4  0E62               	movlw	98
 24500  005DE6                     u15437:
 24501  005DE6  2EE8               	decfsz	wreg,f,c
 24502  005DE8  D7FE               	bra	u15437
 24503  005DEA  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 24504  005DEC  D7FC               	bra	u15437
 24505  005DEE  F000               	nop	
 24506                           
 24507                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 24508  005DF0  9683               	bcf	3971,3,c	;volatile
 24509  005DF2  0012               	return		;funcret
 24510  005DF4                     __end_of_Lcd_Cmd:
 24511                           	opt stack 0
 24512                           tosu	equ	0xFFF
 24513                           tosh	equ	0xFFE
 24514                           tosl	equ	0xFFD
 24515                           pclath	equ	0xFFA
 24516                           tblptru	equ	0xFF8
 24517                           tblptrh	equ	0xFF7
 24518                           tblptrl	equ	0xFF6
 24519                           tablat	equ	0xFF5
 24520                           prodh	equ	0xFF4
 24521                           prodl	equ	0xFF3
 24522                           intcon	equ	0xFF2
 24523                           intcon2	equ	0xFF1
 24524                           intcon3	equ	0xFF0
 24525                           indf0	equ	0xFEF
 24526                           postinc0	equ	0xFEE
 24527                           fsr0h	equ	0xFEA
 24528                           fsr0l	equ	0xFE9
 24529                           wreg	equ	0xFE8
 24530                           indf1	equ	0xFE7
 24531                           postdec1	equ	0xFE5
 24532                           fsr1h	equ	0xFE2
 24533                           fsr1l	equ	0xFE1
 24534                           indf2	equ	0xFDF
 24535                           postinc2	equ	0xFDE
 24536                           postdec2	equ	0xFDD
 24537                           fsr2h	equ	0xFDA
 24538                           fsr2l	equ	0xFD9
 24539                           status	equ	0xFD8
 24540                           
 24541 ;; *************** function _Lcd_Port *****************
 24542 ;; Defined at:
 24543 ;;		line 52 in file "src/lcd.h"
 24544 ;; Parameters:    Size  Location     Type
 24545 ;;  a               1    wreg     unsigned char 
 24546 ;; Auto vars:     Size  Location     Type
 24547 ;;  a               1    0[BANK0 ] unsigned char 
 24548 ;; Return value:  Size  Location     Type
 24549 ;;                  1    wreg      void 
 24550 ;; Registers used:
 24551 ;;		wreg
 24552 ;; Tracked objects:
 24553 ;;		On entry : 0/0
 24554 ;;		On exit  : 0/0
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24557 ;;      Params:         0       0       0       0       0       0       0       0       0
 24558 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24560 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24561 ;;Total ram usage:        1 bytes
 24562 ;; Hardware stack levels used:    1
 24563 ;; Hardware stack levels required when called:    6
 24564 ;; This function calls:
 24565 ;;		Nothing
 24566 ;; This function is called by:
 24567 ;;		_Lcd_Init
 24568 ;;		_Lcd_Cmd
 24569 ;;		_Lcd_Write_Char
 24570 ;; This function uses a non-reentrant model
 24571 ;;
 24572                           
 24573                           	psect	text62
 24574  005CA2                     __ptext62:
 24575                           	opt stack 0
 24576  005CA2                     _Lcd_Port:
 24577                           	opt stack 22
 24578                           
 24579                           ;incstack = 0
 24580                           ;Lcd_Port@a stored from wreg
 24581  005CA2  0100               	movlb	0	; () banked
 24582  005CA4  6F60               	movwf	Lcd_Port@a& (0+255),b
 24583                           
 24584                           ;lcd.h: 53: if (a & 1)
 24585  005CA6  0100               	movlb	0	; () banked
 24586  005CA8  A160               	btfss	Lcd_Port@a& (0+255),0,b
 24587  005CAA  D002               	goto	l225
 24588                           
 24589                           ; BSR set to: 0
 24590                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 24591  005CAC  8883               	bsf	3971,4,c	;volatile
 24592  005CAE  D001               	goto	l226
 24593  005CB0                     l225:
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;lcd.h: 55: else
 24597                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 24598  005CB0  9883               	bcf	3971,4,c	;volatile
 24599  005CB2                     l226:
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;lcd.h: 58: if (a & 2)
 24603                           
 24604                           ; BSR set to: 0
 24605  005CB2  A360               	btfss	Lcd_Port@a& (0+255),1,b
 24606  005CB4  D002               	goto	l227
 24607                           
 24608                           ; BSR set to: 0
 24609                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 24610  005CB6  8A83               	bsf	3971,5,c	;volatile
 24611  005CB8  D001               	goto	l228
 24612  005CBA                     l227:
 24613                           
 24614                           ; BSR set to: 0
 24615                           ;lcd.h: 60: else
 24616                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 24617  005CBA  9A83               	bcf	3971,5,c	;volatile
 24618  005CBC                     l228:
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;lcd.h: 63: if (a & 4)
 24622                           
 24623                           ; BSR set to: 0
 24624  005CBC  A560               	btfss	Lcd_Port@a& (0+255),2,b
 24625  005CBE  D002               	goto	l229
 24626                           
 24627                           ; BSR set to: 0
 24628                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 24629  005CC0  8C83               	bsf	3971,6,c	;volatile
 24630  005CC2  D001               	goto	l230
 24631  005CC4                     l229:
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;lcd.h: 65: else
 24635                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 24636  005CC4  9C83               	bcf	3971,6,c	;volatile
 24637  005CC6                     l230:
 24638                           
 24639                           ; BSR set to: 0
 24640                           ;lcd.h: 68: if (a & 8)
 24641                           
 24642                           ; BSR set to: 0
 24643  005CC6  A760               	btfss	Lcd_Port@a& (0+255),3,b
 24644  005CC8  D002               	goto	l231
 24645                           
 24646                           ; BSR set to: 0
 24647                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 24648  005CCA  8E83               	bsf	3971,7,c	;volatile
 24649  005CCC  0012               	return	
 24650  005CCE                     l231:
 24651                           
 24652                           ; BSR set to: 0
 24653                           ;lcd.h: 70: else
 24654                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 24655  005CCE  9E83               	bcf	3971,7,c	;volatile
 24656  005CD0  0012               	return	
 24657  005CD2                     __end_of_Lcd_Port:
 24658                           	opt stack 0
 24659                           tosu	equ	0xFFF
 24660                           tosh	equ	0xFFE
 24661                           tosl	equ	0xFFD
 24662                           pclath	equ	0xFFA
 24663                           tblptru	equ	0xFF8
 24664                           tblptrh	equ	0xFF7
 24665                           tblptrl	equ	0xFF6
 24666                           tablat	equ	0xFF5
 24667                           prodh	equ	0xFF4
 24668                           prodl	equ	0xFF3
 24669                           intcon	equ	0xFF2
 24670                           intcon2	equ	0xFF1
 24671                           intcon3	equ	0xFF0
 24672                           indf0	equ	0xFEF
 24673                           postinc0	equ	0xFEE
 24674                           fsr0h	equ	0xFEA
 24675                           fsr0l	equ	0xFE9
 24676                           wreg	equ	0xFE8
 24677                           indf1	equ	0xFE7
 24678                           postdec1	equ	0xFE5
 24679                           fsr1h	equ	0xFE2
 24680                           fsr1l	equ	0xFE1
 24681                           indf2	equ	0xFDF
 24682                           postinc2	equ	0xFDE
 24683                           postdec2	equ	0xFDD
 24684                           fsr2h	equ	0xFDA
 24685                           fsr2l	equ	0xFD9
 24686                           status	equ	0xFD8
 24687                           
 24688 ;; *************** function _I2C_Master_Init *****************
 24689 ;; Defined at:
 24690 ;;		line 11 in file "src/I2C.c"
 24691 ;; Parameters:    Size  Location     Type
 24692 ;;  c               4   13[BANK0 ] const unsigned long 
 24693 ;; Auto vars:     Size  Location     Type
 24694 ;;		None
 24695 ;; Return value:  Size  Location     Type
 24696 ;;                  1    wreg      void 
 24697 ;; Registers used:
 24698 ;;		wreg, status,2, status,0, cstack
 24699 ;; Tracked objects:
 24700 ;;		On entry : 0/0
 24701 ;;		On exit  : 0/0
 24702 ;;		Unchanged: 0/0
 24703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24704 ;;      Params:         0       4       0       0       0       0       0       0       0
 24705 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24706 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24707 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24708 ;;Total ram usage:        8 bytes
 24709 ;; Hardware stack levels used:    1
 24710 ;; Hardware stack levels required when called:    7
 24711 ;; This function calls:
 24712 ;;		___lldiv
 24713 ;; This function is called by:
 24714 ;;		_main
 24715 ;; This function uses a non-reentrant model
 24716 ;;
 24717                           
 24718                           	psect	text63
 24719  0057AA                     __ptext63:
 24720                           	opt stack 0
 24721  0057AA                     _I2C_Master_Init:
 24722                           	opt stack 23
 24723                           
 24724                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;incstack = 0
 24728  0057AA  8093               	bsf	3987,0,c	;volatile
 24729                           
 24730                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 24731  0057AC  8293               	bsf	3987,1,c	;volatile
 24732                           
 24733                           ;I2C.c: 14: SSPCON1 = 0x28;
 24734  0057AE  0E28               	movlw	40
 24735  0057B0  6EC6               	movwf	4038,c	;volatile
 24736                           
 24737                           ;I2C.c: 15: SSPCON2 = 0x0;
 24738  0057B2  0E00               	movlw	0
 24739  0057B4  6EC5               	movwf	4037,c	;volatile
 24740                           
 24741                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 24742  0057B6  0E00               	movlw	0
 24743  0057B8  0100               	movlb	0	; () banked
 24744  0057BA  6F60               	movwf	___lldiv@dividend& (0+255),b
 24745  0057BC  0E12               	movlw	18
 24746  0057BE  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 24747  0057C0  0E7A               	movlw	122
 24748  0057C2  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 24749  0057C4  0E00               	movlw	0
 24750  0057C6  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 24751  0057C8  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 24752  0057CC  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 24753  0057D0  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 24754  0057D4  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 24755  0057D8  0E02               	movlw	2
 24756  0057DA                     u14255:
 24757  0057DA  90D8               	bcf	status,0,c
 24758  0057DC  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 24759  0057DE  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 24760  0057E0  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 24761  0057E2  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 24762  0057E4  2EE8               	decfsz	wreg,f,c
 24763  0057E6  D7F9               	goto	u14255
 24764  0057E8  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 24765  0057EC  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 24766  0057F0  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 24767  0057F4  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 24768  0057F8  EC5B  F02B         	call	___lldiv	;wreg free
 24769  0057FC  0100               	movlb	0	; () banked
 24770  0057FE  0560               	decf	?___lldiv& (0+255),w,b
 24771  005800  6EC8               	movwf	4040,c	;volatile
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;I2C.c: 17: SSPSTAT = 0;
 24775  005802  0E00               	movlw	0
 24776  005804  6EC7               	movwf	4039,c	;volatile
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 24780  005806  0E82               	movlw	130
 24781  005808  0100               	movlb	0	; () banked
 24782  00580A  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 24783  00580C  0EDD               	movlw	221
 24784  00580E                     u15447:
 24785  00580E  2EE8               	decfsz	wreg,f,c
 24786  005810  D7FE               	bra	u15447
 24787  005812  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 24788  005814  D7FC               	bra	u15447
 24789  005816  D000               	nop2	
 24790  005818  0012               	return		;funcret
 24791  00581A                     __end_of_I2C_Master_Init:
 24792                           	opt stack 0
 24793                           tosu	equ	0xFFF
 24794                           tosh	equ	0xFFE
 24795                           tosl	equ	0xFFD
 24796                           pclath	equ	0xFFA
 24797                           tblptru	equ	0xFF8
 24798                           tblptrh	equ	0xFF7
 24799                           tblptrl	equ	0xFF6
 24800                           tablat	equ	0xFF5
 24801                           prodh	equ	0xFF4
 24802                           prodl	equ	0xFF3
 24803                           intcon	equ	0xFF2
 24804                           intcon2	equ	0xFF1
 24805                           intcon3	equ	0xFF0
 24806                           indf0	equ	0xFEF
 24807                           postinc0	equ	0xFEE
 24808                           fsr0h	equ	0xFEA
 24809                           fsr0l	equ	0xFE9
 24810                           wreg	equ	0xFE8
 24811                           indf1	equ	0xFE7
 24812                           postdec1	equ	0xFE5
 24813                           fsr1h	equ	0xFE2
 24814                           fsr1l	equ	0xFE1
 24815                           indf2	equ	0xFDF
 24816                           postinc2	equ	0xFDE
 24817                           postdec2	equ	0xFDD
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function ___lldiv *****************
 24823 ;; Defined at:
 24824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;  dividend        4    0[BANK0 ] unsigned long 
 24827 ;;  divisor         4    4[BANK0 ] unsigned long 
 24828 ;; Auto vars:     Size  Location     Type
 24829 ;;  quotient        4    8[BANK0 ] unsigned long 
 24830 ;;  counter         1   12[BANK0 ] unsigned char 
 24831 ;; Return value:  Size  Location     Type
 24832 ;;                  4    0[BANK0 ] unsigned long 
 24833 ;; Registers used:
 24834 ;;		wreg, status,2, status,0
 24835 ;; Tracked objects:
 24836 ;;		On entry : 0/0
 24837 ;;		On exit  : 0/0
 24838 ;;		Unchanged: 0/0
 24839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24840 ;;      Params:         0       8       0       0       0       0       0       0       0
 24841 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24843 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24844 ;;Total ram usage:       13 bytes
 24845 ;; Hardware stack levels used:    1
 24846 ;; Hardware stack levels required when called:    6
 24847 ;; This function calls:
 24848 ;;		Nothing
 24849 ;; This function is called by:
 24850 ;;		_I2C_Master_Init
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text64
 24855  0056B6                     __ptext64:
 24856                           	opt stack 0
 24857  0056B6                     ___lldiv:
 24858                           	opt stack 23
 24859                           
 24860                           ;incstack = 0
 24861  0056B6  0E00               	movlw	0
 24862  0056B8  0100               	movlb	0	; () banked
 24863  0056BA  6F68               	movwf	___lldiv@quotient& (0+255),b
 24864  0056BC  0E00               	movlw	0
 24865  0056BE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24866  0056C0  0E00               	movlw	0
 24867  0056C2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24868  0056C4  0E00               	movlw	0
 24869  0056C6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24870                           
 24871                           ; BSR set to: 0
 24872  0056C8  5164               	movf	___lldiv@divisor& (0+255),w,b
 24873  0056CA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24874  0056CC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24875  0056CE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24876  0056D0  B4D8               	btfsc	status,2,c
 24877  0056D2  D02A               	goto	l1954
 24878                           
 24879                           ; BSR set to: 0
 24880  0056D4  0E01               	movlw	1
 24881  0056D6  6F6C               	movwf	___lldiv@counter& (0+255),b
 24882  0056D8  D006               	goto	l1949
 24883  0056DA                     
 24884                           ; BSR set to: 0
 24885                           
 24886                           ; BSR set to: 0
 24887  0056DA  90D8               	bcf	status,0,c
 24888  0056DC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24889  0056DE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24890  0056E0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24891  0056E2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24892  0056E4  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24893  0056E6                     l1949:
 24894                           
 24895                           ; BSR set to: 0
 24896                           
 24897                           ; BSR set to: 0
 24898  0056E6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24899  0056E8  D7F8               	goto	l1950
 24900  0056EA                     u12480:
 24901                           
 24902                           ; BSR set to: 0
 24903                           
 24904                           ; BSR set to: 0
 24905                           
 24906                           ; BSR set to: 0
 24907  0056EA  90D8               	bcf	status,0,c
 24908  0056EC  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24909  0056EE  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24910  0056F0  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24911  0056F2  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24912                           
 24913                           ; BSR set to: 0
 24914  0056F4  5164               	movf	___lldiv@divisor& (0+255),w,b
 24915  0056F6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24916  0056F8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24917  0056FA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24918  0056FC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24919  0056FE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24920  005700  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24921  005702  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24922  005704  A0D8               	btfss	status,0,c
 24923  005706  D009               	goto	l1953
 24924                           
 24925                           ; BSR set to: 0
 24926  005708  5164               	movf	___lldiv@divisor& (0+255),w,b
 24927  00570A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24928  00570C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24929  00570E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24930  005710  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24931  005712  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24932  005714  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24933  005716  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24934                           
 24935                           ; BSR set to: 0
 24936  005718  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24937  00571A                     l1953:
 24938                           
 24939                           ; BSR set to: 0
 24940                           
 24941                           ; BSR set to: 0
 24942  00571A  90D8               	bcf	status,0,c
 24943  00571C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24944  00571E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24945  005720  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24946  005722  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24947                           
 24948                           ; BSR set to: 0
 24949  005724  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24950  005726  D7E1               	goto	u12480
 24951  005728                     l1954:
 24952                           
 24953                           ; BSR set to: 0
 24954                           
 24955                           ; BSR set to: 0
 24956  005728  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24957  00572C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24958  005730  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24959  005734  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24960                           
 24961                           ; BSR set to: 0
 24962  005738  0012               	return		;funcret
 24963  00573A                     __end_of___lldiv:
 24964                           	opt stack 0
 24965                           tosu	equ	0xFFF
 24966                           tosh	equ	0xFFE
 24967                           tosl	equ	0xFFD
 24968                           pclath	equ	0xFFA
 24969                           tblptru	equ	0xFF8
 24970                           tblptrh	equ	0xFF7
 24971                           tblptrl	equ	0xFF6
 24972                           tablat	equ	0xFF5
 24973                           prodh	equ	0xFF4
 24974                           prodl	equ	0xFF3
 24975                           intcon	equ	0xFF2
 24976                           intcon2	equ	0xFF1
 24977                           intcon3	equ	0xFF0
 24978                           indf0	equ	0xFEF
 24979                           postinc0	equ	0xFEE
 24980                           fsr0h	equ	0xFEA
 24981                           fsr0l	equ	0xFE9
 24982                           wreg	equ	0xFE8
 24983                           indf1	equ	0xFE7
 24984                           postdec1	equ	0xFE5
 24985                           fsr1h	equ	0xFE2
 24986                           fsr1l	equ	0xFE1
 24987                           indf2	equ	0xFDF
 24988                           postinc2	equ	0xFDE
 24989                           postdec2	equ	0xFDD
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function _TIMER0 *****************
 24995 ;; Defined at:
 24996 ;;		line 15 in file "src/main.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;		None
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;  c               1   47[COMRAM] unsigned char 
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0
 25011 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25012 ;;      Temps:         18       0       0       0       0       0       0       0       0
 25013 ;;      Totals:        19       0       0       0       0       0       0       0       0
 25014 ;;Total ram usage:       19 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:    5
 25017 ;; This function calls:
 25018 ;;		_readButtons
 25019 ;;		_timer
 25020 ;; This function is called by:
 25021 ;;		Interrupt level 2
 25022 ;; This function uses a non-reentrant model
 25023 ;;
 25024                           
 25025                           	psect	intcode
 25026  000008                     __pintcode:
 25027                           	opt stack 0
 25028  000008                     _TIMER0:
 25029                           	opt stack 20
 25030                           
 25031                           ; BSR set to: 0
 25032                           ;incstack = 0
 25033  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25034  00000A  EDC6  F025         	call	int_func,f	;refresh shadow registers
 25035                           tosu	equ	0xFFF
 25036                           tosh	equ	0xFFE
 25037                           tosl	equ	0xFFD
 25038                           pclath	equ	0xFFA
 25039                           tblptru	equ	0xFF8
 25040                           tblptrh	equ	0xFF7
 25041                           tblptrl	equ	0xFF6
 25042                           tablat	equ	0xFF5
 25043                           prodh	equ	0xFF4
 25044                           prodl	equ	0xFF3
 25045                           intcon	equ	0xFF2
 25046                           intcon2	equ	0xFF1
 25047                           intcon3	equ	0xFF0
 25048                           indf0	equ	0xFEF
 25049                           postinc0	equ	0xFEE
 25050                           fsr0h	equ	0xFEA
 25051                           fsr0l	equ	0xFE9
 25052                           wreg	equ	0xFE8
 25053                           indf1	equ	0xFE7
 25054                           postdec1	equ	0xFE5
 25055                           fsr1h	equ	0xFE2
 25056                           fsr1l	equ	0xFE1
 25057                           indf2	equ	0xFDF
 25058                           postinc2	equ	0xFDE
 25059                           postdec2	equ	0xFDD
 25060                           fsr2h	equ	0xFDA
 25061                           fsr2l	equ	0xFD9
 25062                           status	equ	0xFD8
 25063                           
 25064                           	psect	intcode_body
 25065  004B8C                     __pintcode_body:
 25066                           	opt stack 20
 25067  004B8C                     int_func:
 25068                           	opt stack 20
 25069  004B8C  0006               	pop		; remove dummy address from shadow register refresh
 25070  004B8E  CFFA F01E          	movff	pclath,??_TIMER0
 25071  004B92  CFFB F01F          	movff	pclatu,??_TIMER0+1
 25072  004B96  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 25073  004B9A  CFEA F021          	movff	fsr0h,??_TIMER0+3
 25074  004B9E  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 25075  004BA2  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 25076  004BA6  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 25077  004BAA  CFDA F025          	movff	fsr2h,??_TIMER0+7
 25078  004BAE  CFF3 F026          	movff	prodl,??_TIMER0+8
 25079  004BB2  CFF4 F027          	movff	prodh,??_TIMER0+9
 25080  004BB6  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 25081  004BBA  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 25082  004BBE  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 25083  004BC2  CFF5 F02B          	movff	tablat,??_TIMER0+13
 25084  004BC6  C051  F02C         	movff	btemp,??_TIMER0+14
 25085  004BCA  C052  F02D         	movff	btemp+1,??_TIMER0+15
 25086  004BCE  C053  F02E         	movff	btemp+2,??_TIMER0+16
 25087  004BD2  C054  F02F         	movff	btemp+3,??_TIMER0+17
 25088                           
 25089                           ;main.c: 16: if (TMR0IF) {
 25090  004BD6  A4F2               	btfss	intcon,2,c	;volatile
 25091  004BD8  D007               	goto	i2l1261
 25092                           
 25093                           ;main.c: 17: TMR0IF = 0x00;
 25094  004BDA  94F2               	bcf	intcon,2,c	;volatile
 25095                           
 25096                           ;main.c: 18: TMR0H = 0x3C;
 25097  004BDC  0E3C               	movlw	60
 25098  004BDE  6ED7               	movwf	4055,c	;volatile
 25099                           
 25100                           ;main.c: 19: TMR0L = 0xB0;
 25101  004BE0  0EB0               	movlw	176
 25102  004BE2  6ED6               	movwf	4054,c	;volatile
 25103                           
 25104                           ;main.c: 20: timer();
 25105  004BE4  EC8E  F01F         	call	_timer	;wreg free
 25106  004BE8                     i2l1261:
 25107                           
 25108                           ;main.c: 21: }
 25109                           ;main.c: 22: if (RCIF) {
 25110  004BE8  AA9E               	btfss	3998,5,c	;volatile
 25111  004BEA  D01A               	goto	i2l1264
 25112                           
 25113                           ;main.c: 23: char c = RCREG;
 25114  004BEC  CFAE F030          	movff	4014,TIMER0@c	;volatile
 25115                           
 25116                           ;main.c: 24: if (c != '\n' && c != '\r') {
 25117  004BF0  0E0A               	movlw	10
 25118  004BF2  1830               	xorwf	TIMER0@c,w,c
 25119  004BF4  B4D8               	btfsc	status,2,c
 25120  004BF6  D00F               	goto	i2l1263
 25121  004BF8  0E0D               	movlw	13
 25122  004BFA  1830               	xorwf	TIMER0@c,w,c
 25123  004BFC  B4D8               	btfsc	status,2,c
 25124  004BFE  D00B               	goto	i2l1263
 25125                           
 25126                           ;main.c: 25: bufferSerial[cbf++] = c;
 25127  004C00  5043               	movf	_cbf,w,c
 25128  004C02  0D01               	mullw	1
 25129  004C04  0E42               	movlw	low _bufferSerial
 25130  004C06  24F3               	addwf	prodl,w,c
 25131  004C08  6ED9               	movwf	fsr2l,c
 25132  004C0A  0E02               	movlw	high _bufferSerial
 25133  004C0C  20F4               	addwfc	prodh,w,c
 25134  004C0E  6EDA               	movwf	fsr2h,c
 25135  004C10  C030  FFDF         	movff	TIMER0@c,indf2
 25136  004C14  2A43               	incf	_cbf,f,c
 25137  004C16                     i2l1263:
 25138                           
 25139                           ;main.c: 26: }
 25140                           ;main.c: 27: if (cbf >= 80) cbf = 0;
 25141  004C16  0E4F               	movlw	79
 25142  004C18  6443               	cpfsgt	_cbf,c
 25143  004C1A  D002               	goto	i2l1264
 25144  004C1C  0E00               	movlw	0
 25145  004C1E  6E43               	movwf	_cbf,c
 25146  004C20                     i2l1264:
 25147                           
 25148                           ;main.c: 28: }
 25149                           ;main.c: 29: if (INT2IF) {
 25150  004C20  A2F0               	btfss	intcon3,1,c	;volatile
 25151  004C22  D003               	goto	i2l1265
 25152                           
 25153                           ;main.c: 30: INT2IF = 0;
 25154  004C24  92F0               	bcf	intcon3,1,c	;volatile
 25155                           
 25156                           ;main.c: 31: readButtons();
 25157  004C26  ECC0  F02E         	call	_readButtons	;wreg free
 25158  004C2A                     i2l1265:
 25159  004C2A  C02F  F054         	movff	??_TIMER0+17,btemp+3
 25160  004C2E  C02E  F053         	movff	??_TIMER0+16,btemp+2
 25161  004C32  C02D  F052         	movff	??_TIMER0+15,btemp+1
 25162  004C36  C02C  F051         	movff	??_TIMER0+14,btemp
 25163  004C3A  C02B  FFF5         	movff	??_TIMER0+13,tablat
 25164  004C3E  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 25165  004C42  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 25166  004C46  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 25167  004C4A  C027  FFF4         	movff	??_TIMER0+9,prodh
 25168  004C4E  C026  FFF3         	movff	??_TIMER0+8,prodl
 25169  004C52  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 25170  004C56  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 25171  004C5A  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 25172  004C5E  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 25173  004C62  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 25174  004C66  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 25175  004C6A  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 25176  004C6E  C01E  FFFA         	movff	??_TIMER0,pclath
 25177  004C72  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25178  004C74  0011               	retfie		f
 25179  004C76                     __end_of_TIMER0:
 25180                           	opt stack 0
 25181                           tosu	equ	0xFFF
 25182                           tosh	equ	0xFFE
 25183                           tosl	equ	0xFFD
 25184                           pclatu	equ	0xFFB
 25185                           pclath	equ	0xFFA
 25186                           tblptru	equ	0xFF8
 25187                           tblptrh	equ	0xFF7
 25188                           tblptrl	equ	0xFF6
 25189                           tablat	equ	0xFF5
 25190                           prodh	equ	0xFF4
 25191                           prodl	equ	0xFF3
 25192                           intcon	equ	0xFF2
 25193                           intcon2	equ	0xFF1
 25194                           intcon3	equ	0xFF0
 25195                           indf0	equ	0xFEF
 25196                           postinc0	equ	0xFEE
 25197                           fsr0h	equ	0xFEA
 25198                           fsr0l	equ	0xFE9
 25199                           wreg	equ	0xFE8
 25200                           indf1	equ	0xFE7
 25201                           postdec1	equ	0xFE5
 25202                           fsr1h	equ	0xFE2
 25203                           fsr1l	equ	0xFE1
 25204                           indf2	equ	0xFDF
 25205                           postinc2	equ	0xFDE
 25206                           postdec2	equ	0xFDD
 25207                           fsr2h	equ	0xFDA
 25208                           fsr2l	equ	0xFD9
 25209                           status	equ	0xFD8
 25210                           
 25211 ;; *************** function _timer *****************
 25212 ;; Defined at:
 25213 ;;		line 39 in file "src/Controle.h"
 25214 ;; Parameters:    Size  Location     Type
 25215 ;;		None
 25216 ;; Auto vars:     Size  Location     Type
 25217 ;;		None
 25218 ;; Return value:  Size  Location     Type
 25219 ;;                  1    wreg      void 
 25220 ;; Registers used:
 25221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25222 ;; Tracked objects:
 25223 ;;		On entry : 0/0
 25224 ;;		On exit  : 0/0
 25225 ;;		Unchanged: 0/0
 25226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25227 ;;      Params:         0       0       0       0       0       0       0       0       0
 25228 ;;      Locals:         6       0       0       0       0       0       0       0       0
 25229 ;;      Temps:          7       0       0       0       0       0       0       0       0
 25230 ;;      Totals:        13       0       0       0       0       0       0       0       0
 25231 ;;Total ram usage:       13 bytes
 25232 ;; Hardware stack levels used:    1
 25233 ;; Hardware stack levels required when called:    4
 25234 ;; This function calls:
 25235 ;;		i2_setRangeValor
 25236 ;; This function is called by:
 25237 ;;		_TIMER0
 25238 ;; This function uses a non-reentrant model
 25239 ;;
 25240                           
 25241                           	psect	text66
 25242  003F1C                     __ptext66:
 25243                           	opt stack 0
 25244  003F1C                     _timer:
 25245                           	opt stack 20
 25246                           
 25247                           ;Controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 25248                           
 25249                           ;incstack = 0
 25250  003F1C  503A               	movf	_t_controle_flap+1,w,c
 25251  003F1E  E109               	bnz	i2l8806
 25252  003F20  0E02               	movlw	2
 25253  003F22  5C39               	subwf	_t_controle_flap,w,c
 25254  003F24  B0D8               	btfsc	status,0,c
 25255  003F26  D005               	goto	i2l1098
 25256  003F28  0E00               	movlw	0
 25257  003F2A  6E3A               	movwf	_t_controle_flap+1,c
 25258  003F2C  0E00               	movlw	0
 25259  003F2E  6E39               	movwf	_t_controle_flap,c
 25260  003F30  D007               	goto	i2l1100
 25261  003F32                     i2l1098:
 25262  003F32                     i2l8806:
 25263  003F32  0639               	decf	_t_controle_flap,f,c
 25264  003F34  A0D8               	btfss	status,0,c
 25265  003F36  063A               	decf	_t_controle_flap+1,f,c
 25266  003F38  C039  F039         	movff	_t_controle_flap,_t_controle_flap
 25267  003F3C  C03A  F03A         	movff	_t_controle_flap+1,_t_controle_flap+1
 25268  003F40                     i2l1100:
 25269                           
 25270                           ;Controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 25271  003F40  0E02               	movlw	2
 25272  003F42  603F               	cpfslt	_t_controle_buzzer,c
 25273  003F44  D005               	goto	i2l1102
 25274  003F46  0E00               	movlw	0
 25275  003F48  6E19               	movwf	_timer$1417+1,c
 25276  003F4A  0E00               	movlw	0
 25277  003F4C  6E18               	movwf	_timer$1417,c
 25278  003F4E  D004               	goto	i2l1104
 25279  003F50                     i2l1102:
 25280  003F50  063F               	decf	_t_controle_buzzer,f,c
 25281  003F52  C03F  F018         	movff	_t_controle_buzzer,_timer$1417
 25282  003F56  6A19               	clrf	_timer$1417+1,c
 25283  003F58                     i2l1104:
 25284  003F58  C018  F03F         	movff	_timer$1417,_t_controle_buzzer
 25285                           
 25286                           ;Controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 25287  003F5C  5034               	movf	_t_controle_modo_seguranca+1,w,c
 25288  003F5E  E109               	bnz	i2l8820
 25289  003F60  0E02               	movlw	2
 25290  003F62  5C33               	subwf	_t_controle_modo_seguranca,w,c
 25291  003F64  B0D8               	btfsc	status,0,c
 25292  003F66  D005               	goto	i2l1106
 25293  003F68  0E00               	movlw	0
 25294  003F6A  6E34               	movwf	_t_controle_modo_seguranca+1,c
 25295  003F6C  0E00               	movlw	0
 25296  003F6E  6E33               	movwf	_t_controle_modo_seguranca,c
 25297  003F70  D007               	goto	i2l1108
 25298  003F72                     i2l1106:
 25299  003F72                     i2l8820:
 25300  003F72  0633               	decf	_t_controle_modo_seguranca,f,c
 25301  003F74  A0D8               	btfss	status,0,c
 25302  003F76  0634               	decf	_t_controle_modo_seguranca+1,f,c
 25303  003F78  C033  F033         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 25304  003F7C  C034  F034         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 25305  003F80                     i2l1108:
 25306                           
 25307                           ;Controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 25308  003F80  0E02               	movlw	2
 25309  003F82  603C               	cpfslt	_t_leitura_adc,c
 25310  003F84  D005               	goto	i2l1110
 25311  003F86  0E00               	movlw	0
 25312  003F88  6E1B               	movwf	_timer$1418+1,c
 25313  003F8A  0E00               	movlw	0
 25314  003F8C  6E1A               	movwf	_timer$1418,c
 25315  003F8E  D004               	goto	i2l1112
 25316  003F90                     i2l1110:
 25317  003F90  063C               	decf	_t_leitura_adc,f,c
 25318  003F92  C03C  F01A         	movff	_t_leitura_adc,_timer$1418
 25319  003F96  6A1B               	clrf	_timer$1418+1,c
 25320  003F98                     i2l1112:
 25321  003F98  C01A  F03C         	movff	_timer$1418,_t_leitura_adc
 25322                           
 25323                           ;Controle.h: 47: if (t_controle_blink > 1) {
 25324  003F9C  0E01               	movlw	1
 25325  003F9E  643E               	cpfsgt	_t_controle_blink,c
 25326  003FA0  D002               	goto	i2l1113
 25327                           
 25328                           ;Controle.h: 48: --t_controle_blink;
 25329  003FA2  063E               	decf	_t_controle_blink,f,c
 25330                           
 25331                           ;Controle.h: 49: } else {
 25332  003FA4  D007               	goto	i2l1114
 25333  003FA6                     i2l1113:
 25334                           
 25335                           ;Controle.h: 50: blinkk = ~blinkk;
 25336  003FA6  B44F               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 25337  003FA8  D002               	goto	i2u1333_40
 25338  003FAA  844F               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 25339  003FAC  D001               	goto	i2u1334_45
 25340  003FAE                     i2u1333_40:
 25341  003FAE  944F               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 25342  003FB0                     i2u1334_45:
 25343                           
 25344                           ;Controle.h: 51: t_controle_blink = 5;
 25345  003FB0  0E05               	movlw	5
 25346  003FB2  6E3E               	movwf	_t_controle_blink,c
 25347  003FB4                     i2l1114:
 25348                           
 25349                           ;Controle.h: 52: }
 25350                           ;Controle.h: 54: base_sec++;
 25351  003FB4  2A4A               	incf	_base_sec,f,c
 25352                           
 25353                           ;Controle.h: 55: if (base_sec > 9) {
 25354  003FB6  0E09               	movlw	9
 25355  003FB8  644A               	cpfsgt	_base_sec,c
 25356  003FBA  0012               	return	
 25357                           
 25358                           ;Controle.h: 56: base_sec = 0;
 25359  003FBC  0E00               	movlw	0
 25360  003FBE  6E4A               	movwf	_base_sec,c
 25361                           
 25362                           ;Controle.h: 57: sec++;
 25363  003FC0  2A48               	incf	_sec,f,c
 25364                           
 25365                           ;Controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 25366  003FC2  0E02               	movlw	2
 25367  003FC4  0101               	movlb	1	; () banked
 25368  003FC6  6197               	cpfslt	_t_wifi_restart& (0+255),b
 25369  003FC8  D005               	goto	i2l1117
 25370                           
 25371                           ; BSR set to: 1
 25372  003FCA  0E00               	movlw	0
 25373  003FCC  6E1D               	movwf	_timer$1419+1,c
 25374  003FCE  0E00               	movlw	0
 25375  003FD0  6E1C               	movwf	_timer$1419,c
 25376  003FD2  D004               	goto	i2l1119
 25377  003FD4                     i2l1117:
 25378                           
 25379                           ; BSR set to: 1
 25380                           
 25381                           ; BSR set to: 1
 25382  003FD4  0797               	decf	_t_wifi_restart& (0+255),f,b
 25383  003FD6  C197  F01C         	movff	_t_wifi_restart,_timer$1419
 25384  003FDA  6A1D               	clrf	_timer$1419+1,c
 25385  003FDC                     i2l1119:
 25386                           
 25387                           ; BSR set to: 1
 25388                           
 25389                           ; BSR set to: 1
 25390  003FDC  C01C  F197         	movff	_timer$1419,_t_wifi_restart
 25391                           
 25392                           ; BSR set to: 1
 25393                           ;Controle.h: 66: if (sec > 59) {
 25394  003FE0  0E3B               	movlw	59
 25395  003FE2  6448               	cpfsgt	_sec,c
 25396  003FE4  0012               	return	
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;Controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 25400  003FE6  5038               	movf	_t_controle_religar_buzzer+1,w,c
 25401  003FE8  E109               	bnz	i2l8858
 25402  003FEA  0E02               	movlw	2
 25403  003FEC  5C37               	subwf	_t_controle_religar_buzzer,w,c
 25404  003FEE  B0D8               	btfsc	status,0,c
 25405  003FF0  D005               	goto	i2l1122
 25406                           
 25407                           ; BSR set to: 1
 25408  003FF2  0E00               	movlw	0
 25409  003FF4  6E38               	movwf	_t_controle_religar_buzzer+1,c
 25410  003FF6  0E00               	movlw	0
 25411  003FF8  6E37               	movwf	_t_controle_religar_buzzer,c
 25412  003FFA  D007               	goto	i2l1124
 25413  003FFC                     i2l1122:
 25414  003FFC                     i2l8858:
 25415                           
 25416                           ; BSR set to: 1
 25417  003FFC  0637               	decf	_t_controle_religar_buzzer,f,c
 25418  003FFE  A0D8               	btfss	status,0,c
 25419  004000  0638               	decf	_t_controle_religar_buzzer+1,f,c
 25420  004002  C037  F037         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 25421  004006  C038  F038         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 25422  00400A                     i2l1124:
 25423                           
 25424                           ; BSR set to: 1
 25425                           ;Controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 25426                           
 25427                           ; BSR set to: 1
 25428  00400A  5036               	movf	_t_controle_religar_ventoinha+1,w,c
 25429  00400C  E109               	bnz	i2l8864
 25430  00400E  0E02               	movlw	2
 25431  004010  5C35               	subwf	_t_controle_religar_ventoinha,w,c
 25432  004012  B0D8               	btfsc	status,0,c
 25433  004014  D005               	goto	i2l1126
 25434                           
 25435                           ; BSR set to: 1
 25436  004016  0E00               	movlw	0
 25437  004018  6E36               	movwf	_t_controle_religar_ventoinha+1,c
 25438  00401A  0E00               	movlw	0
 25439  00401C  6E35               	movwf	_t_controle_religar_ventoinha,c
 25440  00401E  D007               	goto	i2l1128
 25441  004020                     i2l1126:
 25442  004020                     i2l8864:
 25443                           
 25444                           ; BSR set to: 1
 25445  004020  0635               	decf	_t_controle_religar_ventoinha,f,c
 25446  004022  A0D8               	btfss	status,0,c
 25447  004024  0636               	decf	_t_controle_religar_ventoinha+1,f,c
 25448  004026  C035  F035         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 25449  00402A  C036  F036         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 25450  00402E                     i2l1128:
 25451                           
 25452                           ; BSR set to: 1
 25453                           ;Controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 25454                           
 25455                           ; BSR set to: 1
 25456  00402E  0E64               	movlw	100
 25457  004030  0100               	movlb	0	; () banked
 25458  004032  19EC               	xorwf	_tempajt& (0+255),w,b
 25459  004034  B4D8               	btfsc	status,2,c
 25460  004036  D057               	goto	i2l1131
 25461                           
 25462                           ; BSR set to: 0
 25463  004038  0E6E               	movlw	110
 25464  00403A  19EC               	xorwf	_tempajt& (0+255),w,b
 25465  00403C  B4D8               	btfsc	status,2,c
 25466  00403E  D053               	goto	i2l1131
 25467                           
 25468                           ; BSR set to: 0
 25469  004040  0E85               	movlw	133
 25470  004042  19EC               	xorwf	_tempajt& (0+255),w,b
 25471  004044  B4D8               	btfsc	status,2,c
 25472  004046  D04F               	goto	i2l1131
 25473                           
 25474                           ; BSR set to: 0
 25475  004048  05FE               	decf	_f_falta_energia& (0+255),w,b
 25476  00404A  A4D8               	btfss	status,2,c
 25477  00404C  D04C               	goto	i2l1131
 25478                           
 25479                           ; BSR set to: 0
 25480                           ;Controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 25481  00404E  51EC               	movf	_tempajt& (0+255),w,b
 25482  004050  6E11               	movwf	??_timer& (0+255),c
 25483  004052  6A12               	clrf	(??_timer+1)& (0+255),c
 25484  004054  51EF               	movf	_h_subir_temp_automatica& (0+255),w,b
 25485  004056  C0FD  F013         	movff	_temp,??_timer+2
 25486  00405A  6A14               	clrf	(??_timer+3)& (0+255),c
 25487  00405C  2613               	addwf	??_timer+2,f,c
 25488  00405E  0E00               	movlw	0
 25489  004060  2214               	addwfc	??_timer+3,f,c
 25490  004062  5011               	movf	??_timer,w,c
 25491  004064  5C13               	subwf	??_timer+2,w,c
 25492  004066  5014               	movf	??_timer+3,w,c
 25493  004068  0A80               	xorlw	128
 25494  00406A  6E15               	movwf	(??_timer+4)& (0+255),c
 25495  00406C  5012               	movf	??_timer+1,w,c
 25496  00406E  0A80               	xorlw	128
 25497  004070  5815               	subwfb	(??_timer+4)& (0+255),w,c
 25498  004072  A0D8               	btfss	status,0,c
 25499  004074  D038               	goto	i2l1131
 25500                           
 25501                           ; BSR set to: 0
 25502  004076  51EF               	movf	_h_subir_temp_automatica& (0+255),w,b
 25503  004078  6E11               	movwf	??_timer& (0+255),c
 25504  00407A  6A12               	clrf	(??_timer+1)& (0+255),c
 25505  00407C  1E11               	comf	??_timer,f,c
 25506  00407E  1E12               	comf	??_timer+1,f,c
 25507  004080  4A11               	infsnz	??_timer,f,c
 25508  004082  2A12               	incf	??_timer+1,f,c
 25509  004084  51FD               	movf	_temp& (0+255),w,b
 25510  004086  6E13               	movwf	(??_timer+2)& (0+255),c
 25511  004088  6A14               	clrf	(??_timer+3)& (0+255),c
 25512  00408A  5011               	movf	??_timer,w,c
 25513  00408C  2613               	addwf	??_timer+2,f,c
 25514  00408E  5012               	movf	??_timer+1,w,c
 25515  004090  2214               	addwfc	??_timer+3,f,c
 25516  004092  51EC               	movf	_tempajt& (0+255),w,b
 25517  004094  6E15               	movwf	(??_timer+4)& (0+255),c
 25518  004096  6A16               	clrf	(??_timer+5)& (0+255),c
 25519  004098  5013               	movf	??_timer+2,w,c
 25520  00409A  5C15               	subwf	??_timer+4,w,c
 25521  00409C  5016               	movf	??_timer+5,w,c
 25522  00409E  0A80               	xorlw	128
 25523  0040A0  6E17               	movwf	(??_timer+6)& (0+255),c
 25524  0040A2  5014               	movf	??_timer+3,w,c
 25525  0040A4  0A80               	xorlw	128
 25526  0040A6  5817               	subwfb	(??_timer+6)& (0+255),w,c
 25527  0040A8  A0D8               	btfss	status,0,c
 25528  0040AA  D01D               	goto	i2l1131
 25529                           
 25530                           ; BSR set to: 0
 25531  0040AC  0E96               	movlw	150
 25532  0040AE  61EC               	cpfslt	_tempajt& (0+255),b
 25533  0040B0  D01A               	goto	i2l1131
 25534                           
 25535                           ; BSR set to: 0
 25536  0040B2  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25537  0040B4  B4D8               	btfsc	status,2,c
 25538  0040B6  D017               	goto	i2l1131
 25539                           
 25540                           ; BSR set to: 0
 25541  0040B8  51F8               	movf	_trava_fase& (0+255),w,b
 25542  0040BA  A4D8               	btfss	status,2,c
 25543  0040BC  D014               	goto	i2l1131
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;Controle.h: 75: t_controle_temp_automatica++;
 25547  0040BE  2A3D               	incf	_t_controle_temp_automatica,f,c
 25548                           
 25549                           ; BSR set to: 0
 25550                           ;Controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 25551  0040C0  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25552  0040C2  5C3D               	subwf	_t_controle_temp_automatica,w,c
 25553  0040C4  A0D8               	btfss	status,0,c
 25554  0040C6  D00F               	goto	i2l1131
 25555                           
 25556                           ; BSR set to: 0
 25557                           ;Controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 25558  0040C8  0EEC               	movlw	low _tempajt
 25559  0040CA  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25560  0040CC  0E00               	movlw	high _tempajt
 25561  0040CE  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25562  0040D0  0E55               	movlw	85
 25563  0040D2  6E08               	movwf	i2setRangeValor@_min,c
 25564  0040D4  0E97               	movlw	151
 25565  0040D6  6E09               	movwf	i2setRangeValor@_max,c
 25566  0040D8  0E01               	movlw	1
 25567  0040DA  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25568  0040DC  0E2B               	movlw	43
 25569  0040DE  EC6F  F029         	call	i2_setRangeValor
 25570                           
 25571                           ;Controle.h: 78: t_controle_temp_automatica = 0;
 25572  0040E2  0E00               	movlw	0
 25573  0040E4  6E3D               	movwf	_t_controle_temp_automatica,c
 25574  0040E6                     i2l1131:
 25575                           
 25576                           ;Controle.h: 79: }
 25577                           ;Controle.h: 80: }
 25578                           ;Controle.h: 81: }
 25579                           ;Controle.h: 83: sec = 0;
 25580  0040E6  0E00               	movlw	0
 25581  0040E8  6E48               	movwf	_sec,c
 25582                           
 25583                           ;Controle.h: 84: min++;
 25584  0040EA  2A47               	incf	_min,f,c
 25585                           
 25586                           ;Controle.h: 85: if (min > 59) {
 25587  0040EC  0E3B               	movlw	59
 25588  0040EE  6447               	cpfsgt	_min,c
 25589  0040F0  0012               	return	
 25590                           
 25591                           ;Controle.h: 86: min = 0;
 25592  0040F2  0E00               	movlw	0
 25593  0040F4  6E47               	movwf	_min,c
 25594                           
 25595                           ;Controle.h: 87: hor++;
 25596  0040F6  2A46               	incf	_hor,f,c
 25597                           
 25598                           ;Controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 25599  0040F8  0100               	movlb	0	; () banked
 25600  0040FA  51F8               	movf	_trava_fase& (0+255),w,b
 25601  0040FC  A4D8               	btfss	status,2,c
 25602  0040FE  D062               	goto	i2l1142
 25603                           
 25604                           ; BSR set to: 0
 25605  004100  51F3               	movf	_t_temp_automatica& (0+255),w,b
 25606  004102  B4D8               	btfsc	status,2,c
 25607  004104  D05F               	goto	i2l1142
 25608                           
 25609                           ; BSR set to: 0
 25610  004106  05FE               	decf	_f_falta_energia& (0+255),w,b
 25611  004108  A4D8               	btfss	status,2,c
 25612  00410A  D05C               	goto	i2l1142
 25613                           
 25614                           ; BSR set to: 0
 25615                           ;Controle.h: 91: if (tempajt == 100 && fase == 1) {
 25616  00410C  0E64               	movlw	100
 25617  00410E  19EC               	xorwf	_tempajt& (0+255),w,b
 25618  004110  A4D8               	btfss	status,2,c
 25619  004112  D019               	goto	i2l1134
 25620                           
 25621                           ; BSR set to: 0
 25622  004114  05EE               	decf	_fase& (0+255),w,b
 25623  004116  A4D8               	btfss	status,2,c
 25624  004118  D016               	goto	i2l1134
 25625                           
 25626                           ; BSR set to: 0
 25627                           ;Controle.h: 92: t_controle_fim_fases++;
 25628  00411A  2A40               	incf	_t_controle_fim_fases,f,c
 25629                           
 25630                           ; BSR set to: 0
 25631                           ;Controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 25632  00411C  504E               	movf	_t_fim_fase1,w,c
 25633  00411E  5C40               	subwf	_t_controle_fim_fases,w,c
 25634  004120  A0D8               	btfss	status,0,c
 25635  004122  D050               	goto	i2l1142
 25636                           
 25637                           ; BSR set to: 0
 25638  004124  504E               	movf	_t_fim_fase1,w,c
 25639  004126  B4D8               	btfsc	status,2,c
 25640  004128  D04D               	goto	i2l1142
 25641                           
 25642                           ; BSR set to: 0
 25643                           ;Controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 25644  00412A  0EEC               	movlw	low _tempajt
 25645  00412C  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25646  00412E  0E00               	movlw	high _tempajt
 25647  004130  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25648  004132  0E55               	movlw	85
 25649  004134  6E08               	movwf	i2setRangeValor@_min,c
 25650  004136  0E97               	movlw	151
 25651  004138  6E09               	movwf	i2setRangeValor@_max,c
 25652  00413A  0E01               	movlw	1
 25653  00413C  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25654  00413E  0E2B               	movlw	43
 25655  004140  EC6F  F029         	call	i2_setRangeValor
 25656  004144  D03D               	goto	i2l1140
 25657  004146                     i2l1134:
 25658  004146  0E6E               	movlw	110
 25659  004148  0100               	movlb	0	; () banked
 25660  00414A  19EC               	xorwf	_tempajt& (0+255),w,b
 25661  00414C  A4D8               	btfss	status,2,c
 25662  00414E  D01A               	goto	i2l1137
 25663                           
 25664                           ; BSR set to: 0
 25665  004150  0E02               	movlw	2
 25666  004152  19EE               	xorwf	_fase& (0+255),w,b
 25667  004154  A4D8               	btfss	status,2,c
 25668  004156  D016               	goto	i2l1137
 25669                           
 25670                           ; BSR set to: 0
 25671                           ;Controle.h: 98: t_controle_fim_fases++;
 25672  004158  2A40               	incf	_t_controle_fim_fases,f,c
 25673                           
 25674                           ; BSR set to: 0
 25675                           ;Controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 25676  00415A  504D               	movf	_t_fim_fase2,w,c
 25677  00415C  5C40               	subwf	_t_controle_fim_fases,w,c
 25678  00415E  A0D8               	btfss	status,0,c
 25679  004160  D031               	goto	i2l1142
 25680                           
 25681                           ; BSR set to: 0
 25682  004162  504D               	movf	_t_fim_fase2,w,c
 25683  004164  B4D8               	btfsc	status,2,c
 25684  004166  D02E               	goto	i2l1142
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;Controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 25688  004168  0EEC               	movlw	low _tempajt
 25689  00416A  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25690  00416C  0E00               	movlw	high _tempajt
 25691  00416E  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25692  004170  0E55               	movlw	85
 25693  004172  6E08               	movwf	i2setRangeValor@_min,c
 25694  004174  0E97               	movlw	151
 25695  004176  6E09               	movwf	i2setRangeValor@_max,c
 25696  004178  0E01               	movlw	1
 25697  00417A  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25698  00417C  0E2B               	movlw	43
 25699  00417E  EC6F  F029         	call	i2_setRangeValor
 25700  004182  D01E               	goto	i2l1140
 25701  004184                     i2l1137:
 25702  004184  0E85               	movlw	133
 25703  004186  0100               	movlb	0	; () banked
 25704  004188  19EC               	xorwf	_tempajt& (0+255),w,b
 25705  00418A  A4D8               	btfss	status,2,c
 25706  00418C  D019               	goto	i2l1140
 25707                           
 25708                           ; BSR set to: 0
 25709  00418E  0E03               	movlw	3
 25710  004190  19EE               	xorwf	_fase& (0+255),w,b
 25711  004192  A4D8               	btfss	status,2,c
 25712  004194  D015               	goto	i2l1140
 25713                           
 25714                           ; BSR set to: 0
 25715                           ;Controle.h: 104: t_controle_fim_fases++;
 25716  004196  2A40               	incf	_t_controle_fim_fases,f,c
 25717                           
 25718                           ; BSR set to: 0
 25719                           ;Controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 25720  004198  504C               	movf	_t_fim_fase3,w,c
 25721  00419A  5C40               	subwf	_t_controle_fim_fases,w,c
 25722  00419C  A0D8               	btfss	status,0,c
 25723  00419E  D012               	goto	i2l1142
 25724                           
 25725                           ; BSR set to: 0
 25726  0041A0  504C               	movf	_t_fim_fase3,w,c
 25727  0041A2  B4D8               	btfsc	status,2,c
 25728  0041A4  D00F               	goto	i2l1142
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;Controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 25732  0041A6  0EEC               	movlw	low _tempajt
 25733  0041A8  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25734  0041AA  0E00               	movlw	high _tempajt
 25735  0041AC  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25736  0041AE  0E55               	movlw	85
 25737  0041B0  6E08               	movwf	i2setRangeValor@_min,c
 25738  0041B2  0E97               	movlw	151
 25739  0041B4  6E09               	movwf	i2setRangeValor@_max,c
 25740  0041B6  0E01               	movlw	1
 25741  0041B8  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25742  0041BA  0E2B               	movlw	43
 25743  0041BC  EC6F  F029         	call	i2_setRangeValor
 25744  0041C0                     i2l1140:
 25745                           
 25746                           ;Controle.h: 110: t_controle_fim_fases = 0;
 25747  0041C0  0E00               	movlw	0
 25748  0041C2  6E40               	movwf	_t_controle_fim_fases,c
 25749  0041C4                     i2l1142:
 25750                           
 25751                           ;Controle.h: 111: }
 25752                           ;Controle.h: 112: }
 25753                           ;Controle.h: 114: if (hor > 23) {
 25754  0041C4  0E17               	movlw	23
 25755  0041C6  6446               	cpfsgt	_hor,c
 25756  0041C8  0012               	return	
 25757                           
 25758                           ;Controle.h: 115: hor = 0;
 25759  0041CA  0E00               	movlw	0
 25760  0041CC  6E46               	movwf	_hor,c
 25761  0041CE  0012               	return	
 25762  0041D0                     __end_of_timer:
 25763                           	opt stack 0
 25764                           tosu	equ	0xFFF
 25765                           tosh	equ	0xFFE
 25766                           tosl	equ	0xFFD
 25767                           pclatu	equ	0xFFB
 25768                           pclath	equ	0xFFA
 25769                           tblptru	equ	0xFF8
 25770                           tblptrh	equ	0xFF7
 25771                           tblptrl	equ	0xFF6
 25772                           tablat	equ	0xFF5
 25773                           prodh	equ	0xFF4
 25774                           prodl	equ	0xFF3
 25775                           intcon	equ	0xFF2
 25776                           intcon2	equ	0xFF1
 25777                           intcon3	equ	0xFF0
 25778                           indf0	equ	0xFEF
 25779                           postinc0	equ	0xFEE
 25780                           fsr0h	equ	0xFEA
 25781                           fsr0l	equ	0xFE9
 25782                           wreg	equ	0xFE8
 25783                           indf1	equ	0xFE7
 25784                           postdec1	equ	0xFE5
 25785                           fsr1h	equ	0xFE2
 25786                           fsr1l	equ	0xFE1
 25787                           indf2	equ	0xFDF
 25788                           postinc2	equ	0xFDE
 25789                           postdec2	equ	0xFDD
 25790                           fsr2h	equ	0xFDA
 25791                           fsr2l	equ	0xFD9
 25792                           status	equ	0xFD8
 25793                           
 25794 ;; *************** function i2_setRangeValor *****************
 25795 ;; Defined at:
 25796 ;;		line 76 in file "src/FuncoesControlador.h"
 25797 ;; Parameters:    Size  Location     Type
 25798 ;;  _acao           1    wreg     unsigned char 
 25799 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 25800 ;;		 -> t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), t_religar_ventoinha_automatica(1), 
 25801 ;;		 -> h_subir_temp_automatica(1), wifi_habilita_alteracao(2), t_temp_automatica(1), t_buzzer_religar(1), 
 25802 ;;		 -> t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), h_modo_seguranca(1), 
 25803 ;;		 -> h_venotinha(1), h_flap(1), h_abafador(1), senha_desbloqueio_func(1), 
 25804 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 25805 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 25806 ;;		 -> clima(1), 
 25807 ;;  _min            1    7[COMRAM] unsigned char 
 25808 ;;  _max            1    8[COMRAM] unsigned char 
 25809 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 25810 ;; Auto vars:     Size  Location     Type
 25811 ;;  _acao           1   13[COMRAM] unsigned char 
 25812 ;;  setRangeValo    2   14[COMRAM] int 
 25813 ;; Return value:  Size  Location     Type
 25814 ;;                  1    wreg      void 
 25815 ;; Registers used:
 25816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25817 ;; Tracked objects:
 25818 ;;		On entry : 0/0
 25819 ;;		On exit  : 0/0
 25820 ;;		Unchanged: 0/0
 25821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25822 ;;      Params:         5       0       0       0       0       0       0       0       0
 25823 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25824 ;;      Temps:          3       0       0       0       0       0       0       0       0
 25825 ;;      Totals:        11       0       0       0       0       0       0       0       0
 25826 ;;Total ram usage:       11 bytes
 25827 ;; Hardware stack levels used:    1
 25828 ;; Hardware stack levels required when called:    3
 25829 ;; This function calls:
 25830 ;;		i2_writeEEPROM_ext
 25831 ;; This function is called by:
 25832 ;;		_timer
 25833 ;; This function uses a non-reentrant model
 25834 ;;
 25835                           
 25836                           	psect	text67
 25837  0052DE                     __ptext67:
 25838                           	opt stack 0
 25839  0052DE                     i2_setRangeValor:
 25840                           	opt stack 20
 25841                           
 25842                           ;incstack = 0
 25843                           ;i2setRangeValor@_acao stored from wreg
 25844  0052DE  6E0E               	movwf	i2setRangeValor@_acao,c
 25845                           
 25846                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 25847  0052E0  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25848  0052E4  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25849  0052E8  50DF               	movf	indf2,w,c
 25850  0052EA  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25851  0052EC  500B               	movf	??i2_setRangeValor,w,c
 25852  0052EE  6E0F               	movwf	i2setRangeValor@_aux,c
 25853  0052F0  6A10               	clrf	i2setRangeValor@_aux+1,c
 25854                           
 25855                           ;FuncoesControlador.h: 78: switch (_acao) {
 25856  0052F2  D02C               	goto	i2l934
 25857  0052F4                     
 25858                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 25859  0052F4  5009               	movf	i2setRangeValor@_max,w,c
 25860  0052F6  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25861  0052F8  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25862  0052FA  500B               	movf	??i2_setRangeValor,w,c
 25863  0052FC  5C0F               	subwf	i2setRangeValor@_aux,w,c
 25864  0052FE  5010               	movf	i2setRangeValor@_aux+1,w,c
 25865  005300  0A80               	xorlw	128
 25866  005302  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25867  005304  500C               	movf	??i2_setRangeValor+1,w,c
 25868  005306  0A80               	xorlw	128
 25869  005308  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25870  00530A  B0D8               	btfsc	status,0,c
 25871  00530C  D003               	goto	i2l937
 25872  00530E  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 25873  005310  2A10               	incf	i2setRangeValor@_aux+1,f,c
 25874  005312  D013               	goto	L32
 25875  005314                     i2l937:
 25876  005314  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 25877  005318  D017               	goto	L33
 25878  00531A                     
 25879                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 25880  00531A  5008               	movf	i2setRangeValor@_min,w,c
 25881  00531C  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25882  00531E  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25883  005320  500F               	movf	i2setRangeValor@_aux,w,c
 25884  005322  5C0B               	subwf	??i2_setRangeValor,w,c
 25885  005324  500C               	movf	??i2_setRangeValor+1,w,c
 25886  005326  0A80               	xorlw	128
 25887  005328  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25888  00532A  5010               	movf	i2setRangeValor@_aux+1,w,c
 25889  00532C  0A80               	xorlw	128
 25890  00532E  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25891  005330  B0D8               	btfsc	status,0,c
 25892  005332  D008               	goto	i2l943
 25893  005334  060F               	decf	i2setRangeValor@_aux,f,c
 25894  005336  A0D8               	btfss	status,0,c
 25895  005338  0610               	decf	i2setRangeValor@_aux+1,f,c
 25896  00533A                     L32:
 25897  00533A  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 25898  00533E  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 25899  005342  D00B               	goto	i2l940
 25900  005344                     i2l943:
 25901  005344  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 25902  005348                     L33:
 25903  005348  6A10               	clrf	i2setRangeValor@_aux+1,c
 25904                           
 25905                           ;FuncoesControlador.h: 85: }
 25906                           
 25907                           ;FuncoesControlador.h: 84: break;
 25908  00534A  D007               	goto	i2l940
 25909  00534C                     i2l934:
 25910  00534C  500E               	movf	i2setRangeValor@_acao,w,c
 25911                           
 25912                           ; Switch size 1, requested type "space"
 25913                           ; Number of cases is 2, Range of values is 43 to 45
 25914                           ; switch strategies available:
 25915                           ; Name         Instructions Cycles
 25916                           ; simple_byte            7     4 (average)
 25917                           ;	Chosen strategy is simple_byte
 25918  00534E  0A2B               	xorlw	43	; case 43
 25919  005350  B4D8               	btfsc	status,2,c
 25920  005352  D7D0               	goto	i2l935
 25921  005354  0A06               	xorlw	6	; case 45
 25922  005356  B4D8               	btfsc	status,2,c
 25923  005358  D7E0               	goto	i2l941
 25924  00535A                     i2l940:
 25925                           
 25926                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 25927  00535A  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25928  00535C  B4D8               	btfsc	status,2,c
 25929  00535E  D005               	goto	i2l946
 25930                           
 25931                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 25932  005360  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 25933  005364  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25934  005366  ECD3  F02D         	call	i2_writeEEPROM_ext
 25935  00536A                     i2l946:
 25936                           
 25937                           ;FuncoesControlador.h: 88: }
 25938                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 25939  00536A  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25940  00536E  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25941  005372  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 25942  005376  0012               	return		;funcret
 25943  005378                     __end_ofi2_setRangeValor:
 25944                           	opt stack 0
 25945                           tosu	equ	0xFFF
 25946                           tosh	equ	0xFFE
 25947                           tosl	equ	0xFFD
 25948                           pclatu	equ	0xFFB
 25949                           pclath	equ	0xFFA
 25950                           tblptru	equ	0xFF8
 25951                           tblptrh	equ	0xFF7
 25952                           tblptrl	equ	0xFF6
 25953                           tablat	equ	0xFF5
 25954                           prodh	equ	0xFF4
 25955                           prodl	equ	0xFF3
 25956                           intcon	equ	0xFF2
 25957                           intcon2	equ	0xFF1
 25958                           intcon3	equ	0xFF0
 25959                           indf0	equ	0xFEF
 25960                           postinc0	equ	0xFEE
 25961                           fsr0h	equ	0xFEA
 25962                           fsr0l	equ	0xFE9
 25963                           wreg	equ	0xFE8
 25964                           indf1	equ	0xFE7
 25965                           postdec1	equ	0xFE5
 25966                           fsr1h	equ	0xFE2
 25967                           fsr1l	equ	0xFE1
 25968                           indf2	equ	0xFDF
 25969                           postinc2	equ	0xFDE
 25970                           postdec2	equ	0xFDD
 25971                           fsr2h	equ	0xFDA
 25972                           fsr2l	equ	0xFD9
 25973                           status	equ	0xFD8
 25974                           
 25975 ;; *************** function i2_writeEEPROM_ext *****************
 25976 ;; Defined at:
 25977 ;;		line 14 in file "src/Eeprom_ext.h"
 25978 ;; Parameters:    Size  Location     Type
 25979 ;;  adress          1    wreg     unsigned char 
 25980 ;;  data            1    3[COMRAM] unsigned char 
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;  adress          1    4[COMRAM] unsigned char 
 25983 ;; Return value:  Size  Location     Type
 25984 ;;                  1    wreg      void 
 25985 ;; Registers used:
 25986 ;;		wreg, status,2, status,0, cstack
 25987 ;; Tracked objects:
 25988 ;;		On entry : 0/0
 25989 ;;		On exit  : 0/0
 25990 ;;		Unchanged: 0/0
 25991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25992 ;;      Params:         1       0       0       0       0       0       0       0       0
 25993 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25995 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25996 ;;Total ram usage:        2 bytes
 25997 ;; Hardware stack levels used:    1
 25998 ;; Hardware stack levels required when called:    2
 25999 ;; This function calls:
 26000 ;;		i2_I2C_Start
 26001 ;;		i2_I2C_Stop
 26002 ;;		i2_I2C_Write
 26003 ;;		i2_delay
 26004 ;; This function is called by:
 26005 ;;		i2_setRangeValor
 26006 ;; This function uses a non-reentrant model
 26007 ;;
 26008                           
 26009                           	psect	text68
 26010  005BA6                     __ptext68:
 26011                           	opt stack 0
 26012  005BA6                     i2_writeEEPROM_ext:
 26013                           	opt stack 20
 26014                           
 26015                           ;incstack = 0
 26016                           ;i2writeEEPROM_ext@adress stored from wreg
 26017  005BA6  6E05               	movwf	i2writeEEPROM_ext@adress,c
 26018                           
 26019                           ;Eeprom_ext.h: 16: I2C_Start();
 26020  005BA8  EC8F  F02F         	call	i2_I2C_Start	;wreg free
 26021                           
 26022                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 26023  005BAC  0E00               	movlw	0
 26024  005BAE  6E03               	movwf	i2I2C_Write@d+1,c
 26025  005BB0  0EA0               	movlw	160
 26026  005BB2  6E02               	movwf	i2I2C_Write@d,c
 26027  005BB4  EC7A  F02F         	call	i2_I2C_Write	;wreg free
 26028                           
 26029                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 26030  005BB8  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 26031  005BBC  6A03               	clrf	i2I2C_Write@d+1,c
 26032  005BBE  EC7A  F02F         	call	i2_I2C_Write	;wreg free
 26033                           
 26034                           ;Eeprom_ext.h: 20: I2C_Write(data);
 26035  005BC2  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 26036  005BC6  6A03               	clrf	i2I2C_Write@d+1,c
 26037  005BC8  EC7A  F02F         	call	i2_I2C_Write	;wreg free
 26038                           
 26039                           ;Eeprom_ext.h: 21: I2C_Stop();
 26040  005BCC  EC8B  F02F         	call	i2_I2C_Stop	;wreg free
 26041                           
 26042                           ;Eeprom_ext.h: 22: delay(105);
 26043  005BD0  0E00               	movlw	0
 26044  005BD2  6E02               	movwf	i2delay@x+1,c
 26045  005BD4  0E69               	movlw	105
 26046  005BD6  6E01               	movwf	i2delay@x,c
 26047  005BD8  ECFA  F02E         	call	i2_delay	;wreg free
 26048  005BDC  0012               	return		;funcret
 26049  005BDE                     __end_ofi2_writeEEPROM_ext:
 26050                           	opt stack 0
 26051                           tosu	equ	0xFFF
 26052                           tosh	equ	0xFFE
 26053                           tosl	equ	0xFFD
 26054                           pclatu	equ	0xFFB
 26055                           pclath	equ	0xFFA
 26056                           tblptru	equ	0xFF8
 26057                           tblptrh	equ	0xFF7
 26058                           tblptrl	equ	0xFF6
 26059                           tablat	equ	0xFF5
 26060                           prodh	equ	0xFF4
 26061                           prodl	equ	0xFF3
 26062                           intcon	equ	0xFF2
 26063                           intcon2	equ	0xFF1
 26064                           intcon3	equ	0xFF0
 26065                           indf0	equ	0xFEF
 26066                           postinc0	equ	0xFEE
 26067                           fsr0h	equ	0xFEA
 26068                           fsr0l	equ	0xFE9
 26069                           wreg	equ	0xFE8
 26070                           indf1	equ	0xFE7
 26071                           postdec1	equ	0xFE5
 26072                           fsr1h	equ	0xFE2
 26073                           fsr1l	equ	0xFE1
 26074                           indf2	equ	0xFDF
 26075                           postinc2	equ	0xFDE
 26076                           postdec2	equ	0xFDD
 26077                           fsr2h	equ	0xFDA
 26078                           fsr2l	equ	0xFD9
 26079                           status	equ	0xFD8
 26080                           
 26081 ;; *************** function i2_delay *****************
 26082 ;; Defined at:
 26083 ;;		line 18 in file "src/function.c"
 26084 ;; Parameters:    Size  Location     Type
 26085 ;;  x               2    0[COMRAM] int 
 26086 ;; Auto vars:     Size  Location     Type
 26087 ;;		None
 26088 ;; Return value:  Size  Location     Type
 26089 ;;                  1    wreg      void 
 26090 ;; Registers used:
 26091 ;;		wreg, status,2, status,0
 26092 ;; Tracked objects:
 26093 ;;		On entry : 0/0
 26094 ;;		On exit  : 0/0
 26095 ;;		Unchanged: 0/0
 26096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26097 ;;      Params:         2       0       0       0       0       0       0       0       0
 26098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26099 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26100 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26101 ;;Total ram usage:        3 bytes
 26102 ;; Hardware stack levels used:    1
 26103 ;; This function calls:
 26104 ;;		Nothing
 26105 ;; This function is called by:
 26106 ;;		i2_writeEEPROM_ext
 26107 ;; This function uses a non-reentrant model
 26108 ;;
 26109                           
 26110                           	psect	text69
 26111  005DF4                     __ptext69:
 26112                           	opt stack 0
 26113  005DF4                     i2_delay:
 26114                           	opt stack 21
 26115                           
 26116                           ;function.c: 19: while (x--) {
 26117                           
 26118                           ;incstack = 0
 26119  005DF4  D008               	goto	i2l1476
 26120  005DF6                     i2l6474:
 26121                           
 26122                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 26123  005DF6  0E03               	movlw	3
 26124  005DF8  6E03               	movwf	??i2_delay& (0+255),c
 26125  005DFA  0E98               	movlw	152
 26126  005DFC                     i2u1545_47:
 26127  005DFC  2EE8               	decfsz	wreg,f,c
 26128  005DFE  D7FE               	bra	i2u1545_47
 26129  005E00  2E03               	decfsz	??i2_delay& (0+255),f,c
 26130  005E02  D7FC               	bra	i2u1545_47
 26131  005E04  0004               	clrwdt		;# 
 26132  005E06                     i2l1476:
 26133  005E06  0601               	decf	i2delay@x,f,c
 26134  005E08  A0D8               	btfss	status,0,c
 26135  005E0A  0602               	decf	i2delay@x+1,f,c
 26136  005E0C  2801               	incf	i2delay@x,w,c
 26137  005E0E  E1F3               	bnz	i2l6474
 26138  005E10  2802               	incf	i2delay@x+1,w,c
 26139  005E12  B4D8               	btfsc	status,2,c
 26140  005E14  0012               	return	
 26141  005E16  D7EF               	goto	i2l1477
 26142  005E18                     __end_ofi2_delay:
 26143                           	opt stack 0
 26144                           tosu	equ	0xFFF
 26145                           tosh	equ	0xFFE
 26146                           tosl	equ	0xFFD
 26147                           pclatu	equ	0xFFB
 26148                           pclath	equ	0xFFA
 26149                           tblptru	equ	0xFF8
 26150                           tblptrh	equ	0xFF7
 26151                           tblptrl	equ	0xFF6
 26152                           tablat	equ	0xFF5
 26153                           prodh	equ	0xFF4
 26154                           prodl	equ	0xFF3
 26155                           intcon	equ	0xFF2
 26156                           intcon2	equ	0xFF1
 26157                           intcon3	equ	0xFF0
 26158                           indf0	equ	0xFEF
 26159                           postinc0	equ	0xFEE
 26160                           fsr0h	equ	0xFEA
 26161                           fsr0l	equ	0xFE9
 26162                           wreg	equ	0xFE8
 26163                           indf1	equ	0xFE7
 26164                           postdec1	equ	0xFE5
 26165                           fsr1h	equ	0xFE2
 26166                           fsr1l	equ	0xFE1
 26167                           indf2	equ	0xFDF
 26168                           postinc2	equ	0xFDE
 26169                           postdec2	equ	0xFDD
 26170                           fsr2h	equ	0xFDA
 26171                           fsr2l	equ	0xFD9
 26172                           status	equ	0xFD8
 26173                           
 26174 ;; *************** function _readButtons *****************
 26175 ;; Defined at:
 26176 ;;		line 19 in file "src/Teclado.h"
 26177 ;; Parameters:    Size  Location     Type
 26178 ;;		None
 26179 ;; Auto vars:     Size  Location     Type
 26180 ;;		None
 26181 ;; Return value:  Size  Location     Type
 26182 ;;                  1    wreg      void 
 26183 ;; Registers used:
 26184 ;;		wreg, status,2, status,0, cstack
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26190 ;;      Params:         0       0       0       0       0       0       0       0       0
 26191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26194 ;;Total ram usage:        0 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; Hardware stack levels required when called:    2
 26197 ;; This function calls:
 26198 ;;		i2_I2C_Read
 26199 ;;		i2_I2C_Start
 26200 ;;		i2_I2C_Stop
 26201 ;;		i2_I2C_Write
 26202 ;; This function is called by:
 26203 ;;		_TIMER0
 26204 ;; This function uses a non-reentrant model
 26205 ;;
 26206                           
 26207                           	psect	text70
 26208  005D80                     __ptext70:
 26209                           	opt stack 0
 26210  005D80                     _readButtons:
 26211                           	opt stack 22
 26212                           
 26213                           ;Teclado.h: 20: I2C_Start();
 26214                           
 26215                           ;incstack = 0
 26216  005D80  EC8F  F02F         	call	i2_I2C_Start	;wreg free
 26217                           
 26218                           ;Teclado.h: 21: I2C_Write(0x4F);
 26219  005D84  0E00               	movlw	0
 26220  005D86  6E03               	movwf	i2I2C_Write@d+1,c
 26221  005D88  0E4F               	movlw	79
 26222  005D8A  6E02               	movwf	i2I2C_Write@d,c
 26223  005D8C  EC7A  F02F         	call	i2_I2C_Write	;wreg free
 26224                           
 26225                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 26226  005D90  0E00               	movlw	0
 26227  005D92  6E03               	movwf	i2I2C_Read@a+1,c
 26228  005D94  0E00               	movlw	0
 26229  005D96  6E02               	movwf	i2I2C_Read@a,c
 26230  005D98  EC80  F02E         	call	i2_I2C_Read	;wreg free
 26231  005D9C  5002               	movf	?i2_I2C_Read,w,c
 26232  005D9E  0AFF               	xorlw	255
 26233  005DA0  6E44               	movwf	_bt_flag,c
 26234                           
 26235                           ;Teclado.h: 23: I2C_Stop();
 26236  005DA2  EC8B  F02F         	call	i2_I2C_Stop	;wreg free
 26237  005DA6  0012               	return		;funcret
 26238  005DA8                     __end_of_readButtons:
 26239                           	opt stack 0
 26240                           tosu	equ	0xFFF
 26241                           tosh	equ	0xFFE
 26242                           tosl	equ	0xFFD
 26243                           pclatu	equ	0xFFB
 26244                           pclath	equ	0xFFA
 26245                           tblptru	equ	0xFF8
 26246                           tblptrh	equ	0xFF7
 26247                           tblptrl	equ	0xFF6
 26248                           tablat	equ	0xFF5
 26249                           prodh	equ	0xFF4
 26250                           prodl	equ	0xFF3
 26251                           intcon	equ	0xFF2
 26252                           intcon2	equ	0xFF1
 26253                           intcon3	equ	0xFF0
 26254                           indf0	equ	0xFEF
 26255                           postinc0	equ	0xFEE
 26256                           fsr0h	equ	0xFEA
 26257                           fsr0l	equ	0xFE9
 26258                           wreg	equ	0xFE8
 26259                           indf1	equ	0xFE7
 26260                           postdec1	equ	0xFE5
 26261                           fsr1h	equ	0xFE2
 26262                           fsr1l	equ	0xFE1
 26263                           indf2	equ	0xFDF
 26264                           postinc2	equ	0xFDE
 26265                           postdec2	equ	0xFDD
 26266                           fsr2h	equ	0xFDA
 26267                           fsr2l	equ	0xFD9
 26268                           status	equ	0xFD8
 26269                           
 26270 ;; *************** function i2_I2C_Write *****************
 26271 ;; Defined at:
 26272 ;;		line 41 in file "src/I2C.c"
 26273 ;; Parameters:    Size  Location     Type
 26274 ;;  d               2    1[COMRAM] unsigned int 
 26275 ;; Auto vars:     Size  Location     Type
 26276 ;;		None
 26277 ;; Return value:  Size  Location     Type
 26278 ;;                  1    wreg      void 
 26279 ;; Registers used:
 26280 ;;		wreg, status,2, status,0, cstack
 26281 ;; Tracked objects:
 26282 ;;		On entry : 0/0
 26283 ;;		On exit  : 0/0
 26284 ;;		Unchanged: 0/0
 26285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26286 ;;      Params:         2       0       0       0       0       0       0       0       0
 26287 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26289 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26290 ;;Total ram usage:        2 bytes
 26291 ;; Hardware stack levels used:    1
 26292 ;; Hardware stack levels required when called:    1
 26293 ;; This function calls:
 26294 ;;		i2_I2C_Wait
 26295 ;; This function is called by:
 26296 ;;		_readButtons
 26297 ;;		i2_writeEEPROM_ext
 26298 ;; This function uses a non-reentrant model
 26299 ;;
 26300                           
 26301                           	psect	text71
 26302  005EF4                     __ptext71:
 26303                           	opt stack 0
 26304  005EF4                     i2_I2C_Write:
 26305                           	opt stack 20
 26306                           
 26307                           ;I2C.c: 42: I2C_Wait();
 26308                           
 26309                           ;incstack = 0
 26310  005EF4  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26311                           
 26312                           ;I2C.c: 43: SSPBUF = d;
 26313  005EF8  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 26314  005EFC  0012               	return		;funcret
 26315  005EFE                     __end_ofi2_I2C_Write:
 26316                           	opt stack 0
 26317                           tosu	equ	0xFFF
 26318                           tosh	equ	0xFFE
 26319                           tosl	equ	0xFFD
 26320                           pclatu	equ	0xFFB
 26321                           pclath	equ	0xFFA
 26322                           tblptru	equ	0xFF8
 26323                           tblptrh	equ	0xFF7
 26324                           tblptrl	equ	0xFF6
 26325                           tablat	equ	0xFF5
 26326                           prodh	equ	0xFF4
 26327                           prodl	equ	0xFF3
 26328                           intcon	equ	0xFF2
 26329                           intcon2	equ	0xFF1
 26330                           intcon3	equ	0xFF0
 26331                           indf0	equ	0xFEF
 26332                           postinc0	equ	0xFEE
 26333                           fsr0h	equ	0xFEA
 26334                           fsr0l	equ	0xFE9
 26335                           wreg	equ	0xFE8
 26336                           indf1	equ	0xFE7
 26337                           postdec1	equ	0xFE5
 26338                           fsr1h	equ	0xFE2
 26339                           fsr1l	equ	0xFE1
 26340                           indf2	equ	0xFDF
 26341                           postinc2	equ	0xFDE
 26342                           postdec2	equ	0xFDD
 26343                           fsr2h	equ	0xFDA
 26344                           fsr2l	equ	0xFD9
 26345                           status	equ	0xFD8
 26346                           
 26347 ;; *************** function i2_I2C_Stop *****************
 26348 ;; Defined at:
 26349 ;;		line 35 in file "src/I2C.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;		None
 26352 ;; Auto vars:     Size  Location     Type
 26353 ;;		None
 26354 ;; Return value:  Size  Location     Type
 26355 ;;                  1    wreg      void 
 26356 ;; Registers used:
 26357 ;;		wreg, status,2, status,0, cstack
 26358 ;; Tracked objects:
 26359 ;;		On entry : 0/0
 26360 ;;		On exit  : 0/0
 26361 ;;		Unchanged: 0/0
 26362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26363 ;;      Params:         0       0       0       0       0       0       0       0       0
 26364 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26365 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26366 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26367 ;;Total ram usage:        0 bytes
 26368 ;; Hardware stack levels used:    1
 26369 ;; Hardware stack levels required when called:    1
 26370 ;; This function calls:
 26371 ;;		i2_I2C_Wait
 26372 ;; This function is called by:
 26373 ;;		_readButtons
 26374 ;;		i2_writeEEPROM_ext
 26375 ;; This function uses a non-reentrant model
 26376 ;;
 26377                           
 26378                           	psect	text72
 26379  005F16                     __ptext72:
 26380                           	opt stack 0
 26381  005F16                     i2_I2C_Stop:
 26382                           	opt stack 20
 26383                           
 26384                           ;I2C.c: 36: I2C_Wait();
 26385                           
 26386                           ;incstack = 0
 26387  005F16  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26388                           
 26389                           ;I2C.c: 37: PEN = 1;
 26390  005F1A  84C5               	bsf	4037,2,c	;volatile
 26391  005F1C  0012               	return		;funcret
 26392  005F1E                     __end_ofi2_I2C_Stop:
 26393                           	opt stack 0
 26394                           tosu	equ	0xFFF
 26395                           tosh	equ	0xFFE
 26396                           tosl	equ	0xFFD
 26397                           pclatu	equ	0xFFB
 26398                           pclath	equ	0xFFA
 26399                           tblptru	equ	0xFF8
 26400                           tblptrh	equ	0xFF7
 26401                           tblptrl	equ	0xFF6
 26402                           tablat	equ	0xFF5
 26403                           prodh	equ	0xFF4
 26404                           prodl	equ	0xFF3
 26405                           intcon	equ	0xFF2
 26406                           intcon2	equ	0xFF1
 26407                           intcon3	equ	0xFF0
 26408                           indf0	equ	0xFEF
 26409                           postinc0	equ	0xFEE
 26410                           fsr0h	equ	0xFEA
 26411                           fsr0l	equ	0xFE9
 26412                           wreg	equ	0xFE8
 26413                           indf1	equ	0xFE7
 26414                           postdec1	equ	0xFE5
 26415                           fsr1h	equ	0xFE2
 26416                           fsr1l	equ	0xFE1
 26417                           indf2	equ	0xFDF
 26418                           postinc2	equ	0xFDE
 26419                           postdec2	equ	0xFDD
 26420                           fsr2h	equ	0xFDA
 26421                           fsr2l	equ	0xFD9
 26422                           status	equ	0xFD8
 26423                           
 26424 ;; *************** function i2_I2C_Start *****************
 26425 ;; Defined at:
 26426 ;;		line 25 in file "src/I2C.c"
 26427 ;; Parameters:    Size  Location     Type
 26428 ;;		None
 26429 ;; Auto vars:     Size  Location     Type
 26430 ;;		None
 26431 ;; Return value:  Size  Location     Type
 26432 ;;                  1    wreg      void 
 26433 ;; Registers used:
 26434 ;;		wreg, status,2, status,0, cstack
 26435 ;; Tracked objects:
 26436 ;;		On entry : 0/0
 26437 ;;		On exit  : 0/0
 26438 ;;		Unchanged: 0/0
 26439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26440 ;;      Params:         0       0       0       0       0       0       0       0       0
 26441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26444 ;;Total ram usage:        0 bytes
 26445 ;; Hardware stack levels used:    1
 26446 ;; Hardware stack levels required when called:    1
 26447 ;; This function calls:
 26448 ;;		i2_I2C_Wait
 26449 ;; This function is called by:
 26450 ;;		_readButtons
 26451 ;;		i2_writeEEPROM_ext
 26452 ;; This function uses a non-reentrant model
 26453 ;;
 26454                           
 26455                           	psect	text73
 26456  005F1E                     __ptext73:
 26457                           	opt stack 0
 26458  005F1E                     i2_I2C_Start:
 26459                           	opt stack 20
 26460                           
 26461                           ;I2C.c: 26: I2C_Wait();
 26462                           
 26463                           ;incstack = 0
 26464  005F1E  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26465                           
 26466                           ;I2C.c: 27: SEN = 1;
 26467  005F22  80C5               	bsf	4037,0,c	;volatile
 26468  005F24  0012               	return		;funcret
 26469  005F26                     __end_ofi2_I2C_Start:
 26470                           	opt stack 0
 26471                           tosu	equ	0xFFF
 26472                           tosh	equ	0xFFE
 26473                           tosl	equ	0xFFD
 26474                           pclatu	equ	0xFFB
 26475                           pclath	equ	0xFFA
 26476                           tblptru	equ	0xFF8
 26477                           tblptrh	equ	0xFF7
 26478                           tblptrl	equ	0xFF6
 26479                           tablat	equ	0xFF5
 26480                           prodh	equ	0xFF4
 26481                           prodl	equ	0xFF3
 26482                           intcon	equ	0xFF2
 26483                           intcon2	equ	0xFF1
 26484                           intcon3	equ	0xFF0
 26485                           indf0	equ	0xFEF
 26486                           postinc0	equ	0xFEE
 26487                           fsr0h	equ	0xFEA
 26488                           fsr0l	equ	0xFE9
 26489                           wreg	equ	0xFE8
 26490                           indf1	equ	0xFE7
 26491                           postdec1	equ	0xFE5
 26492                           fsr1h	equ	0xFE2
 26493                           fsr1l	equ	0xFE1
 26494                           indf2	equ	0xFDF
 26495                           postinc2	equ	0xFDE
 26496                           postdec2	equ	0xFDD
 26497                           fsr2h	equ	0xFDA
 26498                           fsr2l	equ	0xFD9
 26499                           status	equ	0xFD8
 26500                           
 26501 ;; *************** function i2_I2C_Read *****************
 26502 ;; Defined at:
 26503 ;;		line 46 in file "src/I2C.c"
 26504 ;; Parameters:    Size  Location     Type
 26505 ;;  a               2    1[COMRAM] unsigned short 
 26506 ;; Auto vars:     Size  Location     Type
 26507 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 26508 ;; Return value:  Size  Location     Type
 26509 ;;                  2    1[COMRAM] unsigned short 
 26510 ;; Registers used:
 26511 ;;		wreg, status,2, status,0, cstack
 26512 ;; Tracked objects:
 26513 ;;		On entry : 0/0
 26514 ;;		On exit  : 0/0
 26515 ;;		Unchanged: 0/0
 26516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26517 ;;      Params:         2       0       0       0       0       0       0       0       0
 26518 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26520 ;;      Totals:         4       0       0       0       0       0       0       0       0
 26521 ;;Total ram usage:        4 bytes
 26522 ;; Hardware stack levels used:    1
 26523 ;; Hardware stack levels required when called:    1
 26524 ;; This function calls:
 26525 ;;		i2_I2C_Wait
 26526 ;; This function is called by:
 26527 ;;		_readButtons
 26528 ;; This function uses a non-reentrant model
 26529 ;;
 26530                           
 26531                           	psect	text74
 26532  005D00                     __ptext74:
 26533                           	opt stack 0
 26534  005D00                     i2_I2C_Read:
 26535                           	opt stack 22
 26536                           
 26537                           ;I2C.c: 47: unsigned short temp;
 26538                           ;I2C.c: 48: I2C_Wait();
 26539                           
 26540                           ;incstack = 0
 26541  005D00  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26542                           
 26543                           ;I2C.c: 49: RCEN = 1;
 26544  005D04  86C5               	bsf	4037,3,c	;volatile
 26545                           
 26546                           ;I2C.c: 50: I2C_Wait();
 26547  005D06  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26548                           
 26549                           ;I2C.c: 51: temp = SSPBUF;
 26550  005D0A  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 26551  005D0E  6A05               	clrf	i2I2C_Read@temp+1,c
 26552                           
 26553                           ;I2C.c: 52: I2C_Wait();
 26554  005D10  EC5E  F02F         	call	i2_I2C_Wait	;wreg free
 26555                           
 26556                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 26557  005D14  5002               	movf	i2I2C_Read@a,w,c
 26558  005D16  1003               	iorwf	i2I2C_Read@a+1,w,c
 26559  005D18  A4D8               	btfss	status,2,c
 26560  005D1A  D002               	goto	i2u1253_40
 26561  005D1C  8AC5               	bsf	4037,5,c	;volatile
 26562  005D1E  D001               	goto	i2u1254_45
 26563  005D20                     i2u1253_40:
 26564  005D20  9AC5               	bcf	4037,5,c	;volatile
 26565  005D22                     i2u1254_45:
 26566                           
 26567                           ;I2C.c: 54: ACKEN = 1;
 26568  005D22  88C5               	bsf	4037,4,c	;volatile
 26569                           
 26570                           ;I2C.c: 55: return temp;
 26571  005D24  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 26572  005D28  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 26573  005D2C  0012               	return	
 26574  005D2E                     __end_ofi2_I2C_Read:
 26575                           	opt stack 0
 26576                           tosu	equ	0xFFF
 26577                           tosh	equ	0xFFE
 26578                           tosl	equ	0xFFD
 26579                           pclatu	equ	0xFFB
 26580                           pclath	equ	0xFFA
 26581                           tblptru	equ	0xFF8
 26582                           tblptrh	equ	0xFF7
 26583                           tblptrl	equ	0xFF6
 26584                           tablat	equ	0xFF5
 26585                           prodh	equ	0xFF4
 26586                           prodl	equ	0xFF3
 26587                           intcon	equ	0xFF2
 26588                           intcon2	equ	0xFF1
 26589                           intcon3	equ	0xFF0
 26590                           indf0	equ	0xFEF
 26591                           postinc0	equ	0xFEE
 26592                           fsr0h	equ	0xFEA
 26593                           fsr0l	equ	0xFE9
 26594                           wreg	equ	0xFE8
 26595                           indf1	equ	0xFE7
 26596                           postdec1	equ	0xFE5
 26597                           fsr1h	equ	0xFE2
 26598                           fsr1l	equ	0xFE1
 26599                           indf2	equ	0xFDF
 26600                           postinc2	equ	0xFDE
 26601                           postdec2	equ	0xFDD
 26602                           fsr2h	equ	0xFDA
 26603                           fsr2l	equ	0xFD9
 26604                           status	equ	0xFD8
 26605                           
 26606 ;; *************** function i2_I2C_Wait *****************
 26607 ;; Defined at:
 26608 ;;		line 21 in file "src/I2C.c"
 26609 ;; Parameters:    Size  Location     Type
 26610 ;;		None
 26611 ;; Auto vars:     Size  Location     Type
 26612 ;;		None
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  1    wreg      void 
 26615 ;; Registers used:
 26616 ;;		wreg, status,2, status,0
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/0
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26622 ;;      Params:         0       0       0       0       0       0       0       0       0
 26623 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26624 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26625 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26626 ;;Total ram usage:        1 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; This function calls:
 26629 ;;		Nothing
 26630 ;; This function is called by:
 26631 ;;		i2_I2C_Start
 26632 ;;		i2_I2C_Stop
 26633 ;;		i2_I2C_Write
 26634 ;;		i2_I2C_Read
 26635 ;; This function uses a non-reentrant model
 26636 ;;
 26637                           
 26638                           	psect	text75
 26639  005EBC                     __ptext75:
 26640                           	opt stack 0
 26641  005EBC                     i2_I2C_Wait:
 26642                           	opt stack 20
 26643                           
 26644                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 26645                           
 26646                           ;incstack = 0
 26647  005EBC  B4C7               	btfsc	4039,2,c	;volatile
 26648  005EBE  D7FE               	goto	i2_I2C_Wait
 26649  005EC0  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 26650  005EC4  0E1F               	movlw	31
 26651  005EC6  1601               	andwf	??i2_I2C_Wait,f,c
 26652  005EC8  B4D8               	btfsc	status,2,c
 26653  005ECA  0012               	return	
 26654  005ECC  D7F7               	goto	i2_I2C_Wait
 26655  005ECE                     __end_ofi2_I2C_Wait:
 26656                           	opt stack 0
 26657                           tosu	equ	0xFFF
 26658                           tosh	equ	0xFFE
 26659                           tosl	equ	0xFFD
 26660                           pclatu	equ	0xFFB
 26661                           pclath	equ	0xFFA
 26662                           tblptru	equ	0xFF8
 26663                           tblptrh	equ	0xFF7
 26664                           tblptrl	equ	0xFF6
 26665                           tablat	equ	0xFF5
 26666                           prodh	equ	0xFF4
 26667                           prodl	equ	0xFF3
 26668                           intcon	equ	0xFF2
 26669                           intcon2	equ	0xFF1
 26670                           intcon3	equ	0xFF0
 26671                           indf0	equ	0xFEF
 26672                           postinc0	equ	0xFEE
 26673                           fsr0h	equ	0xFEA
 26674                           fsr0l	equ	0xFE9
 26675                           wreg	equ	0xFE8
 26676                           indf1	equ	0xFE7
 26677                           postdec1	equ	0xFE5
 26678                           fsr1h	equ	0xFE2
 26679                           fsr1l	equ	0xFE1
 26680                           indf2	equ	0xFDF
 26681                           postinc2	equ	0xFDE
 26682                           postdec2	equ	0xFDD
 26683                           fsr2h	equ	0xFDA
 26684                           fsr2l	equ	0xFD9
 26685                           status	equ	0xFD8
 26686                           tosu	equ	0xFFF
 26687                           tosh	equ	0xFFE
 26688                           tosl	equ	0xFFD
 26689                           pclatu	equ	0xFFB
 26690                           pclath	equ	0xFFA
 26691                           tblptru	equ	0xFF8
 26692                           tblptrh	equ	0xFF7
 26693                           tblptrl	equ	0xFF6
 26694                           tablat	equ	0xFF5
 26695                           prodh	equ	0xFF4
 26696                           prodl	equ	0xFF3
 26697                           intcon	equ	0xFF2
 26698                           intcon2	equ	0xFF1
 26699                           intcon3	equ	0xFF0
 26700                           indf0	equ	0xFEF
 26701                           postinc0	equ	0xFEE
 26702                           fsr0h	equ	0xFEA
 26703                           fsr0l	equ	0xFE9
 26704                           wreg	equ	0xFE8
 26705                           indf1	equ	0xFE7
 26706                           postdec1	equ	0xFE5
 26707                           fsr1h	equ	0xFE2
 26708                           fsr1l	equ	0xFE1
 26709                           indf2	equ	0xFDF
 26710                           postinc2	equ	0xFDE
 26711                           postdec2	equ	0xFDD
 26712                           fsr2h	equ	0xFDA
 26713                           fsr2l	equ	0xFD9
 26714                           status	equ	0xFD8
 26715                           
 26716                           	psect	text76
 26717  000000                     __ptext76:
 26718                           	opt stack 0
 26719                           tosu	equ	0xFFF
 26720                           tosh	equ	0xFFE
 26721                           tosl	equ	0xFFD
 26722                           pclatu	equ	0xFFB
 26723                           pclath	equ	0xFFA
 26724                           tblptru	equ	0xFF8
 26725                           tblptrh	equ	0xFF7
 26726                           tblptrl	equ	0xFF6
 26727                           tablat	equ	0xFF5
 26728                           prodh	equ	0xFF4
 26729                           prodl	equ	0xFF3
 26730                           intcon	equ	0xFF2
 26731                           intcon2	equ	0xFF1
 26732                           intcon3	equ	0xFF0
 26733                           indf0	equ	0xFEF
 26734                           postinc0	equ	0xFEE
 26735                           fsr0h	equ	0xFEA
 26736                           fsr0l	equ	0xFE9
 26737                           wreg	equ	0xFE8
 26738                           indf1	equ	0xFE7
 26739                           postdec1	equ	0xFE5
 26740                           fsr1h	equ	0xFE2
 26741                           fsr1l	equ	0xFE1
 26742                           indf2	equ	0xFDF
 26743                           postinc2	equ	0xFDE
 26744                           postdec2	equ	0xFDD
 26745                           fsr2h	equ	0xFDA
 26746                           fsr2l	equ	0xFD9
 26747                           status	equ	0xFD8
 26748                           
 26749                           	psect	rparam
 26750  0000                     tosu	equ	0xFFF
 26751                           tosh	equ	0xFFE
 26752                           tosl	equ	0xFFD
 26753                           pclatu	equ	0xFFB
 26754                           pclath	equ	0xFFA
 26755                           tblptru	equ	0xFF8
 26756                           tblptrh	equ	0xFF7
 26757                           tblptrl	equ	0xFF6
 26758                           tablat	equ	0xFF5
 26759                           prodh	equ	0xFF4
 26760                           prodl	equ	0xFF3
 26761                           intcon	equ	0xFF2
 26762                           intcon2	equ	0xFF1
 26763                           intcon3	equ	0xFF0
 26764                           indf0	equ	0xFEF
 26765                           postinc0	equ	0xFEE
 26766                           fsr0h	equ	0xFEA
 26767                           fsr0l	equ	0xFE9
 26768                           wreg	equ	0xFE8
 26769                           indf1	equ	0xFE7
 26770                           postdec1	equ	0xFE5
 26771                           fsr1h	equ	0xFE2
 26772                           fsr1l	equ	0xFE1
 26773                           indf2	equ	0xFDF
 26774                           postinc2	equ	0xFDE
 26775                           postdec2	equ	0xFDD
 26776                           fsr2h	equ	0xFDA
 26777                           fsr2l	equ	0xFD9
 26778                           status	equ	0xFD8
 26779                           
 26780                           	psect	temp
 26781  000051                     btemp:
 26782                           	opt stack 0
 26783  000051                     	ds	1
 26784  0000                     int$flags	set	btemp
 26785  0000                     wtemp6	set	btemp+1
 26786                           tosu	equ	0xFFF
 26787                           tosh	equ	0xFFE
 26788                           tosl	equ	0xFFD
 26789                           pclatu	equ	0xFFB
 26790                           pclath	equ	0xFFA
 26791                           tblptru	equ	0xFF8
 26792                           tblptrh	equ	0xFF7
 26793                           tblptrl	equ	0xFF6
 26794                           tablat	equ	0xFF5
 26795                           prodh	equ	0xFF4
 26796                           prodl	equ	0xFF3
 26797                           intcon	equ	0xFF2
 26798                           intcon2	equ	0xFF1
 26799                           intcon3	equ	0xFF0
 26800                           indf0	equ	0xFEF
 26801                           postinc0	equ	0xFEE
 26802                           fsr0h	equ	0xFEA
 26803                           fsr0l	equ	0xFE9
 26804                           wreg	equ	0xFE8
 26805                           indf1	equ	0xFE7
 26806                           postdec1	equ	0xFE5
 26807                           fsr1h	equ	0xFE2
 26808                           fsr1l	equ	0xFE1
 26809                           indf2	equ	0xFDF
 26810                           postinc2	equ	0xFDE
 26811                           postdec2	equ	0xFDD
 26812                           fsr2h	equ	0xFDA
 26813                           fsr2l	equ	0xFD9
 26814                           status	equ	0xFD8


Data Sizes:
    Strings     2088
    Constant    66
    Data        30
    BSS         319
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      80
    BANK0           160    139     160
    BANK1           256    150     247
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), STR_56(CODE[2]), STR_54(CODE[3]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), STR_47(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[7]), STR_37(CODE[6]), STR_36(CODE[7]), 
		 -> STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), STR_27(CODE[7]), 
		 -> STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), STR_17(CODE[3]), 
		 -> STR_15(CODE[3]), STR_13(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_67(CODE[4]), STR_66(CODE[4]), STR_64(CODE[7]), STR_63(CODE[3]), 
		 -> STR_61(CODE[5]), STR_60(CODE[4]), enviaDadosWifi@AUX(BANK0[15]), STR_56(CODE[2]), 
		 -> STR_54(CODE[3]), STR_52(CODE[2]), STR_51(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[3]), STR_45(CODE[3]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), 
		 -> STR_39(CODE[7]), STR_38(CODE[2]), STR_37(CODE[6]), ssid(BANK2[15]), 
		 -> STR_36(CODE[7]), STR_35(CODE[5]), STR_30(CODE[2]), STR_28(CODE[8]), 
		 -> STR_27(CODE[7]), STR_26(CODE[5]), STR_21(CODE[3]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), STR_15(CODE[3]), NULL(NULL[0]), STR_13(CODE[3]), 
		 -> filtroStr@aux(BANK1[60]), filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_57(CODE[3]), STR_43(CODE[14]), STR_42(CODE[3]), STR_41(CODE[3]), 
		 -> STR_34(CODE[14]), STR_25(CODE[14]), STR_24(CODE[21]), STR_23(CODE[17]), 
		 -> STR_22(CODE[20]), STR_11(CODE[3]), STR_10(CODE[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), filtroStr@aux(BANK1[60]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[162]), 
		 -> STR_55(CODE[19]), STR_53(CODE[51]), STR_50(CODE[15]), STR_49(CODE[21]), 
		 -> STR_46(CODE[14]), STR_44(CODE[14]), STR_33(CODE[16]), STR_32(CODE[704]), 
		 -> STR_31(CODE[45]), STR_29(CODE[21]), STR_20(CODE[22]), STR_18(CODE[22]), 
		 -> STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    memset@p1	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_112(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> STR_91(CODE[10]), STR_90(CODE[7]), STR_88(CODE[11]), STR_87(CODE[8]), 
		 -> STR_85(CODE[11]), STR_84(CODE[7]), STR_72(CODE[12]), STR_58(CODE[12]), 
		 -> enviaDadosWifi@AUX(BANK0[15]), wifi_MAC(BANK2[24]), STR_40(CODE[2]), senha(BANK2[15]), 
		 -> STR_38(CODE[2]), ssid(BANK2[15]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), filtroStr@aux(BANK1[60]), 
		 -> filtroStr@_str(BANK1[82]), bufferSerial(BANK2[80]), STR_9(CODE[3]), STR_8(CODE[5]), 
		 -> STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 704
		 -> STR_111(CODE[18]), STR_110(CODE[19]), STR_109(CODE[19]), STR_108(CODE[19]), 
		 -> STR_107(CODE[20]), STR_106(CODE[17]), STR_105(CODE[7]), STR_104(CODE[9]), 
		 -> STR_103(CODE[8]), STR_102(CODE[10]), STR_101(CODE[18]), STR_100(CODE[18]), 
		 -> STR_99(CODE[18]), STR_98(CODE[17]), STR_97(CODE[17]), STR_96(CODE[17]), 
		 -> STR_95(CODE[17]), STR_94(CODE[20]), STR_93(CODE[20]), STR_92(CODE[20]), 
		 -> STR_89(CODE[11]), STR_86(CODE[10]), STR_83(CODE[9]), STR_82(CODE[10]), 
		 -> STR_81(CODE[9]), STR_80(CODE[15]), STR_79(CODE[18]), STR_78(CODE[20]), 
		 -> STR_77(CODE[10]), STR_76(CODE[22]), STR_75(CODE[21]), STR_74(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[3]), STR_70(CODE[14]), STR_69(CODE[20]), 
		 -> STR_68(CODE[9]), STR_65(CODE[11]), STR_62(CODE[14]), STR_59(CODE[162]), 
		 -> STR_57(CODE[3]), STR_55(CODE[19]), STR_53(CODE[51]), STR_50(CODE[15]), 
		 -> STR_49(CODE[21]), STR_46(CODE[14]), STR_44(CODE[14]), STR_43(CODE[14]), 
		 -> STR_42(CODE[3]), STR_41(CODE[3]), STR_34(CODE[14]), STR_33(CODE[16]), 
		 -> STR_32(CODE[704]), STR_31(CODE[45]), STR_29(CODE[21]), STR_25(CODE[14]), 
		 -> STR_24(CODE[21]), STR_23(CODE[17]), STR_22(CODE[20]), STR_20(CODE[22]), 
		 -> STR_18(CODE[22]), STR_16(CODE[35]), STR_14(CODE[14]), STR_12(CODE[14]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), 

    S1734__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1734__prbuf$ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 60
		 -> enviaDadosWifi@AUX(BANK0[15]), senha(BANK2[15]), ssid(BANK2[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), NULL(NULL[0]), 
		 -> filtroStr@aux(BANK1[60]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    main$1659	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_91(CODE[10]), STR_90(CODE[7]), 

    main$1654	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_88(CODE[11]), STR_87(CODE[8]), 

    main$1649	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_85(CODE[11]), STR_84(CODE[7]), 

    filtroStr@strdest	PTR unsigned char  size(2) Largest target is 15
		 -> senha(BANK2[15]), ssid(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@fim	PTR unsigned char  size(2) Largest target is 2
		 -> STR_40(CODE[2]), STR_38(CODE[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    filtroStr@inicio	PTR unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[7]), STR_37(CODE[6]), 

    filtroStr@p	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 82
		 -> filtroStr@_str(BANK1[82]), 

    filtroStr@str	PTR unsigned char  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    getMac@var	PTR unsigned char  size(2) Largest target is 24
		 -> wifi_MAC(BANK2[24]), 

    getMac@mac	PTR unsigned char  size(2) Largest target is 82
		 -> STR_40(CODE[2]), STR_38(CODE[2]), NULL(NULL[0]), filtroStr@_str(BANK1[82]), 
		 -> bufferSerial(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> bufferSerial(BANK2[80]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), t_religar_ventoinha_automatica(BANK0[1]), 
		 -> h_subir_temp_automatica(BANK0[1]), wifi_habilita_alteracao(BANK1[2]), t_temp_automatica(BANK0[1]), t_buzzer_religar(BANK0[1]), 
		 -> t_flap_intervalo(BANK0[1]), t_flap_ligado(BANK0[1]), h_buzzer(BANK0[1]), h_modo_seguranca(BANK0[1]), 
		 -> h_venotinha(BANK1[1]), h_flap(BANK1[1]), h_abafador(BANK1[1]), senha_desbloqueio_func(BANK1[1]), 
		 -> wifi_SENHA(BANK1[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(BANK0[1]), buzzer(BANK0[1]), 
		 -> fornalha(BANK0[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_enviaDadosWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _getMac->_strstr
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarConfigWifi->_printf
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _printf->__doprnt
    _limpaBuffer->_memset
    _filtroStr->_sprintf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _strcpy->_strtok
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    _alterarConfigWifi->_filtroStr

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  156477
                                            121 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
                  _alterarConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11829
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18905
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      20    20      0   26426
                                            101 BANK0     20    20      0
                             ___wmul
                              _delay
                             _getMac
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _getMac                                               9     5      4    1177
                                             19 BANK0      9     5      4
                             _strlen
                             _strstr (ARG)
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarConfigWifi                                    1     1      0   50616
                                            101 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                          _filtroStr
                        _limpaBuffer
                             _printf
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2570
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              68     6     62    4864
                                             33 BANK0     68     6     62
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _limpaBuffer                                          0     0      0    1562
                              _delay
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1238
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _filtroStr                                          163   155      8   20466
                                             49 BANK0     13     5      8
                                              0 BANK1    150   150      0
                            _sprintf
                             _strcpy
                             _strlen
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    1926
                                             13 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                              6 BANK0      7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               4     0      4    5505
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     622
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4     544
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     369
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               7     3      4     227
                                             17 BANK0      7     3      4
                             _strtok (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   10620
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3292
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1331
                                             29 COMRAM    19    19      0
                        _readButtons
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _filtroStr
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strcpy
         _strtok (ARG)
           _strcspn
             _strchr
           _strspn
             _strchr
       _strlen
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _getMac
       _strlen
       _strstr (ARG)
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _limpaBuffer
       _delay
       _memset
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     96      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AF      20        0.0%
DATA                 0      0     2AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue May 14 22:34:59 2019

                 i2_setRangeValor 52DE                 setRangeValor@_aux 006E  
               setRangeValor@_max 0068           __size_of_readEEPROM_ext 0052  
               setRangeValor@_min 0067                __size_of_I2C_Start 0008  
             tabelaUmidade@_clima 0062                __size_of_I2C_Write 000A  
                              _GO 007E11                setRangeValor@_acao 006D  
              _tipo_modo_trabalho 00F6                       __CFG_BOR$ON 000000  
             ___wmul@multiplicand 0062                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                    ___ftadd@exp1 0086                      ___ftadd@exp2 0085  
                    ___ftadd@sign 0084                       __CFG_WDT$ON 000000  
                             l213 5E4E                               l301 166C  
                             l230 5CC6                               l231 5CCE  
                             l311 16B2                               l303 167A  
                             l400 190A                               l225 5CB0  
                             l321 16FA                               l313 16C0  
                             l305 1688                               l226 5CB2  
                             l242 4F8A                               l402 192A  
                             l227 5CBA                               l243 4EFA  
                             l323 171A                               l315 16CE  
                             l307 1696                               l228 5CBC  
                             l260 4EA0                               l404 194E  
                             l229 5CC4                               l245 4F1E  
                             l325 173E                               l317 16DC  
                             l309 16A4                               l246 4F42  
                             l270 50B4                               l510 1C3C  
                             l502 1C0C                               l247 4F66  
                             l255 5CE4                               l280 5C38  
                             l281 5C22                               l273 50C4  
                             l361 182C                               l506 1C24  
                             l442 1A48                               l426 19DE  
                             l275 50F2                               l267 509E  
                             l292 5E70                               l428 19FE  
                             l269 50A8                               l517 25F0  
                             l541 1D38                               l445 1A5E  
                             l630 2606                               l518 1C8A  
                             l631 1F2A                               l527 1CD8  
                             l383 1894                               l359 180C  
                             l800 2434                               l632 1F40  
                             l296 1C7E                               l472 1B1C  
                             l625 1F14                               l553 1D8E  
                             l529 1CF8                               l297 1C54  
                             l810 2484                               l802 2444  
                             l642 1F9A                               l634 1F50  
                             l482 1B64                               l474 1B34  
                             l466 1AE8                               l298 164A  
                             l563 1DC4                               l547 1D6C  
                             l299 165E                               l900 59F0  
                             l820 24D4                               l812 2494  
                             l804 2454                               l740 221A  
                             l644 1FC0                               l492 1BB8  
                             l901 59FA                               l902 5A04  
                             l830 2524                               l822 24E4  
                             l814 24A4                               l806 2464  
                             l750 2282                               l670 208E  
                             l662 204E                               l654 1FFE  
                             l646 1FD0                               l638 1F6A  
                             l486 1B88                               l478 1B4C  
                             l910 47DC                               l840 2574  
                             l832 2534                               l824 24F4  
                             l816 24B4                               l808 2474  
                             l760 22DE                               l752 22A6  
                             l680 20CC                               l664 205E  
                             l656 200E                               l496 1BDC  
                             l488 1BA0                               l920 4838  
                             l912 47E4                               l745 2236  
                             l913 4806                               l850 25DA  
                             l842 2584                               l834 2544  
                             l826 2504                               l818 24C4  
                             l770 2344                               l762 22EE  
                             l746 224C                               l666 206E  
                             l658 201E                               l498 1BF4  
                             l906 487E                               l930 4860  
                             l922 482A                               l579 1E18  
                             l915 47FA                               l907 47C6  
                             l940 5226                               l844 2594  
                             l836 2554                               l828 2514  
                             l780 2394                               l772 2354  
                             l764 22FE                               l748 225C  
                             l676 20B2                               l668 207E  
                             l924 4832                               l908 47EA  
                             l941 51E6                               l925 4854  
                             l917 4802                               l870 4684  
                             l934 5218                               l846 25A4  
                             l838 2564                               l790 23E4  
                             l782 23A4                               l774 2364  
                             l766 230E                               l758 22CE  
                             l686 20F0                               l918 4892  
                             l943 5210                               l935 51C0  
                             l927 4848                               l919 4812  
                             l872 468E                               l848 25CA  
                             l792 23F4                               l784 23B4  
                             l776 2374                               l768 231E  
                             l688 2100                               l881 4708  
                             l873 4698                               l937 51E0  
                             l929 4850                               l890 476E  
                             l874 46A2                               l946 5236  
                             l794 2404                               l786 23C4  
                             l778 2384                               l883 4722  
                             l875 46AC                               l972 44C8  
                             l892 4784                               l868 46D2  
                             l796 2414                               l788 23D4  
                             l981 45F4                               l965 44CC  
                             l869 46B6                               l990 3644  
                             l966 4392                               l878 473C  
                             l798 2424                               l967 43DA  
                             l879 46EE                               l976 4610  
                             l992 3660                               l888 4758  
                             l977 45B2                               l897 5A0E  
                             l969 4434                               l994 3686  
                             l986 3634                               l898 59E4  
                             l979 45EC                               l995 369E  
                             l989 3A8A                               l997 36C4  
                             l998 36DC                      __CFG_CPB$OFF 000000  
                             _PEN 007E2A                      __CFG_CPD$OFF 000000  
                             _SEN 007E28                               _cbf 0043  
                             _hor 0046                               _min 0047  
                             _sec 0048                       ?i2_I2C_Read 0002  
                     ?i2_I2C_Wait 0001                       ?i2_I2C_Stop 0001  
                             prod 000FF3                               tosl 000FFD  
                             wreg 000FE8                      ?_atualizaLCD 0068  
                    __CFG_FOSC$HS 000000              __size_of_I2C_Restart 0008  
                    __CFG_LVP$OFF 000000                      ___ftdiv@cntr 0090  
                    ___ftdiv@sign 0095                              l1000 3702  
                            l1001 371A                              l1010 3848  
                            l1011 3860                              l1003 3740  
                            l1004 3758                              l1013 3886  
                            l1014 38EE                              l1006 3782  
                            l1030 3022                              l1031 2BFC  
                            l1024 3A82                              l1040 2CEC  
                            l1017 3A30                              l1033 2C18  
                            l2002 5958                              l1050 2DE4  
                            l1042 2D0C                              l2003 5950  
                            l1019 3A5E                              l1051 2E40  
                            l1035 2C3E                              l1027 2BE0  
                            l2012 5A82                              l1060 301C  
                            l1052 2E12                              l1044 2D68  
                            l1036 2C56                              l1300 04EA  
                            l2013 5A7A                              l1053 2E3E  
                            l1045 2D80                              l1301 04FA  
                            l2006 5978                              l1150 54D6  
                            l1062 30F4                              l1038 2CAE  
                            l1310 062A                              l1302 0522  
                            l2007 5982                              l1151 54EC  
                            l1063 3088                              l1055 2F4E  
                            l1047 2DA6                              l1039 2CE8  
                            l1311 05FC                              l2016 5A9A  
                            l1152 5524                              l1048 2DBE  
                            l1224 3504                              l1232 3250  
                            l1400 0F5E                              l1304 0636  
                            l2017 5AA4                              l1065 30A0  
                            l1057 2FA6                              l1241 3396  
                            l1321 06F8                              l1305 054C  
                            l2026 5C8E                              l1170 3CF0  
                            l1162 3BF4                              l1058 2FBE  
                            l1234 325E                              l1226 3132  
                            l1402 0F88                              l1314 0630  
                            l1306 058A                              l2211 48B2  
                            l2027 5C7C                              l1147 54B8  
                            l1171 3C9E                              l1067 30EC  
                            l1219 52B8                              l1235 338A  
                            l1411 1090                              l1403 0FB6  
                            l1315 0A58                              l1331 0770  
                            l1323 0708                              l2212 48C4  
                            l1180 3CF6                              l1156 3B48  
                            l1252 3520                              l1244 3478  
                            l1236 32A6                              l1228 313A  
                            l1420 11A4                              l1412 10C4  
                            l1340 09A2                              l1316 0648  
                            l1149 54CA                              l1181 3D0A  
                            l1173 3CAC                              l1157 3B30  
                            l1245 34A6                              l1229 3156  
                            l1421 11D2                              l1405 0FE0  
                            l1341 0A0E                              l1309 05B4  
                            l2214 491A                              l1174 3CB0  
                            l1158 3B44                              l1254 35AC  
                            l1238 335C                              l1430 12DA  
                            l1414 10EE                              l1406 100E  
                            l1342 0E02                              l1334 07AC  
                            l1318 0674                              l2215 498C  
                            l1191 3DCE                              l1183 3D1C  
                            l1167 3C46                              l1247 34DC  
                            l1423 11FC                              l1415 1122  
                            l1351 0ADA                              l1335 07DA  
                            l1327 073C                              l1271 024E  
                            l2216 4994                              l1176 3CE6  
                            l1440 14AA                              l1432 1304  
                            l1424 122A                              l1408 1038  
                            l1336 0864                              l1280 0334  
                            l1193 3E14                              l1185 3DA6  
                            l1169 3C66                              l1249 34E8  
                            l1433 1332                              l1417 114C  
                            l1409 1066                              l1345 0D88  
                            l1361 0C68                              l1353 0B14  
                            l1337 08EC                              l1273 027A  
                            l1450 149A                              l1426 1254  
                            l1418 117A                              l1346 0A78  
                            l1338 0984                              l1195 3E5E  
                            l1443 1468                              l1435 135C  
                            l1427 1282                              l1347 0DCE  
                            l1355 0B42                              l1283 0A16  
                            l1339 099C                              l1540 2680  
                            l1196 3E76                              l1188 3DA8  
                            l1460 153A                              l1444 1410  
                            l1436 13D2                              l1380 0DDE  
                            l1356 0BA8                              l1348 0A7C  
                            l1292 040A                              l1284 0382  
                            l1276 02B6                              l1541 2654  
                            l2181 588A                              l1197 3EB8  
                            l1189 3DBC                              l1445 147A  
                            l1437 13E2                              l1429 12AC  
                            l1381 0DEE                              l1373 0D22  
                            l1365 0CAA                              l1349 0AB0  
                            l1285 03BA                              l2182 58B4  
                            l2174 58F2                              l2254 4E12  
                            l2246 55C2                              l1454 15C4  
                            l1462 1564                              l1446 1418  
                            l1390 0E56                              l1358 0C0A  
                            l1286 03DC                              l1278 0304  
                            l1551 2950                              l2239 576C  
                            l2175 58EC                              l2255 4D60  
                            l2247 55BA                              l1199 3F02  
                            l1463 1592                              l1455 14B4  
                            l1375 0D3E                              l1359 0C3E  
                            l1552 270E                              l1544 26AC  
                            l2168 582E                              l2184 58D0  
                            l2256 4E08                              l1456 14E2  
                            l1448 1462                              l1384 13FC  
                            l1392 13C2                              l1296 044C  
                            l1288 03EE                              l1561 27AC  
                            l1553 2748                              l2169 5824  
                            l2185 58C0                              l2265 553E  
                            l1465 15BC                              l1449 148A  
                            l1393 0E80                              l1377 0D5E  
                            l1369 0CE6                              l1546 291A  
                            l1570 28E4                              l1562 27E6  
                            l1554 2758                              l2266 5536  
                            l1466 15EC                              l1458 15DC  
                            l1394 0EAE                              l1571 2908  
                            l1563 2810                              l1555 2752  
                            l1539 2610                              l1811 5006  
                            l1467 15FC                              l1459 150C  
                            l1379 0D82                              l1299 04D2  
                            l1572 298A                              l2196 516A  
                            l1476 5D44                              l1812 4FF0  
                            l1468 160E                              l1388 1364  
                            l1396 0ED8                              l1581 2A42  
                            l2197 5106                              l1477 5D30  
                            l1397 0F06                              l1389 0E22  
                            l1590 2B9E                              l1582 2A6C  
                            l1566 2824                              l1558 27A2  
                            l2198 5142                              l1814 502E  
                            l1910 4A44                              l1567 2884  
                            l1815 5024                              l1911 4A34  
                            l1399 0F30                              l1576 29D4  
                            l1568 28D2                              l1808 4FD2  
                            l1585 2AC2                              l1577 29F8  
                            l1809 4FC8                              l1586 2AEC  
                            l1578 2A00                              l1923 5E32  
                            l1843 424E                              l1588 2AF2  
                            l1916 4A68                              l1908 49CC  
                            l1589 2B74                              l1853 42AA  
                            l1917 4A5C                              l1950 56DA  
                            l1862 42E8                              l1854 42A0  
                            l1863 42DE                              l1839 4224  
                            l1919 4A84                              l1848 42B4  
                            l1872 4CA0                              l1880 543C  
                            l1953 571A                              l1865 430C  
                            l1881 546C                              l1954 5728  
                            l1866 4328                              l1874 4CC8  
                            l1890 4B1A                              l1867 4358  
                            l1875 4D06                              l1891 4B2A  
                            l1876 4D2C                              l1949 56E6  
                            l1893 4B42                              l1894 4B52  
                            l1887 4AC0                              l6144 5498  
                            l7040 1AE8                              l1889 4AE8  
                            l6164 5ED2                              l7052 1B1C  
                            l7134 1C9A                              l6328 27AC  
                            l6440 4D60                              l7152 1CD8  
                            l6338 2824                              l6540 5CDC  
                            l6372 298E                              l8300 50AC  
                            l7076 1B88                              l9102 314E  
                            l7158 1CF8                              l7094 1BDC  
                            l6552 5D30                              l7432 204E  
                            l7602 224C                              l7354 1F14  
                            l7612 2282                              l7196 1D6C  
                            l6574 58C0                              l6558 5C7C  
                            l9142 338E                              l9126 329E  
                            l7366 1F40                              l6726 165E  
                            l6912 190A                              l7618 22A6  
                            l7394 1FC0                              l6842 182C  
                            l8292 5096                              l7388 1F9A  
                            l6924 194E                              l6836 180C  
                            l6694 4E98                              l7814 25CA  
                            l7590 221A                              l6918 192A  
                            l6782 173E                              l9350 0246  
                            l7656 2344                              l6960 19DE  
                            l6776 171A                              l9178 3518  
                            l9362 0272                              l8644 3A28  
                            l9196 35A4                              _ADON 007E10  
                            l6966 19FE                              l6878 18A4  
                            l8656 3A56                              l6998 1A6E  
                            STR_1 7EDF                              STR_2 7EBD  
                            STR_3 7ED4                              STR_4 7F15  
                            STR_5 7FE7                              STR_6 7FC8  
                            STR_7 7F98                              STR_8 7FE2  
                            STR_9 7FF3                              _RCIF 007CF5  
                            _RCEN 007E2B                              u8110 29BA  
                            u8050 287A                              u8018 27D0  
                            u8060 28BC                              u8150 2A08  
                            u8310 555E                              u8240 2BA8  
                            u8048 2848                              u9200 1892  
                            u8057 2870                              u8049 287C  
                            u8250 2BC2                              u8218 2AAC  
                            u8330 558C                              u8067 28B2  
                            u8180 2A7C                              u8260 4D80  
                            u8500 5194                              u8340 55A4  
                            u8317 5554                              u8238 2B5E  
                            u8510 519A                              u8350 55E2  
                            u9310 191A                              u9070 17FC  
                            u8600 5876                              u8280 4DBC  
                            u8337 5582                              u8178 2A2C  
                            u7810 575A                              u8290 4DF6  
                            u8370 5610                              u9330 193A  
                            u9090 181C                              u8267 4D76  
                            u8507 518A                              u8380 5628  
                            u8540 4902                              u8285 4DB6  
                            u8357 55D8                              u7830 5798  
                            u8630 4FBA                              u8607 586A  
                            u8287 4DAC                              u7760 595C  
                            u8560 495C                              u8720 5C02  
                            u8800 16A0                              u7817 5750  
                            u8297 4DEC                              u8377 5606  
                            u9450 19CA                              u9290 18FA  
                            u8810 16AE                              u8547 48F8  
                            u8580 4986                              u9460 19DA  
                            u8820 16BC                              u7837 578E  
                            u7790 5A86                              u8590 584E  
                            u7870 5912                              u8670 5038  
                            u9710 1B0C                              u9550 1A44  
                            u9470 19EE                              u8830 16CA  
                            u8750 165A                              u8567 4952  
                            u8735 5C04                              u9800 1B84  
                            u9560 1A5C                              u8840 16D8  
                            u8760 1668                              u7970 2784  
                            u7938 263E                              u8587 497A  
                            u7980 278A                              u9900 1C08  
                            u9820 1B9C                              u9740 1B30  
                            u8780 1684                              u8597 5844  
                            u7877 5908                              u9670 1AD8  
                            u8870 170A                              u8790 1692  
                            u9920 1C20                              u9840 1BB4  
                            u9760 1B48                              u7977 277A  
                            u9850 1BC8                              u8890 172A  
                            u9940 1C38                              u9860 1BD8  
                            u9780 1B60                              u9950 1C50  
                            u9790 1B74                              u9880 1BF0  
                            _RSEN 007E29                   _f_wifi_processo 0196  
                            __led 0050                 ?_Lcd_Write_String 0064  
                            __sec 0049                              _fase 00EE  
                            _main 0012                              _leds 0045  
                    ___ftpack@arg 0060                              _menu 00FB  
                    ___ftpack@exp 0063                              _temp 00FD  
                __end_of_I2C_Read 5C10                              _umid 00FC  
                            fsr0h 000FEA                              _ssid 02A1  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 0051                  __end_of_I2C_Wait 5EBC  
                __end_of_I2C_Stop 5F0E                      ?i2_I2C_Start 0001  
                            prodh 000FF4                              prodl 000FF3  
                    ?i2_I2C_Write 0002                   __end_ofi2_delay 5E18  
                            start 000E                ??_Lcd_Write_String 0066  
                   __CFG_IESO$OFF 000000                  filtroStr@strdest 0097  
                 __end_of_Lcd_Cmd 5DF4                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0079                      ___param_bank 000000  
                    ___ftmul@sign 007A                      ___fttol@exp1 00A4  
                    ___fttol@lval 00A0                  ?_I2C_Master_Init 006D  
                   __CFG_PLLDIV$1 000000                      ?_readButtons 0001  
                  __CFG_CCP2MX$ON 000000                             ?_main 0001  
                           _ACKEN 007E2C                             _ACKDT 007E2D  
                 __end_of___ftadd 437E                             STR_10 7F26  
                           STR_11 7F26                             STR_12 7E51  
                           STR_20 7BD2                             STR_21 7FF6  
                           STR_13 7FF6                             STR_30 7C78  
                           STR_14 7E43                             STR_22 7CCA  
                           STR_15 7FF6                             STR_23 7D84  
                           STR_31 7B6C                             STR_40 7FF9  
                           STR_24 7C28                             STR_16 7B99  
                           STR_32 77D7                             STR_17 7FF6  
                           STR_41 7F26                             STR_25 7E89  
                           STR_33 7DEA                             STR_42 7F26  
                           STR_26 7FCE                             STR_34 7E7B  
                           STR_50 7DFA                             STR_18 7BBC  
                           STR_19 7FF6                             STR_51 7FFB  
                           STR_35 7FD3                             STR_27 7FBB  
                           STR_43 7E6D                             STR_52 7FFD  
                           STR_60 7FEB                             STR_36 7FAD  
                           STR_28 7F6B                             STR_44 7E35  
                           STR_45 7FF6                             STR_61 7FD8  
                           STR_37 7FC2                             STR_29 7C13  
                           STR_53 7B39                             STR_54 7FF6  
                           STR_38 7FF9                             STR_70 7E97  
                           STR_62 7E5F                             STR_46 7E27  
                           STR_63 7FF6                             STR_47 7FF6  
                           STR_71 7F26                             STR_39 7F8A  
                           STR_55 7CDE                             STR_72 7EA5  
                           STR_56 7C78                             STR_48 7FDD  
                           STR_64 7F91                             STR_80 7E09  
                           STR_57 7F26                             STR_81 7F50  
                           STR_65 7EC9                             STR_73 7EB1  
                           STR_49 7BFE                             STR_66 7FEF  
                           STR_90 7FA6                             STR_82 7F1F  
                           STR_58 7EA5                             STR_74 7E18  
                           STR_67 7FEF                             STR_83 7F59  
                           STR_91 7F0B                             STR_75 7C3D  
                           STR_59 7A97                             STR_84 7F9F  
                           STR_68 7F47                             STR_92 7C8E  
                           STR_76 7BE8                             STR_77 7F33  
                           STR_85 7EEA                             STR_69 7CB6  
                           STR_93 7C7A                             STR_86 7F29  
                           STR_94 7CA2                             STR_78 7C52  
                           STR_87 7F73                             STR_95 7DA6  
                           STR_79 7D2A                             STR_88 7EF5  
                           STR_96 7DB7                             STR_89 7F00  
                           STR_97 7DC8                             STR_98 7DD9  
                           STR_99 7D3C                   __end_of___ftdiv 4D5E  
                           u10010 1CC8                   __end_of___lldiv 573A  
                           u10030 1CE8                             u10130 1D5C  
                           u12000 529C                             u11200 226C  
                           u11210 227C                             u11300 2308  
                           u11220 2292                             u11140 220A  
                 __end_of___ftmul 4B8C                             u12110 4240  
                           u11310 2318                             u12024 52AC  
                           u11400 23AE                             u11320 232E  
                           u10600 1F64                             _T0CON 000FD5  
                           u12041 41E2                             u12025 52A8  
                           u12210 42F0                             u12018 52A0  
                           u11410 23BE                             u11330 233E  
                           u11170 2234                             u10530 1F04  
                           u12051 41F6                             u13020 3A20  
                           u13100 2C7A                             u12140 427E  
                           u11500 244E                             u11420 23CE  
                           u11340 234E                             u11180 2246  
                           u10620 1F86                             u12301 4AA8  
                           u13110 2CA0                             u13102 2C7C  
                           u11510 245E                             u11430 23DE  
                           u11350 235E                             u11270 22D8  
                           u11190 2256                             u10710 2008  
                           u13040 3A52                             u13112 2CA2  
                           u12080 4216                             u11600 24EE  
                           u11520 246E                             u11440 23EE  
                           u11280 22E8                             u10640 1FAA  
                           u10560 1F28                             u12321 4AD0  
                           u13210 2F72                             u12410 49EA  
                           u11610 24FE                             u11530 247E  
                           u11290 22F8                             u10650 1FBA  
                           u10570 1F3A                             u12251 4C88  
                           u13060 3A80                             u13220 2F98  
                           u13212 2F74                             u13140 2D30  
                           u12180 42BC                             u11700 258E  
                           u11620 250E                             u11540 248E  
                           u11460 240E                             u11380 238E  
                           u10740 2038                             u10580 1F4A  
                 __end_of___fttol 4A96                             u13222 2F9A  
                           u13150 2D56                             u13142 2D32  
                           u11710 259E                             u11630 251E  
                           u11550 249E                             u11470 241E  
                           u11390 239E                             u10750 2048  
                           u12271 4CB0                             u12415 49E2  
                           u13240 2FE2                             u13152 2D58  
                           u14200 34CE                             u11720 25B4  
                           u11640 252E                             u11560 24AE  
                           u11480 242E                             u10840 20C6  
                           u12610 50FE                             u13250 3008  
                           u13242 2FE4                             u12450 4A6E  
                           u11730 25C4                             u11650 253E  
                           u11570 24BE                             u11490 243E  
                           u13252 300A                             u14220 355E  
                           u11740 25D4                             u11660 254E  
                           u11580 24CE                             u11830 4470  
                           u14150 341A                             u11750 25EA  
                           u11670 255E                             u11590 24DE  
                           u10870 20EA                             u12391 49B0  
                           u12480 56EA                             u12560 5066  
                           u11760 43C6                             u14240 35EA  
                           u14080 31DA                             u11680 256E  
                           u10880 20FA                    _filtroStr$1335 018E  
                           u11690 257E                             u14330 026E  
                           u11940 5506                             u11860 44C2  
                           u11837 4466                             u11790 4410  
                           u14350 029A                             u14255 57DA  
                           u11767 43BC                             u11970 527C  
                           u14610 0A70                             u11867 44B8  
                           u13740 3BAC                             u11965 5520  
                           u13725 3B40                             u11797 4406  
                           u11966 5522                             u11958 550A  
                           u15407 564C                             u13727 3B42  
                           u14720 0C8C                             u15417 5664  
                           u13770 3BF0                             u11994 528C  
                           u15427 567C                             u11995 5288  
                           u12980 3836                             u13940 3D86  
                           u11988 5280                             u14740 0CC8  
                           u15437 5DE6                             u13685 3AFA  
                           u15357 526C                             u13950 3D92  
                           u15447 580E                             u13687 3AFC  
                           u15367 507E                             u14840 0E12  
                           u14760 0D04                             u15377 5D38  
                           u15387 5B50                             u13956 3D94  
                           u15397 5B64                   __end_of___lwdiv 598C  
                 __end_of___lwmod 5AAE                             i2l940 535A  
                           i2l941 531A                             i2l934 534C  
                           i2l943 5344                             i2l935 52F4  
                           i2l937 5314                             i2l946 536A  
                           _RCREG 000FAE                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                    ?_limpaBuffer 0001                     __CFG_USBDIV$1 000000  
                 __end_of__doprnt 2BCE           __size_of_Lcd_Set_Cursor 00B4  
                           _TXREG 000FAD                   _writeEEPROM_ext 5AAE  
                   __CFG_PWRT$OFF 000000                   __end_of_btPress 5E74  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                __size_of_UART_Init 001C  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                   __end_of_readADC 52DE  
                  __CFG_EBTRB$OFF 000000                             _delay 5D2E  
                           _blink 5C10                             __temp 0221  
                           _clima 00ED                             __umid 0200  
                 __end_of_dpowers 77D7                             _line1 01DA  
                           _line2 01C5                             _line3 01B0  
                           _line4 019B                   __end_of_isdigit 5E3A  
                           _senha 0292                     ___ftpack@sign 0064  
        _contador_fase_automatica 0278                             _timer 3F1C  
                           _putch 5ECE                             main@i 00EA  
               __end_of_I2C_Start 5F16                    __pbitbssCOMRAM 0278  
               __end_of_I2C_Write 5EF4                             pclath 000FFA  
           __end_of_setRangeValor 5244                             tablat 000FF5  
           setRangeValor@_var_ajt 0065                             status 000FD8  
         __end_ofi2_setRangeValor 5378                             wtemp6 0052  
                 __end_of_sprintf 5A6A                    setUmidade@_umd 0079  
                 __end_of_strcspn 5632                   __end_of_strncmp 4E2E  
                 __end_of_strncpy 58E2                    __CFG_ICPRT$OFF 000000  
                atualizaLCD@line1 0068                  atualizaLCD@line2 006A  
                atualizaLCD@line3 006C                  atualizaLCD@line4 006E  
           i2writeEEPROM_ext@data 0004                    __CFG_PBADEN$ON 000000  
                __end_of_Lcd_Init 56B6                  __end_of_Lcd_Port 5CD2  
             __size_ofi2_I2C_Read 002E        __size_of_alterarConfigWifi 04CC  
             __size_ofi2_I2C_Wait 0012                   __initialization 5378  
             __size_ofi2_I2C_Stop 0008                      __end_of_main 163C  
                _ajuste_parametro 0198                            ??_main 00D9  
                   ___fttol@sign1 009F                      i2I2C_Write@d 0002  
             _enviaDadosWifi$2490 00D6                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002                    _enviaDadosWifi 2BCE  
                       I2C_Read@a 0061                readEEPROM_ext@data 0066  
                          ?_delay 0060                            ?_blink 0060  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            STR_100 7D4E  
                          STR_101 7D60                            STR_102 7F3D  
                          STR_110 7CF1                            STR_103 7F7B  
                          STR_111 7D72                            STR_112 7F83  
                          STR_104 7F62                            STR_105 7FB4  
                          STR_106 7D95                            _ADRESH 000FC4  
                          STR_107 7C66                            STR_108 7D04  
                          STR_109 7D17                            _ADRESL 000FC3  
                          ?_timer 0001                  __end_of_acaoFlap 552A  
                          ?_putch 0001                  __end_of___ftpack 5058  
                       ??i2_delay 0003                            _INT2IF 007F81  
                          i2l1100 3F40                            i2l1110 3F90  
                          i2l1102 3F50                            i2l1112 3F98  
                          i2l1104 3F58                            i2l1113 3FA6  
                          i2l1122 3FFC                            i2l1114 3FB4  
                          i2l1106 3F72                            i2l1131 40E6  
                          i2l1140 41C0                            i2l1124 400A  
                          i2l1108 3F80                            i2l1117 3FD4  
                          i2l1142 41C4                            i2l1134 4146  
                          i2l1126 4020                            i2l1119 3FDC  
                          i2l1128 402E                            i2l1137 4184  
                          i2l1261 4BE8                            i2l1263 4C16  
                          i2l1264 4C20                            i2l1265 4C2A  
                          i2l1098 3F32                            i2l1476 5E06  
                          i2l1477 5DF6                            _INTCON 000FF2  
                          i2l6474 5DF6                            i2l8820 3F72  
                          i2l8806 3F32                            i2l8864 4020  
                          i2l8858 3FFC                  __end_of___lwtoft 5DCE  
                       ??_Lcd_Cmd 0061                            _TIMER0 0008  
                          _TMR0IF 007F92           __size_of_Lcd_Write_Char 003E  
                          _SSPADD 000FC8                            _SSPBUF 000FC9  
                    filtroStr@fim 0093                      filtroStr@aux 0152  
                    filtroStr@str 0095                      atualizaLCD@i 0070  
                  __CFG_XINST$OFF 000000                 __end_of_UART_Init 5E90  
                    readADC@canal 0068                            ___ftge 540A  
                  _readEEPROM_ext 598C                            ___wmul 5D58  
                       ??___ftadd 0081                    __CFG_STVREN$ON 000000  
                __end_of_controle 3F1C                         ??___ftdiv 008D  
                          _h_flap 01F4                         ??___lldiv 0068  
                       ??___ftmul 0072                            _getMac 437E  
                       ??___fttol 009A                            _blinkk 027A  
                       ??___lwdiv 0064                         ??___lwmod 006B  
         __end_of_writeEEPROM_ext 5AF0                         ??__doprnt 0072  
                          _memset 5C72                            delay@x 0060  
                          _buzzer 00FA                            clear_0 53D0  
                          clear_1 53DC                            clear_2 53E8  
                          clear_3 53F6                            _setLed 5E3A  
                          blink@i 0064                         ??_btPress 0060  
    _t_controle_religar_ventoinha 0035                      __doprnt@flag 0077  
                          _printf 5B6E                      __doprnt@prec 0076  
          __end_of_enviaDadosWifi 3106                            _strchr 573A  
                          _strcpy 581A                            _strlen 58E2  
                          _strtok 48A0                            _strspn 552A  
                          _strstr 5104             ___ftmul@f3_as_product 0076  
                       ??_readADC 0062                      __pdataCOMRAM 0050  
                       ??_isdigit 0060                         ?_I2C_Read 0061  
                       ?_I2C_Wait 0001                         ?_I2C_Stop 0001  
                    acaoFlap@acao 0067                      __mediumconst 7794  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0060  
                       ??_sprintf 008B              __size_of_atualizaLCD 00C6  
                 setUmidade@_clim 0078                         ??_strcspn 006A  
                       ??_strncmp 006C                         ??_strncpy 0066  
                 Lcd_Set_Cursor@a 0064                   Lcd_Set_Cursor@b 0063  
                 Lcd_Set_Cursor@y 0066                   Lcd_Set_Cursor@z 0065  
                      __acao_flap 0042                        __accesstop 0060  
         __end_of__initialization 53FC                        ___ftadd@f1 007B  
                      ___ftadd@f2 007E                  ?i2_setRangeValor 0006  
                      ___ftge@ff1 0060                        ___ftge@ff2 0063  
    __size_of_criaCaracteresCGRAM 00AC                 __end_of_Lcd_Clear 5EEA  
                _h_modo_seguranca 00F1                     ___rparam_used 000001  
                      ___ftdiv@f1 0087                        ___ftdiv@f2 008A  
                      ___ftdiv@f3 0091            __end_of_readEEPROM_ext 59DE  
         _h_subir_temp_automatica 00EF                   _getSensors$1521 00AB  
                 _getSensors$1523 00A5                   _getSensors$1525 00A8  
                      ___ftmul@f1 006C                        ___ftmul@f2 006F  
                 _getSensors$2491 00B0              __size_ofi2_I2C_Start 0008  
                      ___fttol@f1 0096              __size_ofi2_I2C_Write 000A  
                  __pcstackCOMRAM 0001                      __pidataBANK0 5F26  
                    __pidataBANK2 5E90                     __end_of_delay 5D58  
                   __end_of_blink 5C42                     __end_of_timer 41D0  
                   __end_of_putch 5EDC                __size_of_faseAtual 013E  
          __size_of_tabelaUmidade 0FD2                        ___lwtoft@c 0069  
                 ?_enviaDadosWifi 0001              __size_of_readButtons 0028  
                  _Lcd_Set_Cursor 4EF4                      ??i2_I2C_Read 0004  
                      ??_I2C_Read 0063                      ??i2_I2C_Wait 0001  
                      ??_I2C_Wait 0060                      ??i2_I2C_Stop 0002  
                      ??_I2C_Stop 0061              __size_of_limpaBuffer 0040  
                       ?_Lcd_Init 0001                           ??_delay 0062  
                       ?_Lcd_Port 0001                        _h_abafador 01F5  
                      __doprnt@ap 0070                           ??_blink 0064  
                      __doprnt@cp 007C                        __doprnt@pb 006C  
           writeEEPROM_ext@adress 0064                           ??_timer 0011  
                         ??_putch 0060                __size_of_filtroStr 016E  
         i2setRangeValor@_var_ajt 0006                        __pbssBANK0 00EB  
                      __pbssBANK1 0196                        __pbssBANK2 0200  
                         ?_TIMER0 0001               writeEEPROM_ext@data 0063  
                 ?_readEEPROM_ext 0001                           TIMER0@c 0030  
              __end_ofi2_I2C_Read 5D2E                      I2C_Read@temp 0063  
              __end_ofi2_I2C_Wait 5ECE                           ?___ftge 0060  
              __end_ofi2_I2C_Stop 5F1E                        _climaAtual 59DE  
                         ?___wmul 0060                           ?_getMac 0073  
                         ?_memset 0060                  ?_writeEEPROM_ext 0063  
                         ?_setLed 0060         __size_of_Lcd_Write_String 002E  
                       ?_acaoFlap 0062                         ?___ftpack 0060  
          __end_of_Lcd_Set_Cursor 4FA8                        I2C_Write@d 0061  
                         ?_printf 0081                        _getSensors 3106  
                         ?_strchr 0060                           ?_strcpy 0071  
                         ?_strlen 0060                         ?___lwtoft 0069  
                         ?_strtok 006D                           ?_strspn 0066  
                         ?_strstr 006F                     ??_I2C_Restart 0061  
                 __CFG_WDTPS$1024 000000                        ??_Lcd_Init 0063  
                      ??_Lcd_Port 0060                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
                         i2_delay 5DF4                     filtroStr@_str 0100  
                       ?_controle 0001                     _tabelaUmidade 163C  
                 __CFG_VREGEN$OFF 000000                 __end_of_faseAtual 479A  
                  _Lcd_Write_Char 5B30            acaoFlap@tempo_aguardar 0064  
                         _Lcd_Cmd 5DCE                   __size_of_TIMER0 4C6E  
                       _I2C_Start 5F0E                         _I2C_Write 5EEA  
                         __Hparam 0000                           __Lparam 0000  
              alterarConfigWifi@i 00C5                   __size_of___ftge 0092  
                         ___ftadd 41D0                           ___ftdiv 4C76  
                         ___lldiv 56B6                   __size_of___wmul 0028  
                         ___ftmul 4A96                           ___fttol 499E  
                         ___lwdiv 5938                           ___lwmod 5A6A  
            i2setRangeValor@_acao 000E                   __size_of_getMac 0170  
               __end_of_filtroStr 465C                           __doprnt 260E  
                         __pcinit 5378                        ??_acaoFlap 0066  
                      ??___ftpack 0065                   __size_of_memset 0030  
                         _btPress 5E58                           __ramtop 0800  
                 ?_Lcd_Set_Cursor 0063                   __size_of_setLed 001E  
                         _bt_flag 0044                           __ptext0 0012  
                         __ptext1 5C42                           __ptext2 479A  
                         __ptext3 163C                           __ptext4 51A6  
                         __ptext5 598C                           __ptext6 5EFE  
                         __ptext7 5BDE                           __ptext8 3106  
                         __ptext9 5244           _wifi_habilita_alteracao 01F1  
                  _t_wifi_restart 0197                   __size_of_printf 0038  
                      ??___lwtoft 006C                   __size_of_strchr 0070  
                         _readADC 5244                   __size_of_strcpy 0066  
                 __size_of_strlen 0056                   __size_of_strtok 00FE  
                 __size_of_strspn 0084                   __size_of_strstr 00A2  
                         _dpowers 77CD                           _isdigit 5E18  
       _t_controle_modo_seguranca 0033                           getMac@i 007B  
                         getMac@j 0079          __size_of_I2C_Master_Init 0070  
                         _tempajt 00EC                     _t_flap_ligado 00F5  
                         _umidajt 00EB                           _sprintf 5A26  
                   __doprnt@width 007E               __end_of_I2C_Restart 5F06  
                         _strcspn 55AE            __end_of_Lcd_Write_Char 5B6E  
                         _strncmp 4D5E                    __pintcode_body 4B8C  
                         _strncpy 5880              end_of_initialization 53FC  
                  ?_tabelaUmidade 0060                        ??_controle 0068  
                         memset@c 0062                           memset@n 0064  
                         memset@p 0066                     __Lmediumconst 7794  
                         int_func 4B8C                        _timer$1417 0018  
                      _timer$1418 001A                        _timer$1419 001C  
                      _setUmidade 479A                        blink@start 0062  
                       i2u1253_40 5D20                         i2u1333_40 3FAE  
                      ?_I2C_Start 0001                         i2u1254_45 5D22  
                       i2u1334_45 3FB0                        ?_I2C_Write 0061  
                       i2u1545_47 5DFC                      _bufferSerial 0242  
                 ___lldiv@divisor 0064                   ___lldiv@counter 006C  
                       _RCSTAbits 000FAB                           printf@f 0081  
        criaCaracteresCGRAM@F3896 7795                  I2C_Master_Init@c 006D  
                         postdec1 000FE5                           postdec2 000FDD  
                     ?_climaAtual 0060                           postinc0 000FEE  
                         postinc2 000FDE                         Lcd_Port@a 0060  
         setRangeValor@end_eeprom 0069                        _wifi_SENHA 01EF  
                         strlen@s 0060                         _UART_Init 5E74  
                setUmidade@_clima 006C                           strspn@i 006B  
                       _PORTAbits 000F80            __size_of_setRangeValor 009E  
                       _PORTBbits 000F81                       ?_getSensors 0001  
                       _PORTCbits 000F82                         _PORTDbits 000F83  
                       _PORTEbits 000F84               _criaCaracteresCGRAM 5058  
                      _updateLeds 5C42                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
         i2writeEEPROM_ext@adress 0005                 __size_of_I2C_Read 0032  
               tabelaUmidade@_umd 0067                 tabelaUmidade@_tmp 0060  
               __size_of_I2C_Wait 0014                 __size_of_I2C_Stop 0008  
                      _trava_fase 00F8                  _t_flap_intervalo 00F4  
                 ?_Lcd_Write_Char 0001                 Lcd_Write_String@a 0064  
               Lcd_Write_String@i 0066              _t_controle_fim_fases 0040  
                     ___ftdiv@exp 0094              ?_criaCaracteresCGRAM 0001  
                       _TXSTAbits 000FAC                   filtroStr@inicio 0091  
                  __end_of_TIMER0 4C76              criaCaracteresCGRAM@i 00A3  
            criaCaracteresCGRAM@j 00A2              criaCaracteresCGRAM@k 00A1  
       tabelaUmidade@_tipo_sensor 0064                       ___ftmul@exp 0075  
                       _Lcd_Clear 5EDC                  ??_enviaDadosWifi 00C5  
                   _t_leitura_adc 003C                    __end_of___ftge 549C  
                  i2I2C_Read@temp 0004                    __end_of___wmul 5D80  
                      filtroStr@i 0195                      _md_seguranca 0279  
                      filtroStr@p 0193                        filtroStr@x 0192  
                      filtroStr@y 0190                  _Lcd_Write_String 5CD2  
                      ?_UART_Init 0001                     __pidataCOMRAM 5F2B  
                  __end_of_getMac 44EE                    __end_of_memset 5CA2  
                  __end_of_setLed 5E58                    __end_of_printf 5BA6  
                     _I2C_Restart 5EFE                    __end_of_strchr 57AA  
                 _setUmidade$1300 0075                    __end_of_strcpy 5880  
                  __end_of_strlen 5938                   _setUmidade$1297 006F  
                 _setUmidade$1298 0071                   _setUmidade$1299 0073  
                  __end_of_strtok 499E                    __end_of_strspn 55AE  
                  __end_of_strstr 51A6                     ??_atualizaLCD 0070  
             start_initialization 5378        _t_controle_temp_automatica 003D  
                     i2I2C_Read@a 0002                   ??_tabelaUmidade 0065  
             __size_of_climaAtual 0048                 __size_of_Lcd_Init 0084  
               __size_of_Lcd_Port 0030                  ??_readEEPROM_ext 0065  
               ??_I2C_Master_Init 0071                          ??_TIMER0 001E  
                   _setRangeValor 51A6             ??_criaCaracteresCGRAM 0064  
                     ?_setUmidade 0068                     ??i2_I2C_Start 0002  
                     ??_I2C_Start 0061                     ??i2_I2C_Write 0004  
             __size_of_getSensors 0518                       ??_I2C_Write 0063  
       _t_controle_religar_buzzer 0037                        ?_Lcd_Clear 0001  
                        ??___ftge 0066                          ??___wmul 0064  
        __size_ofi2_setRangeValor 009A                          ??_getMac 0077  
                     __doprnt@len 007A                       __doprnt@val 0078  
                     __pdataBANK0 00FB                       __pdataBANK2 02B0  
                __CFG_LPT1OSC$OFF 000000                     ??_readButtons 0006  
                 Lcd_Write_Char@a 0063                          ??_memset 0066  
                 Lcd_Write_Char@y 0062                          ??_setLed 0061  
                        ??_printf 00BF                 faseAtual@_tempajt 0062  
                        ??_strchr 0064                          ??_strcpy 0075  
                        ??_strlen 0062                          ??_strtok 0071  
                        ??_strspn 006A                          ??_strstr 0073  
                   ??_limpaBuffer 0068                 __size_of_acaoFlap 008E  
               __size_of___ftpack 00B0                       __pbssCOMRAM 0031  
                     ?_updateLeds 0001                 __size_of___lwtoft 0026  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
               _t_temp_automatica 00F3                      _isdigit$1991 0061  
                _t_buzzer_religar 00FF                          ?i2_delay 0001  
                  ?_setRangeValor 0065               __end_of_atualizaLCD 4EF4  
          _senha_desbloqueio_func 01F3                          ?_Lcd_Cmd 0001  
                       __doprnt@c 0080                         __doprnt@f 006E  
                      setLed@acao 0060                 __size_of_controle 0432  
        _criaCaracteresCGRAM$1229 009F                         _faseAtual 465C  
                       _main$1633 00DC                         _main$1642 00E2  
                       _main$1634 00DE                         _main$1637 00E0  
                       _main$1654 00E6                         _main$1649 00E4  
                       _main$1659 00E8                         _main$2492 00DA  
                ___lwdiv@dividend 0060                  ??_Lcd_Set_Cursor 0064  
                       __pintcode 0008                     __pmediumconst 7794  
                        ?___ftadd 007B                          ?___ftdiv 0087  
             __end_ofi2_I2C_Start 5F26                          ?___lldiv 0060  
                        ?___ftmul 006C                          ?___fttol 0096  
             __end_ofi2_I2C_Write 5EFE                          ?___lwdiv 0060  
                        ?___lwmod 0067                          ?__doprnt 006C  
             _tipo_sensor_umidade 00F7                       ??_UART_Init 0060  
            readEEPROM_ext@adress 0065                          ?_btPress 0001  
                        ?_readADC 0060                         _filtroStr 44EE  
                       _media_adc 003B               __size_of_setUmidade 0106  
                        ?_isdigit 0001                          _I2C_Read 5BDE  
                        _I2C_Wait 5EA8                          _I2C_Stop 5F06  
             __end_of_readButtons 5DA8             acaoFlap@tempo_ativado 0062  
        __size_of_writeEEPROM_ext 0042                  ___lwdiv@quotient 0064  
                  __size_of_delay 002A                    __size_of_blink 0032  
             i2setRangeValor@_aux 000F               i2setRangeValor@_max 0009  
             i2setRangeValor@_min 0008                          ?_sprintf 0081  
                        ?_strcspn 0066                          ?_strncmp 0066  
                        ?_strncpy 0060               __end_of_limpaBuffer 5B30  
                  __size_of_timer 02B4                    __size_of_putch 000E  
                  ___wmul@product 0064                         btPress@bt 0060  
                        _LATAbits 000F89                          _LATBbits 000F8A  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                        _LATEbits 000F8D                       strncpy@from 0062  
                       _opcaomenu 0199                          _PIE1bits 000F9D  
                     strncpy@size 0064                         getMac@mac 0073  
                       getMac@men 007A                         getMac@var 0075  
                       blink@line 0060                   enviaDadosWifi@i 00D8  
                     _h_venotinha 01F6                        ?_faseAtual 0060  
                        Lcd_Cmd@a 0062                          _PIR1bits 000F9E  
             __size_of_updateLeds 0030                       ??_Lcd_Clear 0063  
                    ??_climaAtual 0062                      ??_getSensors 00A5  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0060  
                      ?_filtroStr 0091                 ??i2_setRangeValor 000B  
                  filtroStr@count 0191                  ??_Lcd_Write_Char 0061  
                        i2delay@x 0001                       _atualizaLCD 4E2E  
                        _Lcd_Init 5632                 i2_writeEEPROM_ext 5BA6  
                        _Lcd_Port 5CA2                   ??_setRangeValor 006A  
                     _INTCON2bits 000FF1                       _INTCON3bits 000FF0  
                       copy_data0 538C                         copy_data1 53AC  
              ?i2_writeEEPROM_ext 0004                __end_of_climaAtual 5A26  
                    setUmidade@tp 006E          __end_of_Lcd_Write_String 5D00  
                 _f_falta_energia 00FE                  __size_ofi2_delay 0024  
                __size_of_Lcd_Cmd 0026                       i2_I2C_Start 5F1E  
                     i2_I2C_Write 5EF4                __end_of_getSensors 361E  
             ??i2_writeEEPROM_ext 0005                          __Hrparam 0000  
                        __Lrparam 0000                  __size_of___ftadd 01AE  
                __size_of___ftdiv 00E8                  __size_of___lldiv 0084  
                __size_of___ftmul 00F6                  __size_of___fttol 00F8  
                __size_of___lwdiv 0054                  __size_of___lwmod 0044  
                     _readButtons 5D80                          _acaoFlap 549C  
                        ___ftpack 4FA8                  __size_of__doprnt 05C0  
                  readADC@digital 0066               Lcd_Write_Char@tempp 0061  
                __size_of_btPress 001C                          ___lwtoft 5DA8  
                    ?_I2C_Restart 0001                          _base_sec 004A  
                     _limpaBuffer 5AF0                    getSensors@auxx 00AD  
                 _I2C_Master_Init 57AA                  __size_of_readADC 009A  
       __end_ofi2_writeEEPROM_ext 5BDE                         setLed@led 0061  
                __size_of_isdigit 0022                   ___lwdiv@divisor 0062  
                 ___lwdiv@counter 0066                          _h_buzzer 00F0  
                        __ptext10 5DA8                          __ptext11 499E  
                        __ptext20 5058                          __ptext12 4A96  
                        __ptext21 3AEA                          __ptext13 540A  
                        __ptext30 5F06                          __ptext22 549C  
                        __ptext14 4C76                          __ptext31 5F0E  
                        __ptext23 5E3A                          __ptext15 41D0  
                        __ptext40 55AE                          __ptext32 5EA8  
                        __ptext24 59DE                          __ptext16 4FA8  
                        __ptext41 5104                          __ptext33 5B6E  
                        __ptext25 5E58                          __ptext17 465C  
                        __ptext50 5E18                          __ptext42 4D5E  
                        __ptext34 5AF0                          __ptext26 5C10  
                        __ptext18 2BCE                          __ptext51 5D58  
                        __ptext43 58E2                          __ptext35 5C72  
                        __ptext27 361E                          __ptext19 437E  
                        __ptext60 5EDC                          __ptext52 5A6A  
                        __ptext44 573A                          __ptext36 5D2E  
                        __ptext28 5AAE                          __ptext61 5DCE  
                        __ptext53 5938                          __ptext45 5880  
                        __ptext37 44EE                          __ptext29 5EEA  
                        __ptext70 5D80                          __ptext62 5CA2  
                        __ptext54 4E2E                          __ptext46 581A  
                        __ptext38 48A0                          __ptext71 5EF4  
                        __ptext63 57AA                          __ptext55 5CD2  
                        __ptext47 5A26                          __ptext39 552A  
                        __ptext72 5F16                          __ptext64 56B6  
                        __ptext56 5B30                          __ptext48 260E  
                        __ptext73 5F1E                          __ptext57 4EF4  
                        __ptext49 5ECE                          __ptext74 5D00  
                        __ptext66 3F1C                          __ptext58 5E74  
                        __ptext75 5EBC                          __ptext67 52DE  
                        __ptext59 5632                          __ptext76 0000  
                        __ptext68 5BA6                          __ptext69 5DF4  
                        _lcd_rfsh 004B         i2setRangeValor@end_eeprom 000A  
                __size_of_sprintf 0044            _f_buzzer_falta_energia 0041  
                __size_of_strcspn 0084                  __size_of_strncmp 00D0  
                        _controle 3AEA                  __size_of_strncpy 0062  
                      strcpy@from 0073                 ??_writeEEPROM_ext 0064  
                        _fornalha 00F9                     __size_of_main 162A  
                    ??_setUmidade 006E                       _t_fim_fase1 004E  
                     _t_fim_fase2 004D                       _t_fim_fase3 004C  
                      strncmp@len 006A                       ??_faseAtual 0064  
                        blink@end 0063                    _wifi_conectado 019A  
                        _wifi_MAC 02B0                       faseAtual@tp 0065  
                        int$flags 0051             __CFG_CPUDIV$OSC1_PLL2 000000  
                     ??_filtroStr 0099    _t_religar_ventoinha_automatica 00F2  
                      _INTCONbits 000FF2                        i2_I2C_Read 5D00  
                      i2_I2C_Wait 5EBC                        i2_I2C_Stop 5F16  
                    ??_updateLeds 0063                __end_of_setUmidade 48A0  
                 faseAtual@_fasee 0064                          isdigit@c 0062  
                        memset@p1 0060       __end_of_criaCaracteresCGRAM 5104  
               enviaDadosWifi@AUX 00C7             __end_of_tabelaUmidade 260E  
                        intlevel2 0000                         sprintf@ap 008B  
                       sprintf@pb 008D  __end_ofcriaCaracteresCGRAM@F3896 77CD  
                   getSensors@aux 00B4                         sprintf@wh 0081  
                 faseAtual@tmpajt 0066                         strchr@chr 0062  
                ___lwmod@dividend 0067                         strchr@ptr 0060  
                ___lldiv@dividend 0060                       climaAtual@c 0062  
                       strcspn@s1 0066                         strcspn@s2 0068  
                       strncmp@s1 0066                         strncmp@s2 0068  
                       strncpy@cp 0066                         strncpy@to 0060  
    criaCaracteresCGRAM@character 0067                __end_of_updateLeds 5C72  
                        printf@ap 00BF                          printf@pb 00C1  
               _alterarConfigWifi 361E                 _t_controle_buzzer 003F  
         __end_of_I2C_Master_Init 581A                Lcd_Set_Cursor@temp 0067  
              ?_alterarConfigWifi 0001                setUmidade@_tempajt 006A  
                  faseAtual@_fase 0060                          sprintf@f 0083  
                ___lldiv@quotient 0068                   ___lwmod@divisor 0069  
                        strcpy@cp 0076        __size_ofi2_writeEEPROM_ext 0038  
                        strlen@cp 0064                          strcpy@to 0071  
                 ___lwmod@counter 006B                          strcspn@i 006B  
         __size_of_enviaDadosWifi 0538               ??_alterarConfigWifi 00C5  
                        strtok@s1 006D                          strtok@s2 006F  
                        strspn@s1 0066                          strspn@s2 0068  
                        strtok@sp 0031                  _t_controle_blink 003E  
                        strstr@s1 006F                          strstr@s2 0071  
               setUmidade@_umdajt 0068                 setUmidade@_tmpajt 0077  
                     getSensors@i 00B3                   _t_controle_flap 0039  
       __end_of_alterarConfigWifi 3AEA  
