

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Jul 16 20:26:49 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           ; Version 1.44
   104                           ; Generated 14/09/2017 GMT
   105                           ; 
   106                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F4550 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataCOMRAM
   139  005F44                     __pidataCOMRAM:
   140                           	opt stack 0
   141                           
   142                           ;initializer for __led
   143  005F44  01                 	db	1
   144                           
   145                           ;initializer for _umid
   146  005F45  64                 	db	100
   147                           
   148                           ;initializer for _f_falta_energia
   149  005F46  01                 	db	1
   150                           
   151                           	psect	idataBANK0
   152  005F47                     __pidataBANK0:
   153                           	opt stack 0
   154                           
   155                           ;initializer for _menu
   156  005F47  0F                 	db	15
   157                           
   158                           ;initializer for _temp
   159  005F48  63                 	db	99
   160                           
   161                           ;initializer for _t_buzzer_religar
   162  005F49  01                 	db	1
   163                           
   164                           	psect	idataBANK1
   165  005EFC                     __pidataBANK1:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _wifi_MAC
   169  005EFC  45                 	db	69
   170  005EFD  52                 	db	82
   171  005EFE  52                 	db	82
   172  005EFF  4F                 	db	79
   173  005F00  00                 	db	0
   174  005F01  00                 	db	0
   175  005F02  00                 	db	0
   176  005F03  00                 	db	0
   177  005F04  00                 	db	0
   178  005F05  00                 	db	0
   179  005F06  00                 	db	0
   180  005F07  00                 	db	0
   181                           
   182                           	psect	mediumconst
   183  00780E                     __pmediumconst:
   184                           	opt stack 0
   185  00780E  00                 	db	0
   186  00780F                     criaCaracteresCGRAM@F3900:
   187                           	opt stack 0
   188  00780F  0E                 	db	14
   189  007810  11                 	db	17
   190  007811  11                 	db	17
   191  007812  1F                 	db	31
   192  007813  1B                 	db	27
   193  007814  1B                 	db	27
   194  007815  1F                 	db	31
   195  007816  1F                 	db	31
   196  007817  01                 	db	1
   197  007818  03                 	db	3
   198  007819  07                 	db	7
   199  00781A  1D                 	db	29
   200  00781B  1D                 	db	29
   201  00781C  07                 	db	7
   202  00781D  03                 	db	3
   203  00781E  01                 	db	1
   204  00781F  04                 	db	4
   205  007820  04                 	db	4
   206  007821  0E                 	db	14
   207  007822  0E                 	db	14
   208  007823  1F                 	db	31
   209  007824  1D                 	db	29
   210  007825  1B                 	db	27
   211  007826  0E                 	db	14
   212  007827  04                 	db	4
   213  007828  0A                 	db	10
   214  007829  0A                 	db	10
   215  00782A  0A                 	db	10
   216  00782B  0E                 	db	14
   217  00782C  1F                 	db	31
   218  00782D  1F                 	db	31
   219  00782E  0E                 	db	14
   220  00782F  00                 	db	0
   221  007830  0E                 	db	14
   222  007831  11                 	db	17
   223  007832  04                 	db	4
   224  007833  0A                 	db	10
   225  007834  00                 	db	0
   226  007835  04                 	db	4
   227  007836  00                 	db	0
   228  007837  00                 	db	0
   229  007838  00                 	db	0
   230  007839  00                 	db	0
   231  00783A  00                 	db	0
   232  00783B  00                 	db	0
   233  00783C  00                 	db	0
   234  00783D  00                 	db	0
   235  00783E  00                 	db	0
   236  00783F  00                 	db	0
   237  007840  00                 	db	0
   238  007841  00                 	db	0
   239  007842  00                 	db	0
   240  007843  00                 	db	0
   241  007844  00                 	db	0
   242  007845  00                 	db	0
   243  007846  00                 	db	0
   244  007847                     __end_ofcriaCaracteresCGRAM@F3900:
   245                           	opt stack 0
   246  007847                     _dpowers:
   247                           	opt stack 0
   248  007847  0001               	dw	1
   249  007849  000A               	dw	10
   250  00784B  0064               	dw	100
   251  00784D  03E8               	dw	1000
   252  00784F  2710               	dw	10000
   253  007851                     __end_of_dpowers:
   254                           	opt stack 0
   255  0000                     _SSPBUF	set	4041
   256  0000                     _SSPSTAT	set	4039
   257  0000                     _SSPADD	set	4040
   258  0000                     _SSPCON2	set	4037
   259  0000                     _SSPCON1	set	4038
   260  0000                     _ADCON2	set	4032
   261  0000                     _ADCON1	set	4033
   262  0000                     _INTCON	set	4082
   263  0000                     _T0CON	set	4053
   264  0000                     _INTCON3bits	set	4080
   265  0000                     _INTCON2bits	set	4081
   266  0000                     _TRISBbits	set	3987
   267  0000                     _PORTEbits	set	3972
   268  0000                     _PORTCbits	set	3970
   269  0000                     _PORTAbits	set	3968
   270  0000                     _TRISEbits	set	3990
   271  0000                     _TRISAbits	set	3986
   272  0000                     _RCREG	set	4014
   273  0000                     _TMR0L	set	4054
   274  0000                     _TMR0H	set	4055
   275  0000                     _ADCON0bits	set	4034
   276  0000                     _ADCON0	set	4034
   277  0000                     _ADRESL	set	4035
   278  0000                     _ADRESH	set	4036
   279  0000                     _TXREG	set	4013
   280  0000                     _PIE1bits	set	3997
   281  0000                     _PIR1bits	set	3998
   282  0000                     _INTCONbits	set	4082
   283  0000                     _SPBRG	set	4015
   284  0000                     _RCSTAbits	set	4011
   285  0000                     _TXSTAbits	set	4012
   286  0000                     _TRISCbits	set	3988
   287  0000                     _LATDbits	set	3980
   288  0000                     _LATEbits	set	3981
   289  0000                     _LATBbits	set	3978
   290  0000                     _LATCbits	set	3979
   291  0000                     _LATAbits	set	3977
   292  0000                     _PORTBbits	set	3969
   293  0000                     _PORTDbits	set	3971
   294  0000                     _TRISDbits	set	3989
   295  0000                     _ACKEN	set	32300
   296  0000                     _ACKDT	set	32301
   297  0000                     _RCEN	set	32299
   298  0000                     _PEN	set	32298
   299  0000                     _RSEN	set	32297
   300  0000                     _SEN	set	32296
   301  0000                     _INT2IF	set	32641
   302  0000                     _RCIF	set	31989
   303  0000                     _TMR0IF	set	32658
   304  0000                     _GO	set	32273
   305  0000                     _ADON	set	32272
   306  007851                     STR_36:
   307  007851  3C                 	db	60	;'<'
   308  007852  68                 	db	104	;'h'
   309  007853  74                 	db	116	;'t'
   310  007854  6D                 	db	109	;'m'
   311  007855  6C                 	db	108	;'l'
   312  007856  3E                 	db	62	;'>'
   313  007857  3C                 	db	60	;'<'
   314  007858  73                 	db	115	;'s'
   315  007859  74                 	db	116	;'t'
   316  00785A  79                 	db	121	;'y'
   317  00785B  6C                 	db	108	;'l'
   318  00785C  65                 	db	101	;'e'
   319  00785D  3E                 	db	62	;'>'
   320  00785E  64                 	db	100	;'d'
   321  00785F  69                 	db	105	;'i'
   322  007860  76                 	db	118	;'v'
   323  007861  7B                 	db	123
   324  007862  6D                 	db	109	;'m'
   325  007863  61                 	db	97	;'a'
   326  007864  72                 	db	114	;'r'
   327  007865  67                 	db	103	;'g'
   328  007866  69                 	db	105	;'i'
   329  007867  6E                 	db	110	;'n'
   330  007868  3A                 	db	58	;':'
   331  007869  32                 	db	50	;'2'
   332  00786A  35                 	db	53	;'5'
   333  00786B  70                 	db	112	;'p'
   334  00786C  78                 	db	120	;'x'
   335  00786D  20                 	db	32
   336  00786E  61                 	db	97	;'a'
   337  00786F  75                 	db	117	;'u'
   338  007870  74                 	db	116	;'t'
   339  007871  6F                 	db	111	;'o'
   340  007872  3B                 	db	59	;';'
   341  007873  6D                 	db	109	;'m'
   342  007874  61                 	db	97	;'a'
   343  007875  78                 	db	120	;'x'
   344  007876  2D                 	db	45
   345  007877  77                 	db	119	;'w'
   346  007878  69                 	db	105	;'i'
   347  007879  64                 	db	100	;'d'
   348  00787A  74                 	db	116	;'t'
   349  00787B  68                 	db	104	;'h'
   350  00787C  3A                 	db	58	;':'
   351  00787D  33                 	db	51	;'3'
   352  00787E  35                 	db	53	;'5'
   353  00787F  30                 	db	48	;'0'
   354  007880  70                 	db	112	;'p'
   355  007881  78                 	db	120	;'x'
   356  007882  3B                 	db	59	;';'
   357  007883  64                 	db	100	;'d'
   358  007884  69                 	db	105	;'i'
   359  007885  73                 	db	115	;'s'
   360  007886  70                 	db	112	;'p'
   361  007887  6C                 	db	108	;'l'
   362  007888  61                 	db	97	;'a'
   363  007889  79                 	db	121	;'y'
   364  00788A  3A                 	db	58	;':'
   365  00788B  66                 	db	102	;'f'
   366  00788C  6C                 	db	108	;'l'
   367  00788D  65                 	db	101	;'e'
   368  00788E  78                 	db	120	;'x'
   369  00788F  3B                 	db	59	;';'
   370  007890  66                 	db	102	;'f'
   371  007891  6C                 	db	108	;'l'
   372  007892  65                 	db	101	;'e'
   373  007893  78                 	db	120	;'x'
   374  007894  2D                 	db	45
   375  007895  64                 	db	100	;'d'
   376  007896  69                 	db	105	;'i'
   377  007897  72                 	db	114	;'r'
   378  007898  65                 	db	101	;'e'
   379  007899  63                 	db	99	;'c'
   380  00789A  74                 	db	116	;'t'
   381  00789B  69                 	db	105	;'i'
   382  00789C  6F                 	db	111	;'o'
   383  00789D  6E                 	db	110	;'n'
   384  00789E  3A                 	db	58	;':'
   385  00789F  63                 	db	99	;'c'
   386  0078A0  6F                 	db	111	;'o'
   387  0078A1  6C                 	db	108	;'l'
   388  0078A2  75                 	db	117	;'u'
   389  0078A3  6D                 	db	109	;'m'
   390  0078A4  6E                 	db	110	;'n'
   391  0078A5  3B                 	db	59	;';'
   392  0078A6  7D                 	db	125
   393  0078A7  69                 	db	105	;'i'
   394  0078A8  6E                 	db	110	;'n'
   395  0078A9  70                 	db	112	;'p'
   396  0078AA  75                 	db	117	;'u'
   397  0078AB  74                 	db	116	;'t'
   398  0078AC  2C                 	db	44
   399  0078AD  62                 	db	98	;'b'
   400  0078AE  75                 	db	117	;'u'
   401  0078AF  74                 	db	116	;'t'
   402  0078B0  74                 	db	116	;'t'
   403  0078B1  6F                 	db	111	;'o'
   404  0078B2  6E                 	db	110	;'n'
   405  0078B3  7B                 	db	123
   406  0078B4  70                 	db	112	;'p'
   407  0078B5  61                 	db	97	;'a'
   408  0078B6  64                 	db	100	;'d'
   409  0078B7  64                 	db	100	;'d'
   410  0078B8  69                 	db	105	;'i'
   411  0078B9  6E                 	db	110	;'n'
   412  0078BA  67                 	db	103	;'g'
   413  0078BB  3A                 	db	58	;':'
   414  0078BC  37                 	db	55	;'7'
   415  0078BD  70                 	db	112	;'p'
   416  0078BE  78                 	db	120	;'x'
   417  0078BF  3B                 	db	59	;';'
   418  0078C0  6D                 	db	109	;'m'
   419  0078C1  61                 	db	97	;'a'
   420  0078C2  72                 	db	114	;'r'
   421  0078C3  67                 	db	103	;'g'
   422  0078C4  69                 	db	105	;'i'
   423  0078C5  6E                 	db	110	;'n'
   424  0078C6  2D                 	db	45
   425  0078C7  62                 	db	98	;'b'
   426  0078C8  6F                 	db	111	;'o'
   427  0078C9  74                 	db	116	;'t'
   428  0078CA  74                 	db	116	;'t'
   429  0078CB  6F                 	db	111	;'o'
   430  0078CC  6D                 	db	109	;'m'
   431  0078CD  3A                 	db	58	;':'
   432  0078CE  32                 	db	50	;'2'
   433  0078CF  35                 	db	53	;'5'
   434  0078D0  70                 	db	112	;'p'
   435  0078D1  78                 	db	120	;'x'
   436  0078D2  3B                 	db	59	;';'
   437  0078D3  62                 	db	98	;'b'
   438  0078D4  6F                 	db	111	;'o'
   439  0078D5  72                 	db	114	;'r'
   440  0078D6  64                 	db	100	;'d'
   441  0078D7  65                 	db	101	;'e'
   442  0078D8  72                 	db	114	;'r'
   443  0078D9  3A                 	db	58	;':'
   444  0078DA  31                 	db	49	;'1'
   445  0078DB  70                 	db	112	;'p'
   446  0078DC  78                 	db	120	;'x'
   447  0078DD  20                 	db	32
   448  0078DE  73                 	db	115	;'s'
   449  0078DF  6F                 	db	111	;'o'
   450  0078E0  6C                 	db	108	;'l'
   451  0078E1  69                 	db	105	;'i'
   452  0078E2  64                 	db	100	;'d'
   453  0078E3  20                 	db	32
   454  0078E4  23                 	db	35
   455  0078E5  38                 	db	56	;'8'
   456  0078E6  38                 	db	56	;'8'
   457  0078E7  38                 	db	56	;'8'
   458  0078E8  3B                 	db	59	;';'
   459  0078E9  62                 	db	98	;'b'
   460  0078EA  6F                 	db	111	;'o'
   461  0078EB  72                 	db	114	;'r'
   462  0078EC  64                 	db	100	;'d'
   463  0078ED  65                 	db	101	;'e'
   464  0078EE  72                 	db	114	;'r'
   465  0078EF  2D                 	db	45
   466  0078F0  72                 	db	114	;'r'
   467  0078F1  61                 	db	97	;'a'
   468  0078F2  64                 	db	100	;'d'
   469  0078F3  69                 	db	105	;'i'
   470  0078F4  75                 	db	117	;'u'
   471  0078F5  73                 	db	115	;'s'
   472  0078F6  3A                 	db	58	;':'
   473  0078F7  33                 	db	51	;'3'
   474  0078F8  70                 	db	112	;'p'
   475  0078F9  78                 	db	120	;'x'
   476  0078FA  3B                 	db	59	;';'
   477  0078FB  7D                 	db	125
   478  0078FC  3C                 	db	60	;'<'
   479  0078FD  2F                 	db	47
   480  0078FE  73                 	db	115	;'s'
   481  0078FF  74                 	db	116	;'t'
   482  007900  79                 	db	121	;'y'
   483  007901  6C                 	db	108	;'l'
   484  007902  65                 	db	101	;'e'
   485  007903  3E                 	db	62	;'>'
   486  007904  3C                 	db	60	;'<'
   487  007905  62                 	db	98	;'b'
   488  007906  6F                 	db	111	;'o'
   489  007907  64                 	db	100	;'d'
   490  007908  79                 	db	121	;'y'
   491  007909  3E                 	db	62	;'>'
   492  00790A  3C                 	db	60	;'<'
   493  00790B  64                 	db	100	;'d'
   494  00790C  69                 	db	105	;'i'
   495  00790D  76                 	db	118	;'v'
   496  00790E  3E                 	db	62	;'>'
   497  00790F  20                 	db	32
   498  007910  3C                 	db	60	;'<'
   499  007911  68                 	db	104	;'h'
   500  007912  32                 	db	50	;'2'
   501  007913  3E                 	db	62	;'>'
   502  007914  43                 	db	67	;'C'
   503  007915  6F                 	db	111	;'o'
   504  007916  6E                 	db	110	;'n'
   505  007917  66                 	db	102	;'f'
   506  007918  69                 	db	105	;'i'
   507  007919  67                 	db	103	;'g'
   508  00791A  75                 	db	117	;'u'
   509  00791B  72                 	db	114	;'r'
   510  00791C  61                 	db	97	;'a'
   511  00791D  E7                 	db	-25
   512  00791E  E3                 	db	-29
   513  00791F  6F                 	db	111	;'o'
   514  007920  20                 	db	32
   515  007921  57                 	db	87	;'W'
   516  007922  69                 	db	105	;'i'
   517  007923  66                 	db	102	;'f'
   518  007924  69                 	db	105	;'i'
   519  007925  3C                 	db	60	;'<'
   520  007926  2F                 	db	47
   521  007927  68                 	db	104	;'h'
   522  007928  32                 	db	50	;'2'
   523  007929  3E                 	db	62	;'>'
   524  00792A  20                 	db	32
   525  00792B  53                 	db	83	;'S'
   526  00792C  53                 	db	83	;'S'
   527  00792D  49                 	db	73	;'I'
   528  00792E  44                 	db	68	;'D'
   529  00792F  3A                 	db	58	;':'
   530  007930  20                 	db	32
   531  007931  3C                 	db	60	;'<'
   532  007932  69                 	db	105	;'i'
   533  007933  6E                 	db	110	;'n'
   534  007934  70                 	db	112	;'p'
   535  007935  75                 	db	117	;'u'
   536  007936  74                 	db	116	;'t'
   537  007937  20                 	db	32
   538  007938  69                 	db	105	;'i'
   539  007939  64                 	db	100	;'d'
   540  00793A  3D                 	db	61	;'='
   541  00793B  27                 	db	39
   542  00793C  73                 	db	115	;'s'
   543  00793D  27                 	db	39
   544  00793E  20                 	db	32
   545  00793F  76                 	db	118	;'v'
   546  007940  61                 	db	97	;'a'
   547  007941  6C                 	db	108	;'l'
   548  007942  75                 	db	117	;'u'
   549  007943  65                 	db	101	;'e'
   550  007944  3D                 	db	61	;'='
   551  007945  27                 	db	39
   552  007946  25                 	db	37
   553  007947  73                 	db	115	;'s'
   554  007948  27                 	db	39
   555  007949  3E                 	db	62	;'>'
   556  00794A  20                 	db	32
   557  00794B  53                 	db	83	;'S'
   558  00794C  65                 	db	101	;'e'
   559  00794D  6E                 	db	110	;'n'
   560  00794E  68                 	db	104	;'h'
   561  00794F  61                 	db	97	;'a'
   562  007950  3A                 	db	58	;':'
   563  007951  20                 	db	32
   564  007952  3C                 	db	60	;'<'
   565  007953  69                 	db	105	;'i'
   566  007954  6E                 	db	110	;'n'
   567  007955  70                 	db	112	;'p'
   568  007956  75                 	db	117	;'u'
   569  007957  74                 	db	116	;'t'
   570  007958  20                 	db	32
   571  007959  69                 	db	105	;'i'
   572  00795A  64                 	db	100	;'d'
   573  00795B  3D                 	db	61	;'='
   574  00795C  27                 	db	39
   575  00795D  70                 	db	112	;'p'
   576  00795E  27                 	db	39
   577  00795F  20                 	db	32
   578  007960  76                 	db	118	;'v'
   579  007961  61                 	db	97	;'a'
   580  007962  6C                 	db	108	;'l'
   581  007963  75                 	db	117	;'u'
   582  007964  65                 	db	101	;'e'
   583  007965  3D                 	db	61	;'='
   584  007966  27                 	db	39
   585  007967  25                 	db	37
   586  007968  73                 	db	115	;'s'
   587  007969  27                 	db	39
   588  00796A  3E                 	db	62	;'>'
   589  00796B  20                 	db	32
   590  00796C  3C                 	db	60	;'<'
   591  00796D  62                 	db	98	;'b'
   592  00796E  75                 	db	117	;'u'
   593  00796F  74                 	db	116	;'t'
   594  007970  74                 	db	116	;'t'
   595  007971  6F                 	db	111	;'o'
   596  007972  6E                 	db	110	;'n'
   597  007973  20                 	db	32
   598  007974  6F                 	db	111	;'o'
   599  007975  6E                 	db	110	;'n'
   600  007976  63                 	db	99	;'c'
   601  007977  6C                 	db	108	;'l'
   602  007978  69                 	db	105	;'i'
   603  007979  63                 	db	99	;'c'
   604  00797A  6B                 	db	107	;'k'
   605  00797B  3D                 	db	61	;'='
   606  00797C  27                 	db	39
   607  00797D  73                 	db	115	;'s'
   608  00797E  28                 	db	40
   609  00797F  29                 	db	41
   610  007980  27                 	db	39
   611  007981  3E                 	db	62	;'>'
   612  007982  43                 	db	67	;'C'
   613  007983  6F                 	db	111	;'o'
   614  007984  6E                 	db	110	;'n'
   615  007985  66                 	db	102	;'f'
   616  007986  69                 	db	105	;'i'
   617  007987  72                 	db	114	;'r'
   618  007988  6D                 	db	109	;'m'
   619  007989  61                 	db	97	;'a'
   620  00798A  72                 	db	114	;'r'
   621  00798B  3C                 	db	60	;'<'
   622  00798C  2F                 	db	47
   623  00798D  62                 	db	98	;'b'
   624  00798E  75                 	db	117	;'u'
   625  00798F  74                 	db	116	;'t'
   626  007990  74                 	db	116	;'t'
   627  007991  6F                 	db	111	;'o'
   628  007992  6E                 	db	110	;'n'
   629  007993  3E                 	db	62	;'>'
   630  007994  20                 	db	32
   631  007995  53                 	db	83	;'S'
   632  007996  65                 	db	101	;'e'
   633  007997  72                 	db	114	;'r'
   634  007998  76                 	db	118	;'v'
   635  007999  69                 	db	105	;'i'
   636  00799A  64                 	db	100	;'d'
   637  00799B  6F                 	db	111	;'o'
   638  00799C  72                 	db	114	;'r'
   639  00799D  3A                 	db	58	;':'
   640  00799E  20                 	db	32
   641  00799F  3C                 	db	60	;'<'
   642  0079A0  69                 	db	105	;'i'
   643  0079A1  6E                 	db	110	;'n'
   644  0079A2  70                 	db	112	;'p'
   645  0079A3  75                 	db	117	;'u'
   646  0079A4  74                 	db	116	;'t'
   647  0079A5  20                 	db	32
   648  0079A6  69                 	db	105	;'i'
   649  0079A7  64                 	db	100	;'d'
   650  0079A8  3D                 	db	61	;'='
   651  0079A9  27                 	db	39
   652  0079AA  74                 	db	116	;'t'
   653  0079AB  27                 	db	39
   654  0079AC  20                 	db	32
   655  0079AD  76                 	db	118	;'v'
   656  0079AE  61                 	db	97	;'a'
   657  0079AF  6C                 	db	108	;'l'
   658  0079B0  75                 	db	117	;'u'
   659  0079B1  65                 	db	101	;'e'
   660  0079B2  3D                 	db	61	;'='
   661  0079B3  27                 	db	39
   662  0079B4  25                 	db	37
   663  0079B5  73                 	db	115	;'s'
   664  0079B6  3A                 	db	58	;':'
   665  0079B7  25                 	db	37
   666  0079B8  64                 	db	100	;'d'
   667  0079B9  27                 	db	39
   668  0079BA  3E                 	db	62	;'>'
   669  0079BB  3C                 	db	60	;'<'
   670  0079BC  2F                 	db	47
   671  0079BD  64                 	db	100	;'d'
   672  0079BE  69                 	db	105	;'i'
   673  0079BF  76                 	db	118	;'v'
   674  0079C0  3E                 	db	62	;'>'
   675  0079C1  3C                 	db	60	;'<'
   676  0079C2  2F                 	db	47
   677  0079C3  62                 	db	98	;'b'
   678  0079C4  6F                 	db	111	;'o'
   679  0079C5  64                 	db	100	;'d'
   680  0079C6  79                 	db	121	;'y'
   681  0079C7  3E                 	db	62	;'>'
   682  0079C8  3C                 	db	60	;'<'
   683  0079C9  2F                 	db	47
   684  0079CA  68                 	db	104	;'h'
   685  0079CB  74                 	db	116	;'t'
   686  0079CC  6D                 	db	109	;'m'
   687  0079CD  6C                 	db	108	;'l'
   688  0079CE  3E                 	db	62	;'>'
   689  0079CF  3C                 	db	60	;'<'
   690  0079D0  73                 	db	115	;'s'
   691  0079D1  63                 	db	99	;'c'
   692  0079D2  72                 	db	114	;'r'
   693  0079D3  69                 	db	105	;'i'
   694  0079D4  70                 	db	112	;'p'
   695  0079D5  74                 	db	116	;'t'
   696  0079D6  3E                 	db	62	;'>'
   697  0079D7  66                 	db	102	;'f'
   698  0079D8  75                 	db	117	;'u'
   699  0079D9  6E                 	db	110	;'n'
   700  0079DA  63                 	db	99	;'c'
   701  0079DB  74                 	db	116	;'t'
   702  0079DC  69                 	db	105	;'i'
   703  0079DD  6F                 	db	111	;'o'
   704  0079DE  6E                 	db	110	;'n'
   705  0079DF  20                 	db	32
   706  0079E0  73                 	db	115	;'s'
   707  0079E1  28                 	db	40
   708  0079E2  29                 	db	41
   709  0079E3  7B                 	db	123
   710  0079E4  63                 	db	99	;'c'
   711  0079E5  6F                 	db	111	;'o'
   712  0079E6  6E                 	db	110	;'n'
   713  0079E7  73                 	db	115	;'s'
   714  0079E8  74                 	db	116	;'t'
   715  0079E9  20                 	db	32
   716  0079EA  67                 	db	103	;'g'
   717  0079EB  3D                 	db	61	;'='
   718  0079EC  69                 	db	105	;'i'
   719  0079ED  3D                 	db	61	;'='
   720  0079EE  3E                 	db	62	;'>'
   721  0079EF  64                 	db	100	;'d'
   722  0079F0  6F                 	db	111	;'o'
   723  0079F1  63                 	db	99	;'c'
   724  0079F2  75                 	db	117	;'u'
   725  0079F3  6D                 	db	109	;'m'
   726  0079F4  65                 	db	101	;'e'
   727  0079F5  6E                 	db	110	;'n'
   728  0079F6  74                 	db	116	;'t'
   729  0079F7  2E                 	db	46
   730  0079F8  71                 	db	113	;'q'
   731  0079F9  75                 	db	117	;'u'
   732  0079FA  65                 	db	101	;'e'
   733  0079FB  72                 	db	114	;'r'
   734  0079FC  79                 	db	121	;'y'
   735  0079FD  53                 	db	83	;'S'
   736  0079FE  65                 	db	101	;'e'
   737  0079FF  6C                 	db	108	;'l'
   738  007A00  65                 	db	101	;'e'
   739  007A01  63                 	db	99	;'c'
   740  007A02  74                 	db	116	;'t'
   741  007A03  6F                 	db	111	;'o'
   742  007A04  72                 	db	114	;'r'
   743  007A05  28                 	db	40
   744  007A06  27                 	db	39
   745  007A07  23                 	db	35
   746  007A08  27                 	db	39
   747  007A09  20                 	db	32
   748  007A0A  2B                 	db	43
   749  007A0B  20                 	db	32
   750  007A0C  69                 	db	105	;'i'
   751  007A0D  29                 	db	41
   752  007A0E  2E                 	db	46
   753  007A0F  76                 	db	118	;'v'
   754  007A10  61                 	db	97	;'a'
   755  007A11  6C                 	db	108	;'l'
   756  007A12  75                 	db	117	;'u'
   757  007A13  65                 	db	101	;'e'
   758  007A14  3B                 	db	59	;';'
   759  007A15  6C                 	db	108	;'l'
   760  007A16  65                 	db	101	;'e'
   761  007A17  74                 	db	116	;'t'
   762  007A18  20                 	db	32
   763  007A19  73                 	db	115	;'s'
   764  007A1A  76                 	db	118	;'v'
   765  007A1B  3D                 	db	61	;'='
   766  007A1C  67                 	db	103	;'g'
   767  007A1D  28                 	db	40
   768  007A1E  27                 	db	39
   769  007A1F  74                 	db	116	;'t'
   770  007A20  27                 	db	39
   771  007A21  29                 	db	41
   772  007A22  2E                 	db	46
   773  007A23  73                 	db	115	;'s'
   774  007A24  70                 	db	112	;'p'
   775  007A25  6C                 	db	108	;'l'
   776  007A26  69                 	db	105	;'i'
   777  007A27  74                 	db	116	;'t'
   778  007A28  28                 	db	40
   779  007A29  27                 	db	39
   780  007A2A  3A                 	db	58	;':'
   781  007A2B  27                 	db	39
   782  007A2C  29                 	db	41
   783  007A2D  3B                 	db	59	;';'
   784  007A2E  66                 	db	102	;'f'
   785  007A2F  65                 	db	101	;'e'
   786  007A30  74                 	db	116	;'t'
   787  007A31  63                 	db	99	;'c'
   788  007A32  68                 	db	104	;'h'
   789  007A33  28                 	db	40
   790  007A34  27                 	db	39
   791  007A35  2F                 	db	47
   792  007A36  27                 	db	39
   793  007A37  2C                 	db	44
   794  007A38  7B                 	db	123
   795  007A39  6D                 	db	109	;'m'
   796  007A3A  65                 	db	101	;'e'
   797  007A3B  74                 	db	116	;'t'
   798  007A3C  68                 	db	104	;'h'
   799  007A3D  6F                 	db	111	;'o'
   800  007A3E  64                 	db	100	;'d'
   801  007A3F  3A                 	db	58	;':'
   802  007A40  27                 	db	39
   803  007A41  70                 	db	112	;'p'
   804  007A42  6F                 	db	111	;'o'
   805  007A43  73                 	db	115	;'s'
   806  007A44  74                 	db	116	;'t'
   807  007A45  27                 	db	39
   808  007A46  2C                 	db	44
   809  007A47  62                 	db	98	;'b'
   810  007A48  6F                 	db	111	;'o'
   811  007A49  64                 	db	100	;'d'
   812  007A4A  79                 	db	121	;'y'
   813  007A4B  3A                 	db	58	;':'
   814  007A4C  4A                 	db	74	;'J'
   815  007A4D  53                 	db	83	;'S'
   816  007A4E  4F                 	db	79	;'O'
   817  007A4F  4E                 	db	78	;'N'
   818  007A50  2E                 	db	46
   819  007A51  73                 	db	115	;'s'
   820  007A52  74                 	db	116	;'t'
   821  007A53  72                 	db	114	;'r'
   822  007A54  69                 	db	105	;'i'
   823  007A55  6E                 	db	110	;'n'
   824  007A56  67                 	db	103	;'g'
   825  007A57  69                 	db	105	;'i'
   826  007A58  66                 	db	102	;'f'
   827  007A59  79                 	db	121	;'y'
   828  007A5A  28                 	db	40
   829  007A5B  7B                 	db	123
   830  007A5C  27                 	db	39
   831  007A5D  24                 	db	36
   832  007A5E  23                 	db	35
   833  007A5F  27                 	db	39
   834  007A60  3A                 	db	58	;':'
   835  007A61  27                 	db	39
   836  007A62  27                 	db	39
   837  007A63  2C                 	db	44
   838  007A64  73                 	db	115	;'s'
   839  007A65  73                 	db	115	;'s'
   840  007A66  3A                 	db	58	;':'
   841  007A67  67                 	db	103	;'g'
   842  007A68  28                 	db	40
   843  007A69  27                 	db	39
   844  007A6A  73                 	db	115	;'s'
   845  007A6B  27                 	db	39
   846  007A6C  29                 	db	41
   847  007A6D  2C                 	db	44
   848  007A6E  70                 	db	112	;'p'
   849  007A6F  77                 	db	119	;'w'
   850  007A70  3A                 	db	58	;':'
   851  007A71  67                 	db	103	;'g'
   852  007A72  28                 	db	40
   853  007A73  27                 	db	39
   854  007A74  70                 	db	112	;'p'
   855  007A75  27                 	db	39
   856  007A76  29                 	db	41
   857  007A77  2C                 	db	44
   858  007A78  73                 	db	115	;'s'
   859  007A79  76                 	db	118	;'v'
   860  007A7A  3A                 	db	58	;':'
   861  007A7B  73                 	db	115	;'s'
   862  007A7C  76                 	db	118	;'v'
   863  007A7D  5B                 	db	91	;'['
   864  007A7E  30                 	db	48	;'0'
   865  007A7F  5D                 	db	93	;']'
   866  007A80  2C                 	db	44
   867  007A81  70                 	db	112	;'p'
   868  007A82  74                 	db	116	;'t'
   869  007A83  3A                 	db	58	;':'
   870  007A84  4E                 	db	78	;'N'
   871  007A85  75                 	db	117	;'u'
   872  007A86  6D                 	db	109	;'m'
   873  007A87  62                 	db	98	;'b'
   874  007A88  65                 	db	101	;'e'
   875  007A89  72                 	db	114	;'r'
   876  007A8A  28                 	db	40
   877  007A8B  73                 	db	115	;'s'
   878  007A8C  76                 	db	118	;'v'
   879  007A8D  5B                 	db	91	;'['
   880  007A8E  31                 	db	49	;'1'
   881  007A8F  5D                 	db	93	;']'
   882  007A90  29                 	db	41
   883  007A91  7C                 	db	124
   884  007A92  7C                 	db	124
   885  007A93  30                 	db	48	;'0'
   886  007A94  2C                 	db	44
   887  007A95  27                 	db	39
   888  007A96  27                 	db	39
   889  007A97  3A                 	db	58	;':'
   890  007A98  27                 	db	39
   891  007A99  23                 	db	35
   892  007A9A  24                 	db	36
   893  007A9B  27                 	db	39
   894  007A9C  7D                 	db	125
   895  007A9D  29                 	db	41
   896  007A9E  7D                 	db	125
   897  007A9F  29                 	db	41
   898  007AA0  7D                 	db	125
   899  007AA1  3C                 	db	60	;'<'
   900  007AA2  2F                 	db	47
   901  007AA3  73                 	db	115	;'s'
   902  007AA4  63                 	db	99	;'c'
   903  007AA5  72                 	db	114	;'r'
   904  007AA6  69                 	db	105	;'i'
   905  007AA7  70                 	db	112	;'p'
   906  007AA8  74                 	db	116	;'t'
   907  007AA9  3E                 	db	62	;'>'
   908  007AAA  0D                 	db	13
   909  007AAB  0A                 	db	10
   910  007AAC  0D                 	db	13
   911  007AAD  0A                 	db	10
   912  007AAE  5C                 	db	92	;'\'
   913  007AAF  30                 	db	48	;'0'
   914  007AB0  00                 	db	0
   915  007AB1                     STR_71:
   916  007AB1  47                 	db	71	;'G'
   917  007AB2  45                 	db	69	;'E'
   918  007AB3  54                 	db	84	;'T'
   919  007AB4  20                 	db	32
   920  007AB5  2F                 	db	47
   921  007AB6  64                 	db	100	;'d'
   922  007AB7  65                 	db	101	;'e'
   923  007AB8  76                 	db	118	;'v'
   924  007AB9  69                 	db	105	;'i'
   925  007ABA  63                 	db	99	;'c'
   926  007ABB  65                 	db	101	;'e'
   927  007ABC  2F                 	db	47
   928  007ABD  69                 	db	105	;'i'
   929  007ABE  6E                 	db	110	;'n'
   930  007ABF  74                 	db	116	;'t'
   931  007AC0  65                 	db	101	;'e'
   932  007AC1  67                 	db	103	;'g'
   933  007AC2  72                 	db	114	;'r'
   934  007AC3  61                 	db	97	;'a'
   935  007AC4  74                 	db	116	;'t'
   936  007AC5  69                 	db	105	;'i'
   937  007AC6  6F                 	db	111	;'o'
   938  007AC7  6E                 	db	110	;'n'
   939  007AC8  3F                 	db	63	;'?'
   940  007AC9  69                 	db	105	;'i'
   941  007ACA  3D                 	db	61	;'='
   942  007ACB  25                 	db	37
   943  007ACC  64                 	db	100	;'d'
   944  007ACD  7C                 	db	124
   945  007ACE  25                 	db	37
   946  007ACF  64                 	db	100	;'d'
   947  007AD0  7C                 	db	124
   948  007AD1  25                 	db	37
   949  007AD2  64                 	db	100	;'d'
   950  007AD3  7C                 	db	124
   951  007AD4  25                 	db	37
   952  007AD5  64                 	db	100	;'d'
   953  007AD6  7C                 	db	124
   954  007AD7  25                 	db	37
   955  007AD8  64                 	db	100	;'d'
   956  007AD9  7C                 	db	124
   957  007ADA  25                 	db	37
   958  007ADB  64                 	db	100	;'d'
   959  007ADC  7C                 	db	124
   960  007ADD  25                 	db	37
   961  007ADE  64                 	db	100	;'d'
   962  007ADF  7C                 	db	124
   963  007AE0  25                 	db	37
   964  007AE1  64                 	db	100	;'d'
   965  007AE2  7C                 	db	124
   966  007AE3  25                 	db	37
   967  007AE4  64                 	db	100	;'d'
   968  007AE5  7C                 	db	124
   969  007AE6  25                 	db	37
   970  007AE7  64                 	db	100	;'d'
   971  007AE8  7C                 	db	124
   972  007AE9  25                 	db	37
   973  007AEA  64                 	db	100	;'d'
   974  007AEB  7C                 	db	124
   975  007AEC  25                 	db	37
   976  007AED  73                 	db	115	;'s'
   977  007AEE  7C                 	db	124
   978  007AEF  25                 	db	37
   979  007AF0  64                 	db	100	;'d'
   980  007AF1  7C                 	db	124
   981  007AF2  25                 	db	37
   982  007AF3  73                 	db	115	;'s'
   983  007AF4  7C                 	db	124
   984  007AF5  25                 	db	37
   985  007AF6  64                 	db	100	;'d'
   986  007AF7  26                 	db	38
   987  007AF8  70                 	db	112	;'p'
   988  007AF9  3D                 	db	61	;'='
   989  007AFA  25                 	db	37
   990  007AFB  64                 	db	100	;'d'
   991  007AFC  7C                 	db	124
   992  007AFD  25                 	db	37
   993  007AFE  64                 	db	100	;'d'
   994  007AFF  7C                 	db	124
   995  007B00  25                 	db	37
   996  007B01  64                 	db	100	;'d'
   997  007B02  7C                 	db	124
   998  007B03  25                 	db	37
   999  007B04  64                 	db	100	;'d'
  1000  007B05  7C                 	db	124
  1001  007B06  25                 	db	37
  1002  007B07  64                 	db	100	;'d'
  1003  007B08  7C                 	db	124
  1004  007B09  25                 	db	37
  1005  007B0A  64                 	db	100	;'d'
  1006  007B0B  7C                 	db	124
  1007  007B0C  25                 	db	37
  1008  007B0D  64                 	db	100	;'d'
  1009  007B0E  7C                 	db	124
  1010  007B0F  25                 	db	37
  1011  007B10  64                 	db	100	;'d'
  1012  007B11  7C                 	db	124
  1013  007B12  25                 	db	37
  1014  007B13  64                 	db	100	;'d'
  1015  007B14  7C                 	db	124
  1016  007B15  25                 	db	37
  1017  007B16  64                 	db	100	;'d'
  1018  007B17  7C                 	db	124
  1019  007B18  25                 	db	37
  1020  007B19  64                 	db	100	;'d'
  1021  007B1A  7C                 	db	124
  1022  007B1B  25                 	db	37
  1023  007B1C  64                 	db	100	;'d'
  1024  007B1D  7C                 	db	124
  1025  007B1E  25                 	db	37
  1026  007B1F  64                 	db	100	;'d'
  1027  007B20  7C                 	db	124
  1028  007B21  25                 	db	37
  1029  007B22  64                 	db	100	;'d'
  1030  007B23  26                 	db	38
  1031  007B24  6B                 	db	107	;'k'
  1032  007B25  3D                 	db	61	;'='
  1033  007B26  31                 	db	49	;'1'
  1034  007B27  7A                 	db	122	;'z'
  1035  007B28  34                 	db	52	;'4'
  1036  007B29  64                 	db	100	;'d'
  1037  007B2A  66                 	db	102	;'f'
  1038  007B2B  36                 	db	54	;'6'
  1039  007B2C  38                 	db	56	;'8'
  1040  007B2D  69                 	db	105	;'i'
  1041  007B2E  77                 	db	119	;'w'
  1042  007B2F  31                 	db	49	;'1'
  1043  007B30  66                 	db	102	;'f'
  1044  007B31  70                 	db	112	;'p'
  1045  007B32  35                 	db	53	;'5'
  1046  007B33  20                 	db	32
  1047  007B34  48                 	db	72	;'H'
  1048  007B35  54                 	db	84	;'T'
  1049  007B36  54                 	db	84	;'T'
  1050  007B37  50                 	db	80	;'P'
  1051  007B38  2F                 	db	47
  1052  007B39  31                 	db	49	;'1'
  1053  007B3A  2E                 	db	46
  1054  007B3B  31                 	db	49	;'1'
  1055  007B3C  0D                 	db	13
  1056  007B3D  0A                 	db	10
  1057  007B3E  48                 	db	72	;'H'
  1058  007B3F  6F                 	db	111	;'o'
  1059  007B40  73                 	db	115	;'s'
  1060  007B41  74                 	db	116	;'t'
  1061  007B42  3A                 	db	58	;':'
  1062  007B43  20                 	db	32
  1063  007B44  31                 	db	49	;'1'
  1064  007B45  38                 	db	56	;'8'
  1065  007B46  2E                 	db	46
  1066  007B47  32                 	db	50	;'2'
  1067  007B48  32                 	db	50	;'2'
  1068  007B49  38                 	db	56	;'8'
  1069  007B4A  2E                 	db	46
  1070  007B4B  31                 	db	49	;'1'
  1071  007B4C  35                 	db	53	;'5'
  1072  007B4D  34                 	db	52	;'4'
  1073  007B4E  2E                 	db	46
  1074  007B4F  32                 	db	50	;'2'
  1075  007B50  34                 	db	52	;'4'
  1076  007B51  38                 	db	56	;'8'
  1077  007B52  0D                 	db	13
  1078  007B53  0A                 	db	10
  1079  007B54  0D                 	db	13
  1080  007B55  0A                 	db	10
  1081  007B56  5C                 	db	92	;'\'
  1082  007B57  30                 	db	48	;'0'
  1083  007B58  00                 	db	0
  1084  007B59                     STR_35:
  1085  007B59  48                 	db	72	;'H'
  1086  007B5A  54                 	db	84	;'T'
  1087  007B5B  54                 	db	84	;'T'
  1088  007B5C  50                 	db	80	;'P'
  1089  007B5D  20                 	db	32
  1090  007B5E  31                 	db	49	;'1'
  1091  007B5F  2E                 	db	46
  1092  007B60  31                 	db	49	;'1'
  1093  007B61  2F                 	db	47
  1094  007B62  32                 	db	50	;'2'
  1095  007B63  30                 	db	48	;'0'
  1096  007B64  30                 	db	48	;'0'
  1097  007B65  20                 	db	32
  1098  007B66  4F                 	db	79	;'O'
  1099  007B67  4B                 	db	75	;'K'
  1100  007B68  0D                 	db	13
  1101  007B69  0A                 	db	10
  1102  007B6A  43                 	db	67	;'C'
  1103  007B6B  6F                 	db	111	;'o'
  1104  007B6C  6E                 	db	110	;'n'
  1105  007B6D  74                 	db	116	;'t'
  1106  007B6E  65                 	db	101	;'e'
  1107  007B6F  6E                 	db	110	;'n'
  1108  007B70  74                 	db	116	;'t'
  1109  007B71  2D                 	db	45
  1110  007B72  74                 	db	116	;'t'
  1111  007B73  79                 	db	121	;'y'
  1112  007B74  70                 	db	112	;'p'
  1113  007B75  65                 	db	101	;'e'
  1114  007B76  3A                 	db	58	;':'
  1115  007B77  20                 	db	32
  1116  007B78  74                 	db	116	;'t'
  1117  007B79  65                 	db	101	;'e'
  1118  007B7A  78                 	db	120	;'x'
  1119  007B7B  74                 	db	116	;'t'
  1120  007B7C  2F                 	db	47
  1121  007B7D  68                 	db	104	;'h'
  1122  007B7E  74                 	db	116	;'t'
  1123  007B7F  6D                 	db	109	;'m'
  1124  007B80  6C                 	db	108	;'l'
  1125  007B81  0D                 	db	13
  1126  007B82  0A                 	db	10
  1127  007B83  0D                 	db	13
  1128  007B84  0A                 	db	10
  1129  007B85  00                 	db	0
  1130  007B86                     STR_17:
  1131  007B86  41                 	db	65	;'A'
  1132  007B87  54                 	db	84	;'T'
  1133  007B88  2B                 	db	43
  1134  007B89  43                 	db	67	;'C'
  1135  007B8A  57                 	db	87	;'W'
  1136  007B8B  53                 	db	83	;'S'
  1137  007B8C  41                 	db	65	;'A'
  1138  007B8D  50                 	db	80	;'P'
  1139  007B8E  3D                 	db	61	;'='
  1140  007B8F  22                 	db	34
  1141  007B90  43                 	db	67	;'C'
  1142  007B91  4F                 	db	79	;'O'
  1143  007B92  4E                 	db	78	;'N'
  1144  007B93  54                 	db	84	;'T'
  1145  007B94  52                 	db	82	;'R'
  1146  007B95  4F                 	db	79	;'O'
  1147  007B96  4C                 	db	76	;'L'
  1148  007B97  41                 	db	65	;'A'
  1149  007B98  44                 	db	68	;'D'
  1150  007B99  4F                 	db	79	;'O'
  1151  007B9A  52                 	db	82	;'R'
  1152  007B9B  22                 	db	34
  1153  007B9C  2C                 	db	44
  1154  007B9D  22                 	db	34
  1155  007B9E  22                 	db	34
  1156  007B9F  2C                 	db	44
  1157  007BA0  31                 	db	49	;'1'
  1158  007BA1  31                 	db	49	;'1'
  1159  007BA2  2C                 	db	44
  1160  007BA3  30                 	db	48	;'0'
  1161  007BA4  2C                 	db	44
  1162  007BA5  34                 	db	52	;'4'
  1163  007BA6  0D                 	db	13
  1164  007BA7  0A                 	db	10
  1165  007BA8  00                 	db	0
  1166  007BA9                     STR_63:
  1167  007BA9  41                 	db	65	;'A'
  1168  007BAA  54                 	db	84	;'T'
  1169  007BAB  2B                 	db	43
  1170  007BAC  43                 	db	67	;'C'
  1171  007BAD  49                 	db	73	;'I'
  1172  007BAE  50                 	db	80	;'P'
  1173  007BAF  53                 	db	83	;'S'
  1174  007BB0  54                 	db	84	;'T'
  1175  007BB1  41                 	db	65	;'A'
  1176  007BB2  52                 	db	82	;'R'
  1177  007BB3  54                 	db	84	;'T'
  1178  007BB4  3D                 	db	61	;'='
  1179  007BB5  22                 	db	34
  1180  007BB6  54                 	db	84	;'T'
  1181  007BB7  43                 	db	67	;'C'
  1182  007BB8  50                 	db	80	;'P'
  1183  007BB9  22                 	db	34
  1184  007BBA  2C                 	db	44
  1185  007BBB  22                 	db	34
  1186  007BBC  25                 	db	37
  1187  007BBD  73                 	db	115	;'s'
  1188  007BBE  22                 	db	34
  1189  007BBF  2C                 	db	44
  1190  007BC0  25                 	db	37
  1191  007BC1  64                 	db	100	;'d'
  1192  007BC2  0D                 	db	13
  1193  007BC3  0A                 	db	10
  1194  007BC4  00                 	db	0
  1195  007BC5                     STR_20:
  1196  007BC5  41                 	db	65	;'A'
  1197  007BC6  54                 	db	84	;'T'
  1198  007BC7  2B                 	db	43
  1199  007BC8  43                 	db	67	;'C'
  1200  007BC9  49                 	db	73	;'I'
  1201  007BCA  50                 	db	80	;'P'
  1202  007BCB  41                 	db	65	;'A'
  1203  007BCC  50                 	db	80	;'P'
  1204  007BCD  3D                 	db	61	;'='
  1205  007BCE  22                 	db	34
  1206  007BCF  31                 	db	49	;'1'
  1207  007BD0  30                 	db	48	;'0'
  1208  007BD1  2E                 	db	46
  1209  007BD2  31                 	db	49	;'1'
  1210  007BD3  2E                 	db	46
  1211  007BD4  31                 	db	49	;'1'
  1212  007BD5  2E                 	db	46
  1213  007BD6  31                 	db	49	;'1'
  1214  007BD7  22                 	db	34
  1215  007BD8  0D                 	db	13
  1216  007BD9  0A                 	db	10
  1217  007BDA  00                 	db	0
  1218  007BDB                     STR_91:
  1219  007BDB  55                 	db	85	;'U'
  1220  007BDC  4D                 	db	77	;'M'
  1221  007BDD  49                 	db	73	;'I'
  1222  007BDE  44                 	db	68	;'D'
  1223  007BDF  20                 	db	32
  1224  007BE0  20                 	db	32
  1225  007BE1  7C                 	db	124
  1226  007BE2  20                 	db	32
  1227  007BE3  20                 	db	32
  1228  007BE4  25                 	db	37
  1229  007BE5  33                 	db	51	;'3'
  1230  007BE6  64                 	db	100	;'d'
  1231  007BE7  20                 	db	32
  1232  007BE8  7C                 	db	124
  1233  007BE9  20                 	db	32
  1234  007BEA  25                 	db	37
  1235  007BEB  33                 	db	51	;'3'
  1236  007BEC  64                 	db	100	;'d'
  1237  007BED  20                 	db	32
  1238  007BEE  25                 	db	37
  1239  007BEF  63                 	db	99	;'c'
  1240  007BF0  00                 	db	0
  1241  007BF1                     STR_57:
  1242  007BF1  41                 	db	65	;'A'
  1243  007BF2  54                 	db	84	;'T'
  1244  007BF3  2B                 	db	43
  1245  007BF4  43                 	db	67	;'C'
  1246  007BF5  57                 	db	87	;'W'
  1247  007BF6  4A                 	db	74	;'J'
  1248  007BF7  41                 	db	65	;'A'
  1249  007BF8  50                 	db	80	;'P'
  1250  007BF9  3D                 	db	61	;'='
  1251  007BFA  22                 	db	34
  1252  007BFB  25                 	db	37
  1253  007BFC  73                 	db	115	;'s'
  1254  007BFD  22                 	db	34
  1255  007BFE  2C                 	db	44
  1256  007BFF  22                 	db	34
  1257  007C00  25                 	db	37
  1258  007C01  73                 	db	115	;'s'
  1259  007C02  22                 	db	34
  1260  007C03  0D                 	db	13
  1261  007C04  0A                 	db	10
  1262  007C05  00                 	db	0
  1263  007C06                     STR_32:
  1264  007C06  41                 	db	65	;'A'
  1265  007C07  54                 	db	84	;'T'
  1266  007C08  2B                 	db	43
  1267  007C09  43                 	db	67	;'C'
  1268  007C0A  49                 	db	73	;'I'
  1269  007C0B  50                 	db	80	;'P'
  1270  007C0C  53                 	db	83	;'S'
  1271  007C0D  45                 	db	69	;'E'
  1272  007C0E  4E                 	db	78	;'N'
  1273  007C0F  44                 	db	68	;'D'
  1274  007C10  45                 	db	69	;'E'
  1275  007C11  58                 	db	88	;'X'
  1276  007C12  3D                 	db	61	;'='
  1277  007C13  30                 	db	48	;'0'
  1278  007C14  2C                 	db	44
  1279  007C15  38                 	db	56	;'8'
  1280  007C16  30                 	db	48	;'0'
  1281  007C17  30                 	db	48	;'0'
  1282  007C18  0D                 	db	13
  1283  007C19  0A                 	db	10
  1284  007C1A  00                 	db	0
  1285  007C1B                     STR_28:
  1286  007C1B  63                 	db	99	;'c'
  1287  007C1C  6F                 	db	111	;'o'
  1288  007C1D  6E                 	db	110	;'n'
  1289  007C1E  66                 	db	102	;'f'
  1290  007C1F  69                 	db	105	;'i'
  1291  007C20  67                 	db	103	;'g'
  1292  007C21  75                 	db	117	;'u'
  1293  007C22  72                 	db	114	;'r'
  1294  007C23  61                 	db	97	;'a'
  1295  007C24  72                 	db	114	;'r'
  1296  007C25  20                 	db	32
  1297  007C26  6F                 	db	111	;'o'
  1298  007C27  20                 	db	32
  1299  007C28  57                 	db	87	;'W'
  1300  007C29  49                 	db	73	;'I'
  1301  007C2A  46                 	db	70	;'F'
  1302  007C2B  49                 	db	73	;'I'
  1303  007C2C  2E                 	db	46
  1304  007C2D  2E                 	db	46
  1305  007C2E  2E                 	db	46
  1306  007C2F  00                 	db	0
  1307  007C30                     STR_90:
  1308  007C30  54                 	db	84	;'T'
  1309  007C31  45                 	db	69	;'E'
  1310  007C32  4D                 	db	77	;'M'
  1311  007C33  50                 	db	80	;'P'
  1312  007C34  20                 	db	32
  1313  007C35  20                 	db	32
  1314  007C36  7C                 	db	124
  1315  007C37  20                 	db	32
  1316  007C38  20                 	db	32
  1317  007C39  25                 	db	37
  1318  007C3A  33                 	db	51	;'3'
  1319  007C3B  64                 	db	100	;'d'
  1320  007C3C  20                 	db	32
  1321  007C3D  7C                 	db	124
  1322  007C3E  20                 	db	32
  1323  007C3F  25                 	db	37
  1324  007C40  33                 	db	51	;'3'
  1325  007C41  64                 	db	100	;'d'
  1326  007C42  20                 	db	32
  1327  007C43  46                 	db	70	;'F'
  1328  007C44  00                 	db	0
  1329  007C45                     STR_23:
  1330  007C45  41                 	db	65	;'A'
  1331  007C46  54                 	db	84	;'T'
  1332  007C47  2B                 	db	43
  1333  007C48  43                 	db	67	;'C'
  1334  007C49  49                 	db	73	;'I'
  1335  007C4A  50                 	db	80	;'P'
  1336  007C4B  53                 	db	83	;'S'
  1337  007C4C  45                 	db	69	;'E'
  1338  007C4D  52                 	db	82	;'R'
  1339  007C4E  56                 	db	86	;'V'
  1340  007C4F  45                 	db	69	;'E'
  1341  007C50  52                 	db	82	;'R'
  1342  007C51  3D                 	db	61	;'='
  1343  007C52  31                 	db	49	;'1'
  1344  007C53  2C                 	db	44
  1345  007C54  38                 	db	56	;'8'
  1346  007C55  30                 	db	48	;'0'
  1347  007C56  0D                 	db	13
  1348  007C57  0A                 	db	10
  1349  007C58  00                 	db	0
  1350  007C59                     STR_93:
  1351  007C59  20                 	db	32
  1352  007C5A  2A                 	db	42
  1353  007C5B  46                 	db	70	;'F'
  1354  007C5C  41                 	db	65	;'A'
  1355  007C5D  4C                 	db	76	;'L'
  1356  007C5E  54                 	db	84	;'T'
  1357  007C5F  41                 	db	65	;'A'
  1358  007C60  20                 	db	32
  1359  007C61  44                 	db	68	;'D'
  1360  007C62  45                 	db	69	;'E'
  1361  007C63  20                 	db	32
  1362  007C64  45                 	db	69	;'E'
  1363  007C65  4E                 	db	78	;'N'
  1364  007C66  45                 	db	69	;'E'
  1365  007C67  52                 	db	82	;'R'
  1366  007C68  47                 	db	71	;'G'
  1367  007C69  49                 	db	73	;'I'
  1368  007C6A  41                 	db	65	;'A'
  1369  007C6B  2A                 	db	42
  1370  007C6C  00                 	db	0
  1371  007C6D                     STR_122:
  1372  007C6D  43                 	db	67	;'C'
  1373  007C6E  4F                 	db	79	;'O'
  1374  007C6F  4E                 	db	78	;'N'
  1375  007C70  46                 	db	70	;'F'
  1376  007C71  49                 	db	73	;'I'
  1377  007C72  47                 	db	71	;'G'
  1378  007C73  55                 	db	85	;'U'
  1379  007C74  52                 	db	82	;'R'
  1380  007C75  41                 	db	65	;'A'
  1381  007C76  52                 	db	82	;'R'
  1382  007C77  20                 	db	32
  1383  007C78  20                 	db	32
  1384  007C79  20                 	db	32
  1385  007C7A  20                 	db	32
  1386  007C7B  20                 	db	32
  1387  007C7C  20                 	db	32
  1388  007C7D  20                 	db	32
  1389  007C7E  3E                 	db	62	;'>'
  1390  007C7F  3E                 	db	62	;'>'
  1391  007C80  00                 	db	0
  1392  007C81                     STR_108:
  1393  007C81  43                 	db	67	;'C'
  1394  007C82  4F                 	db	79	;'O'
  1395  007C83  4E                 	db	78	;'N'
  1396  007C84  46                 	db	70	;'F'
  1397  007C85  49                 	db	73	;'I'
  1398  007C86  47                 	db	71	;'G'
  1399  007C87  20                 	db	32
  1400  007C88  57                 	db	87	;'W'
  1401  007C89  49                 	db	73	;'I'
  1402  007C8A  46                 	db	70	;'F'
  1403  007C8B  49                 	db	73	;'I'
  1404  007C8C  20                 	db	32
  1405  007C8D  20                 	db	32
  1406  007C8E  20                 	db	32
  1407  007C8F  20                 	db	32
  1408  007C90  20                 	db	32
  1409  007C91  20                 	db	32
  1410  007C92  3E                 	db	62	;'>'
  1411  007C93  3E                 	db	62	;'>'
  1412  007C94  00                 	db	0
  1413  007C95                     STR_107:
  1414  007C95  54                 	db	84	;'T'
  1415  007C96  45                 	db	69	;'E'
  1416  007C97  4D                 	db	77	;'M'
  1417  007C98  50                 	db	80	;'P'
  1418  007C99  4F                 	db	79	;'O'
  1419  007C9A  20                 	db	32
  1420  007C9B  46                 	db	70	;'F'
  1421  007C9C  49                 	db	73	;'I'
  1422  007C9D  4D                 	db	77	;'M'
  1423  007C9E  20                 	db	32
  1424  007C9F  46                 	db	70	;'F'
  1425  007CA0  41                 	db	65	;'A'
  1426  007CA1  53                 	db	83	;'S'
  1427  007CA2  45                 	db	69	;'E'
  1428  007CA3  20                 	db	32
  1429  007CA4  20                 	db	32
  1430  007CA5  20                 	db	32
  1431  007CA6  3E                 	db	62	;'>'
  1432  007CA7  3E                 	db	62	;'>'
  1433  007CA8  00                 	db	0
  1434  007CA9                     STR_109:
  1435  007CA9  43                 	db	67	;'C'
  1436  007CAA  4F                 	db	79	;'O'
  1437  007CAB  4E                 	db	78	;'N'
  1438  007CAC  46                 	db	70	;'F'
  1439  007CAD  49                 	db	73	;'I'
  1440  007CAE  47                 	db	71	;'G'
  1441  007CAF  20                 	db	32
  1442  007CB0  41                 	db	65	;'A'
  1443  007CB1  56                 	db	86	;'V'
  1444  007CB2  41                 	db	65	;'A'
  1445  007CB3  4E                 	db	78	;'N'
  1446  007CB4  43                 	db	67	;'C'
  1447  007CB5  41                 	db	65	;'A'
  1448  007CB6  44                 	db	68	;'D'
  1449  007CB7  41                 	db	65	;'A'
  1450  007CB8  53                 	db	83	;'S'
  1451  007CB9  20                 	db	32
  1452  007CBA  3E                 	db	62	;'>'
  1453  007CBB  3E                 	db	62	;'>'
  1454  007CBC  00                 	db	0
  1455  007CBD                     STR_84:
  1456  007CBD  20                 	db	32
  1457  007CBE  54                 	db	84	;'T'
  1458  007CBF  45                 	db	69	;'E'
  1459  007CC0  43                 	db	67	;'C'
  1460  007CC1  48                 	db	72	;'H'
  1461  007CC2  4E                 	db	78	;'N'
  1462  007CC3  4F                 	db	79	;'O'
  1463  007CC4  57                 	db	87	;'W'
  1464  007CC5  20                 	db	32
  1465  007CC6  54                 	db	84	;'T'
  1466  007CC7  65                 	db	101	;'e'
  1467  007CC8  63                 	db	99	;'c'
  1468  007CC9  6E                 	db	110	;'n'
  1469  007CCA  6F                 	db	111	;'o'
  1470  007CCB  6C                 	db	108	;'l'
  1471  007CCC  6F                 	db	111	;'o'
  1472  007CCD  67                 	db	103	;'g'
  1473  007CCE  69                 	db	105	;'i'
  1474  007CCF  61                 	db	97	;'a'
  1475  007CD0  00                 	db	0
  1476  007CD1                     STR_26:
  1477  007CD1  43                 	db	67	;'C'
  1478  007CD2  6F                 	db	111	;'o'
  1479  007CD3  6E                 	db	110	;'n'
  1480  007CD4  65                 	db	101	;'e'
  1481  007CD5  63                 	db	99	;'c'
  1482  007CD6  74                 	db	116	;'t'
  1483  007CD7  65                 	db	101	;'e'
  1484  007CD8  2D                 	db	45
  1485  007CD9  73                 	db	115	;'s'
  1486  007CDA  65                 	db	101	;'e'
  1487  007CDB  20                 	db	32
  1488  007CDC  61                 	db	97	;'a'
  1489  007CDD  20                 	db	32
  1490  007CDE  72                 	db	114	;'r'
  1491  007CDF  65                 	db	101	;'e'
  1492  007CE0  64                 	db	100	;'d'
  1493  007CE1  65                 	db	101	;'e'
  1494  007CE2  20                 	db	32
  1495  007CE3  65                 	db	101	;'e'
  1496  007CE4  00                 	db	0
  1497  007CE5                     STR_66:
  1498  007CE5  41                 	db	65	;'A'
  1499  007CE6  54                 	db	84	;'T'
  1500  007CE7  2B                 	db	43
  1501  007CE8  43                 	db	67	;'C'
  1502  007CE9  49                 	db	73	;'I'
  1503  007CEA  50                 	db	80	;'P'
  1504  007CEB  53                 	db	83	;'S'
  1505  007CEC  45                 	db	69	;'E'
  1506  007CED  4E                 	db	78	;'N'
  1507  007CEE  44                 	db	68	;'D'
  1508  007CEF  45                 	db	69	;'E'
  1509  007CF0  58                 	db	88	;'X'
  1510  007CF1  3D                 	db	61	;'='
  1511  007CF2  32                 	db	50	;'2'
  1512  007CF3  36                 	db	54	;'6'
  1513  007CF4  30                 	db	48	;'0'
  1514  007CF5  0D                 	db	13
  1515  007CF6  0A                 	db	10
  1516  007CF7  00                 	db	0
  1517  007CF8                     STR_125:
  1518  007CF8  53                 	db	83	;'S'
  1519  007CF9  65                 	db	101	;'e'
  1520  007CFA  63                 	db	99	;'c'
  1521  007CFB  2E                 	db	46
  1522  007CFC  20                 	db	32
  1523  007CFD  46                 	db	70	;'F'
  1524  007CFE  6F                 	db	111	;'o'
  1525  007CFF  6C                 	db	108	;'l'
  1526  007D00  68                 	db	104	;'h'
  1527  007D01  61                 	db	97	;'a'
  1528  007D02  20                 	db	32
  1529  007D03  3A                 	db	58	;':'
  1530  007D04  20                 	db	32
  1531  007D05  25                 	db	37
  1532  007D06  64                 	db	100	;'d'
  1533  007D07  20                 	db	32
  1534  007D08  68                 	db	104	;'h'
  1535  007D09  72                 	db	114	;'r'
  1536  007D0A  00                 	db	0
  1537  007D0B                     STR_123:
  1538  007D0B  41                 	db	65	;'A'
  1539  007D0C  6D                 	db	109	;'m'
  1540  007D0D  61                 	db	97	;'a'
  1541  007D0E  72                 	db	114	;'r'
  1542  007D0F  65                 	db	101	;'e'
  1543  007D10  6C                 	db	108	;'l'
  1544  007D11  61                 	db	97	;'a'
  1545  007D12  63                 	db	99	;'c'
  1546  007D13  61                 	db	97	;'a'
  1547  007D14  6F                 	db	111	;'o'
  1548  007D15  20                 	db	32
  1549  007D16  3A                 	db	58	;':'
  1550  007D17  20                 	db	32
  1551  007D18  25                 	db	37
  1552  007D19  64                 	db	100	;'d'
  1553  007D1A  20                 	db	32
  1554  007D1B  68                 	db	104	;'h'
  1555  007D1C  72                 	db	114	;'r'
  1556  007D1D  00                 	db	0
  1557  007D1E                     STR_124:
  1558  007D1E  4D                 	db	77	;'M'
  1559  007D1F  75                 	db	117	;'u'
  1560  007D20  72                 	db	114	;'r'
  1561  007D21  63                 	db	99	;'c'
  1562  007D22  68                 	db	104	;'h'
  1563  007D23  61                 	db	97	;'a'
  1564  007D24  6D                 	db	109	;'m'
  1565  007D25  65                 	db	101	;'e'
  1566  007D26  6E                 	db	110	;'n'
  1567  007D27  74                 	db	116	;'t'
  1568  007D28  6F                 	db	111	;'o'
  1569  007D29  3A                 	db	58	;':'
  1570  007D2A  20                 	db	32
  1571  007D2B  25                 	db	37
  1572  007D2C  64                 	db	100	;'d'
  1573  007D2D  20                 	db	32
  1574  007D2E  68                 	db	104	;'h'
  1575  007D2F  72                 	db	114	;'r'
  1576  007D30  00                 	db	0
  1577  007D31                     STR_48:
  1578  007D31  4F                 	db	79	;'O'
  1579  007D32  4B                 	db	75	;'K'
  1580  007D33  20                 	db	32
  1581  007D34  72                 	db	114	;'r'
  1582  007D35  65                 	db	101	;'e'
  1583  007D36  69                 	db	105	;'i'
  1584  007D37  6E                 	db	110	;'n'
  1585  007D38  69                 	db	105	;'i'
  1586  007D39  63                 	db	99	;'c'
  1587  007D3A  69                 	db	105	;'i'
  1588  007D3B  61                 	db	97	;'a'
  1589  007D3C  6E                 	db	110	;'n'
  1590  007D3D  64                 	db	100	;'d'
  1591  007D3E  6F                 	db	111	;'o'
  1592  007D3F  2E                 	db	46
  1593  007D40  2E                 	db	46
  1594  007D41  2E                 	db	46
  1595  007D42  00                 	db	0
  1596  007D43                     STR_94:
  1597  007D43  54                 	db	84	;'T'
  1598  007D44  45                 	db	69	;'E'
  1599  007D45  4D                 	db	77	;'M'
  1600  007D46  50                 	db	80	;'P'
  1601  007D47  45                 	db	69	;'E'
  1602  007D48  52                 	db	82	;'R'
  1603  007D49  41                 	db	65	;'A'
  1604  007D4A  54                 	db	84	;'T'
  1605  007D4B  55                 	db	85	;'U'
  1606  007D4C  52                 	db	82	;'R'
  1607  007D4D  41                 	db	65	;'A'
  1608  007D4E  3A                 	db	58	;':'
  1609  007D4F  20                 	db	32
  1610  007D50  25                 	db	37
  1611  007D51  64                 	db	100	;'d'
  1612  007D52  20                 	db	32
  1613  007D53  46                 	db	70	;'F'
  1614  007D54  00                 	db	0
  1615  007D55                     STR_114:
  1616  007D55  50                 	db	80	;'P'
  1617  007D56  39                 	db	57	;'9'
  1618  007D57  20                 	db	32
  1619  007D58  3A                 	db	58	;':'
  1620  007D59  25                 	db	37
  1621  007D5A  34                 	db	52	;'4'
  1622  007D5B  64                 	db	100	;'d'
  1623  007D5C  20                 	db	32
  1624  007D5D  7C                 	db	124
  1625  007D5E  20                 	db	32
  1626  007D5F  50                 	db	80	;'P'
  1627  007D60  31                 	db	49	;'1'
  1628  007D61  33                 	db	51	;'3'
  1629  007D62  3A                 	db	58	;':'
  1630  007D63  25                 	db	37
  1631  007D64  34                 	db	52	;'4'
  1632  007D65  64                 	db	100	;'d'
  1633  007D66  00                 	db	0
  1634  007D67                     STR_115:
  1635  007D67  50                 	db	80	;'P'
  1636  007D68  31                 	db	49	;'1'
  1637  007D69  30                 	db	48	;'0'
  1638  007D6A  3A                 	db	58	;':'
  1639  007D6B  25                 	db	37
  1640  007D6C  34                 	db	52	;'4'
  1641  007D6D  64                 	db	100	;'d'
  1642  007D6E  20                 	db	32
  1643  007D6F  7C                 	db	124
  1644  007D70  20                 	db	32
  1645  007D71  50                 	db	80	;'P'
  1646  007D72  31                 	db	49	;'1'
  1647  007D73  34                 	db	52	;'4'
  1648  007D74  3A                 	db	58	;':'
  1649  007D75  25                 	db	37
  1650  007D76  34                 	db	52	;'4'
  1651  007D77  64                 	db	100	;'d'
  1652  007D78  00                 	db	0
  1653  007D79                     STR_116:
  1654  007D79  50                 	db	80	;'P'
  1655  007D7A  31                 	db	49	;'1'
  1656  007D7B  31                 	db	49	;'1'
  1657  007D7C  3A                 	db	58	;':'
  1658  007D7D  25                 	db	37
  1659  007D7E  34                 	db	52	;'4'
  1660  007D7F  64                 	db	100	;'d'
  1661  007D80  20                 	db	32
  1662  007D81  7C                 	db	124
  1663  007D82  20                 	db	32
  1664  007D83  50                 	db	80	;'P'
  1665  007D84  31                 	db	49	;'1'
  1666  007D85  35                 	db	53	;'5'
  1667  007D86  3A                 	db	58	;':'
  1668  007D87  25                 	db	37
  1669  007D88  34                 	db	52	;'4'
  1670  007D89  64                 	db	100	;'d'
  1671  007D8A  00                 	db	0
  1672  007D8B                     STR_126:
  1673  007D8B  2A                 	db	42
  1674  007D8C  30                 	db	48	;'0'
  1675  007D8D  20                 	db	32
  1676  007D8E  6E                 	db	110	;'n'
  1677  007D8F  61                 	db	97	;'a'
  1678  007D90  6F                 	db	111	;'o'
  1679  007D91  20                 	db	32
  1680  007D92  70                 	db	112	;'p'
  1681  007D93  61                 	db	97	;'a'
  1682  007D94  73                 	db	115	;'s'
  1683  007D95  73                 	db	115	;'s'
  1684  007D96  61                 	db	97	;'a'
  1685  007D97  20                 	db	32
  1686  007D98  66                 	db	102	;'f'
  1687  007D99  61                 	db	97	;'a'
  1688  007D9A  73                 	db	115	;'s'
  1689  007D9B  65                 	db	101	;'e'
  1690  007D9C  00                 	db	0
  1691  007D9D                     STR_27:
  1692  007D9D  61                 	db	97	;'a'
  1693  007D9E  63                 	db	99	;'c'
  1694  007D9F  65                 	db	101	;'e'
  1695  007DA0  73                 	db	115	;'s'
  1696  007DA1  73                 	db	115	;'s'
  1697  007DA2  65                 	db	101	;'e'
  1698  007DA3  20                 	db	32
  1699  007DA4  6F                 	db	111	;'o'
  1700  007DA5  20                 	db	32
  1701  007DA6  49                 	db	73	;'I'
  1702  007DA7  50                 	db	80	;'P'
  1703  007DA8  20                 	db	32
  1704  007DA9  70                 	db	112	;'p'
  1705  007DAA  61                 	db	97	;'a'
  1706  007DAB  72                 	db	114	;'r'
  1707  007DAC  61                 	db	97	;'a'
  1708  007DAD  00                 	db	0
  1709  007DAE                     STR_110:
  1710  007DAE  50                 	db	80	;'P'
  1711  007DAF  31                 	db	49	;'1'
  1712  007DB0  3A                 	db	58	;':'
  1713  007DB1  25                 	db	37
  1714  007DB2  34                 	db	52	;'4'
  1715  007DB3  64                 	db	100	;'d'
  1716  007DB4  20                 	db	32
  1717  007DB5  7C                 	db	124
  1718  007DB6  20                 	db	32
  1719  007DB7  20                 	db	32
  1720  007DB8  50                 	db	80	;'P'
  1721  007DB9  35                 	db	53	;'5'
  1722  007DBA  3A                 	db	58	;':'
  1723  007DBB  25                 	db	37
  1724  007DBC  34                 	db	52	;'4'
  1725  007DBD  64                 	db	100	;'d'
  1726  007DBE  00                 	db	0
  1727  007DBF                     STR_111:
  1728  007DBF  50                 	db	80	;'P'
  1729  007DC0  32                 	db	50	;'2'
  1730  007DC1  3A                 	db	58	;':'
  1731  007DC2  25                 	db	37
  1732  007DC3  34                 	db	52	;'4'
  1733  007DC4  64                 	db	100	;'d'
  1734  007DC5  20                 	db	32
  1735  007DC6  7C                 	db	124
  1736  007DC7  20                 	db	32
  1737  007DC8  20                 	db	32
  1738  007DC9  50                 	db	80	;'P'
  1739  007DCA  36                 	db	54	;'6'
  1740  007DCB  3A                 	db	58	;':'
  1741  007DCC  25                 	db	37
  1742  007DCD  34                 	db	52	;'4'
  1743  007DCE  64                 	db	100	;'d'
  1744  007DCF  00                 	db	0
  1745  007DD0                     STR_112:
  1746  007DD0  50                 	db	80	;'P'
  1747  007DD1  33                 	db	51	;'3'
  1748  007DD2  3A                 	db	58	;':'
  1749  007DD3  25                 	db	37
  1750  007DD4  34                 	db	52	;'4'
  1751  007DD5  64                 	db	100	;'d'
  1752  007DD6  20                 	db	32
  1753  007DD7  7C                 	db	124
  1754  007DD8  20                 	db	32
  1755  007DD9  20                 	db	32
  1756  007DDA  50                 	db	80	;'P'
  1757  007DDB  37                 	db	55	;'7'
  1758  007DDC  3A                 	db	58	;':'
  1759  007DDD  25                 	db	37
  1760  007DDE  34                 	db	52	;'4'
  1761  007DDF  64                 	db	100	;'d'
  1762  007DE0  00                 	db	0
  1763  007DE1                     STR_113:
  1764  007DE1  50                 	db	80	;'P'
  1765  007DE2  34                 	db	52	;'4'
  1766  007DE3  3A                 	db	58	;':'
  1767  007DE4  25                 	db	37
  1768  007DE5  34                 	db	52	;'4'
  1769  007DE6  64                 	db	100	;'d'
  1770  007DE7  20                 	db	32
  1771  007DE8  7C                 	db	124
  1772  007DE9  20                 	db	32
  1773  007DEA  20                 	db	32
  1774  007DEB  50                 	db	80	;'P'
  1775  007DEC  38                 	db	56	;'8'
  1776  007DED  3A                 	db	58	;':'
  1777  007DEE  25                 	db	37
  1778  007DEF  34                 	db	52	;'4'
  1779  007DF0  64                 	db	100	;'d'
  1780  007DF1  00                 	db	0
  1781  007DF2                     STR_37:
  1782  007DF2  41                 	db	65	;'A'
  1783  007DF3  54                 	db	84	;'T'
  1784  007DF4  2B                 	db	43
  1785  007DF5  43                 	db	67	;'C'
  1786  007DF6  49                 	db	73	;'I'
  1787  007DF7  50                 	db	80	;'P'
  1788  007DF8  43                 	db	67	;'C'
  1789  007DF9  4C                 	db	76	;'L'
  1790  007DFA  4F                 	db	79	;'O'
  1791  007DFB  53                 	db	83	;'S'
  1792  007DFC  45                 	db	69	;'E'
  1793  007DFD  3D                 	db	61	;'='
  1794  007DFE  30                 	db	48	;'0'
  1795  007DFF  0D                 	db	13
  1796  007E00  0A                 	db	10
  1797  007E01  00                 	db	0
  1798  007E02                     STR_59:
  1799  007E02  41                 	db	65	;'A'
  1800  007E03  54                 	db	84	;'T'
  1801  007E04  2B                 	db	43
  1802  007E05  43                 	db	67	;'C'
  1803  007E06  49                 	db	73	;'I'
  1804  007E07  50                 	db	80	;'P'
  1805  007E08  53                 	db	83	;'S'
  1806  007E09  54                 	db	84	;'T'
  1807  007E0A  41                 	db	65	;'A'
  1808  007E0B  54                 	db	84	;'T'
  1809  007E0C  55                 	db	85	;'U'
  1810  007E0D  53                 	db	83	;'S'
  1811  007E0E  0D                 	db	13
  1812  007E0F  0A                 	db	10
  1813  007E10  00                 	db	0
  1814  007E11                     STR_95:
  1815  007E11  55                 	db	85	;'U'
  1816  007E12  4D                 	db	77	;'M'
  1817  007E13  49                 	db	73	;'I'
  1818  007E14  44                 	db	68	;'D'
  1819  007E15  41                 	db	65	;'A'
  1820  007E16  44                 	db	68	;'D'
  1821  007E17  45                 	db	69	;'E'
  1822  007E18  3A                 	db	58	;':'
  1823  007E19  20                 	db	32
  1824  007E1A  25                 	db	37
  1825  007E1B  64                 	db	100	;'d'
  1826  007E1C  20                 	db	32
  1827  007E1D  25                 	db	37
  1828  007E1E  63                 	db	99	;'c'
  1829  007E1F  00                 	db	0
  1830  007E20                     STR_89:
  1831  007E20  7C                 	db	124
  1832  007E21  53                 	db	83	;'S'
  1833  007E22  65                 	db	101	;'e'
  1834  007E23  6E                 	db	110	;'n'
  1835  007E24  73                 	db	115	;'s'
  1836  007E25  6F                 	db	111	;'o'
  1837  007E26  72                 	db	114	;'r'
  1838  007E27  7C                 	db	124
  1839  007E28  41                 	db	65	;'A'
  1840  007E29  6A                 	db	106	;'j'
  1841  007E2A  75                 	db	117	;'u'
  1842  007E2B  73                 	db	115	;'s'
  1843  007E2C  74                 	db	116	;'t'
  1844  007E2D  65                 	db	101	;'e'
  1845  007E2E  00                 	db	0
  1846  007E2F                     STR_53:
  1847  007E2F  41                 	db	65	;'A'
  1848  007E30  54                 	db	84	;'T'
  1849  007E31  2B                 	db	43
  1850  007E32  43                 	db	67	;'C'
  1851  007E33  49                 	db	73	;'I'
  1852  007E34  50                 	db	80	;'P'
  1853  007E35  4D                 	db	77	;'M'
  1854  007E36  55                 	db	85	;'U'
  1855  007E37  58                 	db	88	;'X'
  1856  007E38  3D                 	db	61	;'='
  1857  007E39  30                 	db	48	;'0'
  1858  007E3A  0D                 	db	13
  1859  007E3B  0A                 	db	10
  1860  007E3C  00                 	db	0
  1861  007E3D                     STR_50:
  1862  007E3D  41                 	db	65	;'A'
  1863  007E3E  54                 	db	84	;'T'
  1864  007E3F  2B                 	db	43
  1865  007E40  43                 	db	67	;'C'
  1866  007E41  57                 	db	87	;'W'
  1867  007E42  4D                 	db	77	;'M'
  1868  007E43  4F                 	db	79	;'O'
  1869  007E44  44                 	db	68	;'D'
  1870  007E45  45                 	db	69	;'E'
  1871  007E46  3D                 	db	61	;'='
  1872  007E47  31                 	db	49	;'1'
  1873  007E48  0D                 	db	13
  1874  007E49  0A                 	db	10
  1875  007E4A  00                 	db	0
  1876  007E4B                     STR_14:
  1877  007E4B  41                 	db	65	;'A'
  1878  007E4C  54                 	db	84	;'T'
  1879  007E4D  2B                 	db	43
  1880  007E4E  43                 	db	67	;'C'
  1881  007E4F  49                 	db	73	;'I'
  1882  007E50  50                 	db	80	;'P'
  1883  007E51  4D                 	db	77	;'M'
  1884  007E52  55                 	db	85	;'U'
  1885  007E53  58                 	db	88	;'X'
  1886  007E54  3D                 	db	61	;'='
  1887  007E55  31                 	db	49	;'1'
  1888  007E56  0D                 	db	13
  1889  007E57  0A                 	db	10
  1890  007E58  00                 	db	0
  1891  007E59                     STR_11:
  1892  007E59  41                 	db	65	;'A'
  1893  007E5A  54                 	db	84	;'T'
  1894  007E5B  2B                 	db	43
  1895  007E5C  43                 	db	67	;'C'
  1896  007E5D  57                 	db	87	;'W'
  1897  007E5E  4D                 	db	77	;'M'
  1898  007E5F  4F                 	db	79	;'O'
  1899  007E60  44                 	db	68	;'D'
  1900  007E61  45                 	db	69	;'E'
  1901  007E62  3D                 	db	61	;'='
  1902  007E63  32                 	db	50	;'2'
  1903  007E64  0D                 	db	13
  1904  007E65  0A                 	db	10
  1905  007E66  00                 	db	0
  1906  007E67                     STR_74:
  1907  007E67  41                 	db	65	;'A'
  1908  007E68  54                 	db	84	;'T'
  1909  007E69  2B                 	db	43
  1910  007E6A  43                 	db	67	;'C'
  1911  007E6B  49                 	db	73	;'I'
  1912  007E6C  50                 	db	80	;'P'
  1913  007E6D  43                 	db	67	;'C'
  1914  007E6E  4C                 	db	76	;'L'
  1915  007E6F  4F                 	db	79	;'O'
  1916  007E70  53                 	db	83	;'S'
  1917  007E71  45                 	db	69	;'E'
  1918  007E72  0D                 	db	13
  1919  007E73  0A                 	db	10
  1920  007E74  00                 	db	0
  1921  007E75                     STR_39:
  1922  007E75  41                 	db	65	;'A'
  1923  007E76  67                 	db	103	;'g'
  1924  007E77  75                 	db	117	;'u'
  1925  007E78  61                 	db	97	;'a'
  1926  007E79  72                 	db	114	;'r'
  1927  007E7A  64                 	db	100	;'d'
  1928  007E7B  61                 	db	97	;'a'
  1929  007E7C  6E                 	db	110	;'n'
  1930  007E7D  64                 	db	100	;'d'
  1931  007E7E  6F                 	db	111	;'o'
  1932  007E7F  2E                 	db	46
  1933  007E80  2E                 	db	46
  1934  007E81  2E                 	db	46
  1935  007E82  00                 	db	0
  1936  007E83                     STR_85:
  1937  007E83  56                 	db	86	;'V'
  1938  007E84  65                 	db	101	;'e'
  1939  007E85  72                 	db	114	;'r'
  1940  007E86  73                 	db	115	;'s'
  1941  007E87  61                 	db	97	;'a'
  1942  007E88  6F                 	db	111	;'o'
  1943  007E89  20                 	db	32
  1944  007E8A  53                 	db	83	;'S'
  1945  007E8B  6F                 	db	111	;'o'
  1946  007E8C  66                 	db	102	;'f'
  1947  007E8D  74                 	db	116	;'t'
  1948  007E8E  2E                 	db	46
  1949  007E8F  3A                 	db	58	;':'
  1950  007E90  00                 	db	0
  1951  007E91                     STR_70:
  1952  007E91  4A                 	db	74	;'J'
  1953  007E92  75                 	db	117	;'u'
  1954  007E93  6C                 	db	108	;'l'
  1955  007E94  20                 	db	32
  1956  007E95  31                 	db	49	;'1'
  1957  007E96  36                 	db	54	;'6'
  1958  007E97  20                 	db	32
  1959  007E98  32                 	db	50	;'2'
  1960  007E99  30                 	db	48	;'0'
  1961  007E9A  32                 	db	50	;'2'
  1962  007E9B  30                 	db	48	;'0'
  1963  007E9C  00                 	db	0
  1964  007E9D                     STR_88:
  1965  007E9D  45                 	db	69	;'E'
  1966  007E9E  52                 	db	82	;'R'
  1967  007E9F  52                 	db	82	;'R'
  1968  007EA0  4F                 	db	79	;'O'
  1969  007EA1  20                 	db	32
  1970  007EA2  45                 	db	69	;'E'
  1971  007EA3  45                 	db	69	;'E'
  1972  007EA4  50                 	db	80	;'P'
  1973  007EA5  52                 	db	82	;'R'
  1974  007EA6  4F                 	db	79	;'O'
  1975  007EA7  4D                 	db	77	;'M'
  1976  007EA8  00                 	db	0
  1977  007EA9                     STR_2:
  1978  007EA9  4D                 	db	77	;'M'
  1979  007EAA  75                 	db	117	;'u'
  1980  007EAB  72                 	db	114	;'r'
  1981  007EAC  63                 	db	99	;'c'
  1982  007EAD  68                 	db	104	;'h'
  1983  007EAE  61                 	db	97	;'a'
  1984  007EAF  6D                 	db	109	;'m'
  1985  007EB0  65                 	db	101	;'e'
  1986  007EB1  6E                 	db	110	;'n'
  1987  007EB2  74                 	db	116	;'t'
  1988  007EB3  6F                 	db	111	;'o'
  1989  007EB4  00                 	db	0
  1990  007EB5                     STR_81:
  1991  007EB5  41                 	db	65	;'A'
  1992  007EB6  54                 	db	84	;'T'
  1993  007EB7  2B                 	db	43
  1994  007EB8  43                 	db	67	;'C'
  1995  007EB9  49                 	db	73	;'I'
  1996  007EBA  46                 	db	70	;'F'
  1997  007EBB  53                 	db	83	;'S'
  1998  007EBC  52                 	db	82	;'R'
  1999  007EBD  0D                 	db	13
  2000  007EBE  0A                 	db	10
  2001  007EBF  00                 	db	0
  2002  007EC0                     STR_3:
  2003  007EC0  53                 	db	83	;'S'
  2004  007EC1  65                 	db	101	;'e'
  2005  007EC2  63                 	db	99	;'c'
  2006  007EC3  2E                 	db	46
  2007  007EC4  20                 	db	32
  2008  007EC5  46                 	db	70	;'F'
  2009  007EC6  6F                 	db	111	;'o'
  2010  007EC7  6C                 	db	108	;'l'
  2011  007EC8  68                 	db	104	;'h'
  2012  007EC9  61                 	db	97	;'a'
  2013  007ECA  00                 	db	0
  2014  007ECB                     STR_1:
  2015  007ECB  41                 	db	65	;'A'
  2016  007ECC  6D                 	db	109	;'m'
  2017  007ECD  61                 	db	97	;'a'
  2018  007ECE  72                 	db	114	;'r'
  2019  007ECF  65                 	db	101	;'e'
  2020  007ED0  6C                 	db	108	;'l'
  2021  007ED1  61                 	db	97	;'a'
  2022  007ED2  63                 	db	99	;'c'
  2023  007ED3  61                 	db	97	;'a'
  2024  007ED4  6F                 	db	111	;'o'
  2025  007ED5  00                 	db	0
  2026  007ED6                     STR_100:
  2027  007ED6  41                 	db	65	;'A'
  2028  007ED7  75                 	db	117	;'u'
  2029  007ED8  74                 	db	116	;'t'
  2030  007ED9  6F                 	db	111	;'o'
  2031  007EDA  6D                 	db	109	;'m'
  2032  007EDB  61                 	db	97	;'a'
  2033  007EDC  74                 	db	116	;'t'
  2034  007EDD  69                 	db	105	;'i'
  2035  007EDE  63                 	db	99	;'c'
  2036  007EDF  6F                 	db	111	;'o'
  2037  007EE0  00                 	db	0
  2038  007EE1                     STR_103:
  2039  007EE1  44                 	db	68	;'D'
  2040  007EE2  65                 	db	101	;'e'
  2041  007EE3  73                 	db	115	;'s'
  2042  007EE4  74                 	db	116	;'t'
  2043  007EE5  72                 	db	114	;'r'
  2044  007EE6  61                 	db	97	;'a'
  2045  007EE7  76                 	db	118	;'v'
  2046  007EE8  61                 	db	97	;'a'
  2047  007EE9  64                 	db	100	;'d'
  2048  007EEA  6F                 	db	111	;'o'
  2049  007EEB  00                 	db	0
  2050  007EEC                     STR_104:
  2051  007EEC  41                 	db	65	;'A'
  2052  007EED  4C                 	db	76	;'L'
  2053  007EEE  41                 	db	65	;'A'
  2054  007EEF  52                 	db	82	;'R'
  2055  007EF0  4D                 	db	77	;'M'
  2056  007EF1  45                 	db	69	;'E'
  2057  007EF2  3A                 	db	58	;':'
  2058  007EF3  20                 	db	32
  2059  007EF4  25                 	db	37
  2060  007EF5  73                 	db	115	;'s'
  2061  007EF6  00                 	db	0
  2062  007EF7                     STR_106:
  2063  007EF7  44                 	db	68	;'D'
  2064  007EF8  65                 	db	101	;'e'
  2065  007EF9  73                 	db	115	;'s'
  2066  007EFA  6C                 	db	108	;'l'
  2067  007EFB  69                 	db	105	;'i'
  2068  007EFC  67                 	db	103	;'g'
  2069  007EFD  61                 	db	97	;'a'
  2070  007EFE  64                 	db	100	;'d'
  2071  007EFF  6F                 	db	111	;'o'
  2072  007F00  00                 	db	0
  2073  007F01                     STR_4:
  2074  007F01  53                 	db	83	;'S'
  2075  007F02  65                 	db	101	;'e'
  2076  007F03  63                 	db	99	;'c'
  2077  007F04  2E                 	db	46
  2078  007F05  20                 	db	32
  2079  007F06  54                 	db	84	;'T'
  2080  007F07  61                 	db	97	;'a'
  2081  007F08  6C                 	db	108	;'l'
  2082  007F09  6F                 	db	111	;'o'
  2083  007F0A  00                 	db	0
  2084  007F0B                     STR_97:
  2085  007F0B  43                 	db	67	;'C'
  2086  007F0C  4C                 	db	76	;'L'
  2087  007F0D  49                 	db	73	;'I'
  2088  007F0E  4D                 	db	77	;'M'
  2089  007F0F  41                 	db	65	;'A'
  2090  007F10  3A                 	db	58	;':'
  2091  007F11  20                 	db	32
  2092  007F12  25                 	db	37
  2093  007F13  73                 	db	115	;'s'
  2094  007F14  00                 	db	0
  2095  007F15                     STR_101:
  2096  007F15  54                 	db	84	;'T'
  2097  007F16  52                 	db	82	;'R'
  2098  007F17  41                 	db	65	;'A'
  2099  007F18  56                 	db	86	;'V'
  2100  007F19  41                 	db	65	;'A'
  2101  007F1A  3A                 	db	58	;':'
  2102  007F1B  20                 	db	32
  2103  007F1C  25                 	db	37
  2104  007F1D  73                 	db	115	;'s'
  2105  007F1E  00                 	db	0
  2106  007F1F                     STR_92:
  2107  007F1F  46                 	db	70	;'F'
  2108  007F20  61                 	db	97	;'a'
  2109  007F21  73                 	db	115	;'s'
  2110  007F22  65                 	db	101	;'e'
  2111  007F23  20                 	db	32
  2112  007F24  7E                 	db	126
  2113  007F25  20                 	db	32
  2114  007F26  25                 	db	37
  2115  007F27  73                 	db	115	;'s'
  2116  007F28  00                 	db	0
  2117  007F29                     STR_117:
  2118  007F29  50                 	db	80	;'P'
  2119  007F2A  31                 	db	49	;'1'
  2120  007F2B  32                 	db	50	;'2'
  2121  007F2C  3A                 	db	58	;':'
  2122  007F2D  25                 	db	37
  2123  007F2E  34                 	db	52	;'4'
  2124  007F2F  64                 	db	100	;'d'
  2125  007F30  20                 	db	32
  2126  007F31  7C                 	db	124
  2127  007F32  00                 	db	0
  2128  007F33                     STR_83:
  2129  007F33  41                 	db	65	;'A'
  2130  007F34  54                 	db	84	;'T'
  2131  007F35  2B                 	db	43
  2132  007F36  52                 	db	82	;'R'
  2133  007F37  53                 	db	83	;'S'
  2134  007F38  54                 	db	84	;'T'
  2135  007F39  0D                 	db	13
  2136  007F3A  0A                 	db	10
  2137  007F3B  00                 	db	0
  2138  007F3C                     STR_29:
  2139  007F3C  31                 	db	49	;'1'
  2140  007F3D  30                 	db	48	;'0'
  2141  007F3E  2E                 	db	46
  2142  007F3F  31                 	db	49	;'1'
  2143  007F40  2E                 	db	46
  2144  007F41  31                 	db	49	;'1'
  2145  007F42  2E                 	db	46
  2146  007F43  31                 	db	49	;'1'
  2147  007F44  00                 	db	0
  2148  007F45                     STR_121:
  2149  007F45  41                 	db	65	;'A'
  2150  007F46  55                 	db	85	;'U'
  2151  007F47  54                 	db	84	;'T'
  2152  007F48  48                 	db	72	;'H'
  2153  007F49  3A                 	db	58	;':'
  2154  007F4A  20                 	db	32
  2155  007F4B  25                 	db	37
  2156  007F4C  64                 	db	100	;'d'
  2157  007F4D  00                 	db	0
  2158  007F4E                     STR_96:
  2159  007F4E  46                 	db	70	;'F'
  2160  007F4F  41                 	db	65	;'A'
  2161  007F50  53                 	db	83	;'S'
  2162  007F51  45                 	db	69	;'E'
  2163  007F52  3A                 	db	58	;':'
  2164  007F53  20                 	db	32
  2165  007F54  25                 	db	37
  2166  007F55  73                 	db	115	;'s'
  2167  007F56  00                 	db	0
  2168  007F57                     STR_98:
  2169  007F57  4D                 	db	77	;'M'
  2170  007F58  4F                 	db	79	;'O'
  2171  007F59  44                 	db	68	;'D'
  2172  007F5A  4F                 	db	79	;'O'
  2173  007F5B  3A                 	db	58	;':'
  2174  007F5C  20                 	db	32
  2175  007F5D  25                 	db	37
  2176  007F5E  73                 	db	115	;'s'
  2177  007F5F  00                 	db	0
  2178  007F60                     STR_102:
  2179  007F60  54                 	db	84	;'T'
  2180  007F61  72                 	db	114	;'r'
  2181  007F62  61                 	db	97	;'a'
  2182  007F63  76                 	db	118	;'v'
  2183  007F64  61                 	db	97	;'a'
  2184  007F65  64                 	db	100	;'d'
  2185  007F66  6F                 	db	111	;'o'
  2186  007F67  00                 	db	0
  2187  007F68                     STR_118:
  2188  007F68  53                 	db	83	;'S'
  2189  007F69  49                 	db	73	;'I'
  2190  007F6A  44                 	db	68	;'D'
  2191  007F6B  3A                 	db	58	;':'
  2192  007F6C  20                 	db	32
  2193  007F6D  25                 	db	37
  2194  007F6E  73                 	db	115	;'s'
  2195  007F6F  00                 	db	0
  2196  007F70                     STR_119:
  2197  007F70  50                 	db	80	;'P'
  2198  007F71  53                 	db	83	;'S'
  2199  007F72  57                 	db	87	;'W'
  2200  007F73  3A                 	db	58	;':'
  2201  007F74  20                 	db	32
  2202  007F75  25                 	db	37
  2203  007F76  73                 	db	115	;'s'
  2204  007F77  00                 	db	0
  2205  007F78                     STR_137:
  2206  007F78  28                 	db	40
  2207  007F79  6E                 	db	110	;'n'
  2208  007F7A  75                 	db	117	;'u'
  2209  007F7B  6C                 	db	108	;'l'
  2210  007F7C  6C                 	db	108	;'l'
  2211  007F7D  29                 	db	41
  2212  007F7E  00                 	db	0
  2213  007F7F                     STR_130:
  2214  007F7F  22                 	db	34
  2215  007F80  25                 	db	37
  2216  007F81  73                 	db	115	;'s'
  2217  007F82  22                 	db	34
  2218  007F83  3A                 	db	58	;':'
  2219  007F84  22                 	db	34
  2220  007F85  00                 	db	0
  2221  007F86                     STR_76:
  2222  007F86  43                 	db	67	;'C'
  2223  007F87  4C                 	db	76	;'L'
  2224  007F88  4F                 	db	79	;'O'
  2225  007F89  53                 	db	83	;'S'
  2226  007F8A  45                 	db	69	;'E'
  2227  007F8B  44                 	db	68	;'D'
  2228  007F8C  00                 	db	0
  2229  007F8D                     STR_7:
  2230  007F8D  4E                 	db	78	;'N'
  2231  007F8E  6F                 	db	111	;'o'
  2232  007F8F  72                 	db	114	;'r'
  2233  007F90  6D                 	db	109	;'m'
  2234  007F91  61                 	db	97	;'a'
  2235  007F92  6C                 	db	108	;'l'
  2236  007F93  00                 	db	0
  2237  007F94                     STR_99:
  2238  007F94  4D                 	db	77	;'M'
  2239  007F95  61                 	db	97	;'a'
  2240  007F96  6E                 	db	110	;'n'
  2241  007F97  75                 	db	117	;'u'
  2242  007F98  61                 	db	97	;'a'
  2243  007F99  6C                 	db	108	;'l'
  2244  007F9A  00                 	db	0
  2245  007F9B                     STR_105:
  2246  007F9B  4C                 	db	76	;'L'
  2247  007F9C  69                 	db	105	;'i'
  2248  007F9D  67                 	db	103	;'g'
  2249  007F9E  61                 	db	97	;'a'
  2250  007F9F  64                 	db	100	;'d'
  2251  007FA0  6F                 	db	111	;'o'
  2252  007FA1  00                 	db	0
  2253  007FA2                     STR_120:
  2254  007FA2  4E                 	db	78	;'N'
  2255  007FA3  53                 	db	83	;'S'
  2256  007FA4  3A                 	db	58	;':'
  2257  007FA5  20                 	db	32
  2258  007FA6  25                 	db	37
  2259  007FA7  73                 	db	115	;'s'
  2260  007FA8  00                 	db	0
  2261  007FA9                     STR_25:
  2262  007FA9  41                 	db	65	;'A'
  2263  007FAA  63                 	db	99	;'c'
  2264  007FAB  63                 	db	99	;'c'
  2265  007FAC  65                 	db	101	;'e'
  2266  007FAD  70                 	db	112	;'p'
  2267  007FAE  74                 	db	116	;'t'
  2268  007FAF  00                 	db	0
  2269  007FB0                     STR_127:
  2270  007FB0  22                 	db	34
  2271  007FB1  25                 	db	37
  2272  007FB2  73                 	db	115	;'s'
  2273  007FB3  22                 	db	34
  2274  007FB4  3A                 	db	58	;':'
  2275  007FB5  00                 	db	0
  2276  007FB6                     STR_47:
  2277  007FB6  25                 	db	37
  2278  007FB7  73                 	db	115	;'s'
  2279  007FB8  3A                 	db	58	;':'
  2280  007FB9  25                 	db	37
  2281  007FBA  64                 	db	100	;'d'
  2282  007FBB  00                 	db	0
  2283  007FBC                     STR_6:
  2284  007FBC  55                 	db	85	;'U'
  2285  007FBD  6D                 	db	109	;'m'
  2286  007FBE  69                 	db	105	;'i'
  2287  007FBF  64                 	db	100	;'d'
  2288  007FC0  6F                 	db	111	;'o'
  2289  007FC1  00                 	db	0
  2290  007FC2                     STR_128:
  2291  007FC2  25                 	db	37
  2292  007FC3  73                 	db	115	;'s'
  2293  007FC4  25                 	db	37
  2294  007FC5  63                 	db	99	;'c'
  2295  007FC6  00                 	db	0
  2296  007FC7                     STR_72:
  2297  007FC7  73                 	db	115	;'s'
  2298  007FC8  61                 	db	97	;'a'
  2299  007FC9  76                 	db	118	;'v'
  2300  007FCA  65                 	db	101	;'e'
  2301  007FCB  00                 	db	0
  2302  007FCC                     STR_55:
  2303  007FCC  6C                 	db	108	;'l'
  2304  007FCD  69                 	db	105	;'i'
  2305  007FCE  6E                 	db	110	;'n'
  2306  007FCF  6B                 	db	107	;'k'
  2307  007FD0  00                 	db	0
  2308  007FD1                     STR_8:
  2309  007FD1  53                 	db	83	;'S'
  2310  007FD2  65                 	db	101	;'e'
  2311  007FD3  63                 	db	99	;'c'
  2312  007FD4  6F                 	db	111	;'o'
  2313  007FD5  00                 	db	0
  2314  007FD6                     STR_5:
  2315  007FD6  2D                 	db	45
  2316  007FD7  20                 	db	32
  2317  007FD8  2D                 	db	45
  2318  007FD9  00                 	db	0
  2319  007FDA                     STR_68:
  2320  007FDA  32                 	db	50	;'2'
  2321  007FDB  30                 	db	48	;'0'
  2322  007FDC  30                 	db	48	;'0'
  2323  007FDD  00                 	db	0
  2324  007FDE                     STR_80:
  2325  007FDE  4D                 	db	77	;'M'
  2326  007FDF  41                 	db	65	;'A'
  2327  007FE0  43                 	db	67	;'C'
  2328  007FE1  00                 	db	0
  2329  007FE2                     STR_10:
  2330  007FE2  41                 	db	65	;'A'
  2331  007FE3  4C                 	db	76	;'L'
  2332  007FE4  4C                 	db	76	;'L'
  2333  007FE5  00                 	db	0
  2334  007FE6                     STR_38:
  2335  007FE6  24                 	db	36
  2336  007FE7  23                 	db	35
  2337  007FE8  00                 	db	0
  2338  007FE9                     STR_40:
  2339  007FE9  23                 	db	35
  2340  007FEA  24                 	db	36
  2341  007FEB  00                 	db	0
  2342  007FEC                     STR_9:
  2343  007FEC  2D                 	db	45
  2344  007FED  2D                 	db	45
  2345  007FEE  00                 	db	0
  2346  007FEF                     STR_12:
  2347  007FEF  4F                 	db	79	;'O'
  2348  007FF0  4B                 	db	75	;'K'
  2349  007FF1  00                 	db	0
  2350  007FF2                     STR_41:
  2351  007FF2  73                 	db	115	;'s'
  2352  007FF3  73                 	db	115	;'s'
  2353  007FF4  00                 	db	0
  2354  007FF5                     STR_43:
  2355  007FF5  73                 	db	115	;'s'
  2356  007FF6  76                 	db	118	;'v'
  2357  007FF7  00                 	db	0
  2358  007FF8                     STR_42:
  2359  007FF8  70                 	db	112	;'p'
  2360  007FF9  77                 	db	119	;'w'
  2361  007FFA  00                 	db	0
  2362  007FFB                     STR_60:
  2363  007FFB  32                 	db	50	;'2'
  2364  007FFC  00                 	db	0
  2365  007FFD                     STR_61:
  2366  007FFD  34                 	db	52	;'4'
  2367  007FFE  00                 	db	0
  2368  0000                     
  2369                           ; #config settings
  2370  007FFF  00                 	db	0	; dummy byte at the end
  2371  0000                     
  2372                           	psect	cinit
  2373  0052C6                     __pcinit:
  2374                           	opt stack 0
  2375  0052C6                     start_initialization:
  2376                           	opt stack 0
  2377  0052C6                     __initialization:
  2378                           	opt stack 0
  2379                           
  2380                           ; Initialize objects allocated to BANK1 (12 bytes)
  2381                           ; load TBLPTR registers with __pidataBANK1
  2382  0052C6  0EFC               	movlw	low __pidataBANK1
  2383  0052C8  6EF6               	movwf	tblptrl,c
  2384  0052CA  0E5E               	movlw	high __pidataBANK1
  2385  0052CC  6EF7               	movwf	tblptrh,c
  2386  0052CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2387  0052D0  6EF8               	movwf	tblptru,c
  2388  0052D2  EE01  F0E6         	lfsr	0,__pdataBANK1
  2389  0052D6  EE10 F00C          	lfsr	1,12
  2390  0052DA                     copy_data0:
  2391  0052DA  0009               	tblrd		*+
  2392  0052DC  CFF5 FFEE          	movff	tablat,postinc0
  2393  0052E0  50E5               	movf	postdec1,w,c
  2394  0052E2  50E1               	movf	fsr1l,w,c
  2395  0052E4  E1FA               	bnz	copy_data0
  2396                           
  2397                           ; Initialize objects allocated to BANK0 (3 bytes)
  2398                           ; load TBLPTR registers with __pidataBANK0
  2399  0052E6  0E47               	movlw	low __pidataBANK0
  2400  0052E8  6EF6               	movwf	tblptrl,c
  2401  0052EA  0E5F               	movlw	high __pidataBANK0
  2402  0052EC  6EF7               	movwf	tblptrh,c
  2403  0052EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2404  0052F0  6EF8               	movwf	tblptru,c
  2405  0052F2  0009               	tblrd		*+	;fetch initializer
  2406  0052F4  CFF5 F0FD          	movff	tablat,__pdataBANK0
  2407  0052F8  0009               	tblrd		*+	;fetch initializer
  2408  0052FA  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  2409  0052FE  0009               	tblrd		*+	;fetch initializer
  2410  005300  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
  2411                           
  2412                           ; Initialize objects allocated to COMRAM (3 bytes)
  2413                           ; load TBLPTR registers with __pidataCOMRAM
  2414  005304  0E44               	movlw	low __pidataCOMRAM
  2415  005306  6EF6               	movwf	tblptrl,c
  2416  005308  0E5F               	movlw	high __pidataCOMRAM
  2417  00530A  6EF7               	movwf	tblptrh,c
  2418  00530C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2419  00530E  6EF8               	movwf	tblptru,c
  2420  005310  0009               	tblrd		*+	;fetch initializer
  2421  005312  CFF5 F05C          	movff	tablat,__pdataCOMRAM
  2422  005316  0009               	tblrd		*+	;fetch initializer
  2423  005318  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
  2424  00531C  0009               	tblrd		*+	;fetch initializer
  2425  00531E  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
  2426                           
  2427                           ; Clear objects allocated to BANK2 (205 bytes)
  2428  005322  EE02  F000         	lfsr	0,__pbssBANK2
  2429  005326  0ECD               	movlw	205
  2430  005328                     clear_0:
  2431  005328  6AEE               	clrf	postinc0,c
  2432  00532A  06E8               	decf	wreg,f,c
  2433  00532C  E1FD               	bnz	clear_0
  2434                           
  2435                           ; Clear objects allocated to BANK1 (230 bytes)
  2436  00532E  EE01  F000         	lfsr	0,__pbssBANK1
  2437  005332  0EE6               	movlw	230
  2438  005334                     clear_1:
  2439  005334  6AEE               	clrf	postinc0,c
  2440  005336  06E8               	decf	wreg,f,c
  2441  005338  E1FD               	bnz	clear_1
  2442                           
  2443                           ; Clear objects allocated to BANK0 (8 bytes)
  2444  00533A  EE00  F0F5         	lfsr	0,__pbssBANK0
  2445  00533E  0E08               	movlw	8
  2446  005340                     clear_2:
  2447  005340  6AEE               	clrf	postinc0,c
  2448  005342  06E8               	decf	wreg,f,c
  2449  005344  E1FD               	bnz	clear_2
  2450                           
  2451                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2452  005346  6A5B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2453                           
  2454                           ; Clear objects allocated to COMRAM (42 bytes)
  2455  005348  EE00  F031         	lfsr	0,__pbssCOMRAM
  2456  00534C  0E2A               	movlw	42
  2457  00534E                     clear_3:
  2458  00534E  6AEE               	clrf	postinc0,c
  2459  005350  06E8               	decf	wreg,f,c
  2460  005352  E1FD               	bnz	clear_3
  2461  005354                     end_of_initialization:
  2462                           	opt stack 0
  2463  005354                     __end_of__initialization:
  2464                           	opt stack 0
  2465  005354  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2466  005356  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2467  005358  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2468  00535A  6EF8               	movwf	tblptru,c
  2469  00535C  0100               	movlb	0
  2470  00535E  EF09  F000         	goto	_main	;jump to C main() function
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           postdec1	equ	0xFE5
  2478                           fsr1l	equ	0xFE1
  2479                           
  2480                           	psect	bitbssCOMRAM
  2481  0002D8                     __pbitbssCOMRAM:
  2482                           	opt stack 0
  2483  0002D8                     _contador_fase_automatica:
  2484                           	opt stack 0
  2485  0002D8                     	ds	1
  2486  0002D9                     _md_seguranca:
  2487                           	opt stack 0
  2488  0002D9                     	ds	1
  2489  0002DA                     _blinkk:
  2490                           	opt stack 0
  2491  0002DA                     	ds	1
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1l	equ	0xFE1
  2500                           
  2501                           	psect	bssCOMRAM
  2502  000031                     __pbssCOMRAM:
  2503                           	opt stack 0
  2504  000031                     _t_controle_flap:
  2505                           	opt stack 0
  2506  000031                     	ds	2
  2507  000033                     _portServer:
  2508                           	opt stack 0
  2509  000033                     	ds	2
  2510  000035                     _media_adc:
  2511                           	opt stack 0
  2512  000035                     	ds	1
  2513  000036                     _t_leitura_adc:
  2514                           	opt stack 0
  2515  000036                     	ds	1
  2516  000037                     _t_controle_buzzer:
  2517                           	opt stack 0
  2518  000037                     	ds	1
  2519  000038                     _t_controle_fim_fases:
  2520                           	opt stack 0
  2521  000038                     	ds	1
  2522  000039                     _f_buzzer_falta_energia:
  2523                           	opt stack 0
  2524  000039                     	ds	1
  2525  00003A                     __acao_flap:
  2526                           	opt stack 0
  2527  00003A                     	ds	1
  2528  00003B                     _f_wifi_processo:
  2529                           	opt stack 0
  2530  00003B                     	ds	1
  2531  00003C                     _t_wifi_restart:
  2532                           	opt stack 0
  2533  00003C                     	ds	1
  2534  00003D                     __BF_current:
  2535                           	opt stack 0
  2536  00003D                     	ds	1
  2537  00003E                     __BF_i_count:
  2538                           	opt stack 0
  2539  00003E                     	ds	1
  2540  00003F                     __BF_enable_receive:
  2541                           	opt stack 0
  2542  00003F                     	ds	1
  2543  000040                     _bt_flag:
  2544                           	opt stack 0
  2545  000040                     	ds	1
  2546  000041                     _leds:
  2547                           	opt stack 0
  2548  000041                     	ds	1
  2549  000042                     _ajuste_parametro:
  2550                           	opt stack 0
  2551  000042                     	ds	1
  2552  000043                     _opcaomenu:
  2553                           	opt stack 0
  2554  000043                     	ds	1
  2555  000044                     _hor:
  2556                           	opt stack 0
  2557  000044                     	ds	1
  2558  000045                     _min:
  2559                           	opt stack 0
  2560  000045                     	ds	1
  2561  000046                     _sec:
  2562                           	opt stack 0
  2563  000046                     	ds	1
  2564  000047                     _wifi_conectado:
  2565                           	opt stack 0
  2566  000047                     	ds	1
  2567  000048                     _base_sec:
  2568                           	opt stack 0
  2569  000048                     	ds	1
  2570  000049                     _wifi_SENHA:
  2571                           	opt stack 0
  2572  000049                     	ds	2
  2573  00004B                     _senha_desbloqueio_func:
  2574                           	opt stack 0
  2575  00004B                     	ds	1
  2576  00004C                     _wifi_habilita_alteracao:
  2577                           	opt stack 0
  2578  00004C                     	ds	1
  2579  00004D                     _h_subir_temp_automatica:
  2580                           	opt stack 0
  2581  00004D                     	ds	1
  2582  00004E                     _h_buzzer:
  2583                           	opt stack 0
  2584  00004E                     	ds	1
  2585  00004F                     _h_flap:
  2586                           	opt stack 0
  2587  00004F                     	ds	1
  2588  000050                     _h_abafador:
  2589                           	opt stack 0
  2590  000050                     	ds	1
  2591  000051                     _h_venotinha:
  2592                           	opt stack 0
  2593  000051                     	ds	1
  2594  000052                     _h_modo_seguranca:
  2595                           	opt stack 0
  2596  000052                     	ds	1
  2597  000053                     _t_flap_intervalo:
  2598                           	opt stack 0
  2599  000053                     	ds	1
  2600  000054                     _t_flap_ligado:
  2601                           	opt stack 0
  2602  000054                     	ds	1
  2603  000055                     _t_fim_fase3:
  2604                           	opt stack 0
  2605  000055                     	ds	1
  2606  000056                     _t_fim_fase2:
  2607                           	opt stack 0
  2608  000056                     	ds	1
  2609  000057                     _t_fim_fase1:
  2610                           	opt stack 0
  2611  000057                     	ds	1
  2612  000058                     _tipo_modo_trabalho:
  2613                           	opt stack 0
  2614  000058                     	ds	1
  2615  000059                     _trava_fase:
  2616                           	opt stack 0
  2617  000059                     	ds	1
  2618  00005A                     _fornalha:
  2619                           	opt stack 0
  2620  00005A                     	ds	1
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           postdec1	equ	0xFE5
  2628                           fsr1l	equ	0xFE1
  2629                           
  2630                           	psect	dataCOMRAM
  2631  00005C                     __pdataCOMRAM:
  2632                           	opt stack 0
  2633  00005C                     __led:
  2634                           	opt stack 0
  2635  00005C                     	ds	1
  2636  00005D                     _umid:
  2637                           	opt stack 0
  2638  00005D                     	ds	1
  2639  00005E                     _f_falta_energia:
  2640                           	opt stack 0
  2641  00005E                     	ds	1
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           postinc0	equ	0xFEE
  2647                           wreg	equ	0xFE8
  2648                           postdec1	equ	0xFE5
  2649                           fsr1l	equ	0xFE1
  2650                           
  2651                           	psect	bssBANK0
  2652  0000F5                     __pbssBANK0:
  2653                           	opt stack 0
  2654  0000F5                     _umidajt:
  2655                           	opt stack 0
  2656  0000F5                     	ds	1
  2657  0000F6                     _tempajt:
  2658                           	opt stack 0
  2659  0000F6                     	ds	1
  2660  0000F7                     _clima:
  2661                           	opt stack 0
  2662  0000F7                     	ds	1
  2663  0000F8                     _fase:
  2664                           	opt stack 0
  2665  0000F8                     	ds	1
  2666  0000F9                     _t_religar_ventoinha_automatica:
  2667                           	opt stack 0
  2668  0000F9                     	ds	1
  2669  0000FA                     _t_temp_automatica:
  2670                           	opt stack 0
  2671  0000FA                     	ds	1
  2672  0000FB                     _tipo_sensor_umidade:
  2673                           	opt stack 0
  2674  0000FB                     	ds	1
  2675  0000FC                     _buzzer:
  2676                           	opt stack 0
  2677  0000FC                     	ds	1
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           postdec1	equ	0xFE5
  2685                           fsr1l	equ	0xFE1
  2686                           
  2687                           	psect	dataBANK0
  2688  0000FD                     __pdataBANK0:
  2689                           	opt stack 0
  2690  0000FD                     _menu:
  2691                           	opt stack 0
  2692  0000FD                     	ds	1
  2693  0000FE                     _temp:
  2694                           	opt stack 0
  2695  0000FE                     	ds	1
  2696  0000FF                     _t_buzzer_religar:
  2697                           	opt stack 0
  2698  0000FF                     	ds	1
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1l	equ	0xFE1
  2707                           
  2708                           	psect	bssBANK1
  2709  000100                     __pbssBANK1:
  2710                           	opt stack 0
  2711  000100                     __umid:
  2712                           	opt stack 0
  2713  000100                     	ds	33
  2714  000121                     __temp:
  2715                           	opt stack 0
  2716  000121                     	ds	33
  2717  000142                     getIntJSON@F274:
  2718                           	opt stack 0
  2719  000142                     	ds	10
  2720  00014C                     _t_controle_modo_seguranca:
  2721                           	opt stack 0
  2722  00014C                     	ds	2
  2723  00014E                     _t_controle_religar_ventoinha:
  2724                           	opt stack 0
  2725  00014E                     	ds	2
  2726  000150                     _t_controle_religar_buzzer:
  2727                           	opt stack 0
  2728  000150                     	ds	2
  2729  000152                     _t_controle_temp_automatica:
  2730                           	opt stack 0
  2731  000152                     	ds	1
  2732  000153                     _t_controle_blink:
  2733                           	opt stack 0
  2734  000153                     	ds	1
  2735  000154                     __sec:
  2736                           	opt stack 0
  2737  000154                     	ds	1
  2738  000155                     _lcd_rfsh:
  2739                           	opt stack 0
  2740  000155                     	ds	1
  2741  000156                     _line4:
  2742                           	opt stack 0
  2743  000156                     	ds	21
  2744  00016B                     _line3:
  2745                           	opt stack 0
  2746  00016B                     	ds	21
  2747  000180                     _line2:
  2748                           	opt stack 0
  2749  000180                     	ds	21
  2750  000195                     _line1:
  2751                           	opt stack 0
  2752  000195                     	ds	21
  2753  0001AA                     _ipServer:
  2754                           	opt stack 0
  2755  0001AA                     	ds	20
  2756  0001BE                     _senha:
  2757                           	opt stack 0
  2758  0001BE                     	ds	15
  2759  0001CD                     _ssid:
  2760                           	opt stack 0
  2761  0001CD                     	ds	15
  2762  0001DC                     __BF_start:
  2763                           	opt stack 0
  2764  0001DC                     	ds	10
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1l	equ	0xFE1
  2773                           
  2774                           	psect	dataBANK1
  2775  0001E6                     __pdataBANK1:
  2776                           	opt stack 0
  2777  0001E6                     _wifi_MAC:
  2778                           	opt stack 0
  2779  0001E6                     	ds	12
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           postdec1	equ	0xFE5
  2787                           fsr1l	equ	0xFE1
  2788                           
  2789                           	psect	bssBANK2
  2790  000200                     __pbssBANK2:
  2791                           	opt stack 0
  2792  000200                     getStringJSON@F288:
  2793                           	opt stack 0
  2794  000200                     	ds	25
  2795  000219                     getStringJSON@F292:
  2796                           	opt stack 0
  2797  000219                     	ds	20
  2798  00022D                     getStringJSON@F290:
  2799                           	opt stack 0
  2800  00022D                     	ds	20
  2801  000241                     getIntJSON@F278:
  2802                           	opt stack 0
  2803  000241                     	ds	20
  2804  000255                     getIntJSON@F276:
  2805                           	opt stack 0
  2806  000255                     	ds	20
  2807  000269                     _bufferSerial:
  2808                           	opt stack 0
  2809  000269                     	ds	100
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           postdec1	equ	0xFE5
  2817                           fsr1l	equ	0xFE1
  2818                           
  2819                           	psect	cstackBANK0
  2820  000060                     __pcstackBANK0:
  2821                           	opt stack 0
  2822  000060                     ??_isdigit:
  2823  000060                     ??_I2C_Wait:
  2824  000060                     ?_strlen:
  2825                           	opt stack 0
  2826  000060                     ?_faseAtual:
  2827                           	opt stack 0
  2828  000060                     ?_climaAtual:
  2829                           	opt stack 0
  2830  000060                     ?_strchr:
  2831                           	opt stack 0
  2832  000060                     ?_tabelaUmidade:
  2833                           	opt stack 0
  2834  000060                     ?_readADC:
  2835                           	opt stack 0
  2836  000060                     ?___wmul:
  2837                           	opt stack 0
  2838  000060                     ?___lwdiv:
  2839                           	opt stack 0
  2840  000060                     ?___ftpack:
  2841                           	opt stack 0
  2842  000060                     ?___lldiv:
  2843                           	opt stack 0
  2844  000060                     setLed@acao:
  2845                           	opt stack 0
  2846  000060                     Lcd_Port@a:
  2847                           	opt stack 0
  2848  000060                     btPress@bt:
  2849                           	opt stack 0
  2850  000060                     putch@c:
  2851                           	opt stack 0
  2852  000060                     blink@line:
  2853                           	opt stack 0
  2854  000060                     tabelaUmidade@_tmp:
  2855                           	opt stack 0
  2856  000060                     faseAtual@_fase:
  2857                           	opt stack 0
  2858  000060                     delay@x:
  2859                           	opt stack 0
  2860  000060                     ___wmul@multiplier:
  2861                           	opt stack 0
  2862  000060                     ___lwdiv@dividend:
  2863                           	opt stack 0
  2864  000060                     memset@p1:
  2865                           	opt stack 0
  2866  000060                     strlen@s:
  2867                           	opt stack 0
  2868  000060                     strchr@ptr:
  2869                           	opt stack 0
  2870  000060                     ___ftpack@arg:
  2871                           	opt stack 0
  2872  000060                     ___ftge@ff1:
  2873                           	opt stack 0
  2874  000060                     ___lldiv@dividend:
  2875                           	opt stack 0
  2876                           
  2877                           ; 4 bytes @ 0x0
  2878  000060                     	ds	1
  2879  000061                     ??_Lcd_Cmd:
  2880  000061                     ?_I2C_Read:
  2881                           	opt stack 0
  2882  000061                     setLed@led:
  2883                           	opt stack 0
  2884  000061                     Lcd_Write_Char@tempp:
  2885                           	opt stack 0
  2886  000061                     _isdigit$2066:
  2887                           	opt stack 0
  2888  000061                     I2C_Write@d:
  2889                           	opt stack 0
  2890  000061                     I2C_Read@a:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x1
  2894  000061                     	ds	1
  2895  000062                     ??_delay:
  2896  000062                     ??_strlen:
  2897  000062                     ??_readADC:
  2898  000062                     Lcd_Cmd@a:
  2899                           	opt stack 0
  2900  000062                     Lcd_Write_Char@y:
  2901                           	opt stack 0
  2902  000062                     blink@start:
  2903                           	opt stack 0
  2904  000062                     climaAtual@c:
  2905                           	opt stack 0
  2906  000062                     isdigit@c:
  2907                           	opt stack 0
  2908  000062                     tabelaUmidade@_clima:
  2909                           	opt stack 0
  2910  000062                     faseAtual@_tempajt:
  2911                           	opt stack 0
  2912  000062                     acaoFlap@tempo_ativado:
  2913                           	opt stack 0
  2914  000062                     ___wmul@multiplicand:
  2915                           	opt stack 0
  2916  000062                     ___lwdiv@divisor:
  2917                           	opt stack 0
  2918  000062                     memset@c:
  2919                           	opt stack 0
  2920  000062                     strchr@chr:
  2921                           	opt stack 0
  2922                           
  2923                           ; 2 bytes @ 0x2
  2924  000062                     	ds	1
  2925  000063                     ??_Lcd_Init:
  2926  000063                     Lcd_Set_Cursor@b:
  2927                           	opt stack 0
  2928  000063                     Lcd_Write_Char@a:
  2929                           	opt stack 0
  2930  000063                     blink@end:
  2931                           	opt stack 0
  2932  000063                     writeEEPROM_ext@data:
  2933                           	opt stack 0
  2934  000063                     ___ftpack@exp:
  2935                           	opt stack 0
  2936  000063                     I2C_Read@temp:
  2937                           	opt stack 0
  2938  000063                     ___ftge@ff2:
  2939                           	opt stack 0
  2940                           
  2941                           ; 3 bytes @ 0x3
  2942  000063                     	ds	1
  2943  000064                     ??_strchr:
  2944  000064                     ??_criaCaracteresCGRAM:
  2945  000064                     Lcd_Set_Cursor@a:
  2946                           	opt stack 0
  2947  000064                     blink@i:
  2948                           	opt stack 0
  2949  000064                     tabelaUmidade@_tipo_sensor:
  2950                           	opt stack 0
  2951  000064                     writeEEPROM_ext@adress:
  2952                           	opt stack 0
  2953  000064                     faseAtual@_fasee:
  2954                           	opt stack 0
  2955  000064                     ___ftpack@sign:
  2956                           	opt stack 0
  2957  000064                     Lcd_Write_String@a:
  2958                           	opt stack 0
  2959  000064                     acaoFlap@tempo_aguardar:
  2960                           	opt stack 0
  2961  000064                     ___wmul@product:
  2962                           	opt stack 0
  2963  000064                     ___lwdiv@quotient:
  2964                           	opt stack 0
  2965  000064                     memset@n:
  2966                           	opt stack 0
  2967  000064                     strlen@cp:
  2968                           	opt stack 0
  2969  000064                     ___lldiv@divisor:
  2970                           	opt stack 0
  2971                           
  2972                           ; 4 bytes @ 0x4
  2973  000064                     	ds	1
  2974  000065                     ??___ftpack:
  2975  000065                     ??_tabelaUmidade:
  2976  000065                     Lcd_Set_Cursor@z:
  2977                           	opt stack 0
  2978  000065                     readEEPROM_ext@adress:
  2979                           	opt stack 0
  2980  000065                     faseAtual@tp:
  2981                           	opt stack 0
  2982  000065                     writeEEPROM16_ext@data:
  2983                           	opt stack 0
  2984  000065                     setRangeValor@_var_ajt:
  2985                           	opt stack 0
  2986                           
  2987                           ; 2 bytes @ 0x5
  2988  000065                     	ds	1
  2989  000066                     ??_acaoFlap:
  2990  000066                     ??___ftge:
  2991  000066                     ?_atoi:
  2992                           	opt stack 0
  2993  000066                     ?_strncmp:
  2994                           	opt stack 0
  2995  000066                     Lcd_Set_Cursor@y:
  2996                           	opt stack 0
  2997  000066                     Lcd_Write_String@i:
  2998                           	opt stack 0
  2999  000066                     readEEPROM_ext@data:
  3000                           	opt stack 0
  3001  000066                     faseAtual@tmpajt:
  3002                           	opt stack 0
  3003  000066                     ___lwdiv@counter:
  3004                           	opt stack 0
  3005  000066                     readADC@digital:
  3006                           	opt stack 0
  3007  000066                     atoi@s:
  3008                           	opt stack 0
  3009  000066                     memset@p:
  3010                           	opt stack 0
  3011  000066                     strncmp@s1:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x6
  3015  000066                     	ds	1
  3016  000067                     ?_readEEPROM16_ext:
  3017                           	opt stack 0
  3018  000067                     ?___lwmod:
  3019                           	opt stack 0
  3020  000067                     Lcd_Set_Cursor@temp:
  3021                           	opt stack 0
  3022  000067                     tabelaUmidade@_umd:
  3023                           	opt stack 0
  3024  000067                     writeEEPROM16_ext@adress:
  3025                           	opt stack 0
  3026  000067                     setRangeValor@_min:
  3027                           	opt stack 0
  3028  000067                     acaoFlap@acao:
  3029                           	opt stack 0
  3030  000067                     ___lwmod@dividend:
  3031                           	opt stack 0
  3032  000067                     criaCaracteresCGRAM@character:
  3033                           	opt stack 0
  3034                           
  3035                           ; 56 bytes @ 0x7
  3036  000067                     	ds	1
  3037  000068                     ??_atoi:
  3038  000068                     ??_controle:
  3039  000068                     setRangeValor@_max:
  3040                           	opt stack 0
  3041  000068                     readADC@canal:
  3042                           	opt stack 0
  3043  000068                     atualizaLCD@line1:
  3044                           	opt stack 0
  3045  000068                     setUmidade@_umdajt:
  3046                           	opt stack 0
  3047  000068                     strncmp@s2:
  3048                           	opt stack 0
  3049  000068                     ___lldiv@quotient:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x8
  3053  000068                     	ds	1
  3054  000069                     ??_readEEPROM16_ext:
  3055  000069                     ?___lwtoft:
  3056                           	opt stack 0
  3057  000069                     setRangeValor@end_eeprom:
  3058                           	opt stack 0
  3059  000069                     ___lwmod@divisor:
  3060                           	opt stack 0
  3061  000069                     ___lwtoft@c:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x9
  3065  000069                     	ds	1
  3066  00006A                     ??_setRangeValor:
  3067  00006A                     atoi@sign:
  3068                           	opt stack 0
  3069  00006A                     atualizaLCD@line2:
  3070                           	opt stack 0
  3071  00006A                     readEEPROM16_ext@data:
  3072                           	opt stack 0
  3073  00006A                     setUmidade@_tempajt:
  3074                           	opt stack 0
  3075  00006A                     strncmp@len:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0xA
  3079  00006A                     	ds	1
  3080  00006B                     ___lwmod@counter:
  3081                           	opt stack 0
  3082  00006B                     atoi@a:
  3083                           	opt stack 0
  3084                           
  3085                           ; 2 bytes @ 0xB
  3086  00006B                     	ds	1
  3087  00006C                     ??_strncmp:
  3088  00006C                     ?__doprnt:
  3089                           	opt stack 0
  3090  00006C                     ?___ftmul:
  3091                           	opt stack 0
  3092  00006C                     readEEPROM16_ext@adress:
  3093                           	opt stack 0
  3094  00006C                     ___lldiv@counter:
  3095                           	opt stack 0
  3096  00006C                     atualizaLCD@line3:
  3097                           	opt stack 0
  3098  00006C                     setUmidade@_clima:
  3099                           	opt stack 0
  3100  00006C                     __doprnt@pb:
  3101                           	opt stack 0
  3102  00006C                     ___ftmul@f1:
  3103                           	opt stack 0
  3104                           
  3105                           ; 3 bytes @ 0xC
  3106  00006C                     	ds	1
  3107  00006D                     setRangeValor@_acao:
  3108                           	opt stack 0
  3109  00006D                     I2C_Master_Init@c:
  3110                           	opt stack 0
  3111                           
  3112                           ; 4 bytes @ 0xD
  3113  00006D                     	ds	1
  3114  00006E                     setUmidade@tp:
  3115                           	opt stack 0
  3116  00006E                     atualizaLCD@line4:
  3117                           	opt stack 0
  3118  00006E                     setRangeValor@_aux:
  3119                           	opt stack 0
  3120  00006E                     __doprnt@f:
  3121                           	opt stack 0
  3122                           
  3123                           ; 2 bytes @ 0xE
  3124  00006E                     	ds	1
  3125  00006F                     ?_strstr:
  3126                           	opt stack 0
  3127  00006F                     _setUmidade$1297:
  3128                           	opt stack 0
  3129  00006F                     strstr@s1:
  3130                           	opt stack 0
  3131  00006F                     ___ftmul@f2:
  3132                           	opt stack 0
  3133                           
  3134                           ; 3 bytes @ 0xF
  3135  00006F                     	ds	1
  3136  000070                     atualizaLCD@i:
  3137                           	opt stack 0
  3138  000070                     __doprnt@ap:
  3139                           	opt stack 0
  3140                           
  3141                           ; 2 bytes @ 0x10
  3142  000070                     	ds	1
  3143  000071                     ??_I2C_Master_Init:
  3144  000071                     _setUmidade$1298:
  3145                           	opt stack 0
  3146  000071                     strstr@s2:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x11
  3150  000071                     	ds	1
  3151  000072                     ??___ftmul:
  3152  000072                     ??__doprnt:
  3153                           
  3154                           ; 1 bytes @ 0x12
  3155  000072                     	ds	1
  3156  000073                     ??_strstr:
  3157  000073                     _setUmidade$1299:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x13
  3161  000073                     	ds	1
  3162  000074                     findBufferSerial@key:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0x14
  3166  000074                     	ds	1
  3167  000075                     ___ftmul@exp:
  3168                           	opt stack 0
  3169  000075                     _setUmidade$1300:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x15
  3173  000075                     	ds	1
  3174  000076                     __doprnt@prec:
  3175                           	opt stack 0
  3176  000076                     ___ftmul@f3_as_product:
  3177                           	opt stack 0
  3178                           
  3179                           ; 3 bytes @ 0x16
  3180  000076                     	ds	1
  3181  000077                     setUmidade@_tmpajt:
  3182                           	opt stack 0
  3183  000077                     __doprnt@flag:
  3184                           	opt stack 0
  3185                           
  3186                           ; 1 bytes @ 0x17
  3187  000077                     	ds	1
  3188  000078                     setUmidade@_clim:
  3189                           	opt stack 0
  3190  000078                     __doprnt@val:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x18
  3194  000078                     	ds	1
  3195  000079                     setUmidade@_umd:
  3196                           	opt stack 0
  3197  000079                     ___ftmul@cntr:
  3198                           	opt stack 0
  3199                           
  3200                           ; 1 bytes @ 0x19
  3201  000079                     	ds	1
  3202  00007A                     ___ftmul@sign:
  3203                           	opt stack 0
  3204  00007A                     __doprnt@len:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x1A
  3208  00007A                     	ds	1
  3209  00007B                     ?___ftadd:
  3210                           	opt stack 0
  3211  00007B                     ___ftadd@f1:
  3212                           	opt stack 0
  3213                           
  3214                           ; 3 bytes @ 0x1B
  3215  00007B                     	ds	1
  3216  00007C                     __doprnt@cp:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0x1C
  3220  00007C                     	ds	2
  3221  00007E                     __doprnt@width:
  3222                           	opt stack 0
  3223  00007E                     ___ftadd@f2:
  3224                           	opt stack 0
  3225                           
  3226                           ; 3 bytes @ 0x1E
  3227  00007E                     	ds	2
  3228  000080                     __doprnt@c:
  3229                           	opt stack 0
  3230                           
  3231                           ; 1 bytes @ 0x20
  3232  000080                     	ds	1
  3233  000081                     ??___ftadd:
  3234  000081                     ?_printf:
  3235                           	opt stack 0
  3236  000081                     ?_sprintf:
  3237                           	opt stack 0
  3238  000081                     printf@f:
  3239                           	opt stack 0
  3240  000081                     sprintf@wh:
  3241                           	opt stack 0
  3242                           
  3243                           ; 2 bytes @ 0x21
  3244  000081                     	ds	2
  3245  000083                     sprintf@f:
  3246                           	opt stack 0
  3247                           
  3248                           ; 2 bytes @ 0x23
  3249  000083                     	ds	1
  3250  000084                     ___ftadd@sign:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x24
  3254  000084                     	ds	1
  3255  000085                     ___ftadd@exp2:
  3256                           	opt stack 0
  3257                           
  3258                           ; 1 bytes @ 0x25
  3259  000085                     	ds	1
  3260  000086                     ___ftadd@exp1:
  3261                           	opt stack 0
  3262                           
  3263                           ; 1 bytes @ 0x26
  3264  000086                     	ds	1
  3265  000087                     ?___ftdiv:
  3266                           	opt stack 0
  3267  000087                     ___ftdiv@f1:
  3268                           	opt stack 0
  3269                           
  3270                           ; 3 bytes @ 0x27
  3271  000087                     	ds	3
  3272  00008A                     ___ftdiv@f2:
  3273                           	opt stack 0
  3274                           
  3275                           ; 3 bytes @ 0x2A
  3276  00008A                     	ds	1
  3277  00008B                     sprintf@ap:
  3278                           	opt stack 0
  3279                           
  3280                           ; 2 bytes @ 0x2B
  3281  00008B                     	ds	2
  3282  00008D                     ??___ftdiv:
  3283  00008D                     sprintf@pb:
  3284                           	opt stack 0
  3285                           
  3286                           ; 4 bytes @ 0x2D
  3287  00008D                     	ds	3
  3288  000090                     ___ftdiv@cntr:
  3289                           	opt stack 0
  3290                           
  3291                           ; 1 bytes @ 0x30
  3292  000090                     	ds	1
  3293  000091                     ?_getIntJSON:
  3294                           	opt stack 0
  3295  000091                     getIntJSON@buff:
  3296                           	opt stack 0
  3297  000091                     getStringJSON@buff:
  3298                           	opt stack 0
  3299  000091                     setKeyStartReceiveSerial@start:
  3300                           	opt stack 0
  3301  000091                     ___ftdiv@f3:
  3302                           	opt stack 0
  3303                           
  3304                           ; 3 bytes @ 0x31
  3305  000091                     	ds	2
  3306  000093                     getIntJSON@key:
  3307                           	opt stack 0
  3308  000093                     getStringJSON@key:
  3309                           	opt stack 0
  3310                           
  3311                           ; 2 bytes @ 0x33
  3312  000093                     	ds	1
  3313  000094                     ___ftdiv@exp:
  3314                           	opt stack 0
  3315                           
  3316                           ; 1 bytes @ 0x34
  3317  000094                     	ds	1
  3318  000095                     ??_getIntJSON:
  3319  000095                     ___ftdiv@sign:
  3320                           	opt stack 0
  3321  000095                     getStringJSON@ret:
  3322                           	opt stack 0
  3323                           
  3324                           ; 2 bytes @ 0x35
  3325  000095                     	ds	1
  3326  000096                     ?___fttol:
  3327                           	opt stack 0
  3328  000096                     ___fttol@f1:
  3329                           	opt stack 0
  3330                           
  3331                           ; 3 bytes @ 0x36
  3332  000096                     	ds	1
  3333  000097                     ??_getStringJSON:
  3334  000097                     getIntJSON@expected:
  3335                           	opt stack 0
  3336                           
  3337                           ; 20 bytes @ 0x37
  3338  000097                     	ds	2
  3339  000099                     getStringJSON@res:
  3340                           	opt stack 0
  3341                           
  3342                           ; 25 bytes @ 0x39
  3343  000099                     	ds	1
  3344  00009A                     ??___fttol:
  3345                           
  3346                           ; 1 bytes @ 0x3A
  3347  00009A                     	ds	5
  3348  00009F                     ___fttol@sign1:
  3349                           	opt stack 0
  3350  00009F                     _criaCaracteresCGRAM$1229:
  3351                           	opt stack 0
  3352                           
  3353                           ; 2 bytes @ 0x3F
  3354  00009F                     	ds	1
  3355  0000A0                     ___fttol@lval:
  3356                           	opt stack 0
  3357                           
  3358                           ; 4 bytes @ 0x40
  3359  0000A0                     	ds	1
  3360  0000A1                     criaCaracteresCGRAM@k:
  3361                           	opt stack 0
  3362                           
  3363                           ; 1 bytes @ 0x41
  3364  0000A1                     	ds	1
  3365  0000A2                     criaCaracteresCGRAM@j:
  3366                           	opt stack 0
  3367                           
  3368                           ; 1 bytes @ 0x42
  3369  0000A2                     	ds	1
  3370  0000A3                     criaCaracteresCGRAM@i:
  3371                           	opt stack 0
  3372                           
  3373                           ; 1 bytes @ 0x43
  3374  0000A3                     	ds	1
  3375  0000A4                     ___fttol@exp1:
  3376                           	opt stack 0
  3377                           
  3378                           ; 1 bytes @ 0x44
  3379  0000A4                     	ds	1
  3380  0000A5                     _getSensors$1520:
  3381                           	opt stack 0
  3382                           
  3383                           ; 3 bytes @ 0x45
  3384  0000A5                     	ds	3
  3385  0000A8                     _getSensors$1522:
  3386                           	opt stack 0
  3387                           
  3388                           ; 3 bytes @ 0x48
  3389  0000A8                     	ds	3
  3390  0000AB                     _getSensors$1518:
  3391                           	opt stack 0
  3392  0000AB                     getIntJSON@aux:
  3393                           	opt stack 0
  3394                           
  3395                           ; 10 bytes @ 0x4B
  3396  0000AB                     	ds	2
  3397  0000AD                     getSensors@auxx:
  3398                           	opt stack 0
  3399                           
  3400                           ; 3 bytes @ 0x4D
  3401  0000AD                     	ds	3
  3402  0000B0                     _getSensors$2523:
  3403                           	opt stack 0
  3404                           
  3405                           ; 3 bytes @ 0x50
  3406  0000B0                     	ds	2
  3407  0000B2                     getStringJSON@expected:
  3408                           	opt stack 0
  3409                           
  3410                           ; 20 bytes @ 0x52
  3411  0000B2                     	ds	1
  3412  0000B3                     getSensors@i:
  3413                           	opt stack 0
  3414                           
  3415                           ; 1 bytes @ 0x53
  3416  0000B3                     	ds	1
  3417  0000B4                     getSensors@aux:
  3418                           	opt stack 0
  3419                           
  3420                           ; 3 bytes @ 0x54
  3421  0000B4                     	ds	1
  3422  0000B5                     getIntJSON@attr:
  3423                           	opt stack 0
  3424                           
  3425                           ; 20 bytes @ 0x55
  3426  0000B5                     	ds	8
  3427  0000BD                     printf@ap:
  3428                           	opt stack 0
  3429                           
  3430                           ; 2 bytes @ 0x5D
  3431  0000BD                     	ds	2
  3432  0000BF                     printf@pb:
  3433                           	opt stack 0
  3434                           
  3435                           ; 4 bytes @ 0x5F
  3436  0000BF                     	ds	4
  3437  0000C3                     ??_enviaDadosWifi:
  3438                           
  3439                           ; 1 bytes @ 0x63
  3440  0000C3                     	ds	2
  3441  0000C5                     enviaDadosWifi@AUX:
  3442                           	opt stack 0
  3443                           
  3444                           ; 15 bytes @ 0x65
  3445  0000C5                     	ds	1
  3446  0000C6                     getStringJSON@attr:
  3447                           	opt stack 0
  3448                           
  3449                           ; 20 bytes @ 0x66
  3450  0000C6                     	ds	3
  3451  0000C9                     getIntJSON@value:
  3452                           	opt stack 0
  3453                           
  3454                           ; 2 bytes @ 0x69
  3455  0000C9                     	ds	2
  3456  0000CB                     getIntJSON@find:
  3457                           	opt stack 0
  3458                           
  3459                           ; 1 bytes @ 0x6B
  3460  0000CB                     	ds	1
  3461  0000CC                     getIntJSON@j:
  3462                           	opt stack 0
  3463                           
  3464                           ; 2 bytes @ 0x6C
  3465  0000CC                     	ds	2
  3466  0000CE                     getIntJSON@i:
  3467                           	opt stack 0
  3468                           
  3469                           ; 2 bytes @ 0x6E
  3470  0000CE                     	ds	6
  3471  0000D4                     _enviaDadosWifi$2522:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x74
  3475  0000D4                     	ds	2
  3476  0000D6                     enviaDadosWifi@j:
  3477                           	opt stack 0
  3478                           
  3479                           ; 1 bytes @ 0x76
  3480  0000D6                     	ds	1
  3481  0000D7                     enviaDadosWifi@men:
  3482                           	opt stack 0
  3483                           
  3484                           ; 1 bytes @ 0x77
  3485  0000D7                     	ds	1
  3486  0000D8                     enviaDadosWifi@i:
  3487                           	opt stack 0
  3488                           
  3489                           ; 1 bytes @ 0x78
  3490  0000D8                     	ds	1
  3491  0000D9                     enviaDadosWifi@i_1397:
  3492                           	opt stack 0
  3493                           
  3494                           ; 1 bytes @ 0x79
  3495  0000D9                     	ds	1
  3496  0000DA                     getStringJSON@isValid:
  3497                           	opt stack 0
  3498                           
  3499                           ; 1 bytes @ 0x7A
  3500  0000DA                     	ds	1
  3501  0000DB                     getStringJSON@j:
  3502                           	opt stack 0
  3503                           
  3504                           ; 2 bytes @ 0x7B
  3505  0000DB                     	ds	2
  3506  0000DD                     getStringJSON@find:
  3507                           	opt stack 0
  3508                           
  3509                           ; 1 bytes @ 0x7D
  3510  0000DD                     	ds	1
  3511  0000DE                     getStringJSON@i:
  3512                           	opt stack 0
  3513                           
  3514                           ; 2 bytes @ 0x7E
  3515  0000DE                     	ds	2
  3516  0000E0                     alterarDadosConexaoConfigWifi@port:
  3517                           	opt stack 0
  3518                           
  3519                           ; 2 bytes @ 0x80
  3520  0000E0                     	ds	2
  3521  0000E2                     alterarDadosConexaoConfigWifi@i:
  3522                           	opt stack 0
  3523                           
  3524                           ; 1 bytes @ 0x82
  3525  0000E2                     	ds	1
  3526  0000E3                     ??_main:
  3527                           
  3528                           ; 1 bytes @ 0x83
  3529  0000E3                     	ds	1
  3530  0000E4                     _main$2524:
  3531                           	opt stack 0
  3532                           
  3533                           ; 2 bytes @ 0x84
  3534  0000E4                     	ds	2
  3535  0000E6                     _main$1631:
  3536                           	opt stack 0
  3537                           
  3538                           ; 2 bytes @ 0x86
  3539  0000E6                     	ds	2
  3540  0000E8                     _main$1632:
  3541                           	opt stack 0
  3542                           
  3543                           ; 2 bytes @ 0x88
  3544  0000E8                     	ds	2
  3545  0000EA                     _main$1635:
  3546                           	opt stack 0
  3547                           
  3548                           ; 2 bytes @ 0x8A
  3549  0000EA                     	ds	2
  3550  0000EC                     _main$1640:
  3551                           	opt stack 0
  3552                           
  3553                           ; 2 bytes @ 0x8C
  3554  0000EC                     	ds	2
  3555  0000EE                     _main$1647:
  3556                           	opt stack 0
  3557                           
  3558                           ; 2 bytes @ 0x8E
  3559  0000EE                     	ds	2
  3560  0000F0                     _main$1652:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x90
  3564  0000F0                     	ds	2
  3565  0000F2                     _main$1657:
  3566                           	opt stack 0
  3567                           
  3568                           ; 2 bytes @ 0x92
  3569  0000F2                     	ds	2
  3570  0000F4                     main@i:
  3571                           	opt stack 0
  3572                           
  3573                           ; 1 bytes @ 0x94
  3574  0000F4                     	ds	1
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           postdec1	equ	0xFE5
  3582                           fsr1l	equ	0xFE1
  3583                           
  3584                           	psect	cstackCOMRAM
  3585  000001                     __pcstackCOMRAM:
  3586                           	opt stack 0
  3587  000001                     ??i2_I2C_Wait:
  3588  000001                     ?i2_strlen:
  3589                           	opt stack 0
  3590  000001                     i2delay@x:
  3591                           	opt stack 0
  3592  000001                     i2strlen@s:
  3593                           	opt stack 0
  3594                           
  3595                           ; 2 bytes @ 0x0
  3596  000001                     	ds	1
  3597  000002                     ?i2_I2C_Read:
  3598                           	opt stack 0
  3599  000002                     i2I2C_Write@d:
  3600                           	opt stack 0
  3601  000002                     i2I2C_Read@a:
  3602                           	opt stack 0
  3603                           
  3604                           ; 2 bytes @ 0x1
  3605  000002                     	ds	1
  3606  000003                     ??i2_delay:
  3607  000003                     ??i2_strlen:
  3608                           
  3609                           ; 1 bytes @ 0x2
  3610  000003                     	ds	1
  3611  000004                     i2writeEEPROM_ext@data:
  3612                           	opt stack 0
  3613  000004                     i2I2C_Read@temp:
  3614                           	opt stack 0
  3615                           
  3616                           ; 2 bytes @ 0x3
  3617  000004                     	ds	1
  3618  000005                     i2writeEEPROM_ext@adress:
  3619                           	opt stack 0
  3620  000005                     i2strlen@cp:
  3621                           	opt stack 0
  3622                           
  3623                           ; 2 bytes @ 0x4
  3624  000005                     	ds	1
  3625  000006                     i2setRangeValor@_var_ajt:
  3626                           	opt stack 0
  3627                           
  3628                           ; 2 bytes @ 0x5
  3629  000006                     	ds	1
  3630  000007                     ??_receiveByteSerial:
  3631                           
  3632                           ; 1 bytes @ 0x6
  3633  000007                     	ds	1
  3634  000008                     i2setRangeValor@_min:
  3635                           	opt stack 0
  3636                           
  3637                           ; 1 bytes @ 0x7
  3638  000008                     	ds	1
  3639  000009                     receiveByteSerial@byte:
  3640                           	opt stack 0
  3641  000009                     i2setRangeValor@_max:
  3642                           	opt stack 0
  3643                           
  3644                           ; 1 bytes @ 0x8
  3645  000009                     	ds	1
  3646  00000A                     i2setRangeValor@end_eeprom:
  3647                           	opt stack 0
  3648                           
  3649                           ; 1 bytes @ 0x9
  3650  00000A                     	ds	1
  3651  00000B                     ??i2_setRangeValor:
  3652                           
  3653                           ; 1 bytes @ 0xA
  3654  00000B                     	ds	3
  3655  00000E                     i2setRangeValor@_acao:
  3656                           	opt stack 0
  3657                           
  3658                           ; 1 bytes @ 0xD
  3659  00000E                     	ds	1
  3660  00000F                     i2setRangeValor@_aux:
  3661                           	opt stack 0
  3662                           
  3663                           ; 2 bytes @ 0xE
  3664  00000F                     	ds	2
  3665  000011                     ??_timer:
  3666                           
  3667                           ; 1 bytes @ 0x10
  3668  000011                     	ds	7
  3669  000018                     _timer$1414:
  3670                           	opt stack 0
  3671                           
  3672                           ; 2 bytes @ 0x17
  3673  000018                     	ds	2
  3674  00001A                     _timer$1415:
  3675                           	opt stack 0
  3676                           
  3677                           ; 2 bytes @ 0x19
  3678  00001A                     	ds	2
  3679  00001C                     _timer$1416:
  3680                           	opt stack 0
  3681                           
  3682                           ; 2 bytes @ 0x1B
  3683  00001C                     	ds	2
  3684  00001E                     ??_TIMER0:
  3685                           
  3686                           ; 1 bytes @ 0x1D
  3687  00001E                     	ds	18
  3688  000030                     TIMER0@c:
  3689                           	opt stack 0
  3690                           
  3691                           ; 1 bytes @ 0x2F
  3692  000030                     	ds	1
  3693                           tblptru	equ	0xFF8
  3694                           tblptrh	equ	0xFF7
  3695                           tblptrl	equ	0xFF6
  3696                           tablat	equ	0xFF5
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           fsr1l	equ	0xFE1
  3701                           
  3702 ;;
  3703 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3704 ;;
  3705 ;; *************** function _main *****************
  3706 ;; Defined at:
  3707 ;;		line 33 in file "src/main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  i               1  148[BANK0 ] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         0       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3723 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3724 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3725 ;;Total ram usage:       18 bytes
  3726 ;; Hardware stack levels required when called:   11
  3727 ;; This function calls:
  3728 ;;		_I2C_Master_Init
  3729 ;;		_Lcd_Clear
  3730 ;;		_Lcd_Init
  3731 ;;		_UART_Init
  3732 ;;		___wmul
  3733 ;;		_alterarDadosConexaoConfigWifi
  3734 ;;		_atualizaLCD
  3735 ;;		_blink
  3736 ;;		_btPress
  3737 ;;		_climaAtual
  3738 ;;		_controle
  3739 ;;		_criaCaracteresCGRAM
  3740 ;;		_delay
  3741 ;;		_enviaDadosWifi
  3742 ;;		_faseAtual
  3743 ;;		_getSensors
  3744 ;;		_printf
  3745 ;;		_readEEPROM16_ext
  3746 ;;		_readEEPROM_ext
  3747 ;;		_setRangeValor
  3748 ;;		_setUmidade
  3749 ;;		_sprintf
  3750 ;;		_updateLeds
  3751 ;;		_writeEEPROM_ext
  3752 ;; This function is called by:
  3753 ;;		Startup code after reset
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text0
  3758  000012                     __ptext0:
  3759                           	opt stack 0
  3760  000012                     _main:
  3761                           	opt stack 20
  3762                           
  3763                           ;main.c: 36: TRISAbits.RA5 = 0;
  3764                           
  3765                           ;incstack = 0
  3766  000012  9A92               	bcf	3986,5,c	;volatile
  3767                           
  3768                           ;main.c: 37: TRISCbits.RC2 = 0;
  3769  000014  9494               	bcf	3988,2,c	;volatile
  3770                           
  3771                           ;main.c: 38: TRISEbits.RE0 = 0;
  3772  000016  9096               	bcf	3990,0,c	;volatile
  3773                           
  3774                           ;main.c: 39: TRISDbits.RD0 = 0;
  3775  000018  9095               	bcf	3989,0,c	;volatile
  3776                           
  3777                           ;main.c: 40: TRISCbits.RC1 = 0;
  3778  00001A  9294               	bcf	3988,1,c	;volatile
  3779                           
  3780                           ;main.c: 41: TRISDbits.RD1 = 0;
  3781  00001C  9295               	bcf	3989,1,c	;volatile
  3782                           
  3783                           ;main.c: 42: TRISCbits.RC0 = 1;
  3784  00001E  8094               	bsf	3988,0,c	;volatile
  3785                           
  3786                           ;main.c: 44: PORTAbits.RA5 = 0;
  3787  000020  9A80               	bcf	3968,5,c	;volatile
  3788                           
  3789                           ;main.c: 45: PORTCbits.RC2 = 0;
  3790  000022  9482               	bcf	3970,2,c	;volatile
  3791                           
  3792                           ;main.c: 46: PORTEbits.RE0 = 0;
  3793  000024  9084               	bcf	3972,0,c	;volatile
  3794                           
  3795                           ;main.c: 47: PORTDbits.RD0 = 0;
  3796  000026  9083               	bcf	3971,0,c	;volatile
  3797                           
  3798                           ;main.c: 48: PORTCbits.RC1 = 0;
  3799  000028  9282               	bcf	3970,1,c	;volatile
  3800                           
  3801                           ;main.c: 49: PORTDbits.RD1 = 0;
  3802  00002A  9283               	bcf	3971,1,c	;volatile
  3803                           
  3804                           ;main.c: 53: TRISAbits.RA4 = 0;
  3805  00002C  9892               	bcf	3986,4,c	;volatile
  3806                           
  3807                           ;main.c: 54: LATAbits.LATA4 = 0;
  3808  00002E  9889               	bcf	3977,4,c	;volatile
  3809                           
  3810                           ;main.c: 58: TRISBbits.RB5 = 0;
  3811  000030  9A93               	bcf	3987,5,c	;volatile
  3812                           
  3813                           ;main.c: 59: LATBbits.LATB5 = 0;
  3814  000032  9A8A               	bcf	3978,5,c	;volatile
  3815                           
  3816                           ;main.c: 63: TRISBbits.RB2 = 1;
  3817  000034  8493               	bsf	3987,2,c	;volatile
  3818                           
  3819                           ;main.c: 64: INTCON2bits.INTEDG2 = 0;
  3820  000036  98F1               	bcf	intcon2,4,c	;volatile
  3821                           
  3822                           ;main.c: 65: INTCON2bits.RBIP = 0;
  3823  000038  90F1               	bcf	intcon2,0,c	;volatile
  3824                           
  3825                           ;main.c: 66: INTCON3bits.INT2IE = 1;
  3826  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3827                           
  3828                           ;main.c: 69: TRISAbits.RA0 = 1;
  3829  00003C  8092               	bsf	3986,0,c	;volatile
  3830                           
  3831                           ;main.c: 70: PORTAbits.AN0 = 0;
  3832  00003E  9080               	bcf	3968,0,c	;volatile
  3833                           
  3834                           ;main.c: 71: TRISAbits.RA1 = 1;
  3835  000040  8292               	bsf	3986,1,c	;volatile
  3836                           
  3837                           ;main.c: 72: PORTAbits.AN1 = 0;
  3838  000042  9280               	bcf	3968,1,c	;volatile
  3839                           
  3840                           ;main.c: 73: TRISAbits.RA2 = 1;
  3841  000044  8492               	bsf	3986,2,c	;volatile
  3842                           
  3843                           ;main.c: 74: PORTAbits.AN2 = 0;
  3844  000046  9480               	bcf	3968,2,c	;volatile
  3845                           
  3846                           ;main.c: 79: T0CON = 0x81;
  3847  000048  0E81               	movlw	129
  3848  00004A  6ED5               	movwf	4053,c	;volatile
  3849                           
  3850                           ;main.c: 80: INTCON = 0xE4;
  3851  00004C  0EE4               	movlw	228
  3852  00004E  6EF2               	movwf	intcon,c	;volatile
  3853                           
  3854                           ;main.c: 83: ADCON0 = 0x01;
  3855  000050  0E01               	movlw	1
  3856  000052  6EC2               	movwf	4034,c	;volatile
  3857                           
  3858                           ;main.c: 84: ADCON1 = 0x0C;
  3859  000054  0E0C               	movlw	12
  3860  000056  6EC1               	movwf	4033,c	;volatile
  3861                           
  3862                           ;main.c: 85: ADCON2 = 0xB5;
  3863  000058  0EB5               	movlw	181
  3864  00005A  6EC0               	movwf	4032,c	;volatile
  3865                           
  3866                           ;main.c: 88: UART_Init();
  3867  00005C  EC4F  F02F         	call	_UART_Init	;wreg free
  3868                           
  3869                           ;main.c: 89: printf("AT+RST\r\n");
  3870  000060  0E33               	movlw	low STR_83
  3871  000062  0100               	movlb	0	; () banked
  3872  000064  6F81               	movwf	printf@f& (0+255),b
  3873  000066  0E7F               	movlw	high STR_83
  3874  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3875  00006A  EC8C  F02D         	call	_printf	;wreg free
  3876                           
  3877                           ;main.c: 90: delay(200);
  3878  00006E  0E00               	movlw	0
  3879  000070  0100               	movlb	0	; () banked
  3880  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3881  000074  0EC8               	movlw	200
  3882  000076  6F60               	movwf	delay@x& (0+255),b
  3883  000078  EC86  F02E         	call	_delay	;wreg free
  3884                           
  3885                           ;main.c: 92: Lcd_Init();
  3886  00007C  ECDB  F02A         	call	_Lcd_Init	;wreg free
  3887                           
  3888                           ;main.c: 93: Lcd_Clear();
  3889  000080  EC77  F02F         	call	_Lcd_Clear	;wreg free
  3890                           
  3891                           ;main.c: 94: criaCaracteresCGRAM();
  3892  000084  ECBE  F028         	call	_criaCaracteresCGRAM	;wreg free
  3893                           
  3894                           ;main.c: 95: I2C_Master_Init(1000000);
  3895  000088  0E40               	movlw	64
  3896  00008A  0100               	movlb	0	; () banked
  3897  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3898  00008E  0E42               	movlw	66
  3899  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3900  000092  0E0F               	movlw	15
  3901  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3902  000096  0E00               	movlw	0
  3903  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3904  00009A  EC97  F02B         	call	_I2C_Master_Init	;wreg free
  3905                           
  3906                           ;main.c: 96: delay(150);
  3907  00009E  0E00               	movlw	0
  3908  0000A0  0100               	movlb	0	; () banked
  3909  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3910  0000A4  0E96               	movlw	150
  3911  0000A6  6F60               	movwf	delay@x& (0+255),b
  3912  0000A8  EC86  F02E         	call	_delay	;wreg free
  3913                           
  3914                           ;main.c: 99: sprintf(line1, " TECHNOW Tecnologia");
  3915  0000AC  0E95               	movlw	low _line1
  3916  0000AE  0100               	movlb	0	; () banked
  3917  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3918  0000B2  0E01               	movlw	high _line1
  3919  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3920  0000B6  0EBD               	movlw	low STR_84
  3921  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3922  0000BA  0E7C               	movlw	high STR_84
  3923  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3924  0000BE  EC08  F02D         	call	_sprintf	;wreg free
  3925                           
  3926                           ;main.c: 100: sprintf(line3, "Versao Soft.:");
  3927  0000C2  0E6B               	movlw	low _line3
  3928  0000C4  0100               	movlb	0	; () banked
  3929  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3930  0000C8  0E01               	movlw	high _line3
  3931  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3932  0000CC  0E83               	movlw	low STR_85
  3933  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  3934  0000D0  0E7E               	movlw	high STR_85
  3935  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3936  0000D4  EC08  F02D         	call	_sprintf	;wreg free
  3937                           
  3938                           ;main.c: 101: sprintf(&line4[9], "%s", "Jul 16 2020");
  3939  0000D8  0E5F               	movlw	low (_line4+9)
  3940  0000DA  0100               	movlb	0	; () banked
  3941  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  3942  0000DE  0E01               	movlw	high (_line4+9)
  3943  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3944  0000E2  0E12               	movlw	low (STR_97+7)
  3945  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  3946  0000E6  0E7F               	movlw	high (STR_97+7)
  3947  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3948  0000EA  0E91               	movlw	low STR_70
  3949  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  3950  0000EE  0E7E               	movlw	high STR_70
  3951  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  3952  0000F2  EC08  F02D         	call	_sprintf	;wreg free
  3953                           
  3954                           ;main.c: 102: atualizaLCD(line1, line2, line3, line4);
  3955  0000F6  0E95               	movlw	low _line1
  3956  0000F8  0100               	movlb	0	; () banked
  3957  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  3958  0000FC  0E01               	movlw	high _line1
  3959  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  3960  000100  0E80               	movlw	low _line2
  3961  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  3962  000104  0E01               	movlw	high _line2
  3963  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  3964  000108  0E6B               	movlw	low _line3
  3965  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  3966  00010C  0E01               	movlw	high _line3
  3967  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  3968  000110  0E56               	movlw	low _line4
  3969  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  3970  000114  0E01               	movlw	high _line4
  3971  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  3972  000118  ECEB  F026         	call	_atualizaLCD	;wreg free
  3973                           
  3974                           ;main.c: 103: delay(300);
  3975  00011C  0E01               	movlw	1
  3976  00011E  0100               	movlb	0	; () banked
  3977  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  3978  000122  0E2C               	movlw	44
  3979  000124  6F60               	movwf	delay@x& (0+255),b
  3980  000126  EC86  F02E         	call	_delay	;wreg free
  3981                           
  3982                           ;main.c: 104: LATBbits.LATB5 = 1;
  3983  00012A  8A8A               	bsf	3978,5,c	;volatile
  3984                           
  3985                           ;main.c: 105: delay(2450);
  3986  00012C  0E09               	movlw	9
  3987  00012E  0100               	movlb	0	; () banked
  3988  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  3989  000132  0E92               	movlw	146
  3990  000134  6F60               	movwf	delay@x& (0+255),b
  3991  000136  EC86  F02E         	call	_delay	;wreg free
  3992                           
  3993                           ;main.c: 107: tempajt = readEEPROM_ext(1);
  3994  00013A  0E01               	movlw	1
  3995  00013C  EC92  F02C         	call	_readEEPROM_ext
  3996  000140  0100               	movlb	0	; () banked
  3997  000142  6FF6               	movwf	_tempajt& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;main.c: 108: umidajt = readEEPROM_ext(2);
  4001  000144  0E02               	movlw	2
  4002  000146  EC92  F02C         	call	_readEEPROM_ext
  4003  00014A  0100               	movlb	0	; () banked
  4004  00014C  6FF5               	movwf	_umidajt& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 109: trava_fase = readEEPROM_ext(3);
  4008  00014E  0E03               	movlw	3
  4009  000150  EC92  F02C         	call	_readEEPROM_ext
  4010  000154  6E59               	movwf	_trava_fase,c
  4011                           
  4012                           ;main.c: 110: fase = readEEPROM_ext(4);
  4013  000156  0E04               	movlw	4
  4014  000158  EC92  F02C         	call	_readEEPROM_ext
  4015  00015C  0100               	movlb	0	; () banked
  4016  00015E  6FF8               	movwf	_fase& (0+255),b
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;main.c: 111: clima = readEEPROM_ext(5);
  4020  000160  0E05               	movlw	5
  4021  000162  EC92  F02C         	call	_readEEPROM_ext
  4022  000166  0100               	movlb	0	; () banked
  4023  000168  6FF7               	movwf	_clima& (0+255),b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;main.c: 112: tipo_modo_trabalho = readEEPROM_ext(6);
  4027  00016A  0E06               	movlw	6
  4028  00016C  EC92  F02C         	call	_readEEPROM_ext
  4029  000170  6E58               	movwf	_tipo_modo_trabalho,c
  4030                           
  4031                           ;main.c: 113: tipo_sensor_umidade = readEEPROM_ext(7);
  4032  000172  0E07               	movlw	7
  4033  000174  EC92  F02C         	call	_readEEPROM_ext
  4034  000178  0100               	movlb	0	; () banked
  4035  00017A  6FFB               	movwf	_tipo_sensor_umidade& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 114: t_fim_fase1 = readEEPROM_ext(8);
  4039  00017C  0E08               	movlw	8
  4040  00017E  EC92  F02C         	call	_readEEPROM_ext
  4041  000182  6E57               	movwf	_t_fim_fase1,c
  4042                           
  4043                           ;main.c: 115: t_fim_fase2 = readEEPROM_ext(9);
  4044  000184  0E09               	movlw	9
  4045  000186  EC92  F02C         	call	_readEEPROM_ext
  4046  00018A  6E56               	movwf	_t_fim_fase2,c
  4047                           
  4048                           ;main.c: 116: t_fim_fase3 = readEEPROM_ext(10);
  4049  00018C  0E0A               	movlw	10
  4050  00018E  EC92  F02C         	call	_readEEPROM_ext
  4051  000192  6E55               	movwf	_t_fim_fase3,c
  4052                           
  4053                           ;main.c: 117: h_venotinha = readEEPROM_ext(11);
  4054  000194  0E0B               	movlw	11
  4055  000196  EC92  F02C         	call	_readEEPROM_ext
  4056  00019A  6E51               	movwf	_h_venotinha,c
  4057                           
  4058                           ;main.c: 118: h_abafador = readEEPROM_ext(12);
  4059  00019C  0E0C               	movlw	12
  4060  00019E  EC92  F02C         	call	_readEEPROM_ext
  4061  0001A2  6E50               	movwf	_h_abafador,c
  4062                           
  4063                           ;main.c: 119: h_flap = readEEPROM_ext(13);
  4064  0001A4  0E0D               	movlw	13
  4065  0001A6  EC92  F02C         	call	_readEEPROM_ext
  4066  0001AA  6E4F               	movwf	_h_flap,c
  4067                           
  4068                           ;main.c: 120: buzzer = readEEPROM_ext(14);
  4069  0001AC  0E0E               	movlw	14
  4070  0001AE  EC92  F02C         	call	_readEEPROM_ext
  4071  0001B2  0100               	movlb	0	; () banked
  4072  0001B4  6FFC               	movwf	_buzzer& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;main.c: 121: fornalha = readEEPROM_ext(15);
  4076  0001B6  0E0F               	movlw	15
  4077  0001B8  EC92  F02C         	call	_readEEPROM_ext
  4078  0001BC  6E5A               	movwf	_fornalha,c
  4079                           
  4080                           ;main.c: 122: h_modo_seguranca = readEEPROM_ext(16);
  4081  0001BE  0E10               	movlw	16
  4082  0001C0  EC92  F02C         	call	_readEEPROM_ext
  4083  0001C4  6E52               	movwf	_h_modo_seguranca,c
  4084                           
  4085                           ;main.c: 123: h_buzzer = readEEPROM_ext(17);
  4086  0001C6  0E11               	movlw	17
  4087  0001C8  EC92  F02C         	call	_readEEPROM_ext
  4088  0001CC  6E4E               	movwf	_h_buzzer,c
  4089                           
  4090                           ;main.c: 124: t_flap_ligado = readEEPROM_ext(18);
  4091  0001CE  0E12               	movlw	18
  4092  0001D0  EC92  F02C         	call	_readEEPROM_ext
  4093  0001D4  6E54               	movwf	_t_flap_ligado,c
  4094                           
  4095                           ;main.c: 125: t_flap_intervalo = readEEPROM_ext(20);
  4096  0001D6  0E14               	movlw	20
  4097  0001D8  EC92  F02C         	call	_readEEPROM_ext
  4098  0001DC  6E53               	movwf	_t_flap_intervalo,c
  4099                           
  4100                           ;main.c: 126: t_buzzer_religar = readEEPROM_ext(21);
  4101  0001DE  0E15               	movlw	21
  4102  0001E0  EC92  F02C         	call	_readEEPROM_ext
  4103  0001E4  0100               	movlb	0	; () banked
  4104  0001E6  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 127: t_temp_automatica = readEEPROM_ext(22);
  4108  0001E8  0E16               	movlw	22
  4109  0001EA  EC92  F02C         	call	_readEEPROM_ext
  4110  0001EE  0100               	movlb	0	; () banked
  4111  0001F0  6FFA               	movwf	_t_temp_automatica& (0+255),b
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 128: wifi_habilita_alteracao = readEEPROM_ext(23);
  4115  0001F2  0E17               	movlw	23
  4116  0001F4  EC92  F02C         	call	_readEEPROM_ext
  4117  0001F8  6E4C               	movwf	_wifi_habilita_alteracao,c
  4118                           
  4119                           ;main.c: 129: wifi_SENHA = readEEPROM_ext(25);
  4120  0001FA  0E19               	movlw	25
  4121  0001FC  EC92  F02C         	call	_readEEPROM_ext
  4122  000200  0100               	movlb	0	; () banked
  4123  000202  6FE3               	movwf	??_main& (0+255),b
  4124  000204  51E3               	movf	??_main& (0+255),w,b
  4125  000206  6E49               	movwf	_wifi_SENHA,c
  4126  000208  6A4A               	clrf	_wifi_SENHA+1,c
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;main.c: 130: h_subir_temp_automatica = readEEPROM_ext(27);
  4130  00020A  0E1B               	movlw	27
  4131  00020C  EC92  F02C         	call	_readEEPROM_ext
  4132  000210  6E4D               	movwf	_h_subir_temp_automatica,c
  4133                           
  4134                           ;main.c: 131: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4135  000212  0E1C               	movlw	28
  4136  000214  EC92  F02C         	call	_readEEPROM_ext
  4137  000218  0100               	movlb	0	; () banked
  4138  00021A  6FF9               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;main.c: 133: char i = 0;
  4142  00021C  0E00               	movlw	0
  4143  00021E  6FF4               	movwf	main@i& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;main.c: 134: for (i = 0; i < 15; i++) {
  4147  000220  0E00               	movlw	0
  4148  000222  6FF4               	movwf	main@i& (0+255),b
  4149  000224                     l9450:
  4150                           
  4151                           ; BSR set to: 0
  4152  000224  0E0E               	movlw	14
  4153  000226  65F4               	cpfsgt	main@i& (0+255),b
  4154  000228  D001               	goto	l1259
  4155  00022A  D010               	goto	u14480
  4156  00022C                     l1259:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;main.c: 135: ssid[i] = (char) readEEPROM_ext(40 + i);
  4160                           
  4161                           ; BSR set to: 0
  4162  00022C  51F4               	movf	main@i& (0+255),w,b
  4163  00022E  0D01               	mullw	1
  4164  000230  0ECD               	movlw	low _ssid
  4165  000232  24F3               	addwf	prodl,w,c
  4166  000234  6ED9               	movwf	fsr2l,c
  4167  000236  0E01               	movlw	high _ssid
  4168  000238  20F4               	addwfc	prodh,w,c
  4169  00023A  6EDA               	movwf	fsr2h,c
  4170  00023C  51F4               	movf	main@i& (0+255),w,b
  4171  00023E  0F28               	addlw	40
  4172  000240  EC92  F02C         	call	_readEEPROM_ext
  4173  000244  6EDF               	movwf	indf2,c
  4174  000246  0100               	movlb	0	; () banked
  4175  000248  2BF4               	incf	main@i& (0+255),f,b
  4176  00024A  D7EC               	goto	l9450
  4177  00024C                     u14480:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;main.c: 136: }
  4181                           ;main.c: 137: for (i = 0; i < 15; i++) {
  4182                           
  4183                           ; BSR set to: 0
  4184  00024C  0E00               	movlw	0
  4185  00024E  6FF4               	movwf	main@i& (0+255),b
  4186  000250                     l9462:
  4187                           
  4188                           ; BSR set to: 0
  4189  000250  0E0E               	movlw	14
  4190  000252  65F4               	cpfsgt	main@i& (0+255),b
  4191  000254  D001               	goto	l1261
  4192  000256  D010               	goto	u14500
  4193  000258                     l1261:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 138: senha[i] = (char) readEEPROM_ext(60 + i);
  4197                           
  4198                           ; BSR set to: 0
  4199  000258  51F4               	movf	main@i& (0+255),w,b
  4200  00025A  0D01               	mullw	1
  4201  00025C  0EBE               	movlw	low _senha
  4202  00025E  24F3               	addwf	prodl,w,c
  4203  000260  6ED9               	movwf	fsr2l,c
  4204  000262  0E01               	movlw	high _senha
  4205  000264  20F4               	addwfc	prodh,w,c
  4206  000266  6EDA               	movwf	fsr2h,c
  4207  000268  51F4               	movf	main@i& (0+255),w,b
  4208  00026A  0F3C               	addlw	60
  4209  00026C  EC92  F02C         	call	_readEEPROM_ext
  4210  000270  6EDF               	movwf	indf2,c
  4211  000272  0100               	movlb	0	; () banked
  4212  000274  2BF4               	incf	main@i& (0+255),f,b
  4213  000276  D7EC               	goto	l9462
  4214  000278                     u14500:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 139: }
  4218                           ;main.c: 140: for (i = 0; i < 20; i++) {
  4219                           
  4220                           ; BSR set to: 0
  4221  000278  0E00               	movlw	0
  4222  00027A  6FF4               	movwf	main@i& (0+255),b
  4223  00027C                     l9474:
  4224                           
  4225                           ; BSR set to: 0
  4226  00027C  0E13               	movlw	19
  4227  00027E  65F4               	cpfsgt	main@i& (0+255),b
  4228  000280  D001               	goto	l1263
  4229  000282  D010               	goto	u14520
  4230  000284                     l1263:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 141: ipServer[i] = (char) readEEPROM_ext(80 + i);
  4234                           
  4235                           ; BSR set to: 0
  4236  000284  51F4               	movf	main@i& (0+255),w,b
  4237  000286  0D01               	mullw	1
  4238  000288  0EAA               	movlw	low _ipServer
  4239  00028A  24F3               	addwf	prodl,w,c
  4240  00028C  6ED9               	movwf	fsr2l,c
  4241  00028E  0E01               	movlw	high _ipServer
  4242  000290  20F4               	addwfc	prodh,w,c
  4243  000292  6EDA               	movwf	fsr2h,c
  4244  000294  51F4               	movf	main@i& (0+255),w,b
  4245  000296  0F50               	addlw	80
  4246  000298  EC92  F02C         	call	_readEEPROM_ext
  4247  00029C  6EDF               	movwf	indf2,c
  4248  00029E  0100               	movlb	0	; () banked
  4249  0002A0  2BF4               	incf	main@i& (0+255),f,b
  4250  0002A2  D7EC               	goto	l9474
  4251  0002A4                     u14520:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;main.c: 142: }
  4255                           ;main.c: 143: portServer = readEEPROM16_ext(105);
  4256                           
  4257                           ; BSR set to: 0
  4258  0002A4  0E69               	movlw	105
  4259  0002A6  ECC4  F02D         	call	_readEEPROM16_ext
  4260  0002AA  C067  F033         	movff	?_readEEPROM16_ext,_portServer
  4261  0002AE  C068  F034         	movff	?_readEEPROM16_ext+1,_portServer+1
  4262                           
  4263                           ;main.c: 145: i = readEEPROM_ext(30);
  4264  0002B2  0E1E               	movlw	30
  4265  0002B4  EC92  F02C         	call	_readEEPROM_ext
  4266  0002B8  0100               	movlb	0	; () banked
  4267  0002BA  6FF4               	movwf	main@i& (0+255),b
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;main.c: 146: if (i != 187) {
  4271  0002BC  0EBB               	movlw	187
  4272  0002BE  19F4               	xorwf	main@i& (0+255),w,b
  4273  0002C0  B4D8               	btfsc	status,2,c
  4274  0002C2  D02C               	goto	l1268
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 147: writeEEPROM_ext(30, 187);
  4278  0002C4  0EBB               	movlw	187
  4279  0002C6  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4280  0002C8  0E1E               	movlw	30
  4281  0002CA  EC4C  F02D         	call	_writeEEPROM_ext
  4282  0002CE                     l1266:
  4283  0002CE  0004               	clrwdt		;# 
  4284                           
  4285                           ;main.c: 150: sprintf(line4, "ERRO EEPROM");
  4286  0002D0  0E56               	movlw	low _line4
  4287  0002D2  0100               	movlb	0	; () banked
  4288  0002D4  6F81               	movwf	sprintf@wh& (0+255),b
  4289  0002D6  0E01               	movlw	high _line4
  4290  0002D8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4291  0002DA  0E9D               	movlw	low STR_88
  4292  0002DC  6F83               	movwf	sprintf@f& (0+255),b
  4293  0002DE  0E7E               	movlw	high STR_88
  4294  0002E0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4295  0002E2  EC08  F02D         	call	_sprintf	;wreg free
  4296                           
  4297                           ;main.c: 151: atualizaLCD(line1, line2, line3, line4);
  4298  0002E6  0E95               	movlw	low _line1
  4299  0002E8  0100               	movlb	0	; () banked
  4300  0002EA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4301  0002EC  0E01               	movlw	high _line1
  4302  0002EE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4303  0002F0  0E80               	movlw	low _line2
  4304  0002F2  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4305  0002F4  0E01               	movlw	high _line2
  4306  0002F6  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4307  0002F8  0E6B               	movlw	low _line3
  4308  0002FA  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4309  0002FC  0E01               	movlw	high _line3
  4310  0002FE  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4311  000300  0E56               	movlw	low _line4
  4312  000302  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4313  000304  0E01               	movlw	high _line4
  4314  000306  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4315  000308  ECEB  F026         	call	_atualizaLCD	;wreg free
  4316                           
  4317                           ;main.c: 152: delay(3000);
  4318  00030C  0E0B               	movlw	11
  4319  00030E  0100               	movlb	0	; () banked
  4320  000310  6F61               	movwf	(delay@x+1)& (0+255),b
  4321  000312  0EB8               	movlw	184
  4322  000314  6F60               	movwf	delay@x& (0+255),b
  4323  000316  EC86  F02E         	call	_delay	;wreg free
  4324  00031A  D7D9               	goto	l1266
  4325  00031C                     l1268:
  4326                           
  4327                           ;main.c: 163: if (RCSTAbits.OERR) {
  4328                           
  4329                           ;main.c: 153: }
  4330                           ;main.c: 154: }
  4331                           ;main.c: 156: while (1) {
  4332  00031C  A2AB               	btfss	4011,1,c	;volatile
  4333  00031E  D002               	goto	l1270
  4334                           
  4335                           ;main.c: 164: RCSTAbits.CREN = 0;
  4336  000320  98AB               	bcf	4011,4,c	;volatile
  4337                           
  4338                           ;main.c: 165: RCSTAbits.CREN = 1;
  4339  000322  88AB               	bsf	4011,4,c	;volatile
  4340  000324                     l1270:
  4341  000324  0004               	clrwdt		;# 
  4342                           
  4343                           ;main.c: 169: getSensors();
  4344  000326  EC72  F018         	call	_getSensors	;wreg free
  4345                           
  4346                           ;main.c: 170: controle();
  4347  00032A  EC66  F01D         	call	_controle	;wreg free
  4348                           
  4349                           ;main.c: 173: if (tipo_modo_trabalho == 1) {
  4350  00032E  0458               	decf	_tipo_modo_trabalho,w,c
  4351  000330  A4D8               	btfss	status,2,c
  4352  000332  D010               	goto	l1271
  4353                           
  4354                           ;main.c: 174: setUmidade('A', &umidajt, &tempajt, &clima);
  4355  000334  0EF5               	movlw	low _umidajt
  4356  000336  0100               	movlb	0	; () banked
  4357  000338  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4358  00033A  0E00               	movlw	high _umidajt
  4359  00033C  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4360  00033E  0EF6               	movlw	low _tempajt
  4361  000340  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4362  000342  0E00               	movlw	high _tempajt
  4363  000344  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4364  000346  0EF7               	movlw	low _clima
  4365  000348  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4366  00034A  0E00               	movlw	high _clima
  4367  00034C  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4368  00034E  0E41               	movlw	65
  4369  000350  EC15  F024         	call	_setUmidade
  4370  000354                     l1271:
  4371                           
  4372                           ;main.c: 175: }
  4373                           ;main.c: 177: faseAtual('F', &fase, &tempajt);
  4374  000354  0EF8               	movlw	low _fase
  4375  000356  0100               	movlb	0	; () banked
  4376  000358  6F60               	movwf	faseAtual@_fase& (0+255),b
  4377  00035A  0E00               	movlw	high _fase
  4378  00035C  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4379  00035E  0EF6               	movlw	low _tempajt
  4380  000360  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4381  000362  0E00               	movlw	high _tempajt
  4382  000364  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4383  000366  0E46               	movlw	70
  4384  000368  EC76  F023         	call	_faseAtual
  4385                           
  4386                           ;main.c: 179: if (menu != 10) {
  4387  00036C  0E0A               	movlw	10
  4388  00036E  0100               	movlb	0	; () banked
  4389  000370  19FD               	xorwf	_menu& (0+255),w,b
  4390  000372  A4D8               	btfss	status,2,c
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;main.c: 180: enviaDadosWifi();
  4394  000374  ECD3  F015         	call	_enviaDadosWifi	;wreg free
  4395                           
  4396                           ;main.c: 181: }
  4397                           ;main.c: 185: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4398  000378  0E04               	movlw	4
  4399  00037A  EC41  F02F         	call	_btPress
  4400  00037E  0900               	iorlw	0
  4401  000380  B4D8               	btfsc	status,2,c
  4402  000382  D352               	goto	l1274
  4403  000384  0E5A               	movlw	low _fornalha
  4404  000386  0100               	movlb	0	; () banked
  4405  000388  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4406  00038A  0E00               	movlw	high _fornalha
  4407  00038C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4408  00038E  0E00               	movlw	0
  4409  000390  6F67               	movwf	setRangeValor@_min& (0+255),b
  4410  000392  0E01               	movlw	1
  4411  000394  6F68               	movwf	setRangeValor@_max& (0+255),b
  4412  000396  0E0F               	movlw	15
  4413  000398  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4414  00039A  0E2B               	movlw	43
  4415  00039C  EC14  F029         	call	_setRangeValor
  4416                           
  4417                           ;main.c: 187: switch (menu) {
  4418  0003A0  D343               	goto	l1274
  4419  0003A2                     
  4420                           ;main.c: 189: sprintf(&line1[6], "|Sensor|Ajuste");
  4421  0003A2  0E9B               	movlw	low (_line1+6)
  4422  0003A4  0100               	movlb	0	; () banked
  4423  0003A6  6F81               	movwf	sprintf@wh& (0+255),b
  4424  0003A8  0E01               	movlw	high (_line1+6)
  4425  0003AA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4426  0003AC  0E20               	movlw	low STR_89
  4427  0003AE  6F83               	movwf	sprintf@f& (0+255),b
  4428  0003B0  0E7E               	movlw	high STR_89
  4429  0003B2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4430  0003B4  EC08  F02D         	call	_sprintf	;wreg free
  4431                           
  4432                           ;main.c: 190: line1[0] = 0x02;
  4433  0003B8  0E02               	movlw	2
  4434  0003BA  0101               	movlb	1	; () banked
  4435  0003BC  6F95               	movwf	_line1& (0+255),b
  4436                           
  4437                           ; BSR set to: 1
  4438                           ;main.c: 191: if (!buzzer) blink(line1, 1, 2);
  4439  0003BE  0100               	movlb	0	; () banked
  4440  0003C0  51FC               	movf	_buzzer& (0+255),w,b
  4441  0003C2  A4D8               	btfss	status,2,c
  4442  0003C4  D00A               	goto	l1276
  4443                           
  4444                           ; BSR set to: 0
  4445  0003C6  0E95               	movlw	low _line1
  4446  0003C8  6F60               	movwf	blink@line& (0+255),b
  4447  0003CA  0E01               	movlw	high _line1
  4448  0003CC  6F61               	movwf	(blink@line+1)& (0+255),b
  4449  0003CE  0E01               	movlw	1
  4450  0003D0  6F62               	movwf	blink@start& (0+255),b
  4451  0003D2  0E02               	movlw	2
  4452  0003D4  6F63               	movwf	blink@end& (0+255),b
  4453  0003D6  ECF7  F02D         	call	_blink	;wreg free
  4454  0003DA                     l1276:
  4455                           
  4456                           ;main.c: 192: line1[2] = 'F';
  4457  0003DA  0E46               	movlw	70
  4458  0003DC  0101               	movlb	1	; () banked
  4459  0003DE  6F97               	movwf	(_line1+2)& (0+255),b
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;main.c: 193: if (!fornalha) blink(line1, 2, 3);
  4463  0003E0  505A               	movf	_fornalha,w,c
  4464  0003E2  A4D8               	btfss	status,2,c
  4465  0003E4  D00B               	goto	l1277
  4466                           
  4467                           ; BSR set to: 1
  4468  0003E6  0E95               	movlw	low _line1
  4469  0003E8  0100               	movlb	0	; () banked
  4470  0003EA  6F60               	movwf	blink@line& (0+255),b
  4471  0003EC  0E01               	movlw	high _line1
  4472  0003EE  6F61               	movwf	(blink@line+1)& (0+255),b
  4473  0003F0  0E02               	movlw	2
  4474  0003F2  6F62               	movwf	blink@start& (0+255),b
  4475  0003F4  0E03               	movlw	3
  4476  0003F6  6F63               	movwf	blink@end& (0+255),b
  4477  0003F8  ECF7  F02D         	call	_blink	;wreg free
  4478  0003FC                     l1277:
  4479                           
  4480                           ;main.c: 194: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4481  0003FC  5047               	movf	_wifi_conectado,w,c
  4482  0003FE  A4D8               	btfss	status,2,c
  4483  000400  D005               	goto	l1279
  4484  000402  0E00               	movlw	0
  4485  000404  0100               	movlb	0	; () banked
  4486  000406  6FE7               	movwf	(_main$1631+1)& (0+255),b
  4487  000408  0E20               	movlw	32
  4488  00040A  D004               	goto	L1
  4489  00040C                     l1279:
  4490                           
  4491                           ; BSR set to: 0
  4492  00040C  0E00               	movlw	0
  4493  00040E  0100               	movlb	0	; () banked
  4494  000410  6FE7               	movwf	(_main$1631+1)& (0+255),b
  4495  000412  0E05               	movlw	5
  4496  000414                     L1:
  4497  000414  6FE6               	movwf	_main$1631& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500                           
  4501                           ; BSR set to: 0
  4502  000416  C0E6  F199         	movff	_main$1631,_line1+4
  4503                           
  4504                           ;main.c: 195: line1[5] = (trava_fase) ? 0x01 : ' ';
  4505  00041A  5059               	movf	_trava_fase,w,c
  4506  00041C  A4D8               	btfss	status,2,c
  4507  00041E  D004               	goto	l1283
  4508                           
  4509                           ; BSR set to: 0
  4510  000420  0E00               	movlw	0
  4511  000422  6FE9               	movwf	(_main$1632+1)& (0+255),b
  4512  000424  0E20               	movlw	32
  4513  000426  D003               	goto	L2
  4514  000428                     l1283:
  4515                           
  4516                           ; BSR set to: 0
  4517                           
  4518                           ; BSR set to: 0
  4519  000428  0E00               	movlw	0
  4520  00042A  6FE9               	movwf	(_main$1632+1)& (0+255),b
  4521  00042C  0E01               	movlw	1
  4522  00042E                     L2:
  4523  00042E  6FE8               	movwf	_main$1632& (0+255),b
  4524                           
  4525                           ; BSR set to: 0
  4526                           
  4527                           ; BSR set to: 0
  4528  000430  C0E8  F19A         	movff	_main$1632,_line1+5
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 196: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4532  000434  0E80               	movlw	low _line2
  4533  000436  6F81               	movwf	sprintf@wh& (0+255),b
  4534  000438  0E01               	movlw	high _line2
  4535  00043A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4536  00043C  0E30               	movlw	low STR_90
  4537  00043E  6F83               	movwf	sprintf@f& (0+255),b
  4538  000440  0E7C               	movlw	high STR_90
  4539  000442  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4540  000444  C0FE  F085         	movff	_temp,?_sprintf+4
  4541  000448  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4542  00044A  C0F6  F087         	movff	_tempajt,?_sprintf+6
  4543  00044E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4544  000450  EC08  F02D         	call	_sprintf	;wreg free
  4545                           
  4546                           ;main.c: 197: line2[5] = 0x04;
  4547  000454  0E04               	movlw	4
  4548  000456  0101               	movlb	1	; () banked
  4549  000458  6F85               	movwf	(_line2+5)& (0+255),b
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;main.c: 198: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4553  00045A  0100               	movlb	0	; () banked
  4554  00045C  51FB               	movf	_tipo_sensor_umidade& (0+255),w,b
  4555  00045E  A4D8               	btfss	status,2,c
  4556  000460  D004               	goto	l1287
  4557                           
  4558                           ; BSR set to: 0
  4559  000462  0E00               	movlw	0
  4560  000464  6FEB               	movwf	(_main$1635+1)& (0+255),b
  4561  000466  0E46               	movlw	70
  4562  000468  D003               	goto	L3
  4563  00046A                     l1287:
  4564                           
  4565                           ; BSR set to: 0
  4566                           
  4567                           ; BSR set to: 0
  4568  00046A  0E00               	movlw	0
  4569  00046C  6FEB               	movwf	(_main$1635+1)& (0+255),b
  4570  00046E  0E25               	movlw	37
  4571  000470                     L3:
  4572  000470  6FEA               	movwf	_main$1635& (0+255),b
  4573                           
  4574                           ; BSR set to: 0
  4575                           
  4576                           ; BSR set to: 0
  4577  000472  0E6B               	movlw	low _line3
  4578  000474  6F81               	movwf	sprintf@wh& (0+255),b
  4579  000476  0E01               	movlw	high _line3
  4580  000478  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4581  00047A  0EDB               	movlw	low STR_91
  4582  00047C  6F83               	movwf	sprintf@f& (0+255),b
  4583  00047E  0E7B               	movlw	high STR_91
  4584  000480  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4585  000482  C05D  F085         	movff	_umid,?_sprintf+4
  4586  000486  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4587  000488  C0F5  F087         	movff	_umidajt,?_sprintf+6
  4588  00048C  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4589  00048E  C0EA  F089         	movff	_main$1635,?_sprintf+8
  4590  000492  C0EB  F08A         	movff	_main$1635+1,?_sprintf+9
  4591  000496  EC08  F02D         	call	_sprintf	;wreg free
  4592                           
  4593                           ;main.c: 199: line3[5] = 0x03;
  4594  00049A  0E03               	movlw	3
  4595  00049C  0101               	movlb	1	; () banked
  4596  00049E  6F70               	movwf	(_line3+5)& (0+255),b
  4597                           
  4598                           ;main.c: 200: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4599  0004A0  0E56               	movlw	low _line4
  4600  0004A2  0100               	movlb	0	; () banked
  4601  0004A4  6F81               	movwf	sprintf@wh& (0+255),b
  4602  0004A6  0E01               	movlw	high _line4
  4603  0004A8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4604  0004AA  0E1F               	movlw	low STR_92
  4605  0004AC  6F83               	movwf	sprintf@f& (0+255),b
  4606  0004AE  0E7F               	movlw	high STR_92
  4607  0004B0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4608  0004B2  0EF8               	movlw	low _fase
  4609  0004B4  6F60               	movwf	faseAtual@_fase& (0+255),b
  4610  0004B6  0E00               	movlw	high _fase
  4611  0004B8  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4612  0004BA  0EF6               	movlw	low _tempajt
  4613  0004BC  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4614  0004BE  0E00               	movlw	high _tempajt
  4615  0004C0  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4616  0004C2  0E3F               	movlw	63
  4617  0004C4  EC76  F023         	call	_faseAtual
  4618  0004C8  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4619  0004CC  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4620  0004D0  EC08  F02D         	call	_sprintf	;wreg free
  4621                           
  4622                           ;main.c: 201: if (!f_falta_energia) {
  4623  0004D4  505E               	movf	_f_falta_energia,w,c
  4624  0004D6  A4D8               	btfss	status,2,c
  4625  0004D8  D00B               	goto	l1290
  4626                           
  4627                           ;main.c: 202: sprintf(line4, " *FALTA DE ENERGIA*");
  4628  0004DA  0E56               	movlw	low _line4
  4629  0004DC  0100               	movlb	0	; () banked
  4630  0004DE  6F81               	movwf	sprintf@wh& (0+255),b
  4631  0004E0  0E01               	movlw	high _line4
  4632  0004E2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4633  0004E4  0E59               	movlw	low STR_93
  4634  0004E6  6F83               	movwf	sprintf@f& (0+255),b
  4635  0004E8  0E7C               	movlw	high STR_93
  4636  0004EA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4637  0004EC  EC08  F02D         	call	_sprintf	;wreg free
  4638  0004F0                     l1290:
  4639                           
  4640                           ;main.c: 203: };
  4641                           ;main.c: 205: if (btPress(8)) {
  4642  0004F0  0E08               	movlw	8
  4643  0004F2  EC41  F02F         	call	_btPress
  4644  0004F6  0900               	iorlw	0
  4645  0004F8  B4D8               	btfsc	status,2,c
  4646  0004FA  D005               	goto	l1291
  4647                           
  4648                           ;main.c: 206: menu = 1;
  4649  0004FC  0E01               	movlw	1
  4650  0004FE  0100               	movlb	0	; () banked
  4651  000500  6FFD               	movwf	_menu& (0+255),b
  4652                           
  4653                           ;main.c: 207: opcaomenu = 1;
  4654  000502  0E01               	movlw	1
  4655  000504  6E43               	movwf	_opcaomenu,c
  4656  000506                     l1291:
  4657                           
  4658                           ;main.c: 208: }
  4659                           ;main.c: 209: if (btPress(2)) {
  4660                           
  4661                           ; BSR set to: 0
  4662  000506  0E02               	movlw	2
  4663  000508  EC41  F02F         	call	_btPress
  4664  00050C  0900               	iorlw	0
  4665  00050E  A4D8               	btfss	status,2,c
  4666                           
  4667                           ;main.c: 210: ajuste_parametro++;
  4668  000510  2A42               	incf	_ajuste_parametro,f,c
  4669                           
  4670                           ;main.c: 211: }
  4671                           ;main.c: 212: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4672  000512  0E01               	movlw	1
  4673  000514  EC41  F02F         	call	_btPress
  4674  000518  0900               	iorlw	0
  4675  00051A  B4D8               	btfsc	status,2,c
  4676  00051C  D00E               	goto	l1293
  4677  00051E  0EFC               	movlw	low _buzzer
  4678  000520  0100               	movlb	0	; () banked
  4679  000522  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4680  000524  0E00               	movlw	high _buzzer
  4681  000526  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4682  000528  0E01               	movlw	1
  4683  00052A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4684  00052C  0E01               	movlw	1
  4685  00052E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4686  000530  0E0E               	movlw	14
  4687  000532  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4688  000534  0E2B               	movlw	43
  4689  000536  EC14  F029         	call	_setRangeValor
  4690  00053A                     l1293:
  4691                           
  4692                           ;main.c: 213: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4693  00053A  0E10               	movlw	16
  4694  00053C  EC41  F02F         	call	_btPress
  4695  000540  0900               	iorlw	0
  4696  000542  B4D8               	btfsc	status,2,c
  4697  000544  D081               	goto	l1295
  4698  000546  0EFC               	movlw	low _buzzer
  4699  000548  0100               	movlb	0	; () banked
  4700  00054A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4701  00054C  0E00               	movlw	high _buzzer
  4702  00054E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4703  000550  0E00               	movlw	0
  4704  000552  6F67               	movwf	setRangeValor@_min& (0+255),b
  4705  000554  0E00               	movlw	0
  4706  000556  6F68               	movwf	setRangeValor@_max& (0+255),b
  4707  000558  0E0E               	movlw	14
  4708  00055A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4709  00055C  0E2B               	movlw	43
  4710  00055E  EC14  F029         	call	_setRangeValor
  4711                           
  4712                           ;main.c: 216: switch (ajuste_parametro) {
  4713  000562  D072               	goto	l1295
  4714  000564                     
  4715                           ;main.c: 218: blink(line2, 15, 20);
  4716  000564  0E80               	movlw	low _line2
  4717  000566  0100               	movlb	0	; () banked
  4718  000568  6F60               	movwf	blink@line& (0+255),b
  4719  00056A  0E01               	movlw	high _line2
  4720  00056C  6F61               	movwf	(blink@line+1)& (0+255),b
  4721  00056E  0E0F               	movlw	15
  4722  000570  6F62               	movwf	blink@start& (0+255),b
  4723  000572  0E14               	movlw	20
  4724  000574  6F63               	movwf	blink@end& (0+255),b
  4725  000576  ECF7  F02D         	call	_blink	;wreg free
  4726                           
  4727                           ;main.c: 219: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4728  00057A  0E40               	movlw	64
  4729  00057C  EC41  F02F         	call	_btPress
  4730  000580  0900               	iorlw	0
  4731  000582  B4D8               	btfsc	status,2,c
  4732  000584  D00E               	goto	l1297
  4733  000586  0EF6               	movlw	low _tempajt
  4734  000588  0100               	movlb	0	; () banked
  4735  00058A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4736  00058C  0E00               	movlw	high _tempajt
  4737  00058E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4738  000590  0E55               	movlw	85
  4739  000592  6F67               	movwf	setRangeValor@_min& (0+255),b
  4740  000594  0EA0               	movlw	160
  4741  000596  6F68               	movwf	setRangeValor@_max& (0+255),b
  4742  000598  0E01               	movlw	1
  4743  00059A  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4744  00059C  0E2B               	movlw	43
  4745  00059E  EC14  F029         	call	_setRangeValor
  4746  0005A2                     l1297:
  4747                           
  4748                           ;main.c: 220: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4749  0005A2  0E20               	movlw	32
  4750  0005A4  EC41  F02F         	call	_btPress
  4751  0005A8  0900               	iorlw	0
  4752  0005AA  B4D8               	btfsc	status,2,c
  4753  0005AC  D25E               	goto	l1306
  4754  0005AE  0EF6               	movlw	low _tempajt
  4755  0005B0  0100               	movlb	0	; () banked
  4756  0005B2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4757  0005B4  0E00               	movlw	high _tempajt
  4758  0005B6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4759  0005B8  0E55               	movlw	85
  4760  0005BA  6F67               	movwf	setRangeValor@_min& (0+255),b
  4761  0005BC  0EA0               	movlw	160
  4762  0005BE  6F68               	movwf	setRangeValor@_max& (0+255),b
  4763  0005C0  0E01               	movlw	1
  4764  0005C2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4765  0005C4  0E2D               	movlw	45
  4766  0005C6  EC14  F029         	call	_setRangeValor
  4767                           
  4768                           ;main.c: 221: break;
  4769  0005CA  D24F               	goto	l1306
  4770  0005CC                     
  4771                           ;main.c: 223: if (tipo_modo_trabalho == 0) {
  4772  0005CC  5058               	movf	_tipo_modo_trabalho,w,c
  4773  0005CE  A4D8               	btfss	status,2,c
  4774  0005D0  D038               	goto	l1301
  4775                           
  4776                           ;main.c: 224: blink(line3, 15, 20);
  4777  0005D2  0E6B               	movlw	low _line3
  4778  0005D4  0100               	movlb	0	; () banked
  4779  0005D6  6F60               	movwf	blink@line& (0+255),b
  4780  0005D8  0E01               	movlw	high _line3
  4781  0005DA  6F61               	movwf	(blink@line+1)& (0+255),b
  4782  0005DC  0E0F               	movlw	15
  4783  0005DE  6F62               	movwf	blink@start& (0+255),b
  4784  0005E0  0E14               	movlw	20
  4785  0005E2  6F63               	movwf	blink@end& (0+255),b
  4786  0005E4  ECF7  F02D         	call	_blink	;wreg free
  4787                           
  4788                           ;main.c: 225: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4789  0005E8  0E40               	movlw	64
  4790  0005EA  EC41  F02F         	call	_btPress
  4791  0005EE  0900               	iorlw	0
  4792  0005F0  B4D8               	btfsc	status,2,c
  4793  0005F2  D010               	goto	l1302
  4794  0005F4  0EF5               	movlw	low _umidajt
  4795  0005F6  0100               	movlb	0	; () banked
  4796  0005F8  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4797  0005FA  0E00               	movlw	high _umidajt
  4798  0005FC  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4799  0005FE  0EF6               	movlw	low _tempajt
  4800  000600  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4801  000602  0E00               	movlw	high _tempajt
  4802  000604  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4803  000606  0EF7               	movlw	low _clima
  4804  000608  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4805  00060A  0E00               	movlw	high _clima
  4806  00060C  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4807  00060E  0E2B               	movlw	43
  4808  000610  EC15  F024         	call	_setUmidade
  4809  000614                     l1302:
  4810                           
  4811                           ;main.c: 226: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4812  000614  0E20               	movlw	32
  4813  000616  EC41  F02F         	call	_btPress
  4814  00061A  0900               	iorlw	0
  4815  00061C  B4D8               	btfsc	status,2,c
  4816  00061E  D225               	goto	l1306
  4817  000620  0EF5               	movlw	low _umidajt
  4818  000622  0100               	movlb	0	; () banked
  4819  000624  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4820  000626  0E00               	movlw	high _umidajt
  4821  000628  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4822  00062A  0EF6               	movlw	low _tempajt
  4823  00062C  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4824  00062E  0E00               	movlw	high _tempajt
  4825  000630  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4826  000632  0EF7               	movlw	low _clima
  4827  000634  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4828  000636  0E00               	movlw	high _clima
  4829  000638  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4830  00063A  0E2D               	movlw	45
  4831  00063C  EC15  F024         	call	_setUmidade
  4832                           
  4833                           ;main.c: 227: } else {
  4834  000640  D214               	goto	l1306
  4835  000642                     l1301:
  4836                           
  4837                           ;main.c: 232: ajuste_parametro = 0;
  4838                           
  4839                           ;main.c: 231: default:
  4840                           
  4841                           ;main.c: 229: }
  4842                           ;main.c: 230: break;
  4843                           
  4844                           ;main.c: 228: ajuste_parametro = 0;
  4845  000642  0E00               	movlw	0
  4846  000644  6E42               	movwf	_ajuste_parametro,c
  4847                           
  4848                           ;main.c: 233: }
  4849  000646  D211               	goto	l1306
  4850  000648                     l1295:
  4851  000648  5042               	movf	_ajuste_parametro,w,c
  4852                           
  4853                           ; Switch size 1, requested type "space"
  4854                           ; Number of cases is 2, Range of values is 1 to 2
  4855                           ; switch strategies available:
  4856                           ; Name         Instructions Cycles
  4857                           ; simple_byte            7     4 (average)
  4858                           ;	Chosen strategy is simple_byte
  4859  00064A  0A01               	xorlw	1	; case 1
  4860  00064C  B4D8               	btfsc	status,2,c
  4861  00064E  D78A               	goto	l1296
  4862  000650  0A03               	xorlw	3	; case 2
  4863  000652  B4D8               	btfsc	status,2,c
  4864  000654  D7BB               	goto	l1300
  4865  000656  D7F5               	goto	l1301
  4866  000658                     
  4867                           ;main.c: 236: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4868  000658  0E96               	movlw	low (_line1+1)
  4869  00065A  0100               	movlb	0	; () banked
  4870  00065C  6F81               	movwf	sprintf@wh& (0+255),b
  4871  00065E  0E01               	movlw	high (_line1+1)
  4872  000660  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4873  000662  0E43               	movlw	low STR_94
  4874  000664  6F83               	movwf	sprintf@f& (0+255),b
  4875  000666  0E7D               	movlw	high STR_94
  4876  000668  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4877  00066A  C0F6  F085         	movff	_tempajt,?_sprintf+4
  4878  00066E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4879  000670  EC08  F02D         	call	_sprintf	;wreg free
  4880                           
  4881                           ;main.c: 237: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4882  000674  0100               	movlb	0	; () banked
  4883  000676  51FB               	movf	_tipo_sensor_umidade& (0+255),w,b
  4884  000678  A4D8               	btfss	status,2,c
  4885  00067A  D004               	goto	l1309
  4886                           
  4887                           ; BSR set to: 0
  4888  00067C  0E00               	movlw	0
  4889  00067E  6FED               	movwf	(_main$1640+1)& (0+255),b
  4890  000680  0E46               	movlw	70
  4891  000682  D003               	goto	L4
  4892  000684                     l1309:
  4893                           
  4894                           ; BSR set to: 0
  4895                           
  4896                           ; BSR set to: 0
  4897  000684  0E00               	movlw	0
  4898  000686  6FED               	movwf	(_main$1640+1)& (0+255),b
  4899  000688  0E25               	movlw	37
  4900  00068A                     L4:
  4901  00068A  6FEC               	movwf	_main$1640& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           
  4905                           ; BSR set to: 0
  4906  00068C  0E81               	movlw	low (_line2+1)
  4907  00068E  6F81               	movwf	sprintf@wh& (0+255),b
  4908  000690  0E01               	movlw	high (_line2+1)
  4909  000692  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4910  000694  0E11               	movlw	low STR_95
  4911  000696  6F83               	movwf	sprintf@f& (0+255),b
  4912  000698  0E7E               	movlw	high STR_95
  4913  00069A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4914  00069C  C0F5  F085         	movff	_umidajt,?_sprintf+4
  4915  0006A0  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4916  0006A2  C0EC  F087         	movff	_main$1640,?_sprintf+6
  4917  0006A6  C0ED  F088         	movff	_main$1640+1,?_sprintf+7
  4918  0006AA  EC08  F02D         	call	_sprintf	;wreg free
  4919                           
  4920                           ;main.c: 238: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4921  0006AE  0E6C               	movlw	low (_line3+1)
  4922  0006B0  0100               	movlb	0	; () banked
  4923  0006B2  6F81               	movwf	sprintf@wh& (0+255),b
  4924  0006B4  0E01               	movlw	high (_line3+1)
  4925  0006B6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4926  0006B8  0E4E               	movlw	low STR_96
  4927  0006BA  6F83               	movwf	sprintf@f& (0+255),b
  4928  0006BC  0E7F               	movlw	high STR_96
  4929  0006BE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4930  0006C0  0EF8               	movlw	low _fase
  4931  0006C2  6F60               	movwf	faseAtual@_fase& (0+255),b
  4932  0006C4  0E00               	movlw	high _fase
  4933  0006C6  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4934  0006C8  0EF6               	movlw	low _tempajt
  4935  0006CA  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4936  0006CC  0E00               	movlw	high _tempajt
  4937  0006CE  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4938  0006D0  0E3F               	movlw	63
  4939  0006D2  EC76  F023         	call	_faseAtual
  4940  0006D6  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4941  0006DA  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4942  0006DE  EC08  F02D         	call	_sprintf	;wreg free
  4943                           
  4944                           ;main.c: 239: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  4945  0006E2  0E57               	movlw	low (_line4+1)
  4946  0006E4  0100               	movlb	0	; () banked
  4947  0006E6  6F81               	movwf	sprintf@wh& (0+255),b
  4948  0006E8  0E01               	movlw	high (_line4+1)
  4949  0006EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4950  0006EC  0E0B               	movlw	low STR_97
  4951  0006EE  6F83               	movwf	sprintf@f& (0+255),b
  4952  0006F0  0E7F               	movlw	high STR_97
  4953  0006F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4954  0006F4  51F7               	movf	_clima& (0+255),w,b
  4955  0006F6  ECE4  F02C         	call	_climaAtual
  4956  0006FA  C060  F085         	movff	?_climaAtual,?_sprintf+4
  4957  0006FE  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  4958  000702  EC08  F02D         	call	_sprintf	;wreg free
  4959                           
  4960                           ;main.c: 240: break;
  4961  000706  D1B1               	goto	l1306
  4962  000708                     
  4963                           ;main.c: 242: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  4964  000708  5058               	movf	_tipo_modo_trabalho,w,c
  4965  00070A  B4D8               	btfsc	status,2,c
  4966  00070C  D005               	goto	l1314
  4967  00070E  0ED6               	movlw	low STR_100
  4968  000710  0100               	movlb	0	; () banked
  4969  000712  6FEE               	movwf	_main$1647& (0+255),b
  4970  000714  0E7E               	movlw	high STR_100
  4971  000716  D004               	goto	L5
  4972  000718                     l1314:
  4973                           
  4974                           ; BSR set to: 0
  4975  000718  0E94               	movlw	low STR_99
  4976  00071A  0100               	movlb	0	; () banked
  4977  00071C  6FEE               	movwf	_main$1647& (0+255),b
  4978  00071E  0E7F               	movlw	high STR_99
  4979  000720                     L5:
  4980  000720  6FEF               	movwf	(_main$1647+1)& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983                           
  4984                           ; BSR set to: 0
  4985  000722  0E96               	movlw	low (_line1+1)
  4986  000724  6F81               	movwf	sprintf@wh& (0+255),b
  4987  000726  0E01               	movlw	high (_line1+1)
  4988  000728  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4989  00072A  0E57               	movlw	low STR_98
  4990  00072C  6F83               	movwf	sprintf@f& (0+255),b
  4991  00072E  0E7F               	movlw	high STR_98
  4992  000730  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4993  000732  C0EE  F085         	movff	_main$1647,?_sprintf+4
  4994  000736  C0EF  F086         	movff	_main$1647+1,?_sprintf+5
  4995  00073A  EC08  F02D         	call	_sprintf	;wreg free
  4996                           
  4997                           ;main.c: 243: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  4998  00073E  5059               	movf	_trava_fase,w,c
  4999  000740  A4D8               	btfss	status,2,c
  5000  000742  D005               	goto	l1318
  5001  000744  0EE1               	movlw	low STR_103
  5002  000746  0100               	movlb	0	; () banked
  5003  000748  6FF0               	movwf	_main$1652& (0+255),b
  5004  00074A  0E7E               	movlw	high STR_103
  5005  00074C  D004               	goto	L6
  5006  00074E                     l1318:
  5007                           
  5008                           ; BSR set to: 0
  5009  00074E  0E60               	movlw	low STR_102
  5010  000750  0100               	movlb	0	; () banked
  5011  000752  6FF0               	movwf	_main$1652& (0+255),b
  5012  000754  0E7F               	movlw	high STR_102
  5013  000756                     L6:
  5014  000756  6FF1               	movwf	(_main$1652+1)& (0+255),b
  5015                           
  5016                           ; BSR set to: 0
  5017                           
  5018                           ; BSR set to: 0
  5019  000758  0E81               	movlw	low (_line2+1)
  5020  00075A  6F81               	movwf	sprintf@wh& (0+255),b
  5021  00075C  0E01               	movlw	high (_line2+1)
  5022  00075E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5023  000760  0E15               	movlw	low STR_101
  5024  000762  6F83               	movwf	sprintf@f& (0+255),b
  5025  000764  0E7F               	movlw	high STR_101
  5026  000766  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5027  000768  C0F0  F085         	movff	_main$1652,?_sprintf+4
  5028  00076C  C0F1  F086         	movff	_main$1652+1,?_sprintf+5
  5029  000770  EC08  F02D         	call	_sprintf	;wreg free
  5030                           
  5031                           ;main.c: 244: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  5032  000774  0100               	movlb	0	; () banked
  5033  000776  51FC               	movf	_buzzer& (0+255),w,b
  5034  000778  A4D8               	btfss	status,2,c
  5035  00077A  D004               	goto	l1322
  5036                           
  5037                           ; BSR set to: 0
  5038  00077C  0EF7               	movlw	low STR_106
  5039  00077E  6FF2               	movwf	_main$1657& (0+255),b
  5040  000780  0E7E               	movlw	high STR_106
  5041  000782  D003               	goto	L7
  5042  000784                     l1322:
  5043                           
  5044                           ; BSR set to: 0
  5045                           
  5046                           ; BSR set to: 0
  5047  000784  0E9B               	movlw	low STR_105
  5048  000786  6FF2               	movwf	_main$1657& (0+255),b
  5049  000788  0E7F               	movlw	high STR_105
  5050  00078A                     L7:
  5051  00078A  6FF3               	movwf	(_main$1657+1)& (0+255),b
  5052                           
  5053                           ; BSR set to: 0
  5054                           
  5055                           ; BSR set to: 0
  5056  00078C  0E6C               	movlw	low (_line3+1)
  5057  00078E  6F81               	movwf	sprintf@wh& (0+255),b
  5058  000790  0E01               	movlw	high (_line3+1)
  5059  000792  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5060  000794  0EEC               	movlw	low STR_104
  5061  000796  6F83               	movwf	sprintf@f& (0+255),b
  5062  000798  0E7E               	movlw	high STR_104
  5063  00079A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5064  00079C  C0F2  F085         	movff	_main$1657,?_sprintf+4
  5065  0007A0  C0F3  F086         	movff	_main$1657+1,?_sprintf+5
  5066  0007A4  EC08  F02D         	call	_sprintf	;wreg free
  5067                           
  5068                           ;main.c: 245: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  5069  0007A8  0E57               	movlw	low (_line4+1)
  5070  0007AA  0100               	movlb	0	; () banked
  5071  0007AC  6F81               	movwf	sprintf@wh& (0+255),b
  5072  0007AE  0E01               	movlw	high (_line4+1)
  5073  0007B0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5074  0007B2  0E95               	movlw	low STR_107
  5075  0007B4  6F83               	movwf	sprintf@f& (0+255),b
  5076  0007B6  0E7C               	movlw	high STR_107
  5077  0007B8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5078  0007BA  EC08  F02D         	call	_sprintf	;wreg free
  5079                           
  5080                           ;main.c: 246: break;
  5081  0007BE  D155               	goto	l1306
  5082  0007C0                     
  5083                           ;main.c: 248: sprintf(&line1[1], "CONFIG WIFI      >>");
  5084  0007C0  0E96               	movlw	low (_line1+1)
  5085  0007C2  0100               	movlb	0	; () banked
  5086  0007C4  6F81               	movwf	sprintf@wh& (0+255),b
  5087  0007C6  0E01               	movlw	high (_line1+1)
  5088  0007C8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5089  0007CA  0E81               	movlw	low STR_108
  5090  0007CC  6F83               	movwf	sprintf@f& (0+255),b
  5091  0007CE  0E7C               	movlw	high STR_108
  5092  0007D0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5093  0007D2  EC08  F02D         	call	_sprintf	;wreg free
  5094                           
  5095                           ;main.c: 249: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5096  0007D6  0E81               	movlw	low (_line2+1)
  5097  0007D8  0100               	movlb	0	; () banked
  5098  0007DA  6F81               	movwf	sprintf@wh& (0+255),b
  5099  0007DC  0E01               	movlw	high (_line2+1)
  5100  0007DE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5101  0007E0  0EA9               	movlw	low STR_109
  5102  0007E2  6F83               	movwf	sprintf@f& (0+255),b
  5103  0007E4  0E7C               	movlw	high STR_109
  5104  0007E6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5105  0007E8  EC08  F02D         	call	_sprintf	;wreg free
  5106                           
  5107                           ;main.c: 250: break;
  5108  0007EC  D13E               	goto	l1306
  5109  0007EE                     
  5110                           ;main.c: 252: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5111  0007EE  0E96               	movlw	low (_line1+1)
  5112  0007F0  0100               	movlb	0	; () banked
  5113  0007F2  6F81               	movwf	sprintf@wh& (0+255),b
  5114  0007F4  0E01               	movlw	high (_line1+1)
  5115  0007F6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5116  0007F8  0EAE               	movlw	low STR_110
  5117  0007FA  6F83               	movwf	sprintf@f& (0+255),b
  5118  0007FC  0E7D               	movlw	high STR_110
  5119  0007FE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5120  000800  C04B  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5121  000804  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5122  000806  C051  F087         	movff	_h_venotinha,?_sprintf+6
  5123  00080A  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5124  00080C  EC08  F02D         	call	_sprintf	;wreg free
  5125                           
  5126                           ;main.c: 253: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5127  000810  0E81               	movlw	low (_line2+1)
  5128  000812  0100               	movlb	0	; () banked
  5129  000814  6F81               	movwf	sprintf@wh& (0+255),b
  5130  000816  0E01               	movlw	high (_line2+1)
  5131  000818  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5132  00081A  0EBF               	movlw	low STR_111
  5133  00081C  6F83               	movwf	sprintf@f& (0+255),b
  5134  00081E  0E7D               	movlw	high STR_111
  5135  000820  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5136  000822  C0FB  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5137  000826  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5138  000828  C052  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5139  00082C  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5140  00082E  EC08  F02D         	call	_sprintf	;wreg free
  5141                           
  5142                           ;main.c: 254: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5143  000832  0E6C               	movlw	low (_line3+1)
  5144  000834  0100               	movlb	0	; () banked
  5145  000836  6F81               	movwf	sprintf@wh& (0+255),b
  5146  000838  0E01               	movlw	high (_line3+1)
  5147  00083A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5148  00083C  0ED0               	movlw	low STR_112
  5149  00083E  6F83               	movwf	sprintf@f& (0+255),b
  5150  000840  0E7D               	movlw	high STR_112
  5151  000842  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5152  000844  C050  F085         	movff	_h_abafador,?_sprintf+4
  5153  000848  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5154  00084A  C04E  F087         	movff	_h_buzzer,?_sprintf+6
  5155  00084E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5156  000850  EC08  F02D         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 255: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5159  000854  0E57               	movlw	low (_line4+1)
  5160  000856  0100               	movlb	0	; () banked
  5161  000858  6F81               	movwf	sprintf@wh& (0+255),b
  5162  00085A  0E01               	movlw	high (_line4+1)
  5163  00085C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5164  00085E  0EE1               	movlw	low STR_113
  5165  000860  6F83               	movwf	sprintf@f& (0+255),b
  5166  000862  0E7D               	movlw	high STR_113
  5167  000864  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5168  000866  C04F  F085         	movff	_h_flap,?_sprintf+4
  5169  00086A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5170  00086C  C054  F087         	movff	_t_flap_ligado,?_sprintf+6
  5171  000870  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5172  000872  EC08  F02D         	call	_sprintf	;wreg free
  5173                           
  5174                           ;main.c: 256: break;
  5175  000876  D0F9               	goto	l1306
  5176  000878                     
  5177                           ;main.c: 258: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5178  000878  0E96               	movlw	low (_line1+1)
  5179  00087A  0100               	movlb	0	; () banked
  5180  00087C  6F81               	movwf	sprintf@wh& (0+255),b
  5181  00087E  0E01               	movlw	high (_line1+1)
  5182  000880  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5183  000882  0E55               	movlw	low STR_114
  5184  000884  6F83               	movwf	sprintf@f& (0+255),b
  5185  000886  0E7D               	movlw	high STR_114
  5186  000888  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5187  00088A  C053  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5188  00088E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5189  000890  C049  F087         	movff	_wifi_SENHA,?_sprintf+6
  5190  000894  C04A  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5191  000898  EC08  F02D         	call	_sprintf	;wreg free
  5192                           
  5193                           ;main.c: 259: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5194  00089C  0E81               	movlw	low (_line2+1)
  5195  00089E  0100               	movlb	0	; () banked
  5196  0008A0  6F81               	movwf	sprintf@wh& (0+255),b
  5197  0008A2  0E01               	movlw	high (_line2+1)
  5198  0008A4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5199  0008A6  0E67               	movlw	low STR_115
  5200  0008A8  6F83               	movwf	sprintf@f& (0+255),b
  5201  0008AA  0E7D               	movlw	high STR_115
  5202  0008AC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5203  0008AE  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5204  0008B2  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5205  0008B4  C04D  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5206  0008B8  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5207  0008BA  EC08  F02D         	call	_sprintf	;wreg free
  5208                           
  5209                           ;main.c: 260: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5210  0008BE  0E6C               	movlw	low (_line3+1)
  5211  0008C0  0100               	movlb	0	; () banked
  5212  0008C2  6F81               	movwf	sprintf@wh& (0+255),b
  5213  0008C4  0E01               	movlw	high (_line3+1)
  5214  0008C6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5215  0008C8  0E79               	movlw	low STR_116
  5216  0008CA  6F83               	movwf	sprintf@f& (0+255),b
  5217  0008CC  0E7D               	movlw	high STR_116
  5218  0008CE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5219  0008D0  C0FA  F085         	movff	_t_temp_automatica,?_sprintf+4
  5220  0008D4  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5221  0008D6  C0F9  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5222  0008DA  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5223  0008DC  EC08  F02D         	call	_sprintf	;wreg free
  5224                           
  5225                           ;main.c: 261: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5226  0008E0  0E57               	movlw	low (_line4+1)
  5227  0008E2  0100               	movlb	0	; () banked
  5228  0008E4  6F81               	movwf	sprintf@wh& (0+255),b
  5229  0008E6  0E01               	movlw	high (_line4+1)
  5230  0008E8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5231  0008EA  0E29               	movlw	low STR_117
  5232  0008EC  6F83               	movwf	sprintf@f& (0+255),b
  5233  0008EE  0E7F               	movlw	high STR_117
  5234  0008F0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5235  0008F2  C04C  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5236  0008F6  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5237  0008F8  EC08  F02D         	call	_sprintf	;wreg free
  5238                           
  5239                           ;main.c: 262: break;
  5240  0008FC  D0B6               	goto	l1306
  5241  0008FE                     
  5242                           ;main.c: 264: sprintf(line1, "SID: %s", ssid);
  5243  0008FE  0E95               	movlw	low _line1
  5244  000900  0100               	movlb	0	; () banked
  5245  000902  6F81               	movwf	sprintf@wh& (0+255),b
  5246  000904  0E01               	movlw	high _line1
  5247  000906  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5248  000908  0E68               	movlw	low STR_118
  5249  00090A  6F83               	movwf	sprintf@f& (0+255),b
  5250  00090C  0E7F               	movlw	high STR_118
  5251  00090E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5252  000910  0ECD               	movlw	low _ssid
  5253  000912  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5254  000914  0E01               	movlw	high _ssid
  5255  000916  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5256  000918  EC08  F02D         	call	_sprintf	;wreg free
  5257                           
  5258                           ;main.c: 265: sprintf(line2, "PSW: %s", senha);
  5259  00091C  0E80               	movlw	low _line2
  5260  00091E  0100               	movlb	0	; () banked
  5261  000920  6F81               	movwf	sprintf@wh& (0+255),b
  5262  000922  0E01               	movlw	high _line2
  5263  000924  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5264  000926  0E70               	movlw	low STR_119
  5265  000928  6F83               	movwf	sprintf@f& (0+255),b
  5266  00092A  0E7F               	movlw	high STR_119
  5267  00092C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5268  00092E  0EBE               	movlw	low _senha
  5269  000930  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5270  000932  0E01               	movlw	high _senha
  5271  000934  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5272  000936  EC08  F02D         	call	_sprintf	;wreg free
  5273                           
  5274                           ;main.c: 266: sprintf(line3, "NS: %s", wifi_MAC);
  5275  00093A  0E6B               	movlw	low _line3
  5276  00093C  0100               	movlb	0	; () banked
  5277  00093E  6F81               	movwf	sprintf@wh& (0+255),b
  5278  000940  0E01               	movlw	high _line3
  5279  000942  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5280  000944  0EA2               	movlw	low STR_120
  5281  000946  6F83               	movwf	sprintf@f& (0+255),b
  5282  000948  0E7F               	movlw	high STR_120
  5283  00094A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5284  00094C  0EE6               	movlw	low _wifi_MAC
  5285  00094E  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5286  000950  0E01               	movlw	high _wifi_MAC
  5287  000952  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5288  000954  EC08  F02D         	call	_sprintf	;wreg free
  5289                           
  5290                           ;main.c: 267: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5291  000958  C049  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5292  00095C  C04A  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5293  000960  0E00               	movlw	0
  5294  000962  0100               	movlb	0	; () banked
  5295  000964  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5296  000966  0E27               	movlw	39
  5297  000968  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5298  00096A  EC9B  F02E         	call	___wmul	;wreg free
  5299  00096E  C060  F0E4         	movff	?___wmul,_main$2524
  5300  000972  C061  F0E5         	movff	?___wmul+1,_main$2524+1
  5301                           
  5302                           ;main.c: 267: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5303  000976  0E56               	movlw	low _line4
  5304  000978  0100               	movlb	0	; () banked
  5305  00097A  6F81               	movwf	sprintf@wh& (0+255),b
  5306  00097C  0E01               	movlw	high _line4
  5307  00097E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5308  000980  0E45               	movlw	low STR_121
  5309  000982  6F83               	movwf	sprintf@f& (0+255),b
  5310  000984  0E7F               	movlw	high STR_121
  5311  000986  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5312  000988  C0E4  F085         	movff	_main$2524,?_sprintf+4
  5313  00098C  C0E5  F086         	movff	_main$2524+1,?_sprintf+5
  5314  000990  EC08  F02D         	call	_sprintf	;wreg free
  5315                           
  5316                           ;main.c: 268: break;
  5317  000994  D06A               	goto	l1306
  5318  000996                     
  5319                           ;main.c: 270: sprintf(&line1[1], "CONFIGURAR       >>");
  5320  000996  0E96               	movlw	low (_line1+1)
  5321  000998  0100               	movlb	0	; () banked
  5322  00099A  6F81               	movwf	sprintf@wh& (0+255),b
  5323  00099C  0E01               	movlw	high (_line1+1)
  5324  00099E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5325  0009A0  0E6D               	movlw	low STR_122
  5326  0009A2  6F83               	movwf	sprintf@f& (0+255),b
  5327  0009A4  0E7C               	movlw	high STR_122
  5328  0009A6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5329  0009A8  EC08  F02D         	call	_sprintf	;wreg free
  5330                           
  5331                           ;main.c: 271: break;
  5332  0009AC  D05E               	goto	l1306
  5333  0009AE                     
  5334                           ;main.c: 273: alterarDadosConexaoConfigWifi();
  5335  0009AE  ECFE  F01A         	call	_alterarDadosConexaoConfigWifi	;wreg free
  5336                           
  5337                           ;main.c: 274: break;
  5338  0009B2  D05B               	goto	l1306
  5339  0009B4                     
  5340                           ;main.c: 276: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5341  0009B4  0E96               	movlw	low (_line1+1)
  5342  0009B6  0100               	movlb	0	; () banked
  5343  0009B8  6F81               	movwf	sprintf@wh& (0+255),b
  5344  0009BA  0E01               	movlw	high (_line1+1)
  5345  0009BC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5346  0009BE  0E0B               	movlw	low STR_123
  5347  0009C0  6F83               	movwf	sprintf@f& (0+255),b
  5348  0009C2  0E7D               	movlw	high STR_123
  5349  0009C4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5350  0009C6  C057  F085         	movff	_t_fim_fase1,?_sprintf+4
  5351  0009CA  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5352  0009CC  EC08  F02D         	call	_sprintf	;wreg free
  5353                           
  5354                           ;main.c: 277: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5355  0009D0  0E81               	movlw	low (_line2+1)
  5356  0009D2  0100               	movlb	0	; () banked
  5357  0009D4  6F81               	movwf	sprintf@wh& (0+255),b
  5358  0009D6  0E01               	movlw	high (_line2+1)
  5359  0009D8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5360  0009DA  0E1E               	movlw	low STR_124
  5361  0009DC  6F83               	movwf	sprintf@f& (0+255),b
  5362  0009DE  0E7D               	movlw	high STR_124
  5363  0009E0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5364  0009E2  C056  F085         	movff	_t_fim_fase2,?_sprintf+4
  5365  0009E6  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5366  0009E8  EC08  F02D         	call	_sprintf	;wreg free
  5367                           
  5368                           ;main.c: 278: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5369  0009EC  0E6C               	movlw	low (_line3+1)
  5370  0009EE  0100               	movlb	0	; () banked
  5371  0009F0  6F81               	movwf	sprintf@wh& (0+255),b
  5372  0009F2  0E01               	movlw	high (_line3+1)
  5373  0009F4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5374  0009F6  0EF8               	movlw	low STR_125
  5375  0009F8  6F83               	movwf	sprintf@f& (0+255),b
  5376  0009FA  0E7C               	movlw	high STR_125
  5377  0009FC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5378  0009FE  C055  F085         	movff	_t_fim_fase3,?_sprintf+4
  5379  000A02  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5380  000A04  EC08  F02D         	call	_sprintf	;wreg free
  5381                           
  5382                           ;main.c: 279: sprintf(line4, "*0 nao passa fase");
  5383  000A08  0E56               	movlw	low _line4
  5384  000A0A  0100               	movlb	0	; () banked
  5385  000A0C  6F81               	movwf	sprintf@wh& (0+255),b
  5386  000A0E  0E01               	movlw	high _line4
  5387  000A10  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5388  000A12  0E8B               	movlw	low STR_126
  5389  000A14  6F83               	movwf	sprintf@f& (0+255),b
  5390  000A16  0E7D               	movlw	high STR_126
  5391  000A18  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5392  000A1A  EC08  F02D         	call	_sprintf	;wreg free
  5393                           
  5394                           ;main.c: 280: break;
  5395  000A1E  D025               	goto	l1306
  5396  000A20  0E00               	movlw	0
  5397  000A22  0100               	movlb	0	; () banked
  5398  000A24  6FFD               	movwf	_menu& (0+255),b
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;main.c: 283: }
  5402                           
  5403                           ;main.c: 282: break;
  5404  000A26  D021               	goto	l1306
  5405  000A28                     l1274:
  5406                           
  5407                           ; BSR set to: 0
  5408  000A28  0100               	movlb	0	; () banked
  5409  000A2A  51FD               	movf	_menu& (0+255),w,b
  5410                           
  5411                           ; Switch size 1, requested type "space"
  5412                           ; Number of cases is 10, Range of values is 0 to 11
  5413                           ; switch strategies available:
  5414                           ; Name         Instructions Cycles
  5415                           ; simple_byte           31    16 (average)
  5416                           ;	Chosen strategy is simple_byte
  5417  000A2C  0A00               	xorlw	0	; case 0
  5418  000A2E  B4D8               	btfsc	status,2,c
  5419  000A30  D4B8               	goto	l1275
  5420  000A32  0A01               	xorlw	1	; case 1
  5421  000A34  B4D8               	btfsc	status,2,c
  5422  000A36  D610               	goto	l1307
  5423  000A38  0A03               	xorlw	3	; case 2
  5424  000A3A  B4D8               	btfsc	status,2,c
  5425  000A3C  D665               	goto	l1312
  5426  000A3E  0A01               	xorlw	1	; case 3
  5427  000A40  B4D8               	btfsc	status,2,c
  5428  000A42  D6BE               	goto	l1325
  5429  000A44  0A06               	xorlw	6	; case 5
  5430  000A46  B4D8               	btfsc	status,2,c
  5431  000A48  D6D2               	goto	l1326
  5432  000A4A  0A03               	xorlw	3	; case 6
  5433  000A4C  B4D8               	btfsc	status,2,c
  5434  000A4E  D714               	goto	l1327
  5435  000A50  0A0E               	xorlw	14	; case 8
  5436  000A52  B4D8               	btfsc	status,2,c
  5437  000A54  D754               	goto	l1328
  5438  000A56  0A01               	xorlw	1	; case 9
  5439  000A58  B4D8               	btfsc	status,2,c
  5440  000A5A  D79D               	goto	l1329
  5441  000A5C  0A03               	xorlw	3	; case 10
  5442  000A5E  B4D8               	btfsc	status,2,c
  5443  000A60  D7A6               	goto	l1330
  5444  000A62  0A01               	xorlw	1	; case 11
  5445  000A64  B4D8               	btfsc	status,2,c
  5446  000A66  D7A6               	goto	l1331
  5447  000A68  D7DB               	goto	l1332
  5448  000A6A                     l1306:
  5449                           
  5450                           ;main.c: 287: if (menu == 1 | menu == 2 | menu == 3) {
  5451                           
  5452                           ; BSR set to: 0
  5453  000A6A  0100               	movlb	0	; () banked
  5454  000A6C  05FD               	decf	_menu& (0+255),w,b
  5455  000A6E  B4D8               	btfsc	status,2,c
  5456  000A70  D008               	goto	u14790
  5457                           
  5458                           ; BSR set to: 0
  5459  000A72  0E02               	movlw	2
  5460  000A74  19FD               	xorwf	_menu& (0+255),w,b
  5461  000A76  B4D8               	btfsc	status,2,c
  5462  000A78  D004               	goto	u14790
  5463                           
  5464                           ; BSR set to: 0
  5465  000A7A  0E03               	movlw	3
  5466  000A7C  19FD               	xorwf	_menu& (0+255),w,b
  5467  000A7E  A4D8               	btfss	status,2,c
  5468  000A80  D1C0               	goto	l1333
  5469  000A82                     u14790:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;main.c: 288: ajuste_parametro = 0;
  5473                           
  5474                           ; BSR set to: 0
  5475  000A82  0E00               	movlw	0
  5476  000A84  6E42               	movwf	_ajuste_parametro,c
  5477                           
  5478                           ;main.c: 290: switch (opcaomenu) {
  5479  000A86  D186               	goto	l1336
  5480  000A88                     
  5481                           ;main.c: 292: opcaomenu = 10;
  5482                           
  5483                           ; BSR set to: 0
  5484  000A88  0E0A               	movlw	10
  5485  000A8A  D180               	goto	L8
  5486  000A8C                     
  5487                           ;main.c: 295: menu = 1;
  5488  000A8C  0E01               	movlw	1
  5489  000A8E  0100               	movlb	0	; () banked
  5490  000A90  6FFD               	movwf	_menu& (0+255),b
  5491                           
  5492                           ;main.c: 296: line1[0] = '>';
  5493  000A92  0E3E               	movlw	62
  5494  000A94  0101               	movlb	1	; () banked
  5495  000A96  6F95               	movwf	_line1& (0+255),b
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;main.c: 297: if (btPress(64)) setRangeValor('+', &tempajt, 60, 160, 1);
  5499  000A98  0E40               	movlw	64
  5500  000A9A  EC41  F02F         	call	_btPress
  5501  000A9E  0900               	iorlw	0
  5502  000AA0  B4D8               	btfsc	status,2,c
  5503  000AA2  D00E               	goto	l1340
  5504  000AA4  0EF6               	movlw	low _tempajt
  5505  000AA6  0100               	movlb	0	; () banked
  5506  000AA8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5507  000AAA  0E00               	movlw	high _tempajt
  5508  000AAC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5509  000AAE  0E3C               	movlw	60
  5510  000AB0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5511  000AB2  0EA0               	movlw	160
  5512  000AB4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5513  000AB6  0E01               	movlw	1
  5514  000AB8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5515  000ABA  0E2B               	movlw	43
  5516  000ABC  EC14  F029         	call	_setRangeValor
  5517  000AC0                     l1340:
  5518                           
  5519                           ;main.c: 298: if (btPress(32)) setRangeValor('-', &tempajt, 60, 160, 1);
  5520  000AC0  0E20               	movlw	32
  5521  000AC2  EC41  F02F         	call	_btPress
  5522  000AC6  0900               	iorlw	0
  5523  000AC8  B4D8               	btfsc	status,2,c
  5524  000ACA  D187               	goto	l1338
  5525  000ACC  0EF6               	movlw	low _tempajt
  5526  000ACE  0100               	movlb	0	; () banked
  5527  000AD0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5528  000AD2  0E00               	movlw	high _tempajt
  5529  000AD4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5530  000AD6  0E3C               	movlw	60
  5531  000AD8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5532  000ADA  0EA0               	movlw	160
  5533  000ADC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5534  000ADE  0E01               	movlw	1
  5535  000AE0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5536  000AE2  0E2D               	movlw	45
  5537  000AE4  EC14  F029         	call	_setRangeValor
  5538                           
  5539                           ;main.c: 299: break;
  5540  000AE8  D178               	goto	l1338
  5541  000AEA                     
  5542                           ;main.c: 301: line2[0] = '>';
  5543  000AEA  0E3E               	movlw	62
  5544  000AEC  0101               	movlb	1	; () banked
  5545  000AEE  6F80               	movwf	_line2& (0+255),b
  5546                           
  5547                           ;main.c: 302: if (tipo_modo_trabalho == 0) {
  5548  000AF0  5058               	movf	_tipo_modo_trabalho,w,c
  5549  000AF2  A4D8               	btfss	status,2,c
  5550  000AF4  D172               	goto	l1338
  5551                           
  5552                           ; BSR set to: 1
  5553                           ;main.c: 303: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5554  000AF6  0E40               	movlw	64
  5555  000AF8  EC41  F02F         	call	_btPress
  5556  000AFC  0900               	iorlw	0
  5557  000AFE  B4D8               	btfsc	status,2,c
  5558  000B00  D010               	goto	l1344
  5559  000B02  0EF5               	movlw	low _umidajt
  5560  000B04  0100               	movlb	0	; () banked
  5561  000B06  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5562  000B08  0E00               	movlw	high _umidajt
  5563  000B0A  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5564  000B0C  0EF6               	movlw	low _tempajt
  5565  000B0E  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5566  000B10  0E00               	movlw	high _tempajt
  5567  000B12  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5568  000B14  0EF7               	movlw	low _clima
  5569  000B16  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5570  000B18  0E00               	movlw	high _clima
  5571  000B1A  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5572  000B1C  0E2B               	movlw	43
  5573  000B1E  EC15  F024         	call	_setUmidade
  5574  000B22                     l1344:
  5575                           
  5576                           ;main.c: 304: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5577  000B22  0E20               	movlw	32
  5578  000B24  EC41  F02F         	call	_btPress
  5579  000B28  0900               	iorlw	0
  5580  000B2A  B4D8               	btfsc	status,2,c
  5581  000B2C  D156               	goto	l1338
  5582  000B2E  0EF5               	movlw	low _umidajt
  5583  000B30  0100               	movlb	0	; () banked
  5584  000B32  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5585  000B34  0E00               	movlw	high _umidajt
  5586  000B36  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5587  000B38  0EF6               	movlw	low _tempajt
  5588  000B3A  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5589  000B3C  0E00               	movlw	high _tempajt
  5590  000B3E  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5591  000B40  0EF7               	movlw	low _clima
  5592  000B42  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5593  000B44  0E00               	movlw	high _clima
  5594  000B46  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5595  000B48  0E2D               	movlw	45
  5596  000B4A  EC15  F024         	call	_setUmidade
  5597                           
  5598                           ;main.c: 305: }
  5599                           ;main.c: 306: break;
  5600  000B4E  D145               	goto	l1338
  5601  000B50                     
  5602                           ;main.c: 308: line3[0] = '>';
  5603  000B50  0E3E               	movlw	62
  5604  000B52  0101               	movlb	1	; () banked
  5605  000B54  6F6B               	movwf	_line3& (0+255),b
  5606                           
  5607                           ; BSR set to: 1
  5608                           ;main.c: 309: if (btPress(64)) {
  5609  000B56  0E40               	movlw	64
  5610  000B58  EC41  F02F         	call	_btPress
  5611  000B5C  0900               	iorlw	0
  5612  000B5E  B4D8               	btfsc	status,2,c
  5613  000B60  D02A               	goto	l1347
  5614                           
  5615                           ;main.c: 310: setRangeValor('+', &fase, 1, 4, 4);
  5616  000B62  0EF8               	movlw	low _fase
  5617  000B64  0100               	movlb	0	; () banked
  5618  000B66  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5619  000B68  0E00               	movlw	high _fase
  5620  000B6A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5621  000B6C  0E01               	movlw	1
  5622  000B6E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5623  000B70  0E04               	movlw	4
  5624  000B72  6F68               	movwf	setRangeValor@_max& (0+255),b
  5625  000B74  0E04               	movlw	4
  5626  000B76  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5627  000B78  0E2B               	movlw	43
  5628  000B7A  EC14  F029         	call	_setRangeValor
  5629                           
  5630                           ;main.c: 311: faseAtual('A', &fase, &tempajt);
  5631  000B7E  0EF8               	movlw	low _fase
  5632  000B80  0100               	movlb	0	; () banked
  5633  000B82  6F60               	movwf	faseAtual@_fase& (0+255),b
  5634  000B84  0E00               	movlw	high _fase
  5635  000B86  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5636  000B88  0EF6               	movlw	low _tempajt
  5637  000B8A  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5638  000B8C  0E00               	movlw	high _tempajt
  5639  000B8E  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5640  000B90  0E41               	movlw	65
  5641  000B92  EC76  F023         	call	_faseAtual
  5642                           
  5643                           ;main.c: 312: setUmidade('A', &umidajt, &tempajt, &clima);
  5644  000B96  0EF5               	movlw	low _umidajt
  5645  000B98  0100               	movlb	0	; () banked
  5646  000B9A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5647  000B9C  0E00               	movlw	high _umidajt
  5648  000B9E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5649  000BA0  0EF6               	movlw	low _tempajt
  5650  000BA2  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5651  000BA4  0E00               	movlw	high _tempajt
  5652  000BA6  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5653  000BA8  0EF7               	movlw	low _clima
  5654  000BAA  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5655  000BAC  0E00               	movlw	high _clima
  5656  000BAE  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5657  000BB0  0E41               	movlw	65
  5658  000BB2  EC15  F024         	call	_setUmidade
  5659  000BB6                     l1347:
  5660                           
  5661                           ;main.c: 313: }
  5662                           ;main.c: 314: if (btPress(32)) {
  5663  000BB6  0E20               	movlw	32
  5664  000BB8  EC41  F02F         	call	_btPress
  5665  000BBC  0900               	iorlw	0
  5666  000BBE  B4D8               	btfsc	status,2,c
  5667  000BC0  D10C               	goto	l1338
  5668                           
  5669                           ;main.c: 315: setRangeValor('-', &fase, 1, 4, 4);
  5670  000BC2  0EF8               	movlw	low _fase
  5671  000BC4  0100               	movlb	0	; () banked
  5672  000BC6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5673  000BC8  0E00               	movlw	high _fase
  5674  000BCA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5675  000BCC  0E01               	movlw	1
  5676  000BCE  6F67               	movwf	setRangeValor@_min& (0+255),b
  5677  000BD0  0E04               	movlw	4
  5678  000BD2  6F68               	movwf	setRangeValor@_max& (0+255),b
  5679  000BD4  0E04               	movlw	4
  5680  000BD6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5681  000BD8  0E2D               	movlw	45
  5682  000BDA  EC14  F029         	call	_setRangeValor
  5683                           
  5684                           ;main.c: 316: faseAtual('A', &fase, &tempajt);
  5685  000BDE  0EF8               	movlw	low _fase
  5686  000BE0  0100               	movlb	0	; () banked
  5687  000BE2  6F60               	movwf	faseAtual@_fase& (0+255),b
  5688  000BE4  0E00               	movlw	high _fase
  5689  000BE6  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5690  000BE8  0EF6               	movlw	low _tempajt
  5691  000BEA  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5692  000BEC  0E00               	movlw	high _tempajt
  5693  000BEE  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5694  000BF0  0E41               	movlw	65
  5695  000BF2  EC76  F023         	call	_faseAtual
  5696                           
  5697                           ;main.c: 317: setUmidade('A', &umidajt, &tempajt, &clima);
  5698  000BF6  0EF5               	movlw	low _umidajt
  5699  000BF8  0100               	movlb	0	; () banked
  5700  000BFA  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5701  000BFC  0E00               	movlw	high _umidajt
  5702  000BFE  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5703  000C00  0EF6               	movlw	low _tempajt
  5704  000C02  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5705  000C04  0E00               	movlw	high _tempajt
  5706  000C06  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5707  000C08  0EF7               	movlw	low _clima
  5708  000C0A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5709  000C0C  0E00               	movlw	high _clima
  5710  000C0E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5711  000C10  0E41               	movlw	65
  5712  000C12  EC15  F024         	call	_setUmidade
  5713                           
  5714                           ;main.c: 318: }
  5715                           ;main.c: 319: break;
  5716  000C16  D0E1               	goto	l1338
  5717  000C18                     
  5718                           ;main.c: 321: menu = 1;
  5719  000C18  0E01               	movlw	1
  5720  000C1A  0100               	movlb	0	; () banked
  5721  000C1C  6FFD               	movwf	_menu& (0+255),b
  5722                           
  5723                           ;main.c: 322: line4[0] = '>';
  5724  000C1E  0E3E               	movlw	62
  5725  000C20  0101               	movlb	1	; () banked
  5726  000C22  6F56               	movwf	_line4& (0+255),b
  5727                           
  5728                           ; BSR set to: 1
  5729                           ;main.c: 323: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5730  000C24  0E40               	movlw	64
  5731  000C26  EC41  F02F         	call	_btPress
  5732  000C2A  0900               	iorlw	0
  5733  000C2C  B4D8               	btfsc	status,2,c
  5734  000C2E  D00E               	goto	l1350
  5735  000C30  0EF7               	movlw	low _clima
  5736  000C32  0100               	movlb	0	; () banked
  5737  000C34  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5738  000C36  0E00               	movlw	high _clima
  5739  000C38  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5740  000C3A  0E01               	movlw	1
  5741  000C3C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5742  000C3E  0E03               	movlw	3
  5743  000C40  6F68               	movwf	setRangeValor@_max& (0+255),b
  5744  000C42  0E05               	movlw	5
  5745  000C44  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5746  000C46  0E2B               	movlw	43
  5747  000C48  EC14  F029         	call	_setRangeValor
  5748  000C4C                     l1350:
  5749                           
  5750                           ;main.c: 324: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5751  000C4C  0E20               	movlw	32
  5752  000C4E  EC41  F02F         	call	_btPress
  5753  000C52  0900               	iorlw	0
  5754  000C54  B4D8               	btfsc	status,2,c
  5755  000C56  D0C1               	goto	l1338
  5756  000C58  0EF7               	movlw	low _clima
  5757  000C5A  0100               	movlb	0	; () banked
  5758  000C5C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5759  000C5E  0E00               	movlw	high _clima
  5760  000C60  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5761  000C62  0E01               	movlw	1
  5762  000C64  6F67               	movwf	setRangeValor@_min& (0+255),b
  5763  000C66  0E03               	movlw	3
  5764  000C68  6F68               	movwf	setRangeValor@_max& (0+255),b
  5765  000C6A  0E05               	movlw	5
  5766  000C6C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5767  000C6E  0E2D               	movlw	45
  5768  000C70  EC14  F029         	call	_setRangeValor
  5769                           
  5770                           ;main.c: 325: break;
  5771  000C74  D0B2               	goto	l1338
  5772  000C76                     
  5773                           ;main.c: 327: menu = 2;
  5774  000C76  0E02               	movlw	2
  5775  000C78  0100               	movlb	0	; () banked
  5776  000C7A  6FFD               	movwf	_menu& (0+255),b
  5777                           
  5778                           ;main.c: 328: line1[0] = '>';
  5779  000C7C  0E3E               	movlw	62
  5780  000C7E  0101               	movlb	1	; () banked
  5781  000C80  6F95               	movwf	_line1& (0+255),b
  5782                           
  5783                           ; BSR set to: 1
  5784                           ;main.c: 329: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5785  000C82  0E40               	movlw	64
  5786  000C84  EC41  F02F         	call	_btPress
  5787  000C88  0900               	iorlw	0
  5788  000C8A  A4D8               	btfss	status,2,c
  5789  000C8C  D006               	goto	u14900
  5790  000C8E  0E20               	movlw	32
  5791  000C90  EC41  F02F         	call	_btPress
  5792  000C94  0900               	iorlw	0
  5793  000C96  B4D8               	btfsc	status,2,c
  5794  000C98  D0A0               	goto	l1338
  5795  000C9A                     u14900:
  5796  000C9A  0E58               	movlw	low _tipo_modo_trabalho
  5797  000C9C  0100               	movlb	0	; () banked
  5798  000C9E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5799  000CA0  0E00               	movlw	high _tipo_modo_trabalho
  5800  000CA2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5801  000CA4  0E00               	movlw	0
  5802  000CA6  6F67               	movwf	setRangeValor@_min& (0+255),b
  5803  000CA8  0E01               	movlw	1
  5804  000CAA  6F68               	movwf	setRangeValor@_max& (0+255),b
  5805  000CAC  0E06               	movlw	6
  5806  000CAE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5807  000CB0  0E2B               	movlw	43
  5808  000CB2  EC14  F029         	call	_setRangeValor
  5809                           
  5810                           ;main.c: 330: break;
  5811  000CB6  D091               	goto	l1338
  5812  000CB8                     
  5813                           ;main.c: 332: line2[0] = '>';
  5814  000CB8  0E3E               	movlw	62
  5815  000CBA  0101               	movlb	1	; () banked
  5816  000CBC  6F80               	movwf	_line2& (0+255),b
  5817                           
  5818                           ; BSR set to: 1
  5819                           ;main.c: 333: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5820  000CBE  0E40               	movlw	64
  5821  000CC0  EC41  F02F         	call	_btPress
  5822  000CC4  0900               	iorlw	0
  5823  000CC6  A4D8               	btfss	status,2,c
  5824  000CC8  D006               	goto	u14920
  5825  000CCA  0E20               	movlw	32
  5826  000CCC  EC41  F02F         	call	_btPress
  5827  000CD0  0900               	iorlw	0
  5828  000CD2  B4D8               	btfsc	status,2,c
  5829  000CD4  D082               	goto	l1338
  5830  000CD6                     u14920:
  5831  000CD6  0E59               	movlw	low _trava_fase
  5832  000CD8  0100               	movlb	0	; () banked
  5833  000CDA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5834  000CDC  0E00               	movlw	high _trava_fase
  5835  000CDE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5836  000CE0  0E00               	movlw	0
  5837  000CE2  6F67               	movwf	setRangeValor@_min& (0+255),b
  5838  000CE4  0E01               	movlw	1
  5839  000CE6  6F68               	movwf	setRangeValor@_max& (0+255),b
  5840  000CE8  0E03               	movlw	3
  5841  000CEA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5842  000CEC  0E2B               	movlw	43
  5843  000CEE  EC14  F029         	call	_setRangeValor
  5844                           
  5845                           ;main.c: 334: break;
  5846  000CF2  D073               	goto	l1338
  5847  000CF4                     
  5848                           ;main.c: 336: line3[0] = '>';
  5849  000CF4  0E3E               	movlw	62
  5850  000CF6  0101               	movlb	1	; () banked
  5851  000CF8  6F6B               	movwf	_line3& (0+255),b
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;main.c: 337: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5855  000CFA  0E40               	movlw	64
  5856  000CFC  EC41  F02F         	call	_btPress
  5857  000D00  0900               	iorlw	0
  5858  000D02  A4D8               	btfss	status,2,c
  5859  000D04  D006               	goto	u14940
  5860  000D06  0E20               	movlw	32
  5861  000D08  EC41  F02F         	call	_btPress
  5862  000D0C  0900               	iorlw	0
  5863  000D0E  B4D8               	btfsc	status,2,c
  5864  000D10  D064               	goto	l1338
  5865  000D12                     u14940:
  5866  000D12  0EFC               	movlw	low _buzzer
  5867  000D14  0100               	movlb	0	; () banked
  5868  000D16  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5869  000D18  0E00               	movlw	high _buzzer
  5870  000D1A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5871  000D1C  0E00               	movlw	0
  5872  000D1E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5873  000D20  0E01               	movlw	1
  5874  000D22  6F68               	movwf	setRangeValor@_max& (0+255),b
  5875  000D24  0E0E               	movlw	14
  5876  000D26  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5877  000D28  0E2B               	movlw	43
  5878  000D2A  EC14  F029         	call	_setRangeValor
  5879                           
  5880                           ;main.c: 338: break;
  5881  000D2E  D055               	goto	l1338
  5882  000D30                     
  5883                           ;main.c: 340: menu = 2;
  5884  000D30  0E02               	movlw	2
  5885  000D32  0100               	movlb	0	; () banked
  5886  000D34  6FFD               	movwf	_menu& (0+255),b
  5887                           
  5888                           ;main.c: 341: line4[0] = '>';
  5889  000D36  0E3E               	movlw	62
  5890  000D38  0101               	movlb	1	; () banked
  5891  000D3A  6F56               	movwf	_line4& (0+255),b
  5892                           
  5893                           ; BSR set to: 1
  5894                           ;main.c: 342: if (btPress(2)) menu = 11;
  5895  000D3C  0E02               	movlw	2
  5896  000D3E  EC41  F02F         	call	_btPress
  5897  000D42  0900               	iorlw	0
  5898  000D44  B4D8               	btfsc	status,2,c
  5899  000D46  D049               	goto	l1338
  5900  000D48  0E0B               	movlw	11
  5901  000D4A  D00D               	goto	L9
  5902  000D4C                     
  5903                           ;main.c: 345: menu = 3;
  5904                           
  5905                           ; BSR set to: 0
  5906  000D4C  0E03               	movlw	3
  5907  000D4E  0100               	movlb	0	; () banked
  5908  000D50  6FFD               	movwf	_menu& (0+255),b
  5909                           
  5910                           ;main.c: 346: line1[0] = '>';
  5911  000D52  0E3E               	movlw	62
  5912  000D54  0101               	movlb	1	; () banked
  5913  000D56  6F95               	movwf	_line1& (0+255),b
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;main.c: 347: if (btPress(2)) menu = 8;
  5917  000D58  0E02               	movlw	2
  5918  000D5A  EC41  F02F         	call	_btPress
  5919  000D5E  0900               	iorlw	0
  5920  000D60  B4D8               	btfsc	status,2,c
  5921  000D62  D03B               	goto	l1338
  5922  000D64  0E08               	movlw	8
  5923  000D66                     L9:
  5924  000D66  0100               	movlb	0	; () banked
  5925  000D68  6FFD               	movwf	_menu& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;main.c: 348: break;
  5929  000D6A  D037               	goto	l1338
  5930  000D6C                     
  5931                           ;main.c: 350: menu = 3;
  5932                           
  5933                           ; BSR set to: 0
  5934  000D6C  0E03               	movlw	3
  5935  000D6E  0100               	movlb	0	; () banked
  5936  000D70  6FFD               	movwf	_menu& (0+255),b
  5937                           
  5938                           ;main.c: 351: line2[0] = '>';
  5939  000D72  0E3E               	movlw	62
  5940  000D74  0101               	movlb	1	; () banked
  5941  000D76  6F80               	movwf	_line2& (0+255),b
  5942                           
  5943                           ; BSR set to: 1
  5944                           ;main.c: 352: if (btPress(2)) {
  5945  000D78  0E02               	movlw	2
  5946  000D7A  EC41  F02F         	call	_btPress
  5947  000D7E  0900               	iorlw	0
  5948  000D80  B4D8               	btfsc	status,2,c
  5949  000D82  D02B               	goto	l1338
  5950                           
  5951                           ;main.c: 353: menu = 5;
  5952  000D84  0E05               	movlw	5
  5953  000D86  0100               	movlb	0	; () banked
  5954  000D88  6FFD               	movwf	_menu& (0+255),b
  5955  000D8A  D002               	goto	l1370
  5956  000D8C                     L8:
  5957  000D8C  6E43               	movwf	_opcaomenu,c
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;main.c: 355: }
  5961                           ;main.c: 356: break;
  5962  000D8E  D025               	goto	l1338
  5963  000D90                     l1370:
  5964                           
  5965                           ;main.c: 358: opcaomenu = 1;
  5966                           
  5967                           ; BSR set to: 0
  5968  000D90  0E01               	movlw	1
  5969  000D92  D7FC               	goto	L8
  5970  000D94                     l1336:
  5971  000D94  5043               	movf	_opcaomenu,w,c
  5972                           
  5973                           ; Switch size 1, requested type "space"
  5974                           ; Number of cases is 11, Range of values is 0 to 10
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; simple_byte           34    18 (average)
  5978                           ;	Chosen strategy is simple_byte
  5979  000D96  0A00               	xorlw	0	; case 0
  5980  000D98  B4D8               	btfsc	status,2,c
  5981  000D9A  D676               	goto	l1337
  5982  000D9C  0A01               	xorlw	1	; case 1
  5983  000D9E  B4D8               	btfsc	status,2,c
  5984  000DA0  D675               	goto	l1339
  5985  000DA2  0A03               	xorlw	3	; case 2
  5986  000DA4  B4D8               	btfsc	status,2,c
  5987  000DA6  D6A1               	goto	l1342
  5988  000DA8  0A01               	xorlw	1	; case 3
  5989  000DAA  B4D8               	btfsc	status,2,c
  5990  000DAC  D6D1               	goto	l1346
  5991  000DAE  0A07               	xorlw	7	; case 4
  5992  000DB0  B4D8               	btfsc	status,2,c
  5993  000DB2  D732               	goto	l1349
  5994  000DB4  0A01               	xorlw	1	; case 5
  5995  000DB6  B4D8               	btfsc	status,2,c
  5996  000DB8  D75E               	goto	l1352
  5997  000DBA  0A03               	xorlw	3	; case 6
  5998  000DBC  B4D8               	btfsc	status,2,c
  5999  000DBE  D77C               	goto	l1356
  6000  000DC0  0A01               	xorlw	1	; case 7
  6001  000DC2  B4D8               	btfsc	status,2,c
  6002  000DC4  D797               	goto	l1360
  6003  000DC6  0A0F               	xorlw	15	; case 8
  6004  000DC8  B4D8               	btfsc	status,2,c
  6005  000DCA  D7B2               	goto	l1364
  6006  000DCC  0A01               	xorlw	1	; case 9
  6007  000DCE  B4D8               	btfsc	status,2,c
  6008  000DD0  D7BD               	goto	l1366
  6009  000DD2  0A03               	xorlw	3	; case 10
  6010  000DD4  B4D8               	btfsc	status,2,c
  6011  000DD6  D7CA               	goto	l1368
  6012  000DD8  D7DB               	goto	l1370
  6013  000DDA                     l1338:
  6014                           
  6015                           ;main.c: 362: if (btPress(16)) opcaomenu++;
  6016  000DDA  0E10               	movlw	16
  6017  000DDC  EC41  F02F         	call	_btPress
  6018  000DE0  0900               	iorlw	0
  6019  000DE2  A4D8               	btfss	status,2,c
  6020  000DE4  2A43               	incf	_opcaomenu,f,c
  6021                           
  6022                           ;main.c: 363: if (btPress(1)) opcaomenu--;
  6023  000DE6  0E01               	movlw	1
  6024  000DE8  EC41  F02F         	call	_btPress
  6025  000DEC  0900               	iorlw	0
  6026  000DEE  A4D8               	btfss	status,2,c
  6027  000DF0  0643               	decf	_opcaomenu,f,c
  6028                           
  6029                           ;main.c: 364: if (btPress(8)) menu = 0;
  6030  000DF2  0E08               	movlw	8
  6031  000DF4  EC41  F02F         	call	_btPress
  6032  000DF8  0900               	iorlw	0
  6033  000DFA  B4D8               	btfsc	status,2,c
  6034  000DFC  D3F4               	goto	l1459
  6035  000DFE  0E00               	movlw	0
  6036  000E00  D3F0               	goto	L11
  6037  000E02                     l1333:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;main.c: 369: if (menu == 5 | menu == 6) {
  6041                           
  6042                           ; BSR set to: 0
  6043  000E02  0E05               	movlw	5
  6044  000E04  19FD               	xorwf	_menu& (0+255),w,b
  6045  000E06  B4D8               	btfsc	status,2,c
  6046  000E08  D004               	goto	u15020
  6047                           
  6048                           ; BSR set to: 0
  6049  000E0A  0E06               	movlw	6
  6050  000E0C  19FD               	xorwf	_menu& (0+255),w,b
  6051  000E0E  A4D8               	btfss	status,2,c
  6052  000E10  D2EE               	goto	l1375
  6053  000E12                     u15020:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;main.c: 370: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  6057                           
  6058                           ; BSR set to: 0
  6059  000E12  0E30               	movlw	48
  6060  000E14  184B               	xorwf	_senha_desbloqueio_func,w,c
  6061  000E16  B4D8               	btfsc	status,2,c
  6062  000E18  D2A3               	goto	l1379
  6063                           
  6064                           ; BSR set to: 0
  6065  000E1A  0E01               	movlw	1
  6066  000E1C  6E43               	movwf	_opcaomenu,c
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;main.c: 371: switch (opcaomenu) {
  6070  000E1E  D2A0               	goto	l1379
  6071  000E20                     
  6072                           ;main.c: 373: menu = 5;
  6073                           
  6074                           ; BSR set to: 0
  6075  000E20  0E05               	movlw	5
  6076  000E22  0100               	movlb	0	; () banked
  6077  000E24  6FFD               	movwf	_menu& (0+255),b
  6078                           
  6079                           ;main.c: 374: line1[0] = '>';
  6080  000E26  0E3E               	movlw	62
  6081  000E28  0101               	movlb	1	; () banked
  6082  000E2A  6F95               	movwf	_line1& (0+255),b
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;main.c: 375: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6086  000E2C  0E40               	movlw	64
  6087  000E2E  EC41  F02F         	call	_btPress
  6088  000E32  0900               	iorlw	0
  6089  000E34  B4D8               	btfsc	status,2,c
  6090  000E36  D00E               	goto	l1381
  6091  000E38  0E4B               	movlw	low _senha_desbloqueio_func
  6092  000E3A  0100               	movlb	0	; () banked
  6093  000E3C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6094  000E3E  0E00               	movlw	high _senha_desbloqueio_func
  6095  000E40  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6096  000E42  0E00               	movlw	0
  6097  000E44  6F67               	movwf	setRangeValor@_min& (0+255),b
  6098  000E46  0E32               	movlw	50
  6099  000E48  6F68               	movwf	setRangeValor@_max& (0+255),b
  6100  000E4A  0E00               	movlw	0
  6101  000E4C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6102  000E4E  0E2B               	movlw	43
  6103  000E50  EC14  F029         	call	_setRangeValor
  6104  000E54                     l1381:
  6105                           
  6106                           ;main.c: 376: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6107  000E54  0E20               	movlw	32
  6108  000E56  EC41  F02F         	call	_btPress
  6109  000E5A  0900               	iorlw	0
  6110  000E5C  B4D8               	btfsc	status,2,c
  6111  000E5E  D2AF               	goto	l1383
  6112  000E60  0E4B               	movlw	low _senha_desbloqueio_func
  6113  000E62  0100               	movlb	0	; () banked
  6114  000E64  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6115  000E66  0E00               	movlw	high _senha_desbloqueio_func
  6116  000E68  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6117  000E6A  0E00               	movlw	0
  6118  000E6C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6119  000E6E  0E32               	movlw	50
  6120  000E70  6F68               	movwf	setRangeValor@_max& (0+255),b
  6121  000E72  0E00               	movlw	0
  6122  000E74  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6123  000E76  0E2D               	movlw	45
  6124  000E78  EC14  F029         	call	_setRangeValor
  6125                           
  6126                           ;main.c: 377: break;
  6127  000E7C  D2A0               	goto	l1383
  6128  000E7E                     
  6129                           ;main.c: 379: line2[0] = '>';
  6130  000E7E  0E3E               	movlw	62
  6131  000E80  0101               	movlb	1	; () banked
  6132  000E82  6F80               	movwf	_line2& (0+255),b
  6133                           
  6134                           ; BSR set to: 1
  6135                           ;main.c: 380: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6136  000E84  0E40               	movlw	64
  6137  000E86  EC41  F02F         	call	_btPress
  6138  000E8A  0900               	iorlw	0
  6139  000E8C  B4D8               	btfsc	status,2,c
  6140  000E8E  D00E               	goto	l1385
  6141  000E90  0EFB               	movlw	low _tipo_sensor_umidade
  6142  000E92  0100               	movlb	0	; () banked
  6143  000E94  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6144  000E96  0E00               	movlw	high _tipo_sensor_umidade
  6145  000E98  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6146  000E9A  0E00               	movlw	0
  6147  000E9C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6148  000E9E  0E01               	movlw	1
  6149  000EA0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6150  000EA2  0E07               	movlw	7
  6151  000EA4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6152  000EA6  0E2B               	movlw	43
  6153  000EA8  EC14  F029         	call	_setRangeValor
  6154  000EAC                     l1385:
  6155                           
  6156                           ;main.c: 381: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6157  000EAC  0E20               	movlw	32
  6158  000EAE  EC41  F02F         	call	_btPress
  6159  000EB2  0900               	iorlw	0
  6160  000EB4  B4D8               	btfsc	status,2,c
  6161  000EB6  D283               	goto	l1383
  6162  000EB8  0EFB               	movlw	low _tipo_sensor_umidade
  6163  000EBA  0100               	movlb	0	; () banked
  6164  000EBC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6165  000EBE  0E00               	movlw	high _tipo_sensor_umidade
  6166  000EC0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6167  000EC2  0E00               	movlw	0
  6168  000EC4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6169  000EC6  0E01               	movlw	1
  6170  000EC8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6171  000ECA  0E07               	movlw	7
  6172  000ECC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6173  000ECE  0E2D               	movlw	45
  6174  000ED0  EC14  F029         	call	_setRangeValor
  6175                           
  6176                           ;main.c: 382: break;
  6177  000ED4  D274               	goto	l1383
  6178  000ED6                     
  6179                           ;main.c: 384: line3[0] = '>';
  6180  000ED6  0E3E               	movlw	62
  6181  000ED8  0101               	movlb	1	; () banked
  6182  000EDA  6F6B               	movwf	_line3& (0+255),b
  6183                           
  6184                           ; BSR set to: 1
  6185                           ;main.c: 385: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6186  000EDC  0E40               	movlw	64
  6187  000EDE  EC41  F02F         	call	_btPress
  6188  000EE2  0900               	iorlw	0
  6189  000EE4  B4D8               	btfsc	status,2,c
  6190  000EE6  D00E               	goto	l1388
  6191  000EE8  0E50               	movlw	low _h_abafador
  6192  000EEA  0100               	movlb	0	; () banked
  6193  000EEC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6194  000EEE  0E00               	movlw	high _h_abafador
  6195  000EF0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6196  000EF2  0E01               	movlw	1
  6197  000EF4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6198  000EF6  0E0A               	movlw	10
  6199  000EF8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6200  000EFA  0E0C               	movlw	12
  6201  000EFC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6202  000EFE  0E2B               	movlw	43
  6203  000F00  EC14  F029         	call	_setRangeValor
  6204  000F04                     l1388:
  6205                           
  6206                           ;main.c: 386: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6207  000F04  0E20               	movlw	32
  6208  000F06  EC41  F02F         	call	_btPress
  6209  000F0A  0900               	iorlw	0
  6210  000F0C  B4D8               	btfsc	status,2,c
  6211  000F0E  D257               	goto	l1383
  6212  000F10  0E50               	movlw	low _h_abafador
  6213  000F12  0100               	movlb	0	; () banked
  6214  000F14  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6215  000F16  0E00               	movlw	high _h_abafador
  6216  000F18  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6217  000F1A  0E01               	movlw	1
  6218  000F1C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6219  000F1E  0E0A               	movlw	10
  6220  000F20  6F68               	movwf	setRangeValor@_max& (0+255),b
  6221  000F22  0E0C               	movlw	12
  6222  000F24  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6223  000F26  0E2D               	movlw	45
  6224  000F28  EC14  F029         	call	_setRangeValor
  6225                           
  6226                           ;main.c: 387: break;
  6227  000F2C  D248               	goto	l1383
  6228  000F2E                     
  6229                           ;main.c: 389: line4[0] = '>';
  6230  000F2E  0E3E               	movlw	62
  6231  000F30  0101               	movlb	1	; () banked
  6232  000F32  6F56               	movwf	_line4& (0+255),b
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;main.c: 390: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6236  000F34  0E40               	movlw	64
  6237  000F36  EC41  F02F         	call	_btPress
  6238  000F3A  0900               	iorlw	0
  6239  000F3C  B4D8               	btfsc	status,2,c
  6240  000F3E  D00E               	goto	l1391
  6241  000F40  0E4F               	movlw	low _h_flap
  6242  000F42  0100               	movlb	0	; () banked
  6243  000F44  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6244  000F46  0E00               	movlw	high _h_flap
  6245  000F48  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6246  000F4A  0E01               	movlw	1
  6247  000F4C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6248  000F4E  0E0A               	movlw	10
  6249  000F50  6F68               	movwf	setRangeValor@_max& (0+255),b
  6250  000F52  0E0D               	movlw	13
  6251  000F54  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6252  000F56  0E2B               	movlw	43
  6253  000F58  EC14  F029         	call	_setRangeValor
  6254  000F5C                     l1391:
  6255                           
  6256                           ;main.c: 391: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6257  000F5C  0E20               	movlw	32
  6258  000F5E  EC41  F02F         	call	_btPress
  6259  000F62  0900               	iorlw	0
  6260  000F64  B4D8               	btfsc	status,2,c
  6261  000F66  D22B               	goto	l1383
  6262  000F68  0E4F               	movlw	low _h_flap
  6263  000F6A  0100               	movlb	0	; () banked
  6264  000F6C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6265  000F6E  0E00               	movlw	high _h_flap
  6266  000F70  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6267  000F72  0E01               	movlw	1
  6268  000F74  6F67               	movwf	setRangeValor@_min& (0+255),b
  6269  000F76  0E0A               	movlw	10
  6270  000F78  6F68               	movwf	setRangeValor@_max& (0+255),b
  6271  000F7A  0E0D               	movlw	13
  6272  000F7C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6273  000F7E  0E2D               	movlw	45
  6274  000F80  EC14  F029         	call	_setRangeValor
  6275                           
  6276                           ;main.c: 392: break;
  6277  000F84  D21C               	goto	l1383
  6278  000F86                     
  6279                           ;main.c: 394: line1[11] = '>';
  6280  000F86  0E3E               	movlw	62
  6281  000F88  0101               	movlb	1	; () banked
  6282  000F8A  6FA0               	movwf	(_line1+11)& (0+255),b
  6283                           
  6284                           ; BSR set to: 1
  6285                           ;main.c: 395: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6286  000F8C  0E40               	movlw	64
  6287  000F8E  EC41  F02F         	call	_btPress
  6288  000F92  0900               	iorlw	0
  6289  000F94  B4D8               	btfsc	status,2,c
  6290  000F96  D00E               	goto	l1394
  6291  000F98  0E51               	movlw	low _h_venotinha
  6292  000F9A  0100               	movlb	0	; () banked
  6293  000F9C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6294  000F9E  0E00               	movlw	high _h_venotinha
  6295  000FA0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6296  000FA2  0E01               	movlw	1
  6297  000FA4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6298  000FA6  0E0A               	movlw	10
  6299  000FA8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6300  000FAA  0E0B               	movlw	11
  6301  000FAC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6302  000FAE  0E2B               	movlw	43
  6303  000FB0  EC14  F029         	call	_setRangeValor
  6304  000FB4                     l1394:
  6305                           
  6306                           ;main.c: 396: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6307  000FB4  0E20               	movlw	32
  6308  000FB6  EC41  F02F         	call	_btPress
  6309  000FBA  0900               	iorlw	0
  6310  000FBC  B4D8               	btfsc	status,2,c
  6311  000FBE  D1FF               	goto	l1383
  6312  000FC0  0E51               	movlw	low _h_venotinha
  6313  000FC2  0100               	movlb	0	; () banked
  6314  000FC4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6315  000FC6  0E00               	movlw	high _h_venotinha
  6316  000FC8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6317  000FCA  0E01               	movlw	1
  6318  000FCC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6319  000FCE  0E0A               	movlw	10
  6320  000FD0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6321  000FD2  0E0B               	movlw	11
  6322  000FD4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6323  000FD6  0E2D               	movlw	45
  6324  000FD8  EC14  F029         	call	_setRangeValor
  6325                           
  6326                           ;main.c: 397: break;
  6327  000FDC  D1F0               	goto	l1383
  6328  000FDE                     
  6329                           ;main.c: 399: line2[11] = '>';
  6330  000FDE  0E3E               	movlw	62
  6331  000FE0  0101               	movlb	1	; () banked
  6332  000FE2  6F8B               	movwf	(_line2+11)& (0+255),b
  6333                           
  6334                           ; BSR set to: 1
  6335                           ;main.c: 400: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6336  000FE4  0E40               	movlw	64
  6337  000FE6  EC41  F02F         	call	_btPress
  6338  000FEA  0900               	iorlw	0
  6339  000FEC  B4D8               	btfsc	status,2,c
  6340  000FEE  D00E               	goto	l1397
  6341  000FF0  0E52               	movlw	low _h_modo_seguranca
  6342  000FF2  0100               	movlb	0	; () banked
  6343  000FF4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6344  000FF6  0E00               	movlw	high _h_modo_seguranca
  6345  000FF8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6346  000FFA  0E00               	movlw	0
  6347  000FFC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6348  000FFE  0E0F               	movlw	15
  6349  001000  6F68               	movwf	setRangeValor@_max& (0+255),b
  6350  001002  0E10               	movlw	16
  6351  001004  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6352  001006  0E2B               	movlw	43
  6353  001008  EC14  F029         	call	_setRangeValor
  6354  00100C                     l1397:
  6355                           
  6356                           ;main.c: 401: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6357  00100C  0E20               	movlw	32
  6358  00100E  EC41  F02F         	call	_btPress
  6359  001012  0900               	iorlw	0
  6360  001014  B4D8               	btfsc	status,2,c
  6361  001016  D1D3               	goto	l1383
  6362  001018  0E52               	movlw	low _h_modo_seguranca
  6363  00101A  0100               	movlb	0	; () banked
  6364  00101C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6365  00101E  0E00               	movlw	high _h_modo_seguranca
  6366  001020  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6367  001022  0E00               	movlw	0
  6368  001024  6F67               	movwf	setRangeValor@_min& (0+255),b
  6369  001026  0E0F               	movlw	15
  6370  001028  6F68               	movwf	setRangeValor@_max& (0+255),b
  6371  00102A  0E10               	movlw	16
  6372  00102C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6373  00102E  0E2D               	movlw	45
  6374  001030  EC14  F029         	call	_setRangeValor
  6375                           
  6376                           ;main.c: 402: break;
  6377  001034  D1C4               	goto	l1383
  6378  001036                     
  6379                           ;main.c: 404: line3[11] = '>';
  6380  001036  0E3E               	movlw	62
  6381  001038  0101               	movlb	1	; () banked
  6382  00103A  6F76               	movwf	(_line3+11)& (0+255),b
  6383                           
  6384                           ; BSR set to: 1
  6385                           ;main.c: 405: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6386  00103C  0E40               	movlw	64
  6387  00103E  EC41  F02F         	call	_btPress
  6388  001042  0900               	iorlw	0
  6389  001044  B4D8               	btfsc	status,2,c
  6390  001046  D00E               	goto	l1400
  6391  001048  0E4E               	movlw	low _h_buzzer
  6392  00104A  0100               	movlb	0	; () banked
  6393  00104C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6394  00104E  0E00               	movlw	high _h_buzzer
  6395  001050  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6396  001052  0E01               	movlw	1
  6397  001054  6F67               	movwf	setRangeValor@_min& (0+255),b
  6398  001056  0E0F               	movlw	15
  6399  001058  6F68               	movwf	setRangeValor@_max& (0+255),b
  6400  00105A  0E11               	movlw	17
  6401  00105C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6402  00105E  0E2B               	movlw	43
  6403  001060  EC14  F029         	call	_setRangeValor
  6404  001064                     l1400:
  6405                           
  6406                           ;main.c: 406: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6407  001064  0E20               	movlw	32
  6408  001066  EC41  F02F         	call	_btPress
  6409  00106A  0900               	iorlw	0
  6410  00106C  B4D8               	btfsc	status,2,c
  6411  00106E  D1A7               	goto	l1383
  6412  001070  0E4E               	movlw	low _h_buzzer
  6413  001072  0100               	movlb	0	; () banked
  6414  001074  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6415  001076  0E00               	movlw	high _h_buzzer
  6416  001078  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6417  00107A  0E01               	movlw	1
  6418  00107C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6419  00107E  0E0F               	movlw	15
  6420  001080  6F68               	movwf	setRangeValor@_max& (0+255),b
  6421  001082  0E11               	movlw	17
  6422  001084  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6423  001086  0E2D               	movlw	45
  6424  001088  EC14  F029         	call	_setRangeValor
  6425                           
  6426                           ;main.c: 407: break;
  6427  00108C  D198               	goto	l1383
  6428  00108E                     
  6429                           ;main.c: 409: menu = 5;
  6430  00108E  0E05               	movlw	5
  6431  001090  0100               	movlb	0	; () banked
  6432  001092  6FFD               	movwf	_menu& (0+255),b
  6433                           
  6434                           ;main.c: 410: line4[11] = '>';
  6435  001094  0E3E               	movlw	62
  6436  001096  0101               	movlb	1	; () banked
  6437  001098  6F61               	movwf	(_line4+11)& (0+255),b
  6438                           
  6439                           ; BSR set to: 1
  6440                           ;main.c: 411: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6441  00109A  0E40               	movlw	64
  6442  00109C  EC41  F02F         	call	_btPress
  6443  0010A0  0900               	iorlw	0
  6444  0010A2  B4D8               	btfsc	status,2,c
  6445  0010A4  D00E               	goto	l1403
  6446  0010A6  0E54               	movlw	low _t_flap_ligado
  6447  0010A8  0100               	movlb	0	; () banked
  6448  0010AA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6449  0010AC  0E00               	movlw	high _t_flap_ligado
  6450  0010AE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6451  0010B0  0E01               	movlw	1
  6452  0010B2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6453  0010B4  0EFA               	movlw	250
  6454  0010B6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6455  0010B8  0E12               	movlw	18
  6456  0010BA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6457  0010BC  0E2B               	movlw	43
  6458  0010BE  EC14  F029         	call	_setRangeValor
  6459  0010C2                     l1403:
  6460                           
  6461                           ;main.c: 412: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6462  0010C2  0E20               	movlw	32
  6463  0010C4  EC41  F02F         	call	_btPress
  6464  0010C8  0900               	iorlw	0
  6465  0010CA  B4D8               	btfsc	status,2,c
  6466  0010CC  D178               	goto	l1383
  6467  0010CE  0E54               	movlw	low _t_flap_ligado
  6468  0010D0  0100               	movlb	0	; () banked
  6469  0010D2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6470  0010D4  0E00               	movlw	high _t_flap_ligado
  6471  0010D6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6472  0010D8  0E01               	movlw	1
  6473  0010DA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6474  0010DC  0EFA               	movlw	250
  6475  0010DE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6476  0010E0  0E12               	movlw	18
  6477  0010E2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6478  0010E4  0E2D               	movlw	45
  6479  0010E6  EC14  F029         	call	_setRangeValor
  6480                           
  6481                           ;main.c: 413: break;
  6482  0010EA  D169               	goto	l1383
  6483  0010EC                     
  6484                           ;main.c: 415: menu = 6;
  6485  0010EC  0E06               	movlw	6
  6486  0010EE  0100               	movlb	0	; () banked
  6487  0010F0  6FFD               	movwf	_menu& (0+255),b
  6488                           
  6489                           ;main.c: 416: line1[0] = '>';
  6490  0010F2  0E3E               	movlw	62
  6491  0010F4  0101               	movlb	1	; () banked
  6492  0010F6  6F95               	movwf	_line1& (0+255),b
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;main.c: 417: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6496  0010F8  0E40               	movlw	64
  6497  0010FA  EC41  F02F         	call	_btPress
  6498  0010FE  0900               	iorlw	0
  6499  001100  B4D8               	btfsc	status,2,c
  6500  001102  D00E               	goto	l1406
  6501  001104  0E53               	movlw	low _t_flap_intervalo
  6502  001106  0100               	movlb	0	; () banked
  6503  001108  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6504  00110A  0E00               	movlw	high _t_flap_intervalo
  6505  00110C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6506  00110E  0E00               	movlw	0
  6507  001110  6F67               	movwf	setRangeValor@_min& (0+255),b
  6508  001112  0EFA               	movlw	250
  6509  001114  6F68               	movwf	setRangeValor@_max& (0+255),b
  6510  001116  0E14               	movlw	20
  6511  001118  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6512  00111A  0E2B               	movlw	43
  6513  00111C  EC14  F029         	call	_setRangeValor
  6514  001120                     l1406:
  6515                           
  6516                           ;main.c: 418: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6517  001120  0E20               	movlw	32
  6518  001122  EC41  F02F         	call	_btPress
  6519  001126  0900               	iorlw	0
  6520  001128  B4D8               	btfsc	status,2,c
  6521  00112A  D149               	goto	l1383
  6522  00112C  0E53               	movlw	low _t_flap_intervalo
  6523  00112E  0100               	movlb	0	; () banked
  6524  001130  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6525  001132  0E00               	movlw	high _t_flap_intervalo
  6526  001134  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6527  001136  0E00               	movlw	0
  6528  001138  6F67               	movwf	setRangeValor@_min& (0+255),b
  6529  00113A  0EFA               	movlw	250
  6530  00113C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6531  00113E  0E14               	movlw	20
  6532  001140  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6533  001142  0E2D               	movlw	45
  6534  001144  EC14  F029         	call	_setRangeValor
  6535                           
  6536                           ;main.c: 419: break;
  6537  001148  D13A               	goto	l1383
  6538  00114A                     
  6539                           ;main.c: 421: line2[0] = '>';
  6540  00114A  0E3E               	movlw	62
  6541  00114C  0101               	movlb	1	; () banked
  6542  00114E  6F80               	movwf	_line2& (0+255),b
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;main.c: 422: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6546  001150  0E40               	movlw	64
  6547  001152  EC41  F02F         	call	_btPress
  6548  001156  0900               	iorlw	0
  6549  001158  B4D8               	btfsc	status,2,c
  6550  00115A  D00E               	goto	l1409
  6551  00115C  0EFF               	movlw	low _t_buzzer_religar
  6552  00115E  0100               	movlb	0	; () banked
  6553  001160  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6554  001162  0E00               	movlw	high _t_buzzer_religar
  6555  001164  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6556  001166  0E00               	movlw	0
  6557  001168  6F67               	movwf	setRangeValor@_min& (0+255),b
  6558  00116A  0E1E               	movlw	30
  6559  00116C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6560  00116E  0E15               	movlw	21
  6561  001170  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6562  001172  0E2B               	movlw	43
  6563  001174  EC14  F029         	call	_setRangeValor
  6564  001178                     l1409:
  6565                           
  6566                           ;main.c: 423: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6567  001178  0E20               	movlw	32
  6568  00117A  EC41  F02F         	call	_btPress
  6569  00117E  0900               	iorlw	0
  6570  001180  B4D8               	btfsc	status,2,c
  6571  001182  D11D               	goto	l1383
  6572  001184  0EFF               	movlw	low _t_buzzer_religar
  6573  001186  0100               	movlb	0	; () banked
  6574  001188  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6575  00118A  0E00               	movlw	high _t_buzzer_religar
  6576  00118C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6577  00118E  0E00               	movlw	0
  6578  001190  6F67               	movwf	setRangeValor@_min& (0+255),b
  6579  001192  0E1E               	movlw	30
  6580  001194  6F68               	movwf	setRangeValor@_max& (0+255),b
  6581  001196  0E15               	movlw	21
  6582  001198  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6583  00119A  0E2D               	movlw	45
  6584  00119C  EC14  F029         	call	_setRangeValor
  6585                           
  6586                           ;main.c: 424: break;
  6587  0011A0  D10E               	goto	l1383
  6588  0011A2                     
  6589                           ;main.c: 426: line3[0] = '>';
  6590  0011A2  0E3E               	movlw	62
  6591  0011A4  0101               	movlb	1	; () banked
  6592  0011A6  6F6B               	movwf	_line3& (0+255),b
  6593                           
  6594                           ; BSR set to: 1
  6595                           ;main.c: 427: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6596  0011A8  0E40               	movlw	64
  6597  0011AA  EC41  F02F         	call	_btPress
  6598  0011AE  0900               	iorlw	0
  6599  0011B0  B4D8               	btfsc	status,2,c
  6600  0011B2  D00E               	goto	l1412
  6601  0011B4  0EFA               	movlw	low _t_temp_automatica
  6602  0011B6  0100               	movlb	0	; () banked
  6603  0011B8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6604  0011BA  0E00               	movlw	high _t_temp_automatica
  6605  0011BC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6606  0011BE  0E00               	movlw	0
  6607  0011C0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6608  0011C2  0EFA               	movlw	250
  6609  0011C4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6610  0011C6  0E16               	movlw	22
  6611  0011C8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6612  0011CA  0E2B               	movlw	43
  6613  0011CC  EC14  F029         	call	_setRangeValor
  6614  0011D0                     l1412:
  6615                           
  6616                           ;main.c: 428: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6617  0011D0  0E20               	movlw	32
  6618  0011D2  EC41  F02F         	call	_btPress
  6619  0011D6  0900               	iorlw	0
  6620  0011D8  B4D8               	btfsc	status,2,c
  6621  0011DA  D0F1               	goto	l1383
  6622  0011DC  0EFA               	movlw	low _t_temp_automatica
  6623  0011DE  0100               	movlb	0	; () banked
  6624  0011E0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6625  0011E2  0E00               	movlw	high _t_temp_automatica
  6626  0011E4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6627  0011E6  0E00               	movlw	0
  6628  0011E8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6629  0011EA  0EFA               	movlw	250
  6630  0011EC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6631  0011EE  0E16               	movlw	22
  6632  0011F0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6633  0011F2  0E2D               	movlw	45
  6634  0011F4  EC14  F029         	call	_setRangeValor
  6635                           
  6636                           ;main.c: 429: break;
  6637  0011F8  D0E2               	goto	l1383
  6638  0011FA                     
  6639                           ;main.c: 431: line4[0] = '>';
  6640  0011FA  0E3E               	movlw	62
  6641  0011FC  0101               	movlb	1	; () banked
  6642  0011FE  6F56               	movwf	_line4& (0+255),b
  6643                           
  6644                           ; BSR set to: 1
  6645                           ;main.c: 432: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6646  001200  0E40               	movlw	64
  6647  001202  EC41  F02F         	call	_btPress
  6648  001206  0900               	iorlw	0
  6649  001208  B4D8               	btfsc	status,2,c
  6650  00120A  D00E               	goto	l1415
  6651  00120C  0E4C               	movlw	low _wifi_habilita_alteracao
  6652  00120E  0100               	movlb	0	; () banked
  6653  001210  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6654  001212  0E00               	movlw	high _wifi_habilita_alteracao
  6655  001214  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6656  001216  0E00               	movlw	0
  6657  001218  6F67               	movwf	setRangeValor@_min& (0+255),b
  6658  00121A  0E01               	movlw	1
  6659  00121C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6660  00121E  0E17               	movlw	23
  6661  001220  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6662  001222  0E2B               	movlw	43
  6663  001224  EC14  F029         	call	_setRangeValor
  6664  001228                     l1415:
  6665                           
  6666                           ;main.c: 433: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6667  001228  0E20               	movlw	32
  6668  00122A  EC41  F02F         	call	_btPress
  6669  00122E  0900               	iorlw	0
  6670  001230  B4D8               	btfsc	status,2,c
  6671  001232  D0C5               	goto	l1383
  6672  001234  0E4C               	movlw	low _wifi_habilita_alteracao
  6673  001236  0100               	movlb	0	; () banked
  6674  001238  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6675  00123A  0E00               	movlw	high _wifi_habilita_alteracao
  6676  00123C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6677  00123E  0E00               	movlw	0
  6678  001240  6F67               	movwf	setRangeValor@_min& (0+255),b
  6679  001242  0E01               	movlw	1
  6680  001244  6F68               	movwf	setRangeValor@_max& (0+255),b
  6681  001246  0E17               	movlw	23
  6682  001248  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6683  00124A  0E2D               	movlw	45
  6684  00124C  EC14  F029         	call	_setRangeValor
  6685                           
  6686                           ;main.c: 434: break;
  6687  001250  D0B6               	goto	l1383
  6688  001252                     
  6689                           ;main.c: 436: line1[11] = '>';
  6690  001252  0E3E               	movlw	62
  6691  001254  0101               	movlb	1	; () banked
  6692  001256  6FA0               	movwf	(_line1+11)& (0+255),b
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;main.c: 437: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6696  001258  0E40               	movlw	64
  6697  00125A  EC41  F02F         	call	_btPress
  6698  00125E  0900               	iorlw	0
  6699  001260  B4D8               	btfsc	status,2,c
  6700  001262  D00E               	goto	l1418
  6701  001264  0E49               	movlw	low _wifi_SENHA
  6702  001266  0100               	movlb	0	; () banked
  6703  001268  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6704  00126A  0E00               	movlw	high _wifi_SENHA
  6705  00126C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6706  00126E  0E01               	movlw	1
  6707  001270  6F67               	movwf	setRangeValor@_min& (0+255),b
  6708  001272  0EFA               	movlw	250
  6709  001274  6F68               	movwf	setRangeValor@_max& (0+255),b
  6710  001276  0E19               	movlw	25
  6711  001278  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6712  00127A  0E2B               	movlw	43
  6713  00127C  EC14  F029         	call	_setRangeValor
  6714  001280                     l1418:
  6715                           
  6716                           ;main.c: 438: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6717  001280  0E20               	movlw	32
  6718  001282  EC41  F02F         	call	_btPress
  6719  001286  0900               	iorlw	0
  6720  001288  B4D8               	btfsc	status,2,c
  6721  00128A  D099               	goto	l1383
  6722  00128C  0E49               	movlw	low _wifi_SENHA
  6723  00128E  0100               	movlb	0	; () banked
  6724  001290  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6725  001292  0E00               	movlw	high _wifi_SENHA
  6726  001294  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6727  001296  0E01               	movlw	1
  6728  001298  6F67               	movwf	setRangeValor@_min& (0+255),b
  6729  00129A  0EFA               	movlw	250
  6730  00129C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6731  00129E  0E19               	movlw	25
  6732  0012A0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6733  0012A2  0E2D               	movlw	45
  6734  0012A4  EC14  F029         	call	_setRangeValor
  6735                           
  6736                           ;main.c: 439: break;
  6737  0012A8  D08A               	goto	l1383
  6738  0012AA                     
  6739                           ;main.c: 441: line2[11] = '>';
  6740  0012AA  0E3E               	movlw	62
  6741  0012AC  0101               	movlb	1	; () banked
  6742  0012AE  6F8B               	movwf	(_line2+11)& (0+255),b
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;main.c: 442: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6746  0012B0  0E40               	movlw	64
  6747  0012B2  EC41  F02F         	call	_btPress
  6748  0012B6  0900               	iorlw	0
  6749  0012B8  B4D8               	btfsc	status,2,c
  6750  0012BA  D00E               	goto	l1421
  6751  0012BC  0E4D               	movlw	low _h_subir_temp_automatica
  6752  0012BE  0100               	movlb	0	; () banked
  6753  0012C0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6754  0012C2  0E00               	movlw	high _h_subir_temp_automatica
  6755  0012C4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6756  0012C6  0E00               	movlw	0
  6757  0012C8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6758  0012CA  0E0F               	movlw	15
  6759  0012CC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6760  0012CE  0E1B               	movlw	27
  6761  0012D0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6762  0012D2  0E2B               	movlw	43
  6763  0012D4  EC14  F029         	call	_setRangeValor
  6764  0012D8                     l1421:
  6765                           
  6766                           ;main.c: 443: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6767  0012D8  0E20               	movlw	32
  6768  0012DA  EC41  F02F         	call	_btPress
  6769  0012DE  0900               	iorlw	0
  6770  0012E0  B4D8               	btfsc	status,2,c
  6771  0012E2  D06D               	goto	l1383
  6772  0012E4  0E4D               	movlw	low _h_subir_temp_automatica
  6773  0012E6  0100               	movlb	0	; () banked
  6774  0012E8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6775  0012EA  0E00               	movlw	high _h_subir_temp_automatica
  6776  0012EC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6777  0012EE  0E00               	movlw	0
  6778  0012F0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6779  0012F2  0E0F               	movlw	15
  6780  0012F4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6781  0012F6  0E1B               	movlw	27
  6782  0012F8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6783  0012FA  0E2D               	movlw	45
  6784  0012FC  EC14  F029         	call	_setRangeValor
  6785                           
  6786                           ;main.c: 444: break;
  6787  001300  D05E               	goto	l1383
  6788  001302                     
  6789                           ;main.c: 446: line3[11] = '>';
  6790  001302  0E3E               	movlw	62
  6791  001304  0101               	movlb	1	; () banked
  6792  001306  6F76               	movwf	(_line3+11)& (0+255),b
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;main.c: 447: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6796  001308  0E40               	movlw	64
  6797  00130A  EC41  F02F         	call	_btPress
  6798  00130E  0900               	iorlw	0
  6799  001310  B4D8               	btfsc	status,2,c
  6800  001312  D00E               	goto	l1424
  6801  001314  0EF9               	movlw	low _t_religar_ventoinha_automatica
  6802  001316  0100               	movlb	0	; () banked
  6803  001318  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6804  00131A  0E00               	movlw	high _t_religar_ventoinha_automatica
  6805  00131C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6806  00131E  0E00               	movlw	0
  6807  001320  6F67               	movwf	setRangeValor@_min& (0+255),b
  6808  001322  0E3C               	movlw	60
  6809  001324  6F68               	movwf	setRangeValor@_max& (0+255),b
  6810  001326  0E1C               	movlw	28
  6811  001328  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6812  00132A  0E2B               	movlw	43
  6813  00132C  EC14  F029         	call	_setRangeValor
  6814  001330                     l1424:
  6815                           
  6816                           ;main.c: 448: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6817  001330  0E20               	movlw	32
  6818  001332  EC41  F02F         	call	_btPress
  6819  001336  0900               	iorlw	0
  6820  001338  B4D8               	btfsc	status,2,c
  6821  00133A  D041               	goto	l1383
  6822  00133C  0EF9               	movlw	low _t_religar_ventoinha_automatica
  6823  00133E  0100               	movlb	0	; () banked
  6824  001340  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6825  001342  0E00               	movlw	high _t_religar_ventoinha_automatica
  6826  001344  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6827  001346  0E00               	movlw	0
  6828  001348  6F67               	movwf	setRangeValor@_min& (0+255),b
  6829  00134A  0E3C               	movlw	60
  6830  00134C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6831  00134E  0E1C               	movlw	28
  6832  001350  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6833  001352  0E2D               	movlw	45
  6834  001354  EC14  F029         	call	_setRangeValor
  6835                           
  6836                           ;main.c: 449: break;
  6837  001358  D032               	goto	l1383
  6838  00135A  0E01               	movlw	1
  6839  00135C  6E43               	movwf	_opcaomenu,c
  6840                           
  6841                           ;main.c: 451: }
  6842  00135E  D02F               	goto	l1383
  6843  001360                     l1379:
  6844  001360  5043               	movf	_opcaomenu,w,c
  6845                           
  6846                           ; Switch size 1, requested type "space"
  6847                           ; Number of cases is 15, Range of values is 1 to 15
  6848                           ; switch strategies available:
  6849                           ; Name         Instructions Cycles
  6850                           ; simple_byte           46    24 (average)
  6851                           ;	Chosen strategy is simple_byte
  6852  001362  0A01               	xorlw	1	; case 1
  6853  001364  B4D8               	btfsc	status,2,c
  6854  001366  D55C               	goto	l1380
  6855  001368  0A03               	xorlw	3	; case 2
  6856  00136A  B4D8               	btfsc	status,2,c
  6857  00136C  D588               	goto	l1384
  6858  00136E  0A01               	xorlw	1	; case 3
  6859  001370  B4D8               	btfsc	status,2,c
  6860  001372  D5B1               	goto	l1387
  6861  001374  0A07               	xorlw	7	; case 4
  6862  001376  B4D8               	btfsc	status,2,c
  6863  001378  D5DA               	goto	l1390
  6864  00137A  0A01               	xorlw	1	; case 5
  6865  00137C  B4D8               	btfsc	status,2,c
  6866  00137E  D603               	goto	l1393
  6867  001380  0A03               	xorlw	3	; case 6
  6868  001382  B4D8               	btfsc	status,2,c
  6869  001384  D62C               	goto	l1396
  6870  001386  0A01               	xorlw	1	; case 7
  6871  001388  B4D8               	btfsc	status,2,c
  6872  00138A  D655               	goto	l1399
  6873  00138C  0A0F               	xorlw	15	; case 8
  6874  00138E  B4D8               	btfsc	status,2,c
  6875  001390  D67E               	goto	l1402
  6876  001392  0A01               	xorlw	1	; case 9
  6877  001394  B4D8               	btfsc	status,2,c
  6878  001396  D6AA               	goto	l1405
  6879  001398  0A03               	xorlw	3	; case 10
  6880  00139A  B4D8               	btfsc	status,2,c
  6881  00139C  D6D6               	goto	l1408
  6882  00139E  0A01               	xorlw	1	; case 11
  6883  0013A0  B4D8               	btfsc	status,2,c
  6884  0013A2  D6FF               	goto	l1411
  6885  0013A4  0A07               	xorlw	7	; case 12
  6886  0013A6  B4D8               	btfsc	status,2,c
  6887  0013A8  D728               	goto	l1414
  6888  0013AA  0A01               	xorlw	1	; case 13
  6889  0013AC  B4D8               	btfsc	status,2,c
  6890  0013AE  D751               	goto	l1417
  6891  0013B0  0A03               	xorlw	3	; case 14
  6892  0013B2  B4D8               	btfsc	status,2,c
  6893  0013B4  D77A               	goto	l1420
  6894  0013B6  0A01               	xorlw	1	; case 15
  6895  0013B8  B4D8               	btfsc	status,2,c
  6896  0013BA  D7A3               	goto	l1423
  6897  0013BC  D7CE               	goto	l1426
  6898  0013BE                     l1383:
  6899                           
  6900                           ;main.c: 452: if (btPress(16)) opcaomenu++;
  6901  0013BE  0E10               	movlw	16
  6902  0013C0  EC41  F02F         	call	_btPress
  6903  0013C4  0900               	iorlw	0
  6904  0013C6  A4D8               	btfss	status,2,c
  6905  0013C8  2A43               	incf	_opcaomenu,f,c
  6906                           
  6907                           ;main.c: 453: if (btPress(1)) opcaomenu--;
  6908  0013CA  0E01               	movlw	1
  6909  0013CC  EC41  F02F         	call	_btPress
  6910  0013D0  0900               	iorlw	0
  6911  0013D2  A4D8               	btfss	status,2,c
  6912  0013D4  0643               	decf	_opcaomenu,f,c
  6913                           
  6914                           ;main.c: 454: if (btPress(8)) {
  6915  0013D6  0E08               	movlw	8
  6916  0013D8  EC41  F02F         	call	_btPress
  6917  0013DC  0900               	iorlw	0
  6918  0013DE  B4D8               	btfsc	status,2,c
  6919  0013E0  D102               	goto	l1459
  6920                           
  6921                           ;main.c: 455: menu = 0;
  6922  0013E2  0E00               	movlw	0
  6923  0013E4  0100               	movlb	0	; () banked
  6924  0013E6  6FFD               	movwf	_menu& (0+255),b
  6925                           
  6926                           ;main.c: 456: senha_desbloqueio_func = 0;
  6927  0013E8  0E00               	movlw	0
  6928  0013EA  6E4B               	movwf	_senha_desbloqueio_func,c
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;main.c: 457: }
  6932                           ;main.c: 458: } else
  6933  0013EC  D0FC               	goto	l1459
  6934  0013EE                     l1375:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;main.c: 462: if (menu == 8 || menu == 9) {
  6938                           
  6939                           ; BSR set to: 0
  6940  0013EE  0E08               	movlw	8
  6941  0013F0  19FD               	xorwf	_menu& (0+255),w,b
  6942  0013F2  B4D8               	btfsc	status,2,c
  6943  0013F4  D030               	goto	l1434
  6944                           
  6945                           ; BSR set to: 0
  6946  0013F6  0E09               	movlw	9
  6947  0013F8  19FD               	xorwf	_menu& (0+255),w,b
  6948  0013FA  B4D8               	btfsc	status,2,c
  6949  0013FC  D02C               	goto	l1434
  6950  0013FE  D047               	goto	l1431
  6951  001400                     
  6952                           ;main.c: 465: menu = 8;
  6953                           
  6954                           ; BSR set to: 0
  6955  001400  0E08               	movlw	8
  6956  001402  0100               	movlb	0	; () banked
  6957  001404  6FFD               	movwf	_menu& (0+255),b
  6958                           
  6959                           ;main.c: 466: break;
  6960  001406  D02F               	goto	l1436
  6961  001408                     
  6962                           ;main.c: 468: menu = 9;
  6963                           
  6964                           ; BSR set to: 0
  6965  001408  0E09               	movlw	9
  6966  00140A  0100               	movlb	0	; () banked
  6967  00140C  6FFD               	movwf	_menu& (0+255),b
  6968                           
  6969                           ;main.c: 469: line1[0] = '>';
  6970  00140E  0E3E               	movlw	62
  6971  001410  0101               	movlb	1	; () banked
  6972  001412  6F95               	movwf	_line1& (0+255),b
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;main.c: 470: if (btPress(2)) {
  6976  001414  0E02               	movlw	2
  6977  001416  EC41  F02F         	call	_btPress
  6978  00141A  0900               	iorlw	0
  6979  00141C  B4D8               	btfsc	status,2,c
  6980  00141E  D023               	goto	l1436
  6981                           
  6982                           ;main.c: 471: LATAbits.LATA4 = 1;
  6983  001420  8889               	bsf	3977,4,c	;volatile
  6984                           
  6985                           ;main.c: 472: delay(100);
  6986  001422  0E00               	movlw	0
  6987  001424  0100               	movlb	0	; () banked
  6988  001426  6F61               	movwf	(delay@x+1)& (0+255),b
  6989  001428  0E64               	movlw	100
  6990  00142A  6F60               	movwf	delay@x& (0+255),b
  6991  00142C  EC86  F02E         	call	_delay	;wreg free
  6992                           
  6993                           ;main.c: 473: LATAbits.LATA4 = 0;
  6994  001430  9889               	bcf	3977,4,c	;volatile
  6995                           
  6996                           ;main.c: 474: delay(800);
  6997  001432  0E03               	movlw	3
  6998  001434  0100               	movlb	0	; () banked
  6999  001436  6F61               	movwf	(delay@x+1)& (0+255),b
  7000  001438  0E20               	movlw	32
  7001  00143A  6F60               	movwf	delay@x& (0+255),b
  7002  00143C  EC86  F02E         	call	_delay	;wreg free
  7003                           
  7004                           ;main.c: 475: menu = 10;
  7005  001440  0E0A               	movlw	10
  7006  001442  0100               	movlb	0	; () banked
  7007  001444  6FFD               	movwf	_menu& (0+255),b
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;main.c: 476: f_wifi_processo = 0;
  7011  001446  0E00               	movlw	0
  7012  001448  6E3B               	movwf	_f_wifi_processo,c
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;main.c: 477: t_wifi_restart = 15;
  7016  00144A  0E0F               	movlw	15
  7017  00144C  6E3C               	movwf	_t_wifi_restart,c
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;main.c: 478: }
  7021                           ;main.c: 479: break;
  7022  00144E  D00B               	goto	l1436
  7023  001450                     
  7024                           ;main.c: 481: opcaomenu = 1;
  7025                           
  7026                           ; BSR set to: 0
  7027  001450  0E01               	movlw	1
  7028  001452  6E43               	movwf	_opcaomenu,c
  7029                           
  7030                           ;main.c: 484: }
  7031                           
  7032                           ;main.c: 483: break;
  7033  001454  D008               	goto	l1436
  7034  001456                     l1434:
  7035  001456  5043               	movf	_opcaomenu,w,c
  7036                           
  7037                           ; Switch size 1, requested type "space"
  7038                           ; Number of cases is 2, Range of values is 1 to 2
  7039                           ; switch strategies available:
  7040                           ; Name         Instructions Cycles
  7041                           ; simple_byte            7     4 (average)
  7042                           ;	Chosen strategy is simple_byte
  7043  001458  0A01               	xorlw	1	; case 1
  7044  00145A  B4D8               	btfsc	status,2,c
  7045  00145C  D7D1               	goto	l1435
  7046  00145E  0A03               	xorlw	3	; case 2
  7047  001460  B4D8               	btfsc	status,2,c
  7048  001462  D7D2               	goto	l1437
  7049  001464  D7F5               	goto	l1439
  7050  001466                     l1436:
  7051                           
  7052                           ;main.c: 485: if (btPress(16)) opcaomenu++;
  7053  001466  0E10               	movlw	16
  7054  001468  EC41  F02F         	call	_btPress
  7055  00146C  0900               	iorlw	0
  7056  00146E  A4D8               	btfss	status,2,c
  7057  001470  2A43               	incf	_opcaomenu,f,c
  7058                           
  7059                           ;main.c: 486: if (btPress(1)) opcaomenu--;
  7060  001472  0E01               	movlw	1
  7061  001474  EC41  F02F         	call	_btPress
  7062  001478  0900               	iorlw	0
  7063  00147A  A4D8               	btfss	status,2,c
  7064  00147C  0643               	decf	_opcaomenu,f,c
  7065                           
  7066                           ;main.c: 487: if (btPress(8)) {
  7067  00147E  0E08               	movlw	8
  7068  001480  EC41  F02F         	call	_btPress
  7069  001484  0900               	iorlw	0
  7070  001486  B4D8               	btfsc	status,2,c
  7071  001488  D0AE               	goto	l1459
  7072                           
  7073                           ;main.c: 488: menu = 3;
  7074  00148A  0E03               	movlw	3
  7075  00148C  D0AA               	goto	L11
  7076  00148E                     l1431:
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;main.c: 494: if (menu == 11) {
  7080                           
  7081                           ; BSR set to: 0
  7082  00148E  0E0B               	movlw	11
  7083  001490  19FD               	xorwf	_menu& (0+255),w,b
  7084  001492  B4D8               	btfsc	status,2,c
  7085  001494  D088               	goto	l1445
  7086  001496  D0A7               	goto	l1459
  7087  001498                     
  7088                           ;main.c: 497: line1[0] = '>';
  7089                           
  7090                           ; BSR set to: 0
  7091  001498  0E3E               	movlw	62
  7092  00149A  0101               	movlb	1	; () banked
  7093  00149C  6F95               	movwf	_line1& (0+255),b
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;main.c: 498: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7097  00149E  0E40               	movlw	64
  7098  0014A0  EC41  F02F         	call	_btPress
  7099  0014A4  0900               	iorlw	0
  7100  0014A6  B4D8               	btfsc	status,2,c
  7101  0014A8  D00E               	goto	l1447
  7102  0014AA  0E57               	movlw	low _t_fim_fase1
  7103  0014AC  0100               	movlb	0	; () banked
  7104  0014AE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7105  0014B0  0E00               	movlw	high _t_fim_fase1
  7106  0014B2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7107  0014B4  0E00               	movlw	0
  7108  0014B6  6F67               	movwf	setRangeValor@_min& (0+255),b
  7109  0014B8  0E1E               	movlw	30
  7110  0014BA  6F68               	movwf	setRangeValor@_max& (0+255),b
  7111  0014BC  0E08               	movlw	8
  7112  0014BE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7113  0014C0  0E2B               	movlw	43
  7114  0014C2  EC14  F029         	call	_setRangeValor
  7115  0014C6                     l1447:
  7116                           
  7117                           ;main.c: 499: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7118  0014C6  0E20               	movlw	32
  7119  0014C8  EC41  F02F         	call	_btPress
  7120  0014CC  0900               	iorlw	0
  7121  0014CE  B4D8               	btfsc	status,2,c
  7122  0014D0  D075               	goto	l1449
  7123  0014D2  0E57               	movlw	low _t_fim_fase1
  7124  0014D4  0100               	movlb	0	; () banked
  7125  0014D6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7126  0014D8  0E00               	movlw	high _t_fim_fase1
  7127  0014DA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7128  0014DC  0E00               	movlw	0
  7129  0014DE  6F67               	movwf	setRangeValor@_min& (0+255),b
  7130  0014E0  0E1E               	movlw	30
  7131  0014E2  6F68               	movwf	setRangeValor@_max& (0+255),b
  7132  0014E4  0E08               	movlw	8
  7133  0014E6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7134  0014E8  0E2D               	movlw	45
  7135  0014EA  EC14  F029         	call	_setRangeValor
  7136                           
  7137                           ;main.c: 500: break;
  7138  0014EE  D066               	goto	l1449
  7139  0014F0                     
  7140                           ;main.c: 502: line2[0] = '>';
  7141  0014F0  0E3E               	movlw	62
  7142  0014F2  0101               	movlb	1	; () banked
  7143  0014F4  6F80               	movwf	_line2& (0+255),b
  7144                           
  7145                           ; BSR set to: 1
  7146                           ;main.c: 503: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7147  0014F6  0E40               	movlw	64
  7148  0014F8  EC41  F02F         	call	_btPress
  7149  0014FC  0900               	iorlw	0
  7150  0014FE  B4D8               	btfsc	status,2,c
  7151  001500  D00E               	goto	l1451
  7152  001502  0E56               	movlw	low _t_fim_fase2
  7153  001504  0100               	movlb	0	; () banked
  7154  001506  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7155  001508  0E00               	movlw	high _t_fim_fase2
  7156  00150A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7157  00150C  0E00               	movlw	0
  7158  00150E  6F67               	movwf	setRangeValor@_min& (0+255),b
  7159  001510  0E1E               	movlw	30
  7160  001512  6F68               	movwf	setRangeValor@_max& (0+255),b
  7161  001514  0E09               	movlw	9
  7162  001516  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7163  001518  0E2B               	movlw	43
  7164  00151A  EC14  F029         	call	_setRangeValor
  7165  00151E                     l1451:
  7166                           
  7167                           ;main.c: 504: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7168  00151E  0E20               	movlw	32
  7169  001520  EC41  F02F         	call	_btPress
  7170  001524  0900               	iorlw	0
  7171  001526  B4D8               	btfsc	status,2,c
  7172  001528  D049               	goto	l1449
  7173  00152A  0E56               	movlw	low _t_fim_fase2
  7174  00152C  0100               	movlb	0	; () banked
  7175  00152E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7176  001530  0E00               	movlw	high _t_fim_fase2
  7177  001532  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7178  001534  0E00               	movlw	0
  7179  001536  6F67               	movwf	setRangeValor@_min& (0+255),b
  7180  001538  0E1E               	movlw	30
  7181  00153A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7182  00153C  0E09               	movlw	9
  7183  00153E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7184  001540  0E2D               	movlw	45
  7185  001542  EC14  F029         	call	_setRangeValor
  7186                           
  7187                           ;main.c: 505: break;
  7188  001546  D03A               	goto	l1449
  7189  001548                     
  7190                           ;main.c: 507: line3[0] = '>';
  7191  001548  0E3E               	movlw	62
  7192  00154A  0101               	movlb	1	; () banked
  7193  00154C  6F6B               	movwf	_line3& (0+255),b
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;main.c: 508: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7197  00154E  0E40               	movlw	64
  7198  001550  EC41  F02F         	call	_btPress
  7199  001554  0900               	iorlw	0
  7200  001556  B4D8               	btfsc	status,2,c
  7201  001558  D00E               	goto	l1454
  7202  00155A  0E55               	movlw	low _t_fim_fase3
  7203  00155C  0100               	movlb	0	; () banked
  7204  00155E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7205  001560  0E00               	movlw	high _t_fim_fase3
  7206  001562  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7207  001564  0E00               	movlw	0
  7208  001566  6F67               	movwf	setRangeValor@_min& (0+255),b
  7209  001568  0E1E               	movlw	30
  7210  00156A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7211  00156C  0E0A               	movlw	10
  7212  00156E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7213  001570  0E2B               	movlw	43
  7214  001572  EC14  F029         	call	_setRangeValor
  7215  001576                     l1454:
  7216                           
  7217                           ;main.c: 509: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7218  001576  0E20               	movlw	32
  7219  001578  EC41  F02F         	call	_btPress
  7220  00157C  0900               	iorlw	0
  7221  00157E  B4D8               	btfsc	status,2,c
  7222  001580  D01D               	goto	l1449
  7223  001582  0E55               	movlw	low _t_fim_fase3
  7224  001584  0100               	movlb	0	; () banked
  7225  001586  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7226  001588  0E00               	movlw	high _t_fim_fase3
  7227  00158A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7228  00158C  0E00               	movlw	0
  7229  00158E  6F67               	movwf	setRangeValor@_min& (0+255),b
  7230  001590  0E1E               	movlw	30
  7231  001592  6F68               	movwf	setRangeValor@_max& (0+255),b
  7232  001594  0E0A               	movlw	10
  7233  001596  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7234  001598  0E2D               	movlw	45
  7235  00159A  EC14  F029         	call	_setRangeValor
  7236                           
  7237                           ;main.c: 510: break;
  7238  00159E  D00E               	goto	l1449
  7239  0015A0  0E01               	movlw	1
  7240  0015A2  6E43               	movwf	_opcaomenu,c
  7241                           
  7242                           ;main.c: 512: }
  7243  0015A4  D00B               	goto	l1449
  7244  0015A6                     l1445:
  7245  0015A6  5043               	movf	_opcaomenu,w,c
  7246                           
  7247                           ; Switch size 1, requested type "space"
  7248                           ; Number of cases is 3, Range of values is 1 to 3
  7249                           ; switch strategies available:
  7250                           ; Name         Instructions Cycles
  7251                           ; simple_byte           10     6 (average)
  7252                           ;	Chosen strategy is simple_byte
  7253  0015A8  0A01               	xorlw	1	; case 1
  7254  0015AA  B4D8               	btfsc	status,2,c
  7255  0015AC  D775               	goto	l1446
  7256  0015AE  0A03               	xorlw	3	; case 2
  7257  0015B0  B4D8               	btfsc	status,2,c
  7258  0015B2  D79E               	goto	l1450
  7259  0015B4  0A01               	xorlw	1	; case 3
  7260  0015B6  B4D8               	btfsc	status,2,c
  7261  0015B8  D7C7               	goto	l1453
  7262  0015BA  D7F2               	goto	l1456
  7263  0015BC                     l1449:
  7264                           
  7265                           ;main.c: 513: if (btPress(16)) opcaomenu++;
  7266  0015BC  0E10               	movlw	16
  7267  0015BE  EC41  F02F         	call	_btPress
  7268  0015C2  0900               	iorlw	0
  7269  0015C4  A4D8               	btfss	status,2,c
  7270  0015C6  2A43               	incf	_opcaomenu,f,c
  7271                           
  7272                           ;main.c: 514: if (btPress(1)) opcaomenu--;
  7273  0015C8  0E01               	movlw	1
  7274  0015CA  EC41  F02F         	call	_btPress
  7275  0015CE  0900               	iorlw	0
  7276  0015D0  A4D8               	btfss	status,2,c
  7277  0015D2  0643               	decf	_opcaomenu,f,c
  7278                           
  7279                           ;main.c: 515: if (btPress(8)) {
  7280  0015D4  0E08               	movlw	8
  7281  0015D6  EC41  F02F         	call	_btPress
  7282  0015DA  0900               	iorlw	0
  7283  0015DC  B4D8               	btfsc	status,2,c
  7284  0015DE  D003               	goto	l1459
  7285                           
  7286                           ;main.c: 516: menu = 2;
  7287  0015E0  0E02               	movlw	2
  7288  0015E2                     L11:
  7289  0015E2  0100               	movlb	0	; () banked
  7290  0015E4  6FFD               	movwf	_menu& (0+255),b
  7291  0015E6                     l1459:
  7292                           
  7293                           ;main.c: 517: }
  7294                           ;main.c: 518: }
  7295                           ;main.c: 519: updateLeds();
  7296                           
  7297                           ; BSR set to: 0
  7298                           
  7299                           ; BSR set to: 0
  7300                           
  7301                           ; BSR set to: 0
  7302                           
  7303                           ; BSR set to: 0
  7304                           
  7305                           ; BSR set to: 0
  7306  0015E6  EC10  F02E         	call	_updateLeds	;wreg free
  7307                           
  7308                           ;main.c: 520: atualizaLCD(line1, line2, line3, line4);
  7309  0015EA  0E95               	movlw	low _line1
  7310  0015EC  0100               	movlb	0	; () banked
  7311  0015EE  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7312  0015F0  0E01               	movlw	high _line1
  7313  0015F2  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7314  0015F4  0E80               	movlw	low _line2
  7315  0015F6  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7316  0015F8  0E01               	movlw	high _line2
  7317  0015FA  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7318  0015FC  0E6B               	movlw	low _line3
  7319  0015FE  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7320  001600  0E01               	movlw	high _line3
  7321  001602  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7322  001604  0E56               	movlw	low _line4
  7323  001606  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7324  001608  0E01               	movlw	high _line4
  7325  00160A  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7326  00160C  ECEB  F026         	call	_atualizaLCD	;wreg free
  7327  001610  EF8E  F001         	goto	l1268
  7328  001614                     __end_of_main:
  7329                           	opt stack 0
  7330                           tblptru	equ	0xFF8
  7331                           tblptrh	equ	0xFF7
  7332                           tblptrl	equ	0xFF6
  7333                           tablat	equ	0xFF5
  7334                           prodh	equ	0xFF4
  7335                           prodl	equ	0xFF3
  7336                           intcon	equ	0xFF2
  7337                           intcon2	equ	0xFF1
  7338                           intcon3	equ	0xFF0
  7339                           postinc0	equ	0xFEE
  7340                           wreg	equ	0xFE8
  7341                           postdec1	equ	0xFE5
  7342                           fsr1l	equ	0xFE1
  7343                           indf2	equ	0xFDF
  7344                           fsr2h	equ	0xFDA
  7345                           fsr2l	equ	0xFD9
  7346                           status	equ	0xFD8
  7347                           
  7348 ;; *************** function _updateLeds *****************
  7349 ;; Defined at:
  7350 ;;		line 27 in file "src/Led_display.h"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7364 ;;      Params:         0       0       0       0       0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7368 ;;Total ram usage:        0 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    8
  7371 ;; This function calls:
  7372 ;;		_I2C_Start
  7373 ;;		_I2C_Stop
  7374 ;;		_I2C_Write
  7375 ;; This function is called by:
  7376 ;;		_main
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text1
  7381  005C20                     __ptext1:
  7382                           	opt stack 0
  7383  005C20                     _updateLeds:
  7384                           	opt stack 22
  7385                           
  7386                           ;Led_display.h: 29: if (_led != leds) {
  7387                           
  7388                           ;incstack = 0
  7389  005C20  5041               	movf	_leds,w,c
  7390  005C22  185C               	xorwf	__led,w,c
  7391  005C24  B4D8               	btfsc	status,2,c
  7392  005C26  0012               	return	
  7393                           
  7394                           ;Led_display.h: 30: I2C_Start();
  7395  005C28  EC96  F02F         	call	_I2C_Start	;wreg free
  7396                           
  7397                           ;Led_display.h: 31: I2C_Write(0x46);
  7398  005C2C  0E00               	movlw	0
  7399  005C2E  0100               	movlb	0	; () banked
  7400  005C30  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7401  005C32  0E46               	movlw	70
  7402  005C34  6F61               	movwf	I2C_Write@d& (0+255),b
  7403  005C36  EC84  F02F         	call	_I2C_Write	;wreg free
  7404                           
  7405                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7406  005C3A  C041  F061         	movff	_leds,I2C_Write@d
  7407  005C3E  0100               	movlb	0	; () banked
  7408  005C40  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7409  005C42  EC84  F02F         	call	_I2C_Write	;wreg free
  7410                           
  7411                           ;Led_display.h: 33: I2C_Stop();
  7412  005C46  EC92  F02F         	call	_I2C_Stop	;wreg free
  7413                           
  7414                           ;Led_display.h: 34: _led = leds;
  7415  005C4A  C041  F05C         	movff	_leds,__led
  7416  005C4E  0012               	return	
  7417  005C50                     __end_of_updateLeds:
  7418                           	opt stack 0
  7419                           tblptru	equ	0xFF8
  7420                           tblptrh	equ	0xFF7
  7421                           tblptrl	equ	0xFF6
  7422                           tablat	equ	0xFF5
  7423                           prodh	equ	0xFF4
  7424                           prodl	equ	0xFF3
  7425                           intcon	equ	0xFF2
  7426                           intcon2	equ	0xFF1
  7427                           intcon3	equ	0xFF0
  7428                           postinc0	equ	0xFEE
  7429                           wreg	equ	0xFE8
  7430                           postdec1	equ	0xFE5
  7431                           fsr1l	equ	0xFE1
  7432                           indf2	equ	0xFDF
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _setUmidade *****************
  7438 ;; Defined at:
  7439 ;;		line 44 in file "src/FuncoesControlador.h"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  tp              1    wreg     unsigned char 
  7442 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7443 ;;		 -> umidajt(1), 
  7444 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7445 ;;		 -> tempajt(1), 
  7446 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7447 ;;		 -> clima(1), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  tp              1   14[BANK0 ] unsigned char 
  7450 ;;  _umd            1   25[BANK0 ] unsigned char 
  7451 ;;  _clim           1   24[BANK0 ] unsigned char 
  7452 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7462 ;;      Params:         0       6       0       0       0       0       0       0       0
  7463 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7465 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7466 ;;Total ram usage:       18 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    9
  7469 ;; This function calls:
  7470 ;;		_tabelaUmidade
  7471 ;;		_writeEEPROM_ext
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text2
  7478  00482A                     __ptext2:
  7479                           	opt stack 0
  7480  00482A                     _setUmidade:
  7481                           	opt stack 21
  7482                           
  7483                           ;incstack = 0
  7484                           ;setUmidade@tp stored from wreg
  7485  00482A  0100               	movlb	0	; () banked
  7486  00482C  6F6E               	movwf	setUmidade@tp& (0+255),b
  7487                           
  7488                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7489  00482E  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7490  004832  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7491  004836  50DF               	movf	indf2,w,c
  7492  004838  0100               	movlb	0	; () banked
  7493  00483A  6F79               	movwf	setUmidade@_umd& (0+255),b
  7494                           
  7495                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7496  00483C  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7497  004840  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7498  004844  50DF               	movf	indf2,w,c
  7499  004846  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7500                           
  7501                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7502  004848  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7503  00484C  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7504  004850  50DF               	movf	indf2,w,c
  7505  004852  6F78               	movwf	setUmidade@_clim& (0+255),b
  7506                           
  7507                           ;FuncoesControlador.h: 49: switch (tp) {
  7508  004854  D05C               	goto	l914
  7509  004856                     
  7510                           ; BSR set to: 0
  7511                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7512                           
  7513                           ; BSR set to: 0
  7514  004856  05FB               	decf	_tipo_sensor_umidade& (0+255),w,b
  7515  004858  A4D8               	btfss	status,2,c
  7516  00485A  D00F               	goto	l916
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7520  00485C  0E64               	movlw	100
  7521  00485E  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7522  004860  D005               	goto	l918
  7523                           
  7524                           ; BSR set to: 0
  7525  004862  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7526  004864  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7527  004868  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7528  00486A  D004               	goto	l920
  7529  00486C                     l918:
  7530                           
  7531                           ; BSR set to: 0
  7532                           
  7533                           ; BSR set to: 0
  7534  00486C  0E00               	movlw	0
  7535  00486E  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7536  004870  0E0A               	movlw	10
  7537  004872  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7538  004874                     l920:
  7539                           
  7540                           ; BSR set to: 0
  7541                           
  7542                           ; BSR set to: 0
  7543  004874  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7544                           
  7545                           ;FuncoesControlador.h: 53: } else {
  7546  004878  D00E               	goto	l921
  7547  00487A                     l916:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 60 : ++_umd;
  7551                           
  7552                           ; BSR set to: 0
  7553  00487A  0E78               	movlw	120
  7554  00487C  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7555  00487E  D005               	goto	l923
  7556                           
  7557                           ; BSR set to: 0
  7558  004880  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7559  004882  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7560  004886  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7561  004888  D004               	goto	l925
  7562  00488A                     l923:
  7563                           
  7564                           ; BSR set to: 0
  7565                           
  7566                           ; BSR set to: 0
  7567  00488A  0E00               	movlw	0
  7568  00488C  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7569  00488E  0E3C               	movlw	60
  7570  004890  6F71               	movwf	_setUmidade$1298& (0+255),b
  7571  004892                     l925:
  7572                           
  7573                           ; BSR set to: 0
  7574                           
  7575                           ; BSR set to: 0
  7576  004892  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7577  004896                     l921:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;FuncoesControlador.h: 55: }
  7581                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7582                           
  7583                           ; BSR set to: 0
  7584  004896  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7585  00489A  0E02               	movlw	2
  7586  00489C  EC4C  F02D         	call	_writeEEPROM_ext
  7587                           
  7588                           ;FuncoesControlador.h: 58: break;
  7589  0048A0  D040               	goto	l926
  7590  0048A2                     
  7591                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7592  0048A2  0100               	movlb	0	; () banked
  7593  0048A4  05FB               	decf	_tipo_sensor_umidade& (0+255),w,b
  7594  0048A6  A4D8               	btfss	status,2,c
  7595  0048A8  D00F               	goto	l928
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7599  0048AA  0E0A               	movlw	10
  7600  0048AC  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7601  0048AE  D005               	goto	l930
  7602                           
  7603                           ; BSR set to: 0
  7604  0048B0  0779               	decf	setUmidade@_umd& (0+255),f,b
  7605  0048B2  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7606  0048B6  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7607  0048B8  D004               	goto	l932
  7608  0048BA                     l930:
  7609                           
  7610                           ; BSR set to: 0
  7611                           
  7612                           ; BSR set to: 0
  7613  0048BA  0E00               	movlw	0
  7614  0048BC  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7615  0048BE  0E64               	movlw	100
  7616  0048C0  6F73               	movwf	_setUmidade$1299& (0+255),b
  7617  0048C2                     l932:
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ; BSR set to: 0
  7622  0048C2  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7623                           
  7624                           ;FuncoesControlador.h: 62: } else {
  7625  0048C6  D00E               	goto	l933
  7626  0048C8                     l928:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;FuncoesControlador.h: 63: _umd = (_umd <= 60) ? 120 : --_umd;
  7630                           
  7631                           ; BSR set to: 0
  7632  0048C8  0E3C               	movlw	60
  7633  0048CA  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7634  0048CC  D005               	goto	l935
  7635                           
  7636                           ; BSR set to: 0
  7637  0048CE  0779               	decf	setUmidade@_umd& (0+255),f,b
  7638  0048D0  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7639  0048D4  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7640  0048D6  D004               	goto	l937
  7641  0048D8                     l935:
  7642                           
  7643                           ; BSR set to: 0
  7644                           
  7645                           ; BSR set to: 0
  7646  0048D8  0E00               	movlw	0
  7647  0048DA  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7648  0048DC  0E78               	movlw	120
  7649  0048DE  6F75               	movwf	_setUmidade$1300& (0+255),b
  7650  0048E0                     l937:
  7651                           
  7652                           ; BSR set to: 0
  7653                           
  7654                           ; BSR set to: 0
  7655  0048E0  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7656  0048E4                     l933:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;FuncoesControlador.h: 64: }
  7660                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7661                           
  7662                           ; BSR set to: 0
  7663  0048E4  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7664  0048E8  0E02               	movlw	2
  7665  0048EA  EC4C  F02D         	call	_writeEEPROM_ext
  7666                           
  7667                           ;FuncoesControlador.h: 67: break;
  7668  0048EE  D019               	goto	l926
  7669  0048F0                     
  7670                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7671  0048F0  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7672  0048F4  0100               	movlb	0	; () banked
  7673  0048F6  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7674  0048F8  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7675  0048FC  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7676  0048FE  C0FB  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7677  004902  EC0A  F00B         	call	_tabelaUmidade	;wreg free
  7678  004906  0100               	movlb	0	; () banked
  7679  004908  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7680  00490A  6F79               	movwf	setUmidade@_umd& (0+255),b
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;FuncoesControlador.h: 71: }
  7684                           
  7685                           ;FuncoesControlador.h: 70: break;
  7686  00490C  D00A               	goto	l926
  7687  00490E                     l914:
  7688                           
  7689                           ; BSR set to: 0
  7690                           
  7691                           ; BSR set to: 0
  7692  00490E  516E               	movf	setUmidade@tp& (0+255),w,b
  7693                           
  7694                           ; Switch size 1, requested type "space"
  7695                           ; Number of cases is 3, Range of values is 43 to 65
  7696                           ; switch strategies available:
  7697                           ; Name         Instructions Cycles
  7698                           ; simple_byte           10     6 (average)
  7699                           ;	Chosen strategy is simple_byte
  7700  004910  0A2B               	xorlw	43	; case 43
  7701  004912  B4D8               	btfsc	status,2,c
  7702  004914  D7A0               	goto	l915
  7703  004916  0A06               	xorlw	6	; case 45
  7704  004918  B4D8               	btfsc	status,2,c
  7705  00491A  D7C3               	goto	l927
  7706  00491C  0A6C               	xorlw	108	; case 65
  7707  00491E  B4D8               	btfsc	status,2,c
  7708  004920  D7E7               	goto	l938
  7709  004922                     l926:
  7710                           
  7711                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7712                           
  7713                           ; BSR set to: 0
  7714  004922  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7715  004926  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7716  00492A  C079  FFDF         	movff	setUmidade@_umd,indf2
  7717  00492E  0012               	return		;funcret
  7718  004930                     __end_of_setUmidade:
  7719                           	opt stack 0
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           intcon2	equ	0xFF1
  7728                           intcon3	equ	0xFF0
  7729                           postinc0	equ	0xFEE
  7730                           wreg	equ	0xFE8
  7731                           postdec1	equ	0xFE5
  7732                           fsr1l	equ	0xFE1
  7733                           indf2	equ	0xFDF
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function _tabelaUmidade *****************
  7739 ;; Defined at:
  7740 ;;		line 4 in file "src/TabelasUmidade.h"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  _tmp            2    0[BANK0 ] int 
  7743 ;;  _clima          2    2[BANK0 ] int 
  7744 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  _umd            1    7[BANK0 ] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  2    0[BANK0 ] unsigned int 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7756 ;;      Params:         0       5       0       0       0       0       0       0       0
  7757 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7758 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7759 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7760 ;;Total ram usage:        8 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    6
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_setUmidade
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text3
  7771  001614                     __ptext3:
  7772                           	opt stack 0
  7773  001614                     _tabelaUmidade:
  7774                           	opt stack 23
  7775                           
  7776                           ;TabelasUmidade.h: 5: char _umd = 0;
  7777                           
  7778                           ;incstack = 0
  7779  001614  0E00               	movlw	0
  7780  001616  0100               	movlb	0	; () banked
  7781  001618  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7782                           
  7783                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7784  00161A  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7785  00161C  B4D8               	btfsc	status,2,c
  7786  00161E  D306               	goto	l305
  7787  001620  D31A               	goto	l304
  7788  001622                     
  7789                           ; BSR set to: 0
  7790                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7791                           
  7792                           ; BSR set to: 0
  7793  001622  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7794  001624  D006               	goto	u8720
  7795  001626  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7796  001628  E106               	bnz	l6772
  7797  00162A  0E5B               	movlw	91
  7798  00162C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7799  00162E  B0D8               	btfsc	status,0,c
  7800  001630  D002               	goto	l307
  7801  001632                     u8720:
  7802                           
  7803                           ; BSR set to: 0
  7804  001632  0E55               	movlw	85
  7805  001634  D04B               	goto	L22
  7806  001636                     l307:
  7807  001636                     l6772:
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;TabelasUmidade.h: 10: else
  7811                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7812  001636  0E5B               	movlw	91
  7813  001638  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7814  00163A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7815  00163C  A4D8               	btfss	status,2,c
  7816  00163E  D002               	goto	l309
  7817  001640                     u8730:
  7818                           
  7819                           ; BSR set to: 0
  7820  001640  0E56               	movlw	86
  7821  001642  D044               	goto	L22
  7822  001644                     l309:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;TabelasUmidade.h: 12: else
  7826                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7827                           
  7828                           ; BSR set to: 0
  7829  001644  0E5C               	movlw	92
  7830  001646  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7831  001648  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7832  00164A  A4D8               	btfss	status,2,c
  7833  00164C  D002               	goto	l311
  7834                           
  7835                           ; BSR set to: 0
  7836  00164E  0E57               	movlw	87
  7837  001650  D03D               	goto	L22
  7838  001652                     l311:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;TabelasUmidade.h: 14: else
  7842                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7843                           
  7844                           ; BSR set to: 0
  7845  001652  0E5D               	movlw	93
  7846  001654  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7847  001656  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7848  001658  A4D8               	btfss	status,2,c
  7849  00165A  D002               	goto	l313
  7850  00165C                     u8750:
  7851                           
  7852                           ; BSR set to: 0
  7853  00165C  0E58               	movlw	88
  7854  00165E  D036               	goto	L22
  7855  001660                     l313:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;TabelasUmidade.h: 16: else
  7859                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  7860                           
  7861                           ; BSR set to: 0
  7862  001660  0E5E               	movlw	94
  7863  001662  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7864  001664  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7865  001666  A4D8               	btfss	status,2,c
  7866  001668  D002               	goto	l315
  7867  00166A                     u8760:
  7868                           
  7869                           ; BSR set to: 0
  7870  00166A  0E59               	movlw	89
  7871  00166C  D02F               	goto	L22
  7872  00166E                     l315:
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;TabelasUmidade.h: 18: else
  7876                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  7877                           
  7878                           ; BSR set to: 0
  7879  00166E  0E5F               	movlw	95
  7880  001670  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7881  001672  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7882  001674  A4D8               	btfss	status,2,c
  7883  001676  D002               	goto	l317
  7884  001678                     u8770:
  7885                           
  7886                           ; BSR set to: 0
  7887  001678  0E5A               	movlw	90
  7888  00167A  D028               	goto	L22
  7889  00167C                     l317:
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;TabelasUmidade.h: 20: else
  7893                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  7894                           
  7895                           ; BSR set to: 0
  7896  00167C  0E60               	movlw	96
  7897  00167E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7898  001680  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7899  001682  A4D8               	btfss	status,2,c
  7900  001684  D002               	goto	l319
  7901  001686                     u8780:
  7902                           
  7903                           ; BSR set to: 0
  7904  001686  0E5B               	movlw	91
  7905  001688  D021               	goto	L22
  7906  00168A                     l319:
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;TabelasUmidade.h: 22: else
  7910                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  7911                           
  7912                           ; BSR set to: 0
  7913  00168A  0E61               	movlw	97
  7914  00168C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7915  00168E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7916  001690  A4D8               	btfss	status,2,c
  7917  001692  D002               	goto	l321
  7918  001694                     u8790:
  7919                           
  7920                           ; BSR set to: 0
  7921  001694  0E5C               	movlw	92
  7922  001696  D01A               	goto	L22
  7923  001698                     l321:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;TabelasUmidade.h: 24: else
  7927                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  7928                           
  7929                           ; BSR set to: 0
  7930  001698  0E62               	movlw	98
  7931  00169A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7932  00169C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7933  00169E  A4D8               	btfss	status,2,c
  7934  0016A0  D002               	goto	l323
  7935  0016A2                     u8800:
  7936                           
  7937                           ; BSR set to: 0
  7938  0016A2  0E5D               	movlw	93
  7939  0016A4  D013               	goto	L22
  7940  0016A6                     l323:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;TabelasUmidade.h: 26: else
  7944                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  7945                           
  7946                           ; BSR set to: 0
  7947  0016A6  0E63               	movlw	99
  7948  0016A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7949  0016AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7950  0016AC  A4D8               	btfss	status,2,c
  7951  0016AE  D002               	goto	l325
  7952  0016B0                     u8810:
  7953                           
  7954                           ; BSR set to: 0
  7955  0016B0  0E5E               	movlw	94
  7956  0016B2  D00C               	goto	L22
  7957  0016B4                     l325:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;TabelasUmidade.h: 28: else
  7961                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  7962                           
  7963                           ; BSR set to: 0
  7964  0016B4  0E64               	movlw	100
  7965  0016B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7966  0016B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7967  0016BA  B4D8               	btfsc	status,2,c
  7968  0016BC  EF9E  F00F         	goto	u10570
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;TabelasUmidade.h: 30: else
  7972                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  7973                           
  7974                           ; BSR set to: 0
  7975                           
  7976                           ; BSR set to: 0
  7977  0016C0  0E65               	movlw	101
  7978  0016C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7979  0016C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7980  0016C6  A4D8               	btfss	status,2,c
  7981  0016C8  D004               	goto	l329
  7982  0016CA  D7F2               	goto	u8810
  7983  0016CC                     L22:
  7984  0016CC  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7985  0016CE  EFEF  F012         	goto	l638
  7986  0016D2                     l329:
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;TabelasUmidade.h: 32: else
  7990                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  7991                           
  7992                           ; BSR set to: 0
  7993  0016D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7994  0016D4  D00E               	goto	l331
  7995  0016D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7996  0016D8  E104               	bnz	u8840
  7997  0016DA  0E66               	movlw	102
  7998  0016DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7999  0016DE  A0D8               	btfss	status,0,c
  8000  0016E0  D008               	goto	l331
  8001  0016E2                     u8840:
  8002                           
  8003                           ; BSR set to: 0
  8004  0016E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8005  0016E4  D7E5               	goto	u8810
  8006  0016E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8007  0016E8  E104               	bnz	l6822
  8008  0016EA  0E6C               	movlw	108
  8009  0016EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8010  0016EE  A0D8               	btfss	status,0,c
  8011  0016F0  D7DF               	goto	u8810
  8012  0016F2                     l331:
  8013  0016F2                     l6822:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;TabelasUmidade.h: 34: else
  8017                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  8018  0016F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8019  0016F4  D010               	goto	l333
  8020  0016F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8021  0016F8  E104               	bnz	u8860
  8022  0016FA  0E6C               	movlw	108
  8023  0016FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8024  0016FE  A0D8               	btfss	status,0,c
  8025  001700  D00A               	goto	l333
  8026  001702                     u8860:
  8027                           
  8028                           ; BSR set to: 0
  8029  001702  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8030  001704  EF9E  F00F         	goto	u10570
  8031  001708  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8032  00170A  E105               	bnz	l6828
  8033  00170C  0E77               	movlw	119
  8034  00170E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8035  001710  A0D8               	btfss	status,0,c
  8036  001712  EF9E  F00F         	goto	u10570
  8037  001716                     l333:
  8038  001716                     l6828:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;TabelasUmidade.h: 36: else
  8042                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  8043  001716  0E77               	movlw	119
  8044  001718  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8045  00171A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8046  00171C  B4D8               	btfsc	status,2,c
  8047  00171E  EF91  F00F         	goto	u10550
  8048                           
  8049                           ; BSR set to: 0
  8050  001722  0E78               	movlw	120
  8051  001724  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8052  001726  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8053  001728  B4D8               	btfsc	status,2,c
  8054                           
  8055                           ; BSR set to: 0
  8056  00172A  D3FB               	goto	u10550
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;TabelasUmidade.h: 38: else
  8060                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  8061                           
  8062                           ; BSR set to: 0
  8063                           
  8064                           ; BSR set to: 0
  8065  00172C  0E79               	movlw	121
  8066  00172E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8067  001730  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8068  001732  B4D8               	btfsc	status,2,c
  8069  001734  D3EE               	goto	u10540
  8070                           
  8071                           ; BSR set to: 0
  8072  001736  0E7A               	movlw	122
  8073  001738  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8074  00173A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8075  00173C  B4D8               	btfsc	status,2,c
  8076                           
  8077                           ; BSR set to: 0
  8078  00173E  D3E9               	goto	u10540
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;TabelasUmidade.h: 40: else
  8082                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8083                           
  8084                           ; BSR set to: 0
  8085                           
  8086                           ; BSR set to: 0
  8087  001740  0E7B               	movlw	123
  8088  001742  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8089  001744  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8090  001746  B4D8               	btfsc	status,2,c
  8091  001748  EF2A  F011         	goto	u11180
  8092                           
  8093                           ; BSR set to: 0
  8094  00174C  0E7C               	movlw	124
  8095  00174E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8096  001750  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8097  001752  B4D8               	btfsc	status,2,c
  8098                           
  8099                           ; BSR set to: 0
  8100  001754  EF2A  F011         	goto	u11180
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;TabelasUmidade.h: 42: else
  8104                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8105                           
  8106                           ; BSR set to: 0
  8107                           
  8108                           ; BSR set to: 0
  8109  001758  0E7D               	movlw	125
  8110  00175A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8111  00175C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8112  00175E  B4D8               	btfsc	status,2,c
  8113  001760  EF17  F011         	goto	u11160
  8114                           
  8115                           ; BSR set to: 0
  8116  001764  0E7E               	movlw	126
  8117  001766  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8118  001768  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8119  00176A  B4D8               	btfsc	status,2,c
  8120                           
  8121                           ; BSR set to: 0
  8122  00176C  EF17  F011         	goto	u11160
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;TabelasUmidade.h: 44: else
  8126                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8127                           
  8128                           ; BSR set to: 0
  8129                           
  8130                           ; BSR set to: 0
  8131  001770  0E7F               	movlw	127
  8132  001772  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8133  001774  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8134  001776  B4D8               	btfsc	status,2,c
  8135  001778  EF0F  F011         	goto	u11150
  8136                           
  8137                           ; BSR set to: 0
  8138  00177C  0E80               	movlw	128
  8139  00177E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8140  001780  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8141  001782  B4D8               	btfsc	status,2,c
  8142                           
  8143                           ; BSR set to: 0
  8144  001784  EF0F  F011         	goto	u11150
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;TabelasUmidade.h: 46: else
  8148                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8149                           
  8150                           ; BSR set to: 0
  8151                           
  8152                           ; BSR set to: 0
  8153  001788  0E81               	movlw	129
  8154  00178A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8155  00178C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8156  00178E  B4D8               	btfsc	status,2,c
  8157  001790  D1BB               	goto	u9710
  8158                           
  8159                           ; BSR set to: 0
  8160  001792  0E82               	movlw	130
  8161  001794  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8162  001796  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8163  001798  B4D8               	btfsc	status,2,c
  8164                           
  8165                           ; BSR set to: 0
  8166  00179A  D1B6               	goto	u9710
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;TabelasUmidade.h: 48: else
  8170                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8171                           
  8172                           ; BSR set to: 0
  8173                           
  8174                           ; BSR set to: 0
  8175  00179C  0E83               	movlw	131
  8176  00179E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8177  0017A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8178  0017A2  B4D8               	btfsc	status,2,c
  8179  0017A4  D1BD               	goto	u9730
  8180                           
  8181                           ; BSR set to: 0
  8182  0017A6  0E84               	movlw	132
  8183  0017A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8184  0017AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8185  0017AC  B4D8               	btfsc	status,2,c
  8186                           
  8187                           ; BSR set to: 0
  8188  0017AE  D1B8               	goto	u9730
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;TabelasUmidade.h: 50: else
  8192                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8193                           
  8194                           ; BSR set to: 0
  8195                           
  8196                           ; BSR set to: 0
  8197  0017B0  0E85               	movlw	133
  8198  0017B2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8199  0017B4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8200  0017B6  B4D8               	btfsc	status,2,c
  8201  0017B8  D1BF               	goto	u9750
  8202                           
  8203                           ; BSR set to: 0
  8204  0017BA  0E86               	movlw	134
  8205  0017BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8206  0017BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8207  0017C0  B4D8               	btfsc	status,2,c
  8208                           
  8209                           ; BSR set to: 0
  8210  0017C2  D1BA               	goto	u9750
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;TabelasUmidade.h: 52: else
  8214                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8215                           
  8216                           ; BSR set to: 0
  8217                           
  8218                           ; BSR set to: 0
  8219  0017C4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8220  0017C6  D00E               	goto	l367
  8221  0017C8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8222  0017CA  E104               	bnz	u9040
  8223  0017CC  0E87               	movlw	135
  8224  0017CE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8225  0017D0  A0D8               	btfss	status,0,c
  8226  0017D2  D008               	goto	l367
  8227  0017D4                     u9040:
  8228                           
  8229                           ; BSR set to: 0
  8230  0017D4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8231  0017D6  D0ED               	goto	u9430
  8232  0017D8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8233  0017DA  E104               	bnz	l6882
  8234  0017DC  0E93               	movlw	147
  8235  0017DE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8236  0017E0  A0D8               	btfss	status,0,c
  8237  0017E2  D0E7               	goto	u9430
  8238  0017E4                     l367:
  8239  0017E4                     l6882:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;TabelasUmidade.h: 54: else
  8243                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8244  0017E4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8245  0017E6  D00E               	goto	l369
  8246  0017E8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8247  0017EA  E104               	bnz	u9060
  8248  0017EC  0E93               	movlw	147
  8249  0017EE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8250  0017F0  A0D8               	btfss	status,0,c
  8251  0017F2  D008               	goto	l369
  8252  0017F4                     u9060:
  8253                           
  8254                           ; BSR set to: 0
  8255  0017F4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8256  0017F6  D1B2               	goto	u9770
  8257  0017F8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8258  0017FA  E104               	bnz	l6888
  8259  0017FC  0E97               	movlw	151
  8260  0017FE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8261  001800  A0D8               	btfss	status,0,c
  8262  001802  D1AC               	goto	u9770
  8263  001804                     l369:
  8264  001804                     l6888:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;TabelasUmidade.h: 56: else
  8268                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8269  001804  0E97               	movlw	151
  8270  001806  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8271  001808  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8272  00180A  B4D8               	btfsc	status,2,c
  8273  00180C  D1B3               	goto	u9790
  8274                           
  8275                           ; BSR set to: 0
  8276  00180E  0E98               	movlw	152
  8277  001810  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8278  001812  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8279  001814  B4D8               	btfsc	status,2,c
  8280                           
  8281                           ; BSR set to: 0
  8282  001816  D1AE               	goto	u9790
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;TabelasUmidade.h: 58: else
  8286                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8287                           
  8288                           ; BSR set to: 0
  8289                           
  8290                           ; BSR set to: 0
  8291  001818  0E99               	movlw	153
  8292  00181A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8293  00181C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8294  00181E  B4D8               	btfsc	status,2,c
  8295  001820  D1B5               	goto	u9810
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;TabelasUmidade.h: 60: else
  8299                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8300                           
  8301                           ; BSR set to: 0
  8302                           
  8303                           ; BSR set to: 0
  8304  001822  0E9A               	movlw	154
  8305  001824  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8306  001826  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8307  001828  B4D8               	btfsc	status,2,c
  8308  00182A  D1C2               	goto	u9830
  8309                           
  8310                           ; BSR set to: 0
  8311  00182C  0E9B               	movlw	155
  8312  00182E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8313  001830  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8314  001832  B4D8               	btfsc	status,2,c
  8315                           
  8316                           ; BSR set to: 0
  8317  001834  D1BD               	goto	u9830
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;TabelasUmidade.h: 62: else
  8321                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8322                           
  8323                           ; BSR set to: 0
  8324                           
  8325                           ; BSR set to: 0
  8326  001836  0E9C               	movlw	156
  8327  001838  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8328  00183A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8329  00183C  B4D8               	btfsc	status,2,c
  8330  00183E  D1C4               	goto	u9850
  8331                           
  8332                           ; BSR set to: 0
  8333  001840  0E9D               	movlw	157
  8334  001842  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8335  001844  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8336  001846  B4D8               	btfsc	status,2,c
  8337                           
  8338                           ; BSR set to: 0
  8339  001848  D1BF               	goto	u9850
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;TabelasUmidade.h: 64: else
  8343                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8344                           
  8345                           ; BSR set to: 0
  8346                           
  8347                           ; BSR set to: 0
  8348  00184A  0E9E               	movlw	158
  8349  00184C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8350  00184E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8351  001850  B4D8               	btfsc	status,2,c
  8352  001852  D0E4               	goto	u9520
  8353                           
  8354                           ; BSR set to: 0
  8355  001854  0E9F               	movlw	159
  8356  001856  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8357  001858  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8358  00185A  B4D8               	btfsc	status,2,c
  8359                           
  8360                           ; BSR set to: 0
  8361  00185C  D0DF               	goto	u9520
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;TabelasUmidade.h: 66: else
  8365                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8366                           
  8367                           ; BSR set to: 0
  8368                           
  8369                           ; BSR set to: 0
  8370  00185E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8371  001860  EFEF  F012         	goto	l638
  8372  001864  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8373  001866  E101               	bnz	u9170
  8374  001868  D0E0               	goto	L23
  8375  00186A                     u9170:
  8376  00186A  D1C6               	goto	u9890
  8377  00186C                     
  8378                           ; BSR set to: 0
  8379                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8380                           
  8381                           ; BSR set to: 0
  8382  00186C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8383  00186E  D6F6               	goto	u8750
  8384  001870  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8385  001872  E104               	bnz	l6924
  8386  001874  0E5B               	movlw	91
  8387  001876  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8388  001878  A0D8               	btfss	status,0,c
  8389  00187A  D6F0               	goto	u8750
  8390  00187C                     l6924:
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;TabelasUmidade.h: 72: else
  8394                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8395  00187C  0E5B               	movlw	91
  8396  00187E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8397  001880  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8398  001882  B4D8               	btfsc	status,2,c
  8399  001884  D6F2               	goto	u8760
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;TabelasUmidade.h: 74: else
  8403                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8404                           
  8405                           ; BSR set to: 0
  8406                           
  8407                           ; BSR set to: 0
  8408  001886  0E5C               	movlw	92
  8409  001888  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8410  00188A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8411  00188C  B4D8               	btfsc	status,2,c
  8412  00188E  D6F4               	goto	u8770
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;TabelasUmidade.h: 76: else
  8416                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8417                           
  8418                           ; BSR set to: 0
  8419                           
  8420                           ; BSR set to: 0
  8421  001890  0E5D               	movlw	93
  8422  001892  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8423  001894  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8424  001896  B4D8               	btfsc	status,2,c
  8425  001898  D6F6               	goto	u8780
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;TabelasUmidade.h: 78: else
  8429                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8430                           
  8431                           ; BSR set to: 0
  8432                           
  8433                           ; BSR set to: 0
  8434  00189A  0E5E               	movlw	94
  8435  00189C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8436  00189E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8437  0018A0  B4D8               	btfsc	status,2,c
  8438  0018A2  D6F8               	goto	u8790
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;TabelasUmidade.h: 80: else
  8442                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8443                           
  8444                           ; BSR set to: 0
  8445                           
  8446                           ; BSR set to: 0
  8447  0018A4  0E5F               	movlw	95
  8448  0018A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8449  0018A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8450  0018AA  B4D8               	btfsc	status,2,c
  8451  0018AC  D6FA               	goto	u8800
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;TabelasUmidade.h: 82: else
  8455                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8456                           
  8457                           ; BSR set to: 0
  8458                           
  8459                           ; BSR set to: 0
  8460  0018AE  0E60               	movlw	96
  8461  0018B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8462  0018B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8463  0018B4  B4D8               	btfsc	status,2,c
  8464  0018B6  D6FC               	goto	u8810
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;TabelasUmidade.h: 84: else
  8468                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8469                           
  8470                           ; BSR set to: 0
  8471                           
  8472                           ; BSR set to: 0
  8473  0018B8  0E61               	movlw	97
  8474  0018BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8475  0018BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8476  0018BE  B4D8               	btfsc	status,2,c
  8477  0018C0  D33D               	goto	u10570
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;TabelasUmidade.h: 86: else
  8481                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8482                           
  8483                           ; BSR set to: 0
  8484                           
  8485                           ; BSR set to: 0
  8486  0018C2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8487  0018C4  D00E               	goto	l408
  8488  0018C6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8489  0018C8  E104               	bnz	u9260
  8490  0018CA  0E62               	movlw	98
  8491  0018CC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8492  0018CE  A0D8               	btfss	status,0,c
  8493  0018D0  D008               	goto	l408
  8494  0018D2                     u9260:
  8495                           
  8496                           ; BSR set to: 0
  8497  0018D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8498  0018D4  D326               	goto	u10550
  8499  0018D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8500  0018D8  E104               	bnz	l6958
  8501  0018DA  0E65               	movlw	101
  8502  0018DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8503  0018DE  A0D8               	btfss	status,0,c
  8504  0018E0  D320               	goto	u10550
  8505  0018E2                     l408:
  8506  0018E2                     l6958:
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;TabelasUmidade.h: 88: else
  8510                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8511  0018E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8512  0018E4  D00E               	goto	l410
  8513  0018E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8514  0018E8  E104               	bnz	u9280
  8515  0018EA  0E65               	movlw	101
  8516  0018EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8517  0018EE  A0D8               	btfss	status,0,c
  8518  0018F0  D008               	goto	l410
  8519  0018F2                     u9280:
  8520                           
  8521                           ; BSR set to: 0
  8522  0018F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8523  0018F4  D30E               	goto	u10540
  8524  0018F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8525  0018F8  E104               	bnz	l6964
  8526  0018FA  0E78               	movlw	120
  8527  0018FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8528  0018FE  A0D8               	btfss	status,0,c
  8529  001900  D308               	goto	u10540
  8530  001902                     l410:
  8531  001902                     l6964:
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;TabelasUmidade.h: 90: else
  8535                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8536  001902  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8537  001904  D010               	goto	l412
  8538  001906  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8539  001908  E104               	bnz	u9300
  8540  00190A  0E78               	movlw	120
  8541  00190C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8542  00190E  A0D8               	btfss	status,0,c
  8543  001910  D00A               	goto	l412
  8544  001912                     u9300:
  8545                           
  8546                           ; BSR set to: 0
  8547  001912  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8548  001914  EF2A  F011         	goto	u11180
  8549  001918  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8550  00191A  E105               	bnz	l6970
  8551  00191C  0E7B               	movlw	123
  8552  00191E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8553  001920  A0D8               	btfss	status,0,c
  8554  001922  EF2A  F011         	goto	u11180
  8555  001926                     l412:
  8556  001926                     l6970:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;TabelasUmidade.h: 92: else
  8560                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8561  001926  0E7B               	movlw	123
  8562  001928  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8563  00192A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8564  00192C  B4D8               	btfsc	status,2,c
  8565  00192E  EF17  F011         	goto	u11160
  8566                           
  8567                           ; BSR set to: 0
  8568  001932  0E7C               	movlw	124
  8569  001934  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8570  001936  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8571  001938  B4D8               	btfsc	status,2,c
  8572                           
  8573                           ; BSR set to: 0
  8574  00193A  EF17  F011         	goto	u11160
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;TabelasUmidade.h: 94: else
  8578                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8579                           
  8580                           ; BSR set to: 0
  8581                           
  8582                           ; BSR set to: 0
  8583  00193E  0E7D               	movlw	125
  8584  001940  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8585  001942  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8586  001944  B4D8               	btfsc	status,2,c
  8587  001946  EF0F  F011         	goto	u11150
  8588                           
  8589                           ; BSR set to: 0
  8590  00194A  0E7E               	movlw	126
  8591  00194C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8592  00194E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8593  001950  B4D8               	btfsc	status,2,c
  8594                           
  8595                           ; BSR set to: 0
  8596  001952  EF0F  F011         	goto	u11150
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;TabelasUmidade.h: 96: else
  8600                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8601                           
  8602                           ; BSR set to: 0
  8603                           
  8604                           ; BSR set to: 0
  8605  001956  0E7F               	movlw	127
  8606  001958  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8607  00195A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8608  00195C  B4D8               	btfsc	status,2,c
  8609  00195E  D0D4               	goto	u9710
  8610                           
  8611                           ; BSR set to: 0
  8612  001960  0E80               	movlw	128
  8613  001962  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8614  001964  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8615  001966  B4D8               	btfsc	status,2,c
  8616                           
  8617                           ; BSR set to: 0
  8618  001968  D0CF               	goto	u9710
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;TabelasUmidade.h: 98: else
  8622                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8623                           
  8624                           ; BSR set to: 0
  8625                           
  8626                           ; BSR set to: 0
  8627  00196A  0E81               	movlw	129
  8628  00196C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8629  00196E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8630  001970  B4D8               	btfsc	status,2,c
  8631  001972  D0D6               	goto	u9730
  8632                           
  8633                           ; BSR set to: 0
  8634  001974  0E82               	movlw	130
  8635  001976  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8636  001978  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8637  00197A  B4D8               	btfsc	status,2,c
  8638                           
  8639                           ; BSR set to: 0
  8640  00197C  D0D1               	goto	u9730
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;TabelasUmidade.h: 100: else
  8644                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8645                           
  8646                           ; BSR set to: 0
  8647                           
  8648                           ; BSR set to: 0
  8649  00197E  0E83               	movlw	131
  8650  001980  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8651  001982  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8652  001984  B4D8               	btfsc	status,2,c
  8653  001986  D0D8               	goto	u9750
  8654                           
  8655                           ; BSR set to: 0
  8656  001988  0E84               	movlw	132
  8657  00198A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8658  00198C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8659  00198E  B4D8               	btfsc	status,2,c
  8660                           
  8661                           ; BSR set to: 0
  8662  001990  D0D3               	goto	u9750
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;TabelasUmidade.h: 102: else
  8666                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8667                           
  8668                           ; BSR set to: 0
  8669                           
  8670                           ; BSR set to: 0
  8671  001992  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8672  001994  D010               	goto	l434
  8673  001996  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8674  001998  E104               	bnz	u9420
  8675  00199A  0E85               	movlw	133
  8676  00199C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8677  00199E  A0D8               	btfss	status,0,c
  8678  0019A0  D00A               	goto	l434
  8679  0019A2                     u9420:
  8680                           
  8681                           ; BSR set to: 0
  8682  0019A2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8683  0019A4  D006               	goto	u9430
  8684  0019A6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8685  0019A8  E106               	bnz	l7006
  8686  0019AA  0E95               	movlw	149
  8687  0019AC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8688  0019AE  B0D8               	btfsc	status,0,c
  8689  0019B0  D002               	goto	l434
  8690  0019B2                     u9430:
  8691                           
  8692                           ; BSR set to: 0
  8693  0019B2  0E68               	movlw	104
  8694  0019B4  D68B               	goto	L22
  8695  0019B6                     l434:
  8696  0019B6                     l7006:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;TabelasUmidade.h: 104: else
  8700                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8701  0019B6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8702  0019B8  D00E               	goto	l436
  8703  0019BA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8704  0019BC  E104               	bnz	u9440
  8705  0019BE  0E95               	movlw	149
  8706  0019C0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8707  0019C2  A0D8               	btfss	status,0,c
  8708  0019C4  D008               	goto	l436
  8709  0019C6                     u9440:
  8710                           
  8711                           ; BSR set to: 0
  8712  0019C6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8713  0019C8  D0C9               	goto	u9770
  8714  0019CA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8715  0019CC  E104               	bnz	l7012
  8716  0019CE  0E99               	movlw	153
  8717  0019D0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8718  0019D2  A0D8               	btfss	status,0,c
  8719  0019D4  D0C3               	goto	u9770
  8720  0019D6                     l436:
  8721  0019D6                     l7012:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;TabelasUmidade.h: 106: else
  8725                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8726  0019D6  0E99               	movlw	153
  8727  0019D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8728  0019DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8729  0019DC  B4D8               	btfsc	status,2,c
  8730  0019DE  D0CA               	goto	u9790
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;TabelasUmidade.h: 108: else
  8734                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8735                           
  8736                           ; BSR set to: 0
  8737                           
  8738                           ; BSR set to: 0
  8739  0019E0  0E9A               	movlw	154
  8740  0019E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8741  0019E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8742  0019E6  B4D8               	btfsc	status,2,c
  8743  0019E8  D0D1               	goto	u9810
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;TabelasUmidade.h: 110: else
  8747                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8748                           
  8749                           ; BSR set to: 0
  8750                           
  8751                           ; BSR set to: 0
  8752  0019EA  0E9B               	movlw	155
  8753  0019EC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8754  0019EE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8755  0019F0  B4D8               	btfsc	status,2,c
  8756  0019F2  D0DE               	goto	u9830
  8757                           
  8758                           ; BSR set to: 0
  8759  0019F4  0E9C               	movlw	156
  8760  0019F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8761  0019F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8762  0019FA  B4D8               	btfsc	status,2,c
  8763                           
  8764                           ; BSR set to: 0
  8765  0019FC  D0D9               	goto	u9830
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;TabelasUmidade.h: 112: else
  8769                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8770                           
  8771                           ; BSR set to: 0
  8772                           
  8773                           ; BSR set to: 0
  8774  0019FE  0E9D               	movlw	157
  8775  001A00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8776  001A02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8777  001A04  B4D8               	btfsc	status,2,c
  8778  001A06  D0E0               	goto	u9850
  8779                           
  8780                           ; BSR set to: 0
  8781  001A08  0E9E               	movlw	158
  8782  001A0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8783  001A0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8784  001A0E  B4D8               	btfsc	status,2,c
  8785                           
  8786                           ; BSR set to: 0
  8787  001A10  D0DB               	goto	u9850
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;TabelasUmidade.h: 114: else
  8791                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8792                           
  8793                           ; BSR set to: 0
  8794                           
  8795                           ; BSR set to: 0
  8796  001A12  0E9F               	movlw	159
  8797  001A14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8798  001A16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8799  001A18  A4D8               	btfss	status,2,c
  8800  001A1A  D002               	goto	l450
  8801  001A1C                     u9520:
  8802                           
  8803                           ; BSR set to: 0
  8804  001A1C  0E6E               	movlw	110
  8805  001A1E  D656               	goto	L22
  8806  001A20                     l450:
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;TabelasUmidade.h: 116: else
  8810                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8811                           
  8812                           ; BSR set to: 0
  8813  001A20  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8814  001A22  EFEF  F012         	goto	l638
  8815  001A26  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8816  001A28  E105               	bnz	u9530
  8817  001A2A                     L23:
  8818  001A2A  0EA0               	movlw	160
  8819  001A2C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8820  001A2E  A0D8               	btfss	status,0,c
  8821  001A30  EFEF  F012         	goto	l638
  8822  001A34                     u9530:
  8823  001A34  D0E1               	goto	u9890
  8824  001A36                     
  8825                           ; BSR set to: 0
  8826                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8827                           
  8828                           ; BSR set to: 0
  8829  001A36  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8830  001A38  D61F               	goto	u8770
  8831  001A3A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8832  001A3C  E104               	bnz	l7044
  8833  001A3E  0E5B               	movlw	91
  8834  001A40  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8835  001A42  A0D8               	btfss	status,0,c
  8836  001A44  D619               	goto	u8770
  8837  001A46                     l7044:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;TabelasUmidade.h: 122: else
  8841                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8842  001A46  0E5B               	movlw	91
  8843  001A48  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8844  001A4A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8845  001A4C  B4D8               	btfsc	status,2,c
  8846  001A4E  D61B               	goto	u8780
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;TabelasUmidade.h: 124: else
  8850                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  8851                           
  8852                           ; BSR set to: 0
  8853                           
  8854                           ; BSR set to: 0
  8855  001A50  0E5C               	movlw	92
  8856  001A52  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8857  001A54  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8858  001A56  B4D8               	btfsc	status,2,c
  8859  001A58  D61D               	goto	u8790
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;TabelasUmidade.h: 126: else
  8863                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  8864                           
  8865                           ; BSR set to: 0
  8866                           
  8867                           ; BSR set to: 0
  8868  001A5A  0E5D               	movlw	93
  8869  001A5C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8870  001A5E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8871  001A60  B4D8               	btfsc	status,2,c
  8872  001A62  D61F               	goto	u8800
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;TabelasUmidade.h: 128: else
  8876                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  8877                           
  8878                           ; BSR set to: 0
  8879                           
  8880                           ; BSR set to: 0
  8881  001A64  0E5E               	movlw	94
  8882  001A66  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8883  001A68  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8884  001A6A  B4D8               	btfsc	status,2,c
  8885  001A6C  D621               	goto	u8810
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;TabelasUmidade.h: 130: else
  8889                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  8890                           
  8891                           ; BSR set to: 0
  8892                           
  8893                           ; BSR set to: 0
  8894  001A6E  0E5F               	movlw	95
  8895  001A70  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8896  001A72  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8897  001A74  B4D8               	btfsc	status,2,c
  8898  001A76  D262               	goto	u10570
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;TabelasUmidade.h: 132: else
  8902                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  8903                           
  8904                           ; BSR set to: 0
  8905                           
  8906                           ; BSR set to: 0
  8907  001A78  0E60               	movlw	96
  8908  001A7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8909  001A7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8910  001A7E  B4D8               	btfsc	status,2,c
  8911  001A80  D25D               	goto	u10570
  8912                           
  8913                           ; BSR set to: 0
  8914                           ;TabelasUmidade.h: 134: else
  8915                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  8916                           
  8917                           ; BSR set to: 0
  8918                           
  8919                           ; BSR set to: 0
  8920  001A82  0E61               	movlw	97
  8921  001A84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8922  001A86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8923  001A88  B4D8               	btfsc	status,2,c
  8924  001A8A  D24B               	goto	u10550
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;TabelasUmidade.h: 136: else
  8928                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  8929                           
  8930                           ; BSR set to: 0
  8931                           
  8932                           ; BSR set to: 0
  8933  001A8C  0E62               	movlw	98
  8934  001A8E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8935  001A90  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8936  001A92  B4D8               	btfsc	status,2,c
  8937  001A94  D246               	goto	u10550
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;TabelasUmidade.h: 138: else
  8941                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  8942                           
  8943                           ; BSR set to: 0
  8944                           
  8945                           ; BSR set to: 0
  8946  001A96  0E63               	movlw	99
  8947  001A98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8948  001A9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8949  001A9C  B4D8               	btfsc	status,2,c
  8950  001A9E  D239               	goto	u10540
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;TabelasUmidade.h: 140: else
  8954                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  8955                           
  8956                           ; BSR set to: 0
  8957                           
  8958                           ; BSR set to: 0
  8959  001AA0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8960  001AA2  D00E               	goto	l474
  8961  001AA4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8962  001AA6  E104               	bnz	u9640
  8963  001AA8  0E64               	movlw	100
  8964  001AAA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8965  001AAC  A0D8               	btfss	status,0,c
  8966  001AAE  D008               	goto	l474
  8967  001AB0                     u9640:
  8968                           
  8969                           ; BSR set to: 0
  8970  001AB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8971  001AB2  D3D0               	goto	u11180
  8972  001AB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8973  001AB6  E104               	bnz	l7086
  8974  001AB8  0E68               	movlw	104
  8975  001ABA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8976  001ABC  A0D8               	btfss	status,0,c
  8977  001ABE  D3CA               	goto	u11180
  8978  001AC0                     l474:
  8979  001AC0                     l7086:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;TabelasUmidade.h: 142: else
  8983                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  8984  001AC0  0E68               	movlw	104
  8985  001AC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8986  001AC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8987  001AC6  B4D8               	btfsc	status,2,c
  8988  001AC8  D3B2               	goto	u11160
  8989                           
  8990                           ; BSR set to: 0
  8991  001ACA  0E69               	movlw	105
  8992  001ACC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8993  001ACE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8994  001AD0  B4D8               	btfsc	status,2,c
  8995                           
  8996                           ; BSR set to: 0
  8997  001AD2  D3AD               	goto	u11160
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;TabelasUmidade.h: 144: else
  9001                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  9002                           
  9003                           ; BSR set to: 0
  9004                           
  9005                           ; BSR set to: 0
  9006  001AD4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9007  001AD6  D00E               	goto	l480
  9008  001AD8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9009  001ADA  E104               	bnz	u9680
  9010  001ADC  0E6A               	movlw	106
  9011  001ADE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9012  001AE0  A0D8               	btfss	status,0,c
  9013  001AE2  D008               	goto	l480
  9014  001AE4                     u9680:
  9015                           
  9016                           ; BSR set to: 0
  9017  001AE4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9018  001AE6  D39B               	goto	u11150
  9019  001AE8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9020  001AEA  E104               	bnz	l7098
  9021  001AEC  0E7B               	movlw	123
  9022  001AEE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9023  001AF0  A0D8               	btfss	status,0,c
  9024  001AF2  D395               	goto	u11150
  9025  001AF4                     l480:
  9026  001AF4                     l7098:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;TabelasUmidade.h: 146: else
  9030                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  9031  001AF4  0E7B               	movlw	123
  9032  001AF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9033  001AF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9034  001AFA  B4D8               	btfsc	status,2,c
  9035  001AFC  D005               	goto	u9710
  9036                           
  9037                           ; BSR set to: 0
  9038  001AFE  0E7C               	movlw	124
  9039  001B00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9040  001B02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9041  001B04  A4D8               	btfss	status,2,c
  9042  001B06  D002               	goto	l482
  9043  001B08                     u9710:
  9044                           
  9045                           ; BSR set to: 0
  9046                           
  9047                           ; BSR set to: 0
  9048  001B08  0E65               	movlw	101
  9049  001B0A  D5E0               	goto	L22
  9050  001B0C                     l482:
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;TabelasUmidade.h: 148: else
  9054                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  9055                           
  9056                           ; BSR set to: 0
  9057  001B0C  0E7D               	movlw	125
  9058  001B0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9059  001B10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9060  001B12  B4D8               	btfsc	status,2,c
  9061  001B14  D005               	goto	u9730
  9062                           
  9063                           ; BSR set to: 0
  9064  001B16  0E7E               	movlw	126
  9065  001B18  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9066  001B1A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9067  001B1C  A4D8               	btfss	status,2,c
  9068  001B1E  D002               	goto	l486
  9069  001B20                     u9730:
  9070                           
  9071                           ; BSR set to: 0
  9072                           
  9073                           ; BSR set to: 0
  9074  001B20  0E66               	movlw	102
  9075  001B22  D5D4               	goto	L22
  9076  001B24                     l486:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;TabelasUmidade.h: 150: else
  9080                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9081                           
  9082                           ; BSR set to: 0
  9083  001B24  0E7F               	movlw	127
  9084  001B26  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9085  001B28  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9086  001B2A  B4D8               	btfsc	status,2,c
  9087  001B2C  D005               	goto	u9750
  9088                           
  9089                           ; BSR set to: 0
  9090  001B2E  0E80               	movlw	128
  9091  001B30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9092  001B32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9093  001B34  A4D8               	btfss	status,2,c
  9094  001B36  D002               	goto	l490
  9095  001B38                     u9750:
  9096                           
  9097                           ; BSR set to: 0
  9098                           
  9099                           ; BSR set to: 0
  9100  001B38  0E67               	movlw	103
  9101  001B3A  D5C8               	goto	L22
  9102  001B3C                     l490:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;TabelasUmidade.h: 152: else
  9106                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9107                           
  9108                           ; BSR set to: 0
  9109  001B3C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9110  001B3E  D010               	goto	l494
  9111  001B40  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9112  001B42  E104               	bnz	u9760
  9113  001B44  0E81               	movlw	129
  9114  001B46  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9115  001B48  A0D8               	btfss	status,0,c
  9116  001B4A  D00A               	goto	l494
  9117  001B4C                     u9760:
  9118                           
  9119                           ; BSR set to: 0
  9120  001B4C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9121  001B4E  D006               	goto	u9770
  9122  001B50  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9123  001B52  E106               	bnz	l7122
  9124  001B54  0E8B               	movlw	139
  9125  001B56  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9126  001B58  B0D8               	btfsc	status,0,c
  9127  001B5A  D002               	goto	l494
  9128  001B5C                     u9770:
  9129                           
  9130                           ; BSR set to: 0
  9131  001B5C  0E69               	movlw	105
  9132  001B5E  D5B6               	goto	L22
  9133  001B60                     l494:
  9134  001B60                     l7122:
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;TabelasUmidade.h: 154: else
  9138                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9139  001B60  0E8B               	movlw	139
  9140  001B62  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9141  001B64  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9142  001B66  B4D8               	btfsc	status,2,c
  9143  001B68  D005               	goto	u9790
  9144                           
  9145                           ; BSR set to: 0
  9146  001B6A  0E8C               	movlw	140
  9147  001B6C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9148  001B6E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9149  001B70  A4D8               	btfss	status,2,c
  9150  001B72  D002               	goto	l496
  9151  001B74                     u9790:
  9152                           
  9153                           ; BSR set to: 0
  9154                           
  9155                           ; BSR set to: 0
  9156  001B74  0E6A               	movlw	106
  9157  001B76  D5AA               	goto	L22
  9158  001B78                     l496:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;TabelasUmidade.h: 156: else
  9162                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9163                           
  9164                           ; BSR set to: 0
  9165  001B78  0E8D               	movlw	141
  9166  001B7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9167  001B7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9168  001B7E  B4D8               	btfsc	status,2,c
  9169  001B80  D005               	goto	u9810
  9170                           
  9171                           ; BSR set to: 0
  9172  001B82  0E92               	movlw	146
  9173  001B84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9174  001B86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9175  001B88  A4D8               	btfss	status,2,c
  9176  001B8A  D002               	goto	l500
  9177  001B8C                     u9810:
  9178                           
  9179                           ; BSR set to: 0
  9180                           
  9181                           ; BSR set to: 0
  9182  001B8C  0E6B               	movlw	107
  9183  001B8E  D59E               	goto	L22
  9184  001B90                     l500:
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;TabelasUmidade.h: 158: else
  9188                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9189                           
  9190                           ; BSR set to: 0
  9191  001B90  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9192  001B92  D010               	goto	l504
  9193  001B94  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9194  001B96  E104               	bnz	u9820
  9195  001B98  0E93               	movlw	147
  9196  001B9A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9197  001B9C  A0D8               	btfss	status,0,c
  9198  001B9E  D00A               	goto	l504
  9199  001BA0                     u9820:
  9200                           
  9201                           ; BSR set to: 0
  9202  001BA0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9203  001BA2  D006               	goto	u9830
  9204  001BA4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9205  001BA6  E106               	bnz	l7140
  9206  001BA8  0E98               	movlw	152
  9207  001BAA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9208  001BAC  B0D8               	btfsc	status,0,c
  9209  001BAE  D002               	goto	l504
  9210  001BB0                     u9830:
  9211                           
  9212                           ; BSR set to: 0
  9213  001BB0  0E6C               	movlw	108
  9214  001BB2  D58C               	goto	L22
  9215  001BB4                     l504:
  9216  001BB4                     l7140:
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;TabelasUmidade.h: 160: else
  9220                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9221  001BB4  0E99               	movlw	153
  9222  001BB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9223  001BB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9224  001BBA  B4D8               	btfsc	status,2,c
  9225  001BBC  D005               	goto	u9850
  9226                           
  9227                           ; BSR set to: 0
  9228  001BBE  0E98               	movlw	152
  9229  001BC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9230  001BC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9231  001BC4  A4D8               	btfss	status,2,c
  9232  001BC6  D002               	goto	l506
  9233  001BC8                     u9850:
  9234                           
  9235                           ; BSR set to: 0
  9236                           
  9237                           ; BSR set to: 0
  9238  001BC8  0E6D               	movlw	109
  9239  001BCA  D580               	goto	L22
  9240  001BCC                     l506:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;TabelasUmidade.h: 162: else
  9244                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9245                           
  9246                           ; BSR set to: 0
  9247  001BCC  0E9B               	movlw	155
  9248  001BCE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9249  001BD0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9250  001BD2  B4D8               	btfsc	status,2,c
  9251  001BD4  D005               	goto	u9870
  9252                           
  9253                           ; BSR set to: 0
  9254  001BD6  0E9A               	movlw	154
  9255  001BD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9256  001BDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9257  001BDC  A4D8               	btfss	status,2,c
  9258  001BDE  D002               	goto	l510
  9259  001BE0                     u9870:
  9260                           
  9261                           ; BSR set to: 0
  9262                           
  9263                           ; BSR set to: 0
  9264  001BE0  0E6F               	movlw	111
  9265  001BE2  D574               	goto	L22
  9266  001BE4                     l510:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;TabelasUmidade.h: 164: else
  9270                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9271                           
  9272                           ; BSR set to: 0
  9273  001BE4  0E9D               	movlw	157
  9274  001BE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9275  001BE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9276  001BEA  B4D8               	btfsc	status,2,c
  9277  001BEC  D005               	goto	u9890
  9278                           
  9279                           ; BSR set to: 0
  9280  001BEE  0E9C               	movlw	156
  9281  001BF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9282  001BF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9283  001BF4  A4D8               	btfss	status,2,c
  9284  001BF6  D002               	goto	l514
  9285  001BF8                     u9890:
  9286                           
  9287                           ; BSR set to: 0
  9288                           
  9289                           ; BSR set to: 0
  9290  001BF8  0E70               	movlw	112
  9291  001BFA  D568               	goto	L22
  9292  001BFC                     l514:
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;TabelasUmidade.h: 166: else
  9296                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9297                           
  9298                           ; BSR set to: 0
  9299  001BFC  0E9F               	movlw	159
  9300  001BFE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9301  001C00  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9302  001C02  B4D8               	btfsc	status,2,c
  9303  001C04  D005               	goto	u9910
  9304                           
  9305                           ; BSR set to: 0
  9306  001C06  0E9E               	movlw	158
  9307  001C08  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9308  001C0A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9309  001C0C  A4D8               	btfss	status,2,c
  9310  001C0E  D002               	goto	l518
  9311  001C10                     u9910:
  9312                           
  9313                           ; BSR set to: 0
  9314                           
  9315                           ; BSR set to: 0
  9316  001C10  0E71               	movlw	113
  9317  001C12  D55C               	goto	L22
  9318  001C14                     l518:
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;TabelasUmidade.h: 168: else
  9322                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9323                           
  9324                           ; BSR set to: 0
  9325  001C14  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9326  001C16  EFEF  F012         	goto	l638
  9327  001C1A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9328  001C1C  E105               	bnz	u9920
  9329  001C1E  0EA0               	movlw	160
  9330  001C20  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9331  001C22  A0D8               	btfss	status,0,c
  9332  001C24  EFEF  F012         	goto	l638
  9333  001C28                     u9920:
  9334                           
  9335                           ; BSR set to: 0
  9336  001C28  0E73               	movlw	115
  9337  001C2A  D550               	goto	L22
  9338  001C2C                     l305:
  9339                           
  9340                           ; BSR set to: 0
  9341                           
  9342                           ; BSR set to: 0
  9343  001C2C  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9344  001C30  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9345                           
  9346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9347                           ; Switch size 1, requested type "space"
  9348                           ; Number of cases is 1, Range of values is 0 to 0
  9349                           ; switch strategies available:
  9350                           ; Name         Instructions Cycles
  9351                           ; simple_byte            4     3 (average)
  9352                           ;	Chosen strategy is simple_byte
  9353  001C34  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9354  001C36  0A00               	xorlw	0	; case 0
  9355  001C38  A4D8               	btfss	status,2,c
  9356  001C3A  EFEF  F012         	goto	l638
  9357                           
  9358                           ; BSR set to: 0
  9359                           ; Switch size 1, requested type "space"
  9360                           ; Number of cases is 3, Range of values is 1 to 3
  9361                           ; switch strategies available:
  9362                           ; Name         Instructions Cycles
  9363                           ; simple_byte           10     6 (average)
  9364                           ;	Chosen strategy is simple_byte
  9365  001C3E  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9366  001C40  0A01               	xorlw	1	; case 1
  9367  001C42  B4D8               	btfsc	status,2,c
  9368  001C44  D4EE               	goto	l306
  9369  001C46  0A03               	xorlw	3	; case 2
  9370  001C48  B4D8               	btfsc	status,2,c
  9371  001C4A  D610               	goto	l391
  9372  001C4C  0A01               	xorlw	1	; case 3
  9373  001C4E  B4D8               	btfsc	status,2,c
  9374  001C50  D6F2               	goto	l453
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9378  001C52  EFEF  F012         	goto	l638
  9379  001C56                     l304:
  9380                           
  9381                           ; BSR set to: 0
  9382                           
  9383                           ; BSR set to: 0
  9384  001C56  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9385  001C58  B4D8               	btfsc	status,2,c
  9386  001C5A  EFE4  F012         	goto	l525
  9387  001C5E  EFEF  F012         	goto	l638
  9388  001C62                     
  9389                           ; BSR set to: 0
  9390                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9391                           
  9392                           ; BSR set to: 0
  9393  001C62  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9394  001C64  D517               	goto	u8790
  9395  001C66  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9396  001C68  E104               	bnz	l7180
  9397  001C6A  0E5B               	movlw	91
  9398  001C6C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9399  001C6E  A0D8               	btfss	status,0,c
  9400  001C70  D511               	goto	u8790
  9401  001C72                     l7180:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;TabelasUmidade.h: 176: else
  9405                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9406  001C72  0E5B               	movlw	91
  9407  001C74  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9408  001C76  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9409  001C78  B4D8               	btfsc	status,2,c
  9410  001C7A  D50C               	goto	u8790
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;TabelasUmidade.h: 178: else
  9414                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9415                           
  9416                           ; BSR set to: 0
  9417                           
  9418                           ; BSR set to: 0
  9419  001C7C  0E5C               	movlw	92
  9420  001C7E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9421  001C80  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9422  001C82  B4D8               	btfsc	status,2,c
  9423  001C84  D4F9               	goto	u8770
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;TabelasUmidade.h: 180: else
  9427                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9428                           
  9429                           ; BSR set to: 0
  9430                           
  9431                           ; BSR set to: 0
  9432  001C86  0E5D               	movlw	93
  9433  001C88  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9434  001C8A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9435  001C8C  B4D8               	btfsc	status,2,c
  9436  001C8E  D4ED               	goto	u8760
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;TabelasUmidade.h: 182: else
  9440                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9441                           
  9442                           ; BSR set to: 0
  9443                           
  9444                           ; BSR set to: 0
  9445  001C90  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9446  001C92  D00E               	goto	l535
  9447  001C94  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9448  001C96  E104               	bnz	u9980
  9449  001C98  0E5E               	movlw	94
  9450  001C9A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9451  001C9C  A0D8               	btfss	status,0,c
  9452  001C9E  D008               	goto	l535
  9453  001CA0                     u9980:
  9454                           
  9455                           ; BSR set to: 0
  9456  001CA0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9457  001CA2  D4DC               	goto	u8750
  9458  001CA4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9459  001CA6  E104               	bnz	l7198
  9460  001CA8  0E65               	movlw	101
  9461  001CAA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9462  001CAC  A0D8               	btfss	status,0,c
  9463  001CAE  D4D6               	goto	u8750
  9464  001CB0                     l535:
  9465  001CB0                     l7198:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;TabelasUmidade.h: 184: else
  9469                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9470  001CB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9471  001CB2  D00E               	goto	l537
  9472  001CB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9473  001CB6  E104               	bnz	u10000
  9474  001CB8  0E65               	movlw	101
  9475  001CBA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9476  001CBC  A0D8               	btfss	status,0,c
  9477  001CBE  D008               	goto	l537
  9478  001CC0                     u10000:
  9479                           
  9480                           ; BSR set to: 0
  9481  001CC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9482  001CC2  D2FE               	goto	u11250
  9483  001CC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9484  001CC6  E104               	bnz	l7204
  9485  001CC8  0E67               	movlw	103
  9486  001CCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9487  001CCC  A0D8               	btfss	status,0,c
  9488  001CCE  D2F8               	goto	u11250
  9489  001CD0                     l537:
  9490  001CD0                     l7204:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;TabelasUmidade.h: 186: else
  9494                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9495  001CD0  0E67               	movlw	103
  9496  001CD2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9497  001CD4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9498  001CD6  B4D8               	btfsc	status,2,c
  9499  001CD8  D303               	goto	u11270
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;TabelasUmidade.h: 188: else
  9503                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9504                           
  9505                           ; BSR set to: 0
  9506                           
  9507                           ; BSR set to: 0
  9508  001CDA  0E68               	movlw	104
  9509  001CDC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9510  001CDE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9511  001CE0  B4D8               	btfsc	status,2,c
  9512  001CE2  D306               	goto	u11280
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;TabelasUmidade.h: 190: else
  9516                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9517                           
  9518                           ; BSR set to: 0
  9519                           
  9520                           ; BSR set to: 0
  9521  001CE4  0E69               	movlw	105
  9522  001CE6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9523  001CE8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9524  001CEA  B4D8               	btfsc	status,2,c
  9525  001CEC  D179               	goto	u10680
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;TabelasUmidade.h: 192: else
  9529                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9530                           
  9531                           ; BSR set to: 0
  9532                           
  9533                           ; BSR set to: 0
  9534  001CEE  0E6A               	movlw	106
  9535  001CF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9536  001CF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9537  001CF4  B4D8               	btfsc	status,2,c
  9538  001CF6  D30F               	goto	u11300
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;TabelasUmidade.h: 194: else
  9542                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9543                           
  9544                           ; BSR set to: 0
  9545                           
  9546                           ; BSR set to: 0
  9547  001CF8  0E6B               	movlw	107
  9548  001CFA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9549  001CFC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9550  001CFE  B4D8               	btfsc	status,2,c
  9551  001D00  D312               	goto	u11310
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;TabelasUmidade.h: 196: else
  9555                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9556                           
  9557                           ; BSR set to: 0
  9558                           
  9559                           ; BSR set to: 0
  9560  001D02  0E6C               	movlw	108
  9561  001D04  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9562  001D06  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9563  001D08  A4D8               	btfss	status,2,c
  9564  001D0A  D002               	goto	l549
  9565                           
  9566                           ; BSR set to: 0
  9567  001D0C  0E43               	movlw	67
  9568  001D0E  D4DE               	goto	L22
  9569  001D10                     l549:
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;TabelasUmidade.h: 198: else
  9573                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9574                           
  9575                           ; BSR set to: 0
  9576  001D10  0E6D               	movlw	109
  9577  001D12  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9578  001D14  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9579  001D16  B4D8               	btfsc	status,2,c
  9580  001D18  D30E               	goto	u11320
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;TabelasUmidade.h: 200: else
  9584                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9585                           
  9586                           ; BSR set to: 0
  9587                           
  9588                           ; BSR set to: 0
  9589  001D1A  0E6E               	movlw	110
  9590  001D1C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9591  001D1E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9592  001D20  B4D8               	btfsc	status,2,c
  9593  001D22  D17E               	goto	u10720
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;TabelasUmidade.h: 202: else
  9597                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9598                           
  9599                           ; BSR set to: 0
  9600                           
  9601                           ; BSR set to: 0
  9602  001D24  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9603  001D26  D00E               	goto	l555
  9604  001D28  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9605  001D2A  E104               	bnz	u10100
  9606  001D2C  0E6F               	movlw	111
  9607  001D2E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9608  001D30  A0D8               	btfss	status,0,c
  9609  001D32  D008               	goto	l555
  9610  001D34                     u10100:
  9611                           
  9612                           ; BSR set to: 0
  9613  001D34  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9614  001D36  D317               	goto	u11350
  9615  001D38  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9616  001D3A  E104               	bnz	l7242
  9617  001D3C  0E73               	movlw	115
  9618  001D3E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9619  001D40  A0D8               	btfss	status,0,c
  9620  001D42  D311               	goto	u11350
  9621  001D44                     l555:
  9622  001D44                     l7242:
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;TabelasUmidade.h: 204: else
  9626                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9627  001D44  0E73               	movlw	115
  9628  001D46  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9629  001D48  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9630  001D4A  B4D8               	btfsc	status,2,c
  9631  001D4C  D314               	goto	u11360
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;TabelasUmidade.h: 206: else
  9635                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9636                           
  9637                           ; BSR set to: 0
  9638                           
  9639                           ; BSR set to: 0
  9640  001D4E  0E74               	movlw	116
  9641  001D50  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9642  001D52  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9643  001D54  B4D8               	btfsc	status,2,c
  9644  001D56  D317               	goto	u11370
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;TabelasUmidade.h: 208: else
  9648                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9649                           
  9650                           ; BSR set to: 0
  9651                           
  9652                           ; BSR set to: 0
  9653  001D58  0E75               	movlw	117
  9654  001D5A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9655  001D5C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9656  001D5E  A4D8               	btfss	status,2,c
  9657  001D60  D002               	goto	l561
  9658                           
  9659                           ; BSR set to: 0
  9660  001D62  0E36               	movlw	54
  9661  001D64  D4B3               	goto	L22
  9662  001D66                     l561:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;TabelasUmidade.h: 210: else
  9666                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9667                           
  9668                           ; BSR set to: 0
  9669  001D66  0E76               	movlw	118
  9670  001D68  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9671  001D6A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9672  001D6C  B4D8               	btfsc	status,2,c
  9673  001D6E  D323               	goto	u11400
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;TabelasUmidade.h: 212: else
  9677                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9678                           
  9679                           ; BSR set to: 0
  9680                           
  9681                           ; BSR set to: 0
  9682  001D70  0E77               	movlw	119
  9683  001D72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9684  001D74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9685  001D76  B4D8               	btfsc	status,2,c
  9686  001D78  D326               	goto	u11410
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;TabelasUmidade.h: 214: else
  9690                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9691                           
  9692                           ; BSR set to: 0
  9693                           
  9694                           ; BSR set to: 0
  9695  001D7A  0E78               	movlw	120
  9696  001D7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9697  001D7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9698  001D80  B4D8               	btfsc	status,2,c
  9699  001D82  D18D               	goto	u10810
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;TabelasUmidade.h: 216: else
  9703                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9704                           
  9705                           ; BSR set to: 0
  9706                           
  9707                           ; BSR set to: 0
  9708  001D84  0E79               	movlw	121
  9709  001D86  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9710  001D88  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9711  001D8A  B4D8               	btfsc	status,2,c
  9712  001D8C  D32C               	goto	u11430
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;TabelasUmidade.h: 218: else
  9716                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9717                           
  9718                           ; BSR set to: 0
  9719                           
  9720                           ; BSR set to: 0
  9721  001D8E  0E7A               	movlw	122
  9722  001D90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9723  001D92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9724  001D94  A4D8               	btfss	status,2,c
  9725  001D96  D002               	goto	l571
  9726                           
  9727                           ; BSR set to: 0
  9728  001D98  0E2E               	movlw	46
  9729  001D9A  D498               	goto	L22
  9730  001D9C                     l571:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;TabelasUmidade.h: 220: else
  9734                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9735                           
  9736                           ; BSR set to: 0
  9737  001D9C  0E7B               	movlw	123
  9738  001D9E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9739  001DA0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9740  001DA2  B4D8               	btfsc	status,2,c
  9741  001DA4  D328               	goto	u11440
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;TabelasUmidade.h: 222: else
  9745                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9746                           
  9747                           ; BSR set to: 0
  9748                           
  9749                           ; BSR set to: 0
  9750  001DA6  0E7C               	movlw	124
  9751  001DA8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9752  001DAA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9753  001DAC  B4D8               	btfsc	status,2,c
  9754  001DAE  D189               	goto	u10840
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;TabelasUmidade.h: 224: else
  9758                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9759                           
  9760                           ; BSR set to: 0
  9761                           
  9762                           ; BSR set to: 0
  9763  001DB0  0E7D               	movlw	125
  9764  001DB2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9765  001DB4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9766  001DB6  B4D8               	btfsc	status,2,c
  9767  001DB8  D326               	goto	u11450
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;TabelasUmidade.h: 226: else
  9771                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9772                           
  9773                           ; BSR set to: 0
  9774                           
  9775                           ; BSR set to: 0
  9776  001DBA  0E7E               	movlw	126
  9777  001DBC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9778  001DBE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9779  001DC0  B4D8               	btfsc	status,2,c
  9780  001DC2  D187               	goto	u10850
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;TabelasUmidade.h: 228: else
  9784                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9785                           
  9786                           ; BSR set to: 0
  9787                           
  9788                           ; BSR set to: 0
  9789  001DC4  0E7F               	movlw	127
  9790  001DC6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9791  001DC8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9792  001DCA  B4D8               	btfsc	status,2,c
  9793  001DCC  D32C               	goto	u11470
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;TabelasUmidade.h: 230: else
  9797                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9798                           
  9799                           ; BSR set to: 0
  9800                           
  9801                           ; BSR set to: 0
  9802  001DCE  0E80               	movlw	128
  9803  001DD0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9804  001DD2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9805  001DD4  B4D8               	btfsc	status,2,c
  9806  001DD6  D327               	goto	u11470
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;TabelasUmidade.h: 232: else
  9810                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9811                           
  9812                           ; BSR set to: 0
  9813                           
  9814                           ; BSR set to: 0
  9815  001DD8  0E81               	movlw	129
  9816  001DDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9817  001DDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9818  001DDE  B4D8               	btfsc	status,2,c
  9819  001DE0  D32A               	goto	u11480
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;TabelasUmidade.h: 234: else
  9823                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9824                           
  9825                           ; BSR set to: 0
  9826                           
  9827                           ; BSR set to: 0
  9828  001DE2  0E82               	movlw	130
  9829  001DE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9830  001DE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9831  001DE8  A4D8               	btfss	status,2,c
  9832  001DEA  D002               	goto	l587
  9833                           
  9834                           ; BSR set to: 0
  9835  001DEC  0E26               	movlw	38
  9836  001DEE  D46E               	goto	L22
  9837  001DF0                     l587:
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;TabelasUmidade.h: 236: else
  9841                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9842                           
  9843                           ; BSR set to: 0
  9844  001DF0  0E83               	movlw	131
  9845  001DF2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9846  001DF4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9847  001DF6  B4D8               	btfsc	status,2,c
  9848  001DF8  D326               	goto	u11490
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;TabelasUmidade.h: 238: else
  9852                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
  9853                           
  9854                           ; BSR set to: 0
  9855                           
  9856                           ; BSR set to: 0
  9857  001DFA  0E84               	movlw	132
  9858  001DFC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9859  001DFE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9860  001E00  B4D8               	btfsc	status,2,c
  9861  001E02  D329               	goto	u11500
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;TabelasUmidade.h: 240: else
  9865                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
  9866                           
  9867                           ; BSR set to: 0
  9868                           
  9869                           ; BSR set to: 0
  9870  001E04  0E85               	movlw	133
  9871  001E06  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9872  001E08  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9873  001E0A  B4D8               	btfsc	status,2,c
  9874  001E0C  D324               	goto	u11500
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;TabelasUmidade.h: 242: else
  9878                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
  9879                           
  9880                           ; BSR set to: 0
  9881                           
  9882                           ; BSR set to: 0
  9883  001E0E  0E86               	movlw	134
  9884  001E10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9885  001E12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9886  001E14  B4D8               	btfsc	status,2,c
  9887  001E16  D31F               	goto	u11500
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;TabelasUmidade.h: 244: else
  9891                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
  9892                           
  9893                           ; BSR set to: 0
  9894                           
  9895                           ; BSR set to: 0
  9896  001E18  0E87               	movlw	135
  9897  001E1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9898  001E1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9899  001E1E  B4D8               	btfsc	status,2,c
  9900  001E20  D322               	goto	u11510
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;TabelasUmidade.h: 246: else
  9904                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
  9905                           
  9906                           ; BSR set to: 0
  9907                           
  9908                           ; BSR set to: 0
  9909  001E22  0E88               	movlw	136
  9910  001E24  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9911  001E26  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9912  001E28  B4D8               	btfsc	status,2,c
  9913  001E2A  D325               	goto	u11520
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;TabelasUmidade.h: 248: else
  9917                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
  9918                           
  9919                           ; BSR set to: 0
  9920                           
  9921                           ; BSR set to: 0
  9922  001E2C  0E89               	movlw	137
  9923  001E2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9924  001E30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9925  001E32  B4D8               	btfsc	status,2,c
  9926  001E34  D328               	goto	u11530
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;TabelasUmidade.h: 250: else
  9930                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
  9931                           
  9932                           ; BSR set to: 0
  9933                           
  9934                           ; BSR set to: 0
  9935  001E36  0E8A               	movlw	138
  9936  001E38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9937  001E3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9938  001E3C  B4D8               	btfsc	status,2,c
  9939  001E3E  D32B               	goto	u11540
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;TabelasUmidade.h: 252: else
  9943                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
  9944                           
  9945                           ; BSR set to: 0
  9946                           
  9947                           ; BSR set to: 0
  9948  001E40  0E8B               	movlw	139
  9949  001E42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9950  001E44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9951  001E46  B4D8               	btfsc	status,2,c
  9952  001E48  D32E               	goto	u11550
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;TabelasUmidade.h: 254: else
  9956                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
  9957                           
  9958                           ; BSR set to: 0
  9959                           
  9960                           ; BSR set to: 0
  9961  001E4A  0E8C               	movlw	140
  9962  001E4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9963  001E4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9964  001E50  B4D8               	btfsc	status,2,c
  9965  001E52  D331               	goto	u11560
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;TabelasUmidade.h: 256: else
  9969                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
  9970                           
  9971                           ; BSR set to: 0
  9972                           
  9973                           ; BSR set to: 0
  9974  001E54  0E8D               	movlw	141
  9975  001E56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9976  001E58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9977  001E5A  B4D8               	btfsc	status,2,c
  9978  001E5C  D334               	goto	u11570
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;TabelasUmidade.h: 258: else
  9982                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
  9983                           
  9984                           ; BSR set to: 0
  9985                           
  9986                           ; BSR set to: 0
  9987  001E5E  0E8E               	movlw	142
  9988  001E60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9989  001E62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9990  001E64  B4D8               	btfsc	status,2,c
  9991  001E66  D337               	goto	u11580
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;TabelasUmidade.h: 260: else
  9995                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
  9996                           
  9997                           ; BSR set to: 0
  9998                           
  9999                           ; BSR set to: 0
 10000  001E68  0E8F               	movlw	143
 10001  001E6A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10002  001E6C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10003  001E6E  B4D8               	btfsc	status,2,c
 10004  001E70  D33A               	goto	u11590
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;TabelasUmidade.h: 262: else
 10008                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
 10009                           
 10010                           ; BSR set to: 0
 10011                           
 10012                           ; BSR set to: 0
 10013  001E72  0E90               	movlw	144
 10014  001E74  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10015  001E76  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10016  001E78  B4D8               	btfsc	status,2,c
 10017  001E7A  D33D               	goto	u11600
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;TabelasUmidade.h: 264: else
 10021                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
 10022                           
 10023                           ; BSR set to: 0
 10024                           
 10025                           ; BSR set to: 0
 10026  001E7C  0E91               	movlw	145
 10027  001E7E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10028  001E80  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10029  001E82  B4D8               	btfsc	status,2,c
 10030  001E84  D340               	goto	u11610
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;TabelasUmidade.h: 266: else
 10034                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
 10035                           
 10036                           ; BSR set to: 0
 10037                           
 10038                           ; BSR set to: 0
 10039  001E86  0E92               	movlw	146
 10040  001E88  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10041  001E8A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10042  001E8C  B4D8               	btfsc	status,2,c
 10043  001E8E  D343               	goto	u11620
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;TabelasUmidade.h: 268: else
 10047                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
 10048                           
 10049                           ; BSR set to: 0
 10050                           
 10051                           ; BSR set to: 0
 10052  001E90  0E93               	movlw	147
 10053  001E92  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10054  001E94  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10055  001E96  B4D8               	btfsc	status,2,c
 10056  001E98  D346               	goto	u11630
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;TabelasUmidade.h: 270: else
 10060                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
 10061                           
 10062                           ; BSR set to: 0
 10063                           
 10064                           ; BSR set to: 0
 10065  001E9A  0E94               	movlw	148
 10066  001E9C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10067  001E9E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10068  001EA0  B4D8               	btfsc	status,2,c
 10069  001EA2  D349               	goto	u11640
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;TabelasUmidade.h: 272: else
 10073                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
 10074                           
 10075                           ; BSR set to: 0
 10076                           
 10077                           ; BSR set to: 0
 10078  001EA4  0E95               	movlw	149
 10079  001EA6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10080  001EA8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10081  001EAA  B4D8               	btfsc	status,2,c
 10082  001EAC  D34C               	goto	u11650
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;TabelasUmidade.h: 274: else
 10086                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10087                           
 10088                           ; BSR set to: 0
 10089                           
 10090                           ; BSR set to: 0
 10091  001EAE  0E96               	movlw	150
 10092  001EB0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10093  001EB2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10094  001EB4  B4D8               	btfsc	status,2,c
 10095  001EB6  D34F               	goto	u11660
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;TabelasUmidade.h: 276: else
 10099                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10100                           
 10101                           ; BSR set to: 0
 10102                           
 10103                           ; BSR set to: 0
 10104  001EB8  0E97               	movlw	151
 10105  001EBA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10106  001EBC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10107  001EBE  B4D8               	btfsc	status,2,c
 10108  001EC0  D352               	goto	u11670
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;TabelasUmidade.h: 278: else
 10112                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10113                           
 10114                           ; BSR set to: 0
 10115                           
 10116                           ; BSR set to: 0
 10117  001EC2  0E98               	movlw	152
 10118  001EC4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10119  001EC6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10120  001EC8  B4D8               	btfsc	status,2,c
 10121  001ECA  D355               	goto	u11680
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;TabelasUmidade.h: 280: else
 10125                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10126                           
 10127                           ; BSR set to: 0
 10128                           
 10129                           ; BSR set to: 0
 10130  001ECC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10131  001ECE  D00E               	goto	l633
 10132  001ED0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10133  001ED2  E104               	bnz	u10500
 10134  001ED4  0E99               	movlw	153
 10135  001ED6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10136  001ED8  A0D8               	btfss	status,0,c
 10137  001EDA  D008               	goto	l633
 10138  001EDC                     u10500:
 10139                           
 10140                           ; BSR set to: 0
 10141  001EDC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10142  001EDE  D35E               	goto	u11700
 10143  001EE0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10144  001EE2  E104               	bnz	l7400
 10145  001EE4  0E9D               	movlw	157
 10146  001EE6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10147  001EE8  A0D8               	btfss	status,0,c
 10148  001EEA  D358               	goto	u11700
 10149  001EEC                     l633:
 10150  001EEC                     l7400:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;TabelasUmidade.h: 282: else
 10154                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10155  001EEC  0E9D               	movlw	157
 10156  001EEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10157  001EF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10158  001EF2  B4D8               	btfsc	status,2,c
 10159  001EF4  D35B               	goto	u11710
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;TabelasUmidade.h: 284: else
 10163                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10164                           
 10165                           ; BSR set to: 0
 10166                           
 10167                           ; BSR set to: 0
 10168  001EF6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10169  001EF8  D372               	goto	l638
 10170  001EFA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10171  001EFC  E101               	bnz	u10530
 10172  001EFE  D182               	goto	L24
 10173  001F00                     u10530:
 10174  001F00  D360               	goto	u11720
 10175  001F02                     
 10176                           ; BSR set to: 0
 10177                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10178                           
 10179                           ; BSR set to: 0
 10180  001F02  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10181  001F04  D006               	goto	u10540
 10182  001F06  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10183  001F08  E107               	bnz	l7412
 10184  001F0A  0E5B               	movlw	91
 10185  001F0C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10186  001F0E  B0D8               	btfsc	status,0,c
 10187  001F10  D003               	goto	l640
 10188  001F12                     u10540:
 10189                           
 10190                           ; BSR set to: 0
 10191  001F12  0E61               	movlw	97
 10192  001F14  EF66  F00B         	goto	L22
 10193  001F18                     l640:
 10194  001F18                     l7412:
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;TabelasUmidade.h: 289: else
 10198                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10199  001F18  0E5B               	movlw	91
 10200  001F1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10201  001F1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10202  001F1E  A4D8               	btfss	status,2,c
 10203  001F20  D003               	goto	l642
 10204  001F22                     u10550:
 10205                           
 10206                           ; BSR set to: 0
 10207  001F22  0E60               	movlw	96
 10208  001F24  EF66  F00B         	goto	L22
 10209  001F28                     l642:
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;TabelasUmidade.h: 291: else
 10213                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10214                           
 10215                           ; BSR set to: 0
 10216  001F28  0E5C               	movlw	92
 10217  001F2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10218  001F2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10219  001F2E  B4D8               	btfsc	status,2,c
 10220  001F30  D005               	goto	u10570
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;TabelasUmidade.h: 293: else
 10224                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10225                           
 10226                           ; BSR set to: 0
 10227                           
 10228                           ; BSR set to: 0
 10229  001F32  0E5C               	movlw	92
 10230  001F34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10231  001F36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10232  001F38  A4D8               	btfss	status,2,c
 10233  001F3A  D003               	goto	l646
 10234  001F3C                     u10570:
 10235                           
 10236                           ; BSR set to: 0
 10237  001F3C  0E5F               	movlw	95
 10238  001F3E  EF66  F00B         	goto	L22
 10239  001F42                     l646:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;TabelasUmidade.h: 295: else
 10243                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10244                           
 10245                           ; BSR set to: 0
 10246  001F42  0E5D               	movlw	93
 10247  001F44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10248  001F46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10249  001F48  B4D8               	btfsc	status,2,c
 10250  001F4A  EF58  F00B         	goto	u8810
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;TabelasUmidade.h: 297: else
 10254                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10255                           
 10256                           ; BSR set to: 0
 10257                           
 10258                           ; BSR set to: 0
 10259  001F4E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10260  001F50  D010               	goto	l650
 10261  001F52  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10262  001F54  E104               	bnz	u10590
 10263  001F56  0E5E               	movlw	94
 10264  001F58  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10265  001F5A  A0D8               	btfss	status,0,c
 10266  001F5C  D00A               	goto	l650
 10267  001F5E                     u10590:
 10268                           
 10269                           ; BSR set to: 0
 10270  001F5E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10271  001F60  EF51  F00B         	goto	u8800
 10272  001F64  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10273  001F66  E105               	bnz	l7434
 10274  001F68  0E65               	movlw	101
 10275  001F6A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10276  001F6C  A0D8               	btfss	status,0,c
 10277  001F6E  EF51  F00B         	goto	u8800
 10278  001F72                     l650:
 10279  001F72                     l7434:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;TabelasUmidade.h: 299: else
 10283                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10284  001F72  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10285  001F74  D011               	goto	l652
 10286  001F76  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10287  001F78  E104               	bnz	u10610
 10288  001F7A  0E65               	movlw	101
 10289  001F7C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10290  001F7E  A0D8               	btfss	status,0,c
 10291  001F80  D00B               	goto	l652
 10292  001F82                     u10610:
 10293                           
 10294                           ; BSR set to: 0
 10295  001F82  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10296  001F84  D006               	goto	u10620
 10297  001F86  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10298  001F88  E107               	bnz	l7440
 10299  001F8A  0E67               	movlw	103
 10300  001F8C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10301  001F8E  B0D8               	btfsc	status,0,c
 10302  001F90  D003               	goto	l652
 10303  001F92                     u10620:
 10304                           
 10305                           ; BSR set to: 0
 10306  001F92  0E53               	movlw	83
 10307  001F94  EF66  F00B         	goto	L22
 10308  001F98                     l652:
 10309  001F98                     l7440:
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;TabelasUmidade.h: 301: else
 10313                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10314  001F98  0E67               	movlw	103
 10315  001F9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10316  001F9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10317  001F9E  A4D8               	btfss	status,2,c
 10318  001FA0  D003               	goto	l654
 10319                           
 10320                           ; BSR set to: 0
 10321  001FA2  0E51               	movlw	81
 10322  001FA4  EF66  F00B         	goto	L22
 10323  001FA8                     l654:
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;TabelasUmidade.h: 303: else
 10327                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10328                           
 10329                           ; BSR set to: 0
 10330  001FA8  0E68               	movlw	104
 10331  001FAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10332  001FAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10333  001FAE  B4D8               	btfsc	status,2,c
 10334  001FB0  D17F               	goto	u11240
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;TabelasUmidade.h: 305: else
 10338                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10339                           
 10340                           ; BSR set to: 0
 10341                           
 10342                           ; BSR set to: 0
 10343  001FB2  0E69               	movlw	105
 10344  001FB4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10345  001FB6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10346  001FB8  B4D8               	btfsc	status,2,c
 10347  001FBA  D18A               	goto	u11260
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;TabelasUmidade.h: 307: else
 10351                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10352                           
 10353                           ; BSR set to: 0
 10354                           
 10355                           ; BSR set to: 0
 10356  001FBC  0E6A               	movlw	106
 10357  001FBE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10358  001FC0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10359  001FC2  B4D8               	btfsc	status,2,c
 10360  001FC4  D195               	goto	u11280
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;TabelasUmidade.h: 309: else
 10364                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10365                           
 10366                           ; BSR set to: 0
 10367                           
 10368                           ; BSR set to: 0
 10369  001FC6  0E6B               	movlw	107
 10370  001FC8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10371  001FCA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10372  001FCC  A4D8               	btfss	status,2,c
 10373  001FCE  D003               	goto	l662
 10374                           
 10375                           ; BSR set to: 0
 10376  001FD0  0E49               	movlw	73
 10377  001FD2  EF66  F00B         	goto	L22
 10378  001FD6                     l662:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;TabelasUmidade.h: 311: else
 10382                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10383                           
 10384                           ; BSR set to: 0
 10385  001FD6  0E6C               	movlw	108
 10386  001FD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10387  001FDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10388  001FDC  A4D8               	btfss	status,2,c
 10389  001FDE  D003               	goto	l664
 10390  001FE0                     u10680:
 10391                           
 10392                           ; BSR set to: 0
 10393  001FE0  0E48               	movlw	72
 10394  001FE2  EF66  F00B         	goto	L22
 10395  001FE6                     l664:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;TabelasUmidade.h: 313: else
 10399                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10400                           
 10401                           ; BSR set to: 0
 10402  001FE6  0E6D               	movlw	109
 10403  001FE8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10404  001FEA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10405  001FEC  A4D8               	btfss	status,2,c
 10406  001FEE  D003               	goto	l666
 10407                           
 10408                           ; BSR set to: 0
 10409  001FF0  0E47               	movlw	71
 10410  001FF2  EF66  F00B         	goto	L22
 10411  001FF6                     l666:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;TabelasUmidade.h: 315: else
 10415                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10416                           
 10417                           ; BSR set to: 0
 10418  001FF6  0E6E               	movlw	110
 10419  001FF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10420  001FFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10421  001FFC  B4D8               	btfsc	status,2,c
 10422  001FFE  D18B               	goto	u11300
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;TabelasUmidade.h: 317: else
 10426                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10427                           
 10428                           ; BSR set to: 0
 10429                           
 10430                           ; BSR set to: 0
 10431  002000  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10432  002002  D011               	goto	l670
 10433  002004  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10434  002006  E104               	bnz	u10710
 10435  002008  0E6F               	movlw	111
 10436  00200A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10437  00200C  A0D8               	btfss	status,0,c
 10438  00200E  D00B               	goto	l670
 10439  002010                     u10710:
 10440                           
 10441                           ; BSR set to: 0
 10442  002010  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10443  002012  D006               	goto	u10720
 10444  002014  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10445  002016  E107               	bnz	l7478
 10446  002018  0E73               	movlw	115
 10447  00201A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10448  00201C  B0D8               	btfsc	status,0,c
 10449  00201E  D003               	goto	l670
 10450  002020                     u10720:
 10451                           
 10452                           ; BSR set to: 0
 10453  002020  0E41               	movlw	65
 10454  002022  EF66  F00B         	goto	L22
 10455  002026                     l670:
 10456  002026                     l7478:
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;TabelasUmidade.h: 319: else
 10460                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10461  002026  0E73               	movlw	115
 10462  002028  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10463  00202A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10464  00202C  A4D8               	btfss	status,2,c
 10465  00202E  D003               	goto	l672
 10466                           
 10467                           ; BSR set to: 0
 10468  002030  0E3F               	movlw	63
 10469  002032  EF66  F00B         	goto	L22
 10470  002036                     l672:
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;TabelasUmidade.h: 321: else
 10474                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10475                           
 10476                           ; BSR set to: 0
 10477  002036  0E74               	movlw	116
 10478  002038  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10479  00203A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10480  00203C  A4D8               	btfss	status,2,c
 10481  00203E  D003               	goto	l674
 10482                           
 10483                           ; BSR set to: 0
 10484  002040  0E3D               	movlw	61
 10485  002042  EF66  F00B         	goto	L22
 10486  002046                     l674:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;TabelasUmidade.h: 323: else
 10490                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10491                           
 10492                           ; BSR set to: 0
 10493  002046  0E75               	movlw	117
 10494  002048  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10495  00204A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10496  00204C  A4D8               	btfss	status,2,c
 10497  00204E  D003               	goto	l676
 10498                           
 10499                           ; BSR set to: 0
 10500  002050  0E3B               	movlw	59
 10501  002052  EF66  F00B         	goto	L22
 10502  002056                     l676:
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;TabelasUmidade.h: 325: else
 10506                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10507                           
 10508                           ; BSR set to: 0
 10509  002056  0E76               	movlw	118
 10510  002058  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10511  00205A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10512  00205C  A4D8               	btfss	status,2,c
 10513  00205E  D003               	goto	l678
 10514                           
 10515                           ; BSR set to: 0
 10516  002060  0E39               	movlw	57
 10517  002062  EF66  F00B         	goto	L22
 10518  002066                     l678:
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;TabelasUmidade.h: 327: else
 10522                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10523                           
 10524                           ; BSR set to: 0
 10525  002066  0E77               	movlw	119
 10526  002068  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10527  00206A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10528  00206C  B4D8               	btfsc	status,2,c
 10529  00206E  D193               	goto	u11380
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;TabelasUmidade.h: 329: else
 10533                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10534                           
 10535                           ; BSR set to: 0
 10536                           
 10537                           ; BSR set to: 0
 10538  002070  0E78               	movlw	120
 10539  002072  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10540  002074  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10541  002076  B4D8               	btfsc	status,2,c
 10542  002078  D196               	goto	u11390
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;TabelasUmidade.h: 331: else
 10546                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10547                           
 10548                           ; BSR set to: 0
 10549                           
 10550                           ; BSR set to: 0
 10551  00207A  0E79               	movlw	121
 10552  00207C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10553  00207E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10554  002080  A4D8               	btfss	status,2,c
 10555  002082  D003               	goto	l684
 10556                           
 10557                           ; BSR set to: 0
 10558  002084  0E33               	movlw	51
 10559  002086  EF66  F00B         	goto	L22
 10560  00208A                     l684:
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;TabelasUmidade.h: 333: else
 10564                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10565                           
 10566                           ; BSR set to: 0
 10567  00208A  0E7A               	movlw	122
 10568  00208C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10569  00208E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10570  002090  B4D8               	btfsc	status,2,c
 10571  002092  D199               	goto	u11410
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;TabelasUmidade.h: 335: else
 10575                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10576                           
 10577                           ; BSR set to: 0
 10578                           
 10579                           ; BSR set to: 0
 10580  002094  0E7B               	movlw	123
 10581  002096  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10582  002098  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10583  00209A  A4D8               	btfss	status,2,c
 10584  00209C  D003               	goto	l688
 10585  00209E                     u10810:
 10586                           
 10587                           ; BSR set to: 0
 10588  00209E  0E30               	movlw	48
 10589  0020A0  EF66  F00B         	goto	L22
 10590  0020A4                     l688:
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;TabelasUmidade.h: 337: else
 10594                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10595                           
 10596                           ; BSR set to: 0
 10597  0020A4  0E7C               	movlw	124
 10598  0020A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10599  0020A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10600  0020AA  B4D8               	btfsc	status,2,c
 10601  0020AC  D19C               	goto	u11430
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;TabelasUmidade.h: 339: else
 10605                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10606                           
 10607                           ; BSR set to: 0
 10608                           
 10609                           ; BSR set to: 0
 10610  0020AE  0E7D               	movlw	125
 10611  0020B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10612  0020B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10613  0020B4  B4D8               	btfsc	status,2,c
 10614  0020B6  D19F               	goto	u11440
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;TabelasUmidade.h: 341: else
 10618                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10619                           
 10620                           ; BSR set to: 0
 10621                           
 10622                           ; BSR set to: 0
 10623  0020B8  0E7E               	movlw	126
 10624  0020BA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10625  0020BC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10626  0020BE  A4D8               	btfss	status,2,c
 10627  0020C0  D003               	goto	l694
 10628  0020C2                     u10840:
 10629                           
 10630                           ; BSR set to: 0
 10631  0020C2  0E2C               	movlw	44
 10632  0020C4  EF66  F00B         	goto	L22
 10633  0020C8                     l694:
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;TabelasUmidade.h: 343: else
 10637                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10638                           
 10639                           ; BSR set to: 0
 10640  0020C8  0E7F               	movlw	127
 10641  0020CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10642  0020CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10643  0020CE  A4D8               	btfss	status,2,c
 10644  0020D0  D003               	goto	l696
 10645  0020D2                     u10850:
 10646                           
 10647                           ; BSR set to: 0
 10648  0020D2  0E2A               	movlw	42
 10649  0020D4  EF66  F00B         	goto	L22
 10650  0020D8                     l696:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;TabelasUmidade.h: 345: else
 10654                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10655                           
 10656                           ; BSR set to: 0
 10657  0020D8  0E80               	movlw	128
 10658  0020DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10659  0020DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10660  0020DE  B4D8               	btfsc	status,2,c
 10661  0020E0  D19A               	goto	u11460
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;TabelasUmidade.h: 347: else
 10665                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10666                           
 10667                           ; BSR set to: 0
 10668                           
 10669                           ; BSR set to: 0
 10670  0020E2  0E81               	movlw	129
 10671  0020E4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10672  0020E6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10673  0020E8  B4D8               	btfsc	status,2,c
 10674  0020EA  D195               	goto	u11460
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;TabelasUmidade.h: 349: else
 10678                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10679                           
 10680                           ; BSR set to: 0
 10681                           
 10682                           ; BSR set to: 0
 10683  0020EC  0E82               	movlw	130
 10684  0020EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10685  0020F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10686  0020F2  B4D8               	btfsc	status,2,c
 10687  0020F4  D198               	goto	u11470
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;TabelasUmidade.h: 351: else
 10691                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10692                           
 10693                           ; BSR set to: 0
 10694                           
 10695                           ; BSR set to: 0
 10696  0020F6  0E83               	movlw	131
 10697  0020F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10698  0020FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10699  0020FC  B4D8               	btfsc	status,2,c
 10700  0020FE  D193               	goto	u11470
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;TabelasUmidade.h: 353: else
 10704                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10705                           
 10706                           ; BSR set to: 0
 10707                           
 10708                           ; BSR set to: 0
 10709  002100  0E84               	movlw	132
 10710  002102  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10711  002104  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10712  002106  B4D8               	btfsc	status,2,c
 10713  002108  D196               	goto	u11480
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;TabelasUmidade.h: 355: else
 10717                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10718                           
 10719                           ; BSR set to: 0
 10720                           
 10721                           ; BSR set to: 0
 10722  00210A  0E85               	movlw	133
 10723  00210C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10724  00210E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10725  002110  B4D8               	btfsc	status,2,c
 10726  002112  D191               	goto	u11480
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;TabelasUmidade.h: 357: else
 10730                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10731                           
 10732                           ; BSR set to: 0
 10733                           
 10734                           ; BSR set to: 0
 10735  002114  0E86               	movlw	134
 10736  002116  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10737  002118  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10738  00211A  B4D8               	btfsc	status,2,c
 10739  00211C  D19C               	goto	u11500
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;TabelasUmidade.h: 359: else
 10743                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10744                           
 10745                           ; BSR set to: 0
 10746                           
 10747                           ; BSR set to: 0
 10748  00211E  0E87               	movlw	135
 10749  002120  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10750  002122  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10751  002124  B4D8               	btfsc	status,2,c
 10752  002126  D19F               	goto	u11510
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;TabelasUmidade.h: 361: else
 10756                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10757                           
 10758                           ; BSR set to: 0
 10759                           
 10760                           ; BSR set to: 0
 10761  002128  0E88               	movlw	136
 10762  00212A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10763  00212C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10764  00212E  B4D8               	btfsc	status,2,c
 10765  002130  D1A2               	goto	u11520
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;TabelasUmidade.h: 363: else
 10769                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10770                           
 10771                           ; BSR set to: 0
 10772                           
 10773                           ; BSR set to: 0
 10774  002132  0E89               	movlw	137
 10775  002134  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10776  002136  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10777  002138  B4D8               	btfsc	status,2,c
 10778  00213A  D1A5               	goto	u11530
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;TabelasUmidade.h: 365: else
 10782                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10783                           
 10784                           ; BSR set to: 0
 10785                           
 10786                           ; BSR set to: 0
 10787  00213C  0E8A               	movlw	138
 10788  00213E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10789  002140  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10790  002142  B4D8               	btfsc	status,2,c
 10791  002144  D1A8               	goto	u11540
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;TabelasUmidade.h: 367: else
 10795                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10796                           
 10797                           ; BSR set to: 0
 10798                           
 10799                           ; BSR set to: 0
 10800  002146  0E8B               	movlw	139
 10801  002148  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10802  00214A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10803  00214C  B4D8               	btfsc	status,2,c
 10804  00214E  D1AB               	goto	u11550
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;TabelasUmidade.h: 369: else
 10808                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10809                           
 10810                           ; BSR set to: 0
 10811                           
 10812                           ; BSR set to: 0
 10813  002150  0E8C               	movlw	140
 10814  002152  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10815  002154  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10816  002156  B4D8               	btfsc	status,2,c
 10817  002158  D1AE               	goto	u11560
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;TabelasUmidade.h: 371: else
 10821                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10822                           
 10823                           ; BSR set to: 0
 10824                           
 10825                           ; BSR set to: 0
 10826  00215A  0E8D               	movlw	141
 10827  00215C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10828  00215E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10829  002160  B4D8               	btfsc	status,2,c
 10830  002162  D1B1               	goto	u11570
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;TabelasUmidade.h: 373: else
 10834                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10835                           
 10836                           ; BSR set to: 0
 10837                           
 10838                           ; BSR set to: 0
 10839  002164  0E8E               	movlw	142
 10840  002166  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10841  002168  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10842  00216A  B4D8               	btfsc	status,2,c
 10843  00216C  D1B4               	goto	u11580
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;TabelasUmidade.h: 375: else
 10847                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 10848                           
 10849                           ; BSR set to: 0
 10850                           
 10851                           ; BSR set to: 0
 10852  00216E  0E8F               	movlw	143
 10853  002170  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10854  002172  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10855  002174  B4D8               	btfsc	status,2,c
 10856  002176  D1B7               	goto	u11590
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;TabelasUmidade.h: 377: else
 10860                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 10861                           
 10862                           ; BSR set to: 0
 10863                           
 10864                           ; BSR set to: 0
 10865  002178  0E90               	movlw	144
 10866  00217A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10867  00217C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10868  00217E  B4D8               	btfsc	status,2,c
 10869  002180  D1BA               	goto	u11600
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;TabelasUmidade.h: 379: else
 10873                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 10874                           
 10875                           ; BSR set to: 0
 10876                           
 10877                           ; BSR set to: 0
 10878  002182  0E91               	movlw	145
 10879  002184  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10880  002186  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10881  002188  B4D8               	btfsc	status,2,c
 10882  00218A  D1BD               	goto	u11610
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;TabelasUmidade.h: 381: else
 10886                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 10887                           
 10888                           ; BSR set to: 0
 10889                           
 10890                           ; BSR set to: 0
 10891  00218C  0E92               	movlw	146
 10892  00218E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10893  002190  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10894  002192  B4D8               	btfsc	status,2,c
 10895  002194  D1C0               	goto	u11620
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;TabelasUmidade.h: 383: else
 10899                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 10900                           
 10901                           ; BSR set to: 0
 10902                           
 10903                           ; BSR set to: 0
 10904  002196  0E93               	movlw	147
 10905  002198  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10906  00219A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10907  00219C  B4D8               	btfsc	status,2,c
 10908  00219E  D1C3               	goto	u11630
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;TabelasUmidade.h: 385: else
 10912                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 10913                           
 10914                           ; BSR set to: 0
 10915                           
 10916                           ; BSR set to: 0
 10917  0021A0  0E94               	movlw	148
 10918  0021A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10919  0021A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10920  0021A6  B4D8               	btfsc	status,2,c
 10921  0021A8  D1C6               	goto	u11640
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;TabelasUmidade.h: 387: else
 10925                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 10926                           
 10927                           ; BSR set to: 0
 10928                           
 10929                           ; BSR set to: 0
 10930  0021AA  0E95               	movlw	149
 10931  0021AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10932  0021AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10933  0021B0  B4D8               	btfsc	status,2,c
 10934  0021B2  D1C9               	goto	u11650
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;TabelasUmidade.h: 389: else
 10938                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 10939                           
 10940                           ; BSR set to: 0
 10941                           
 10942                           ; BSR set to: 0
 10943  0021B4  0E96               	movlw	150
 10944  0021B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10945  0021B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10946  0021BA  B4D8               	btfsc	status,2,c
 10947  0021BC  D1CC               	goto	u11660
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;TabelasUmidade.h: 391: else
 10951                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 10952                           
 10953                           ; BSR set to: 0
 10954                           
 10955                           ; BSR set to: 0
 10956  0021BE  0E97               	movlw	151
 10957  0021C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10958  0021C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10959  0021C4  B4D8               	btfsc	status,2,c
 10960  0021C6  D1CF               	goto	u11670
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;TabelasUmidade.h: 393: else
 10964                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 10965                           
 10966                           ; BSR set to: 0
 10967                           
 10968                           ; BSR set to: 0
 10969  0021C8  0E98               	movlw	152
 10970  0021CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10971  0021CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10972  0021CE  B4D8               	btfsc	status,2,c
 10973  0021D0  D1D2               	goto	u11680
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;TabelasUmidade.h: 395: else
 10977                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10978                           
 10979                           ; BSR set to: 0
 10980                           
 10981                           ; BSR set to: 0
 10982  0021D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10983  0021D4  D00E               	goto	l748
 10984  0021D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10985  0021D8  E104               	bnz	u11110
 10986  0021DA  0E99               	movlw	153
 10987  0021DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10988  0021DE  A0D8               	btfss	status,0,c
 10989  0021E0  D008               	goto	l748
 10990  0021E2                     u11110:
 10991                           
 10992                           ; BSR set to: 0
 10993  0021E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10994  0021E4  D1DB               	goto	u11700
 10995  0021E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10996  0021E8  E104               	bnz	l7636
 10997  0021EA  0E9D               	movlw	157
 10998  0021EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10999  0021EE  A0D8               	btfss	status,0,c
 11000  0021F0  D1D5               	goto	u11700
 11001  0021F2                     l748:
 11002  0021F2                     l7636:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;TabelasUmidade.h: 397: else
 11006                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 11007  0021F2  0E9D               	movlw	157
 11008  0021F4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11009  0021F6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11010  0021F8  B4D8               	btfsc	status,2,c
 11011  0021FA  D1D8               	goto	u11710
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;TabelasUmidade.h: 399: else
 11015                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 11016                           
 11017                           ; BSR set to: 0
 11018                           
 11019                           ; BSR set to: 0
 11020  0021FC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11021  0021FE  D1EF               	goto	l638
 11022  002200  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11023  002202  E104               	bnz	u11140
 11024  002204                     L24:
 11025  002204  0E9E               	movlw	158
 11026  002206  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11027  002208  A0D8               	btfss	status,0,c
 11028  00220A  D1E9               	goto	l638
 11029  00220C                     u11140:
 11030  00220C  D1DA               	goto	u11720
 11031  00220E                     
 11032                           ; BSR set to: 0
 11033                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 11034                           
 11035                           ; BSR set to: 0
 11036  00220E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11037  002210  D006               	goto	u11150
 11038  002212  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11039  002214  E107               	bnz	l7648
 11040  002216  0E5D               	movlw	93
 11041  002218  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11042  00221A  B0D8               	btfsc	status,0,c
 11043  00221C  D003               	goto	l754
 11044  00221E                     u11150:
 11045                           
 11046                           ; BSR set to: 0
 11047  00221E  0E64               	movlw	100
 11048  002220  EF66  F00B         	goto	L22
 11049  002224                     l754:
 11050  002224                     l7648:
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;TabelasUmidade.h: 404: else
 11054                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 11055  002224  0E5D               	movlw	93
 11056  002226  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11057  002228  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11058  00222A  A4D8               	btfss	status,2,c
 11059  00222C  D003               	goto	l756
 11060  00222E                     u11160:
 11061                           
 11062                           ; BSR set to: 0
 11063  00222E  0E63               	movlw	99
 11064  002230  EF66  F00B         	goto	L22
 11065  002234                     l756:
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;TabelasUmidade.h: 406: else
 11069                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 11070                           
 11071                           ; BSR set to: 0
 11072  002234  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11073  002236  D011               	goto	l758
 11074  002238  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11075  00223A  E104               	bnz	u11170
 11076  00223C  0E5E               	movlw	94
 11077  00223E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11078  002240  A0D8               	btfss	status,0,c
 11079  002242  D00B               	goto	l758
 11080  002244                     u11170:
 11081                           
 11082                           ; BSR set to: 0
 11083  002244  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11084  002246  D006               	goto	u11180
 11085  002248  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11086  00224A  E107               	bnz	l7658
 11087  00224C  0E65               	movlw	101
 11088  00224E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11089  002250  B0D8               	btfsc	status,0,c
 11090  002252  D003               	goto	l758
 11091  002254                     u11180:
 11092                           
 11093                           ; BSR set to: 0
 11094  002254  0E62               	movlw	98
 11095  002256  EF66  F00B         	goto	L22
 11096  00225A                     l758:
 11097  00225A                     l7658:
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;TabelasUmidade.h: 408: else
 11101                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11102  00225A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11103  00225C  D010               	goto	l760
 11104  00225E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11105  002260  E104               	bnz	u11190
 11106  002262  0E65               	movlw	101
 11107  002264  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11108  002266  A0D8               	btfss	status,0,c
 11109  002268  D00A               	goto	l760
 11110  00226A                     u11190:
 11111                           
 11112                           ; BSR set to: 0
 11113  00226A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11114  00226C  EF2E  F00B         	goto	u8750
 11115  002270  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11116  002272  E105               	bnz	l7664
 11117  002274  0E67               	movlw	103
 11118  002276  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11119  002278  A0D8               	btfss	status,0,c
 11120  00227A  EF2E  F00B         	goto	u8750
 11121  00227E                     l760:
 11122  00227E                     l7664:
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;TabelasUmidade.h: 410: else
 11126                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11127  00227E  0E67               	movlw	103
 11128  002280  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11129  002282  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11130  002284  B4D8               	btfsc	status,2,c
 11131  002286  EF20  F00B         	goto	u8730
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;TabelasUmidade.h: 412: else
 11135                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11136                           
 11137                           ; BSR set to: 0
 11138                           
 11139                           ; BSR set to: 0
 11140  00228A  0E68               	movlw	104
 11141  00228C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11142  00228E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11143  002290  B4D8               	btfsc	status,2,c
 11144  002292  EF19  F00B         	goto	u8720
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;TabelasUmidade.h: 414: else
 11148                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11149                           
 11150                           ; BSR set to: 0
 11151                           
 11152                           ; BSR set to: 0
 11153  002296  0E69               	movlw	105
 11154  002298  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11155  00229A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11156  00229C  A4D8               	btfss	status,2,c
 11157  00229E  D003               	goto	l766
 11158                           
 11159                           ; BSR set to: 0
 11160  0022A0  0E52               	movlw	82
 11161  0022A2  EF66  F00B         	goto	L22
 11162  0022A6                     l766:
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;TabelasUmidade.h: 416: else
 11166                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11167                           
 11168                           ; BSR set to: 0
 11169  0022A6  0E6A               	movlw	106
 11170  0022A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11171  0022AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11172  0022AC  A4D8               	btfss	status,2,c
 11173  0022AE  D003               	goto	l768
 11174  0022B0                     u11240:
 11175                           
 11176                           ; BSR set to: 0
 11177  0022B0  0E50               	movlw	80
 11178  0022B2  EF66  F00B         	goto	L22
 11179  0022B6                     l768:
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;TabelasUmidade.h: 418: else
 11183                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11184                           
 11185                           ; BSR set to: 0
 11186  0022B6  0E6B               	movlw	107
 11187  0022B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11188  0022BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11189  0022BC  A4D8               	btfss	status,2,c
 11190  0022BE  D003               	goto	l770
 11191  0022C0                     u11250:
 11192                           
 11193                           ; BSR set to: 0
 11194  0022C0  0E4E               	movlw	78
 11195  0022C2  EF66  F00B         	goto	L22
 11196  0022C6                     l770:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;TabelasUmidade.h: 420: else
 11200                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11201                           
 11202                           ; BSR set to: 0
 11203  0022C6  0E6C               	movlw	108
 11204  0022C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11205  0022CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11206  0022CC  A4D8               	btfss	status,2,c
 11207  0022CE  D003               	goto	l772
 11208  0022D0                     u11260:
 11209                           
 11210                           ; BSR set to: 0
 11211  0022D0  0E4D               	movlw	77
 11212  0022D2  EF66  F00B         	goto	L22
 11213  0022D6                     l772:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;TabelasUmidade.h: 422: else
 11217                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11218                           
 11219                           ; BSR set to: 0
 11220  0022D6  0E6D               	movlw	109
 11221  0022D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11222  0022DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11223  0022DC  A4D8               	btfss	status,2,c
 11224  0022DE  D003               	goto	l774
 11225  0022E0                     u11270:
 11226                           
 11227                           ; BSR set to: 0
 11228  0022E0  0E4C               	movlw	76
 11229  0022E2  EF66  F00B         	goto	L22
 11230  0022E6                     l774:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;TabelasUmidade.h: 424: else
 11234                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11235                           
 11236                           ; BSR set to: 0
 11237  0022E6  0E6E               	movlw	110
 11238  0022E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11239  0022EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11240  0022EC  A4D8               	btfss	status,2,c
 11241  0022EE  D003               	goto	l776
 11242  0022F0                     u11280:
 11243                           
 11244                           ; BSR set to: 0
 11245  0022F0  0E4B               	movlw	75
 11246  0022F2  EF66  F00B         	goto	L22
 11247  0022F6                     l776:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;TabelasUmidade.h: 426: else
 11251                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11252                           
 11253                           ; BSR set to: 0
 11254  0022F6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11255  0022F8  D011               	goto	l778
 11256  0022FA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11257  0022FC  E104               	bnz	u11290
 11258  0022FE  0E6F               	movlw	111
 11259  002300  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11260  002302  A0D8               	btfss	status,0,c
 11261  002304  D00B               	goto	l778
 11262  002306                     u11290:
 11263                           
 11264                           ; BSR set to: 0
 11265  002306  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11266  002308  D006               	goto	u11300
 11267  00230A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11268  00230C  E107               	bnz	l7702
 11269  00230E  0E73               	movlw	115
 11270  002310  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11271  002312  B0D8               	btfsc	status,0,c
 11272  002314  D003               	goto	l778
 11273  002316                     u11300:
 11274                           
 11275                           ; BSR set to: 0
 11276  002316  0E46               	movlw	70
 11277  002318  EF66  F00B         	goto	L22
 11278  00231C                     l778:
 11279  00231C                     l7702:
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;TabelasUmidade.h: 428: else
 11283                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11284  00231C  0E73               	movlw	115
 11285  00231E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11286  002320  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11287  002322  A4D8               	btfss	status,2,c
 11288  002324  D003               	goto	l780
 11289  002326                     u11310:
 11290                           
 11291                           ; BSR set to: 0
 11292  002326  0E44               	movlw	68
 11293  002328  EF66  F00B         	goto	L22
 11294  00232C                     l780:
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;TabelasUmidade.h: 430: else
 11298                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11299                           
 11300                           ; BSR set to: 0
 11301  00232C  0E74               	movlw	116
 11302  00232E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11303  002330  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11304  002332  A4D8               	btfss	status,2,c
 11305  002334  D003               	goto	l782
 11306  002336                     u11320:
 11307                           
 11308                           ; BSR set to: 0
 11309  002336  0E42               	movlw	66
 11310  002338  EF66  F00B         	goto	L22
 11311  00233C                     l782:
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;TabelasUmidade.h: 432: else
 11315                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11316                           
 11317                           ; BSR set to: 0
 11318  00233C  0E75               	movlw	117
 11319  00233E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11320  002340  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11321  002342  A4D8               	btfss	status,2,c
 11322  002344  D003               	goto	l784
 11323                           
 11324                           ; BSR set to: 0
 11325  002346  0E40               	movlw	64
 11326  002348  EF66  F00B         	goto	L22
 11327  00234C                     l784:
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;TabelasUmidade.h: 434: else
 11331                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11332                           
 11333                           ; BSR set to: 0
 11334  00234C  0E76               	movlw	118
 11335  00234E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11336  002350  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11337  002352  A4D8               	btfss	status,2,c
 11338  002354  D003               	goto	l786
 11339                           
 11340                           ; BSR set to: 0
 11341  002356  0E3E               	movlw	62
 11342  002358  EF66  F00B         	goto	L22
 11343  00235C                     l786:
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;TabelasUmidade.h: 436: else
 11347                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11348                           
 11349                           ; BSR set to: 0
 11350  00235C  0E77               	movlw	119
 11351  00235E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11352  002360  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11353  002362  A4D8               	btfss	status,2,c
 11354  002364  D003               	goto	l788
 11355  002366                     u11350:
 11356                           
 11357                           ; BSR set to: 0
 11358  002366  0E3C               	movlw	60
 11359  002368  EF66  F00B         	goto	L22
 11360  00236C                     l788:
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;TabelasUmidade.h: 438: else
 11364                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11365                           
 11366                           ; BSR set to: 0
 11367  00236C  0E78               	movlw	120
 11368  00236E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11369  002370  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11370  002372  A4D8               	btfss	status,2,c
 11371  002374  D003               	goto	l790
 11372  002376                     u11360:
 11373                           
 11374                           ; BSR set to: 0
 11375  002376  0E3A               	movlw	58
 11376  002378  EF66  F00B         	goto	L22
 11377  00237C                     l790:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;TabelasUmidade.h: 440: else
 11381                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11382                           
 11383                           ; BSR set to: 0
 11384  00237C  0E79               	movlw	121
 11385  00237E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11386  002380  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11387  002382  A4D8               	btfss	status,2,c
 11388  002384  D003               	goto	l792
 11389  002386                     u11370:
 11390                           
 11391                           ; BSR set to: 0
 11392  002386  0E38               	movlw	56
 11393  002388  EF66  F00B         	goto	L22
 11394  00238C                     l792:
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;TabelasUmidade.h: 442: else
 11398                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11399                           
 11400                           ; BSR set to: 0
 11401  00238C  0E7A               	movlw	122
 11402  00238E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11403  002390  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11404  002392  A4D8               	btfss	status,2,c
 11405  002394  D003               	goto	l794
 11406  002396                     u11380:
 11407                           
 11408                           ; BSR set to: 0
 11409  002396  0E37               	movlw	55
 11410  002398  EF66  F00B         	goto	L22
 11411  00239C                     l794:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;TabelasUmidade.h: 444: else
 11415                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11416                           
 11417                           ; BSR set to: 0
 11418  00239C  0E7B               	movlw	123
 11419  00239E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11420  0023A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11421  0023A2  A4D8               	btfss	status,2,c
 11422  0023A4  D003               	goto	l796
 11423  0023A6                     u11390:
 11424                           
 11425                           ; BSR set to: 0
 11426  0023A6  0E35               	movlw	53
 11427  0023A8  EF66  F00B         	goto	L22
 11428  0023AC                     l796:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;TabelasUmidade.h: 446: else
 11432                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11433                           
 11434                           ; BSR set to: 0
 11435  0023AC  0E7C               	movlw	124
 11436  0023AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11437  0023B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11438  0023B2  A4D8               	btfss	status,2,c
 11439  0023B4  D003               	goto	l798
 11440  0023B6                     u11400:
 11441                           
 11442                           ; BSR set to: 0
 11443  0023B6  0E34               	movlw	52
 11444  0023B8  EF66  F00B         	goto	L22
 11445  0023BC                     l798:
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;TabelasUmidade.h: 448: else
 11449                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11450                           
 11451                           ; BSR set to: 0
 11452  0023BC  0E7D               	movlw	125
 11453  0023BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11454  0023C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11455  0023C2  A4D8               	btfss	status,2,c
 11456  0023C4  D003               	goto	l800
 11457  0023C6                     u11410:
 11458                           
 11459                           ; BSR set to: 0
 11460  0023C6  0E32               	movlw	50
 11461  0023C8  EF66  F00B         	goto	L22
 11462  0023CC                     l800:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;TabelasUmidade.h: 450: else
 11466                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11467                           
 11468                           ; BSR set to: 0
 11469  0023CC  0E7E               	movlw	126
 11470  0023CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11471  0023D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11472  0023D2  A4D8               	btfss	status,2,c
 11473  0023D4  D003               	goto	l802
 11474                           
 11475                           ; BSR set to: 0
 11476  0023D6  0E31               	movlw	49
 11477  0023D8  EF66  F00B         	goto	L22
 11478  0023DC                     l802:
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;TabelasUmidade.h: 452: else
 11482                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11483                           
 11484                           ; BSR set to: 0
 11485  0023DC  0E7F               	movlw	127
 11486  0023DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11487  0023E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11488  0023E2  A4D8               	btfss	status,2,c
 11489  0023E4  D003               	goto	l804
 11490  0023E6                     u11430:
 11491                           
 11492                           ; BSR set to: 0
 11493  0023E6  0E2F               	movlw	47
 11494  0023E8  EF66  F00B         	goto	L22
 11495  0023EC                     l804:
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;TabelasUmidade.h: 454: else
 11499                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11500                           
 11501                           ; BSR set to: 0
 11502  0023EC  0E80               	movlw	128
 11503  0023EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11504  0023F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11505  0023F2  A4D8               	btfss	status,2,c
 11506  0023F4  D003               	goto	l806
 11507  0023F6                     u11440:
 11508                           
 11509                           ; BSR set to: 0
 11510  0023F6  0E2D               	movlw	45
 11511  0023F8  EF66  F00B         	goto	L22
 11512  0023FC                     l806:
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;TabelasUmidade.h: 456: else
 11516                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11517                           
 11518                           ; BSR set to: 0
 11519  0023FC  0E81               	movlw	129
 11520  0023FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11521  002400  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11522  002402  A4D8               	btfss	status,2,c
 11523  002404  D003               	goto	l808
 11524  002406                     u11450:
 11525                           
 11526                           ; BSR set to: 0
 11527  002406  0E2B               	movlw	43
 11528  002408  EF66  F00B         	goto	L22
 11529  00240C                     l808:
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;TabelasUmidade.h: 458: else
 11533                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11534                           
 11535                           ; BSR set to: 0
 11536  00240C  0E82               	movlw	130
 11537  00240E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11538  002410  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11539  002412  A4D8               	btfss	status,2,c
 11540  002414  D003               	goto	l810
 11541  002416                     u11460:
 11542                           
 11543                           ; BSR set to: 0
 11544  002416  0E29               	movlw	41
 11545  002418  EF66  F00B         	goto	L22
 11546  00241C                     l810:
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;TabelasUmidade.h: 460: else
 11550                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11551                           
 11552                           ; BSR set to: 0
 11553  00241C  0E83               	movlw	131
 11554  00241E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11555  002420  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11556  002422  A4D8               	btfss	status,2,c
 11557  002424  D003               	goto	l812
 11558  002426                     u11470:
 11559                           
 11560                           ; BSR set to: 0
 11561  002426  0E28               	movlw	40
 11562  002428  EF66  F00B         	goto	L22
 11563  00242C                     l812:
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;TabelasUmidade.h: 462: else
 11567                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11568                           
 11569                           ; BSR set to: 0
 11570  00242C  0E84               	movlw	132
 11571  00242E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11572  002430  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11573  002432  A4D8               	btfss	status,2,c
 11574  002434  D003               	goto	l814
 11575  002436                     u11480:
 11576                           
 11577                           ; BSR set to: 0
 11578  002436  0E27               	movlw	39
 11579  002438  EF66  F00B         	goto	L22
 11580  00243C                     l814:
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;TabelasUmidade.h: 464: else
 11584                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11585                           
 11586                           ; BSR set to: 0
 11587  00243C  0E85               	movlw	133
 11588  00243E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11589  002440  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11590  002442  A4D8               	btfss	status,2,c
 11591  002444  D003               	goto	l816
 11592  002446                     u11490:
 11593                           
 11594                           ; BSR set to: 0
 11595  002446  0E25               	movlw	37
 11596  002448  EF66  F00B         	goto	L22
 11597  00244C                     l816:
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;TabelasUmidade.h: 466: else
 11601                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11602                           
 11603                           ; BSR set to: 0
 11604  00244C  0E86               	movlw	134
 11605  00244E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11606  002450  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11607  002452  A4D8               	btfss	status,2,c
 11608  002454  D003               	goto	l818
 11609  002456                     u11500:
 11610                           
 11611                           ; BSR set to: 0
 11612  002456  0E24               	movlw	36
 11613  002458  EF66  F00B         	goto	L22
 11614  00245C                     l818:
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;TabelasUmidade.h: 468: else
 11618                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11619                           
 11620                           ; BSR set to: 0
 11621  00245C  0E87               	movlw	135
 11622  00245E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11623  002460  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11624  002462  A4D8               	btfss	status,2,c
 11625  002464  D003               	goto	l820
 11626  002466                     u11510:
 11627                           
 11628                           ; BSR set to: 0
 11629  002466  0E23               	movlw	35
 11630  002468  EF66  F00B         	goto	L22
 11631  00246C                     l820:
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;TabelasUmidade.h: 470: else
 11635                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11636                           
 11637                           ; BSR set to: 0
 11638  00246C  0E88               	movlw	136
 11639  00246E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11640  002470  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11641  002472  A4D8               	btfss	status,2,c
 11642  002474  D003               	goto	l822
 11643  002476                     u11520:
 11644                           
 11645                           ; BSR set to: 0
 11646  002476  0E22               	movlw	34
 11647  002478  EF66  F00B         	goto	L22
 11648  00247C                     l822:
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;TabelasUmidade.h: 472: else
 11652                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11653                           
 11654                           ; BSR set to: 0
 11655  00247C  0E89               	movlw	137
 11656  00247E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11657  002480  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11658  002482  A4D8               	btfss	status,2,c
 11659  002484  D003               	goto	l824
 11660  002486                     u11530:
 11661                           
 11662                           ; BSR set to: 0
 11663  002486  0E21               	movlw	33
 11664  002488  EF66  F00B         	goto	L22
 11665  00248C                     l824:
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;TabelasUmidade.h: 474: else
 11669                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11670                           
 11671                           ; BSR set to: 0
 11672  00248C  0E8A               	movlw	138
 11673  00248E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11674  002490  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11675  002492  A4D8               	btfss	status,2,c
 11676  002494  D003               	goto	l826
 11677  002496                     u11540:
 11678                           
 11679                           ; BSR set to: 0
 11680  002496  0E20               	movlw	32
 11681  002498  EF66  F00B         	goto	L22
 11682  00249C                     l826:
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;TabelasUmidade.h: 476: else
 11686                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11687                           
 11688                           ; BSR set to: 0
 11689  00249C  0E8B               	movlw	139
 11690  00249E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11691  0024A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11692  0024A2  A4D8               	btfss	status,2,c
 11693  0024A4  D003               	goto	l828
 11694  0024A6                     u11550:
 11695                           
 11696                           ; BSR set to: 0
 11697  0024A6  0E1F               	movlw	31
 11698  0024A8  EF66  F00B         	goto	L22
 11699  0024AC                     l828:
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;TabelasUmidade.h: 478: else
 11703                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11704                           
 11705                           ; BSR set to: 0
 11706  0024AC  0E8C               	movlw	140
 11707  0024AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11708  0024B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11709  0024B2  A4D8               	btfss	status,2,c
 11710  0024B4  D003               	goto	l830
 11711  0024B6                     u11560:
 11712                           
 11713                           ; BSR set to: 0
 11714  0024B6  0E1E               	movlw	30
 11715  0024B8  EF66  F00B         	goto	L22
 11716  0024BC                     l830:
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;TabelasUmidade.h: 480: else
 11720                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11721                           
 11722                           ; BSR set to: 0
 11723  0024BC  0E8D               	movlw	141
 11724  0024BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11725  0024C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11726  0024C2  A4D8               	btfss	status,2,c
 11727  0024C4  D003               	goto	l832
 11728  0024C6                     u11570:
 11729                           
 11730                           ; BSR set to: 0
 11731  0024C6  0E1D               	movlw	29
 11732  0024C8  EF66  F00B         	goto	L22
 11733  0024CC                     l832:
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;TabelasUmidade.h: 482: else
 11737                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11738                           
 11739                           ; BSR set to: 0
 11740  0024CC  0E8E               	movlw	142
 11741  0024CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11742  0024D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11743  0024D2  A4D8               	btfss	status,2,c
 11744  0024D4  D003               	goto	l834
 11745  0024D6                     u11580:
 11746                           
 11747                           ; BSR set to: 0
 11748  0024D6  0E1C               	movlw	28
 11749  0024D8  EF66  F00B         	goto	L22
 11750  0024DC                     l834:
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;TabelasUmidade.h: 484: else
 11754                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11755                           
 11756                           ; BSR set to: 0
 11757  0024DC  0E8F               	movlw	143
 11758  0024DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11759  0024E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11760  0024E2  A4D8               	btfss	status,2,c
 11761  0024E4  D003               	goto	l836
 11762  0024E6                     u11590:
 11763                           
 11764                           ; BSR set to: 0
 11765  0024E6  0E1B               	movlw	27
 11766  0024E8  EF66  F00B         	goto	L22
 11767  0024EC                     l836:
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;TabelasUmidade.h: 486: else
 11771                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11772                           
 11773                           ; BSR set to: 0
 11774  0024EC  0E90               	movlw	144
 11775  0024EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11776  0024F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11777  0024F2  A4D8               	btfss	status,2,c
 11778  0024F4  D003               	goto	l838
 11779  0024F6                     u11600:
 11780                           
 11781                           ; BSR set to: 0
 11782  0024F6  0E1A               	movlw	26
 11783  0024F8  EF66  F00B         	goto	L22
 11784  0024FC                     l838:
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;TabelasUmidade.h: 488: else
 11788                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11789                           
 11790                           ; BSR set to: 0
 11791  0024FC  0E91               	movlw	145
 11792  0024FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11793  002500  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11794  002502  A4D8               	btfss	status,2,c
 11795  002504  D003               	goto	l840
 11796  002506                     u11610:
 11797                           
 11798                           ; BSR set to: 0
 11799  002506  0E19               	movlw	25
 11800  002508  EF66  F00B         	goto	L22
 11801  00250C                     l840:
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;TabelasUmidade.h: 490: else
 11805                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11806                           
 11807                           ; BSR set to: 0
 11808  00250C  0E92               	movlw	146
 11809  00250E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11810  002510  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11811  002512  A4D8               	btfss	status,2,c
 11812  002514  D003               	goto	l842
 11813  002516                     u11620:
 11814                           
 11815                           ; BSR set to: 0
 11816  002516  0E18               	movlw	24
 11817  002518  EF66  F00B         	goto	L22
 11818  00251C                     l842:
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;TabelasUmidade.h: 492: else
 11822                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11823                           
 11824                           ; BSR set to: 0
 11825  00251C  0E93               	movlw	147
 11826  00251E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11827  002520  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11828  002522  A4D8               	btfss	status,2,c
 11829  002524  D003               	goto	l844
 11830  002526                     u11630:
 11831                           
 11832                           ; BSR set to: 0
 11833  002526  0E17               	movlw	23
 11834  002528  EF66  F00B         	goto	L22
 11835  00252C                     l844:
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;TabelasUmidade.h: 494: else
 11839                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11840                           
 11841                           ; BSR set to: 0
 11842  00252C  0E94               	movlw	148
 11843  00252E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11844  002530  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11845  002532  A4D8               	btfss	status,2,c
 11846  002534  D003               	goto	l846
 11847  002536                     u11640:
 11848                           
 11849                           ; BSR set to: 0
 11850  002536  0E16               	movlw	22
 11851  002538  EF66  F00B         	goto	L22
 11852  00253C                     l846:
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;TabelasUmidade.h: 496: else
 11856                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 11857                           
 11858                           ; BSR set to: 0
 11859  00253C  0E95               	movlw	149
 11860  00253E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11861  002540  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11862  002542  A4D8               	btfss	status,2,c
 11863  002544  D003               	goto	l848
 11864  002546                     u11650:
 11865                           
 11866                           ; BSR set to: 0
 11867  002546  0E15               	movlw	21
 11868  002548  EF66  F00B         	goto	L22
 11869  00254C                     l848:
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;TabelasUmidade.h: 498: else
 11873                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 11874                           
 11875                           ; BSR set to: 0
 11876  00254C  0E96               	movlw	150
 11877  00254E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11878  002550  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11879  002552  A4D8               	btfss	status,2,c
 11880  002554  D003               	goto	l850
 11881  002556                     u11660:
 11882                           
 11883                           ; BSR set to: 0
 11884  002556  0E14               	movlw	20
 11885  002558  EF66  F00B         	goto	L22
 11886  00255C                     l850:
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;TabelasUmidade.h: 500: else
 11890                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 11891                           
 11892                           ; BSR set to: 0
 11893  00255C  0E97               	movlw	151
 11894  00255E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11895  002560  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11896  002562  A4D8               	btfss	status,2,c
 11897  002564  D003               	goto	l852
 11898  002566                     u11670:
 11899                           
 11900                           ; BSR set to: 0
 11901  002566  0E13               	movlw	19
 11902  002568  EF66  F00B         	goto	L22
 11903  00256C                     l852:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;TabelasUmidade.h: 502: else
 11907                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 11908                           
 11909                           ; BSR set to: 0
 11910  00256C  0E98               	movlw	152
 11911  00256E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11912  002570  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11913  002572  A4D8               	btfss	status,2,c
 11914  002574  D003               	goto	l854
 11915  002576                     u11680:
 11916                           
 11917                           ; BSR set to: 0
 11918  002576  0E12               	movlw	18
 11919  002578  EF66  F00B         	goto	L22
 11920  00257C                     l854:
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;TabelasUmidade.h: 504: else
 11924                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11925                           
 11926                           ; BSR set to: 0
 11927  00257C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11928  00257E  D011               	goto	l856
 11929  002580  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11930  002582  E104               	bnz	u11690
 11931  002584  0E99               	movlw	153
 11932  002586  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11933  002588  A0D8               	btfss	status,0,c
 11934  00258A  D00B               	goto	l856
 11935  00258C                     u11690:
 11936                           
 11937                           ; BSR set to: 0
 11938  00258C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11939  00258E  D006               	goto	u11700
 11940  002590  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11941  002592  E107               	bnz	l7860
 11942  002594  0E9D               	movlw	157
 11943  002596  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11944  002598  B0D8               	btfsc	status,0,c
 11945  00259A  D003               	goto	l856
 11946  00259C                     u11700:
 11947                           
 11948                           ; BSR set to: 0
 11949  00259C  0E11               	movlw	17
 11950  00259E  EF66  F00B         	goto	L22
 11951  0025A2                     l856:
 11952  0025A2                     l7860:
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;TabelasUmidade.h: 506: else
 11956                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 11957  0025A2  0E9D               	movlw	157
 11958  0025A4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11959  0025A6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11960  0025A8  A4D8               	btfss	status,2,c
 11961  0025AA  D003               	goto	l858
 11962  0025AC                     u11710:
 11963                           
 11964                           ; BSR set to: 0
 11965  0025AC  0E10               	movlw	16
 11966  0025AE  EF66  F00B         	goto	L22
 11967  0025B2                     l858:
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;TabelasUmidade.h: 508: else
 11971                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 11972                           
 11973                           ; BSR set to: 0
 11974  0025B2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11975  0025B4  D014               	goto	l638
 11976  0025B6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11977  0025B8  E104               	bnz	u11720
 11978  0025BA  0E9E               	movlw	158
 11979  0025BC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11980  0025BE  A0D8               	btfss	status,0,c
 11981  0025C0  D00E               	goto	l638
 11982  0025C2                     u11720:
 11983                           
 11984                           ; BSR set to: 0
 11985  0025C2  0E0F               	movlw	15
 11986  0025C4  EF66  F00B         	goto	L22
 11987  0025C8                     l525:
 11988                           
 11989                           ; BSR set to: 0
 11990                           
 11991                           ; BSR set to: 0
 11992  0025C8  51F7               	movf	_clima& (0+255),w,b
 11993                           
 11994                           ; Switch size 1, requested type "space"
 11995                           ; Number of cases is 3, Range of values is 1 to 3
 11996                           ; switch strategies available:
 11997                           ; Name         Instructions Cycles
 11998                           ; simple_byte           10     6 (average)
 11999                           ;	Chosen strategy is simple_byte
 12000  0025CA  0A01               	xorlw	1	; case 1
 12001  0025CC  B4D8               	btfsc	status,2,c
 12002  0025CE  EF31  F00E         	goto	l526
 12003  0025D2  0A03               	xorlw	3	; case 2
 12004  0025D4  B4D8               	btfsc	status,2,c
 12005  0025D6  D495               	goto	l639
 12006  0025D8  0A01               	xorlw	1	; case 3
 12007  0025DA  B4D8               	btfsc	status,2,c
 12008  0025DC  D618               	goto	l753
 12009  0025DE                     l638:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;TabelasUmidade.h: 512: }
 12013                           ;TabelasUmidade.h: 513: return _umd;
 12014                           
 12015                           ; BSR set to: 0
 12016                           
 12017                           ; BSR set to: 0
 12018  0025DE  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 12019  0025E2  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 12020                           
 12021                           ; BSR set to: 0
 12022  0025E4  0012               	return		;funcret
 12023  0025E6                     __end_of_tabelaUmidade:
 12024                           	opt stack 0
 12025                           tblptru	equ	0xFF8
 12026                           tblptrh	equ	0xFF7
 12027                           tblptrl	equ	0xFF6
 12028                           tablat	equ	0xFF5
 12029                           prodh	equ	0xFF4
 12030                           prodl	equ	0xFF3
 12031                           intcon	equ	0xFF2
 12032                           intcon2	equ	0xFF1
 12033                           intcon3	equ	0xFF0
 12034                           postinc0	equ	0xFEE
 12035                           wreg	equ	0xFE8
 12036                           postdec1	equ	0xFE5
 12037                           fsr1l	equ	0xFE1
 12038                           indf2	equ	0xFDF
 12039                           fsr2h	equ	0xFDA
 12040                           fsr2l	equ	0xFD9
 12041                           status	equ	0xFD8
 12042                           
 12043 ;; *************** function _setRangeValor *****************
 12044 ;; Defined at:
 12045 ;;		line 76 in file "src/FuncoesControlador.h"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;  _acao           1    wreg     unsigned char 
 12048 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 12049 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 12050 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 12051 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 12052 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 12053 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 12054 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 12055 ;;		 -> clima(1), 
 12056 ;;  _min            1    7[BANK0 ] unsigned char 
 12057 ;;  _max            1    8[BANK0 ] unsigned char 
 12058 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  _acao           1   13[BANK0 ] unsigned char 
 12061 ;;  _aux            2   14[BANK0 ] int 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      void 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12071 ;;      Params:         0       5       0       0       0       0       0       0       0
 12072 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12073 ;;      Temps:          0       3       0       0       0       0       0       0       0
 12074 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12075 ;;Total ram usage:       11 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    9
 12078 ;; This function calls:
 12079 ;;		_writeEEPROM_ext
 12080 ;; This function is called by:
 12081 ;;		_main
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           	psect	text4
 12086  005228                     __ptext4:
 12087                           	opt stack 0
 12088  005228                     _setRangeValor:
 12089                           	opt stack 21
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;incstack = 0
 12093                           ;setRangeValor@_acao stored from wreg
 12094  005228  0100               	movlb	0	; () banked
 12095  00522A  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12096                           
 12097                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12098  00522C  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12099  005230  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12100  005234  50DF               	movf	indf2,w,c
 12101  005236  0100               	movlb	0	; () banked
 12102  005238  6F6A               	movwf	??_setRangeValor& (0+255),b
 12103  00523A  516A               	movf	??_setRangeValor& (0+255),w,b
 12104  00523C  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12105  00523E  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12106                           
 12107                           ;FuncoesControlador.h: 78: switch (_acao) {
 12108  005240  D02C               	goto	l942
 12109  005242                     
 12110                           ; BSR set to: 0
 12111                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12112                           
 12113                           ; BSR set to: 0
 12114  005242  5168               	movf	setRangeValor@_max& (0+255),w,b
 12115  005244  6F6A               	movwf	??_setRangeValor& (0+255),b
 12116  005246  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12117  005248  516A               	movf	??_setRangeValor& (0+255),w,b
 12118  00524A  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12119  00524C  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12120  00524E  0A80               	xorlw	128
 12121  005250  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12122  005252  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12123  005254  0A80               	xorlw	128
 12124  005256  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12125  005258  B0D8               	btfsc	status,0,c
 12126  00525A  D003               	goto	l945
 12127                           
 12128                           ; BSR set to: 0
 12129  00525C  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12130  00525E  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12131  005260  D013               	goto	L25
 12132  005262                     l945:
 12133                           
 12134                           ; BSR set to: 0
 12135  005262  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12136  005266  D017               	goto	L26
 12137  005268                     
 12138                           ; BSR set to: 0
 12139                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12140                           
 12141                           ; BSR set to: 0
 12142  005268  5167               	movf	setRangeValor@_min& (0+255),w,b
 12143  00526A  6F6A               	movwf	??_setRangeValor& (0+255),b
 12144  00526C  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12145  00526E  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12146  005270  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12147  005272  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12148  005274  0A80               	xorlw	128
 12149  005276  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12150  005278  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12151  00527A  0A80               	xorlw	128
 12152  00527C  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12153  00527E  B0D8               	btfsc	status,0,c
 12154  005280  D008               	goto	l951
 12155                           
 12156                           ; BSR set to: 0
 12157  005282  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12158  005284  A0D8               	btfss	status,0,c
 12159  005286  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12160  005288                     L25:
 12161  005288  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12162  00528C  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12163  005290  D00B               	goto	l948
 12164  005292                     l951:
 12165                           
 12166                           ; BSR set to: 0
 12167  005292  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12168  005296                     L26:
 12169  005296  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;FuncoesControlador.h: 85: }
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;FuncoesControlador.h: 84: break;
 12176  005298  D007               	goto	l948
 12177  00529A                     l942:
 12178                           
 12179                           ; BSR set to: 0
 12180                           
 12181                           ; BSR set to: 0
 12182  00529A  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12183                           
 12184                           ; Switch size 1, requested type "space"
 12185                           ; Number of cases is 2, Range of values is 43 to 45
 12186                           ; switch strategies available:
 12187                           ; Name         Instructions Cycles
 12188                           ; simple_byte            7     4 (average)
 12189                           ;	Chosen strategy is simple_byte
 12190  00529C  0A2B               	xorlw	43	; case 43
 12191  00529E  B4D8               	btfsc	status,2,c
 12192  0052A0  D7D0               	goto	l943
 12193  0052A2  0A06               	xorlw	6	; case 45
 12194  0052A4  B4D8               	btfsc	status,2,c
 12195  0052A6  D7E0               	goto	l949
 12196  0052A8                     l948:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12200                           
 12201                           ; BSR set to: 0
 12202  0052A8  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12203  0052AA  B4D8               	btfsc	status,2,c
 12204  0052AC  D005               	goto	l954
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12208  0052AE  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12209  0052B2  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12210  0052B4  EC4C  F02D         	call	_writeEEPROM_ext
 12211  0052B8                     l954:
 12212                           
 12213                           ;FuncoesControlador.h: 88: }
 12214                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12215  0052B8  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12216  0052BC  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12217  0052C0  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12218  0052C4  0012               	return		;funcret
 12219  0052C6                     __end_of_setRangeValor:
 12220                           	opt stack 0
 12221                           tblptru	equ	0xFF8
 12222                           tblptrh	equ	0xFF7
 12223                           tblptrl	equ	0xFF6
 12224                           tablat	equ	0xFF5
 12225                           prodh	equ	0xFF4
 12226                           prodl	equ	0xFF3
 12227                           intcon	equ	0xFF2
 12228                           intcon2	equ	0xFF1
 12229                           intcon3	equ	0xFF0
 12230                           postinc0	equ	0xFEE
 12231                           wreg	equ	0xFE8
 12232                           postdec1	equ	0xFE5
 12233                           fsr1l	equ	0xFE1
 12234                           indf2	equ	0xFDF
 12235                           fsr2h	equ	0xFDA
 12236                           fsr2l	equ	0xFD9
 12237                           status	equ	0xFD8
 12238                           
 12239 ;; *************** function _readEEPROM16_ext *****************
 12240 ;; Defined at:
 12241 ;;		line 46 in file "src/Eeprom_ext.h"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  adress          1    wreg     unsigned char 
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;  adress          1   12[BANK0 ] unsigned char 
 12246 ;;  data            2   10[BANK0 ] unsigned int 
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  2    7[BANK0 ] unsigned int 
 12249 ;; Registers used:
 12250 ;;		wreg, status,2, status,0, cstack
 12251 ;; Tracked objects:
 12252 ;;		On entry : 0/0
 12253 ;;		On exit  : 0/0
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12256 ;;      Params:         0       2       0       0       0       0       0       0       0
 12257 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12258 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12259 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12260 ;;Total ram usage:        6 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    9
 12263 ;; This function calls:
 12264 ;;		_readEEPROM_ext
 12265 ;; This function is called by:
 12266 ;;		_main
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           	psect	text5
 12271  005B88                     __ptext5:
 12272                           	opt stack 0
 12273  005B88                     _readEEPROM16_ext:
 12274                           	opt stack 21
 12275                           
 12276                           ;incstack = 0
 12277                           ;readEEPROM16_ext@adress stored from wreg
 12278  005B88  0100               	movlb	0	; () banked
 12279  005B8A  6F6C               	movwf	readEEPROM16_ext@adress& (0+255),b
 12280                           
 12281                           ;Eeprom_ext.h: 47: unsigned int data;
 12282                           ;Eeprom_ext.h: 48: data = readEEPROM_ext(adress + 1);
 12283  005B8C  0100               	movlb	0	; () banked
 12284  005B8E  296C               	incf	readEEPROM16_ext@adress& (0+255),w,b
 12285  005B90  EC92  F02C         	call	_readEEPROM_ext
 12286  005B94  0100               	movlb	0	; () banked
 12287  005B96  6F69               	movwf	??_readEEPROM16_ext& (0+255),b
 12288  005B98  5169               	movf	??_readEEPROM16_ext& (0+255),w,b
 12289  005B9A  6F6A               	movwf	readEEPROM16_ext@data& (0+255),b
 12290  005B9C  6B6B               	clrf	(readEEPROM16_ext@data+1)& (0+255),b
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;Eeprom_ext.h: 49: data <<= 8;
 12294  005B9E  516A               	movf	readEEPROM16_ext@data& (0+255),w,b
 12295  005BA0  6F6B               	movwf	(readEEPROM16_ext@data+1)& (0+255),b
 12296  005BA2  6B6A               	clrf	readEEPROM16_ext@data& (0+255),b
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;Eeprom_ext.h: 50: data |= readEEPROM_ext(adress);
 12300  005BA4  516C               	movf	readEEPROM16_ext@adress& (0+255),w,b
 12301  005BA6  EC92  F02C         	call	_readEEPROM_ext
 12302  005BAA  0100               	movlb	0	; () banked
 12303  005BAC  6F69               	movwf	??_readEEPROM16_ext& (0+255),b
 12304  005BAE  5169               	movf	??_readEEPROM16_ext& (0+255),w,b
 12305  005BB0  136A               	iorwf	readEEPROM16_ext@data& (0+255),f,b
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;Eeprom_ext.h: 51: return data;
 12309  005BB2  C06A  F067         	movff	readEEPROM16_ext@data,?_readEEPROM16_ext
 12310  005BB6  C06B  F068         	movff	readEEPROM16_ext@data+1,?_readEEPROM16_ext+1
 12311  005BBA  0012               	return	
 12312  005BBC                     __end_of_readEEPROM16_ext:
 12313                           	opt stack 0
 12314                           tblptru	equ	0xFF8
 12315                           tblptrh	equ	0xFF7
 12316                           tblptrl	equ	0xFF6
 12317                           tablat	equ	0xFF5
 12318                           prodh	equ	0xFF4
 12319                           prodl	equ	0xFF3
 12320                           intcon	equ	0xFF2
 12321                           intcon2	equ	0xFF1
 12322                           intcon3	equ	0xFF0
 12323                           postinc0	equ	0xFEE
 12324                           wreg	equ	0xFE8
 12325                           postdec1	equ	0xFE5
 12326                           fsr1l	equ	0xFE1
 12327                           indf2	equ	0xFDF
 12328                           fsr2h	equ	0xFDA
 12329                           fsr2l	equ	0xFD9
 12330                           status	equ	0xFD8
 12331                           
 12332 ;; *************** function _readEEPROM_ext *****************
 12333 ;; Defined at:
 12334 ;;		line 26 in file "src/Eeprom_ext.h"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;  adress          1    wreg     unsigned char 
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;  adress          1    5[BANK0 ] unsigned char 
 12339 ;;  data            1    6[BANK0 ] unsigned char 
 12340 ;; Return value:  Size  Location     Type
 12341 ;;                  1    wreg      unsigned char 
 12342 ;; Registers used:
 12343 ;;		wreg, status,2, status,0, cstack
 12344 ;; Tracked objects:
 12345 ;;		On entry : 0/0
 12346 ;;		On exit  : 0/0
 12347 ;;		Unchanged: 0/0
 12348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12349 ;;      Params:         0       0       0       0       0       0       0       0       0
 12350 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12351 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12352 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12353 ;;Total ram usage:        2 bytes
 12354 ;; Hardware stack levels used:    1
 12355 ;; Hardware stack levels required when called:    8
 12356 ;; This function calls:
 12357 ;;		_I2C_Read
 12358 ;;		_I2C_Restart
 12359 ;;		_I2C_Start
 12360 ;;		_I2C_Stop
 12361 ;;		_I2C_Write
 12362 ;; This function is called by:
 12363 ;;		_readEEPROM16_ext
 12364 ;;		_main
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text6
 12369  005924                     __ptext6:
 12370                           	opt stack 0
 12371  005924                     _readEEPROM_ext:
 12372                           	opt stack 22
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;incstack = 0
 12376                           ;readEEPROM_ext@adress stored from wreg
 12377  005924  0100               	movlb	0	; () banked
 12378  005926  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12379                           
 12380                           ;Eeprom_ext.h: 27: I2C_Start();
 12381  005928  EC96  F02F         	call	_I2C_Start	;wreg free
 12382                           
 12383                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12384  00592C  0E00               	movlw	0
 12385  00592E  0100               	movlb	0	; () banked
 12386  005930  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12387  005932  0EA0               	movlw	160
 12388  005934  6F61               	movwf	I2C_Write@d& (0+255),b
 12389  005936  EC84  F02F         	call	_I2C_Write	;wreg free
 12390                           
 12391                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12392  00593A  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12393  00593E  0100               	movlb	0	; () banked
 12394  005940  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12395  005942  EC84  F02F         	call	_I2C_Write	;wreg free
 12396                           
 12397                           ;Eeprom_ext.h: 31: I2C_Restart();
 12398  005946  EC8E  F02F         	call	_I2C_Restart	;wreg free
 12399                           
 12400                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12401  00594A  0E00               	movlw	0
 12402  00594C  0100               	movlb	0	; () banked
 12403  00594E  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12404  005950  0EA1               	movlw	161
 12405  005952  6F61               	movwf	I2C_Write@d& (0+255),b
 12406  005954  EC84  F02F         	call	_I2C_Write	;wreg free
 12407                           
 12408                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12409  005958  0E00               	movlw	0
 12410  00595A  0100               	movlb	0	; () banked
 12411  00595C  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12412  00595E  0E00               	movlw	0
 12413  005960  6F61               	movwf	I2C_Read@a& (0+255),b
 12414  005962  ECDE  F02D         	call	_I2C_Read	;wreg free
 12415  005966  0100               	movlb	0	; () banked
 12416  005968  5161               	movf	?_I2C_Read& (0+255),w,b
 12417  00596A  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12418                           
 12419                           ;Eeprom_ext.h: 34: I2C_Stop();
 12420  00596C  EC92  F02F         	call	_I2C_Stop	;wreg free
 12421                           
 12422                           ;Eeprom_ext.h: 35: return data;
 12423  005970  0100               	movlb	0	; () banked
 12424  005972  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12425  005974  0012               	return	
 12426  005976                     __end_of_readEEPROM_ext:
 12427                           	opt stack 0
 12428                           tblptru	equ	0xFF8
 12429                           tblptrh	equ	0xFF7
 12430                           tblptrl	equ	0xFF6
 12431                           tablat	equ	0xFF5
 12432                           prodh	equ	0xFF4
 12433                           prodl	equ	0xFF3
 12434                           intcon	equ	0xFF2
 12435                           intcon2	equ	0xFF1
 12436                           intcon3	equ	0xFF0
 12437                           postinc0	equ	0xFEE
 12438                           wreg	equ	0xFE8
 12439                           postdec1	equ	0xFE5
 12440                           fsr1l	equ	0xFE1
 12441                           indf2	equ	0xFDF
 12442                           fsr2h	equ	0xFDA
 12443                           fsr2l	equ	0xFD9
 12444                           status	equ	0xFD8
 12445                           
 12446 ;; *************** function _I2C_Restart *****************
 12447 ;; Defined at:
 12448 ;;		line 30 in file "src/I2C.c"
 12449 ;; Parameters:    Size  Location     Type
 12450 ;;		None
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;		None
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  1    wreg      void 
 12455 ;; Registers used:
 12456 ;;		wreg, status,2, status,0, cstack
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12462 ;;      Params:         0       0       0       0       0       0       0       0       0
 12463 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12465 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12466 ;;Total ram usage:        0 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; Hardware stack levels required when called:    7
 12469 ;; This function calls:
 12470 ;;		_I2C_Wait
 12471 ;; This function is called by:
 12472 ;;		_readEEPROM_ext
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text7
 12477  005F1C                     __ptext7:
 12478                           	opt stack 0
 12479  005F1C                     _I2C_Restart:
 12480                           	opt stack 22
 12481                           
 12482                           ;I2C.c: 31: I2C_Wait();
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;incstack = 0
 12486  005F1C  EC5D  F02F         	call	_I2C_Wait	;wreg free
 12487                           
 12488                           ;I2C.c: 32: RSEN = 1;
 12489  005F20  82C5               	bsf	4037,1,c	;volatile
 12490  005F22  0012               	return		;funcret
 12491  005F24                     __end_of_I2C_Restart:
 12492                           	opt stack 0
 12493                           tblptru	equ	0xFF8
 12494                           tblptrh	equ	0xFF7
 12495                           tblptrl	equ	0xFF6
 12496                           tablat	equ	0xFF5
 12497                           prodh	equ	0xFF4
 12498                           prodl	equ	0xFF3
 12499                           intcon	equ	0xFF2
 12500                           intcon2	equ	0xFF1
 12501                           intcon3	equ	0xFF0
 12502                           postinc0	equ	0xFEE
 12503                           wreg	equ	0xFE8
 12504                           postdec1	equ	0xFE5
 12505                           fsr1l	equ	0xFE1
 12506                           indf2	equ	0xFDF
 12507                           fsr2h	equ	0xFDA
 12508                           fsr2l	equ	0xFD9
 12509                           status	equ	0xFD8
 12510                           
 12511 ;; *************** function _I2C_Read *****************
 12512 ;; Defined at:
 12513 ;;		line 46 in file "src/I2C.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;  a               2    1[BANK0 ] unsigned short 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  temp            2    3[BANK0 ] unsigned short 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  2    1[BANK0 ] unsigned short 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0, cstack
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12527 ;;      Params:         0       2       0       0       0       0       0       0       0
 12528 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12530 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12531 ;;Total ram usage:        4 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:    7
 12534 ;; This function calls:
 12535 ;;		_I2C_Wait
 12536 ;; This function is called by:
 12537 ;;		_readEEPROM_ext
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           	psect	text8
 12542  005BBC                     __ptext8:
 12543                           	opt stack 0
 12544  005BBC                     _I2C_Read:
 12545                           	opt stack 22
 12546                           
 12547                           ;I2C.c: 47: unsigned short temp;
 12548                           ;I2C.c: 48: I2C_Wait();
 12549                           
 12550                           ;incstack = 0
 12551  005BBC  EC5D  F02F         	call	_I2C_Wait	;wreg free
 12552                           
 12553                           ;I2C.c: 49: RCEN = 1;
 12554  005BC0  86C5               	bsf	4037,3,c	;volatile
 12555                           
 12556                           ;I2C.c: 50: I2C_Wait();
 12557  005BC2  EC5D  F02F         	call	_I2C_Wait	;wreg free
 12558                           
 12559                           ;I2C.c: 51: temp = SSPBUF;
 12560  005BC6  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12561  005BCA  0100               	movlb	0	; () banked
 12562  005BCC  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12563                           
 12564                           ;I2C.c: 52: I2C_Wait();
 12565  005BCE  EC5D  F02F         	call	_I2C_Wait	;wreg free
 12566                           
 12567                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12568  005BD2  0100               	movlb	0	; () banked
 12569  005BD4  5161               	movf	I2C_Read@a& (0+255),w,b
 12570  005BD6  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12571  005BD8  A4D8               	btfss	status,2,c
 12572  005BDA  D002               	goto	u8470
 12573  005BDC  8AC5               	bsf	4037,5,c	;volatile
 12574  005BDE  D001               	goto	u8485
 12575  005BE0                     u8470:
 12576  005BE0  9AC5               	bcf	4037,5,c	;volatile
 12577  005BE2                     u8485:
 12578                           
 12579                           ;I2C.c: 54: ACKEN = 1;
 12580  005BE2  88C5               	bsf	4037,4,c	;volatile
 12581                           
 12582                           ;I2C.c: 55: return temp;
 12583  005BE4  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12584  005BE8  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12585  005BEC  0012               	return	
 12586  005BEE                     __end_of_I2C_Read:
 12587                           	opt stack 0
 12588                           tblptru	equ	0xFF8
 12589                           tblptrh	equ	0xFF7
 12590                           tblptrl	equ	0xFF6
 12591                           tablat	equ	0xFF5
 12592                           prodh	equ	0xFF4
 12593                           prodl	equ	0xFF3
 12594                           intcon	equ	0xFF2
 12595                           intcon2	equ	0xFF1
 12596                           intcon3	equ	0xFF0
 12597                           postinc0	equ	0xFEE
 12598                           wreg	equ	0xFE8
 12599                           postdec1	equ	0xFE5
 12600                           fsr1l	equ	0xFE1
 12601                           indf2	equ	0xFDF
 12602                           fsr2h	equ	0xFDA
 12603                           fsr2l	equ	0xFD9
 12604                           status	equ	0xFD8
 12605                           
 12606 ;; *************** function _getSensors *****************
 12607 ;; Defined at:
 12608 ;;		line 22 in file "src/ADC.h"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  auxx            3   77[BANK0 ] float 
 12613 ;;  aux             3   84[BANK0 ] float 
 12614 ;;  i               1   83[BANK0 ] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  2  1213[None  ] int 
 12617 ;; Registers used:
 12618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0
 12625 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12627 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12628 ;;Total ram usage:       18 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    8
 12631 ;; This function calls:
 12632 ;;		___ftadd
 12633 ;;		___ftdiv
 12634 ;;		___ftge
 12635 ;;		___ftmul
 12636 ;;		___fttol
 12637 ;;		___lwtoft
 12638 ;;		_readADC
 12639 ;; This function is called by:
 12640 ;;		_main
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text9
 12645  0030E4                     __ptext9:
 12646                           	opt stack 0
 12647  0030E4                     _getSensors:
 12648                           	opt stack 22
 12649                           
 12650                           ;ADC.h: 23: unsigned char i = 0;
 12651                           
 12652                           ;incstack = 0
 12653  0030E4  0E00               	movlw	0
 12654  0030E6  0100               	movlb	0	; () banked
 12655  0030E8  6FB3               	movwf	getSensors@i& (0+255),b
 12656                           
 12657                           ;ADC.h: 24: float aux = 0;
 12658  0030EA  0E00               	movlw	0
 12659  0030EC  6FB4               	movwf	getSensors@aux& (0+255),b
 12660  0030EE  0E00               	movlw	0
 12661  0030F0  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12662  0030F2  0E00               	movlw	0
 12663  0030F4  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12664                           
 12665                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12666  0030F6  5036               	movf	_t_leitura_adc,w,c
 12667  0030F8  A4D8               	btfss	status,2,c
 12668  0030FA  D1F3               	goto	l1214
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;ADC.h: 27: t_leitura_adc = 10;
 12672  0030FC  0E0A               	movlw	10
 12673  0030FE  6E36               	movwf	_t_leitura_adc,c
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12677  003100  0E0A               	movlw	10
 12678  003102  6035               	cpfslt	_media_adc,c
 12679  003104  D005               	goto	l1216
 12680                           
 12681                           ; BSR set to: 0
 12682  003106  2A35               	incf	_media_adc,f,c
 12683  003108  C035  F0AB         	movff	_media_adc,_getSensors$1518
 12684  00310C  6BAC               	clrf	(_getSensors$1518+1)& (0+255),b
 12685  00310E  D004               	goto	l1218
 12686  003110                     l1216:
 12687                           
 12688                           ; BSR set to: 0
 12689                           
 12690                           ; BSR set to: 0
 12691  003110  0E00               	movlw	0
 12692  003112  6FAC               	movwf	(_getSensors$1518+1)& (0+255),b
 12693  003114  0E00               	movlw	0
 12694  003116  6FAB               	movwf	_getSensors$1518& (0+255),b
 12695  003118                     l1218:
 12696                           
 12697                           ; BSR set to: 0
 12698                           
 12699                           ; BSR set to: 0
 12700  003118  C0AB  F035         	movff	_getSensors$1518,_media_adc
 12701                           
 12702                           ;ADC.h: 31: aux = 0;
 12703  00311C  0E00               	movlw	0
 12704  00311E  6FB4               	movwf	getSensors@aux& (0+255),b
 12705  003120  0E00               	movlw	0
 12706  003122  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12707  003124  0E00               	movlw	0
 12708  003126  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12709                           
 12710                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12711  003128  0E00               	movlw	0
 12712  00312A  6FB3               	movwf	getSensors@i& (0+255),b
 12713  00312C                     l9206:
 12714                           
 12715                           ; BSR set to: 0
 12716  00312C  0E0B               	movlw	11
 12717  00312E  65B3               	cpfsgt	getSensors@i& (0+255),b
 12718  003130  D001               	goto	l1219
 12719  003132  D042               	goto	u14220
 12720  003134                     l1219:
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12724                           
 12725                           ; BSR set to: 0
 12726  003134  0E00               	movlw	0
 12727  003136  6F7E               	movwf	___ftadd@f2& (0+255),b
 12728  003138  0E00               	movlw	0
 12729  00313A  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12730  00313C  0E42               	movlw	66
 12731  00313E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12732  003140  0E00               	movlw	0
 12733  003142  6F6F               	movwf	___ftmul@f2& (0+255),b
 12734  003144  0E61               	movlw	97
 12735  003146  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12736  003148  0E3F               	movlw	63
 12737  00314A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12738  00314C  0E00               	movlw	0
 12739  00314E  ECB1  F029         	call	_readADC
 12740  003152  C060  F069         	movff	?_readADC,___lwtoft@c
 12741  003156  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12742  00315A  ECD7  F02E         	call	___lwtoft	;wreg free
 12743  00315E  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12744  003162  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12745  003166  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12746  00316A  EC90  F025         	call	___ftmul	;wreg free
 12747  00316E  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12748  003172  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12749  003176  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12750  00317A  EC9F  F022         	call	___ftadd	;wreg free
 12751  00317E  C07B  F0B0         	movff	?___ftadd,_getSensors$2523
 12752  003182  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2523+1
 12753  003186  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2523+2
 12754                           
 12755                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12756  00318A  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12757  00318E  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12758  003192  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12759  003196  C0B0  F07E         	movff	_getSensors$2523,___ftadd@f2
 12760  00319A  C0B1  F07F         	movff	_getSensors$2523+1,___ftadd@f2+1
 12761  00319E  C0B2  F080         	movff	_getSensors$2523+2,___ftadd@f2+2
 12762  0031A2  EC9F  F022         	call	___ftadd	;wreg free
 12763  0031A6  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12764  0031AA  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12765  0031AE  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12766  0031B2  0100               	movlb	0	; () banked
 12767  0031B4  2BB3               	incf	getSensors@i& (0+255),f,b
 12768  0031B6  D7BA               	goto	l9206
 12769  0031B8                     u14220:
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;ADC.h: 34: }
 12773                           ;ADC.h: 35: aux = (aux / 12);
 12774                           
 12775                           ; BSR set to: 0
 12776  0031B8  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12777  0031BC  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12778  0031C0  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12779  0031C4  0E00               	movlw	0
 12780  0031C6  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12781  0031C8  0E40               	movlw	64
 12782  0031CA  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12783  0031CC  0E41               	movlw	65
 12784  0031CE  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12785  0031D0  EC0B  F026         	call	___ftdiv	;wreg free
 12786  0031D4  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12787  0031D8  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12788  0031DC  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12789                           
 12790                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12791  0031E0  0E00               	movlw	0
 12792  0031E2  0100               	movlb	0	; () banked
 12793  0031E4  6F60               	movwf	___ftge@ff1& (0+255),b
 12794  0031E6  0E14               	movlw	20
 12795  0031E8  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12796  0031EA  0E42               	movlw	66
 12797  0031EC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12798  0031EE  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12799  0031F2  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12800  0031F6  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12801  0031FA  EC4B  F02A         	call	___ftge	;wreg free
 12802  0031FE  0100               	movlb	0	; () banked
 12803  003200  B0D8               	btfsc	status,0,c
 12804  003202  D015               	goto	l1222
 12805                           
 12806                           ; BSR set to: 0
 12807  003204  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12808  003208  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12809  00320C  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12810  003210  0E00               	movlw	0
 12811  003212  6F7E               	movwf	___ftadd@f2& (0+255),b
 12812  003214  0E80               	movlw	128
 12813  003216  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12814  003218  0E3F               	movlw	63
 12815  00321A  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12816  00321C  EC9F  F022         	call	___ftadd	;wreg free
 12817  003220  C07B  F0A5         	movff	?___ftadd,_getSensors$1520
 12818  003224  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1520+1
 12819  003228  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1520+2
 12820  00322C  D007               	goto	l1224
 12821  00322E                     l1222:
 12822  00322E  0E00               	movlw	0
 12823  003230  0100               	movlb	0	; () banked
 12824  003232  6FA5               	movwf	_getSensors$1520& (0+255),b
 12825  003234  0E00               	movlw	0
 12826  003236  6FA6               	movwf	(_getSensors$1520+1)& (0+255),b
 12827  003238  0E00               	movlw	0
 12828  00323A  6FA7               	movwf	(_getSensors$1520+2)& (0+255),b
 12829  00323C                     l1224:
 12830                           
 12831                           ; BSR set to: 0
 12832  00323C  5035               	movf	_media_adc,w,c
 12833  00323E  0D03               	mullw	3
 12834  003240  0E21               	movlw	low __temp
 12835  003242  24F3               	addwf	prodl,w,c
 12836  003244  6ED9               	movwf	fsr2l,c
 12837  003246  0E01               	movlw	high __temp
 12838  003248  20F4               	addwfc	prodh,w,c
 12839  00324A  6EDA               	movwf	fsr2h,c
 12840  00324C  C0A5  FFDE         	movff	_getSensors$1520,postinc2
 12841  003250  C0A6  FFDE         	movff	_getSensors$1520+1,postinc2
 12842  003254  C0A7  FFDE         	movff	_getSensors$1520+2,postinc2
 12843                           
 12844                           ;ADC.h: 40: aux = 0;
 12845  003258  0E00               	movlw	0
 12846  00325A  0100               	movlb	0	; () banked
 12847  00325C  6FB4               	movwf	getSensors@aux& (0+255),b
 12848  00325E  0E00               	movlw	0
 12849  003260  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12850  003262  0E00               	movlw	0
 12851  003264  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12855  003266  05FB               	decf	_tipo_sensor_umidade& (0+255),w,b
 12856  003268  A4D8               	btfss	status,2,c
 12857  00326A  D07E               	goto	l1225
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;ADC.h: 42: float auxx = 0;
 12861  00326C  0E00               	movlw	0
 12862  00326E  6FAD               	movwf	getSensors@auxx& (0+255),b
 12863  003270  0E00               	movlw	0
 12864  003272  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12865  003274  0E00               	movlw	0
 12866  003276  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12867                           
 12868                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12869  003278  0E00               	movlw	0
 12870  00327A  6FB3               	movwf	getSensors@i& (0+255),b
 12871  00327C                     l9230:
 12872                           
 12873                           ; BSR set to: 0
 12874  00327C  0E0B               	movlw	11
 12875  00327E  65B3               	cpfsgt	getSensors@i& (0+255),b
 12876  003280  D001               	goto	l1226
 12877  003282  D0BA               	goto	u14290
 12878  003284                     l1226:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12882                           
 12883                           ; BSR set to: 0
 12884  003284  0E75               	movlw	117
 12885  003286  6F7E               	movwf	___ftadd@f2& (0+255),b
 12886  003288  0E53               	movlw	83
 12887  00328A  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12888  00328C  0EBF               	movlw	191
 12889  00328E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12890  003290  0E00               	movlw	0
 12891  003292  6F6F               	movwf	___ftmul@f2& (0+255),b
 12892  003294  0EA0               	movlw	160
 12893  003296  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12894  003298  0E3B               	movlw	59
 12895  00329A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12896  00329C  0E01               	movlw	1
 12897  00329E  ECB1  F029         	call	_readADC
 12898  0032A2  C060  F069         	movff	?_readADC,___lwtoft@c
 12899  0032A6  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12900  0032AA  ECD7  F02E         	call	___lwtoft	;wreg free
 12901  0032AE  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12902  0032B2  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12903  0032B6  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12904  0032BA  EC90  F025         	call	___ftmul	;wreg free
 12905  0032BE  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12906  0032C2  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12907  0032C6  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12908  0032CA  EC9F  F022         	call	___ftadd	;wreg free
 12909  0032CE  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12910  0032D2  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12911  0032D6  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12912  0032DA  0E06               	movlw	6
 12913  0032DC  0100               	movlb	0	; () banked
 12914  0032DE  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12915  0032E0  0E01               	movlw	1
 12916  0032E2  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12917  0032E4  0E3D               	movlw	61
 12918  0032E6  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12919  0032E8  EC0B  F026         	call	___ftdiv	;wreg free
 12920  0032EC  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12921  0032F0  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12922  0032F4  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12923                           
 12924                           ;ADC.h: 45: if (auxx < 10) {
 12925  0032F8  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12926  0032FC  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12927  003300  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12928  003304  0E00               	movlw	0
 12929  003306  0100               	movlb	0	; () banked
 12930  003308  6F63               	movwf	___ftge@ff2& (0+255),b
 12931  00330A  0E20               	movlw	32
 12932  00330C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12933  00330E  0E41               	movlw	65
 12934  003310  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12935  003312  EC4B  F02A         	call	___ftge	;wreg free
 12936  003316  0100               	movlb	0	; () banked
 12937  003318  B0D8               	btfsc	status,0,c
 12938  00331A  D00F               	goto	l1228
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;ADC.h: 46: aux += 0;
 12942  00331C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12943  003320  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12944  003324  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12945  003328  0E00               	movlw	0
 12946  00332A  6F7E               	movwf	___ftadd@f2& (0+255),b
 12947  00332C  0E00               	movlw	0
 12948  00332E  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12949  003330  0E00               	movlw	0
 12950  003332  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12951  003334  EC9F  F022         	call	___ftadd	;wreg free
 12952  003338  D00E               	goto	L27
 12953  00333A                     l1228:
 12954                           
 12955                           ;ADC.h: 48: aux += auxx;
 12956  00333A  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12957  00333E  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12958  003342  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12959  003346  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 12960  00334A  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 12961  00334E  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 12962  003352  EC9F  F022         	call	___ftadd	;wreg free
 12963  003356                     L27:
 12964  003356  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12965  00335A  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12966  00335E  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12967  003362  0100               	movlb	0	; () banked
 12968  003364  2BB3               	incf	getSensors@i& (0+255),f,b
 12969  003366  D78A               	goto	l9230
 12970  003368                     l1225:
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 12974                           
 12975                           ; BSR set to: 0
 12976  003368  0E00               	movlw	0
 12977  00336A  6FB3               	movwf	getSensors@i& (0+255),b
 12978  00336C                     l9246:
 12979                           
 12980                           ; BSR set to: 0
 12981  00336C  0E0B               	movlw	11
 12982  00336E  65B3               	cpfsgt	getSensors@i& (0+255),b
 12983  003370  D001               	goto	l1231
 12984  003372  D042               	goto	u14290
 12985  003374                     l1231:
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12989                           
 12990                           ; BSR set to: 0
 12991  003374  0E00               	movlw	0
 12992  003376  6F7E               	movwf	___ftadd@f2& (0+255),b
 12993  003378  0E00               	movlw	0
 12994  00337A  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12995  00337C  0E42               	movlw	66
 12996  00337E  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12997  003380  0E00               	movlw	0
 12998  003382  6F6F               	movwf	___ftmul@f2& (0+255),b
 12999  003384  0E61               	movlw	97
 13000  003386  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 13001  003388  0E3F               	movlw	63
 13002  00338A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 13003  00338C  0E02               	movlw	2
 13004  00338E  ECB1  F029         	call	_readADC
 13005  003392  C060  F069         	movff	?_readADC,___lwtoft@c
 13006  003396  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 13007  00339A  ECD7  F02E         	call	___lwtoft	;wreg free
 13008  00339E  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 13009  0033A2  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 13010  0033A6  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 13011  0033AA  EC90  F025         	call	___ftmul	;wreg free
 13012  0033AE  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 13013  0033B2  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 13014  0033B6  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 13015  0033BA  EC9F  F022         	call	___ftadd	;wreg free
 13016  0033BE  C07B  F0B0         	movff	?___ftadd,_getSensors$2523
 13017  0033C2  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2523+1
 13018  0033C6  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2523+2
 13019                           
 13020                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 13021  0033CA  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13022  0033CE  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13023  0033D2  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13024  0033D6  C0B0  F07E         	movff	_getSensors$2523,___ftadd@f2
 13025  0033DA  C0B1  F07F         	movff	_getSensors$2523+1,___ftadd@f2+1
 13026  0033DE  C0B2  F080         	movff	_getSensors$2523+2,___ftadd@f2+2
 13027  0033E2  EC9F  F022         	call	___ftadd	;wreg free
 13028  0033E6  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13029  0033EA  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13030  0033EE  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13031  0033F2  0100               	movlb	0	; () banked
 13032  0033F4  2BB3               	incf	getSensors@i& (0+255),f,b
 13033  0033F6  D7BA               	goto	l9246
 13034  0033F8                     u14290:
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;ADC.h: 54: }
 13038                           ;ADC.h: 55: }
 13039                           ;ADC.h: 57: aux = (aux / 12);
 13040                           
 13041                           ; BSR set to: 0
 13042                           
 13043                           ; BSR set to: 0
 13044  0033F8  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13045  0033FC  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13046  003400  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13047  003404  0E00               	movlw	0
 13048  003406  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13049  003408  0E40               	movlw	64
 13050  00340A  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13051  00340C  0E41               	movlw	65
 13052  00340E  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13053  003410  EC0B  F026         	call	___ftdiv	;wreg free
 13054  003414  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 13055  003418  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 13056  00341C  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 13057                           
 13058                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 13059  003420  0100               	movlb	0	; () banked
 13060  003422  05FB               	decf	_tipo_sensor_umidade& (0+255),w,b
 13061  003424  A4D8               	btfss	status,2,c
 13062  003426  D02E               	goto	l1235
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;ADC.h: 59: if (aux > 100) aux = 100;
 13066  003428  0E00               	movlw	0
 13067  00342A  6F60               	movwf	___ftge@ff1& (0+255),b
 13068  00342C  0EC8               	movlw	200
 13069  00342E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13070  003430  0E42               	movlw	66
 13071  003432  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13072  003434  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 13073  003438  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 13074  00343C  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 13075  003440  EC4B  F02A         	call	___ftge	;wreg free
 13076  003444  0100               	movlb	0	; () banked
 13077  003446  B0D8               	btfsc	status,0,c
 13078  003448  D006               	goto	l1234
 13079                           
 13080                           ; BSR set to: 0
 13081  00344A  0E00               	movlw	0
 13082  00344C  6FB4               	movwf	getSensors@aux& (0+255),b
 13083  00344E  0EC8               	movlw	200
 13084  003450  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13085  003452  0E42               	movlw	66
 13086  003454  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13087  003456                     l1234:
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;ADC.h: 60: if (aux < 10) aux = 0;
 13091                           
 13092                           ; BSR set to: 0
 13093  003456  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13094  00345A  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13095  00345E  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13096  003462  0E00               	movlw	0
 13097  003464  6F63               	movwf	___ftge@ff2& (0+255),b
 13098  003466  0E20               	movlw	32
 13099  003468  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13100  00346A  0E41               	movlw	65
 13101  00346C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13102  00346E  EC4B  F02A         	call	___ftge	;wreg free
 13103  003472  0100               	movlb	0	; () banked
 13104  003474  B0D8               	btfsc	status,0,c
 13105  003476  D006               	goto	l1235
 13106                           
 13107                           ; BSR set to: 0
 13108  003478  0E00               	movlw	0
 13109  00347A  6FB4               	movwf	getSensors@aux& (0+255),b
 13110  00347C  0E00               	movlw	0
 13111  00347E  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13112  003480  0E00               	movlw	0
 13113  003482  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13114  003484                     l1235:
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;ADC.h: 61: }
 13118                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 13119                           
 13120                           ; BSR set to: 0
 13121                           
 13122                           ; BSR set to: 0
 13123  003484  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 13124  003488  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 13125  00348C  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 13126  003490  0E00               	movlw	0
 13127  003492  6F63               	movwf	___ftge@ff2& (0+255),b
 13128  003494  0E20               	movlw	32
 13129  003496  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13130  003498  0E42               	movlw	66
 13131  00349A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13132  00349C  EC4B  F02A         	call	___ftge	;wreg free
 13133  0034A0  0100               	movlb	0	; () banked
 13134  0034A2  B0D8               	btfsc	status,0,c
 13135  0034A4  D003               	goto	u14340
 13136                           
 13137                           ; BSR set to: 0
 13138  0034A6  51FB               	movf	_tipo_sensor_umidade& (0+255),w,b
 13139  0034A8  B4D8               	btfsc	status,2,c
 13140  0034AA  D007               	goto	l1237
 13141  0034AC                     u14340:
 13142                           
 13143                           ; BSR set to: 0
 13144  0034AC  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1522
 13145  0034B0  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1522+1
 13146  0034B4  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1522+2
 13147  0034B8  D006               	goto	l1239
 13148  0034BA                     l1237:
 13149                           
 13150                           ; BSR set to: 0
 13151                           
 13152                           ; BSR set to: 0
 13153  0034BA  0E00               	movlw	0
 13154  0034BC  6FA8               	movwf	_getSensors$1522& (0+255),b
 13155  0034BE  0E00               	movlw	0
 13156  0034C0  6FA9               	movwf	(_getSensors$1522+1)& (0+255),b
 13157  0034C2  0E00               	movlw	0
 13158  0034C4  6FAA               	movwf	(_getSensors$1522+2)& (0+255),b
 13159  0034C6                     l1239:
 13160                           
 13161                           ; BSR set to: 0
 13162                           
 13163                           ; BSR set to: 0
 13164  0034C6  5035               	movf	_media_adc,w,c
 13165  0034C8  0D03               	mullw	3
 13166  0034CA  0E00               	movlw	low __umid
 13167  0034CC  24F3               	addwf	prodl,w,c
 13168  0034CE  6ED9               	movwf	fsr2l,c
 13169  0034D0  0E01               	movlw	high __umid
 13170  0034D2  20F4               	addwfc	prodh,w,c
 13171  0034D4  6EDA               	movwf	fsr2h,c
 13172  0034D6  C0A8  FFDE         	movff	_getSensors$1522,postinc2
 13173  0034DA  C0A9  FFDE         	movff	_getSensors$1522+1,postinc2
 13174  0034DE  C0AA  FFDE         	movff	_getSensors$1522+2,postinc2
 13175  0034E2                     l1214:
 13176                           
 13177                           ; BSR set to: 0
 13178                           ;ADC.h: 63: }
 13179                           ;ADC.h: 67: i = 0;
 13180                           
 13181                           ; BSR set to: 0
 13182  0034E2  0E00               	movlw	0
 13183  0034E4  6FB3               	movwf	getSensors@i& (0+255),b
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;ADC.h: 68: aux = 0;
 13187  0034E6  0E00               	movlw	0
 13188  0034E8  6FB4               	movwf	getSensors@aux& (0+255),b
 13189  0034EA  0E00               	movlw	0
 13190  0034EC  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13191  0034EE  0E00               	movlw	0
 13192  0034F0  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13196  0034F2  0E00               	movlw	0
 13197  0034F4  6FB3               	movwf	getSensors@i& (0+255),b
 13198  0034F6                     l9282:
 13199                           
 13200                           ; BSR set to: 0
 13201  0034F6  0E09               	movlw	9
 13202  0034F8  65B3               	cpfsgt	getSensors@i& (0+255),b
 13203  0034FA  D001               	goto	l1242
 13204  0034FC  D01F               	goto	u14360
 13205  0034FE                     l1242:
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;ADC.h: 70: aux += _temp[i];
 13209                           
 13210                           ; BSR set to: 0
 13211  0034FE  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13212  003502  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13213  003506  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13214  00350A  51B3               	movf	getSensors@i& (0+255),w,b
 13215  00350C  0D03               	mullw	3
 13216  00350E  0E21               	movlw	low __temp
 13217  003510  24F3               	addwf	prodl,w,c
 13218  003512  6ED9               	movwf	fsr2l,c
 13219  003514  0E01               	movlw	high __temp
 13220  003516  20F4               	addwfc	prodh,w,c
 13221  003518  6EDA               	movwf	fsr2h,c
 13222  00351A  CFDE F07E          	movff	postinc2,___ftadd@f2
 13223  00351E  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13224  003522  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13225  003526  EC9F  F022         	call	___ftadd	;wreg free
 13226  00352A  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13227  00352E  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13228  003532  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13229  003536  0100               	movlb	0	; () banked
 13230  003538  2BB3               	incf	getSensors@i& (0+255),f,b
 13231  00353A  D7DD               	goto	l9282
 13232  00353C                     u14360:
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;ADC.h: 71: }
 13236                           ;ADC.h: 72: temp = (aux / 10);
 13237                           
 13238                           ; BSR set to: 0
 13239  00353C  0E00               	movlw	0
 13240  00353E  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13241  003540  0E20               	movlw	32
 13242  003542  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13243  003544  0E41               	movlw	65
 13244  003546  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13245  003548  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13246  00354C  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13247  003550  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13248  003554  EC0B  F026         	call	___ftdiv	;wreg free
 13249  003558  C087  F096         	movff	?___ftdiv,___fttol@f1
 13250  00355C  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13251  003560  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13252  003564  EC98  F024         	call	___fttol	;wreg free
 13253  003568  0100               	movlb	0	; () banked
 13254  00356A  5196               	movf	?___fttol& (0+255),w,b
 13255  00356C  6FFE               	movwf	_temp& (0+255),b
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;ADC.h: 76: i = 0;
 13259  00356E  0E00               	movlw	0
 13260  003570  6FB3               	movwf	getSensors@i& (0+255),b
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;ADC.h: 77: aux = 0;
 13264  003572  0E00               	movlw	0
 13265  003574  6FB4               	movwf	getSensors@aux& (0+255),b
 13266  003576  0E00               	movlw	0
 13267  003578  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13268  00357A  0E00               	movlw	0
 13269  00357C  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13273  00357E  0E00               	movlw	0
 13274  003580  6FB3               	movwf	getSensors@i& (0+255),b
 13275  003582                     l9300:
 13276                           
 13277                           ; BSR set to: 0
 13278  003582  0E09               	movlw	9
 13279  003584  65B3               	cpfsgt	getSensors@i& (0+255),b
 13280  003586  D001               	goto	l1244
 13281  003588  D01F               	goto	u14380
 13282  00358A                     l1244:
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;ADC.h: 79: aux += _umid[i];
 13286                           
 13287                           ; BSR set to: 0
 13288  00358A  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13289  00358E  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13290  003592  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13291  003596  51B3               	movf	getSensors@i& (0+255),w,b
 13292  003598  0D03               	mullw	3
 13293  00359A  0E00               	movlw	low __umid
 13294  00359C  24F3               	addwf	prodl,w,c
 13295  00359E  6ED9               	movwf	fsr2l,c
 13296  0035A0  0E01               	movlw	high __umid
 13297  0035A2  20F4               	addwfc	prodh,w,c
 13298  0035A4  6EDA               	movwf	fsr2h,c
 13299  0035A6  CFDE F07E          	movff	postinc2,___ftadd@f2
 13300  0035AA  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13301  0035AE  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13302  0035B2  EC9F  F022         	call	___ftadd	;wreg free
 13303  0035B6  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13304  0035BA  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13305  0035BE  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13306  0035C2  0100               	movlb	0	; () banked
 13307  0035C4  2BB3               	incf	getSensors@i& (0+255),f,b
 13308  0035C6  D7DD               	goto	l9300
 13309  0035C8                     u14380:
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;ADC.h: 80: }
 13313                           ;ADC.h: 81: umid = (aux / 10);
 13314                           
 13315                           ; BSR set to: 0
 13316  0035C8  0E00               	movlw	0
 13317  0035CA  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13318  0035CC  0E20               	movlw	32
 13319  0035CE  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13320  0035D0  0E41               	movlw	65
 13321  0035D2  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13322  0035D4  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13323  0035D8  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13324  0035DC  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13325  0035E0  EC0B  F026         	call	___ftdiv	;wreg free
 13326  0035E4  C087  F096         	movff	?___ftdiv,___fttol@f1
 13327  0035E8  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13328  0035EC  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13329  0035F0  EC98  F024         	call	___fttol	;wreg free
 13330  0035F4  0100               	movlb	0	; () banked
 13331  0035F6  5196               	movf	?___fttol& (0+255),w,b
 13332  0035F8  6E5D               	movwf	_umid,c
 13333                           
 13334                           ; BSR set to: 0
 13335  0035FA  0012               	return		;funcret
 13336  0035FC                     __end_of_getSensors:
 13337                           	opt stack 0
 13338                           tblptru	equ	0xFF8
 13339                           tblptrh	equ	0xFF7
 13340                           tblptrl	equ	0xFF6
 13341                           tablat	equ	0xFF5
 13342                           prodh	equ	0xFF4
 13343                           prodl	equ	0xFF3
 13344                           intcon	equ	0xFF2
 13345                           intcon2	equ	0xFF1
 13346                           intcon3	equ	0xFF0
 13347                           postinc0	equ	0xFEE
 13348                           wreg	equ	0xFE8
 13349                           postdec1	equ	0xFE5
 13350                           fsr1l	equ	0xFE1
 13351                           indf2	equ	0xFDF
 13352                           postinc2	equ	0xFDE
 13353                           postdec2	equ	0xFDD
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function _readADC *****************
 13359 ;; Defined at:
 13360 ;;		line 10 in file "src/ADC.h"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  canal           1    wreg     unsigned char 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;  canal           1    8[BANK0 ] unsigned char 
 13365 ;;  digital         2    6[BANK0 ] int 
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  2    0[BANK0 ] unsigned int 
 13368 ;; Registers used:
 13369 ;;		wreg, status,2, status,0
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13375 ;;      Params:         0       2       0       0       0       0       0       0       0
 13376 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13377 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13378 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13379 ;;Total ram usage:        9 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:    6
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_getSensors
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text10
 13390  005362                     __ptext10:
 13391                           	opt stack 0
 13392  005362                     _readADC:
 13393                           	opt stack 23
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;incstack = 0
 13397                           ;readADC@canal stored from wreg
 13398  005362  0100               	movlb	0	; () banked
 13399  005364  6F68               	movwf	readADC@canal& (0+255),b
 13400                           
 13401                           ;ADC.h: 11: ADRESH = 0;
 13402  005366  0E00               	movlw	0
 13403  005368  6EC4               	movwf	4036,c	;volatile
 13404                           
 13405                           ;ADC.h: 12: ADRESL = 0;
 13406  00536A  0E00               	movlw	0
 13407  00536C  6EC3               	movwf	4035,c	;volatile
 13408                           
 13409                           ;ADC.h: 13: int digital;
 13410                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13411  00536E  C068  F062         	movff	readADC@canal,??_readADC
 13412  005372  0100               	movlb	0	; () banked
 13413  005374  90D8               	bcf	status,0,c
 13414  005376  3762               	rlcf	??_readADC& (0+255),f,b
 13415  005378  90D8               	bcf	status,0,c
 13416  00537A  3762               	rlcf	??_readADC& (0+255),f,b
 13417  00537C  0E3C               	movlw	60
 13418  00537E  1762               	andwf	??_readADC& (0+255),f,b
 13419  005380  50C2               	movf	4034,w,c	;volatile
 13420  005382  0BC3               	andlw	195
 13421  005384  1162               	iorwf	??_readADC& (0+255),w,b
 13422  005386  6EC2               	movwf	4034,c	;volatile
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13426  005388  0E14               	movlw	20
 13427  00538A                     u15537:
 13428  00538A  2EE8               	decfsz	wreg,f,c
 13429  00538C  D7FE               	bra	u15537
 13430                           
 13431                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13432  00538E  A2C2               	btfss	4034,1,c	;volatile
 13433  005390  D004               	goto	u12050
 13434  005392  0100               	movlb	0	; () banked
 13435  005394  6B62               	clrf	??_readADC& (0+255),b
 13436  005396  2B62               	incf	??_readADC& (0+255),f,b
 13437  005398  D002               	goto	u12068
 13438  00539A                     u12050:
 13439  00539A  0100               	movlb	0	; () banked
 13440  00539C  6B62               	clrf	??_readADC& (0+255),b
 13441  00539E                     u12068:
 13442  00539E  0E01               	movlw	1
 13443  0053A0  6F63               	movwf	(??_readADC+1)& (0+255),b
 13444  0053A2  2B62               	incf	??_readADC& (0+255),f,b
 13445  0053A4  D002               	goto	u12074
 13446  0053A6                     u12075:
 13447  0053A6  90D8               	bcf	status,0,c
 13448  0053A8  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13449  0053AA                     u12074:
 13450  0053AA  2F62               	decfsz	??_readADC& (0+255),f,b
 13451  0053AC  D7FC               	goto	u12075
 13452  0053AE  A0C2               	btfss	4034,0,c	;volatile
 13453  0053B0  D004               	goto	u12080
 13454  0053B2  0100               	movlb	0	; () banked
 13455  0053B4  6B64               	clrf	(??_readADC+2)& (0+255),b
 13456  0053B6  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13457  0053B8  D002               	goto	u12098
 13458  0053BA                     u12080:
 13459  0053BA  0100               	movlb	0	; () banked
 13460  0053BC  6B64               	clrf	(??_readADC+2)& (0+255),b
 13461  0053BE                     u12098:
 13462  0053BE  0E01               	movlw	1
 13463  0053C0  6F65               	movwf	(??_readADC+3)& (0+255),b
 13464  0053C2  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13465  0053C4  D002               	goto	u12104
 13466  0053C6                     u12105:
 13467  0053C6  90D8               	bcf	status,0,c
 13468  0053C8  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13469  0053CA                     u12104:
 13470  0053CA  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13471  0053CC  D7FC               	goto	u12105
 13472  0053CE  0100               	movlb	0	; () banked
 13473  0053D0  5165               	movf	(??_readADC+3)& (0+255),w,b
 13474  0053D2  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13475  0053D4  12C2               	iorwf	4034,f,c	;volatile
 13476  0053D6                     
 13477                           ; BSR set to: 0
 13478  0053D6  B2C2               	btfsc	4034,1,c	;volatile
 13479  0053D8  D7FE               	goto	l1209
 13480                           
 13481                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13482  0053DA  50C3               	movf	4035,w,c	;volatile
 13483  0053DC  CFC4 F062          	movff	4036,??_readADC	;volatile
 13484  0053E0  0100               	movlb	0	; () banked
 13485  0053E2  6B63               	clrf	(??_readADC+1)& (0+255),b
 13486  0053E4  C062  F063         	movff	??_readADC,??_readADC+1
 13487  0053E8  6B62               	clrf	??_readADC& (0+255),b
 13488  0053EA  1162               	iorwf	??_readADC& (0+255),w,b
 13489  0053EC  6F66               	movwf	readADC@digital& (0+255),b
 13490  0053EE  5163               	movf	(??_readADC+1)& (0+255),w,b
 13491  0053F0  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;ADC.h: 19: return (digital);
 13495  0053F2  C066  F060         	movff	readADC@digital,?_readADC
 13496  0053F6  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13497  0053FA  0012               	return	
 13498  0053FC                     __end_of_readADC:
 13499                           	opt stack 0
 13500                           tblptru	equ	0xFF8
 13501                           tblptrh	equ	0xFF7
 13502                           tblptrl	equ	0xFF6
 13503                           tablat	equ	0xFF5
 13504                           prodh	equ	0xFF4
 13505                           prodl	equ	0xFF3
 13506                           intcon	equ	0xFF2
 13507                           intcon2	equ	0xFF1
 13508                           intcon3	equ	0xFF0
 13509                           postinc0	equ	0xFEE
 13510                           wreg	equ	0xFE8
 13511                           postdec1	equ	0xFE5
 13512                           fsr1l	equ	0xFE1
 13513                           indf2	equ	0xFDF
 13514                           postinc2	equ	0xFDE
 13515                           postdec2	equ	0xFDD
 13516                           fsr2h	equ	0xFDA
 13517                           fsr2l	equ	0xFD9
 13518                           status	equ	0xFD8
 13519                           
 13520 ;; *************** function ___lwtoft *****************
 13521 ;; Defined at:
 13522 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  c               2    9[BANK0 ] unsigned int 
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;		None
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  3    9[BANK0 ] float 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0, cstack
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13536 ;;      Params:         0       3       0       0       0       0       0       0       0
 13537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13539 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13540 ;;Total ram usage:        3 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:    7
 13543 ;; This function calls:
 13544 ;;		___ftpack
 13545 ;; This function is called by:
 13546 ;;		_getSensors
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text11
 13551  005DAE                     __ptext11:
 13552                           	opt stack 0
 13553  005DAE                     ___lwtoft:
 13554                           	opt stack 22
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;incstack = 0
 13558  005DAE  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13559  005DB2  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13560  005DB6  0100               	movlb	0	; () banked
 13561  005DB8  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13562  005DBA  0E8E               	movlw	142
 13563  005DBC  6F63               	movwf	___ftpack@exp& (0+255),b
 13564  005DBE  0E00               	movlw	0
 13565  005DC0  6F64               	movwf	___ftpack@sign& (0+255),b
 13566  005DC2  EC66  F028         	call	___ftpack	;wreg free
 13567  005DC6  C060  F069         	movff	?___ftpack,?___lwtoft
 13568  005DCA  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13569  005DCE  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13570  005DD2  0012               	return	
 13571  005DD4                     __end_of___lwtoft:
 13572                           	opt stack 0
 13573                           tblptru	equ	0xFF8
 13574                           tblptrh	equ	0xFF7
 13575                           tblptrl	equ	0xFF6
 13576                           tablat	equ	0xFF5
 13577                           prodh	equ	0xFF4
 13578                           prodl	equ	0xFF3
 13579                           intcon	equ	0xFF2
 13580                           intcon2	equ	0xFF1
 13581                           intcon3	equ	0xFF0
 13582                           postinc0	equ	0xFEE
 13583                           wreg	equ	0xFE8
 13584                           postdec1	equ	0xFE5
 13585                           fsr1l	equ	0xFE1
 13586                           indf2	equ	0xFDF
 13587                           postinc2	equ	0xFDE
 13588                           postdec2	equ	0xFDD
 13589                           fsr2h	equ	0xFDA
 13590                           fsr2l	equ	0xFD9
 13591                           status	equ	0xFD8
 13592                           
 13593 ;; *************** function ___fttol *****************
 13594 ;; Defined at:
 13595 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13596 ;; Parameters:    Size  Location     Type
 13597 ;;  f1              3   54[BANK0 ] float 
 13598 ;; Auto vars:     Size  Location     Type
 13599 ;;  lval            4   64[BANK0 ] unsigned long 
 13600 ;;  exp1            1   68[BANK0 ] unsigned char 
 13601 ;;  sign1           1   63[BANK0 ] unsigned char 
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  4   54[BANK0 ] long 
 13604 ;; Registers used:
 13605 ;;		wreg, status,2, status,0
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13611 ;;      Params:         0       4       0       0       0       0       0       0       0
 13612 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13613 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13614 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13615 ;;Total ram usage:       15 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    6
 13618 ;; This function calls:
 13619 ;;		Nothing
 13620 ;; This function is called by:
 13621 ;;		_getSensors
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text12
 13626  004930                     __ptext12:
 13627                           	opt stack 0
 13628  004930                     ___fttol:
 13629                           	opt stack 23
 13630                           
 13631                           ;incstack = 0
 13632  004930  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13633  004934  0100               	movlb	0	; () banked
 13634  004936  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13635  004938  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13636  00493A  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13637  00493C  379A               	rlcf	??___fttol& (0+255),f,b
 13638  00493E  E301               	bnc	u12471
 13639  004940  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13640  004942                     u12471:
 13641  004942  519A               	movf	??___fttol& (0+255),w,b
 13642  004944  6FA4               	movwf	___fttol@exp1& (0+255),b
 13643  004946  51A4               	movf	___fttol@exp1& (0+255),w,b
 13644  004948  A4D8               	btfss	status,2,c
 13645  00494A  D009               	goto	l2000
 13646                           
 13647                           ; BSR set to: 0
 13648  00494C  0E00               	movlw	0
 13649  00494E  6F96               	movwf	?___fttol& (0+255),b
 13650  004950  0E00               	movlw	0
 13651  004952  6F97               	movwf	(?___fttol+1)& (0+255),b
 13652  004954  0E00               	movlw	0
 13653  004956  6F98               	movwf	(?___fttol+2)& (0+255),b
 13654  004958  0E00               	movlw	0
 13655  00495A  6F99               	movwf	(?___fttol+3)& (0+255),b
 13656                           
 13657                           ; BSR set to: 0
 13658  00495C  0012               	return	
 13659  00495E                     l2000:
 13660                           
 13661                           ; BSR set to: 0
 13662                           
 13663                           ; BSR set to: 0
 13664  00495E  0E17               	movlw	23
 13665  004960  6F9A               	movwf	??___fttol& (0+255),b
 13666  004962  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13667  004966  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13668  00496A  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13669  00496E  299A               	incf	??___fttol& (0+255),w,b
 13670  004970  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13671  004972  D004               	goto	u12490
 13672  004974                     u12495:
 13673  004974  90D8               	bcf	status,0,c
 13674  004976  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13675  004978  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13676  00497A  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13677  00497C                     u12490:
 13678  00497C  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13679  00497E  D7FA               	goto	u12495
 13680  004980  0100               	movlb	0	; () banked
 13681  004982  519B               	movf	(??___fttol+1)& (0+255),w,b
 13682  004984  6F9F               	movwf	___fttol@sign1& (0+255),b
 13683                           
 13684                           ; BSR set to: 0
 13685  004986  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13686                           
 13687                           ; BSR set to: 0
 13688  004988  0EFF               	movlw	255
 13689  00498A  1796               	andwf	___fttol@f1& (0+255),f,b
 13690  00498C  0EFF               	movlw	255
 13691  00498E  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13692  004990  0E00               	movlw	0
 13693  004992  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13694                           
 13695                           ; BSR set to: 0
 13696  004994  5196               	movf	___fttol@f1& (0+255),w,b
 13697  004996  6FA0               	movwf	___fttol@lval& (0+255),b
 13698  004998  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13699  00499A  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13700  00499C  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13701  00499E  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13702  0049A0  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13703                           
 13704                           ; BSR set to: 0
 13705  0049A2  0E8E               	movlw	142
 13706  0049A4  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13707                           
 13708                           ; BSR set to: 0
 13709  0049A6  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13710  0049A8  D016               	goto	l2002
 13711                           
 13712                           ; BSR set to: 0
 13713  0049AA  51A4               	movf	___fttol@exp1& (0+255),w,b
 13714  0049AC  0A80               	xorlw	128
 13715  0049AE  0F8F               	addlw	143
 13716  0049B0  B0D8               	btfsc	status,0,c
 13717  0049B2  D009               	goto	l2003
 13718                           
 13719                           ; BSR set to: 0
 13720  0049B4  0E00               	movlw	0
 13721  0049B6  6F96               	movwf	?___fttol& (0+255),b
 13722  0049B8  0E00               	movlw	0
 13723  0049BA  6F97               	movwf	(?___fttol+1)& (0+255),b
 13724  0049BC  0E00               	movlw	0
 13725  0049BE  6F98               	movwf	(?___fttol+2)& (0+255),b
 13726  0049C0  0E00               	movlw	0
 13727  0049C2  6F99               	movwf	(?___fttol+3)& (0+255),b
 13728                           
 13729                           ; BSR set to: 0
 13730  0049C4  0012               	return	
 13731  0049C6                     l2003:
 13732                           
 13733                           ; BSR set to: 0
 13734                           
 13735                           ; BSR set to: 0
 13736                           
 13737                           ; BSR set to: 0
 13738  0049C6  90D8               	bcf	status,0,c
 13739  0049C8  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13740  0049CA  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13741  0049CC  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13742  0049CE  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13743                           
 13744                           ; BSR set to: 0
 13745  0049D0  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13746  0049D2  D7F9               	goto	l2003
 13747                           
 13748                           ; BSR set to: 0
 13749  0049D4  D015               	goto	u12530
 13750  0049D6                     l2002:
 13751                           
 13752                           ; BSR set to: 0
 13753                           
 13754                           ; BSR set to: 0
 13755  0049D6  0E17               	movlw	23
 13756  0049D8  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13757  0049DA  D00F               	goto	l2008
 13758                           
 13759                           ; BSR set to: 0
 13760  0049DC  0E00               	movlw	0
 13761  0049DE  6F96               	movwf	?___fttol& (0+255),b
 13762  0049E0  0E00               	movlw	0
 13763  0049E2  6F97               	movwf	(?___fttol+1)& (0+255),b
 13764  0049E4  0E00               	movlw	0
 13765  0049E6  6F98               	movwf	(?___fttol+2)& (0+255),b
 13766  0049E8  0E00               	movlw	0
 13767  0049EA  6F99               	movwf	(?___fttol+3)& (0+255),b
 13768                           
 13769                           ; BSR set to: 0
 13770  0049EC  0012               	return	
 13771  0049EE                     
 13772                           ; BSR set to: 0
 13773                           
 13774                           ; BSR set to: 0
 13775  0049EE  90D8               	bcf	status,0,c
 13776  0049F0  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13777  0049F2  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13778  0049F4  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13779  0049F6  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13780  0049F8  07A4               	decf	___fttol@exp1& (0+255),f,b
 13781  0049FA                     l2008:
 13782                           
 13783                           ; BSR set to: 0
 13784                           
 13785                           ; BSR set to: 0
 13786  0049FA  51A4               	movf	___fttol@exp1& (0+255),w,b
 13787  0049FC  A4D8               	btfss	status,2,c
 13788  0049FE  D7F7               	goto	l2009
 13789  004A00                     u12530:
 13790                           
 13791                           ; BSR set to: 0
 13792                           
 13793                           ; BSR set to: 0
 13794                           
 13795                           ; BSR set to: 0
 13796  004A00  519F               	movf	___fttol@sign1& (0+255),w,b
 13797  004A02  B4D8               	btfsc	status,2,c
 13798  004A04  D008               	goto	l2011
 13799                           
 13800                           ; BSR set to: 0
 13801  004A06  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13802  004A08  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13803  004A0A  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13804  004A0C  6DA0               	negf	___fttol@lval& (0+255),b
 13805  004A0E  0E00               	movlw	0
 13806  004A10  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13807  004A12  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13808  004A14  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13809  004A16                     l2011:
 13810                           
 13811                           ; BSR set to: 0
 13812                           
 13813                           ; BSR set to: 0
 13814  004A16  C0A0  F096         	movff	___fttol@lval,?___fttol
 13815  004A1A  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13816  004A1E  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13817  004A22  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13818  004A26  0012               	return	
 13819  004A28                     __end_of___fttol:
 13820                           	opt stack 0
 13821                           tblptru	equ	0xFF8
 13822                           tblptrh	equ	0xFF7
 13823                           tblptrl	equ	0xFF6
 13824                           tablat	equ	0xFF5
 13825                           prodh	equ	0xFF4
 13826                           prodl	equ	0xFF3
 13827                           intcon	equ	0xFF2
 13828                           intcon2	equ	0xFF1
 13829                           intcon3	equ	0xFF0
 13830                           postinc0	equ	0xFEE
 13831                           wreg	equ	0xFE8
 13832                           postdec1	equ	0xFE5
 13833                           fsr1l	equ	0xFE1
 13834                           indf2	equ	0xFDF
 13835                           postinc2	equ	0xFDE
 13836                           postdec2	equ	0xFDD
 13837                           fsr2h	equ	0xFDA
 13838                           fsr2l	equ	0xFD9
 13839                           status	equ	0xFD8
 13840                           
 13841 ;; *************** function ___ftmul *****************
 13842 ;; Defined at:
 13843 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  f1              3   12[BANK0 ] float 
 13846 ;;  f2              3   15[BANK0 ] float 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13849 ;;  sign            1   26[BANK0 ] unsigned char 
 13850 ;;  cntr            1   25[BANK0 ] unsigned char 
 13851 ;;  exp             1   21[BANK0 ] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  3   12[BANK0 ] float 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0, cstack
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13861 ;;      Params:         0       6       0       0       0       0       0       0       0
 13862 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13863 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13864 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13865 ;;Total ram usage:       15 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    7
 13868 ;; This function calls:
 13869 ;;		___ftpack
 13870 ;; This function is called by:
 13871 ;;		_getSensors
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text13
 13876  004B20                     __ptext13:
 13877                           	opt stack 0
 13878  004B20                     ___ftmul:
 13879                           	opt stack 22
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;incstack = 0
 13883  004B20  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13884  004B24  0100               	movlb	0	; () banked
 13885  004B26  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13886  004B28  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13887  004B2A  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13888  004B2C  3772               	rlcf	??___ftmul& (0+255),f,b
 13889  004B2E  E301               	bnc	u12381
 13890  004B30  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13891  004B32                     u12381:
 13892  004B32  5172               	movf	??___ftmul& (0+255),w,b
 13893  004B34  6F75               	movwf	___ftmul@exp& (0+255),b
 13894  004B36  5175               	movf	___ftmul@exp& (0+255),w,b
 13895  004B38  A4D8               	btfss	status,2,c
 13896  004B3A  D007               	goto	l1979
 13897                           
 13898                           ; BSR set to: 0
 13899  004B3C  0E00               	movlw	0
 13900  004B3E  6F6C               	movwf	?___ftmul& (0+255),b
 13901  004B40  0E00               	movlw	0
 13902  004B42  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13903  004B44  0E00               	movlw	0
 13904  004B46  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13905                           
 13906                           ; BSR set to: 0
 13907  004B48  0012               	return	
 13908  004B4A                     l1979:
 13909                           
 13910                           ; BSR set to: 0
 13911                           
 13912                           ; BSR set to: 0
 13913  004B4A  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13914  004B4E  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13915  004B50  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13916  004B52  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13917  004B54  3772               	rlcf	??___ftmul& (0+255),f,b
 13918  004B56  E301               	bnc	u12401
 13919  004B58  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13920  004B5A                     u12401:
 13921  004B5A  5172               	movf	??___ftmul& (0+255),w,b
 13922  004B5C  6F7A               	movwf	___ftmul@sign& (0+255),b
 13923  004B5E  517A               	movf	___ftmul@sign& (0+255),w,b
 13924  004B60  A4D8               	btfss	status,2,c
 13925  004B62  D007               	goto	l1981
 13926                           
 13927                           ; BSR set to: 0
 13928  004B64  0E00               	movlw	0
 13929  004B66  6F6C               	movwf	?___ftmul& (0+255),b
 13930  004B68  0E00               	movlw	0
 13931  004B6A  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13932  004B6C  0E00               	movlw	0
 13933  004B6E  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13934                           
 13935                           ; BSR set to: 0
 13936  004B70  0012               	return	
 13937  004B72                     l1981:
 13938                           
 13939                           ; BSR set to: 0
 13940                           
 13941                           ; BSR set to: 0
 13942  004B72  517A               	movf	___ftmul@sign& (0+255),w,b
 13943  004B74  0F7B               	addlw	123
 13944  004B76  2775               	addwf	___ftmul@exp& (0+255),f,b
 13945                           
 13946                           ; BSR set to: 0
 13947  004B78  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 13948  004B7C  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13949  004B7E  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 13950  004B80  0E80               	movlw	128
 13951  004B82  177A               	andwf	___ftmul@sign& (0+255),f,b
 13952                           
 13953                           ; BSR set to: 0
 13954  004B84  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13955                           
 13956                           ; BSR set to: 0
 13957  004B86  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13958                           
 13959                           ; BSR set to: 0
 13960  004B88  0EFF               	movlw	255
 13961  004B8A  176F               	andwf	___ftmul@f2& (0+255),f,b
 13962  004B8C  0EFF               	movlw	255
 13963  004B8E  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13964  004B90  0E00               	movlw	0
 13965  004B92  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13966                           
 13967                           ; BSR set to: 0
 13968  004B94  0E00               	movlw	0
 13969  004B96  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 13970  004B98  0E00               	movlw	0
 13971  004B9A  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13972  004B9C  0E00               	movlw	0
 13973  004B9E  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13974                           
 13975                           ; BSR set to: 0
 13976  004BA0  0E07               	movlw	7
 13977  004BA2  6F79               	movwf	___ftmul@cntr& (0+255),b
 13978  004BA4                     
 13979                           ; BSR set to: 0
 13980                           
 13981                           ; BSR set to: 0
 13982  004BA4  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13983  004BA6  D006               	goto	l1983
 13984                           
 13985                           ; BSR set to: 0
 13986  004BA8  516F               	movf	___ftmul@f2& (0+255),w,b
 13987  004BAA  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13988  004BAC  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13989  004BAE  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13990  004BB0  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13991  004BB2  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13992  004BB4                     l1983:
 13993                           
 13994                           ; BSR set to: 0
 13995                           
 13996                           ; BSR set to: 0
 13997  004BB4  90D8               	bcf	status,0,c
 13998  004BB6  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13999  004BB8  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14000  004BBA  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14001  004BBC  90D8               	bcf	status,0,c
 14002  004BBE  376F               	rlcf	___ftmul@f2& (0+255),f,b
 14003  004BC0  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14004  004BC2  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14005                           
 14006                           ; BSR set to: 0
 14007  004BC4  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14008  004BC6  D7EE               	goto	l1982
 14009                           
 14010                           ; BSR set to: 0
 14011                           
 14012                           ; BSR set to: 0
 14013  004BC8  0E09               	movlw	9
 14014  004BCA  6F79               	movwf	___ftmul@cntr& (0+255),b
 14015  004BCC                     
 14016                           ; BSR set to: 0
 14017                           
 14018                           ; BSR set to: 0
 14019  004BCC  A16C               	btfss	___ftmul@f1& (0+255),0,b
 14020  004BCE  D006               	goto	l1986
 14021                           
 14022                           ; BSR set to: 0
 14023  004BD0  516F               	movf	___ftmul@f2& (0+255),w,b
 14024  004BD2  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14025  004BD4  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 14026  004BD6  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14027  004BD8  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 14028  004BDA  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14029  004BDC                     l1986:
 14030                           
 14031                           ; BSR set to: 0
 14032                           
 14033                           ; BSR set to: 0
 14034  004BDC  90D8               	bcf	status,0,c
 14035  004BDE  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14036  004BE0  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14037  004BE2  336C               	rrcf	___ftmul@f1& (0+255),f,b
 14038  004BE4  90D8               	bcf	status,0,c
 14039  004BE6  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14040  004BE8  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14041  004BEA  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14042                           
 14043                           ; BSR set to: 0
 14044  004BEC  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 14045  004BEE  D7EE               	goto	l1985
 14046                           
 14047                           ; BSR set to: 0
 14048                           
 14049                           ; BSR set to: 0
 14050  004BF0  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 14051  004BF4  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14052  004BF8  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14053  004BFC  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 14054  004C00  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 14055  004C04  EC66  F028         	call	___ftpack	;wreg free
 14056  004C08  C060  F06C         	movff	?___ftpack,?___ftmul
 14057  004C0C  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 14058  004C10  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 14059  004C14  0012               	return	
 14060  004C16                     __end_of___ftmul:
 14061                           	opt stack 0
 14062                           tblptru	equ	0xFF8
 14063                           tblptrh	equ	0xFF7
 14064                           tblptrl	equ	0xFF6
 14065                           tablat	equ	0xFF5
 14066                           prodh	equ	0xFF4
 14067                           prodl	equ	0xFF3
 14068                           intcon	equ	0xFF2
 14069                           intcon2	equ	0xFF1
 14070                           intcon3	equ	0xFF0
 14071                           postinc0	equ	0xFEE
 14072                           wreg	equ	0xFE8
 14073                           postdec1	equ	0xFE5
 14074                           fsr1l	equ	0xFE1
 14075                           indf2	equ	0xFDF
 14076                           postinc2	equ	0xFDE
 14077                           postdec2	equ	0xFDD
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function ___ftge *****************
 14083 ;; Defined at:
 14084 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  ff1             3    0[BANK0 ] float 
 14087 ;;  ff2             3    3[BANK0 ] float 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;		None
 14090 ;; Return value:  Size  Location     Type
 14091 ;;		None               void
 14092 ;; Registers used:
 14093 ;;		wreg, status,2, status,0
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14099 ;;      Params:         0       6       0       0       0       0       0       0       0
 14100 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14101 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14102 ;;      Totals:         0       9       0       0       0       0       0       0       0
 14103 ;;Total ram usage:        9 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    6
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_getSensors
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text14
 14114  005496                     __ptext14:
 14115                           	opt stack 0
 14116  005496                     ___ftge:
 14117                           	opt stack 23
 14118                           
 14119                           ;incstack = 0
 14120  005496  0100               	movlb	0	; () banked
 14121  005498  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14122  00549A  D016               	goto	l1972
 14123                           
 14124                           ; BSR set to: 0
 14125  00549C  C060  F066         	movff	___ftge@ff1,??___ftge
 14126  0054A0  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 14127  0054A4  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 14128  0054A8  1F66               	comf	??___ftge& (0+255),f,b
 14129  0054AA  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14130  0054AC  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14131  0054AE  2B66               	incf	??___ftge& (0+255),f,b
 14132  0054B0  0E00               	movlw	0
 14133  0054B2  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14134  0054B4  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14135  0054B6  0E00               	movlw	0
 14136  0054B8  2566               	addwf	??___ftge& (0+255),w,b
 14137  0054BA  6F60               	movwf	___ftge@ff1& (0+255),b
 14138  0054BC  0E00               	movlw	0
 14139  0054BE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14140  0054C0  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 14141  0054C2  0E80               	movlw	128
 14142  0054C4  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14143  0054C6  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 14144  0054C8                     l1972:
 14145                           
 14146                           ; BSR set to: 0
 14147                           
 14148                           ; BSR set to: 0
 14149  0054C8  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14150  0054CA  D016               	goto	l1973
 14151                           
 14152                           ; BSR set to: 0
 14153  0054CC  C063  F066         	movff	___ftge@ff2,??___ftge
 14154  0054D0  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 14155  0054D4  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 14156  0054D8  1F66               	comf	??___ftge& (0+255),f,b
 14157  0054DA  1F67               	comf	(??___ftge+1)& (0+255),f,b
 14158  0054DC  1F68               	comf	(??___ftge+2)& (0+255),f,b
 14159  0054DE  2B66               	incf	??___ftge& (0+255),f,b
 14160  0054E0  0E00               	movlw	0
 14161  0054E2  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 14162  0054E4  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 14163  0054E6  0E00               	movlw	0
 14164  0054E8  2566               	addwf	??___ftge& (0+255),w,b
 14165  0054EA  6F63               	movwf	___ftge@ff2& (0+255),b
 14166  0054EC  0E00               	movlw	0
 14167  0054EE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 14168  0054F0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 14169  0054F2  0E80               	movlw	128
 14170  0054F4  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 14171  0054F6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 14172  0054F8                     l1973:
 14173                           
 14174                           ; BSR set to: 0
 14175                           
 14176                           ; BSR set to: 0
 14177  0054F8  0E00               	movlw	0
 14178  0054FA  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14179  0054FC  0E00               	movlw	0
 14180  0054FE  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14181  005500  0E80               	movlw	128
 14182  005502  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14183                           
 14184                           ; BSR set to: 0
 14185  005504  0E00               	movlw	0
 14186  005506  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14187  005508  0E00               	movlw	0
 14188  00550A  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14189  00550C  0E80               	movlw	128
 14190  00550E  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14191  005510  5163               	movf	___ftge@ff2& (0+255),w,b
 14192  005512  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14193  005514  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14194  005516  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14195  005518  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14196  00551A  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14197  00551C  B0D8               	btfsc	status,0,c
 14198  00551E  D002               	goto	l6222
 14199                           
 14200                           ; BSR set to: 0
 14201  005520  90D8               	bcf	status,0,c
 14202  005522  0012               	return	
 14203  005524                     l6222:
 14204                           
 14205                           ; BSR set to: 0
 14206                           
 14207                           ; BSR set to: 0
 14208  005524  80D8               	bsf	status,0,c
 14209                           
 14210                           ; BSR set to: 0
 14211  005526  0012               	return	
 14212  005528                     __end_of___ftge:
 14213                           	opt stack 0
 14214                           tblptru	equ	0xFF8
 14215                           tblptrh	equ	0xFF7
 14216                           tblptrl	equ	0xFF6
 14217                           tablat	equ	0xFF5
 14218                           prodh	equ	0xFF4
 14219                           prodl	equ	0xFF3
 14220                           intcon	equ	0xFF2
 14221                           intcon2	equ	0xFF1
 14222                           intcon3	equ	0xFF0
 14223                           postinc0	equ	0xFEE
 14224                           wreg	equ	0xFE8
 14225                           postdec1	equ	0xFE5
 14226                           fsr1l	equ	0xFE1
 14227                           indf2	equ	0xFDF
 14228                           postinc2	equ	0xFDE
 14229                           postdec2	equ	0xFDD
 14230                           fsr2h	equ	0xFDA
 14231                           fsr2l	equ	0xFD9
 14232                           status	equ	0xFD8
 14233                           
 14234 ;; *************** function ___ftdiv *****************
 14235 ;; Defined at:
 14236 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14237 ;; Parameters:    Size  Location     Type
 14238 ;;  f1              3   39[BANK0 ] float 
 14239 ;;  f2              3   42[BANK0 ] float 
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;  f3              3   49[BANK0 ] float 
 14242 ;;  sign            1   53[BANK0 ] unsigned char 
 14243 ;;  exp             1   52[BANK0 ] unsigned char 
 14244 ;;  cntr            1   48[BANK0 ] unsigned char 
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  3   39[BANK0 ] float 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0, cstack
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14254 ;;      Params:         0       6       0       0       0       0       0       0       0
 14255 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14256 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14257 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14258 ;;Total ram usage:       15 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; Hardware stack levels required when called:    7
 14261 ;; This function calls:
 14262 ;;		___ftpack
 14263 ;; This function is called by:
 14264 ;;		_getSensors
 14265 ;; This function uses a non-reentrant model
 14266 ;;
 14267                           
 14268                           	psect	text15
 14269  004C16                     __ptext15:
 14270                           	opt stack 0
 14271  004C16                     ___ftdiv:
 14272                           	opt stack 22
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;incstack = 0
 14276  004C16  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14277  004C1A  0100               	movlb	0	; () banked
 14278  004C1C  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14279  004C1E  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14280  004C20  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14281  004C22  378D               	rlcf	??___ftdiv& (0+255),f,b
 14282  004C24  E301               	bnc	u12331
 14283  004C26  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14284  004C28                     u12331:
 14285  004C28  518D               	movf	??___ftdiv& (0+255),w,b
 14286  004C2A  6F94               	movwf	___ftdiv@exp& (0+255),b
 14287  004C2C  5194               	movf	___ftdiv@exp& (0+255),w,b
 14288  004C2E  A4D8               	btfss	status,2,c
 14289  004C30  D007               	goto	l1964
 14290                           
 14291                           ; BSR set to: 0
 14292  004C32  0E00               	movlw	0
 14293  004C34  6F87               	movwf	?___ftdiv& (0+255),b
 14294  004C36  0E00               	movlw	0
 14295  004C38  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14296  004C3A  0E00               	movlw	0
 14297  004C3C  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14298                           
 14299                           ; BSR set to: 0
 14300  004C3E  0012               	return	
 14301  004C40                     l1964:
 14302                           
 14303                           ; BSR set to: 0
 14304                           
 14305                           ; BSR set to: 0
 14306  004C40  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14307  004C44  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14308  004C46  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14309  004C48  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14310  004C4A  378D               	rlcf	??___ftdiv& (0+255),f,b
 14311  004C4C  E301               	bnc	u12351
 14312  004C4E  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14313  004C50                     u12351:
 14314  004C50  518D               	movf	??___ftdiv& (0+255),w,b
 14315  004C52  6F95               	movwf	___ftdiv@sign& (0+255),b
 14316  004C54  5195               	movf	___ftdiv@sign& (0+255),w,b
 14317  004C56  A4D8               	btfss	status,2,c
 14318  004C58  D007               	goto	l1966
 14319                           
 14320                           ; BSR set to: 0
 14321  004C5A  0E00               	movlw	0
 14322  004C5C  6F87               	movwf	?___ftdiv& (0+255),b
 14323  004C5E  0E00               	movlw	0
 14324  004C60  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14325  004C62  0E00               	movlw	0
 14326  004C64  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14327                           
 14328                           ; BSR set to: 0
 14329  004C66  0012               	return	
 14330  004C68                     l1966:
 14331                           
 14332                           ; BSR set to: 0
 14333                           
 14334                           ; BSR set to: 0
 14335  004C68  0E00               	movlw	0
 14336  004C6A  6F91               	movwf	___ftdiv@f3& (0+255),b
 14337  004C6C  0E00               	movlw	0
 14338  004C6E  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14339  004C70  0E00               	movlw	0
 14340  004C72  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14341                           
 14342                           ; BSR set to: 0
 14343  004C74  5195               	movf	___ftdiv@sign& (0+255),w,b
 14344  004C76  0F89               	addlw	137
 14345  004C78  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14346                           
 14347                           ; BSR set to: 0
 14348  004C7A  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14349                           
 14350                           ; BSR set to: 0
 14351  004C7E  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14352  004C80  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14353                           
 14354                           ; BSR set to: 0
 14355  004C82  0E80               	movlw	128
 14356  004C84  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14357                           
 14358                           ; BSR set to: 0
 14359  004C86  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14360                           
 14361                           ; BSR set to: 0
 14362  004C88  0EFF               	movlw	255
 14363  004C8A  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14364  004C8C  0EFF               	movlw	255
 14365  004C8E  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14366  004C90  0E00               	movlw	0
 14367  004C92  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14368                           
 14369                           ; BSR set to: 0
 14370  004C94  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14371                           
 14372                           ; BSR set to: 0
 14373  004C96  0EFF               	movlw	255
 14374  004C98  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14375  004C9A  0EFF               	movlw	255
 14376  004C9C  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14377  004C9E  0E00               	movlw	0
 14378  004CA0  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14379                           
 14380                           ; BSR set to: 0
 14381  004CA2  0E18               	movlw	24
 14382  004CA4  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14383  004CA6                     
 14384                           ; BSR set to: 0
 14385                           
 14386                           ; BSR set to: 0
 14387  004CA6  90D8               	bcf	status,0,c
 14388  004CA8  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14389  004CAA  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14390  004CAC  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14391                           
 14392                           ; BSR set to: 0
 14393  004CAE  518A               	movf	___ftdiv@f2& (0+255),w,b
 14394  004CB0  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14395  004CB2  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14396  004CB4  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14397  004CB6  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14398  004CB8  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14399  004CBA  A0D8               	btfss	status,0,c
 14400  004CBC  D007               	goto	l1968
 14401                           
 14402                           ; BSR set to: 0
 14403  004CBE  518A               	movf	___ftdiv@f2& (0+255),w,b
 14404  004CC0  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14405  004CC2  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14406  004CC4  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14407  004CC6  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14408  004CC8  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14409                           
 14410                           ; BSR set to: 0
 14411  004CCA  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14412  004CCC                     l1968:
 14413                           
 14414                           ; BSR set to: 0
 14415  004CCC  90D8               	bcf	status,0,c
 14416  004CCE  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14417  004CD0  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14418  004CD2  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14419                           
 14420                           ; BSR set to: 0
 14421  004CD4  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14422  004CD6  D7E7               	goto	l1967
 14423                           
 14424                           ; BSR set to: 0
 14425                           
 14426                           ; BSR set to: 0
 14427  004CD8  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14428  004CDC  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14429  004CE0  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14430  004CE4  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14431  004CE8  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14432  004CEC  EC66  F028         	call	___ftpack	;wreg free
 14433  004CF0  C060  F087         	movff	?___ftpack,?___ftdiv
 14434  004CF4  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14435  004CF8  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14436  004CFC  0012               	return	
 14437  004CFE                     __end_of___ftdiv:
 14438                           	opt stack 0
 14439                           tblptru	equ	0xFF8
 14440                           tblptrh	equ	0xFF7
 14441                           tblptrl	equ	0xFF6
 14442                           tablat	equ	0xFF5
 14443                           prodh	equ	0xFF4
 14444                           prodl	equ	0xFF3
 14445                           intcon	equ	0xFF2
 14446                           intcon2	equ	0xFF1
 14447                           intcon3	equ	0xFF0
 14448                           postinc0	equ	0xFEE
 14449                           wreg	equ	0xFE8
 14450                           postdec1	equ	0xFE5
 14451                           fsr1l	equ	0xFE1
 14452                           indf2	equ	0xFDF
 14453                           postinc2	equ	0xFDE
 14454                           postdec2	equ	0xFDD
 14455                           fsr2h	equ	0xFDA
 14456                           fsr2l	equ	0xFD9
 14457                           status	equ	0xFD8
 14458                           
 14459 ;; *************** function ___ftadd *****************
 14460 ;; Defined at:
 14461 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;  f1              3   27[BANK0 ] float 
 14464 ;;  f2              3   30[BANK0 ] float 
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;  exp1            1   38[BANK0 ] unsigned char 
 14467 ;;  exp2            1   37[BANK0 ] unsigned char 
 14468 ;;  sign            1   36[BANK0 ] unsigned char 
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  3   27[BANK0 ] float 
 14471 ;; Registers used:
 14472 ;;		wreg, status,2, status,0, cstack
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14478 ;;      Params:         0       6       0       0       0       0       0       0       0
 14479 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14480 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14481 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14482 ;;Total ram usage:       12 bytes
 14483 ;; Hardware stack levels used:    1
 14484 ;; Hardware stack levels required when called:    7
 14485 ;; This function calls:
 14486 ;;		___ftpack
 14487 ;; This function is called by:
 14488 ;;		_getSensors
 14489 ;; This function uses a non-reentrant model
 14490 ;;
 14491                           
 14492                           	psect	text16
 14493  00453E                     __ptext16:
 14494                           	opt stack 0
 14495  00453E                     ___ftadd:
 14496                           	opt stack 22
 14497                           
 14498                           ;incstack = 0
 14499  00453E  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14500  004542  0100               	movlb	0	; () banked
 14501  004544  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14502  004546  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14503  004548  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14504  00454A  3781               	rlcf	??___ftadd& (0+255),f,b
 14505  00454C  E301               	bnc	u12121
 14506  00454E  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14507  004550                     u12121:
 14508  004550  5181               	movf	??___ftadd& (0+255),w,b
 14509  004552  6F86               	movwf	___ftadd@exp1& (0+255),b
 14510  004554  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14511  004558  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14512  00455A  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14513  00455C  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14514  00455E  3781               	rlcf	??___ftadd& (0+255),f,b
 14515  004560  E301               	bnc	u12131
 14516  004562  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14517  004564                     u12131:
 14518  004564  5181               	movf	??___ftadd& (0+255),w,b
 14519  004566  6F85               	movwf	___ftadd@exp2& (0+255),b
 14520                           
 14521                           ; BSR set to: 0
 14522  004568  5186               	movf	___ftadd@exp1& (0+255),w,b
 14523  00456A  B4D8               	btfsc	status,2,c
 14524  00456C  D00B               	goto	u12160
 14525                           
 14526                           ; BSR set to: 0
 14527  00456E  5185               	movf	___ftadd@exp2& (0+255),w,b
 14528  004570  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14529  004572  B0D8               	btfsc	status,0,c
 14530  004574  D00E               	goto	l1931
 14531                           
 14532                           ; BSR set to: 0
 14533  004576  5186               	movf	___ftadd@exp1& (0+255),w,b
 14534  004578  0800               	sublw	0
 14535  00457A  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14536  00457C  6F81               	movwf	??___ftadd& (0+255),b
 14537  00457E  0E18               	movlw	24
 14538  004580  6581               	cpfsgt	??___ftadd& (0+255),b
 14539  004582  D007               	goto	l1931
 14540  004584                     u12160:
 14541                           
 14542                           ; BSR set to: 0
 14543  004584  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14544  004588  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14545  00458C  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14546  004590  0012               	return	
 14547  004592                     l1931:
 14548                           
 14549                           ; BSR set to: 0
 14550                           
 14551                           ; BSR set to: 0
 14552  004592  5185               	movf	___ftadd@exp2& (0+255),w,b
 14553  004594  B4D8               	btfsc	status,2,c
 14554  004596  D00B               	goto	u12190
 14555                           
 14556                           ; BSR set to: 0
 14557  004598  5186               	movf	___ftadd@exp1& (0+255),w,b
 14558  00459A  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14559  00459C  B0D8               	btfsc	status,0,c
 14560  00459E  D00E               	goto	l1935
 14561                           
 14562                           ; BSR set to: 0
 14563  0045A0  5185               	movf	___ftadd@exp2& (0+255),w,b
 14564  0045A2  0800               	sublw	0
 14565  0045A4  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14566  0045A6  6F81               	movwf	??___ftadd& (0+255),b
 14567  0045A8  0E18               	movlw	24
 14568  0045AA  6581               	cpfsgt	??___ftadd& (0+255),b
 14569  0045AC  D007               	goto	l1935
 14570  0045AE                     u12190:
 14571                           
 14572                           ; BSR set to: 0
 14573  0045AE  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14574  0045B2  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14575  0045B6  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14576  0045BA  0012               	return	
 14577  0045BC                     l1935:
 14578                           
 14579                           ; BSR set to: 0
 14580                           
 14581                           ; BSR set to: 0
 14582  0045BC  0E06               	movlw	6
 14583  0045BE  6F84               	movwf	___ftadd@sign& (0+255),b
 14584                           
 14585                           ; BSR set to: 0
 14586  0045C0  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14587                           
 14588                           ; BSR set to: 0
 14589  0045C2  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14590                           
 14591                           ; BSR set to: 0
 14592                           
 14593                           ; BSR set to: 0
 14594  0045C4  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14595                           
 14596                           ; BSR set to: 0
 14597  0045C6  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14598                           
 14599                           ; BSR set to: 0
 14600  0045C8  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14601                           
 14602                           ; BSR set to: 0
 14603  0045CA  0EFF               	movlw	255
 14604  0045CC  177B               	andwf	___ftadd@f1& (0+255),f,b
 14605  0045CE  0EFF               	movlw	255
 14606  0045D0  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14607  0045D2  0E00               	movlw	0
 14608  0045D4  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14609  0045D6  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14610                           
 14611                           ; BSR set to: 0
 14612  0045D8  0EFF               	movlw	255
 14613  0045DA  177E               	andwf	___ftadd@f2& (0+255),f,b
 14614  0045DC  0EFF               	movlw	255
 14615  0045DE  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14616  0045E0  0E00               	movlw	0
 14617  0045E2  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14618                           
 14619                           ; BSR set to: 0
 14620  0045E4  5185               	movf	___ftadd@exp2& (0+255),w,b
 14621  0045E6  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14622  0045E8  B0D8               	btfsc	status,0,c
 14623  0045EA  D01B               	goto	l1940
 14624  0045EC                     u12220:
 14625                           
 14626                           ; BSR set to: 0
 14627                           
 14628                           ; BSR set to: 0
 14629  0045EC  90D8               	bcf	status,0,c
 14630  0045EE  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14631  0045F0  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14632  0045F2  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14633  0045F4  0785               	decf	___ftadd@exp2& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636  0045F6  5186               	movf	___ftadd@exp1& (0+255),w,b
 14637  0045F8  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14638  0045FA  B4D8               	btfsc	status,2,c
 14639  0045FC  D00D               	goto	l1945
 14640                           
 14641                           ; BSR set to: 0
 14642  0045FE  0784               	decf	___ftadd@sign& (0+255),f,b
 14643  004600  C084  F081         	movff	___ftadd@sign,??___ftadd
 14644  004604  0E07               	movlw	7
 14645  004606  1781               	andwf	??___ftadd& (0+255),f,b
 14646  004608  B4D8               	btfsc	status,2,c
 14647  00460A  D006               	goto	l1945
 14648  00460C  D7EF               	goto	u12220
 14649  00460E                     
 14650                           ; BSR set to: 0
 14651                           
 14652                           ; BSR set to: 0
 14653  00460E  90D8               	bcf	status,0,c
 14654  004610  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14655  004612  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14656  004614  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14657  004616  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14658  004618                     l1945:
 14659                           
 14660                           ; BSR set to: 0
 14661                           
 14662                           ; BSR set to: 0
 14663  004618  5185               	movf	___ftadd@exp2& (0+255),w,b
 14664  00461A  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14665  00461C  B4D8               	btfsc	status,2,c
 14666  00461E  D01F               	goto	u12290
 14667  004620  D7F6               	goto	l1946
 14668  004622                     l1940:
 14669                           
 14670                           ; BSR set to: 0
 14671                           
 14672                           ; BSR set to: 0
 14673  004622  5186               	movf	___ftadd@exp1& (0+255),w,b
 14674  004624  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14675  004626  B0D8               	btfsc	status,0,c
 14676  004628  D01A               	goto	u12290
 14677  00462A                     u12260:
 14678                           
 14679                           ; BSR set to: 0
 14680                           
 14681                           ; BSR set to: 0
 14682  00462A  90D8               	bcf	status,0,c
 14683  00462C  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14684  00462E  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14685  004630  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14686  004632  0786               	decf	___ftadd@exp1& (0+255),f,b
 14687                           
 14688                           ; BSR set to: 0
 14689  004634  5186               	movf	___ftadd@exp1& (0+255),w,b
 14690  004636  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14691  004638  B4D8               	btfsc	status,2,c
 14692  00463A  D00D               	goto	l1954
 14693                           
 14694                           ; BSR set to: 0
 14695  00463C  0784               	decf	___ftadd@sign& (0+255),f,b
 14696  00463E  C084  F081         	movff	___ftadd@sign,??___ftadd
 14697  004642  0E07               	movlw	7
 14698  004644  1781               	andwf	??___ftadd& (0+255),f,b
 14699  004646  B4D8               	btfsc	status,2,c
 14700  004648  D006               	goto	l1954
 14701  00464A  D7EF               	goto	u12260
 14702  00464C                     
 14703                           ; BSR set to: 0
 14704                           
 14705                           ; BSR set to: 0
 14706  00464C  90D8               	bcf	status,0,c
 14707  00464E  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14708  004650  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14709  004652  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14710  004654  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14711  004656                     l1954:
 14712                           
 14713                           ; BSR set to: 0
 14714                           
 14715                           ; BSR set to: 0
 14716  004656  5185               	movf	___ftadd@exp2& (0+255),w,b
 14717  004658  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14718  00465A  A4D8               	btfss	status,2,c
 14719  00465C  D7F7               	goto	l1955
 14720  00465E                     u12290:
 14721                           
 14722                           ; BSR set to: 0
 14723                           
 14724                           ; BSR set to: 0
 14725                           
 14726                           ; BSR set to: 0
 14727  00465E  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14728  004660  D00C               	goto	l1957
 14729                           
 14730                           ; BSR set to: 0
 14731  004662  0EFF               	movlw	255
 14732  004664  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14733  004666  0EFF               	movlw	255
 14734  004668  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14735  00466A  0EFF               	movlw	255
 14736  00466C  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14737  00466E  0E01               	movlw	1
 14738  004670  277B               	addwf	___ftadd@f1& (0+255),f,b
 14739  004672  0E00               	movlw	0
 14740  004674  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14741  004676  0E00               	movlw	0
 14742  004678  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14743  00467A                     l1957:
 14744                           
 14745                           ; BSR set to: 0
 14746  00467A  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14747  00467C  D00C               	goto	l1958
 14748                           
 14749                           ; BSR set to: 0
 14750  00467E  0EFF               	movlw	255
 14751  004680  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14752  004682  0EFF               	movlw	255
 14753  004684  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14754  004686  0EFF               	movlw	255
 14755  004688  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14756  00468A  0E01               	movlw	1
 14757  00468C  277E               	addwf	___ftadd@f2& (0+255),f,b
 14758  00468E  0E00               	movlw	0
 14759  004690  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14760  004692  0E00               	movlw	0
 14761  004694  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14762  004696                     l1958:
 14763                           
 14764                           ; BSR set to: 0
 14765                           
 14766                           ; BSR set to: 0
 14767  004696  0E00               	movlw	0
 14768  004698  6F84               	movwf	___ftadd@sign& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  00469A  517B               	movf	___ftadd@f1& (0+255),w,b
 14772  00469C  277E               	addwf	___ftadd@f2& (0+255),f,b
 14773  00469E  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14774  0046A0  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14775  0046A2  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14776  0046A4  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14777                           
 14778                           ; BSR set to: 0
 14779  0046A6  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14780  0046A8  D00E               	goto	l1959
 14781                           
 14782                           ; BSR set to: 0
 14783  0046AA  0EFF               	movlw	255
 14784  0046AC  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14785  0046AE  0EFF               	movlw	255
 14786  0046B0  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14787  0046B2  0EFF               	movlw	255
 14788  0046B4  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14789  0046B6  0E01               	movlw	1
 14790  0046B8  277E               	addwf	___ftadd@f2& (0+255),f,b
 14791  0046BA  0E00               	movlw	0
 14792  0046BC  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14793  0046BE  0E00               	movlw	0
 14794  0046C0  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14795                           
 14796                           ; BSR set to: 0
 14797  0046C2  0E01               	movlw	1
 14798  0046C4  6F84               	movwf	___ftadd@sign& (0+255),b
 14799  0046C6                     l1959:
 14800                           
 14801                           ; BSR set to: 0
 14802                           
 14803                           ; BSR set to: 0
 14804  0046C6  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14805  0046CA  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14806  0046CE  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14807  0046D2  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14808  0046D6  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14809  0046DA  EC66  F028         	call	___ftpack	;wreg free
 14810  0046DE  C060  F07B         	movff	?___ftpack,?___ftadd
 14811  0046E2  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14812  0046E6  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14813  0046EA  0012               	return	
 14814  0046EC                     __end_of___ftadd:
 14815                           	opt stack 0
 14816                           tblptru	equ	0xFF8
 14817                           tblptrh	equ	0xFF7
 14818                           tblptrl	equ	0xFF6
 14819                           tablat	equ	0xFF5
 14820                           prodh	equ	0xFF4
 14821                           prodl	equ	0xFF3
 14822                           intcon	equ	0xFF2
 14823                           intcon2	equ	0xFF1
 14824                           intcon3	equ	0xFF0
 14825                           postinc0	equ	0xFEE
 14826                           wreg	equ	0xFE8
 14827                           postdec1	equ	0xFE5
 14828                           fsr1l	equ	0xFE1
 14829                           indf2	equ	0xFDF
 14830                           postinc2	equ	0xFDE
 14831                           postdec2	equ	0xFDD
 14832                           fsr2h	equ	0xFDA
 14833                           fsr2l	equ	0xFD9
 14834                           status	equ	0xFD8
 14835                           
 14836 ;; *************** function ___ftpack *****************
 14837 ;; Defined at:
 14838 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14839 ;; Parameters:    Size  Location     Type
 14840 ;;  arg             3    0[BANK0 ] unsigned um
 14841 ;;  exp             1    3[BANK0 ] unsigned char 
 14842 ;;  sign            1    4[BANK0 ] unsigned char 
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;		None
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  3    0[BANK0 ] float 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2, status,0
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14854 ;;      Params:         0       5       0       0       0       0       0       0       0
 14855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14856 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14857 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14858 ;;Total ram usage:        8 bytes
 14859 ;; Hardware stack levels used:    1
 14860 ;; Hardware stack levels required when called:    6
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		___ftadd
 14865 ;;		___ftdiv
 14866 ;;		___ftmul
 14867 ;;		___lwtoft
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871                           	psect	text17
 14872  0050CC                     __ptext17:
 14873                           	opt stack 0
 14874  0050CC                     ___ftpack:
 14875                           	opt stack 22
 14876                           
 14877                           ;incstack = 0
 14878  0050CC  0100               	movlb	0	; () banked
 14879  0050CE  5163               	movf	___ftpack@exp& (0+255),w,b
 14880  0050D0  B4D8               	btfsc	status,2,c
 14881  0050D2  D005               	goto	u8620
 14882                           
 14883                           ; BSR set to: 0
 14884  0050D4  5160               	movf	___ftpack@arg& (0+255),w,b
 14885  0050D6  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14886  0050D8  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14887  0050DA  A4D8               	btfss	status,2,c
 14888  0050DC  D00C               	goto	l1900
 14889  0050DE                     u8620:
 14890                           
 14891                           ; BSR set to: 0
 14892                           
 14893                           ; BSR set to: 0
 14894  0050DE  0E00               	movlw	0
 14895  0050E0  6F60               	movwf	?___ftpack& (0+255),b
 14896  0050E2  0E00               	movlw	0
 14897  0050E4  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14898  0050E6  0E00               	movlw	0
 14899  0050E8  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14900                           
 14901                           ; BSR set to: 0
 14902  0050EA  0012               	return	
 14903  0050EC                     
 14904                           ; BSR set to: 0
 14905                           
 14906                           ; BSR set to: 0
 14907  0050EC  2B63               	incf	___ftpack@exp& (0+255),f,b
 14908  0050EE  90D8               	bcf	status,0,c
 14909  0050F0  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14910  0050F2  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14911  0050F4  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14912  0050F6                     l1900:
 14913                           
 14914                           ; BSR set to: 0
 14915                           
 14916                           ; BSR set to: 0
 14917  0050F6  0E00               	movlw	0
 14918  0050F8  1560               	andwf	___ftpack@arg& (0+255),w,b
 14919  0050FA  6F65               	movwf	??___ftpack& (0+255),b
 14920  0050FC  0E00               	movlw	0
 14921  0050FE  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14922  005100  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14923  005102  0EFE               	movlw	254
 14924  005104  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14925  005106  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14926  005108  5165               	movf	??___ftpack& (0+255),w,b
 14927  00510A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14928  00510C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14929  00510E  B4D8               	btfsc	status,2,c
 14930  005110  D00C               	goto	l1903
 14931  005112  D7EC               	goto	l1901
 14932  005114                     
 14933                           ; BSR set to: 0
 14934                           
 14935                           ; BSR set to: 0
 14936  005114  2B63               	incf	___ftpack@exp& (0+255),f,b
 14937                           
 14938                           ; BSR set to: 0
 14939  005116  0E01               	movlw	1
 14940  005118  2760               	addwf	___ftpack@arg& (0+255),f,b
 14941  00511A  0E00               	movlw	0
 14942  00511C  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14943  00511E  0E00               	movlw	0
 14944  005120  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14945  005122  90D8               	bcf	status,0,c
 14946  005124  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14947  005126  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14948  005128  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14949  00512A                     l1903:
 14950                           
 14951                           ; BSR set to: 0
 14952                           
 14953                           ; BSR set to: 0
 14954  00512A  0E00               	movlw	0
 14955  00512C  1560               	andwf	___ftpack@arg& (0+255),w,b
 14956  00512E  6F65               	movwf	??___ftpack& (0+255),b
 14957  005130  0E00               	movlw	0
 14958  005132  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14959  005134  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14960  005136  0EFF               	movlw	255
 14961  005138  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14962  00513A  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14963  00513C  5165               	movf	??___ftpack& (0+255),w,b
 14964  00513E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14965  005140  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14966  005142  B4D8               	btfsc	status,2,c
 14967  005144  D006               	goto	l1906
 14968  005146  D7E6               	goto	l1904
 14969  005148                     
 14970                           ; BSR set to: 0
 14971                           
 14972                           ; BSR set to: 0
 14973  005148  0763               	decf	___ftpack@exp& (0+255),f,b
 14974  00514A  90D8               	bcf	status,0,c
 14975  00514C  3760               	rlcf	___ftpack@arg& (0+255),f,b
 14976  00514E  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14977  005150  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14978  005152                     l1906:
 14979                           
 14980                           ; BSR set to: 0
 14981                           
 14982                           ; BSR set to: 0
 14983  005152  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14984  005154  D003               	goto	u8660
 14985                           
 14986                           ; BSR set to: 0
 14987  005156  0E02               	movlw	2
 14988  005158  6163               	cpfslt	___ftpack@exp& (0+255),b
 14989  00515A  D7F6               	goto	l1907
 14990  00515C                     u8660:
 14991                           
 14992                           ; BSR set to: 0
 14993                           
 14994                           ; BSR set to: 0
 14995  00515C  A163               	btfss	___ftpack@exp& (0+255),0,b
 14996                           
 14997                           ; BSR set to: 0
 14998  00515E  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14999                           
 15000                           ; BSR set to: 0
 15001                           
 15002                           ; BSR set to: 0
 15003  005160  90D8               	bcf	status,0,c
 15004  005162  3363               	rrcf	___ftpack@exp& (0+255),f,b
 15005  005164  5163               	movf	___ftpack@exp& (0+255),w,b
 15006  005166  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 15007                           
 15008                           ; BSR set to: 0
 15009  005168  5164               	movf	___ftpack@sign& (0+255),w,b
 15010  00516A  A4D8               	btfss	status,2,c
 15011                           
 15012                           ; BSR set to: 0
 15013  00516C  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 15014                           
 15015                           ; BSR set to: 0
 15016                           
 15017                           ; BSR set to: 0
 15018  00516E  C060  F060         	movff	___ftpack@arg,?___ftpack
 15019  005172  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 15020  005176  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 15021  00517A  0012               	return	
 15022  00517C                     __end_of___ftpack:
 15023                           	opt stack 0
 15024                           tblptru	equ	0xFF8
 15025                           tblptrh	equ	0xFF7
 15026                           tblptrl	equ	0xFF6
 15027                           tablat	equ	0xFF5
 15028                           prodh	equ	0xFF4
 15029                           prodl	equ	0xFF3
 15030                           intcon	equ	0xFF2
 15031                           intcon2	equ	0xFF1
 15032                           intcon3	equ	0xFF0
 15033                           postinc0	equ	0xFEE
 15034                           wreg	equ	0xFE8
 15035                           postdec1	equ	0xFE5
 15036                           fsr1l	equ	0xFE1
 15037                           indf2	equ	0xFDF
 15038                           postinc2	equ	0xFDE
 15039                           postdec2	equ	0xFDD
 15040                           fsr2h	equ	0xFDA
 15041                           fsr2l	equ	0xFD9
 15042                           status	equ	0xFD8
 15043                           
 15044 ;; *************** function _faseAtual *****************
 15045 ;; Defined at:
 15046 ;;		line 8 in file "src/FuncoesControlador.h"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;  tp              1    wreg     unsigned char 
 15049 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 15050 ;;		 -> fase(1), 
 15051 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 15052 ;;		 -> tempajt(1), 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  tp              1    5[BANK0 ] unsigned char 
 15055 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 15056 ;;  _fasee          1    4[BANK0 ] unsigned char 
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  2    0[BANK0 ] PTR unsigned char 
 15059 ;; Registers used:
 15060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15066 ;;      Params:         0       4       0       0       0       0       0       0       0
 15067 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15069 ;;      Totals:         0       7       0       0       0       0       0       0       0
 15070 ;;Total ram usage:        7 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:    6
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_main
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text18
 15081  0046EC                     __ptext18:
 15082                           	opt stack 0
 15083  0046EC                     _faseAtual:
 15084                           	opt stack 24
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;incstack = 0
 15088                           ;faseAtual@tp stored from wreg
 15089  0046EC  0100               	movlb	0	; () banked
 15090  0046EE  6F65               	movwf	faseAtual@tp& (0+255),b
 15091                           
 15092                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 15093  0046F0  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15094  0046F4  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15095  0046F8  50DF               	movf	indf2,w,c
 15096  0046FA  0100               	movlb	0	; () banked
 15097  0046FC  6F64               	movwf	faseAtual@_fasee& (0+255),b
 15098                           
 15099                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 15100  0046FE  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15101  004702  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15102  004706  50DF               	movf	indf2,w,c
 15103  004708  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;FuncoesControlador.h: 11: if (tp == '?') {
 15107  00470A  0E3F               	movlw	63
 15108  00470C  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15109  00470E  B4D8               	btfsc	status,2,c
 15110  004710  D01A               	goto	l877
 15111  004712  D027               	goto	l876
 15112  004714                     
 15113                           ; BSR set to: 0
 15114                           
 15115                           ; BSR set to: 0
 15116  004714  0ECB               	movlw	low STR_1
 15117  004716  6F60               	movwf	?_faseAtual& (0+255),b
 15118  004718  0E7E               	movlw	high STR_1
 15119  00471A  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15120                           
 15121                           ; BSR set to: 0
 15122  00471C  0012               	return	
 15123  00471E                     
 15124                           ; BSR set to: 0
 15125                           
 15126                           ; BSR set to: 0
 15127  00471E  0EA9               	movlw	low STR_2
 15128  004720  6F60               	movwf	?_faseAtual& (0+255),b
 15129  004722  0E7E               	movlw	high STR_2
 15130  004724  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15131                           
 15132                           ; BSR set to: 0
 15133  004726  0012               	return	
 15134  004728                     
 15135                           ; BSR set to: 0
 15136                           
 15137                           ; BSR set to: 0
 15138  004728  0EC0               	movlw	low STR_3
 15139  00472A  6F60               	movwf	?_faseAtual& (0+255),b
 15140  00472C  0E7E               	movlw	high STR_3
 15141  00472E  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15142                           
 15143                           ; BSR set to: 0
 15144  004730  0012               	return	
 15145  004732                     
 15146                           ; BSR set to: 0
 15147                           
 15148                           ; BSR set to: 0
 15149  004732  0E01               	movlw	low STR_4
 15150  004734  6F60               	movwf	?_faseAtual& (0+255),b
 15151  004736  0E7F               	movlw	high STR_4
 15152  004738  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15153                           
 15154                           ; BSR set to: 0
 15155  00473A  0012               	return	
 15156  00473C                     
 15157                           ; BSR set to: 0
 15158                           
 15159                           ; BSR set to: 0
 15160  00473C  0ED6               	movlw	low STR_5
 15161  00473E  6F60               	movwf	?_faseAtual& (0+255),b
 15162  004740  0E7F               	movlw	high STR_5
 15163  004742  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;FuncoesControlador.h: 18: }
 15167                           
 15168                           ; BSR set to: 0
 15169  004744  0012               	return	
 15170  004746                     l877:
 15171                           
 15172                           ; BSR set to: 0
 15173                           
 15174                           ; BSR set to: 0
 15175  004746  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15176                           
 15177                           ; Switch size 1, requested type "space"
 15178                           ; Number of cases is 4, Range of values is 1 to 4
 15179                           ; switch strategies available:
 15180                           ; Name         Instructions Cycles
 15181                           ; simple_byte           13     7 (average)
 15182                           ;	Chosen strategy is simple_byte
 15183  004748  0A01               	xorlw	1	; case 1
 15184  00474A  B4D8               	btfsc	status,2,c
 15185  00474C  D7E3               	goto	l878
 15186  00474E  0A03               	xorlw	3	; case 2
 15187  004750  B4D8               	btfsc	status,2,c
 15188  004752  D7E5               	goto	l880
 15189  004754  0A01               	xorlw	1	; case 3
 15190  004756  B4D8               	btfsc	status,2,c
 15191  004758  D7E7               	goto	l881
 15192  00475A  0A07               	xorlw	7	; case 4
 15193  00475C  B4D8               	btfsc	status,2,c
 15194  00475E  D7E9               	goto	l882
 15195  004760  D7ED               	goto	l883
 15196  004762                     l876:
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15200                           
 15201                           ; BSR set to: 0
 15202  004762  0E46               	movlw	70
 15203  004764  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15204  004766  A4D8               	btfss	status,2,c
 15205  004768  D031               	goto	l886
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15209  00476A  0E65               	movlw	101
 15210  00476C  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15211  00476E  D007               	goto	l887
 15212                           
 15213                           ; BSR set to: 0
 15214  004770  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15215  004774  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15216  004778  0E01               	movlw	1
 15217  00477A  6EDF               	movwf	indf2,c
 15218  00477C  0012               	return	
 15219  00477E                     l887:
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15223                           
 15224                           ; BSR set to: 0
 15225  00477E  0E64               	movlw	100
 15226  004780  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15227  004782  D00A               	goto	l889
 15228                           
 15229                           ; BSR set to: 0
 15230  004784  0E6F               	movlw	111
 15231  004786  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15232  004788  D007               	goto	l889
 15233                           
 15234                           ; BSR set to: 0
 15235  00478A  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15236  00478E  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15237  004792  0E02               	movlw	2
 15238  004794  6EDF               	movwf	indf2,c
 15239  004796  0012               	return	
 15240  004798                     l889:
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15244                           
 15245                           ; BSR set to: 0
 15246  004798  0E6E               	movlw	110
 15247  00479A  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15248  00479C  D00A               	goto	l891
 15249                           
 15250                           ; BSR set to: 0
 15251  00479E  0E86               	movlw	134
 15252  0047A0  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15253  0047A2  D007               	goto	l891
 15254                           
 15255                           ; BSR set to: 0
 15256  0047A4  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15257  0047A8  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15258  0047AC  0E03               	movlw	3
 15259  0047AE  6EDF               	movwf	indf2,c
 15260  0047B0  0012               	return	
 15261  0047B2                     l891:
 15262                           
 15263                           ; BSR set to: 0
 15264                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15265                           
 15266                           ; BSR set to: 0
 15267  0047B2  0E85               	movlw	133
 15268  0047B4  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15269  0047B6  0012               	return	
 15270                           
 15271                           ; BSR set to: 0
 15272  0047B8  0EA1               	movlw	161
 15273  0047BA  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15274  0047BC  0012               	return	
 15275                           
 15276                           ; BSR set to: 0
 15277  0047BE  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15278  0047C2  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15279  0047C6  0E04               	movlw	4
 15280  0047C8  6EDF               	movwf	indf2,c
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;FuncoesControlador.h: 25: } else
 15284                           
 15285                           ; BSR set to: 0
 15286                           
 15287                           ; BSR set to: 0
 15288                           
 15289                           ; BSR set to: 0
 15290  0047CA  0012               	return	
 15291  0047CC                     l886:
 15292                           
 15293                           ; BSR set to: 0
 15294                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15295                           
 15296                           ; BSR set to: 0
 15297  0047CC  0E41               	movlw	65
 15298  0047CE  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15299  0047D0  A4D8               	btfss	status,2,c
 15300  0047D2  0012               	return	
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15304  0047D4  05F8               	decf	_fase& (0+255),w,b
 15305  0047D6  A4D8               	btfss	status,2,c
 15306  0047D8  D007               	goto	l896
 15307                           
 15308                           ; BSR set to: 0
 15309  0047DA  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15310  0047DE  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15311  0047E2  0E55               	movlw	85
 15312  0047E4  6EDF               	movwf	indf2,c
 15313  0047E6  0012               	return	
 15314  0047E8                     l896:
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15318                           
 15319                           ; BSR set to: 0
 15320  0047E8  0E02               	movlw	2
 15321  0047EA  19F8               	xorwf	_fase& (0+255),w,b
 15322  0047EC  A4D8               	btfss	status,2,c
 15323  0047EE  D007               	goto	l898
 15324                           
 15325                           ; BSR set to: 0
 15326  0047F0  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15327  0047F4  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15328  0047F8  0E65               	movlw	101
 15329  0047FA  6EDF               	movwf	indf2,c
 15330  0047FC  0012               	return	
 15331  0047FE                     l898:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15335                           
 15336                           ; BSR set to: 0
 15337  0047FE  0E03               	movlw	3
 15338  004800  19F8               	xorwf	_fase& (0+255),w,b
 15339  004802  A4D8               	btfss	status,2,c
 15340  004804  D007               	goto	l900
 15341                           
 15342                           ; BSR set to: 0
 15343  004806  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15344  00480A  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15345  00480E  0E6F               	movlw	111
 15346  004810  6EDF               	movwf	indf2,c
 15347  004812  0012               	return	
 15348  004814                     l900:
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15352                           
 15353                           ; BSR set to: 0
 15354  004814  0E04               	movlw	4
 15355  004816  19F8               	xorwf	_fase& (0+255),w,b
 15356  004818  A4D8               	btfss	status,2,c
 15357  00481A  0012               	return	
 15358                           
 15359                           ; BSR set to: 0
 15360  00481C  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15361  004820  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15362  004824  0E86               	movlw	134
 15363  004826  6EDF               	movwf	indf2,c
 15364                           
 15365                           ; BSR set to: 0
 15366                           
 15367                           ; BSR set to: 0
 15368                           
 15369                           ; BSR set to: 0
 15370                           
 15371                           ; BSR set to: 0
 15372                           
 15373                           ; BSR set to: 0
 15374                           
 15375                           ; BSR set to: 0
 15376  004828  0012               	return	
 15377  00482A                     __end_of_faseAtual:
 15378                           	opt stack 0
 15379                           tblptru	equ	0xFF8
 15380                           tblptrh	equ	0xFF7
 15381                           tblptrl	equ	0xFF6
 15382                           tablat	equ	0xFF5
 15383                           prodh	equ	0xFF4
 15384                           prodl	equ	0xFF3
 15385                           intcon	equ	0xFF2
 15386                           intcon2	equ	0xFF1
 15387                           intcon3	equ	0xFF0
 15388                           postinc0	equ	0xFEE
 15389                           wreg	equ	0xFE8
 15390                           postdec1	equ	0xFE5
 15391                           fsr1l	equ	0xFE1
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           fsr2h	equ	0xFDA
 15396                           fsr2l	equ	0xFD9
 15397                           status	equ	0xFD8
 15398                           
 15399 ;; *************** function _enviaDadosWifi *****************
 15400 ;; Defined at:
 15401 ;;		line 132 in file "src/conexaoWifi.h"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  i               1  121[BANK0 ] unsigned char 
 15406 ;;  men             1  119[BANK0 ] unsigned char 
 15407 ;;  j               1  118[BANK0 ] unsigned char 
 15408 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15409 ;;  i               1  120[BANK0 ] unsigned char 
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      void 
 15412 ;; Registers used:
 15413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15419 ;;      Params:         0       0       0       0       0       0       0       0       0
 15420 ;;      Locals:         0      21       0       0       0       0       0       0       0
 15421 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15422 ;;      Totals:         0      23       0       0       0       0       0       0       0
 15423 ;;Total ram usage:       23 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:   10
 15426 ;; This function calls:
 15427 ;;		___wmul
 15428 ;;		_delay
 15429 ;;		_findBufferSerial
 15430 ;;		_printf
 15431 ;;		_setKeyStartReceiveSerial
 15432 ;;		_sprintf
 15433 ;;		_strlen
 15434 ;; This function is called by:
 15435 ;;		_main
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           	psect	text19
 15440  002BA6                     __ptext19:
 15441                           	opt stack 0
 15442  002BA6                     _enviaDadosWifi:
 15443                           	opt stack 20
 15444                           
 15445                           ;conexaoWifi.h: 133: if (t_wifi_restart == 0) {
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;incstack = 0
 15449  002BA6  503C               	movf	_t_wifi_restart,w,c
 15450  002BA8  A4D8               	btfss	status,2,c
 15451  002BAA  D005               	goto	l1008
 15452                           
 15453                           ;conexaoWifi.h: 134: f_wifi_processo = 0;
 15454  002BAC  0E00               	movlw	0
 15455  002BAE  6E3B               	movwf	_f_wifi_processo,c
 15456                           
 15457                           ;conexaoWifi.h: 135: t_wifi_restart = 10;
 15458  002BB0  0E0A               	movlw	10
 15459  002BB2  6E3C               	movwf	_t_wifi_restart,c
 15460                           
 15461                           ;conexaoWifi.h: 136: } else if (strlen(wifi_MAC) == 12) {
 15462  002BB4  0012               	return	
 15463  002BB6                     l1008:
 15464  002BB6  0EE6               	movlw	low _wifi_MAC
 15465  002BB8  0100               	movlb	0	; () banked
 15466  002BBA  6F60               	movwf	strlen@s& (0+255),b
 15467  002BBC  0E01               	movlw	high _wifi_MAC
 15468  002BBE  6F61               	movwf	(strlen@s+1)& (0+255),b
 15469  002BC0  EC3D  F02C         	call	_strlen	;wreg free
 15470  002BC4  0E0C               	movlw	12
 15471  002BC6  0100               	movlb	0	; () banked
 15472  002BC8  1960               	xorwf	?_strlen& (0+255),w,b
 15473  002BCA  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15474  002BCC  B4D8               	btfsc	status,2,c
 15475  002BCE  D1B2               	goto	l1011
 15476  002BD0  D27E               	goto	l1042
 15477  002BD2                     
 15478                           ;conexaoWifi.h: 139: setKeyStartReceiveSerial("ALL");
 15479                           
 15480                           ; BSR set to: 0
 15481  002BD2  0EE2               	movlw	low STR_10
 15482  002BD4  0100               	movlb	0	; () banked
 15483  002BD6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15484  002BD8  0E7F               	movlw	high STR_10
 15485  002BDA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15486  002BDC  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15487                           
 15488                           ;conexaoWifi.h: 140: printf("AT+CWMODE=1\r\n");
 15489  002BE0  0E3D               	movlw	low STR_50
 15490  002BE2  0100               	movlb	0	; () banked
 15491  002BE4  6F81               	movwf	printf@f& (0+255),b
 15492  002BE6  0E7E               	movlw	high STR_50
 15493  002BE8  6F82               	movwf	(printf@f+1)& (0+255),b
 15494  002BEA  EC8C  F02D         	call	_printf	;wreg free
 15495                           
 15496                           ;conexaoWifi.h: 141: wifi_conectado = 0;
 15497  002BEE  0E00               	movlw	0
 15498  002BF0  6E47               	movwf	_wifi_conectado,c
 15499                           
 15500                           ;conexaoWifi.h: 142: f_wifi_processo++;
 15501  002BF2  2A3B               	incf	_f_wifi_processo,f,c
 15502                           
 15503                           ;conexaoWifi.h: 143: break;
 15504  002BF4  0012               	return	
 15505  002BF6                     
 15506                           ;conexaoWifi.h: 145: if (findBufferSerial("OK")) {
 15507  002BF6  0EEF               	movlw	low STR_12
 15508  002BF8  0100               	movlb	0	; () banked
 15509  002BFA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15510  002BFC  0E7F               	movlw	high STR_12
 15511  002BFE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15512  002C00  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15513  002C04  0900               	iorlw	0
 15514  002C06  B4D8               	btfsc	status,2,c
 15515  002C08  0012               	return	
 15516                           
 15517                           ;conexaoWifi.h: 146: setKeyStartReceiveSerial("ALL");
 15518  002C0A  0EE2               	movlw	low STR_10
 15519  002C0C  0100               	movlb	0	; () banked
 15520  002C0E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15521  002C10  0E7F               	movlw	high STR_10
 15522  002C12  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15523  002C14  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15524                           
 15525                           ;conexaoWifi.h: 147: printf("AT+CIPMUX=0\r\n");
 15526  002C18  0E2F               	movlw	low STR_53
 15527  002C1A  0100               	movlb	0	; () banked
 15528  002C1C  6F81               	movwf	printf@f& (0+255),b
 15529  002C1E  0E7E               	movlw	high STR_53
 15530  002C20  6F82               	movwf	(printf@f+1)& (0+255),b
 15531  002C22  EC8C  F02D         	call	_printf	;wreg free
 15532                           
 15533                           ;conexaoWifi.h: 148: f_wifi_processo++;
 15534  002C26  2A3B               	incf	_f_wifi_processo,f,c
 15535                           
 15536                           ;conexaoWifi.h: 149: }
 15537                           ;conexaoWifi.h: 150: break;
 15538  002C28  0012               	return	
 15539  002C2A                     
 15540                           ;conexaoWifi.h: 152: if (findBufferSerial("OK") || findBufferSerial("link")) {
 15541  002C2A  0EEF               	movlw	low STR_12
 15542  002C2C  0100               	movlb	0	; () banked
 15543  002C2E  6F74               	movwf	findBufferSerial@key& (0+255),b
 15544  002C30  0E7F               	movlw	high STR_12
 15545  002C32  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15546  002C34  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15547  002C38  0900               	iorlw	0
 15548  002C3A  A4D8               	btfss	status,2,c
 15549  002C3C  D00A               	goto	u13210
 15550  002C3E  0ECC               	movlw	low STR_55
 15551  002C40  0100               	movlb	0	; () banked
 15552  002C42  6F74               	movwf	findBufferSerial@key& (0+255),b
 15553  002C44  0E7F               	movlw	high STR_55
 15554  002C46  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15555  002C48  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15556  002C4C  0900               	iorlw	0
 15557  002C4E  B4D8               	btfsc	status,2,c
 15558  002C50  0012               	return	
 15559  002C52                     u13210:
 15560                           
 15561                           ;conexaoWifi.h: 153: setKeyStartReceiveSerial("ALL");
 15562  002C52  0EE2               	movlw	low STR_10
 15563  002C54  0100               	movlb	0	; () banked
 15564  002C56  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15565  002C58  0E7F               	movlw	high STR_10
 15566  002C5A  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15567  002C5C  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15568                           
 15569                           ;conexaoWifi.h: 154: delay(10);
 15570  002C60  0E00               	movlw	0
 15571  002C62  0100               	movlb	0	; () banked
 15572  002C64  6F61               	movwf	(delay@x+1)& (0+255),b
 15573  002C66  0E0A               	movlw	10
 15574  002C68  6F60               	movwf	delay@x& (0+255),b
 15575  002C6A  EC86  F02E         	call	_delay	;wreg free
 15576                           
 15577                           ;conexaoWifi.h: 155: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15578  002C6E  0EF1               	movlw	low STR_57
 15579  002C70  0100               	movlb	0	; () banked
 15580  002C72  6F81               	movwf	printf@f& (0+255),b
 15581  002C74  0E7B               	movlw	high STR_57
 15582  002C76  6F82               	movwf	(printf@f+1)& (0+255),b
 15583  002C78  0ECD               	movlw	low _ssid
 15584  002C7A  6F83               	movwf	(?_printf+2)& (0+255),b
 15585  002C7C  0E01               	movlw	high _ssid
 15586  002C7E  6F84               	movwf	(?_printf+3)& (0+255),b
 15587  002C80  0EBE               	movlw	low _senha
 15588  002C82  6F85               	movwf	(?_printf+4)& (0+255),b
 15589  002C84  0E01               	movlw	high _senha
 15590  002C86  6F86               	movwf	(?_printf+5)& (0+255),b
 15591  002C88  EC8C  F02D         	call	_printf	;wreg free
 15592                           
 15593                           ;conexaoWifi.h: 156: f_wifi_processo++;
 15594  002C8C  2A3B               	incf	_f_wifi_processo,f,c
 15595                           
 15596                           ;conexaoWifi.h: 157: t_wifi_restart = 35;
 15597  002C8E  0E23               	movlw	35
 15598  002C90  6E3C               	movwf	_t_wifi_restart,c
 15599                           
 15600                           ;conexaoWifi.h: 158: }
 15601                           ;conexaoWifi.h: 159: break;
 15602  002C92  0012               	return	
 15603  002C94                     
 15604                           ;conexaoWifi.h: 161: if (t_wifi_restart <= 15) {
 15605  002C94  0E10               	movlw	16
 15606  002C96  603C               	cpfslt	_t_wifi_restart,c
 15607  002C98  0012               	return	
 15608                           
 15609                           ;conexaoWifi.h: 162: setKeyStartReceiveSerial("ALL");
 15610  002C9A  0EE2               	movlw	low STR_10
 15611  002C9C  0100               	movlb	0	; () banked
 15612  002C9E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15613  002CA0  0E7F               	movlw	high STR_10
 15614  002CA2  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15615  002CA4  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15616                           
 15617                           ;conexaoWifi.h: 163: printf("AT+CIPSTATUS\r\n");
 15618  002CA8  0E02               	movlw	low STR_59
 15619  002CAA  0100               	movlb	0	; () banked
 15620  002CAC  6F81               	movwf	printf@f& (0+255),b
 15621  002CAE  0E7E               	movlw	high STR_59
 15622  002CB0  6F82               	movwf	(printf@f+1)& (0+255),b
 15623  002CB2  EC8C  F02D         	call	_printf	;wreg free
 15624                           
 15625                           ;conexaoWifi.h: 164: f_wifi_processo++;
 15626  002CB6  2A3B               	incf	_f_wifi_processo,f,c
 15627                           
 15628                           ;conexaoWifi.h: 165: }
 15629                           ;conexaoWifi.h: 166: break;
 15630  002CB8  0012               	return	
 15631  002CBA                     
 15632                           ;conexaoWifi.h: 168: if (findBufferSerial("2") || findBufferSerial("4")) {
 15633  002CBA  0EFB               	movlw	low STR_60
 15634  002CBC  0100               	movlb	0	; () banked
 15635  002CBE  6F74               	movwf	findBufferSerial@key& (0+255),b
 15636  002CC0  0E7F               	movlw	high STR_60
 15637  002CC2  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15638  002CC4  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15639  002CC8  0900               	iorlw	0
 15640  002CCA  A4D8               	btfss	status,2,c
 15641  002CCC  D00A               	goto	u13240
 15642  002CCE  0EFD               	movlw	low STR_61
 15643  002CD0  0100               	movlb	0	; () banked
 15644  002CD2  6F74               	movwf	findBufferSerial@key& (0+255),b
 15645  002CD4  0E7F               	movlw	high STR_61
 15646  002CD6  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15647  002CD8  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15648  002CDC  0900               	iorlw	0
 15649  002CDE  B4D8               	btfsc	status,2,c
 15650  002CE0  0012               	return	
 15651  002CE2                     u13240:
 15652                           
 15653                           ;conexaoWifi.h: 169: setKeyStartReceiveSerial("ALL");
 15654  002CE2  0EE2               	movlw	low STR_10
 15655  002CE4  0100               	movlb	0	; () banked
 15656  002CE6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15657  002CE8  0E7F               	movlw	high STR_10
 15658  002CEA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15659  002CEC  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15660                           
 15661                           ;conexaoWifi.h: 170: printf("AT+CIPSTART=\"TCP\",\"%s\",%d\r\n", ipServer, portServer);
 15662  002CF0  0EA9               	movlw	low STR_63
 15663  002CF2  0100               	movlb	0	; () banked
 15664  002CF4  6F81               	movwf	printf@f& (0+255),b
 15665  002CF6  0E7B               	movlw	high STR_63
 15666  002CF8  6F82               	movwf	(printf@f+1)& (0+255),b
 15667  002CFA  0EAA               	movlw	low _ipServer
 15668  002CFC  6F83               	movwf	(?_printf+2)& (0+255),b
 15669  002CFE  0E01               	movlw	high _ipServer
 15670  002D00  6F84               	movwf	(?_printf+3)& (0+255),b
 15671  002D02  C033  F085         	movff	_portServer,?_printf+4
 15672  002D06  C034  F086         	movff	_portServer+1,?_printf+5
 15673  002D0A  EC8C  F02D         	call	_printf	;wreg free
 15674                           
 15675                           ;conexaoWifi.h: 171: wifi_conectado = 1;
 15676  002D0E  0E01               	movlw	1
 15677  002D10  6E47               	movwf	_wifi_conectado,c
 15678                           
 15679                           ;conexaoWifi.h: 172: f_wifi_processo++;
 15680  002D12  2A3B               	incf	_f_wifi_processo,f,c
 15681                           
 15682                           ;conexaoWifi.h: 173: }
 15683                           ;conexaoWifi.h: 174: break;
 15684  002D14  0012               	return	
 15685  002D16                     
 15686                           ;conexaoWifi.h: 176: if (findBufferSerial("OK")) {
 15687  002D16  0EEF               	movlw	low STR_12
 15688  002D18  0100               	movlb	0	; () banked
 15689  002D1A  6F74               	movwf	findBufferSerial@key& (0+255),b
 15690  002D1C  0E7F               	movlw	high STR_12
 15691  002D1E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15692  002D20  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15693  002D24  0900               	iorlw	0
 15694  002D26  B4D8               	btfsc	status,2,c
 15695  002D28  0012               	return	
 15696                           
 15697                           ;conexaoWifi.h: 177: setKeyStartReceiveSerial("ALL");
 15698  002D2A  0EE2               	movlw	low STR_10
 15699  002D2C  0100               	movlb	0	; () banked
 15700  002D2E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15701  002D30  0E7F               	movlw	high STR_10
 15702  002D32  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15703  002D34  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15704                           
 15705                           ;conexaoWifi.h: 178: printf("AT+CIPSENDEX=260\r\n");
 15706  002D38  0EE5               	movlw	low STR_66
 15707  002D3A  0100               	movlb	0	; () banked
 15708  002D3C  6F81               	movwf	printf@f& (0+255),b
 15709  002D3E  0E7C               	movlw	high STR_66
 15710  002D40  6F82               	movwf	(printf@f+1)& (0+255),b
 15711  002D42  EC8C  F02D         	call	_printf	;wreg free
 15712                           
 15713                           ;conexaoWifi.h: 179: f_wifi_processo++;
 15714  002D46  2A3B               	incf	_f_wifi_processo,f,c
 15715                           
 15716                           ;conexaoWifi.h: 180: }
 15717                           ;conexaoWifi.h: 181: break;
 15718  002D48  0012               	return	
 15719  002D4A                     
 15720                           ;conexaoWifi.h: 183: if (findBufferSerial(">")) {
 15721  002D4A  0E7F               	movlw	low (STR_122+18)
 15722  002D4C  0100               	movlb	0	; () banked
 15723  002D4E  6F74               	movwf	findBufferSerial@key& (0+255),b
 15724  002D50  0E7C               	movlw	high (STR_122+18)
 15725  002D52  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15726  002D54  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15727  002D58  0900               	iorlw	0
 15728  002D5A  B4D8               	btfsc	status,2,c
 15729  002D5C  0012               	return	
 15730                           
 15731                           ;conexaoWifi.h: 184: setKeyStartReceiveSerial("200");
 15732  002D5E  0EDA               	movlw	low STR_68
 15733  002D60  0100               	movlb	0	; () banked
 15734  002D62  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15735  002D64  0E7F               	movlw	high STR_68
 15736  002D66  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15737  002D68  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15738                           
 15739                           ;conexaoWifi.h: 185: char i = 0;
 15740  002D6C  0E00               	movlw	0
 15741  002D6E  0100               	movlb	0	; () banked
 15742  002D70  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;conexaoWifi.h: 186: char AUX[15];
 15746                           ;conexaoWifi.h: 187: sprintf(AUX, "%s", "Jul 16 2020");
 15747  002D72  0EC5               	movlw	low enviaDadosWifi@AUX
 15748  002D74  6F81               	movwf	sprintf@wh& (0+255),b
 15749  002D76  0E00               	movlw	high enviaDadosWifi@AUX
 15750  002D78  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15751  002D7A  0E12               	movlw	low (STR_97+7)
 15752  002D7C  6F83               	movwf	sprintf@f& (0+255),b
 15753  002D7E  0E7F               	movlw	high (STR_97+7)
 15754  002D80  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15755  002D82  0E91               	movlw	low STR_70
 15756  002D84  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15757  002D86  0E7E               	movlw	high STR_70
 15758  002D88  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15759  002D8A  EC08  F02D         	call	_sprintf	;wreg free
 15760                           
 15761                           ;conexaoWifi.h: 188: for (i = 0; i < strlen(AUX); i++) {
 15762  002D8E  0E00               	movlw	0
 15763  002D90  0100               	movlb	0	; () banked
 15764  002D92  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15765  002D94  D017               	goto	l1030
 15766  002D96                     
 15767                           ; BSR set to: 0
 15768                           ;conexaoWifi.h: 189: if (AUX[i] == ' ') AUX[i] = '-';
 15769                           
 15770                           ; BSR set to: 0
 15771  002D96  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15772  002D98  0D01               	mullw	1
 15773  002D9A  0EC5               	movlw	low enviaDadosWifi@AUX
 15774  002D9C  24F3               	addwf	prodl,w,c
 15775  002D9E  6ED9               	movwf	fsr2l,c
 15776  002DA0  0E00               	movlw	high enviaDadosWifi@AUX
 15777  002DA2  20F4               	addwfc	prodh,w,c
 15778  002DA4  6EDA               	movwf	fsr2h,c
 15779  002DA6  0E20               	movlw	32
 15780  002DA8  18DE               	xorwf	postinc2,w,c
 15781  002DAA  A4D8               	btfss	status,2,c
 15782  002DAC  D00A               	goto	l1032
 15783                           
 15784                           ; BSR set to: 0
 15785  002DAE  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15786  002DB0  0D01               	mullw	1
 15787  002DB2  0EC5               	movlw	low enviaDadosWifi@AUX
 15788  002DB4  24F3               	addwf	prodl,w,c
 15789  002DB6  6ED9               	movwf	fsr2l,c
 15790  002DB8  0E00               	movlw	high enviaDadosWifi@AUX
 15791  002DBA  20F4               	addwfc	prodh,w,c
 15792  002DBC  6EDA               	movwf	fsr2h,c
 15793  002DBE  0E2D               	movlw	45
 15794  002DC0  6EDF               	movwf	indf2,c
 15795  002DC2                     l1032:
 15796                           
 15797                           ; BSR set to: 0
 15798                           
 15799                           ; BSR set to: 0
 15800  002DC2  2BD8               	incf	enviaDadosWifi@i& (0+255),f,b
 15801  002DC4                     l1030:
 15802                           
 15803                           ; BSR set to: 0
 15804                           
 15805                           ; BSR set to: 0
 15806  002DC4  0EC5               	movlw	low enviaDadosWifi@AUX
 15807  002DC6  6F60               	movwf	strlen@s& (0+255),b
 15808  002DC8  0E00               	movlw	high enviaDadosWifi@AUX
 15809  002DCA  6F61               	movwf	(strlen@s+1)& (0+255),b
 15810  002DCC  EC3D  F02C         	call	_strlen	;wreg free
 15811  002DD0  0100               	movlb	0	; () banked
 15812  002DD2  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15813  002DD4  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15814  002DD6  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 15815  002DD8  5160               	movf	?_strlen& (0+255),w,b
 15816  002DDA  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 15817  002DDC  5161               	movf	(?_strlen+1)& (0+255),w,b
 15818  002DDE  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 15819  002DE0  A0D8               	btfss	status,0,c
 15820  002DE2  D7D9               	goto	l1031
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;conexaoWifi.h: 190: }
 15824                           ;conexaoWifi.h: 191: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15825                           
 15826                           ; BSR set to: 0
 15827  002DE4  C049  F060         	movff	_wifi_SENHA,___wmul@multiplier
 15828  002DE8  C04A  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 15829  002DEC  0E00               	movlw	0
 15830  002DEE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15831  002DF0  0E27               	movlw	39
 15832  002DF2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15833  002DF4  EC9B  F02E         	call	___wmul	;wreg free
 15834  002DF8  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2522
 15835  002DFC  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2522+1
 15836                           
 15837                           ;conexaoWifi.h: 190: }
 15838                           ;conexaoWifi.h: 191: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15839  002E00  0EB1               	movlw	low STR_71
 15840  002E02  0100               	movlb	0	; () banked
 15841  002E04  6F81               	movwf	printf@f& (0+255),b
 15842  002E06  0E7A               	movlw	high STR_71
 15843  002E08  6F82               	movwf	(printf@f+1)& (0+255),b
 15844  002E0A  C0FE  F083         	movff	_temp,?_printf+2
 15845  002E0E  6B84               	clrf	(?_printf+3)& (0+255),b
 15846  002E10  C0F6  F085         	movff	_tempajt,?_printf+4
 15847  002E14  6B86               	clrf	(?_printf+5)& (0+255),b
 15848  002E16  C05D  F087         	movff	_umid,?_printf+6
 15849  002E1A  6B88               	clrf	(?_printf+7)& (0+255),b
 15850  002E1C  C0F5  F089         	movff	_umidajt,?_printf+8
 15851  002E20  6B8A               	clrf	(?_printf+9)& (0+255),b
 15852  002E22  C05A  F08B         	movff	_fornalha,?_printf+10
 15853  002E26  6B8C               	clrf	(?_printf+11)& (0+255),b
 15854  002E28  C0FC  F08D         	movff	_buzzer,?_printf+12
 15855  002E2C  6B8E               	clrf	(?_printf+13)& (0+255),b
 15856  002E2E  C058  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 15857  002E32  6B90               	clrf	(?_printf+15)& (0+255),b
 15858  002E34  C059  F091         	movff	_trava_fase,?_printf+16
 15859  002E38  6B92               	clrf	(?_printf+17)& (0+255),b
 15860  002E3A  C0F8  F093         	movff	_fase,?_printf+18
 15861  002E3E  6B94               	clrf	(?_printf+19)& (0+255),b
 15862  002E40  C0F7  F095         	movff	_clima,?_printf+20
 15863  002E44  6B96               	clrf	(?_printf+21)& (0+255),b
 15864  002E46  C0FB  F097         	movff	_tipo_sensor_umidade,?_printf+22
 15865  002E4A  6B98               	clrf	(?_printf+23)& (0+255),b
 15866  002E4C  0EE6               	movlw	low _wifi_MAC
 15867  002E4E  6F99               	movwf	(?_printf+24)& (0+255),b
 15868  002E50  0E01               	movlw	high _wifi_MAC
 15869  002E52  6F9A               	movwf	(?_printf+25)& (0+255),b
 15870  002E54  C0D4  F09B         	movff	_enviaDadosWifi$2522,?_printf+26
 15871  002E58  C0D5  F09C         	movff	_enviaDadosWifi$2522+1,?_printf+27
 15872  002E5C  0EC5               	movlw	low enviaDadosWifi@AUX
 15873  002E5E  6F9D               	movwf	(?_printf+28)& (0+255),b
 15874  002E60  0E00               	movlw	high enviaDadosWifi@AUX
 15875  002E62  6F9E               	movwf	(?_printf+29)& (0+255),b
 15876  002E64  C05E  F09F         	movff	_f_falta_energia,?_printf+30
 15877  002E68  6BA0               	clrf	(?_printf+31)& (0+255),b
 15878  002E6A  C0FB  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 15879  002E6E  6BA2               	clrf	(?_printf+33)& (0+255),b
 15880  002E70  C050  F0A3         	movff	_h_abafador,?_printf+34
 15881  002E74  6BA4               	clrf	(?_printf+35)& (0+255),b
 15882  002E76  C04F  F0A5         	movff	_h_flap,?_printf+36
 15883  002E7A  6BA6               	clrf	(?_printf+37)& (0+255),b
 15884  002E7C  C051  F0A7         	movff	_h_venotinha,?_printf+38
 15885  002E80  6BA8               	clrf	(?_printf+39)& (0+255),b
 15886  002E82  C052  F0A9         	movff	_h_modo_seguranca,?_printf+40
 15887  002E86  6BAA               	clrf	(?_printf+41)& (0+255),b
 15888  002E88  C04E  F0AB         	movff	_h_buzzer,?_printf+42
 15889  002E8C  6BAC               	clrf	(?_printf+43)& (0+255),b
 15890  002E8E  C054  F0AD         	movff	_t_flap_ligado,?_printf+44
 15891  002E92  6BAE               	clrf	(?_printf+45)& (0+255),b
 15892  002E94  C053  F0AF         	movff	_t_flap_intervalo,?_printf+46
 15893  002E98  6BB0               	clrf	(?_printf+47)& (0+255),b
 15894  002E9A  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 15895  002E9E  6BB2               	clrf	(?_printf+49)& (0+255),b
 15896  002EA0  C0FA  F0B3         	movff	_t_temp_automatica,?_printf+50
 15897  002EA4  6BB4               	clrf	(?_printf+51)& (0+255),b
 15898  002EA6  C04C  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 15899  002EAA  6BB6               	clrf	(?_printf+53)& (0+255),b
 15900  002EAC  C049  F0B7         	movff	_wifi_SENHA,?_printf+54
 15901  002EB0  C04A  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 15902  002EB4  C04D  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 15903  002EB8  6BBA               	clrf	(?_printf+57)& (0+255),b
 15904  002EBA  C0F9  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 15905  002EBE  6BBC               	clrf	(?_printf+59)& (0+255),b
 15906  002EC0  EC8C  F02D         	call	_printf	;wreg free
 15907                           
 15908                           ;conexaoWifi.h: 192: f_wifi_processo++;
 15909  002EC4  2A3B               	incf	_f_wifi_processo,f,c
 15910                           
 15911                           ;conexaoWifi.h: 193: }
 15912                           ;conexaoWifi.h: 194: break;
 15913  002EC6  0012               	return	
 15914  002EC8                     
 15915                           ;conexaoWifi.h: 196: if (findBufferSerial("save")) {
 15916  002EC8  0EC7               	movlw	low STR_72
 15917  002ECA  0100               	movlb	0	; () banked
 15918  002ECC  6F74               	movwf	findBufferSerial@key& (0+255),b
 15919  002ECE  0E7F               	movlw	high STR_72
 15920  002ED0  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15921  002ED2  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15922  002ED6  0900               	iorlw	0
 15923  002ED8  B4D8               	btfsc	status,2,c
 15924  002EDA  0012               	return	
 15925                           
 15926                           ;conexaoWifi.h: 197: setKeyStartReceiveSerial("ALL");
 15927  002EDC  0EE2               	movlw	low STR_10
 15928  002EDE  0100               	movlb	0	; () banked
 15929  002EE0  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15930  002EE2  0E7F               	movlw	high STR_10
 15931  002EE4  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15932  002EE6  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 15933                           
 15934                           ;conexaoWifi.h: 198: printf("AT+CIPCLOSE\r\n");
 15935  002EEA  0E67               	movlw	low STR_74
 15936  002EEC  0100               	movlb	0	; () banked
 15937  002EEE  6F81               	movwf	printf@f& (0+255),b
 15938  002EF0  0E7E               	movlw	high STR_74
 15939  002EF2  6F82               	movwf	(printf@f+1)& (0+255),b
 15940  002EF4  EC8C  F02D         	call	_printf	;wreg free
 15941                           
 15942                           ;conexaoWifi.h: 199: f_wifi_processo++;
 15943  002EF8  2A3B               	incf	_f_wifi_processo,f,c
 15944                           
 15945                           ;conexaoWifi.h: 200: }
 15946                           ;conexaoWifi.h: 201: break;
 15947  002EFA  0012               	return	
 15948  002EFC                     
 15949                           ;conexaoWifi.h: 203: if (findBufferSerial("OK") || findBufferSerial("CLOSED")) {
 15950  002EFC  0EEF               	movlw	low STR_12
 15951  002EFE  0100               	movlb	0	; () banked
 15952  002F00  6F74               	movwf	findBufferSerial@key& (0+255),b
 15953  002F02  0E7F               	movlw	high STR_12
 15954  002F04  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15955  002F06  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15956  002F0A  0900               	iorlw	0
 15957  002F0C  A4D8               	btfss	status,2,c
 15958  002F0E  D00A               	goto	u13310
 15959  002F10  0E86               	movlw	low STR_76
 15960  002F12  0100               	movlb	0	; () banked
 15961  002F14  6F74               	movwf	findBufferSerial@key& (0+255),b
 15962  002F16  0E7F               	movlw	high STR_76
 15963  002F18  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15964  002F1A  ECAF  F02E         	call	_findBufferSerial	;wreg free
 15965  002F1E  0900               	iorlw	0
 15966  002F20  B4D8               	btfsc	status,2,c
 15967  002F22  0012               	return	
 15968  002F24                     u13310:
 15969                           
 15970                           ;conexaoWifi.h: 204: f_wifi_processo = 3;
 15971  002F24  0E03               	movlw	3
 15972  002F26  6E3B               	movwf	_f_wifi_processo,c
 15973                           
 15974                           ;conexaoWifi.h: 205: t_wifi_restart = 25;
 15975  002F28  0E19               	movlw	25
 15976  002F2A  6E3C               	movwf	_t_wifi_restart,c
 15977                           
 15978                           ;conexaoWifi.h: 206: }
 15979                           ;conexaoWifi.h: 207: break;
 15980  002F2C  0012               	return	
 15981  002F2E                     
 15982                           ;conexaoWifi.h: 209: f_wifi_processo = 0;
 15983  002F2E  0E00               	movlw	0
 15984  002F30  6E3B               	movwf	_f_wifi_processo,c
 15985                           
 15986                           ;conexaoWifi.h: 210: }
 15987  002F32  0012               	return	
 15988  002F34                     l1011:
 15989  002F34  503B               	movf	_f_wifi_processo,w,c
 15990                           
 15991                           ; Switch size 1, requested type "space"
 15992                           ; Number of cases is 9, Range of values is 0 to 8
 15993                           ; switch strategies available:
 15994                           ; Name         Instructions Cycles
 15995                           ; simple_byte           28    15 (average)
 15996                           ;	Chosen strategy is simple_byte
 15997  002F36  0A00               	xorlw	0	; case 0
 15998  002F38  B4D8               	btfsc	status,2,c
 15999  002F3A  D64B               	goto	l1012
 16000  002F3C  0A01               	xorlw	1	; case 1
 16001  002F3E  B4D8               	btfsc	status,2,c
 16002  002F40  D65A               	goto	l1014
 16003  002F42  0A03               	xorlw	3	; case 2
 16004  002F44  B4D8               	btfsc	status,2,c
 16005  002F46  D671               	goto	l1016
 16006  002F48  0A01               	xorlw	1	; case 3
 16007  002F4A  B4D8               	btfsc	status,2,c
 16008  002F4C  D6A3               	goto	l1020
 16009  002F4E  0A07               	xorlw	7	; case 4
 16010  002F50  B4D8               	btfsc	status,2,c
 16011  002F52  D6B3               	goto	l1022
 16012  002F54  0A01               	xorlw	1	; case 5
 16013  002F56  B4D8               	btfsc	status,2,c
 16014  002F58  D6DE               	goto	l1026
 16015  002F5A  0A03               	xorlw	3	; case 6
 16016  002F5C  B4D8               	btfsc	status,2,c
 16017  002F5E  D6F5               	goto	l1028
 16018  002F60  0A01               	xorlw	1	; case 7
 16019  002F62  B4D8               	btfsc	status,2,c
 16020  002F64  D7B1               	goto	l1034
 16021  002F66  0A0F               	xorlw	15	; case 8
 16022  002F68  B4D8               	btfsc	status,2,c
 16023  002F6A  D7C8               	goto	l1036
 16024  002F6C  D7E0               	goto	l1040
 16025  002F6E                     
 16026                           ;conexaoWifi.h: 214: setKeyStartReceiveSerial("ALL");
 16027  002F6E  0EE2               	movlw	low STR_10
 16028  002F70  0100               	movlb	0	; () banked
 16029  002F72  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 16030  002F74  0E7F               	movlw	high STR_10
 16031  002F76  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 16032  002F78  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 16033                           
 16034                           ;conexaoWifi.h: 215: printf("AT+CWMODE=1\r\n");
 16035  002F7C  0E3D               	movlw	low STR_50
 16036  002F7E  0100               	movlb	0	; () banked
 16037  002F80  6F81               	movwf	printf@f& (0+255),b
 16038  002F82  0E7E               	movlw	high STR_50
 16039  002F84  6F82               	movwf	(printf@f+1)& (0+255),b
 16040  002F86  EC8C  F02D         	call	_printf	;wreg free
 16041                           
 16042                           ;conexaoWifi.h: 216: f_wifi_processo = 1;
 16043  002F8A  0E01               	movlw	1
 16044  002F8C  6E3B               	movwf	_f_wifi_processo,c
 16045                           
 16046                           ;conexaoWifi.h: 217: break;
 16047  002F8E  0012               	return	
 16048  002F90                     
 16049                           ;conexaoWifi.h: 219: if (findBufferSerial("OK")) {
 16050  002F90  0EEF               	movlw	low STR_12
 16051  002F92  0100               	movlb	0	; () banked
 16052  002F94  6F74               	movwf	findBufferSerial@key& (0+255),b
 16053  002F96  0E7F               	movlw	high STR_12
 16054  002F98  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 16055  002F9A  ECAF  F02E         	call	_findBufferSerial	;wreg free
 16056  002F9E  0900               	iorlw	0
 16057  002FA0  B4D8               	btfsc	status,2,c
 16058  002FA2  0012               	return	
 16059                           
 16060                           ;conexaoWifi.h: 220: setKeyStartReceiveSerial("MAC");
 16061  002FA4  0EDE               	movlw	low STR_80
 16062  002FA6  0100               	movlb	0	; () banked
 16063  002FA8  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 16064  002FAA  0E7F               	movlw	high STR_80
 16065  002FAC  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 16066  002FAE  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 16067                           
 16068                           ;conexaoWifi.h: 221: printf("AT+CIFSR\r\n");
 16069  002FB2  0EB5               	movlw	low STR_81
 16070  002FB4  0100               	movlb	0	; () banked
 16071  002FB6  6F81               	movwf	printf@f& (0+255),b
 16072  002FB8  0E7E               	movlw	high STR_81
 16073  002FBA  6F82               	movwf	(printf@f+1)& (0+255),b
 16074  002FBC  EC8C  F02D         	call	_printf	;wreg free
 16075                           
 16076                           ;conexaoWifi.h: 222: f_wifi_processo = 2;
 16077  002FC0  0E02               	movlw	2
 16078  002FC2  6E3B               	movwf	_f_wifi_processo,c
 16079                           
 16080                           ;conexaoWifi.h: 223: }
 16081                           ;conexaoWifi.h: 224: break;
 16082  002FC4  0012               	return	
 16083  002FC6                     
 16084                           ;conexaoWifi.h: 226: if (findBufferSerial("OK")) {
 16085  002FC6  0EEF               	movlw	low STR_12
 16086  002FC8  0100               	movlb	0	; () banked
 16087  002FCA  6F74               	movwf	findBufferSerial@key& (0+255),b
 16088  002FCC  0E7F               	movlw	high STR_12
 16089  002FCE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 16090  002FD0  ECAF  F02E         	call	_findBufferSerial	;wreg free
 16091  002FD4  0900               	iorlw	0
 16092  002FD6  B4D8               	btfsc	status,2,c
 16093  002FD8  0012               	return	
 16094                           
 16095                           ;conexaoWifi.h: 227: unsigned char i = 0;
 16096  002FDA  0E00               	movlw	0
 16097  002FDC  0100               	movlb	0	; () banked
 16098  002FDE  6FD9               	movwf	enviaDadosWifi@i_1397& (0+255),b
 16099                           
 16100                           ;conexaoWifi.h: 228: unsigned char j = 0;
 16101  002FE0  0E00               	movlw	0
 16102  002FE2  6FD6               	movwf	enviaDadosWifi@j& (0+255),b
 16103                           
 16104                           ;conexaoWifi.h: 229: unsigned char men = 0;
 16105  002FE4  0E00               	movlw	0
 16106  002FE6  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 16107                           
 16108                           ;conexaoWifi.h: 230: for (i = 0; i < strlen(bufferSerial); i++) {
 16109  002FE8  0E00               	movlw	0
 16110  002FEA  6FD9               	movwf	enviaDadosWifi@i_1397& (0+255),b
 16111  002FEC  D05C               	goto	l1049
 16112  002FEE                     
 16113                           ; BSR set to: 0
 16114                           ;conexaoWifi.h: 231: if (bufferSerial[i] == '"' && men == 0) {
 16115                           
 16116                           ; BSR set to: 0
 16117  002FEE  51D9               	movf	enviaDadosWifi@i_1397& (0+255),w,b
 16118  002FF0  0D01               	mullw	1
 16119  002FF2  0E69               	movlw	low _bufferSerial
 16120  002FF4  24F3               	addwf	prodl,w,c
 16121  002FF6  6ED9               	movwf	fsr2l,c
 16122  002FF8  0E02               	movlw	high _bufferSerial
 16123  002FFA  20F4               	addwfc	prodh,w,c
 16124  002FFC  6EDA               	movwf	fsr2h,c
 16125  002FFE  0E22               	movlw	34
 16126  003000  18DE               	xorwf	postinc2,w,c
 16127  003002  A4D8               	btfss	status,2,c
 16128  003004  D006               	goto	l1051
 16129                           
 16130                           ; BSR set to: 0
 16131  003006  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 16132  003008  A4D8               	btfss	status,2,c
 16133  00300A  D003               	goto	l1051
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;conexaoWifi.h: 232: men = 1;
 16137  00300C  0E01               	movlw	1
 16138  00300E  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 16139                           
 16140                           ;conexaoWifi.h: 233: } else if (bufferSerial[i] == '"' && men == 1) {
 16141  003010  D049               	goto	l1056
 16142  003012                     l1051:
 16143                           
 16144                           ; BSR set to: 0
 16145                           
 16146                           ; BSR set to: 0
 16147  003012  51D9               	movf	enviaDadosWifi@i_1397& (0+255),w,b
 16148  003014  0D01               	mullw	1
 16149  003016  0E69               	movlw	low _bufferSerial
 16150  003018  24F3               	addwf	prodl,w,c
 16151  00301A  6ED9               	movwf	fsr2l,c
 16152  00301C  0E02               	movlw	high _bufferSerial
 16153  00301E  20F4               	addwfc	prodh,w,c
 16154  003020  6EDA               	movwf	fsr2h,c
 16155  003022  0E22               	movlw	34
 16156  003024  18DE               	xorwf	postinc2,w,c
 16157  003026  A4D8               	btfss	status,2,c
 16158  003028  D00E               	goto	l1053
 16159                           
 16160                           ; BSR set to: 0
 16161  00302A  05D7               	decf	enviaDadosWifi@men& (0+255),w,b
 16162  00302C  A4D8               	btfss	status,2,c
 16163  00302E  D00B               	goto	l1053
 16164                           
 16165                           ; BSR set to: 0
 16166                           ;conexaoWifi.h: 234: wifi_MAC[j] = '\0';
 16167  003030  51D6               	movf	enviaDadosWifi@j& (0+255),w,b
 16168  003032  0D01               	mullw	1
 16169  003034  0EE6               	movlw	low _wifi_MAC
 16170  003036  24F3               	addwf	prodl,w,c
 16171  003038  6ED9               	movwf	fsr2l,c
 16172  00303A  0E01               	movlw	high _wifi_MAC
 16173  00303C  20F4               	addwfc	prodh,w,c
 16174  00303E  6EDA               	movwf	fsr2h,c
 16175  003040  0E00               	movlw	0
 16176  003042  6EDF               	movwf	indf2,c
 16177                           
 16178                           ; BSR set to: 0
 16179                           ;conexaoWifi.h: 235: return;
 16180  003044  0012               	return	
 16181  003046                     l1053:
 16182                           
 16183                           ; BSR set to: 0
 16184                           
 16185                           ; BSR set to: 0
 16186  003046  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 16187  003048  B4D8               	btfsc	status,2,c
 16188  00304A  D02C               	goto	l1056
 16189                           
 16190                           ; BSR set to: 0
 16191  00304C  51D9               	movf	enviaDadosWifi@i_1397& (0+255),w,b
 16192  00304E  0D01               	mullw	1
 16193  003050  0E69               	movlw	low _bufferSerial
 16194  003052  24F3               	addwf	prodl,w,c
 16195  003054  6ED9               	movwf	fsr2l,c
 16196  003056  0E02               	movlw	high _bufferSerial
 16197  003058  20F4               	addwfc	prodh,w,c
 16198  00305A  6EDA               	movwf	fsr2h,c
 16199  00305C  0E3A               	movlw	58
 16200  00305E  18DE               	xorwf	postinc2,w,c
 16201  003060  B4D8               	btfsc	status,2,c
 16202  003062  D020               	goto	l1056
 16203                           
 16204                           ; BSR set to: 0
 16205  003064  0EE6               	movlw	low _wifi_MAC
 16206  003066  6F60               	movwf	strlen@s& (0+255),b
 16207  003068  0E01               	movlw	high _wifi_MAC
 16208  00306A  6F61               	movwf	(strlen@s+1)& (0+255),b
 16209  00306C  EC3D  F02C         	call	_strlen	;wreg free
 16210  003070  0100               	movlb	0	; () banked
 16211  003072  5161               	movf	(?_strlen+1)& (0+255),w,b
 16212  003074  E117               	bnz	l8896
 16213  003076  0E0C               	movlw	12
 16214  003078  5D60               	subwf	?_strlen& (0+255),w,b
 16215  00307A  B0D8               	btfsc	status,0,c
 16216  00307C  D013               	goto	l1056
 16217                           
 16218                           ; BSR set to: 0
 16219                           ;conexaoWifi.h: 237: wifi_MAC[j++] = bufferSerial[i];
 16220  00307E  51D9               	movf	enviaDadosWifi@i_1397& (0+255),w,b
 16221  003080  0D01               	mullw	1
 16222  003082  0E69               	movlw	low _bufferSerial
 16223  003084  24F3               	addwf	prodl,w,c
 16224  003086  6ED9               	movwf	fsr2l,c
 16225  003088  0E02               	movlw	high _bufferSerial
 16226  00308A  20F4               	addwfc	prodh,w,c
 16227  00308C  6EDA               	movwf	fsr2h,c
 16228  00308E  51D6               	movf	enviaDadosWifi@j& (0+255),w,b
 16229  003090  0D01               	mullw	1
 16230  003092  0EE6               	movlw	low _wifi_MAC
 16231  003094  24F3               	addwf	prodl,w,c
 16232  003096  6EE1               	movwf	fsr1l,c
 16233  003098  0E01               	movlw	high _wifi_MAC
 16234  00309A  20F4               	addwfc	prodh,w,c
 16235  00309C  6EE2               	movwf	fsr1h,c
 16236  00309E  CFDF FFE7          	movff	indf2,indf1
 16237                           
 16238                           ; BSR set to: 0
 16239  0030A2  2BD6               	incf	enviaDadosWifi@j& (0+255),f,b
 16240  0030A4                     l1056:
 16241  0030A4                     l8896:
 16242                           
 16243                           ; BSR set to: 0
 16244  0030A4  2BD9               	incf	enviaDadosWifi@i_1397& (0+255),f,b
 16245  0030A6                     l1049:
 16246                           
 16247                           ; BSR set to: 0
 16248                           
 16249                           ; BSR set to: 0
 16250  0030A6  0E69               	movlw	low _bufferSerial
 16251  0030A8  6F60               	movwf	strlen@s& (0+255),b
 16252  0030AA  0E02               	movlw	high _bufferSerial
 16253  0030AC  6F61               	movwf	(strlen@s+1)& (0+255),b
 16254  0030AE  EC3D  F02C         	call	_strlen	;wreg free
 16255  0030B2  0100               	movlb	0	; () banked
 16256  0030B4  51D9               	movf	enviaDadosWifi@i_1397& (0+255),w,b
 16257  0030B6  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16258  0030B8  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 16259  0030BA  5160               	movf	?_strlen& (0+255),w,b
 16260  0030BC  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 16261  0030BE  5161               	movf	(?_strlen+1)& (0+255),w,b
 16262  0030C0  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16263  0030C2  B0D8               	btfsc	status,0,c
 16264  0030C4  0012               	return	
 16265  0030C6  D793               	goto	l1050
 16266  0030C8                     
 16267                           ;conexaoWifi.h: 243: f_wifi_processo = 0;
 16268                           
 16269                           ; BSR set to: 0
 16270  0030C8  0E00               	movlw	0
 16271  0030CA  6E3B               	movwf	_f_wifi_processo,c
 16272                           
 16273                           ;conexaoWifi.h: 245: }
 16274                           
 16275                           ;conexaoWifi.h: 244: break;
 16276  0030CC  0012               	return	
 16277  0030CE                     l1042:
 16278  0030CE  503B               	movf	_f_wifi_processo,w,c
 16279                           
 16280                           ; Switch size 1, requested type "space"
 16281                           ; Number of cases is 3, Range of values is 0 to 2
 16282                           ; switch strategies available:
 16283                           ; Name         Instructions Cycles
 16284                           ; simple_byte           10     6 (average)
 16285                           ;	Chosen strategy is simple_byte
 16286  0030D0  0A00               	xorlw	0	; case 0
 16287  0030D2  B4D8               	btfsc	status,2,c
 16288  0030D4  D74C               	goto	l1043
 16289  0030D6  0A01               	xorlw	1	; case 1
 16290  0030D8  B4D8               	btfsc	status,2,c
 16291  0030DA  D75A               	goto	l1045
 16292  0030DC  0A03               	xorlw	3	; case 2
 16293  0030DE  B4D8               	btfsc	status,2,c
 16294  0030E0  D772               	goto	l1047
 16295  0030E2  D7F2               	goto	l1058
 16296  0030E4                     __end_of_enviaDadosWifi:
 16297                           	opt stack 0
 16298                           tblptru	equ	0xFF8
 16299                           tblptrh	equ	0xFF7
 16300                           tblptrl	equ	0xFF6
 16301                           tablat	equ	0xFF5
 16302                           prodh	equ	0xFF4
 16303                           prodl	equ	0xFF3
 16304                           intcon	equ	0xFF2
 16305                           intcon2	equ	0xFF1
 16306                           intcon3	equ	0xFF0
 16307                           postinc0	equ	0xFEE
 16308                           wreg	equ	0xFE8
 16309                           indf1	equ	0xFE7
 16310                           postdec1	equ	0xFE5
 16311                           fsr1h	equ	0xFE2
 16312                           fsr1l	equ	0xFE1
 16313                           indf2	equ	0xFDF
 16314                           postinc2	equ	0xFDE
 16315                           postdec2	equ	0xFDD
 16316                           fsr2h	equ	0xFDA
 16317                           fsr2l	equ	0xFD9
 16318                           status	equ	0xFD8
 16319                           
 16320 ;; *************** function _criaCaracteresCGRAM *****************
 16321 ;; Defined at:
 16322 ;;		line 180 in file "src/lcd.h"
 16323 ;; Parameters:    Size  Location     Type
 16324 ;;		None
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16327 ;;  i               1   67[BANK0 ] unsigned char 
 16328 ;;  j               1   66[BANK0 ] unsigned char 
 16329 ;;  k               1   65[BANK0 ] unsigned char 
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0
 16340 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16341 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16342 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16343 ;;Total ram usage:       64 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    8
 16346 ;; This function calls:
 16347 ;;		_Lcd_Cmd
 16348 ;;		_Lcd_Write_Char
 16349 ;; This function is called by:
 16350 ;;		_main
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text20
 16355  00517C                     __ptext20:
 16356                           	opt stack 0
 16357  00517C                     _criaCaracteresCGRAM:
 16358                           	opt stack 22
 16359                           
 16360                           ;lcd.h: 187: const char character[7][8] = {
 16361                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16362                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16363                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16364                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16365                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16366                           ;lcd.h: 196: };
 16367                           
 16368                           ;incstack = 0
 16369  00517C  0E0F               	movlw	low criaCaracteresCGRAM@F3900
 16370  00517E  6EF6               	movwf	tblptrl,c
 16371  005180                     	if	1	;There is more than 1 active tblptr byte
 16372  005180  0E78               	movlw	high criaCaracteresCGRAM@F3900
 16373  005182  6EF7               	movwf	tblptrh,c
 16374  005184                     	endif
 16375  005184                     	if	0	;There are less than 3 active tblptr bytes
 16376  005184                     	endif
 16377  005184  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16378  005188  0E37               	movlw	55
 16379  00518A                     u12660:
 16380  00518A  0009               	tblrd		*+
 16381  00518C  CFF5 FFDE          	movff	tablat,postinc2
 16382  005190  06E8               	decf	wreg,f,c
 16383  005192  E2FB               	bc	u12660
 16384                           
 16385                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16386  005194  0E04               	movlw	4
 16387  005196  ECEA  F02E         	call	_Lcd_Cmd
 16388                           
 16389                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16390  00519A  0E00               	movlw	0
 16391  00519C  ECEA  F02E         	call	_Lcd_Cmd
 16392                           
 16393                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16394  0051A0  0E21               	movlw	33
 16395  0051A2                     u15547:
 16396  0051A2  2EE8               	decfsz	wreg,f,c
 16397  0051A4  D7FE               	bra	u15547
 16398  0051A6  F000               	nop	
 16399                           
 16400                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16401  0051A8  0E00               	movlw	0
 16402  0051AA  0100               	movlb	0	; () banked
 16403  0051AC  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16404                           
 16405                           ; BSR set to: 0
 16406  0051AE  0E00               	movlw	0
 16407  0051B0  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16408                           
 16409                           ; BSR set to: 0
 16410  0051B2  0E00               	movlw	0
 16411  0051B4  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16415  0051B6  0E00               	movlw	0
 16416  0051B8  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16417  0051BA                     l8396:
 16418                           
 16419                           ; BSR set to: 0
 16420  0051BA  0E04               	movlw	4
 16421  0051BC  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16422  0051BE  D001               	goto	l275
 16423  0051C0  0012               	return	
 16424  0051C2                     l275:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;lcd.h: 202: if (k == 1) i = 0;
 16428                           
 16429                           ; BSR set to: 0
 16430  0051C2  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16431  0051C4  A4D8               	btfss	status,2,c
 16432  0051C6  D002               	goto	l277
 16433                           
 16434                           ; BSR set to: 0
 16435  0051C8  0E00               	movlw	0
 16436  0051CA  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16437  0051CC                     l277:
 16438                           
 16439                           ; BSR set to: 0
 16440                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16441  0051CC  0E00               	movlw	0
 16442  0051CE  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16443  0051D0                     l8404:
 16444                           
 16445                           ; BSR set to: 0
 16446  0051D0  0E07               	movlw	7
 16447  0051D2  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16448  0051D4  D001               	goto	l278
 16449  0051D6  D025               	goto	u12710
 16450  0051D8                     l278:
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16454                           
 16455                           ; BSR set to: 0
 16456  0051D8  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16457  0051DA  A4D8               	btfss	status,2,c
 16458  0051DC  D005               	goto	l281
 16459                           
 16460                           ; BSR set to: 0
 16461  0051DE  0E00               	movlw	0
 16462  0051E0  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16463  0051E2  0E00               	movlw	0
 16464  0051E4  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16465  0051E6  D017               	goto	l283
 16466  0051E8                     l281:
 16467                           
 16468                           ; BSR set to: 0
 16469                           
 16470                           ; BSR set to: 0
 16471  0051E8  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16472  0051EA  0D08               	mullw	8
 16473  0051EC  0E67               	movlw	low criaCaracteresCGRAM@character
 16474  0051EE  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16475  0051F0  0E00               	movlw	high criaCaracteresCGRAM@character
 16476  0051F2  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16477  0051F4  50F3               	movf	prodl,w,c
 16478  0051F6  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16479  0051F8  50F4               	movf	prodh,w,c
 16480  0051FA  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16481  0051FC  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16482  0051FE  0D01               	mullw	1
 16483  005200  50F3               	movf	prodl,w,c
 16484  005202  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16485  005204  6ED9               	movwf	fsr2l,c
 16486  005206  50F4               	movf	prodh,w,c
 16487  005208  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16488  00520A  6EDA               	movwf	fsr2h,c
 16489  00520C  50DF               	movf	indf2,w,c
 16490  00520E  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16491  005210  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16492  005212  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16493  005214  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16494  005216                     l283:
 16495                           
 16496                           ; BSR set to: 0
 16497                           
 16498                           ; BSR set to: 0
 16499  005216  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16500  005218  EC6D  F02D         	call	_Lcd_Write_Char
 16501  00521C  0100               	movlb	0	; () banked
 16502  00521E  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16503  005220  D7D7               	goto	l8404
 16504  005222                     u12710:
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;lcd.h: 205: }
 16508                           ;lcd.h: 206: k++;
 16509                           
 16510                           ; BSR set to: 0
 16511  005222  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16512  005224  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16513  005226  D7C9               	goto	l8396
 16514  005228                     __end_of_criaCaracteresCGRAM:
 16515                           	opt stack 0
 16516                           tblptru	equ	0xFF8
 16517                           tblptrh	equ	0xFF7
 16518                           tblptrl	equ	0xFF6
 16519                           tablat	equ	0xFF5
 16520                           prodh	equ	0xFF4
 16521                           prodl	equ	0xFF3
 16522                           intcon	equ	0xFF2
 16523                           intcon2	equ	0xFF1
 16524                           intcon3	equ	0xFF0
 16525                           postinc0	equ	0xFEE
 16526                           wreg	equ	0xFE8
 16527                           indf1	equ	0xFE7
 16528                           postdec1	equ	0xFE5
 16529                           fsr1h	equ	0xFE2
 16530                           fsr1l	equ	0xFE1
 16531                           indf2	equ	0xFDF
 16532                           postinc2	equ	0xFDE
 16533                           postdec2	equ	0xFDD
 16534                           fsr2h	equ	0xFDA
 16535                           fsr2l	equ	0xFD9
 16536                           status	equ	0xFD8
 16537                           
 16538 ;; *************** function _controle *****************
 16539 ;; Defined at:
 16540 ;;		line 148 in file "src/controle.h"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;		None
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16556 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16557 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16558 ;;Total ram usage:        7 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:    8
 16561 ;; This function calls:
 16562 ;;		_acaoFlap
 16563 ;;		_setLed
 16564 ;; This function is called by:
 16565 ;;		_main
 16566 ;; This function uses a non-reentrant model
 16567 ;;
 16568                           
 16569                           	psect	text21
 16570  003ACC                     __ptext21:
 16571                           	opt stack 0
 16572  003ACC                     _controle:
 16573                           	opt stack 22
 16574                           
 16575                           ;controle.h: 150: if (f_falta_energia == 0) {
 16576                           
 16577                           ; BSR set to: 0
 16578                           ;incstack = 0
 16579  003ACC  505E               	movf	_f_falta_energia,w,c
 16580  003ACE  A4D8               	btfss	status,2,c
 16581  003AD0  D02B               	goto	l1146
 16582                           
 16583                           ;controle.h: 151: LATBbits.LATB5 = blinkk;
 16584  003AD2  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16585  003AD4  D002               	bra	u13825
 16586  003AD6  8A8A               	bsf	3978,5,c	;volatile
 16587  003AD8  D001               	bra	u13827
 16588  003ADA                     u13825:
 16589  003ADA  9A8A               	bcf	3978,5,c	;volatile
 16590  003ADC                     u13827:
 16591                           
 16592                           ;controle.h: 152: LATEbits.LE0 = 0;
 16593  003ADC  908D               	bcf	3981,0,c	;volatile
 16594                           
 16595                           ;controle.h: 153: LATDbits.LD0 = 1;
 16596  003ADE  808C               	bsf	3980,0,c	;volatile
 16597                           
 16598                           ;controle.h: 154: LATDbits.LD1 = 0;
 16599  003AE0  928C               	bcf	3980,1,c	;volatile
 16600                           
 16601                           ;controle.h: 155: acaoFlap(1, 10, 0);
 16602  003AE2  0E00               	movlw	0
 16603  003AE4  0100               	movlb	0	; () banked
 16604  003AE6  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16605  003AE8  0E0A               	movlw	10
 16606  003AEA  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16607  003AEC  0E00               	movlw	0
 16608  003AEE  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16609  003AF0  0E00               	movlw	0
 16610  003AF2  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16611  003AF4  0E01               	movlw	1
 16612  003AF6  EC94  F02A         	call	_acaoFlap
 16613                           
 16614                           ;controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 16615  003AFA  0439               	decf	_f_buzzer_falta_energia,w,c
 16616  003AFC  A4D8               	btfss	status,2,c
 16617  003AFE  D008               	goto	l1147
 16618  003B00  0100               	movlb	0	; () banked
 16619  003B02  51FC               	movf	_buzzer& (0+255),w,b
 16620  003B04  A4D8               	btfss	status,2,c
 16621  003B06  D004               	goto	l1147
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;controle.h: 157: buzzer = 1;
 16625  003B08  0E01               	movlw	1
 16626  003B0A  6FFC               	movwf	_buzzer& (0+255),b
 16627                           
 16628                           ;controle.h: 158: f_buzzer_falta_energia = 0;
 16629  003B0C  0E00               	movlw	0
 16630  003B0E  6E39               	movwf	_f_buzzer_falta_energia,c
 16631  003B10                     l1147:
 16632                           
 16633                           ;controle.h: 159: }
 16634                           ;controle.h: 160: if (buzzer) {
 16635  003B10  0100               	movlb	0	; () banked
 16636  003B12  51FC               	movf	_buzzer& (0+255),w,b
 16637  003B14  B4D8               	btfsc	status,2,c
 16638  003B16  D006               	goto	l1148
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;controle.h: 161: LATCbits.LC1 = blinkk;
 16642  003B18  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16643  003B1A  D002               	bra	u13865
 16644  003B1C  828B               	bsf	3979,1,c	;volatile
 16645  003B1E  D001               	bra	u13867
 16646  003B20                     u13865:
 16647  003B20  928B               	bcf	3979,1,c	;volatile
 16648  003B22                     u13867:
 16649                           
 16650                           ;controle.h: 162: } else {
 16651  003B22  0012               	return	
 16652  003B24                     l1148:
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;controle.h: 163: LATCbits.LC1 = 0;
 16656  003B24  928B               	bcf	3979,1,c	;volatile
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;controle.h: 164: }
 16660                           ;controle.h: 165: return;
 16661  003B26  0012               	return	
 16662  003B28                     l1146:
 16663                           
 16664                           ;controle.h: 167: f_buzzer_falta_energia = 1;
 16665                           
 16666                           ; BSR set to: 0
 16667  003B28  0E01               	movlw	1
 16668  003B2A  6E39               	movwf	_f_buzzer_falta_energia,c
 16669                           
 16670                           ;controle.h: 168: }
 16671                           ;controle.h: 172: LATBbits.LATB5 = 1;
 16672  003B2C  8A8A               	bsf	3978,5,c	;volatile
 16673                           
 16674                           ;controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 16675  003B2E  5052               	movf	_h_modo_seguranca,w,c
 16676  003B30  C0FE  F068         	movff	_temp,??_controle
 16677  003B34  0100               	movlb	0	; () banked
 16678  003B36  6B69               	clrf	(??_controle+1)& (0+255),b
 16679  003B38  2768               	addwf	??_controle& (0+255),f,b
 16680  003B3A  0E00               	movlw	0
 16681  003B3C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16682  003B3E  51F6               	movf	_tempajt& (0+255),w,b
 16683  003B40  6F6A               	movwf	(??_controle+2)& (0+255),b
 16684  003B42  6B6B               	clrf	(??_controle+3)& (0+255),b
 16685  003B44  5168               	movf	??_controle& (0+255),w,b
 16686  003B46  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16687  003B48  516B               	movf	(??_controle+3)& (0+255),w,b
 16688  003B4A  0A80               	xorlw	128
 16689  003B4C  6F6C               	movwf	(??_controle+4)& (0+255),b
 16690  003B4E  5169               	movf	(??_controle+1)& (0+255),w,b
 16691  003B50  0A80               	xorlw	128
 16692  003B52  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16693  003B54  B0D8               	btfsc	status,0,c
 16694  003B56  D01B               	goto	u13880
 16695                           
 16696                           ; BSR set to: 0
 16697  003B58  51F6               	movf	_tempajt& (0+255),w,b
 16698  003B5A  6F68               	movwf	??_controle& (0+255),b
 16699  003B5C  6B69               	clrf	(??_controle+1)& (0+255),b
 16700  003B5E  5052               	movf	_h_modo_seguranca,w,c
 16701  003B60  6F6A               	movwf	(??_controle+2)& (0+255),b
 16702  003B62  6B6B               	clrf	(??_controle+3)& (0+255),b
 16703  003B64  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16704  003B66  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16705  003B68  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16706  003B6A  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16707  003B6C  51FE               	movf	_temp& (0+255),w,b
 16708  003B6E  6F6C               	movwf	(??_controle+4)& (0+255),b
 16709  003B70  6B6D               	clrf	(??_controle+5)& (0+255),b
 16710  003B72  516A               	movf	(??_controle+2)& (0+255),w,b
 16711  003B74  276C               	addwf	(??_controle+4)& (0+255),f,b
 16712  003B76  516B               	movf	(??_controle+3)& (0+255),w,b
 16713  003B78  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16714  003B7A  5168               	movf	??_controle& (0+255),w,b
 16715  003B7C  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16716  003B7E  516D               	movf	(??_controle+5)& (0+255),w,b
 16717  003B80  0A80               	xorlw	128
 16718  003B82  6F6E               	movwf	(??_controle+6)& (0+255),b
 16719  003B84  5169               	movf	(??_controle+1)& (0+255),w,b
 16720  003B86  0A80               	xorlw	128
 16721  003B88  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16722  003B8A  A0D8               	btfss	status,0,c
 16723  003B8C  D025               	goto	l1152
 16724  003B8E                     u13880:
 16725                           
 16726                           ; BSR set to: 0
 16727                           
 16728                           ; BSR set to: 0
 16729  003B8E  5052               	movf	_h_modo_seguranca,w,c
 16730  003B90  B4D8               	btfsc	status,2,c
 16731  003B92  D022               	goto	l1152
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;controle.h: 175: setLed(8, 1);
 16735  003B94  0E01               	movlw	1
 16736  003B96  6F60               	movwf	setLed@acao& (0+255),b
 16737  003B98  0E08               	movlw	8
 16738  003B9A  EC32  F02F         	call	_setLed
 16739                           
 16740                           ;controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 16741  003B9E  0E00               	movlw	0
 16742  003BA0  0100               	movlb	0	; () banked
 16743  003BA2  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16744  003BA4  0E0A               	movlw	10
 16745  003BA6  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16746  003BA8  0E00               	movlw	0
 16747  003BAA  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16748  003BAC  0E00               	movlw	0
 16749  003BAE  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16750  003BB0  0E00               	movlw	0
 16751  003BB2  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16752  003BB4  0E01               	movlw	1
 16753  003BB6  EC94  F02A         	call	_acaoFlap
 16754                           
 16755                           ;controle.h: 177: if (t_controle_modo_seguranca == 0) {
 16756  003BBA  0101               	movlb	1	; () banked
 16757  003BBC  514C               	movf	_t_controle_modo_seguranca& (0+255),w,b
 16758  003BBE  114D               	iorwf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 16759  003BC0  A4D8               	btfss	status,2,c
 16760  003BC2  D042               	goto	l1159
 16761                           
 16762                           ; BSR set to: 1
 16763                           ;controle.h: 178: t_controle_modo_seguranca = 1800;
 16764  003BC4  0E07               	movlw	7
 16765  003BC6  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 16766  003BC8  0E08               	movlw	8
 16767  003BCA  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 16768                           
 16769                           ; BSR set to: 1
 16770                           ;controle.h: 179: md_seguranca = ~md_seguranca;
 16771  003BCC  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16772  003BCE  D002               	goto	u13910
 16773  003BD0  825B               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16774  003BD2  D03A               	goto	l1159
 16775  003BD4                     u13910:
 16776  003BD4  925B               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16777                           
 16778                           ;controle.h: 180: }
 16779                           ;controle.h: 181: } else {
 16780  003BD6  D038               	goto	l1159
 16781  003BD8                     l1152:
 16782                           
 16783                           ;controle.h: 182: setLed(8, 0);
 16784  003BD8  0E00               	movlw	0
 16785  003BDA  0100               	movlb	0	; () banked
 16786  003BDC  6F60               	movwf	setLed@acao& (0+255),b
 16787  003BDE  0E08               	movlw	8
 16788  003BE0  EC32  F02F         	call	_setLed
 16789                           
 16790                           ;controle.h: 183: if (umid >= (umidajt + h_flap)) {
 16791  003BE4  504F               	movf	_h_flap,w,c
 16792  003BE6  C0F5  F068         	movff	_umidajt,??_controle
 16793  003BEA  0100               	movlb	0	; () banked
 16794  003BEC  6B69               	clrf	(??_controle+1)& (0+255),b
 16795  003BEE  2768               	addwf	??_controle& (0+255),f,b
 16796  003BF0  0E00               	movlw	0
 16797  003BF2  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16798  003BF4  505D               	movf	_umid,w,c
 16799  003BF6  6F6A               	movwf	(??_controle+2)& (0+255),b
 16800  003BF8  6B6B               	clrf	(??_controle+3)& (0+255),b
 16801  003BFA  5168               	movf	??_controle& (0+255),w,b
 16802  003BFC  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16803  003BFE  516B               	movf	(??_controle+3)& (0+255),w,b
 16804  003C00  0A80               	xorlw	128
 16805  003C02  6F6C               	movwf	(??_controle+4)& (0+255),b
 16806  003C04  5169               	movf	(??_controle+1)& (0+255),w,b
 16807  003C06  0A80               	xorlw	128
 16808  003C08  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16809  003C0A  A0D8               	btfss	status,0,c
 16810  003C0C  D00D               	goto	l1157
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 16814  003C0E  C054  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 16815  003C12  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16816  003C14  5053               	movf	_t_flap_intervalo,w,c
 16817  003C16  0D0A               	mullw	10
 16818  003C18  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 16819  003C1C  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 16820  003C20  0E01               	movlw	1
 16821  003C22  EC94  F02A         	call	_acaoFlap
 16822                           
 16823                           ;controle.h: 185: } else if (umid <= umidajt) {
 16824  003C26  D010               	goto	l1159
 16825  003C28                     l1157:
 16826  003C28  505D               	movf	_umid,w,c
 16827  003C2A  0100               	movlb	0	; () banked
 16828  003C2C  5DF5               	subwf	_umidajt& (0+255),w,b
 16829  003C2E  A0D8               	btfss	status,0,c
 16830  003C30  D00B               	goto	l1159
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;controle.h: 186: acaoFlap(0, 200, 600);
 16834  003C32  0E00               	movlw	0
 16835  003C34  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16836  003C36  0EC8               	movlw	200
 16837  003C38  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16838  003C3A  0E02               	movlw	2
 16839  003C3C  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16840  003C3E  0E58               	movlw	88
 16841  003C40  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16842  003C42  0E00               	movlw	0
 16843  003C44  EC94  F02A         	call	_acaoFlap
 16844  003C48                     l1159:
 16845                           
 16846                           ;controle.h: 187: }
 16847                           ;controle.h: 188: }
 16848                           ;controle.h: 189: if (temp > 0) {
 16849  003C48  0100               	movlb	0	; () banked
 16850  003C4A  51FE               	movf	_temp& (0+255),w,b
 16851  003C4C  B4D8               	btfsc	status,2,c
 16852  003C4E  D03D               	goto	l1160
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 16856  003C50  5050               	movf	_h_abafador,w,c
 16857  003C52  C0FE  F068         	movff	_temp,??_controle
 16858  003C56  6B69               	clrf	(??_controle+1)& (0+255),b
 16859  003C58  2768               	addwf	??_controle& (0+255),f,b
 16860  003C5A  0E00               	movlw	0
 16861  003C5C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16862  003C5E  51F6               	movf	_tempajt& (0+255),w,b
 16863  003C60  6F6A               	movwf	(??_controle+2)& (0+255),b
 16864  003C62  6B6B               	clrf	(??_controle+3)& (0+255),b
 16865  003C64  5168               	movf	??_controle& (0+255),w,b
 16866  003C66  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16867  003C68  516B               	movf	(??_controle+3)& (0+255),w,b
 16868  003C6A  0A80               	xorlw	128
 16869  003C6C  6F6C               	movwf	(??_controle+4)& (0+255),b
 16870  003C6E  5169               	movf	(??_controle+1)& (0+255),w,b
 16871  003C70  0A80               	xorlw	128
 16872  003C72  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16873  003C74  A0D8               	btfss	status,0,c
 16874  003C76  D002               	goto	l1161
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;controle.h: 191: LATEbits.LE0 = 1;
 16878  003C78  808D               	bsf	3981,0,c	;volatile
 16879  003C7A  D008               	goto	L28
 16880  003C7C                     l1161:
 16881                           
 16882                           ; BSR set to: 0
 16883                           
 16884                           ; BSR set to: 0
 16885  003C7C  51F6               	movf	_tempajt& (0+255),w,b
 16886  003C7E  5DFE               	subwf	_temp& (0+255),w,b
 16887  003C80  A0D8               	btfss	status,0,c
 16888  003C82  D003               	goto	l1163
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;controle.h: 194: LATEbits.LE0 = 0;
 16892  003C84  908D               	bcf	3981,0,c	;volatile
 16893                           
 16894                           ;controle.h: 195: LATDbits.LD0 = 1;
 16895  003C86  808C               	bsf	3980,0,c	;volatile
 16896                           
 16897                           ;controle.h: 196: } else {
 16898  003C88  D002               	goto	l1164
 16899  003C8A                     l1163:
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;controle.h: 197: LATEbits.LE0 = 0;
 16903  003C8A  908D               	bcf	3981,0,c	;volatile
 16904  003C8C                     L28:
 16905                           
 16906                           ;controle.h: 198: LATDbits.LD0 = 0;
 16907  003C8C  908C               	bcf	3980,0,c	;volatile
 16908  003C8E                     l1164:
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;controle.h: 199: }
 16912                           ;controle.h: 201: if (fornalha == 1) {
 16913                           
 16914                           ; BSR set to: 0
 16915                           
 16916                           ; BSR set to: 0
 16917  003C8E  045A               	decf	_fornalha,w,c
 16918  003C90  A4D8               	btfss	status,2,c
 16919  003C92  D01D               	goto	L29
 16920                           
 16921                           ; BSR set to: 0
 16922                           ;controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 16923  003C94  5051               	movf	_h_venotinha,w,c
 16924  003C96  C0FE  F068         	movff	_temp,??_controle
 16925  003C9A  6B69               	clrf	(??_controle+1)& (0+255),b
 16926  003C9C  2768               	addwf	??_controle& (0+255),f,b
 16927  003C9E  0E00               	movlw	0
 16928  003CA0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16929  003CA2  51F6               	movf	_tempajt& (0+255),w,b
 16930  003CA4  6F6A               	movwf	(??_controle+2)& (0+255),b
 16931  003CA6  6B6B               	clrf	(??_controle+3)& (0+255),b
 16932  003CA8  5168               	movf	??_controle& (0+255),w,b
 16933  003CAA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16934  003CAC  516B               	movf	(??_controle+3)& (0+255),w,b
 16935  003CAE  0A80               	xorlw	128
 16936  003CB0  6F6C               	movwf	(??_controle+4)& (0+255),b
 16937  003CB2  5169               	movf	(??_controle+1)& (0+255),w,b
 16938  003CB4  0A80               	xorlw	128
 16939  003CB6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16940  003CB8  A0D8               	btfss	status,0,c
 16941  003CBA  D002               	goto	l1166
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;controle.h: 203: LATDbits.LD1 = 1;
 16945  003CBC  828C               	bsf	3980,1,c	;volatile
 16946                           
 16947                           ;controle.h: 205: } else if (temp >= tempajt) {
 16948  003CBE  D008               	goto	l1170
 16949  003CC0                     l1166:
 16950                           
 16951                           ; BSR set to: 0
 16952                           
 16953                           ; BSR set to: 0
 16954  003CC0  51F6               	movf	_tempajt& (0+255),w,b
 16955  003CC2  5DFE               	subwf	_temp& (0+255),w,b
 16956  003CC4  A0D8               	btfss	status,0,c
 16957  003CC6  D004               	goto	l1170
 16958  003CC8  D002               	goto	L29
 16959  003CCA                     l1160:
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;controle.h: 213: LATEbits.LE0 = 0;
 16963  003CCA  908D               	bcf	3981,0,c	;volatile
 16964                           
 16965                           ;controle.h: 214: LATDbits.LD0 = 1;
 16966  003CCC  808C               	bsf	3980,0,c	;volatile
 16967  003CCE                     L29:
 16968                           
 16969                           ;controle.h: 215: LATDbits.LD1 = 0;
 16970  003CCE  928C               	bcf	3980,1,c	;volatile
 16971  003CD0                     l1170:
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;controle.h: 216: }
 16975                           ;controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 16976                           
 16977                           ; BSR set to: 0
 16978  003CD0  045A               	decf	_fornalha,w,c
 16979  003CD2  A4D8               	btfss	status,2,c
 16980  003CD4  D008               	goto	l1171
 16981                           
 16982                           ; BSR set to: 0
 16983  003CD6  51F9               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16984  003CD8  B4D8               	btfsc	status,2,c
 16985  003CDA  D005               	goto	l1171
 16986                           
 16987                           ; BSR set to: 0
 16988                           ;controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 16989  003CDC  C0F9  F14E         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 16990  003CE0  0101               	movlb	1	; () banked
 16991  003CE2  6B4F               	clrf	(_t_controle_religar_ventoinha+1)& (0+255),b
 16992                           
 16993                           ;controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 16994  003CE4  D00B               	goto	l1173
 16995  003CE6                     l1171:
 16996                           
 16997                           ; BSR set to: 1
 16998  003CE6  0101               	movlb	1	; () banked
 16999  003CE8  514E               	movf	_t_controle_religar_ventoinha& (0+255),w,b
 17000  003CEA  114F               	iorwf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 17001  003CEC  A4D8               	btfss	status,2,c
 17002  003CEE  D006               	goto	l1173
 17003                           
 17004                           ; BSR set to: 1
 17005  003CF0  0100               	movlb	0	; () banked
 17006  003CF2  51F9               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 17007  003CF4  B4D8               	btfsc	status,2,c
 17008  003CF6  D002               	goto	l1173
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;controle.h: 222: fornalha = 1;
 17012  003CF8  0E01               	movlw	1
 17013  003CFA  6E5A               	movwf	_fornalha,c
 17014  003CFC                     l1173:
 17015                           
 17016                           ;controle.h: 223: }
 17017                           ;controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 17018                           
 17019                           ; BSR set to: 0
 17020                           
 17021                           ; BSR set to: 0
 17022  003CFC  0100               	movlb	0	; () banked
 17023  003CFE  05FC               	decf	_buzzer& (0+255),w,b
 17024  003D00  A4D8               	btfss	status,2,c
 17025  003D02  D043               	goto	l1178
 17026                           
 17027                           ; BSR set to: 0
 17028  003D04  5037               	movf	_t_controle_buzzer,w,c
 17029  003D06  A4D8               	btfss	status,2,c
 17030  003D08  D040               	goto	l1178
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 17034  003D0A  504E               	movf	_h_buzzer,w,c
 17035  003D0C  C0FE  F068         	movff	_temp,??_controle
 17036  003D10  6B69               	clrf	(??_controle+1)& (0+255),b
 17037  003D12  2768               	addwf	??_controle& (0+255),f,b
 17038  003D14  0E00               	movlw	0
 17039  003D16  2369               	addwfc	(??_controle+1)& (0+255),f,b
 17040  003D18  51F6               	movf	_tempajt& (0+255),w,b
 17041  003D1A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17042  003D1C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17043  003D1E  5168               	movf	??_controle& (0+255),w,b
 17044  003D20  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17045  003D22  516B               	movf	(??_controle+3)& (0+255),w,b
 17046  003D24  0A80               	xorlw	128
 17047  003D26  6F6C               	movwf	(??_controle+4)& (0+255),b
 17048  003D28  5169               	movf	(??_controle+1)& (0+255),w,b
 17049  003D2A  0A80               	xorlw	128
 17050  003D2C  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17051  003D2E  B0D8               	btfsc	status,0,c
 17052  003D30  D01B               	goto	u14080
 17053                           
 17054                           ; BSR set to: 0
 17055  003D32  51F6               	movf	_tempajt& (0+255),w,b
 17056  003D34  6F68               	movwf	??_controle& (0+255),b
 17057  003D36  6B69               	clrf	(??_controle+1)& (0+255),b
 17058  003D38  504E               	movf	_h_buzzer,w,c
 17059  003D3A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17060  003D3C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17061  003D3E  1F6A               	comf	(??_controle+2)& (0+255),f,b
 17062  003D40  1F6B               	comf	(??_controle+3)& (0+255),f,b
 17063  003D42  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 17064  003D44  2B6B               	incf	(??_controle+3)& (0+255),f,b
 17065  003D46  51FE               	movf	_temp& (0+255),w,b
 17066  003D48  6F6C               	movwf	(??_controle+4)& (0+255),b
 17067  003D4A  6B6D               	clrf	(??_controle+5)& (0+255),b
 17068  003D4C  516A               	movf	(??_controle+2)& (0+255),w,b
 17069  003D4E  276C               	addwf	(??_controle+4)& (0+255),f,b
 17070  003D50  516B               	movf	(??_controle+3)& (0+255),w,b
 17071  003D52  236D               	addwfc	(??_controle+5)& (0+255),f,b
 17072  003D54  5168               	movf	??_controle& (0+255),w,b
 17073  003D56  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17074  003D58  516D               	movf	(??_controle+5)& (0+255),w,b
 17075  003D5A  0A80               	xorlw	128
 17076  003D5C  6F6E               	movwf	(??_controle+6)& (0+255),b
 17077  003D5E  5169               	movf	(??_controle+1)& (0+255),w,b
 17078  003D60  0A80               	xorlw	128
 17079  003D62  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17080  003D64  A0D8               	btfss	status,0,c
 17081  003D66  D010               	goto	l1175
 17082  003D68                     u14080:
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;controle.h: 228: t_controle_buzzer = 10;
 17086                           
 17087                           ; BSR set to: 0
 17088  003D68  0E0A               	movlw	10
 17089  003D6A  6E37               	movwf	_t_controle_buzzer,c
 17090                           
 17091                           ; BSR set to: 0
 17092                           ;controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 17093  003D6C  A28B               	btfss	3979,1,c	;volatile
 17094  003D6E  D002               	goto	u14090
 17095  003D70  0E01               	movlw	1
 17096  003D72  D001               	goto	u14096
 17097  003D74                     u14090:
 17098  003D74  0E00               	movlw	0
 17099  003D76                     u14096:
 17100  003D76  0AFF               	xorlw	255
 17101  003D78  6F68               	movwf	??_controle& (0+255),b
 17102  003D7A  4768               	rlncf	??_controle& (0+255),f,b
 17103  003D7C  508B               	movf	3979,w,c	;volatile
 17104  003D7E  1968               	xorwf	??_controle& (0+255),w,b
 17105  003D80  0BFD               	andlw	-3
 17106  003D82  1968               	xorwf	??_controle& (0+255),w,b
 17107  003D84  6E8B               	movwf	3979,c	;volatile
 17108                           
 17109                           ;controle.h: 230: } else {
 17110  003D86  D001               	goto	l1178
 17111  003D88                     l1175:
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;controle.h: 231: LATCbits.LC1 = 0;
 17115  003D88  928B               	bcf	3979,1,c	;volatile
 17116  003D8A                     l1178:
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;controle.h: 232: }
 17120                           ;controle.h: 233: }
 17121                           ;controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 17122                           
 17123                           ; BSR set to: 0
 17124                           
 17125                           ; BSR set to: 0
 17126  003D8A  05FC               	decf	_buzzer& (0+255),w,b
 17127  003D8C  A4D8               	btfss	status,2,c
 17128  003D8E  D008               	goto	l1179
 17129                           
 17130                           ; BSR set to: 0
 17131  003D90  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17132  003D92  B4D8               	btfsc	status,2,c
 17133  003D94  D005               	goto	l1179
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 17137  003D96  C0FF  F150         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 17138  003D9A  0101               	movlb	1	; () banked
 17139  003D9C  6B51               	clrf	(_t_controle_religar_buzzer+1)& (0+255),b
 17140                           
 17141                           ;controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 17142  003D9E  D00B               	goto	l1181
 17143  003DA0                     l1179:
 17144                           
 17145                           ; BSR set to: 1
 17146  003DA0  0101               	movlb	1	; () banked
 17147  003DA2  5150               	movf	_t_controle_religar_buzzer& (0+255),w,b
 17148  003DA4  1151               	iorwf	(_t_controle_religar_buzzer+1)& (0+255),w,b
 17149  003DA6  A4D8               	btfss	status,2,c
 17150  003DA8  D006               	goto	l1181
 17151                           
 17152                           ; BSR set to: 1
 17153  003DAA  0100               	movlb	0	; () banked
 17154  003DAC  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 17155  003DAE  B4D8               	btfsc	status,2,c
 17156  003DB0  D002               	goto	l1181
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;controle.h: 237: buzzer = 1;
 17160  003DB2  0E01               	movlw	1
 17161  003DB4  6FFC               	movwf	_buzzer& (0+255),b
 17162  003DB6                     l1181:
 17163                           
 17164                           ;controle.h: 238: }
 17165                           ;controle.h: 239: if (!buzzer) {
 17166                           
 17167                           ; BSR set to: 0
 17168  003DB6  0100               	movlb	0	; () banked
 17169  003DB8  51FC               	movf	_buzzer& (0+255),w,b
 17170  003DBA  B4D8               	btfsc	status,2,c
 17171                           
 17172                           ; BSR set to: 0
 17173                           ;controle.h: 240: LATCbits.LC1 = 0;
 17174  003DBC  928B               	bcf	3979,1,c	;volatile
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;controle.h: 241: }
 17178                           ;controle.h: 245: if (temp + 3 < tempajt) {
 17179                           
 17180                           ; BSR set to: 0
 17181  003DBE  51F6               	movf	_tempajt& (0+255),w,b
 17182  003DC0  6F68               	movwf	??_controle& (0+255),b
 17183  003DC2  6B69               	clrf	(??_controle+1)& (0+255),b
 17184  003DC4  51FE               	movf	_temp& (0+255),w,b
 17185  003DC6  6F6A               	movwf	(??_controle+2)& (0+255),b
 17186  003DC8  6B6B               	clrf	(??_controle+3)& (0+255),b
 17187  003DCA  0E03               	movlw	3
 17188  003DCC  276A               	addwf	(??_controle+2)& (0+255),f,b
 17189  003DCE  0E00               	movlw	0
 17190  003DD0  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17191  003DD2  5168               	movf	??_controle& (0+255),w,b
 17192  003DD4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17193  003DD6  516B               	movf	(??_controle+3)& (0+255),w,b
 17194  003DD8  0A80               	xorlw	128
 17195  003DDA  6F6C               	movwf	(??_controle+4)& (0+255),b
 17196  003DDC  5169               	movf	(??_controle+1)& (0+255),w,b
 17197  003DDE  0A80               	xorlw	128
 17198  003DE0  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17199  003DE2  B0D8               	btfsc	status,0,c
 17200  003DE4  D00C               	goto	l1183
 17201                           
 17202                           ; BSR set to: 0
 17203                           ;controle.h: 246: setLed(16, 1);
 17204  003DE6  0E01               	movlw	1
 17205  003DE8  6F60               	movwf	setLed@acao& (0+255),b
 17206  003DEA  0E10               	movlw	16
 17207  003DEC  EC32  F02F         	call	_setLed
 17208                           
 17209                           ;controle.h: 247: setLed(32, 0);
 17210  003DF0  0E00               	movlw	0
 17211  003DF2  0100               	movlb	0	; () banked
 17212  003DF4  6F60               	movwf	setLed@acao& (0+255),b
 17213  003DF6  0E20               	movlw	32
 17214  003DF8  EC32  F02F         	call	_setLed
 17215                           
 17216                           ;controle.h: 248: } else if (temp - 3 > tempajt) {
 17217  003DFC  D031               	goto	l1186
 17218  003DFE                     l1183:
 17219  003DFE  0EFD               	movlw	253
 17220  003E00  0100               	movlb	0	; () banked
 17221  003E02  6F68               	movwf	??_controle& (0+255),b
 17222  003E04  0EFF               	movlw	255
 17223  003E06  6F69               	movwf	(??_controle+1)& (0+255),b
 17224  003E08  51FE               	movf	_temp& (0+255),w,b
 17225  003E0A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17226  003E0C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17227  003E0E  5168               	movf	??_controle& (0+255),w,b
 17228  003E10  276A               	addwf	(??_controle+2)& (0+255),f,b
 17229  003E12  5169               	movf	(??_controle+1)& (0+255),w,b
 17230  003E14  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17231  003E16  51F6               	movf	_tempajt& (0+255),w,b
 17232  003E18  6F6C               	movwf	(??_controle+4)& (0+255),b
 17233  003E1A  6B6D               	clrf	(??_controle+5)& (0+255),b
 17234  003E1C  516A               	movf	(??_controle+2)& (0+255),w,b
 17235  003E1E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17236  003E20  516D               	movf	(??_controle+5)& (0+255),w,b
 17237  003E22  0A80               	xorlw	128
 17238  003E24  6F6E               	movwf	(??_controle+6)& (0+255),b
 17239  003E26  516B               	movf	(??_controle+3)& (0+255),w,b
 17240  003E28  0A80               	xorlw	128
 17241  003E2A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17242  003E2C  B0D8               	btfsc	status,0,c
 17243  003E2E  D00C               	goto	l1185
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;controle.h: 249: setLed(32, 1);
 17247  003E30  0E01               	movlw	1
 17248  003E32  6F60               	movwf	setLed@acao& (0+255),b
 17249  003E34  0E20               	movlw	32
 17250  003E36  EC32  F02F         	call	_setLed
 17251                           
 17252                           ;controle.h: 250: setLed(16, 0);
 17253  003E3A  0E00               	movlw	0
 17254  003E3C  0100               	movlb	0	; () banked
 17255  003E3E  6F60               	movwf	setLed@acao& (0+255),b
 17256  003E40  0E10               	movlw	16
 17257  003E42  EC32  F02F         	call	_setLed
 17258                           
 17259                           ;controle.h: 251: } else {
 17260  003E46  D00C               	goto	l1186
 17261  003E48                     l1185:
 17262                           
 17263                           ;controle.h: 252: setLed(32, 0);
 17264  003E48  0E00               	movlw	0
 17265  003E4A  0100               	movlb	0	; () banked
 17266  003E4C  6F60               	movwf	setLed@acao& (0+255),b
 17267  003E4E  0E20               	movlw	32
 17268  003E50  EC32  F02F         	call	_setLed
 17269                           
 17270                           ;controle.h: 253: setLed(16, 0);
 17271  003E54  0E00               	movlw	0
 17272  003E56  0100               	movlb	0	; () banked
 17273  003E58  6F60               	movwf	setLed@acao& (0+255),b
 17274  003E5A  0E10               	movlw	16
 17275  003E5C  EC32  F02F         	call	_setLed
 17276  003E60                     l1186:
 17277                           
 17278                           ;controle.h: 254: }
 17279                           ;controle.h: 256: if (umid + 3 < umidajt) {
 17280  003E60  0100               	movlb	0	; () banked
 17281  003E62  51F5               	movf	_umidajt& (0+255),w,b
 17282  003E64  6F68               	movwf	??_controle& (0+255),b
 17283  003E66  6B69               	clrf	(??_controle+1)& (0+255),b
 17284  003E68  505D               	movf	_umid,w,c
 17285  003E6A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17286  003E6C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17287  003E6E  0E03               	movlw	3
 17288  003E70  276A               	addwf	(??_controle+2)& (0+255),f,b
 17289  003E72  0E00               	movlw	0
 17290  003E74  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17291  003E76  5168               	movf	??_controle& (0+255),w,b
 17292  003E78  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17293  003E7A  516B               	movf	(??_controle+3)& (0+255),w,b
 17294  003E7C  0A80               	xorlw	128
 17295  003E7E  6F6C               	movwf	(??_controle+4)& (0+255),b
 17296  003E80  5169               	movf	(??_controle+1)& (0+255),w,b
 17297  003E82  0A80               	xorlw	128
 17298  003E84  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17299  003E86  B0D8               	btfsc	status,0,c
 17300  003E88  D00C               	goto	l1187
 17301                           
 17302                           ; BSR set to: 0
 17303                           ;controle.h: 257: setLed(1, 0);
 17304  003E8A  0E00               	movlw	0
 17305  003E8C  6F60               	movwf	setLed@acao& (0+255),b
 17306  003E8E  0E01               	movlw	1
 17307  003E90  EC32  F02F         	call	_setLed
 17308                           
 17309                           ;controle.h: 258: setLed(2, 1);
 17310  003E94  0E01               	movlw	1
 17311  003E96  0100               	movlb	0	; () banked
 17312  003E98  6F60               	movwf	setLed@acao& (0+255),b
 17313  003E9A  0E02               	movlw	2
 17314  003E9C  EC32  F02F         	call	_setLed
 17315                           
 17316                           ;controle.h: 259: } else if (umid - 3 > umidajt) {
 17317  003EA0  0012               	return	
 17318  003EA2                     l1187:
 17319  003EA2  0EFD               	movlw	253
 17320  003EA4  0100               	movlb	0	; () banked
 17321  003EA6  6F68               	movwf	??_controle& (0+255),b
 17322  003EA8  0EFF               	movlw	255
 17323  003EAA  6F69               	movwf	(??_controle+1)& (0+255),b
 17324  003EAC  505D               	movf	_umid,w,c
 17325  003EAE  6F6A               	movwf	(??_controle+2)& (0+255),b
 17326  003EB0  6B6B               	clrf	(??_controle+3)& (0+255),b
 17327  003EB2  5168               	movf	??_controle& (0+255),w,b
 17328  003EB4  276A               	addwf	(??_controle+2)& (0+255),f,b
 17329  003EB6  5169               	movf	(??_controle+1)& (0+255),w,b
 17330  003EB8  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17331  003EBA  51F5               	movf	_umidajt& (0+255),w,b
 17332  003EBC  6F6C               	movwf	(??_controle+4)& (0+255),b
 17333  003EBE  6B6D               	clrf	(??_controle+5)& (0+255),b
 17334  003EC0  516A               	movf	(??_controle+2)& (0+255),w,b
 17335  003EC2  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17336  003EC4  516D               	movf	(??_controle+5)& (0+255),w,b
 17337  003EC6  0A80               	xorlw	128
 17338  003EC8  6F6E               	movwf	(??_controle+6)& (0+255),b
 17339  003ECA  516B               	movf	(??_controle+3)& (0+255),w,b
 17340  003ECC  0A80               	xorlw	128
 17341  003ECE  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17342  003ED0  B0D8               	btfsc	status,0,c
 17343  003ED2  D00C               	goto	l1189
 17344                           
 17345                           ; BSR set to: 0
 17346                           ;controle.h: 260: setLed(1, 1);
 17347  003ED4  0E01               	movlw	1
 17348  003ED6  6F60               	movwf	setLed@acao& (0+255),b
 17349  003ED8  0E01               	movlw	1
 17350  003EDA  EC32  F02F         	call	_setLed
 17351                           
 17352                           ;controle.h: 261: setLed(2, 0);
 17353  003EDE  0E00               	movlw	0
 17354  003EE0  0100               	movlb	0	; () banked
 17355  003EE2  6F60               	movwf	setLed@acao& (0+255),b
 17356  003EE4  0E02               	movlw	2
 17357  003EE6  EC32  F02F         	call	_setLed
 17358                           
 17359                           ;controle.h: 262: } else {
 17360  003EEA  0012               	return	
 17361  003EEC                     l1189:
 17362                           
 17363                           ;controle.h: 263: setLed(1, 0);
 17364  003EEC  0E00               	movlw	0
 17365  003EEE  0100               	movlb	0	; () banked
 17366  003EF0  6F60               	movwf	setLed@acao& (0+255),b
 17367  003EF2  0E01               	movlw	1
 17368  003EF4  EC32  F02F         	call	_setLed
 17369                           
 17370                           ;controle.h: 264: setLed(2, 0);
 17371  003EF8  0E00               	movlw	0
 17372  003EFA  0100               	movlb	0	; () banked
 17373  003EFC  6F60               	movwf	setLed@acao& (0+255),b
 17374  003EFE  0E02               	movlw	2
 17375  003F00  EC32  F02F         	call	_setLed
 17376  003F04  0012               	return	
 17377  003F06                     __end_of_controle:
 17378                           	opt stack 0
 17379                           tblptru	equ	0xFF8
 17380                           tblptrh	equ	0xFF7
 17381                           tblptrl	equ	0xFF6
 17382                           tablat	equ	0xFF5
 17383                           prodh	equ	0xFF4
 17384                           prodl	equ	0xFF3
 17385                           intcon	equ	0xFF2
 17386                           intcon2	equ	0xFF1
 17387                           intcon3	equ	0xFF0
 17388                           postinc0	equ	0xFEE
 17389                           wreg	equ	0xFE8
 17390                           indf1	equ	0xFE7
 17391                           postdec1	equ	0xFE5
 17392                           fsr1h	equ	0xFE2
 17393                           fsr1l	equ	0xFE1
 17394                           indf2	equ	0xFDF
 17395                           postinc2	equ	0xFDE
 17396                           postdec2	equ	0xFDD
 17397                           fsr2h	equ	0xFDA
 17398                           fsr2l	equ	0xFD9
 17399                           status	equ	0xFD8
 17400                           
 17401 ;; *************** function _acaoFlap *****************
 17402 ;; Defined at:
 17403 ;;		line 123 in file "src/controle.h"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  acao            1    wreg     unsigned char 
 17406 ;;  tempo_ativad    2    2[BANK0 ] int 
 17407 ;;  tempo_aguard    2    4[BANK0 ] int 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  acao            1    7[BANK0 ] unsigned char 
 17410 ;; Return value:  Size  Location     Type
 17411 ;;                  1    wreg      void 
 17412 ;; Registers used:
 17413 ;;		wreg, status,2, status,0, cstack
 17414 ;; Tracked objects:
 17415 ;;		On entry : 0/0
 17416 ;;		On exit  : 0/0
 17417 ;;		Unchanged: 0/0
 17418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17419 ;;      Params:         0       4       0       0       0       0       0       0       0
 17420 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17421 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17422 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17423 ;;Total ram usage:        6 bytes
 17424 ;; Hardware stack levels used:    1
 17425 ;; Hardware stack levels required when called:    7
 17426 ;; This function calls:
 17427 ;;		_setLed
 17428 ;; This function is called by:
 17429 ;;		_controle
 17430 ;; This function uses a non-reentrant model
 17431 ;;
 17432                           
 17433                           	psect	text22
 17434  005528                     __ptext22:
 17435                           	opt stack 0
 17436  005528                     _acaoFlap:
 17437                           	opt stack 22
 17438                           
 17439                           ;incstack = 0
 17440                           ;acaoFlap@acao stored from wreg
 17441  005528  0100               	movlb	0	; () banked
 17442  00552A  6F67               	movwf	acaoFlap@acao& (0+255),b
 17443                           
 17444                           ;controle.h: 124: if (acao != _acao_flap) {
 17445  00552C  503A               	movf	__acao_flap,w,c
 17446  00552E  0100               	movlb	0	; () banked
 17447  005530  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17448  005532  B4D8               	btfsc	status,2,c
 17449  005534  D007               	goto	l1137
 17450                           
 17451                           ; BSR set to: 0
 17452                           ;controle.h: 125: t_controle_flap = 0;
 17453  005536  0E00               	movlw	0
 17454  005538  6E32               	movwf	_t_controle_flap+1,c
 17455  00553A  0E00               	movlw	0
 17456  00553C  6E31               	movwf	_t_controle_flap,c
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;controle.h: 126: _acao_flap = acao;
 17460  00553E  C067  F03A         	movff	acaoFlap@acao,__acao_flap
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;controle.h: 127: return;
 17464  005542  0012               	return	
 17465  005544                     l1137:
 17466                           
 17467                           ; BSR set to: 0
 17468                           ;controle.h: 128: }
 17469                           ;controle.h: 129: if (acao) {
 17470                           
 17471                           ; BSR set to: 0
 17472  005544  5167               	movf	acaoFlap@acao& (0+255),w,b
 17473  005546  B4D8               	btfsc	status,2,c
 17474  005548  D006               	goto	l1139
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;controle.h: 130: setLed(4, 1);
 17478  00554A  0E01               	movlw	1
 17479  00554C  6F60               	movwf	setLed@acao& (0+255),b
 17480  00554E  0E04               	movlw	4
 17481  005550  EC32  F02F         	call	_setLed
 17482                           
 17483                           ;controle.h: 131: } else {
 17484  005554  D006               	goto	l1140
 17485  005556                     l1139:
 17486                           
 17487                           ;controle.h: 132: setLed(4, 0);
 17488  005556  0E00               	movlw	0
 17489  005558  0100               	movlb	0	; () banked
 17490  00555A  6F60               	movwf	setLed@acao& (0+255),b
 17491  00555C  0E04               	movlw	4
 17492  00555E  EC32  F02F         	call	_setLed
 17493  005562                     l1140:
 17494                           
 17495                           ;controle.h: 133: }
 17496                           ;controle.h: 135: if (!t_controle_flap) {
 17497  005562  5031               	movf	_t_controle_flap,w,c
 17498  005564  1032               	iorwf	_t_controle_flap+1,w,c
 17499  005566  A4D8               	btfss	status,2,c
 17500  005568  D007               	goto	l1141
 17501                           
 17502                           ;controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17503  00556A  0100               	movlb	0	; () banked
 17504  00556C  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17505  00556E  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17506  005570  6E31               	movwf	_t_controle_flap,c
 17507  005572  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17508  005574  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17509  005576  6E32               	movwf	_t_controle_flap+1,c
 17510  005578                     l1141:
 17511                           
 17512                           ;controle.h: 137: }
 17513                           ;controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17514  005578  5031               	movf	_t_controle_flap,w,c
 17515  00557A  0100               	movlb	0	; () banked
 17516  00557C  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17517  00557E  5032               	movf	_t_controle_flap+1,w,c
 17518  005580  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17519  005582  B0D8               	btfsc	status,0,c
 17520  005584  D015               	goto	l1142
 17521                           
 17522                           ; BSR set to: 0
 17523                           ;controle.h: 140: LATAbits.LA5 = !acao;
 17524  005586  5167               	movf	acaoFlap@acao& (0+255),w,b
 17525  005588  A4D8               	btfss	status,2,c
 17526  00558A  D003               	goto	u12020
 17527  00558C  6B66               	clrf	??_acaoFlap& (0+255),b
 17528  00558E  2B66               	incf	??_acaoFlap& (0+255),f,b
 17529  005590  D002               	goto	u12038
 17530  005592                     u12020:
 17531  005592  0100               	movlb	0	; () banked
 17532  005594  6B66               	clrf	??_acaoFlap& (0+255),b
 17533  005596                     u12038:
 17534  005596  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17535  005598  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17536  00559A  5089               	movf	3977,w,c	;volatile
 17537  00559C  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17538  00559E  0BDF               	andlw	-33
 17539  0055A0  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17540  0055A2  6E89               	movwf	3977,c	;volatile
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;controle.h: 141: LATCbits.LC2 = acao;
 17544  0055A4  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17545  0055A6  D002               	bra	u12045
 17546  0055A8  948B               	bcf	3979,2,c	;volatile
 17547  0055AA  D001               	bra	u12046
 17548  0055AC                     u12045:
 17549  0055AC  848B               	bsf	3979,2,c	;volatile
 17550  0055AE                     u12046:
 17551                           
 17552                           ;controle.h: 142: } else {
 17553  0055AE  0012               	return	
 17554  0055B0                     l1142:
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;controle.h: 143: LATAbits.LA5 = 0;
 17558  0055B0  9A89               	bcf	3977,5,c	;volatile
 17559                           
 17560                           ;controle.h: 144: LATCbits.LC2 = 0;
 17561  0055B2  948B               	bcf	3979,2,c	;volatile
 17562  0055B4  0012               	return	
 17563  0055B6                     __end_of_acaoFlap:
 17564                           	opt stack 0
 17565                           tblptru	equ	0xFF8
 17566                           tblptrh	equ	0xFF7
 17567                           tblptrl	equ	0xFF6
 17568                           tablat	equ	0xFF5
 17569                           prodh	equ	0xFF4
 17570                           prodl	equ	0xFF3
 17571                           intcon	equ	0xFF2
 17572                           intcon2	equ	0xFF1
 17573                           intcon3	equ	0xFF0
 17574                           postinc0	equ	0xFEE
 17575                           wreg	equ	0xFE8
 17576                           indf1	equ	0xFE7
 17577                           postdec1	equ	0xFE5
 17578                           fsr1h	equ	0xFE2
 17579                           fsr1l	equ	0xFE1
 17580                           indf2	equ	0xFDF
 17581                           postinc2	equ	0xFDE
 17582                           postdec2	equ	0xFDD
 17583                           fsr2h	equ	0xFDA
 17584                           fsr2l	equ	0xFD9
 17585                           status	equ	0xFD8
 17586                           
 17587 ;; *************** function _setLed *****************
 17588 ;; Defined at:
 17589 ;;		line 18 in file "src/Led_display.h"
 17590 ;; Parameters:    Size  Location     Type
 17591 ;;  led             1    wreg     unsigned char 
 17592 ;;  acao            1    0[BANK0 ] unsigned char 
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;  led             1    1[BANK0 ] unsigned char 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  1    wreg      void 
 17597 ;; Registers used:
 17598 ;;		wreg, status,2, status,0
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17604 ;;      Params:         0       1       0       0       0       0       0       0       0
 17605 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17607 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17608 ;;Total ram usage:        2 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; Hardware stack levels required when called:    6
 17611 ;; This function calls:
 17612 ;;		Nothing
 17613 ;; This function is called by:
 17614 ;;		_acaoFlap
 17615 ;;		_controle
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text23
 17620  005E64                     __ptext23:
 17621                           	opt stack 0
 17622  005E64                     _setLed:
 17623                           	opt stack 23
 17624                           
 17625                           ;incstack = 0
 17626                           ;setLed@led stored from wreg
 17627  005E64  0100               	movlb	0	; () banked
 17628  005E66  6F61               	movwf	setLed@led& (0+255),b
 17629                           
 17630                           ;Led_display.h: 19: if (acao) {
 17631  005E68  0100               	movlb	0	; () banked
 17632  005E6A  5160               	movf	setLed@acao& (0+255),w,b
 17633  005E6C  B4D8               	btfsc	status,2,c
 17634  005E6E  D004               	goto	l221
 17635                           
 17636                           ; BSR set to: 0
 17637                           ;Led_display.h: 20: leds = leds | led;
 17638  005E70  5041               	movf	_leds,w,c
 17639  005E72  1161               	iorwf	setLed@led& (0+255),w,b
 17640  005E74  6E41               	movwf	_leds,c
 17641                           
 17642                           ;Led_display.h: 22: } else {
 17643  005E76  0012               	return	
 17644  005E78                     l221:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;Led_display.h: 23: leds = leds&~led;
 17648                           
 17649                           ; BSR set to: 0
 17650  005E78  5161               	movf	setLed@led& (0+255),w,b
 17651  005E7A  0AFF               	xorlw	255
 17652  005E7C  1441               	andwf	_leds,w,c
 17653  005E7E  6E41               	movwf	_leds,c
 17654  005E80  0012               	return	
 17655  005E82                     __end_of_setLed:
 17656                           	opt stack 0
 17657                           tblptru	equ	0xFF8
 17658                           tblptrh	equ	0xFF7
 17659                           tblptrl	equ	0xFF6
 17660                           tablat	equ	0xFF5
 17661                           prodh	equ	0xFF4
 17662                           prodl	equ	0xFF3
 17663                           intcon	equ	0xFF2
 17664                           intcon2	equ	0xFF1
 17665                           intcon3	equ	0xFF0
 17666                           postinc0	equ	0xFEE
 17667                           wreg	equ	0xFE8
 17668                           indf1	equ	0xFE7
 17669                           postdec1	equ	0xFE5
 17670                           fsr1h	equ	0xFE2
 17671                           fsr1l	equ	0xFE1
 17672                           indf2	equ	0xFDF
 17673                           postinc2	equ	0xFDE
 17674                           postdec2	equ	0xFDD
 17675                           fsr2h	equ	0xFDA
 17676                           fsr2l	equ	0xFD9
 17677                           status	equ	0xFD8
 17678                           
 17679 ;; *************** function _climaAtual *****************
 17680 ;; Defined at:
 17681 ;;		line 34 in file "src/FuncoesControlador.h"
 17682 ;; Parameters:    Size  Location     Type
 17683 ;;  c               1    wreg     unsigned char 
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;  c               1    2[BANK0 ] unsigned char 
 17686 ;; Return value:  Size  Location     Type
 17687 ;;                  2    0[BANK0 ] PTR unsigned char 
 17688 ;; Registers used:
 17689 ;;		wreg, status,2, status,0
 17690 ;; Tracked objects:
 17691 ;;		On entry : 0/0
 17692 ;;		On exit  : 0/0
 17693 ;;		Unchanged: 0/0
 17694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17695 ;;      Params:         0       2       0       0       0       0       0       0       0
 17696 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17698 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17699 ;;Total ram usage:        3 bytes
 17700 ;; Hardware stack levels used:    1
 17701 ;; Hardware stack levels required when called:    6
 17702 ;; This function calls:
 17703 ;;		Nothing
 17704 ;; This function is called by:
 17705 ;;		_main
 17706 ;; This function uses a non-reentrant model
 17707 ;;
 17708                           
 17709                           	psect	text24
 17710  0059C8                     __ptext24:
 17711                           	opt stack 0
 17712  0059C8                     _climaAtual:
 17713                           	opt stack 24
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;incstack = 0
 17717                           ;climaAtual@c stored from wreg
 17718  0059C8  0100               	movlb	0	; () banked
 17719  0059CA  6F62               	movwf	climaAtual@c& (0+255),b
 17720                           
 17721                           ;FuncoesControlador.h: 35: switch (c) {
 17722  0059CC  D015               	goto	l905
 17723  0059CE  0EBC               	movlw	low STR_6
 17724  0059D0  0100               	movlb	0	; () banked
 17725  0059D2  6F60               	movwf	?_climaAtual& (0+255),b
 17726  0059D4  0E7F               	movlw	high STR_6
 17727  0059D6  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17728                           
 17729                           ; BSR set to: 0
 17730  0059D8  0012               	return	
 17731  0059DA                     
 17732                           ; BSR set to: 0
 17733                           
 17734                           ; BSR set to: 0
 17735  0059DA  0E8D               	movlw	low STR_7
 17736  0059DC  6F60               	movwf	?_climaAtual& (0+255),b
 17737  0059DE  0E7F               	movlw	high STR_7
 17738  0059E0  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17739                           
 17740                           ; BSR set to: 0
 17741  0059E2  0012               	return	
 17742  0059E4                     
 17743                           ; BSR set to: 0
 17744                           
 17745                           ; BSR set to: 0
 17746  0059E4  0ED1               	movlw	low STR_8
 17747  0059E6  6F60               	movwf	?_climaAtual& (0+255),b
 17748  0059E8  0E7F               	movlw	high STR_8
 17749  0059EA  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17750                           
 17751                           ; BSR set to: 0
 17752  0059EC  0012               	return	
 17753  0059EE                     
 17754                           ; BSR set to: 0
 17755                           
 17756                           ; BSR set to: 0
 17757  0059EE  0EEC               	movlw	low STR_9
 17758  0059F0  6F60               	movwf	?_climaAtual& (0+255),b
 17759  0059F2  0E7F               	movlw	high STR_9
 17760  0059F4  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;FuncoesControlador.h: 41: }
 17764                           
 17765                           ; BSR set to: 0
 17766  0059F6  0012               	return	
 17767  0059F8                     l905:
 17768                           
 17769                           ; BSR set to: 0
 17770  0059F8  0100               	movlb	0	; () banked
 17771  0059FA  5162               	movf	climaAtual@c& (0+255),w,b
 17772                           
 17773                           ; Switch size 1, requested type "space"
 17774                           ; Number of cases is 3, Range of values is 1 to 3
 17775                           ; switch strategies available:
 17776                           ; Name         Instructions Cycles
 17777                           ; simple_byte           10     6 (average)
 17778                           ;	Chosen strategy is simple_byte
 17779  0059FC  0A01               	xorlw	1	; case 1
 17780  0059FE  B4D8               	btfsc	status,2,c
 17781  005A00  D7E6               	goto	l906
 17782  005A02  0A03               	xorlw	3	; case 2
 17783  005A04  B4D8               	btfsc	status,2,c
 17784  005A06  D7E9               	goto	l908
 17785  005A08  0A01               	xorlw	1	; case 3
 17786  005A0A  B4D8               	btfsc	status,2,c
 17787  005A0C  D7EB               	goto	l909
 17788  005A0E  D7EF               	goto	l910
 17789  005A10                     __end_of_climaAtual:
 17790                           	opt stack 0
 17791                           tblptru	equ	0xFF8
 17792                           tblptrh	equ	0xFF7
 17793                           tblptrl	equ	0xFF6
 17794                           tablat	equ	0xFF5
 17795                           prodh	equ	0xFF4
 17796                           prodl	equ	0xFF3
 17797                           intcon	equ	0xFF2
 17798                           intcon2	equ	0xFF1
 17799                           intcon3	equ	0xFF0
 17800                           postinc0	equ	0xFEE
 17801                           wreg	equ	0xFE8
 17802                           indf1	equ	0xFE7
 17803                           postdec1	equ	0xFE5
 17804                           fsr1h	equ	0xFE2
 17805                           fsr1l	equ	0xFE1
 17806                           indf2	equ	0xFDF
 17807                           postinc2	equ	0xFDE
 17808                           postdec2	equ	0xFDD
 17809                           fsr2h	equ	0xFDA
 17810                           fsr2l	equ	0xFD9
 17811                           status	equ	0xFD8
 17812                           
 17813 ;; *************** function _btPress *****************
 17814 ;; Defined at:
 17815 ;;		line 26 in file "src/Teclado.h"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  bt              1    wreg     unsigned char 
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;  bt              1    0[BANK0 ] unsigned char 
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  1    wreg      unsigned char 
 17822 ;; Registers used:
 17823 ;;		wreg, status,2, status,0
 17824 ;; Tracked objects:
 17825 ;;		On entry : 0/0
 17826 ;;		On exit  : 0/0
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17829 ;;      Params:         0       0       0       0       0       0       0       0       0
 17830 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17832 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17833 ;;Total ram usage:        1 bytes
 17834 ;; Hardware stack levels used:    1
 17835 ;; Hardware stack levels required when called:    6
 17836 ;; This function calls:
 17837 ;;		Nothing
 17838 ;; This function is called by:
 17839 ;;		_main
 17840 ;; This function uses a non-reentrant model
 17841 ;;
 17842                           
 17843                           	psect	text25
 17844  005E82                     __ptext25:
 17845                           	opt stack 0
 17846  005E82                     _btPress:
 17847                           	opt stack 24
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;incstack = 0
 17851                           ;btPress@bt stored from wreg
 17852  005E82  0100               	movlb	0	; () banked
 17853  005E84  6F60               	movwf	btPress@bt& (0+255),b
 17854                           
 17855                           ;Teclado.h: 27: if (bt_flag == bt) {
 17856  005E86  0100               	movlb	0	; () banked
 17857  005E88  5160               	movf	btPress@bt& (0+255),w,b
 17858  005E8A  1840               	xorwf	_bt_flag,w,c
 17859  005E8C  B4D8               	btfsc	status,2,c
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 17863  005E8E  A481               	btfss	3969,2,c	;volatile
 17864  005E90  D004               	goto	l300
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;Teclado.h: 29: bt_flag = 0;
 17868  005E92  0E00               	movlw	0
 17869  005E94  6E40               	movwf	_bt_flag,c
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;Teclado.h: 30: return 1;
 17873  005E96  0E01               	movlw	1
 17874                           
 17875                           ; BSR set to: 0
 17876  005E98  0012               	return	
 17877  005E9A                     l300:
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;Teclado.h: 31: }
 17881                           ;Teclado.h: 32: }
 17882                           ;Teclado.h: 33: return 0;
 17883                           
 17884                           ; BSR set to: 0
 17885                           
 17886                           ; BSR set to: 0
 17887  005E9A  0E00               	movlw	0
 17888  005E9C  0012               	return	
 17889  005E9E                     __end_of_btPress:
 17890                           	opt stack 0
 17891                           tblptru	equ	0xFF8
 17892                           tblptrh	equ	0xFF7
 17893                           tblptrl	equ	0xFF6
 17894                           tablat	equ	0xFF5
 17895                           prodh	equ	0xFF4
 17896                           prodl	equ	0xFF3
 17897                           intcon	equ	0xFF2
 17898                           intcon2	equ	0xFF1
 17899                           intcon3	equ	0xFF0
 17900                           postinc0	equ	0xFEE
 17901                           wreg	equ	0xFE8
 17902                           indf1	equ	0xFE7
 17903                           postdec1	equ	0xFE5
 17904                           fsr1h	equ	0xFE2
 17905                           fsr1l	equ	0xFE1
 17906                           indf2	equ	0xFDF
 17907                           postinc2	equ	0xFDE
 17908                           postdec2	equ	0xFDD
 17909                           fsr2h	equ	0xFDA
 17910                           fsr2l	equ	0xFD9
 17911                           status	equ	0xFD8
 17912                           
 17913 ;; *************** function _blink *****************
 17914 ;; Defined at:
 17915 ;;		line 212 in file "src/lcd.h"
 17916 ;; Parameters:    Size  Location     Type
 17917 ;;  line            2    0[BANK0 ] PTR unsigned char 
 17918 ;;		 -> line3(21), line2(21), line1(21), 
 17919 ;;  start           1    2[BANK0 ] unsigned char 
 17920 ;;  end             1    3[BANK0 ] unsigned char 
 17921 ;; Auto vars:     Size  Location     Type
 17922 ;;  i               1    4[BANK0 ] unsigned char 
 17923 ;; Return value:  Size  Location     Type
 17924 ;;                  1    wreg      void 
 17925 ;; Registers used:
 17926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17927 ;; Tracked objects:
 17928 ;;		On entry : 0/0
 17929 ;;		On exit  : 0/0
 17930 ;;		Unchanged: 0/0
 17931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17932 ;;      Params:         0       4       0       0       0       0       0       0       0
 17933 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17934 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17935 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17936 ;;Total ram usage:        5 bytes
 17937 ;; Hardware stack levels used:    1
 17938 ;; Hardware stack levels required when called:    6
 17939 ;; This function calls:
 17940 ;;		Nothing
 17941 ;; This function is called by:
 17942 ;;		_main
 17943 ;; This function uses a non-reentrant model
 17944 ;;
 17945                           
 17946                           	psect	text26
 17947  005BEE                     __ptext26:
 17948                           	opt stack 0
 17949  005BEE                     _blink:
 17950                           	opt stack 24
 17951                           
 17952                           ;lcd.h: 213: if (blinkk) {
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;incstack = 0
 17956  005BEE  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17957  005BF0  0012               	return	
 17958                           
 17959                           ;lcd.h: 214: char i = 0;
 17960  005BF2  0E00               	movlw	0
 17961  005BF4  0100               	movlb	0	; () banked
 17962  005BF6  6F64               	movwf	blink@i& (0+255),b
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 17966  005BF8  0762               	decf	blink@start& (0+255),f,b
 17967  005BFA  C062  F064         	movff	blink@start,blink@i
 17968  005BFE  D00B               	goto	l288
 17969  005C00                     
 17970                           ; BSR set to: 0
 17971                           ;lcd.h: 216: line[i] = ' ';
 17972                           
 17973                           ; BSR set to: 0
 17974  005C00  5164               	movf	blink@i& (0+255),w,b
 17975  005C02  0D01               	mullw	1
 17976  005C04  50F3               	movf	prodl,w,c
 17977  005C06  2560               	addwf	blink@line& (0+255),w,b
 17978  005C08  6ED9               	movwf	fsr2l,c
 17979  005C0A  50F4               	movf	prodh,w,c
 17980  005C0C  2161               	addwfc	(blink@line+1)& (0+255),w,b
 17981  005C0E  6EDA               	movwf	fsr2h,c
 17982  005C10  0E20               	movlw	32
 17983  005C12  6EDF               	movwf	indf2,c
 17984                           
 17985                           ; BSR set to: 0
 17986  005C14  2B64               	incf	blink@i& (0+255),f,b
 17987  005C16                     l288:
 17988                           
 17989                           ; BSR set to: 0
 17990                           
 17991                           ; BSR set to: 0
 17992  005C16  5163               	movf	blink@end& (0+255),w,b
 17993  005C18  5D64               	subwf	blink@i& (0+255),w,b
 17994  005C1A  B0D8               	btfsc	status,0,c
 17995  005C1C  0012               	return	
 17996  005C1E  D7F0               	goto	l289
 17997  005C20                     __end_of_blink:
 17998                           	opt stack 0
 17999                           tblptru	equ	0xFF8
 18000                           tblptrh	equ	0xFF7
 18001                           tblptrl	equ	0xFF6
 18002                           tablat	equ	0xFF5
 18003                           prodh	equ	0xFF4
 18004                           prodl	equ	0xFF3
 18005                           intcon	equ	0xFF2
 18006                           intcon2	equ	0xFF1
 18007                           intcon3	equ	0xFF0
 18008                           postinc0	equ	0xFEE
 18009                           wreg	equ	0xFE8
 18010                           indf1	equ	0xFE7
 18011                           postdec1	equ	0xFE5
 18012                           fsr1h	equ	0xFE2
 18013                           fsr1l	equ	0xFE1
 18014                           indf2	equ	0xFDF
 18015                           postinc2	equ	0xFDE
 18016                           postdec2	equ	0xFDD
 18017                           fsr2h	equ	0xFDA
 18018                           fsr2l	equ	0xFD9
 18019                           status	equ	0xFD8
 18020                           
 18021 ;; *************** function _alterarDadosConexaoConfigWifi *****************
 18022 ;; Defined at:
 18023 ;;		line 18 in file "src/conexaoWifi.h"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;		None
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;  i               1  130[BANK0 ] unsigned char 
 18028 ;;  port            2  128[BANK0 ] int 
 18029 ;; Return value:  Size  Location     Type
 18030 ;;                  1    wreg      void 
 18031 ;; Registers used:
 18032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18033 ;; Tracked objects:
 18034 ;;		On entry : 0/0
 18035 ;;		On exit  : 0/0
 18036 ;;		Unchanged: 0/0
 18037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18038 ;;      Params:         0       0       0       0       0       0       0       0       0
 18039 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18040 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18041 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18042 ;;Total ram usage:        3 bytes
 18043 ;; Hardware stack levels used:    1
 18044 ;; Hardware stack levels required when called:   10
 18045 ;; This function calls:
 18046 ;;		_atualizaLCD
 18047 ;;		_delay
 18048 ;;		_findBufferSerial
 18049 ;;		_getIntJSON
 18050 ;;		_getStringJSON
 18051 ;;		_printf
 18052 ;;		_setKeyStartReceiveSerial
 18053 ;;		_sprintf
 18054 ;;		_strlen
 18055 ;;		_writeEEPROM16_ext
 18056 ;;		_writeEEPROM_ext
 18057 ;; This function is called by:
 18058 ;;		_main
 18059 ;; This function uses a non-reentrant model
 18060 ;;
 18061                           
 18062                           	psect	text27
 18063  0035FC                     __ptext27:
 18064                           	opt stack 0
 18065  0035FC                     _alterarDadosConexaoConfigWifi:
 18066                           	opt stack 20
 18067                           
 18068                           ;conexaoWifi.h: 19: if (t_wifi_restart == 0) {
 18069                           
 18070                           ;incstack = 0
 18071  0035FC  503C               	movf	_t_wifi_restart,w,c
 18072  0035FE  A4D8               	btfss	status,2,c
 18073  003600  D006               	goto	l972
 18074                           
 18075                           ;conexaoWifi.h: 20: menu = 8;
 18076  003602  0E08               	movlw	8
 18077  003604  0100               	movlb	0	; () banked
 18078  003606  6FFD               	movwf	_menu& (0+255),b
 18079                           
 18080                           ;conexaoWifi.h: 21: opcaomenu = 1;
 18081  003608  0E01               	movlw	1
 18082  00360A  6E43               	movwf	_opcaomenu,c
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;conexaoWifi.h: 23: } else {
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;conexaoWifi.h: 22: return;
 18089  00360C  0012               	return	
 18090  00360E                     l972:
 18091                           
 18092                           ;conexaoWifi.h: 24: delay(10);
 18093                           
 18094                           ; BSR set to: 0
 18095  00360E  0E00               	movlw	0
 18096  003610  0100               	movlb	0	; () banked
 18097  003612  6F61               	movwf	(delay@x+1)& (0+255),b
 18098  003614  0E0A               	movlw	10
 18099  003616  6F60               	movwf	delay@x& (0+255),b
 18100  003618  EC86  F02E         	call	_delay	;wreg free
 18101                           
 18102                           ;conexaoWifi.h: 25: switch (f_wifi_processo) {
 18103  00361C  D23A               	goto	l975
 18104  00361E                     
 18105                           ;conexaoWifi.h: 27: setKeyStartReceiveSerial("ALL");
 18106  00361E  0EE2               	movlw	low STR_10
 18107  003620  0100               	movlb	0	; () banked
 18108  003622  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18109  003624  0E7F               	movlw	high STR_10
 18110  003626  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18111  003628  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18112                           
 18113                           ;conexaoWifi.h: 28: printf("AT+CWMODE=2\r\n");
 18114  00362C  0E59               	movlw	low STR_11
 18115  00362E  0100               	movlb	0	; () banked
 18116  003630  6F81               	movwf	printf@f& (0+255),b
 18117  003632  0E7E               	movlw	high STR_11
 18118  003634  6F82               	movwf	(printf@f+1)& (0+255),b
 18119  003636  EC8C  F02D         	call	_printf	;wreg free
 18120                           
 18121                           ;conexaoWifi.h: 29: wifi_conectado = 0;
 18122  00363A  0E00               	movlw	0
 18123  00363C  6E47               	movwf	_wifi_conectado,c
 18124                           
 18125                           ;conexaoWifi.h: 30: f_wifi_processo++;
 18126  00363E  2A3B               	incf	_f_wifi_processo,f,c
 18127                           
 18128                           ;conexaoWifi.h: 31: break;
 18129  003640  0012               	return	
 18130  003642                     
 18131                           ;conexaoWifi.h: 33: if (findBufferSerial("OK")) {
 18132  003642  0EEF               	movlw	low STR_12
 18133  003644  0100               	movlb	0	; () banked
 18134  003646  6F74               	movwf	findBufferSerial@key& (0+255),b
 18135  003648  0E7F               	movlw	high STR_12
 18136  00364A  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18137  00364C  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18138  003650  0900               	iorlw	0
 18139  003652  B4D8               	btfsc	status,2,c
 18140  003654  0012               	return	
 18141                           
 18142                           ;conexaoWifi.h: 34: setKeyStartReceiveSerial("ALL");
 18143  003656  0EE2               	movlw	low STR_10
 18144  003658  0100               	movlb	0	; () banked
 18145  00365A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18146  00365C  0E7F               	movlw	high STR_10
 18147  00365E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18148  003660  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18149                           
 18150                           ;conexaoWifi.h: 35: printf("AT+CIPMUX=1\r\n");
 18151  003664  0E4B               	movlw	low STR_14
 18152  003666  0100               	movlb	0	; () banked
 18153  003668  6F81               	movwf	printf@f& (0+255),b
 18154  00366A  0E7E               	movlw	high STR_14
 18155  00366C  6F82               	movwf	(printf@f+1)& (0+255),b
 18156  00366E  EC8C  F02D         	call	_printf	;wreg free
 18157                           
 18158                           ;conexaoWifi.h: 36: f_wifi_processo++;
 18159  003672  2A3B               	incf	_f_wifi_processo,f,c
 18160                           
 18161                           ;conexaoWifi.h: 37: }
 18162                           ;conexaoWifi.h: 38: break;
 18163  003674  0012               	return	
 18164  003676                     
 18165                           ;conexaoWifi.h: 40: if (findBufferSerial("OK")) {
 18166  003676  0EEF               	movlw	low STR_12
 18167  003678  0100               	movlb	0	; () banked
 18168  00367A  6F74               	movwf	findBufferSerial@key& (0+255),b
 18169  00367C  0E7F               	movlw	high STR_12
 18170  00367E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18171  003680  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18172  003684  0900               	iorlw	0
 18173  003686  B4D8               	btfsc	status,2,c
 18174  003688  0012               	return	
 18175                           
 18176                           ;conexaoWifi.h: 41: setKeyStartReceiveSerial("ALL");
 18177  00368A  0EE2               	movlw	low STR_10
 18178  00368C  0100               	movlb	0	; () banked
 18179  00368E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18180  003690  0E7F               	movlw	high STR_10
 18181  003692  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18182  003694  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18183                           
 18184                           ;conexaoWifi.h: 42: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18185  003698  0E86               	movlw	low STR_17
 18186  00369A  0100               	movlb	0	; () banked
 18187  00369C  6F81               	movwf	printf@f& (0+255),b
 18188  00369E  0E7B               	movlw	high STR_17
 18189  0036A0  6F82               	movwf	(printf@f+1)& (0+255),b
 18190  0036A2  EC8C  F02D         	call	_printf	;wreg free
 18191                           
 18192                           ;conexaoWifi.h: 43: f_wifi_processo++;
 18193  0036A6  2A3B               	incf	_f_wifi_processo,f,c
 18194                           
 18195                           ;conexaoWifi.h: 44: }
 18196                           ;conexaoWifi.h: 45: break;
 18197  0036A8  0012               	return	
 18198  0036AA                     
 18199                           ;conexaoWifi.h: 47: if (findBufferSerial("OK")) {
 18200  0036AA  0EEF               	movlw	low STR_12
 18201  0036AC  0100               	movlb	0	; () banked
 18202  0036AE  6F74               	movwf	findBufferSerial@key& (0+255),b
 18203  0036B0  0E7F               	movlw	high STR_12
 18204  0036B2  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18205  0036B4  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18206  0036B8  0900               	iorlw	0
 18207  0036BA  B4D8               	btfsc	status,2,c
 18208  0036BC  0012               	return	
 18209                           
 18210                           ;conexaoWifi.h: 48: setKeyStartReceiveSerial("ALL");
 18211  0036BE  0EE2               	movlw	low STR_10
 18212  0036C0  0100               	movlb	0	; () banked
 18213  0036C2  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18214  0036C4  0E7F               	movlw	high STR_10
 18215  0036C6  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18216  0036C8  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18217                           
 18218                           ;conexaoWifi.h: 49: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18219  0036CC  0EC5               	movlw	low STR_20
 18220  0036CE  0100               	movlb	0	; () banked
 18221  0036D0  6F81               	movwf	printf@f& (0+255),b
 18222  0036D2  0E7B               	movlw	high STR_20
 18223  0036D4  6F82               	movwf	(printf@f+1)& (0+255),b
 18224  0036D6  EC8C  F02D         	call	_printf	;wreg free
 18225                           
 18226                           ;conexaoWifi.h: 50: f_wifi_processo++;
 18227  0036DA  2A3B               	incf	_f_wifi_processo,f,c
 18228                           
 18229                           ;conexaoWifi.h: 51: }
 18230                           ;conexaoWifi.h: 52: break;
 18231  0036DC  0012               	return	
 18232  0036DE                     
 18233                           ;conexaoWifi.h: 54: if (findBufferSerial("OK")) {
 18234  0036DE  0EEF               	movlw	low STR_12
 18235  0036E0  0100               	movlb	0	; () banked
 18236  0036E2  6F74               	movwf	findBufferSerial@key& (0+255),b
 18237  0036E4  0E7F               	movlw	high STR_12
 18238  0036E6  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18239  0036E8  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18240  0036EC  0900               	iorlw	0
 18241  0036EE  B4D8               	btfsc	status,2,c
 18242  0036F0  0012               	return	
 18243                           
 18244                           ;conexaoWifi.h: 55: setKeyStartReceiveSerial("ALL");
 18245  0036F2  0EE2               	movlw	low STR_10
 18246  0036F4  0100               	movlb	0	; () banked
 18247  0036F6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18248  0036F8  0E7F               	movlw	high STR_10
 18249  0036FA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18250  0036FC  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18251                           
 18252                           ;conexaoWifi.h: 56: printf("AT+CIPSERVER=1,80\r\n");
 18253  003700  0E45               	movlw	low STR_23
 18254  003702  0100               	movlb	0	; () banked
 18255  003704  6F81               	movwf	printf@f& (0+255),b
 18256  003706  0E7C               	movlw	high STR_23
 18257  003708  6F82               	movwf	(printf@f+1)& (0+255),b
 18258  00370A  EC8C  F02D         	call	_printf	;wreg free
 18259                           
 18260                           ;conexaoWifi.h: 57: f_wifi_processo++;
 18261  00370E  2A3B               	incf	_f_wifi_processo,f,c
 18262                           
 18263                           ;conexaoWifi.h: 58: }
 18264                           ;conexaoWifi.h: 59: break;
 18265  003710  0012               	return	
 18266  003712                     
 18267                           ;conexaoWifi.h: 61: if (findBufferSerial("OK")) {
 18268  003712  0EEF               	movlw	low STR_12
 18269  003714  0100               	movlb	0	; () banked
 18270  003716  6F74               	movwf	findBufferSerial@key& (0+255),b
 18271  003718  0E7F               	movlw	high STR_12
 18272  00371A  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18273  00371C  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18274  003720  0900               	iorlw	0
 18275  003722  B4D8               	btfsc	status,2,c
 18276  003724  0012               	return	
 18277                           
 18278                           ;conexaoWifi.h: 62: setKeyStartReceiveSerial("Accept");
 18279  003726  0EA9               	movlw	low STR_25
 18280  003728  0100               	movlb	0	; () banked
 18281  00372A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18282  00372C  0E7F               	movlw	high STR_25
 18283  00372E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18284  003730  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18285                           
 18286                           ;conexaoWifi.h: 63: f_wifi_processo++;
 18287  003734  2A3B               	incf	_f_wifi_processo,f,c
 18288                           
 18289                           ;conexaoWifi.h: 64: t_wifi_restart = 180;
 18290  003736  0EB4               	movlw	180
 18291  003738  6E3C               	movwf	_t_wifi_restart,c
 18292                           
 18293                           ;conexaoWifi.h: 65: }
 18294                           ;conexaoWifi.h: 66: break;
 18295  00373A  0012               	return	
 18296  00373C                     
 18297                           ;conexaoWifi.h: 68: sprintf(line1, "Conecte-se a rede e");
 18298  00373C  0E95               	movlw	low _line1
 18299  00373E  0100               	movlb	0	; () banked
 18300  003740  6F81               	movwf	sprintf@wh& (0+255),b
 18301  003742  0E01               	movlw	high _line1
 18302  003744  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18303  003746  0ED1               	movlw	low STR_26
 18304  003748  6F83               	movwf	sprintf@f& (0+255),b
 18305  00374A  0E7C               	movlw	high STR_26
 18306  00374C  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18307  00374E  EC08  F02D         	call	_sprintf	;wreg free
 18308                           
 18309                           ;conexaoWifi.h: 69: sprintf(line2, "acesse o IP para");
 18310  003752  0E80               	movlw	low _line2
 18311  003754  0100               	movlb	0	; () banked
 18312  003756  6F81               	movwf	sprintf@wh& (0+255),b
 18313  003758  0E01               	movlw	high _line2
 18314  00375A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18315  00375C  0E9D               	movlw	low STR_27
 18316  00375E  6F83               	movwf	sprintf@f& (0+255),b
 18317  003760  0E7D               	movlw	high STR_27
 18318  003762  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18319  003764  EC08  F02D         	call	_sprintf	;wreg free
 18320                           
 18321                           ;conexaoWifi.h: 70: sprintf(line3, "configurar o WIFI...");
 18322  003768  0E6B               	movlw	low _line3
 18323  00376A  0100               	movlb	0	; () banked
 18324  00376C  6F81               	movwf	sprintf@wh& (0+255),b
 18325  00376E  0E01               	movlw	high _line3
 18326  003770  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18327  003772  0E1B               	movlw	low STR_28
 18328  003774  6F83               	movwf	sprintf@f& (0+255),b
 18329  003776  0E7C               	movlw	high STR_28
 18330  003778  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18331  00377A  EC08  F02D         	call	_sprintf	;wreg free
 18332                           
 18333                           ;conexaoWifi.h: 71: sprintf(line4, "10.1.1.1");
 18334  00377E  0E56               	movlw	low _line4
 18335  003780  0100               	movlb	0	; () banked
 18336  003782  6F81               	movwf	sprintf@wh& (0+255),b
 18337  003784  0E01               	movlw	high _line4
 18338  003786  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18339  003788  0E3C               	movlw	low STR_29
 18340  00378A  6F83               	movwf	sprintf@f& (0+255),b
 18341  00378C  0E7F               	movlw	high STR_29
 18342  00378E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18343  003790  EC08  F02D         	call	_sprintf	;wreg free
 18344                           
 18345                           ;conexaoWifi.h: 72: if (findBufferSerial("Accept")) {
 18346  003794  0EA9               	movlw	low STR_25
 18347  003796  0100               	movlb	0	; () banked
 18348  003798  6F74               	movwf	findBufferSerial@key& (0+255),b
 18349  00379A  0E7F               	movlw	high STR_25
 18350  00379C  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18351  00379E  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18352  0037A2  0900               	iorlw	0
 18353  0037A4  B4D8               	btfsc	status,2,c
 18354  0037A6  0012               	return	
 18355                           
 18356                           ;conexaoWifi.h: 73: delay(400);
 18357  0037A8  0E01               	movlw	1
 18358  0037AA  0100               	movlb	0	; () banked
 18359  0037AC  6F61               	movwf	(delay@x+1)& (0+255),b
 18360  0037AE  0E90               	movlw	144
 18361  0037B0  6F60               	movwf	delay@x& (0+255),b
 18362  0037B2  EC86  F02E         	call	_delay	;wreg free
 18363                           
 18364                           ;conexaoWifi.h: 74: setKeyStartReceiveSerial("ALL");
 18365  0037B6  0EE2               	movlw	low STR_10
 18366  0037B8  0100               	movlb	0	; () banked
 18367  0037BA  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18368  0037BC  0E7F               	movlw	high STR_10
 18369  0037BE  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18370  0037C0  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18371                           
 18372                           ;conexaoWifi.h: 75: printf("AT+CIPSENDEX=0,800\r\n");
 18373  0037C4  0E06               	movlw	low STR_32
 18374  0037C6  0100               	movlb	0	; () banked
 18375  0037C8  6F81               	movwf	printf@f& (0+255),b
 18376  0037CA  0E7C               	movlw	high STR_32
 18377  0037CC  6F82               	movwf	(printf@f+1)& (0+255),b
 18378  0037CE  EC8C  F02D         	call	_printf	;wreg free
 18379                           
 18380                           ;conexaoWifi.h: 76: f_wifi_processo++;
 18381  0037D2  2A3B               	incf	_f_wifi_processo,f,c
 18382                           
 18383                           ;conexaoWifi.h: 77: }
 18384                           ;conexaoWifi.h: 78: break;
 18385  0037D4  0012               	return	
 18386  0037D6                     
 18387                           ;conexaoWifi.h: 80: if (findBufferSerial(">")) {
 18388  0037D6  0E7F               	movlw	low (STR_122+18)
 18389  0037D8  0100               	movlb	0	; () banked
 18390  0037DA  6F74               	movwf	findBufferSerial@key& (0+255),b
 18391  0037DC  0E7C               	movlw	high (STR_122+18)
 18392  0037DE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18393  0037E0  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18394  0037E4  0900               	iorlw	0
 18395  0037E6  B4D8               	btfsc	status,2,c
 18396  0037E8  0012               	return	
 18397                           
 18398                           ;conexaoWifi.h: 81: setKeyStartReceiveSerial("ALL");
 18399  0037EA  0EE2               	movlw	low STR_10
 18400  0037EC  0100               	movlb	0	; () banked
 18401  0037EE  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18402  0037F0  0E7F               	movlw	high STR_10
 18403  0037F2  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18404  0037F4  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18405                           
 18406                           ;conexaoWifi.h: 82: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18407  0037F8  0E59               	movlw	low STR_35
 18408  0037FA  0100               	movlb	0	; () banked
 18409  0037FC  6F81               	movwf	printf@f& (0+255),b
 18410  0037FE  0E7B               	movlw	high STR_35
 18411  003800  6F82               	movwf	(printf@f+1)& (0+255),b
 18412  003802  EC8C  F02D         	call	_printf	;wreg free
 18413                           
 18414                           ;conexaoWifi.h: 83: delay(100);
 18415  003806  0E00               	movlw	0
 18416  003808  0100               	movlb	0	; () banked
 18417  00380A  6F61               	movwf	(delay@x+1)& (0+255),b
 18418  00380C  0E64               	movlw	100
 18419  00380E  6F60               	movwf	delay@x& (0+255),b
 18420  003810  EC86  F02E         	call	_delay	;wreg free
 18421                           
 18422                           ;conexaoWifi.h: 84: printf("<html><style>div{margin:25px auto;max-width:350px;display:fl
      +                          ex;flex-direction:column;}input,button{padding:7px;margin-bottom:25px;border:1px solid #
      +                          888;border-radius:3px;}</style><body><div> <h2>Configuração Wifi</h2> SSID: <input id='s
      +                          ' valu
 18423  003814  0E51               	movlw	low STR_36
 18424  003816  0100               	movlb	0	; () banked
 18425  003818  6F81               	movwf	printf@f& (0+255),b
 18426  00381A  0E78               	movlw	high STR_36
 18427  00381C  6F82               	movwf	(printf@f+1)& (0+255),b
 18428  00381E  0ECD               	movlw	low _ssid
 18429  003820  6F83               	movwf	(?_printf+2)& (0+255),b
 18430  003822  0E01               	movlw	high _ssid
 18431  003824  6F84               	movwf	(?_printf+3)& (0+255),b
 18432  003826  0EBE               	movlw	low _senha
 18433  003828  6F85               	movwf	(?_printf+4)& (0+255),b
 18434  00382A  0E01               	movlw	high _senha
 18435  00382C  6F86               	movwf	(?_printf+5)& (0+255),b
 18436  00382E  0EAA               	movlw	low _ipServer
 18437  003830  6F87               	movwf	(?_printf+6)& (0+255),b
 18438  003832  0E01               	movlw	high _ipServer
 18439  003834  6F88               	movwf	(?_printf+7)& (0+255),b
 18440  003836  C033  F089         	movff	_portServer,?_printf+8
 18441  00383A  C034  F08A         	movff	_portServer+1,?_printf+9
 18442  00383E  EC8C  F02D         	call	_printf	;wreg free
 18443                           
 18444                           ;conexaoWifi.h: 85: delay(800);
 18445  003842  0E03               	movlw	3
 18446  003844  0100               	movlb	0	; () banked
 18447  003846  6F61               	movwf	(delay@x+1)& (0+255),b
 18448  003848  0E20               	movlw	32
 18449  00384A  6F60               	movwf	delay@x& (0+255),b
 18450  00384C  EC86  F02E         	call	_delay	;wreg free
 18451                           
 18452                           ;conexaoWifi.h: 86: printf("AT+CIPCLOSE=0\r\n");
 18453  003850  0EF2               	movlw	low STR_37
 18454  003852  0100               	movlb	0	; () banked
 18455  003854  6F81               	movwf	printf@f& (0+255),b
 18456  003856  0E7D               	movlw	high STR_37
 18457  003858  6F82               	movwf	(printf@f+1)& (0+255),b
 18458  00385A  EC8C  F02D         	call	_printf	;wreg free
 18459                           
 18460                           ;conexaoWifi.h: 87: delay(300);
 18461  00385E  0E01               	movlw	1
 18462  003860  0100               	movlb	0	; () banked
 18463  003862  6F61               	movwf	(delay@x+1)& (0+255),b
 18464  003864  0E2C               	movlw	44
 18465  003866  6F60               	movwf	delay@x& (0+255),b
 18466  003868  EC86  F02E         	call	_delay	;wreg free
 18467                           
 18468                           ;conexaoWifi.h: 88: t_wifi_restart = 180;
 18469  00386C  0EB4               	movlw	180
 18470  00386E  6E3C               	movwf	_t_wifi_restart,c
 18471                           
 18472                           ;conexaoWifi.h: 89: setKeyStartReceiveSerial("$#");
 18473  003870  0EE6               	movlw	low STR_38
 18474  003872  0100               	movlb	0	; () banked
 18475  003874  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18476  003876  0E7F               	movlw	high STR_38
 18477  003878  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18478  00387A  ECCF  F02B         	call	_setKeyStartReceiveSerial	;wreg free
 18479                           
 18480                           ;conexaoWifi.h: 90: f_wifi_processo++;
 18481  00387E  2A3B               	incf	_f_wifi_processo,f,c
 18482                           
 18483                           ;conexaoWifi.h: 91: }
 18484                           ;conexaoWifi.h: 92: break;
 18485  003880  0012               	return	
 18486  003882                     
 18487                           ;conexaoWifi.h: 94: sprintf(line4, "Aguardando...");
 18488  003882  0E56               	movlw	low _line4
 18489  003884  0100               	movlb	0	; () banked
 18490  003886  6F81               	movwf	sprintf@wh& (0+255),b
 18491  003888  0E01               	movlw	high _line4
 18492  00388A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18493  00388C  0E75               	movlw	low STR_39
 18494  00388E  6F83               	movwf	sprintf@f& (0+255),b
 18495  003890  0E7E               	movlw	high STR_39
 18496  003892  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18497  003894  EC08  F02D         	call	_sprintf	;wreg free
 18498                           
 18499                           ;conexaoWifi.h: 95: if (findBufferSerial("#$")) {
 18500  003898  0EE9               	movlw	low STR_40
 18501  00389A  0100               	movlb	0	; () banked
 18502  00389C  6F74               	movwf	findBufferSerial@key& (0+255),b
 18503  00389E  0E7F               	movlw	high STR_40
 18504  0038A0  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18505  0038A2  ECAF  F02E         	call	_findBufferSerial	;wreg free
 18506  0038A6  0900               	iorlw	0
 18507  0038A8  B4D8               	btfsc	status,2,c
 18508  0038AA  0012               	return	
 18509                           
 18510                           ;conexaoWifi.h: 96: getStringJSON(bufferSerial, "ss", ssid);
 18511  0038AC  0E69               	movlw	low _bufferSerial
 18512  0038AE  0100               	movlb	0	; () banked
 18513  0038B0  6F91               	movwf	getStringJSON@buff& (0+255),b
 18514  0038B2  0E02               	movlw	high _bufferSerial
 18515  0038B4  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18516  0038B6  0EF2               	movlw	low STR_41
 18517  0038B8  6F93               	movwf	getStringJSON@key& (0+255),b
 18518  0038BA  0E7F               	movlw	high STR_41
 18519  0038BC  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18520  0038BE  0ECD               	movlw	low _ssid
 18521  0038C0  6F95               	movwf	getStringJSON@ret& (0+255),b
 18522  0038C2  0E01               	movlw	high _ssid
 18523  0038C4  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18524  0038C6  ECC6  F021         	call	_getStringJSON	;wreg free
 18525                           
 18526                           ;conexaoWifi.h: 97: getStringJSON(bufferSerial, "pw", senha);
 18527  0038CA  0E69               	movlw	low _bufferSerial
 18528  0038CC  0100               	movlb	0	; () banked
 18529  0038CE  6F91               	movwf	getStringJSON@buff& (0+255),b
 18530  0038D0  0E02               	movlw	high _bufferSerial
 18531  0038D2  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18532  0038D4  0EF8               	movlw	low STR_42
 18533  0038D6  6F93               	movwf	getStringJSON@key& (0+255),b
 18534  0038D8  0E7F               	movlw	high STR_42
 18535  0038DA  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18536  0038DC  0EBE               	movlw	low _senha
 18537  0038DE  6F95               	movwf	getStringJSON@ret& (0+255),b
 18538  0038E0  0E01               	movlw	high _senha
 18539  0038E2  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18540  0038E4  ECC6  F021         	call	_getStringJSON	;wreg free
 18541                           
 18542                           ;conexaoWifi.h: 98: getStringJSON(bufferSerial, "sv", ipServer);
 18543  0038E8  0E69               	movlw	low _bufferSerial
 18544  0038EA  0100               	movlb	0	; () banked
 18545  0038EC  6F91               	movwf	getStringJSON@buff& (0+255),b
 18546  0038EE  0E02               	movlw	high _bufferSerial
 18547  0038F0  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18548  0038F2  0EF5               	movlw	low STR_43
 18549  0038F4  6F93               	movwf	getStringJSON@key& (0+255),b
 18550  0038F6  0E7F               	movlw	high STR_43
 18551  0038F8  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18552  0038FA  0EAA               	movlw	low _ipServer
 18553  0038FC  6F95               	movwf	getStringJSON@ret& (0+255),b
 18554  0038FE  0E01               	movlw	high _ipServer
 18555  003900  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18556  003902  ECC6  F021         	call	_getStringJSON	;wreg free
 18557                           
 18558                           ;conexaoWifi.h: 99: int port = getIntJSON(bufferSerial, "pt");
 18559  003906  0E69               	movlw	low _bufferSerial
 18560  003908  0100               	movlb	0	; () banked
 18561  00390A  6F91               	movwf	getIntJSON@buff& (0+255),b
 18562  00390C  0E02               	movlw	high _bufferSerial
 18563  00390E  6F92               	movwf	(getIntJSON@buff+1)& (0+255),b
 18564  003910  0EAD               	movlw	low (STR_25+4)
 18565  003912  6F93               	movwf	getIntJSON@key& (0+255),b
 18566  003914  0E7F               	movlw	high (STR_25+4)
 18567  003916  6F94               	movwf	(getIntJSON@key+1)& (0+255),b
 18568  003918  ECE2  F020         	call	_getIntJSON	;wreg free
 18569  00391C  C091  F0E0         	movff	?_getIntJSON,alterarDadosConexaoConfigWifi@port
 18570  003920  C092  F0E1         	movff	?_getIntJSON+1,alterarDadosConexaoConfigWifi@port+1
 18571                           
 18572                           ;conexaoWifi.h: 100: if (port)
 18573  003924  0100               	movlb	0	; () banked
 18574  003926  51E0               	movf	alterarDadosConexaoConfigWifi@port& (0+255),w,b
 18575  003928  11E1               	iorwf	(alterarDadosConexaoConfigWifi@port+1)& (0+255),w,b
 18576  00392A  B4D8               	btfsc	status,2,c
 18577  00392C  D004               	goto	l994
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;conexaoWifi.h: 101: portServer = port;
 18581  00392E  C0E0  F033         	movff	alterarDadosConexaoConfigWifi@port,_portServer
 18582  003932  C0E1  F034         	movff	alterarDadosConexaoConfigWifi@port+1,_portServer+1
 18583  003936                     l994:
 18584                           
 18585                           ; BSR set to: 0
 18586                           ;conexaoWifi.h: 103: sprintf(line1, "%s", ssid);
 18587                           
 18588                           ; BSR set to: 0
 18589  003936  0E95               	movlw	low _line1
 18590  003938  6F81               	movwf	sprintf@wh& (0+255),b
 18591  00393A  0E01               	movlw	high _line1
 18592  00393C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18593  00393E  0E12               	movlw	low (STR_97+7)
 18594  003940  6F83               	movwf	sprintf@f& (0+255),b
 18595  003942  0E7F               	movlw	high (STR_97+7)
 18596  003944  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18597  003946  0ECD               	movlw	low _ssid
 18598  003948  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18599  00394A  0E01               	movlw	high _ssid
 18600  00394C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18601  00394E  EC08  F02D         	call	_sprintf	;wreg free
 18602                           
 18603                           ;conexaoWifi.h: 104: sprintf(line2, "%s", senha);
 18604  003952  0E80               	movlw	low _line2
 18605  003954  0100               	movlb	0	; () banked
 18606  003956  6F81               	movwf	sprintf@wh& (0+255),b
 18607  003958  0E01               	movlw	high _line2
 18608  00395A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18609  00395C  0E12               	movlw	low (STR_97+7)
 18610  00395E  6F83               	movwf	sprintf@f& (0+255),b
 18611  003960  0E7F               	movlw	high (STR_97+7)
 18612  003962  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18613  003964  0EBE               	movlw	low _senha
 18614  003966  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18615  003968  0E01               	movlw	high _senha
 18616  00396A  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18617  00396C  EC08  F02D         	call	_sprintf	;wreg free
 18618                           
 18619                           ;conexaoWifi.h: 105: sprintf(line3, "%s:%d", ipServer, portServer);
 18620  003970  0E6B               	movlw	low _line3
 18621  003972  0100               	movlb	0	; () banked
 18622  003974  6F81               	movwf	sprintf@wh& (0+255),b
 18623  003976  0E01               	movlw	high _line3
 18624  003978  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18625  00397A  0EB6               	movlw	low STR_47
 18626  00397C  6F83               	movwf	sprintf@f& (0+255),b
 18627  00397E  0E7F               	movlw	high STR_47
 18628  003980  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18629  003982  0EAA               	movlw	low _ipServer
 18630  003984  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18631  003986  0E01               	movlw	high _ipServer
 18632  003988  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18633  00398A  C033  F087         	movff	_portServer,?_sprintf+6
 18634  00398E  C034  F088         	movff	_portServer+1,?_sprintf+7
 18635  003992  EC08  F02D         	call	_sprintf	;wreg free
 18636                           
 18637                           ;conexaoWifi.h: 106: sprintf(line4, "OK reiniciando...");
 18638  003996  0E56               	movlw	low _line4
 18639  003998  0100               	movlb	0	; () banked
 18640  00399A  6F81               	movwf	sprintf@wh& (0+255),b
 18641  00399C  0E01               	movlw	high _line4
 18642  00399E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18643  0039A0  0E31               	movlw	low STR_48
 18644  0039A2  6F83               	movwf	sprintf@f& (0+255),b
 18645  0039A4  0E7D               	movlw	high STR_48
 18646  0039A6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18647  0039A8  EC08  F02D         	call	_sprintf	;wreg free
 18648                           
 18649                           ;conexaoWifi.h: 107: atualizaLCD(line1, line2, line3, line4);
 18650  0039AC  0E95               	movlw	low _line1
 18651  0039AE  0100               	movlb	0	; () banked
 18652  0039B0  6F68               	movwf	atualizaLCD@line1& (0+255),b
 18653  0039B2  0E01               	movlw	high _line1
 18654  0039B4  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 18655  0039B6  0E80               	movlw	low _line2
 18656  0039B8  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 18657  0039BA  0E01               	movlw	high _line2
 18658  0039BC  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 18659  0039BE  0E6B               	movlw	low _line3
 18660  0039C0  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 18661  0039C2  0E01               	movlw	high _line3
 18662  0039C4  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 18663  0039C6  0E56               	movlw	low _line4
 18664  0039C8  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 18665  0039CA  0E01               	movlw	high _line4
 18666  0039CC  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 18667  0039CE  ECEB  F026         	call	_atualizaLCD	;wreg free
 18668                           
 18669                           ;conexaoWifi.h: 109: if (strlen(ssid) > 3) {
 18670  0039D2  0ECD               	movlw	low _ssid
 18671  0039D4  0100               	movlb	0	; () banked
 18672  0039D6  6F60               	movwf	strlen@s& (0+255),b
 18673  0039D8  0E01               	movlw	high _ssid
 18674  0039DA  6F61               	movwf	(strlen@s+1)& (0+255),b
 18675  0039DC  EC3D  F02C         	call	_strlen	;wreg free
 18676  0039E0  0100               	movlb	0	; () banked
 18677  0039E2  5161               	movf	(?_strlen+1)& (0+255),w,b
 18678  0039E4  E104               	bnz	u13100
 18679  0039E6  0E04               	movlw	4
 18680  0039E8  5D60               	subwf	?_strlen& (0+255),w,b
 18681  0039EA  A0D8               	btfss	status,0,c
 18682  0039EC  D04E               	goto	l995
 18683  0039EE                     u13100:
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;conexaoWifi.h: 110: unsigned char i = 0;
 18687  0039EE  0E00               	movlw	0
 18688  0039F0  6FE2               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18689                           
 18690                           ;conexaoWifi.h: 111: for (i = 0; i < 15; i++) {
 18691  0039F2  0E00               	movlw	0
 18692  0039F4  6FE2               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18693  0039F6                     l8722:
 18694                           
 18695                           ; BSR set to: 0
 18696  0039F6  0E0E               	movlw	14
 18697  0039F8  65E2               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18698  0039FA  D001               	goto	l996
 18699  0039FC  D011               	goto	u13120
 18700  0039FE                     l996:
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;conexaoWifi.h: 112: writeEEPROM_ext((40 + i), ssid[i]);
 18704                           
 18705                           ; BSR set to: 0
 18706  0039FE  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18707  003A00  0D01               	mullw	1
 18708  003A02  0ECD               	movlw	low _ssid
 18709  003A04  24F3               	addwf	prodl,w,c
 18710  003A06  6ED9               	movwf	fsr2l,c
 18711  003A08  0E01               	movlw	high _ssid
 18712  003A0A  20F4               	addwfc	prodh,w,c
 18713  003A0C  6EDA               	movwf	fsr2h,c
 18714  003A0E  50DF               	movf	indf2,w,c
 18715  003A10  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18716  003A12  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18717  003A14  0F28               	addlw	40
 18718  003A16  EC4C  F02D         	call	_writeEEPROM_ext
 18719  003A1A  0100               	movlb	0	; () banked
 18720  003A1C  2BE2               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18721  003A1E  D7EB               	goto	l8722
 18722  003A20                     u13120:
 18723                           
 18724                           ; BSR set to: 0
 18725                           ;conexaoWifi.h: 113: }
 18726                           ;conexaoWifi.h: 114: for (i = 0; i < 15; i++) {
 18727                           
 18728                           ; BSR set to: 0
 18729  003A20  0E00               	movlw	0
 18730  003A22  6FE2               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18731  003A24                     l8734:
 18732                           
 18733                           ; BSR set to: 0
 18734  003A24  0E0E               	movlw	14
 18735  003A26  65E2               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18736  003A28  D001               	goto	l998
 18737  003A2A  D011               	goto	u13140
 18738  003A2C                     l998:
 18739                           
 18740                           ; BSR set to: 0
 18741                           ;conexaoWifi.h: 115: writeEEPROM_ext((60 + i), senha[i]);
 18742                           
 18743                           ; BSR set to: 0
 18744  003A2C  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18745  003A2E  0D01               	mullw	1
 18746  003A30  0EBE               	movlw	low _senha
 18747  003A32  24F3               	addwf	prodl,w,c
 18748  003A34  6ED9               	movwf	fsr2l,c
 18749  003A36  0E01               	movlw	high _senha
 18750  003A38  20F4               	addwfc	prodh,w,c
 18751  003A3A  6EDA               	movwf	fsr2h,c
 18752  003A3C  50DF               	movf	indf2,w,c
 18753  003A3E  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18754  003A40  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18755  003A42  0F3C               	addlw	60
 18756  003A44  EC4C  F02D         	call	_writeEEPROM_ext
 18757  003A48  0100               	movlb	0	; () banked
 18758  003A4A  2BE2               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18759  003A4C  D7EB               	goto	l8734
 18760  003A4E                     u13140:
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;conexaoWifi.h: 116: }
 18764                           ;conexaoWifi.h: 117: for (i = 0; i < 20; i++) {
 18765                           
 18766                           ; BSR set to: 0
 18767  003A4E  0E00               	movlw	0
 18768  003A50  6FE2               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18769  003A52                     l8746:
 18770                           
 18771                           ; BSR set to: 0
 18772  003A52  0E13               	movlw	19
 18773  003A54  65E2               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18774  003A56  D001               	goto	l1000
 18775  003A58  D011               	goto	u13160
 18776  003A5A                     l1000:
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;conexaoWifi.h: 118: writeEEPROM_ext((80 + i), ipServer[i]);
 18780                           
 18781                           ; BSR set to: 0
 18782  003A5A  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18783  003A5C  0D01               	mullw	1
 18784  003A5E  0EAA               	movlw	low _ipServer
 18785  003A60  24F3               	addwf	prodl,w,c
 18786  003A62  6ED9               	movwf	fsr2l,c
 18787  003A64  0E01               	movlw	high _ipServer
 18788  003A66  20F4               	addwfc	prodh,w,c
 18789  003A68  6EDA               	movwf	fsr2h,c
 18790  003A6A  50DF               	movf	indf2,w,c
 18791  003A6C  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18792  003A6E  51E2               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18793  003A70  0F50               	addlw	80
 18794  003A72  EC4C  F02D         	call	_writeEEPROM_ext
 18795  003A76  0100               	movlb	0	; () banked
 18796  003A78  2BE2               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18797  003A7A  D7EB               	goto	l8746
 18798  003A7C                     u13160:
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;conexaoWifi.h: 119: }
 18802                           ;conexaoWifi.h: 120: writeEEPROM16_ext(105, portServer);
 18803                           
 18804                           ; BSR set to: 0
 18805  003A7C  C033  F065         	movff	_portServer,writeEEPROM16_ext@data
 18806  003A80  C034  F066         	movff	_portServer+1,writeEEPROM16_ext@data+1
 18807  003A84  0E69               	movlw	105
 18808  003A86  ECFD  F02E         	call	_writeEEPROM16_ext
 18809  003A8A                     l995:
 18810                           
 18811                           ;conexaoWifi.h: 122: }
 18812                           ;conexaoWifi.h: 123: while (1) {
 18813  003A8A  D7FF               	goto	l995
 18814  003A8C  0E00               	movlw	0
 18815  003A8E  6E3B               	movwf	_f_wifi_processo,c
 18816                           
 18817                           ;conexaoWifi.h: 128: }
 18818  003A90  0012               	return	
 18819  003A92                     l975:
 18820  003A92  503B               	movf	_f_wifi_processo,w,c
 18821                           
 18822                           ; Switch size 1, requested type "space"
 18823                           ; Number of cases is 9, Range of values is 0 to 8
 18824                           ; switch strategies available:
 18825                           ; Name         Instructions Cycles
 18826                           ; simple_byte           28    15 (average)
 18827                           ;	Chosen strategy is simple_byte
 18828  003A94  0A00               	xorlw	0	; case 0
 18829  003A96  B4D8               	btfsc	status,2,c
 18830  003A98  D5C2               	goto	l976
 18831  003A9A  0A01               	xorlw	1	; case 1
 18832  003A9C  B4D8               	btfsc	status,2,c
 18833  003A9E  D5D1               	goto	l978
 18834  003AA0  0A03               	xorlw	3	; case 2
 18835  003AA2  B4D8               	btfsc	status,2,c
 18836  003AA4  D5E8               	goto	l980
 18837  003AA6  0A01               	xorlw	1	; case 3
 18838  003AA8  B4D8               	btfsc	status,2,c
 18839  003AAA  D5FF               	goto	l982
 18840  003AAC  0A07               	xorlw	7	; case 4
 18841  003AAE  B4D8               	btfsc	status,2,c
 18842  003AB0  D616               	goto	l984
 18843  003AB2  0A01               	xorlw	1	; case 5
 18844  003AB4  B4D8               	btfsc	status,2,c
 18845  003AB6  D62D               	goto	l986
 18846  003AB8  0A03               	xorlw	3	; case 6
 18847  003ABA  B4D8               	btfsc	status,2,c
 18848  003ABC  D63F               	goto	l988
 18849  003ABE  0A01               	xorlw	1	; case 7
 18850  003AC0  B4D8               	btfsc	status,2,c
 18851  003AC2  D689               	goto	l990
 18852  003AC4  0A0F               	xorlw	15	; case 8
 18853  003AC6  B4D8               	btfsc	status,2,c
 18854  003AC8  D6DC               	goto	l992
 18855  003ACA  D7E0               	goto	l1005
 18856  003ACC                     __end_of_alterarDadosConexaoConfigWifi:
 18857                           	opt stack 0
 18858                           tblptru	equ	0xFF8
 18859                           tblptrh	equ	0xFF7
 18860                           tblptrl	equ	0xFF6
 18861                           tablat	equ	0xFF5
 18862                           prodh	equ	0xFF4
 18863                           prodl	equ	0xFF3
 18864                           intcon	equ	0xFF2
 18865                           intcon2	equ	0xFF1
 18866                           intcon3	equ	0xFF0
 18867                           postinc0	equ	0xFEE
 18868                           wreg	equ	0xFE8
 18869                           indf1	equ	0xFE7
 18870                           postdec1	equ	0xFE5
 18871                           fsr1h	equ	0xFE2
 18872                           fsr1l	equ	0xFE1
 18873                           indf2	equ	0xFDF
 18874                           postinc2	equ	0xFDE
 18875                           postdec2	equ	0xFDD
 18876                           fsr2h	equ	0xFDA
 18877                           fsr2l	equ	0xFD9
 18878                           status	equ	0xFD8
 18879                           
 18880 ;; *************** function _writeEEPROM16_ext *****************
 18881 ;; Defined at:
 18882 ;;		line 39 in file "src/Eeprom_ext.h"
 18883 ;; Parameters:    Size  Location     Type
 18884 ;;  adress          1    wreg     unsigned char 
 18885 ;;  data            2    5[BANK0 ] unsigned int 
 18886 ;; Auto vars:     Size  Location     Type
 18887 ;;  adress          1    7[BANK0 ] unsigned char 
 18888 ;; Return value:  Size  Location     Type
 18889 ;;                  1    wreg      void 
 18890 ;; Registers used:
 18891 ;;		wreg, status,2, status,0, cstack
 18892 ;; Tracked objects:
 18893 ;;		On entry : 0/0
 18894 ;;		On exit  : 0/0
 18895 ;;		Unchanged: 0/0
 18896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18897 ;;      Params:         0       2       0       0       0       0       0       0       0
 18898 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18900 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18901 ;;Total ram usage:        3 bytes
 18902 ;; Hardware stack levels used:    1
 18903 ;; Hardware stack levels required when called:    9
 18904 ;; This function calls:
 18905 ;;		_writeEEPROM_ext
 18906 ;; This function is called by:
 18907 ;;		_alterarDadosConexaoConfigWifi
 18908 ;; This function uses a non-reentrant model
 18909 ;;
 18910                           
 18911                           	psect	text28
 18912  005DFA                     __ptext28:
 18913                           	opt stack 0
 18914  005DFA                     _writeEEPROM16_ext:
 18915                           	opt stack 20
 18916                           
 18917                           ;incstack = 0
 18918                           ;writeEEPROM16_ext@adress stored from wreg
 18919  005DFA  0100               	movlb	0	; () banked
 18920  005DFC  6F67               	movwf	writeEEPROM16_ext@adress& (0+255),b
 18921                           
 18922                           ;Eeprom_ext.h: 40: writeEEPROM_ext(adress, data);
 18923  005DFE  C065  F063         	movff	writeEEPROM16_ext@data,writeEEPROM_ext@data
 18924  005E02  0100               	movlb	0	; () banked
 18925  005E04  5167               	movf	writeEEPROM16_ext@adress& (0+255),w,b
 18926  005E06  EC4C  F02D         	call	_writeEEPROM_ext
 18927                           
 18928                           ;Eeprom_ext.h: 41: data>> = 8;
 18929  005E0A  0100               	movlb	0	; () banked
 18930  005E0C  5166               	movf	(writeEEPROM16_ext@data+1)& (0+255),w,b
 18931  005E0E  6F65               	movwf	writeEEPROM16_ext@data& (0+255),b
 18932  005E10  6B66               	clrf	(writeEEPROM16_ext@data+1)& (0+255),b
 18933                           
 18934                           ; BSR set to: 0
 18935                           ;Eeprom_ext.h: 42: writeEEPROM_ext(adress + 1, data);
 18936  005E12  C065  F063         	movff	writeEEPROM16_ext@data,writeEEPROM_ext@data
 18937  005E16  2967               	incf	writeEEPROM16_ext@adress& (0+255),w,b
 18938  005E18  EC4C  F02D         	call	_writeEEPROM_ext
 18939  005E1C  0012               	return		;funcret
 18940  005E1E                     __end_of_writeEEPROM16_ext:
 18941                           	opt stack 0
 18942                           tblptru	equ	0xFF8
 18943                           tblptrh	equ	0xFF7
 18944                           tblptrl	equ	0xFF6
 18945                           tablat	equ	0xFF5
 18946                           prodh	equ	0xFF4
 18947                           prodl	equ	0xFF3
 18948                           intcon	equ	0xFF2
 18949                           intcon2	equ	0xFF1
 18950                           intcon3	equ	0xFF0
 18951                           postinc0	equ	0xFEE
 18952                           wreg	equ	0xFE8
 18953                           indf1	equ	0xFE7
 18954                           postdec1	equ	0xFE5
 18955                           fsr1h	equ	0xFE2
 18956                           fsr1l	equ	0xFE1
 18957                           indf2	equ	0xFDF
 18958                           postinc2	equ	0xFDE
 18959                           postdec2	equ	0xFDD
 18960                           fsr2h	equ	0xFDA
 18961                           fsr2l	equ	0xFD9
 18962                           status	equ	0xFD8
 18963                           
 18964 ;; *************** function _writeEEPROM_ext *****************
 18965 ;; Defined at:
 18966 ;;		line 14 in file "src/Eeprom_ext.h"
 18967 ;; Parameters:    Size  Location     Type
 18968 ;;  adress          1    wreg     unsigned char 
 18969 ;;  data            1    3[BANK0 ] unsigned char 
 18970 ;; Auto vars:     Size  Location     Type
 18971 ;;  adress          1    4[BANK0 ] unsigned char 
 18972 ;; Return value:  Size  Location     Type
 18973 ;;                  1    wreg      void 
 18974 ;; Registers used:
 18975 ;;		wreg, status,2, status,0, cstack
 18976 ;; Tracked objects:
 18977 ;;		On entry : 0/0
 18978 ;;		On exit  : 0/0
 18979 ;;		Unchanged: 0/0
 18980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18981 ;;      Params:         0       1       0       0       0       0       0       0       0
 18982 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18984 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18985 ;;Total ram usage:        2 bytes
 18986 ;; Hardware stack levels used:    1
 18987 ;; Hardware stack levels required when called:    8
 18988 ;; This function calls:
 18989 ;;		_I2C_Start
 18990 ;;		_I2C_Stop
 18991 ;;		_I2C_Write
 18992 ;;		_delay
 18993 ;; This function is called by:
 18994 ;;		_writeEEPROM16_ext
 18995 ;;		_setUmidade
 18996 ;;		_setRangeValor
 18997 ;;		_alterarDadosConexaoConfigWifi
 18998 ;;		_main
 18999 ;; This function uses a non-reentrant model
 19000 ;;
 19001                           
 19002                           	psect	text29
 19003  005A98                     __ptext29:
 19004                           	opt stack 0
 19005  005A98                     _writeEEPROM_ext:
 19006                           	opt stack 22
 19007                           
 19008                           ;incstack = 0
 19009                           ;writeEEPROM_ext@adress stored from wreg
 19010  005A98  0100               	movlb	0	; () banked
 19011  005A9A  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 19012                           
 19013                           ;Eeprom_ext.h: 16: I2C_Start();
 19014  005A9C  EC96  F02F         	call	_I2C_Start	;wreg free
 19015                           
 19016                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 19017  005AA0  0E00               	movlw	0
 19018  005AA2  0100               	movlb	0	; () banked
 19019  005AA4  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 19020  005AA6  0EA0               	movlw	160
 19021  005AA8  6F61               	movwf	I2C_Write@d& (0+255),b
 19022  005AAA  EC84  F02F         	call	_I2C_Write	;wreg free
 19023                           
 19024                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 19025  005AAE  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 19026  005AB2  0100               	movlb	0	; () banked
 19027  005AB4  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19028  005AB6  EC84  F02F         	call	_I2C_Write	;wreg free
 19029                           
 19030                           ;Eeprom_ext.h: 20: I2C_Write(data);
 19031  005ABA  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 19032  005ABE  0100               	movlb	0	; () banked
 19033  005AC0  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 19034  005AC2  EC84  F02F         	call	_I2C_Write	;wreg free
 19035                           
 19036                           ;Eeprom_ext.h: 21: I2C_Stop();
 19037  005AC6  EC92  F02F         	call	_I2C_Stop	;wreg free
 19038                           
 19039                           ;Eeprom_ext.h: 22: delay(105);
 19040  005ACA  0E00               	movlw	0
 19041  005ACC  0100               	movlb	0	; () banked
 19042  005ACE  6F61               	movwf	(delay@x+1)& (0+255),b
 19043  005AD0  0E69               	movlw	105
 19044  005AD2  6F60               	movwf	delay@x& (0+255),b
 19045  005AD4  EC86  F02E         	call	_delay	;wreg free
 19046  005AD8  0012               	return		;funcret
 19047  005ADA                     __end_of_writeEEPROM_ext:
 19048                           	opt stack 0
 19049                           tblptru	equ	0xFF8
 19050                           tblptrh	equ	0xFF7
 19051                           tblptrl	equ	0xFF6
 19052                           tablat	equ	0xFF5
 19053                           prodh	equ	0xFF4
 19054                           prodl	equ	0xFF3
 19055                           intcon	equ	0xFF2
 19056                           intcon2	equ	0xFF1
 19057                           intcon3	equ	0xFF0
 19058                           postinc0	equ	0xFEE
 19059                           wreg	equ	0xFE8
 19060                           indf1	equ	0xFE7
 19061                           postdec1	equ	0xFE5
 19062                           fsr1h	equ	0xFE2
 19063                           fsr1l	equ	0xFE1
 19064                           indf2	equ	0xFDF
 19065                           postinc2	equ	0xFDE
 19066                           postdec2	equ	0xFDD
 19067                           fsr2h	equ	0xFDA
 19068                           fsr2l	equ	0xFD9
 19069                           status	equ	0xFD8
 19070                           
 19071 ;; *************** function _delay *****************
 19072 ;; Defined at:
 19073 ;;		line 18 in file "src/function.c"
 19074 ;; Parameters:    Size  Location     Type
 19075 ;;  x               2    0[BANK0 ] int 
 19076 ;; Auto vars:     Size  Location     Type
 19077 ;;		None
 19078 ;; Return value:  Size  Location     Type
 19079 ;;                  1    wreg      void 
 19080 ;; Registers used:
 19081 ;;		wreg, status,2, status,0
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19087 ;;      Params:         0       2       0       0       0       0       0       0       0
 19088 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19089 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19090 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19091 ;;Total ram usage:        3 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:    6
 19094 ;; This function calls:
 19095 ;;		Nothing
 19096 ;; This function is called by:
 19097 ;;		_writeEEPROM_ext
 19098 ;;		_alterarDadosConexaoConfigWifi
 19099 ;;		_enviaDadosWifi
 19100 ;;		_main
 19101 ;; This function uses a non-reentrant model
 19102 ;;
 19103                           
 19104                           	psect	text30
 19105  005D0C                     __ptext30:
 19106                           	opt stack 0
 19107  005D0C                     _delay:
 19108                           	opt stack 23
 19109                           
 19110                           ;function.c: 19: while (x--) {
 19111                           
 19112                           ;incstack = 0
 19113  005D0C  D00A               	goto	l1467
 19114  005D0E                     l6354:
 19115                           
 19116                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 19117  005D0E  0E03               	movlw	3
 19118  005D10  0100               	movlb	0	; () banked
 19119  005D12  6F62               	movwf	??_delay& (0+255),b
 19120  005D14  0E97               	movlw	151
 19121  005D16                     u15557:
 19122  005D16  2EE8               	decfsz	wreg,f,c
 19123  005D18  D7FE               	bra	u15557
 19124  005D1A  2F62               	decfsz	??_delay& (0+255),f,b
 19125  005D1C  D7FC               	bra	u15557
 19126  005D1E  D000               	nop2	
 19127  005D20  0004               	clrwdt		;# 
 19128  005D22                     l1467:
 19129  005D22  0100               	movlb	0	; () banked
 19130  005D24  0760               	decf	delay@x& (0+255),f,b
 19131  005D26  A0D8               	btfss	status,0,c
 19132  005D28  0761               	decf	(delay@x+1)& (0+255),f,b
 19133  005D2A  2960               	incf	delay@x& (0+255),w,b
 19134  005D2C  E1F0               	bnz	l6354
 19135  005D2E  2961               	incf	(delay@x+1)& (0+255),w,b
 19136  005D30  B4D8               	btfsc	status,2,c
 19137  005D32  0012               	return	
 19138  005D34  D7EC               	goto	l1468
 19139  005D36                     __end_of_delay:
 19140                           	opt stack 0
 19141                           tblptru	equ	0xFF8
 19142                           tblptrh	equ	0xFF7
 19143                           tblptrl	equ	0xFF6
 19144                           tablat	equ	0xFF5
 19145                           prodh	equ	0xFF4
 19146                           prodl	equ	0xFF3
 19147                           intcon	equ	0xFF2
 19148                           intcon2	equ	0xFF1
 19149                           intcon3	equ	0xFF0
 19150                           postinc0	equ	0xFEE
 19151                           wreg	equ	0xFE8
 19152                           indf1	equ	0xFE7
 19153                           postdec1	equ	0xFE5
 19154                           fsr1h	equ	0xFE2
 19155                           fsr1l	equ	0xFE1
 19156                           indf2	equ	0xFDF
 19157                           postinc2	equ	0xFDE
 19158                           postdec2	equ	0xFDD
 19159                           fsr2h	equ	0xFDA
 19160                           fsr2l	equ	0xFD9
 19161                           status	equ	0xFD8
 19162                           
 19163 ;; *************** function _I2C_Write *****************
 19164 ;; Defined at:
 19165 ;;		line 41 in file "src/I2C.c"
 19166 ;; Parameters:    Size  Location     Type
 19167 ;;  d               2    1[BANK0 ] unsigned int 
 19168 ;; Auto vars:     Size  Location     Type
 19169 ;;		None
 19170 ;; Return value:  Size  Location     Type
 19171 ;;                  1    wreg      void 
 19172 ;; Registers used:
 19173 ;;		wreg, status,2, status,0, cstack
 19174 ;; Tracked objects:
 19175 ;;		On entry : 0/0
 19176 ;;		On exit  : 0/0
 19177 ;;		Unchanged: 0/0
 19178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19179 ;;      Params:         0       2       0       0       0       0       0       0       0
 19180 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19182 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19183 ;;Total ram usage:        2 bytes
 19184 ;; Hardware stack levels used:    1
 19185 ;; Hardware stack levels required when called:    7
 19186 ;; This function calls:
 19187 ;;		_I2C_Wait
 19188 ;; This function is called by:
 19189 ;;		_updateLeds
 19190 ;;		_writeEEPROM_ext
 19191 ;;		_readEEPROM_ext
 19192 ;; This function uses a non-reentrant model
 19193 ;;
 19194                           
 19195                           	psect	text31
 19196  005F08                     __ptext31:
 19197                           	opt stack 0
 19198  005F08                     _I2C_Write:
 19199                           	opt stack 22
 19200                           
 19201                           ;I2C.c: 42: I2C_Wait();
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;incstack = 0
 19205  005F08  EC5D  F02F         	call	_I2C_Wait	;wreg free
 19206                           
 19207                           ;I2C.c: 43: SSPBUF = d;
 19208  005F0C  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19209  005F10  0012               	return		;funcret
 19210  005F12                     __end_of_I2C_Write:
 19211                           	opt stack 0
 19212                           tblptru	equ	0xFF8
 19213                           tblptrh	equ	0xFF7
 19214                           tblptrl	equ	0xFF6
 19215                           tablat	equ	0xFF5
 19216                           prodh	equ	0xFF4
 19217                           prodl	equ	0xFF3
 19218                           intcon	equ	0xFF2
 19219                           intcon2	equ	0xFF1
 19220                           intcon3	equ	0xFF0
 19221                           postinc0	equ	0xFEE
 19222                           wreg	equ	0xFE8
 19223                           indf1	equ	0xFE7
 19224                           postdec1	equ	0xFE5
 19225                           fsr1h	equ	0xFE2
 19226                           fsr1l	equ	0xFE1
 19227                           indf2	equ	0xFDF
 19228                           postinc2	equ	0xFDE
 19229                           postdec2	equ	0xFDD
 19230                           fsr2h	equ	0xFDA
 19231                           fsr2l	equ	0xFD9
 19232                           status	equ	0xFD8
 19233                           
 19234 ;; *************** function _I2C_Stop *****************
 19235 ;; Defined at:
 19236 ;;		line 35 in file "src/I2C.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;		None
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;		None
 19241 ;; Return value:  Size  Location     Type
 19242 ;;                  1    wreg      void 
 19243 ;; Registers used:
 19244 ;;		wreg, status,2, status,0, cstack
 19245 ;; Tracked objects:
 19246 ;;		On entry : 0/0
 19247 ;;		On exit  : 0/0
 19248 ;;		Unchanged: 0/0
 19249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19250 ;;      Params:         0       0       0       0       0       0       0       0       0
 19251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19253 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19254 ;;Total ram usage:        0 bytes
 19255 ;; Hardware stack levels used:    1
 19256 ;; Hardware stack levels required when called:    7
 19257 ;; This function calls:
 19258 ;;		_I2C_Wait
 19259 ;; This function is called by:
 19260 ;;		_updateLeds
 19261 ;;		_writeEEPROM_ext
 19262 ;;		_readEEPROM_ext
 19263 ;; This function uses a non-reentrant model
 19264 ;;
 19265                           
 19266                           	psect	text32
 19267  005F24                     __ptext32:
 19268                           	opt stack 0
 19269  005F24                     _I2C_Stop:
 19270                           	opt stack 22
 19271                           
 19272                           ;I2C.c: 36: I2C_Wait();
 19273                           
 19274                           ;incstack = 0
 19275  005F24  EC5D  F02F         	call	_I2C_Wait	;wreg free
 19276                           
 19277                           ;I2C.c: 37: PEN = 1;
 19278  005F28  84C5               	bsf	4037,2,c	;volatile
 19279  005F2A  0012               	return		;funcret
 19280  005F2C                     __end_of_I2C_Stop:
 19281                           	opt stack 0
 19282                           tblptru	equ	0xFF8
 19283                           tblptrh	equ	0xFF7
 19284                           tblptrl	equ	0xFF6
 19285                           tablat	equ	0xFF5
 19286                           prodh	equ	0xFF4
 19287                           prodl	equ	0xFF3
 19288                           intcon	equ	0xFF2
 19289                           intcon2	equ	0xFF1
 19290                           intcon3	equ	0xFF0
 19291                           postinc0	equ	0xFEE
 19292                           wreg	equ	0xFE8
 19293                           indf1	equ	0xFE7
 19294                           postdec1	equ	0xFE5
 19295                           fsr1h	equ	0xFE2
 19296                           fsr1l	equ	0xFE1
 19297                           indf2	equ	0xFDF
 19298                           postinc2	equ	0xFDE
 19299                           postdec2	equ	0xFDD
 19300                           fsr2h	equ	0xFDA
 19301                           fsr2l	equ	0xFD9
 19302                           status	equ	0xFD8
 19303                           
 19304 ;; *************** function _I2C_Start *****************
 19305 ;; Defined at:
 19306 ;;		line 25 in file "src/I2C.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;		None
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;		None
 19311 ;; Return value:  Size  Location     Type
 19312 ;;                  1    wreg      void 
 19313 ;; Registers used:
 19314 ;;		wreg, status,2, status,0, cstack
 19315 ;; Tracked objects:
 19316 ;;		On entry : 0/0
 19317 ;;		On exit  : 0/0
 19318 ;;		Unchanged: 0/0
 19319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19320 ;;      Params:         0       0       0       0       0       0       0       0       0
 19321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19322 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19323 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19324 ;;Total ram usage:        0 bytes
 19325 ;; Hardware stack levels used:    1
 19326 ;; Hardware stack levels required when called:    7
 19327 ;; This function calls:
 19328 ;;		_I2C_Wait
 19329 ;; This function is called by:
 19330 ;;		_updateLeds
 19331 ;;		_writeEEPROM_ext
 19332 ;;		_readEEPROM_ext
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text33
 19337  005F2C                     __ptext33:
 19338                           	opt stack 0
 19339  005F2C                     _I2C_Start:
 19340                           	opt stack 22
 19341                           
 19342                           ;I2C.c: 26: I2C_Wait();
 19343                           
 19344                           ;incstack = 0
 19345  005F2C  EC5D  F02F         	call	_I2C_Wait	;wreg free
 19346                           
 19347                           ;I2C.c: 27: SEN = 1;
 19348  005F30  80C5               	bsf	4037,0,c	;volatile
 19349  005F32  0012               	return		;funcret
 19350  005F34                     __end_of_I2C_Start:
 19351                           	opt stack 0
 19352                           tblptru	equ	0xFF8
 19353                           tblptrh	equ	0xFF7
 19354                           tblptrl	equ	0xFF6
 19355                           tablat	equ	0xFF5
 19356                           prodh	equ	0xFF4
 19357                           prodl	equ	0xFF3
 19358                           intcon	equ	0xFF2
 19359                           intcon2	equ	0xFF1
 19360                           intcon3	equ	0xFF0
 19361                           postinc0	equ	0xFEE
 19362                           wreg	equ	0xFE8
 19363                           indf1	equ	0xFE7
 19364                           postdec1	equ	0xFE5
 19365                           fsr1h	equ	0xFE2
 19366                           fsr1l	equ	0xFE1
 19367                           indf2	equ	0xFDF
 19368                           postinc2	equ	0xFDE
 19369                           postdec2	equ	0xFDD
 19370                           fsr2h	equ	0xFDA
 19371                           fsr2l	equ	0xFD9
 19372                           status	equ	0xFD8
 19373                           
 19374 ;; *************** function _I2C_Wait *****************
 19375 ;; Defined at:
 19376 ;;		line 21 in file "src/I2C.c"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;		None
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;		None
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, status,2, status,0
 19385 ;; Tracked objects:
 19386 ;;		On entry : 0/0
 19387 ;;		On exit  : 0/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19390 ;;      Params:         0       0       0       0       0       0       0       0       0
 19391 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19392 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19393 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19394 ;;Total ram usage:        1 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; Hardware stack levels required when called:    6
 19397 ;; This function calls:
 19398 ;;		Nothing
 19399 ;; This function is called by:
 19400 ;;		_I2C_Start
 19401 ;;		_I2C_Restart
 19402 ;;		_I2C_Stop
 19403 ;;		_I2C_Write
 19404 ;;		_I2C_Read
 19405 ;; This function uses a non-reentrant model
 19406 ;;
 19407                           
 19408                           	psect	text34
 19409  005EBA                     __ptext34:
 19410                           	opt stack 0
 19411  005EBA                     _I2C_Wait:
 19412                           	opt stack 22
 19413                           
 19414                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19415                           
 19416                           ;incstack = 0
 19417  005EBA  B4C7               	btfsc	4039,2,c	;volatile
 19418  005EBC  D7FE               	goto	_I2C_Wait
 19419  005EBE  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19420  005EC2  0E1F               	movlw	31
 19421  005EC4  0100               	movlb	0	; () banked
 19422  005EC6  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19423  005EC8  B4D8               	btfsc	status,2,c
 19424  005ECA  0012               	return	
 19425  005ECC  D7F6               	goto	_I2C_Wait
 19426  005ECE                     __end_of_I2C_Wait:
 19427                           	opt stack 0
 19428                           tblptru	equ	0xFF8
 19429                           tblptrh	equ	0xFF7
 19430                           tblptrl	equ	0xFF6
 19431                           tablat	equ	0xFF5
 19432                           prodh	equ	0xFF4
 19433                           prodl	equ	0xFF3
 19434                           intcon	equ	0xFF2
 19435                           intcon2	equ	0xFF1
 19436                           intcon3	equ	0xFF0
 19437                           postinc0	equ	0xFEE
 19438                           wreg	equ	0xFE8
 19439                           indf1	equ	0xFE7
 19440                           postdec1	equ	0xFE5
 19441                           fsr1h	equ	0xFE2
 19442                           fsr1l	equ	0xFE1
 19443                           indf2	equ	0xFDF
 19444                           postinc2	equ	0xFDE
 19445                           postdec2	equ	0xFDD
 19446                           fsr2h	equ	0xFDA
 19447                           fsr2l	equ	0xFD9
 19448                           status	equ	0xFD8
 19449                           
 19450 ;; *************** function _setKeyStartReceiveSerial *****************
 19451 ;; Defined at:
 19452 ;;		line 6 in file "src/serial.c"
 19453 ;; Parameters:    Size  Location     Type
 19454 ;;  start           2   49[BANK0 ] PTR unsigned char 
 19455 ;;		 -> STR_80(4), STR_77(4), STR_73(4), STR_68(4), 
 19456 ;;		 -> STR_65(4), STR_62(4), STR_58(4), STR_56(4), 
 19457 ;;		 -> STR_52(4), STR_49(4), STR_38(3), STR_34(4), 
 19458 ;;		 -> STR_31(4), STR_25(7), STR_22(4), STR_19(4), 
 19459 ;;		 -> STR_16(4), STR_13(4), STR_10(4), 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;		None
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  1    wreg      void 
 19464 ;; Registers used:
 19465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19466 ;; Tracked objects:
 19467 ;;		On entry : 0/0
 19468 ;;		On exit  : 0/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19471 ;;      Params:         0       2       0       0       0       0       0       0       0
 19472 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19474 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19475 ;;Total ram usage:        2 bytes
 19476 ;; Hardware stack levels used:    1
 19477 ;; Hardware stack levels required when called:    9
 19478 ;; This function calls:
 19479 ;;		_memset
 19480 ;;		_sprintf
 19481 ;;		_strstr
 19482 ;; This function is called by:
 19483 ;;		_alterarDadosConexaoConfigWifi
 19484 ;;		_enviaDadosWifi
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text35
 19489  00579E                     __ptext35:
 19490                           	opt stack 0
 19491  00579E                     _setKeyStartReceiveSerial:
 19492                           	opt stack 20
 19493                           
 19494                           ;serial.c: 7: _BF_enable_receive = 0;
 19495                           
 19496                           ; BSR set to: 0
 19497                           ;incstack = 0
 19498  00579E  0E00               	movlw	0
 19499  0057A0  6E3F               	movwf	__BF_enable_receive,c
 19500                           
 19501                           ;serial.c: 8: _BF_i_count = 0;
 19502  0057A2  0E00               	movlw	0
 19503  0057A4  6E3E               	movwf	__BF_i_count,c
 19504                           
 19505                           ;serial.c: 9: _BF_current = 0;
 19506  0057A6  0E00               	movlw	0
 19507  0057A8  6E3D               	movwf	__BF_current,c
 19508                           
 19509                           ;serial.c: 10: memset(bufferSerial, 0, sizeof (bufferSerial));
 19510  0057AA  0E69               	movlw	low _bufferSerial
 19511  0057AC  0100               	movlb	0	; () banked
 19512  0057AE  6F60               	movwf	memset@p1& (0+255),b
 19513  0057B0  0E02               	movlw	high _bufferSerial
 19514  0057B2  6F61               	movwf	(memset@p1+1)& (0+255),b
 19515  0057B4  0E00               	movlw	0
 19516  0057B6  6F63               	movwf	(memset@c+1)& (0+255),b
 19517  0057B8  0E00               	movlw	0
 19518  0057BA  6F62               	movwf	memset@c& (0+255),b
 19519  0057BC  0E00               	movlw	0
 19520  0057BE  6F65               	movwf	(memset@n+1)& (0+255),b
 19521  0057C0  0E64               	movlw	100
 19522  0057C2  6F64               	movwf	memset@n& (0+255),b
 19523  0057C4  EC28  F02E         	call	_memset	;wreg free
 19524                           
 19525                           ;serial.c: 11: sprintf(_BF_start, "%s", start);
 19526  0057C8  0EDC               	movlw	low __BF_start
 19527  0057CA  0100               	movlb	0	; () banked
 19528  0057CC  6F81               	movwf	sprintf@wh& (0+255),b
 19529  0057CE  0E01               	movlw	high __BF_start
 19530  0057D0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19531  0057D2  0E12               	movlw	low (STR_97+7)
 19532  0057D4  6F83               	movwf	sprintf@f& (0+255),b
 19533  0057D6  0E7F               	movlw	high (STR_97+7)
 19534  0057D8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19535  0057DA  C091  F085         	movff	setKeyStartReceiveSerial@start,?_sprintf+4
 19536  0057DE  C092  F086         	movff	setKeyStartReceiveSerial@start+1,?_sprintf+5
 19537  0057E2  EC08  F02D         	call	_sprintf	;wreg free
 19538                           
 19539                           ;serial.c: 12: if(strstr("ALL", start)){
 19540  0057E6  0EE2               	movlw	low STR_10
 19541  0057E8  0100               	movlb	0	; () banked
 19542  0057EA  6F6F               	movwf	strstr@s1& (0+255),b
 19543  0057EC  0E7F               	movlw	high STR_10
 19544  0057EE  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19545  0057F0  C091  F071         	movff	setKeyStartReceiveSerial@start,strstr@s2
 19546  0057F4  C092  F072         	movff	setKeyStartReceiveSerial@start+1,strstr@s2+1
 19547  0057F8  ECAE  F027         	call	_strstr	;wreg free
 19548  0057FC  0100               	movlb	0	; () banked
 19549  0057FE  516F               	movf	?_strstr& (0+255),w,b
 19550  005800  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19551  005802  B4D8               	btfsc	status,2,c
 19552  005804  0012               	return	
 19553                           
 19554                           ; BSR set to: 0
 19555                           ;serial.c: 13: _BF_enable_receive = 1;
 19556  005806  0E01               	movlw	1
 19557  005808  6E3F               	movwf	__BF_enable_receive,c
 19558  00580A  0012               	return	
 19559  00580C                     __end_of_setKeyStartReceiveSerial:
 19560                           	opt stack 0
 19561                           tblptru	equ	0xFF8
 19562                           tblptrh	equ	0xFF7
 19563                           tblptrl	equ	0xFF6
 19564                           tablat	equ	0xFF5
 19565                           prodh	equ	0xFF4
 19566                           prodl	equ	0xFF3
 19567                           intcon	equ	0xFF2
 19568                           intcon2	equ	0xFF1
 19569                           intcon3	equ	0xFF0
 19570                           postinc0	equ	0xFEE
 19571                           wreg	equ	0xFE8
 19572                           indf1	equ	0xFE7
 19573                           postdec1	equ	0xFE5
 19574                           fsr1h	equ	0xFE2
 19575                           fsr1l	equ	0xFE1
 19576                           indf2	equ	0xFDF
 19577                           postinc2	equ	0xFDE
 19578                           postdec2	equ	0xFDD
 19579                           fsr2h	equ	0xFDA
 19580                           fsr2l	equ	0xFD9
 19581                           status	equ	0xFD8
 19582                           
 19583 ;; *************** function _memset *****************
 19584 ;; Defined at:
 19585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;  p1              2    0[BANK0 ] PTR void 
 19588 ;;		 -> bufferSerial(100), 
 19589 ;;  c               2    2[BANK0 ] int 
 19590 ;;  n               2    4[BANK0 ] unsigned int 
 19591 ;; Auto vars:     Size  Location     Type
 19592 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19593 ;;		 -> bufferSerial(100), 
 19594 ;; Return value:  Size  Location     Type
 19595 ;;                  2    0[BANK0 ] PTR void 
 19596 ;; Registers used:
 19597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19598 ;; Tracked objects:
 19599 ;;		On entry : 0/0
 19600 ;;		On exit  : 0/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19603 ;;      Params:         0       6       0       0       0       0       0       0       0
 19604 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19605 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19606 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19607 ;;Total ram usage:        8 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:    6
 19610 ;; This function calls:
 19611 ;;		Nothing
 19612 ;; This function is called by:
 19613 ;;		_setKeyStartReceiveSerial
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text36
 19618  005C50                     __ptext36:
 19619                           	opt stack 0
 19620  005C50                     _memset:
 19621                           	opt stack 22
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;incstack = 0
 19625  005C50  C060  F066         	movff	memset@p1,memset@p
 19626  005C54  C061  F067         	movff	memset@p1+1,memset@p+1
 19627  005C58  D009               	goto	l2118
 19628  005C5A                     l6694:
 19629  005C5A  C066  FFD9         	movff	memset@p,fsr2l
 19630  005C5E  C067  FFDA         	movff	memset@p+1,fsr2h
 19631  005C62  C062  FFDF         	movff	memset@c,indf2
 19632  005C66  0100               	movlb	0	; () banked
 19633  005C68  4B66               	infsnz	memset@p& (0+255),f,b
 19634  005C6A  2B67               	incf	(memset@p+1)& (0+255),f,b
 19635  005C6C                     l2118:
 19636                           
 19637                           ; BSR set to: 0
 19638  005C6C  0100               	movlb	0	; () banked
 19639  005C6E  0764               	decf	memset@n& (0+255),f,b
 19640  005C70  A0D8               	btfss	status,0,c
 19641  005C72  0765               	decf	(memset@n+1)& (0+255),f,b
 19642  005C74  2964               	incf	memset@n& (0+255),w,b
 19643  005C76  E1F1               	bnz	l6694
 19644  005C78  2965               	incf	(memset@n+1)& (0+255),w,b
 19645  005C7A  B4D8               	btfsc	status,2,c
 19646  005C7C  0012               	return	
 19647  005C7E  D7ED               	goto	l2119
 19648  005C80                     __end_of_memset:
 19649                           	opt stack 0
 19650                           tblptru	equ	0xFF8
 19651                           tblptrh	equ	0xFF7
 19652                           tblptrl	equ	0xFF6
 19653                           tablat	equ	0xFF5
 19654                           prodh	equ	0xFF4
 19655                           prodl	equ	0xFF3
 19656                           intcon	equ	0xFF2
 19657                           intcon2	equ	0xFF1
 19658                           intcon3	equ	0xFF0
 19659                           postinc0	equ	0xFEE
 19660                           wreg	equ	0xFE8
 19661                           indf1	equ	0xFE7
 19662                           postdec1	equ	0xFE5
 19663                           fsr1h	equ	0xFE2
 19664                           fsr1l	equ	0xFE1
 19665                           indf2	equ	0xFDF
 19666                           postinc2	equ	0xFDE
 19667                           postdec2	equ	0xFDD
 19668                           fsr2h	equ	0xFDA
 19669                           fsr2l	equ	0xFD9
 19670                           status	equ	0xFD8
 19671                           
 19672 ;; *************** function _printf *****************
 19673 ;; Defined at:
 19674 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19675 ;; Parameters:    Size  Location     Type
 19676 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19677 ;;		 -> STR_83(9), STR_81(11), STR_78(14), STR_74(14), 
 19678 ;;		 -> STR_71(168), STR_66(19), STR_63(28), STR_59(15), 
 19679 ;;		 -> STR_57(21), STR_53(14), STR_50(14), STR_37(16), 
 19680 ;;		 -> STR_36(608), STR_35(45), STR_32(21), STR_23(20), 
 19681 ;;		 -> STR_20(22), STR_17(35), STR_14(14), STR_11(14), 
 19682 ;; Auto vars:     Size  Location     Type
 19683 ;;  pb              4   95[BANK0 ] struct __prbuf
 19684 ;;  ap              2   93[BANK0 ] PTR void [1]
 19685 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19686 ;; Return value:  Size  Location     Type
 19687 ;;                  2   33[BANK0 ] int 
 19688 ;; Registers used:
 19689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/0
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19695 ;;      Params:         0      60       0       0       0       0       0       0       0
 19696 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19698 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19699 ;;Total ram usage:       66 bytes
 19700 ;; Hardware stack levels used:    1
 19701 ;; Hardware stack levels required when called:    8
 19702 ;; This function calls:
 19703 ;;		__doprnt
 19704 ;; This function is called by:
 19705 ;;		_alterarDadosConexaoConfigWifi
 19706 ;;		_enviaDadosWifi
 19707 ;;		_main
 19708 ;; This function uses a non-reentrant model
 19709 ;;
 19710                           
 19711                           	psect	text37
 19712  005B18                     __ptext37:
 19713                           	opt stack 0
 19714  005B18                     _printf:
 19715                           	opt stack 22
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;incstack = 0
 19719  005B18  0E00               	movlw	0
 19720  005B1A  0100               	movlb	0	; () banked
 19721  005B1C  6FBF               	movwf	printf@pb& (0+255),b
 19722  005B1E  0E00               	movlw	0
 19723  005B20  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19724  005B22  0EE0               	movlw	low _putch
 19725  005B24  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19726  005B26  0E5E               	movlw	high _putch
 19727  005B28  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19728  005B2A  0E83               	movlw	low (?_printf+2)
 19729  005B2C  6FBD               	movwf	printf@ap& (0+255),b
 19730  005B2E  0E00               	movlw	high (?_printf+2)
 19731  005B30  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;	Return value of _printf is never used
 19735  005B32  0EBF               	movlw	low printf@pb
 19736  005B34  6F6C               	movwf	__doprnt@pb& (0+255),b
 19737  005B36  0E00               	movlw	high printf@pb
 19738  005B38  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19739  005B3A  C081  F06E         	movff	printf@f,__doprnt@f
 19740  005B3E  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19741  005B42  0EBD               	movlw	low printf@ap
 19742  005B44  6F70               	movwf	__doprnt@ap& (0+255),b
 19743  005B46  0E00               	movlw	high printf@ap
 19744  005B48  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19745  005B4A  ECF3  F012         	call	__doprnt	;wreg free
 19746  005B4E  0012               	return	
 19747  005B50                     __end_of_printf:
 19748                           	opt stack 0
 19749                           tblptru	equ	0xFF8
 19750                           tblptrh	equ	0xFF7
 19751                           tblptrl	equ	0xFF6
 19752                           tablat	equ	0xFF5
 19753                           prodh	equ	0xFF4
 19754                           prodl	equ	0xFF3
 19755                           intcon	equ	0xFF2
 19756                           intcon2	equ	0xFF1
 19757                           intcon3	equ	0xFF0
 19758                           postinc0	equ	0xFEE
 19759                           wreg	equ	0xFE8
 19760                           indf1	equ	0xFE7
 19761                           postdec1	equ	0xFE5
 19762                           fsr1h	equ	0xFE2
 19763                           fsr1l	equ	0xFE1
 19764                           indf2	equ	0xFDF
 19765                           postinc2	equ	0xFDE
 19766                           postdec2	equ	0xFDD
 19767                           fsr2h	equ	0xFDA
 19768                           fsr2l	equ	0xFD9
 19769                           status	equ	0xFD8
 19770                           
 19771 ;; *************** function _getStringJSON *****************
 19772 ;; Defined at:
 19773 ;;		line 48 in file "src/json.c"
 19774 ;; Parameters:    Size  Location     Type
 19775 ;;  buff            2   49[BANK0 ] PTR unsigned char 
 19776 ;;		 -> bufferSerial(100), 
 19777 ;;  key             2   51[BANK0 ] PTR unsigned char 
 19778 ;;		 -> STR_43(3), STR_42(3), STR_41(3), 
 19779 ;;  ret             2   53[BANK0 ] PTR unsigned char 
 19780 ;;		 -> ipServer(20), senha(15), ssid(15), 
 19781 ;; Auto vars:     Size  Location     Type
 19782 ;;  res            25   57[BANK0 ] unsigned char [25]
 19783 ;;  attr           20  102[BANK0 ] unsigned char [20]
 19784 ;;  expected       20   82[BANK0 ] unsigned char [20]
 19785 ;;  i               2  126[BANK0 ] unsigned int 
 19786 ;;  j               2  123[BANK0 ] unsigned int 
 19787 ;;  find            1  125[BANK0 ] unsigned char 
 19788 ;;  isValid         1  122[BANK0 ] unsigned char 
 19789 ;; Return value:  Size  Location     Type
 19790 ;;                  1    wreg      void 
 19791 ;; Registers used:
 19792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19793 ;; Tracked objects:
 19794 ;;		On entry : 0/0
 19795 ;;		On exit  : 0/0
 19796 ;;		Unchanged: 0/0
 19797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19798 ;;      Params:         0       6       0       0       0       0       0       0       0
 19799 ;;      Locals:         0      71       0       0       0       0       0       0       0
 19800 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19801 ;;      Totals:         0      79       0       0       0       0       0       0       0
 19802 ;;Total ram usage:       79 bytes
 19803 ;; Hardware stack levels used:    1
 19804 ;; Hardware stack levels required when called:    9
 19805 ;; This function calls:
 19806 ;;		_sprintf
 19807 ;;		_strlen
 19808 ;;		_strstr
 19809 ;; This function is called by:
 19810 ;;		_alterarDadosConexaoConfigWifi
 19811 ;; This function uses a non-reentrant model
 19812 ;;
 19813                           
 19814                           	psect	text38
 19815  00438C                     __ptext38:
 19816                           	opt stack 0
 19817  00438C                     _getStringJSON:
 19818                           	opt stack 20
 19819                           
 19820                           ;json.c: 50: unsigned int i, j = 0;
 19821                           
 19822                           ;incstack = 0
 19823  00438C  0E00               	movlw	0
 19824  00438E  0100               	movlb	0	; () banked
 19825  004390  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19826  004392  0E00               	movlw	0
 19827  004394  6FDB               	movwf	getStringJSON@j& (0+255),b
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;json.c: 51: char res[25] = "";
 19831  004396  EE22  F000         	lfsr	2,getStringJSON@F288
 19832  00439A  EE10  F099         	lfsr	1,getStringJSON@res
 19833  00439E  0E18               	movlw	24
 19834  0043A0                     u11761:
 19835  0043A0  CFDB FFE3          	movff	plusw2,plusw1
 19836  0043A4  06E8               	decf	wreg,f,c
 19837  0043A6  E2FC               	bc	u11761
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;json.c: 52: char attr[20] = "";
 19841  0043A8  EE22  F02D         	lfsr	2,getStringJSON@F290
 19842  0043AC  EE10  F0C6         	lfsr	1,getStringJSON@attr
 19843  0043B0  0E13               	movlw	19
 19844  0043B2                     u11771:
 19845  0043B2  CFDB FFE3          	movff	plusw2,plusw1
 19846  0043B6  06E8               	decf	wreg,f,c
 19847  0043B8  E2FC               	bc	u11771
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;json.c: 53: char expected[20] = "";
 19851  0043BA  EE22  F019         	lfsr	2,getStringJSON@F292
 19852  0043BE  EE10  F0B2         	lfsr	1,getStringJSON@expected
 19853  0043C2  0E13               	movlw	19
 19854  0043C4                     u11781:
 19855  0043C4  CFDB FFE3          	movff	plusw2,plusw1
 19856  0043C8  06E8               	decf	wreg,f,c
 19857  0043CA  E2FC               	bc	u11781
 19858                           
 19859                           ; BSR set to: 0
 19860                           ;json.c: 54: char find = 0;
 19861  0043CC  0E00               	movlw	0
 19862  0043CE  6FDD               	movwf	getStringJSON@find& (0+255),b
 19863                           
 19864                           ; BSR set to: 0
 19865                           ;json.c: 55: char isValid = 0;
 19866  0043D0  0E00               	movlw	0
 19867  0043D2  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19868                           
 19869                           ; BSR set to: 0
 19870                           ;json.c: 57: sprintf(expected, "\"%s\":\"", key);
 19871  0043D4  0EB2               	movlw	low getStringJSON@expected
 19872  0043D6  6F81               	movwf	sprintf@wh& (0+255),b
 19873  0043D8  0E00               	movlw	high getStringJSON@expected
 19874  0043DA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19875  0043DC  0E7F               	movlw	low STR_130
 19876  0043DE  6F83               	movwf	sprintf@f& (0+255),b
 19877  0043E0  0E7F               	movlw	high STR_130
 19878  0043E2  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19879  0043E4  C093  F085         	movff	getStringJSON@key,?_sprintf+4
 19880  0043E8  C094  F086         	movff	getStringJSON@key+1,?_sprintf+5
 19881  0043EC  EC08  F02D         	call	_sprintf	;wreg free
 19882                           
 19883                           ;json.c: 59: for (i = 0; i < strlen(buff) && isValid == 0; i++)
 19884  0043F0  0E00               	movlw	0
 19885  0043F2  0100               	movlb	0	; () banked
 19886  0043F4  6FDF               	movwf	(getStringJSON@i+1)& (0+255),b
 19887  0043F6  0E00               	movlw	0
 19888  0043F8  6FDE               	movwf	getStringJSON@i& (0+255),b
 19889  0043FA  D090               	goto	l1560
 19890  0043FC                     
 19891                           ; BSR set to: 0
 19892                           ;json.c: 60: {
 19893                           ;json.c: 61: if (buff[i] == expected[j] && !find)
 19894                           
 19895                           ; BSR set to: 0
 19896  0043FC  0EB2               	movlw	low getStringJSON@expected
 19897  0043FE  25DB               	addwf	getStringJSON@j& (0+255),w,b
 19898  004400  6ED9               	movwf	fsr2l,c
 19899  004402  0E00               	movlw	high getStringJSON@expected
 19900  004404  21DC               	addwfc	(getStringJSON@j+1)& (0+255),w,b
 19901  004406  6EDA               	movwf	fsr2h,c
 19902  004408  51DE               	movf	getStringJSON@i& (0+255),w,b
 19903  00440A  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19904  00440C  6EE1               	movwf	fsr1l,c
 19905  00440E  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19906  004410  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19907  004412  6EE2               	movwf	fsr1h,c
 19908  004414  50DE               	movf	postinc2,w,c
 19909  004416  18E6               	xorwf	postinc1,w,c
 19910  004418  A4D8               	btfss	status,2,c
 19911  00441A  D035               	goto	l1562
 19912                           
 19913                           ; BSR set to: 0
 19914  00441C  51DD               	movf	getStringJSON@find& (0+255),w,b
 19915  00441E  A4D8               	btfss	status,2,c
 19916  004420  D032               	goto	l1562
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;json.c: 62: {
 19920                           ;json.c: 63: sprintf(attr, "%s%c", attr, buff[i]);
 19921  004422  0EC6               	movlw	low getStringJSON@attr
 19922  004424  6F81               	movwf	sprintf@wh& (0+255),b
 19923  004426  0E00               	movlw	high getStringJSON@attr
 19924  004428  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19925  00442A  0EC2               	movlw	low STR_128
 19926  00442C  6F83               	movwf	sprintf@f& (0+255),b
 19927  00442E  0E7F               	movlw	high STR_128
 19928  004430  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19929  004432  0EC6               	movlw	low getStringJSON@attr
 19930  004434  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19931  004436  0E00               	movlw	high getStringJSON@attr
 19932  004438  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19933  00443A  51DE               	movf	getStringJSON@i& (0+255),w,b
 19934  00443C  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19935  00443E  6ED9               	movwf	fsr2l,c
 19936  004440  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19937  004442  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19938  004444  6EDA               	movwf	fsr2h,c
 19939  004446  50DF               	movf	indf2,w,c
 19940  004448  6F97               	movwf	??_getStringJSON& (0+255),b
 19941  00444A  5197               	movf	??_getStringJSON& (0+255),w,b
 19942  00444C  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19943  00444E  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19944  004450  EC08  F02D         	call	_sprintf	;wreg free
 19945                           
 19946                           ;json.c: 64: j++;
 19947  004454  0100               	movlb	0	; () banked
 19948  004456  4BDB               	infsnz	getStringJSON@j& (0+255),f,b
 19949  004458  2BDC               	incf	(getStringJSON@j+1)& (0+255),f,b
 19950                           
 19951                           ; BSR set to: 0
 19952                           ;json.c: 65: if (strstr(attr, expected))
 19953  00445A  0EC6               	movlw	low getStringJSON@attr
 19954  00445C  6F6F               	movwf	strstr@s1& (0+255),b
 19955  00445E  0E00               	movlw	high getStringJSON@attr
 19956  004460  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19957  004462  0EB2               	movlw	low getStringJSON@expected
 19958  004464  6F71               	movwf	strstr@s2& (0+255),b
 19959  004466  0E00               	movlw	high getStringJSON@expected
 19960  004468  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19961  00446A  ECAE  F027         	call	_strstr	;wreg free
 19962  00446E  0100               	movlb	0	; () banked
 19963  004470  516F               	movf	?_strstr& (0+255),w,b
 19964  004472  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19965  004474  B4D8               	btfsc	status,2,c
 19966  004476  D04F               	goto	l1568
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;json.c: 66: {
 19970                           ;json.c: 67: j = 0;
 19971  004478  0E00               	movlw	0
 19972  00447A  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19973  00447C  0E00               	movlw	0
 19974  00447E  6FDB               	movwf	getStringJSON@j& (0+255),b
 19975                           
 19976                           ;json.c: 68: find = 1;
 19977  004480  0E01               	movlw	1
 19978  004482  6FDD               	movwf	getStringJSON@find& (0+255),b
 19979                           
 19980                           ; BSR set to: 0
 19981                           ;json.c: 69: }
 19982                           ;json.c: 70: }
 19983  004484  D048               	goto	l1568
 19984  004486                     l1562:
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;json.c: 71: else if (!find)
 19988                           
 19989                           ; BSR set to: 0
 19990  004486  51DD               	movf	getStringJSON@find& (0+255),w,b
 19991  004488  A4D8               	btfss	status,2,c
 19992  00448A  D00F               	goto	l1565
 19993                           
 19994                           ; BSR set to: 0
 19995                           ;json.c: 72: {
 19996                           ;json.c: 73: j = 0;
 19997  00448C  0E00               	movlw	0
 19998  00448E  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19999  004490  0E00               	movlw	0
 20000  004492  6FDB               	movwf	getStringJSON@j& (0+255),b
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;json.c: 74: sprintf(attr, "");
 20004  004494  0EC6               	movlw	low getStringJSON@attr
 20005  004496  6F81               	movwf	sprintf@wh& (0+255),b
 20006  004498  0E00               	movlw	high getStringJSON@attr
 20007  00449A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20008  00449C  0E85               	movlw	low (STR_35+44)
 20009  00449E  6F83               	movwf	sprintf@f& (0+255),b
 20010  0044A0  0E7B               	movlw	high (STR_35+44)
 20011  0044A2  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20012  0044A4  EC08  F02D         	call	_sprintf	;wreg free
 20013                           
 20014                           ;json.c: 75: }
 20015  0044A8  D036               	goto	l1568
 20016  0044AA                     l1565:
 20017                           
 20018                           ;json.c: 76: else
 20019                           ;json.c: 77: {
 20020                           ;json.c: 78: if (buff[i] == '"')
 20021  0044AA  0100               	movlb	0	; () banked
 20022  0044AC  51DE               	movf	getStringJSON@i& (0+255),w,b
 20023  0044AE  2591               	addwf	getStringJSON@buff& (0+255),w,b
 20024  0044B0  6ED9               	movwf	fsr2l,c
 20025  0044B2  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 20026  0044B4  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 20027  0044B6  6EDA               	movwf	fsr2h,c
 20028  0044B8  0E22               	movlw	34
 20029  0044BA  18DE               	xorwf	postinc2,w,c
 20030  0044BC  A4D8               	btfss	status,2,c
 20031  0044BE  D011               	goto	l1567
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;json.c: 79: {
 20035                           ;json.c: 80: isValid = 1;
 20036  0044C0  0E01               	movlw	1
 20037  0044C2  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 20038                           
 20039                           ; BSR set to: 0
 20040                           ;json.c: 81: sprintf(ret, "%s", res);
 20041  0044C4  C095  F081         	movff	getStringJSON@ret,sprintf@wh
 20042  0044C8  C096  F082         	movff	getStringJSON@ret+1,sprintf@wh+1
 20043  0044CC  0E12               	movlw	low (STR_97+7)
 20044  0044CE  6F83               	movwf	sprintf@f& (0+255),b
 20045  0044D0  0E7F               	movlw	high (STR_97+7)
 20046  0044D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20047  0044D4  0E99               	movlw	low getStringJSON@res
 20048  0044D6  6F85               	movwf	(?_sprintf+4)& (0+255),b
 20049  0044D8  0E00               	movlw	high getStringJSON@res
 20050  0044DA  6F86               	movwf	(?_sprintf+5)& (0+255),b
 20051  0044DC  EC08  F02D         	call	_sprintf	;wreg free
 20052                           
 20053                           ;json.c: 82: }
 20054  0044E0  D01A               	goto	l1568
 20055  0044E2                     l1567:
 20056                           
 20057                           ;json.c: 83: else
 20058                           ;json.c: 84: {
 20059                           ;json.c: 85: sprintf(res, "%s%c", res, buff[i]);
 20060  0044E2  0E99               	movlw	low getStringJSON@res
 20061  0044E4  0100               	movlb	0	; () banked
 20062  0044E6  6F81               	movwf	sprintf@wh& (0+255),b
 20063  0044E8  0E00               	movlw	high getStringJSON@res
 20064  0044EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20065  0044EC  0EC2               	movlw	low STR_128
 20066  0044EE  6F83               	movwf	sprintf@f& (0+255),b
 20067  0044F0  0E7F               	movlw	high STR_128
 20068  0044F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20069  0044F4  0E99               	movlw	low getStringJSON@res
 20070  0044F6  6F85               	movwf	(?_sprintf+4)& (0+255),b
 20071  0044F8  0E00               	movlw	high getStringJSON@res
 20072  0044FA  6F86               	movwf	(?_sprintf+5)& (0+255),b
 20073  0044FC  51DE               	movf	getStringJSON@i& (0+255),w,b
 20074  0044FE  2591               	addwf	getStringJSON@buff& (0+255),w,b
 20075  004500  6ED9               	movwf	fsr2l,c
 20076  004502  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 20077  004504  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 20078  004506  6EDA               	movwf	fsr2h,c
 20079  004508  50DF               	movf	indf2,w,c
 20080  00450A  6F97               	movwf	??_getStringJSON& (0+255),b
 20081  00450C  5197               	movf	??_getStringJSON& (0+255),w,b
 20082  00450E  6F87               	movwf	(?_sprintf+6)& (0+255),b
 20083  004510  6B88               	clrf	(?_sprintf+7)& (0+255),b
 20084  004512  EC08  F02D         	call	_sprintf	;wreg free
 20085  004516                     l1568:
 20086  004516  0100               	movlb	0	; () banked
 20087  004518  4BDE               	infsnz	getStringJSON@i& (0+255),f,b
 20088  00451A  2BDF               	incf	(getStringJSON@i+1)& (0+255),f,b
 20089  00451C                     l1560:
 20090                           
 20091                           ; BSR set to: 0
 20092                           
 20093                           ; BSR set to: 0
 20094  00451C  C091  F060         	movff	getStringJSON@buff,strlen@s
 20095  004520  C092  F061         	movff	getStringJSON@buff+1,strlen@s+1
 20096  004524  EC3D  F02C         	call	_strlen	;wreg free
 20097  004528  0100               	movlb	0	; () banked
 20098  00452A  5160               	movf	?_strlen& (0+255),w,b
 20099  00452C  5DDE               	subwf	getStringJSON@i& (0+255),w,b
 20100  00452E  5161               	movf	(?_strlen+1)& (0+255),w,b
 20101  004530  59DF               	subwfb	(getStringJSON@i+1)& (0+255),w,b
 20102  004532  B0D8               	btfsc	status,0,c
 20103  004534  0012               	return	
 20104                           
 20105                           ; BSR set to: 0
 20106  004536  51DA               	movf	getStringJSON@isValid& (0+255),w,b
 20107  004538  A4D8               	btfss	status,2,c
 20108  00453A  0012               	return	
 20109  00453C  D75F               	goto	l1561
 20110  00453E                     __end_of_getStringJSON:
 20111                           	opt stack 0
 20112                           tblptru	equ	0xFF8
 20113                           tblptrh	equ	0xFF7
 20114                           tblptrl	equ	0xFF6
 20115                           tablat	equ	0xFF5
 20116                           prodh	equ	0xFF4
 20117                           prodl	equ	0xFF3
 20118                           intcon	equ	0xFF2
 20119                           intcon2	equ	0xFF1
 20120                           intcon3	equ	0xFF0
 20121                           postinc0	equ	0xFEE
 20122                           wreg	equ	0xFE8
 20123                           indf1	equ	0xFE7
 20124                           postinc1	equ	0xFE6
 20125                           postdec1	equ	0xFE5
 20126                           plusw1	equ	0xFE3
 20127                           fsr1h	equ	0xFE2
 20128                           fsr1l	equ	0xFE1
 20129                           indf2	equ	0xFDF
 20130                           postinc2	equ	0xFDE
 20131                           postdec2	equ	0xFDD
 20132                           plusw2	equ	0xFDB
 20133                           fsr2h	equ	0xFDA
 20134                           fsr2l	equ	0xFD9
 20135                           status	equ	0xFD8
 20136                           
 20137 ;; *************** function _getIntJSON *****************
 20138 ;; Defined at:
 20139 ;;		line 5 in file "src/json.c"
 20140 ;; Parameters:    Size  Location     Type
 20141 ;;  buff            2   49[BANK0 ] PTR unsigned char 
 20142 ;;		 -> bufferSerial(100), 
 20143 ;;  key             2   51[BANK0 ] PTR unsigned char 
 20144 ;;		 -> STR_44(3), 
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;  attr           20   85[BANK0 ] unsigned char [20]
 20147 ;;  expected       20   55[BANK0 ] unsigned char [20]
 20148 ;;  aux            10   75[BANK0 ] unsigned char [10]
 20149 ;;  i               2  110[BANK0 ] int 
 20150 ;;  j               2  108[BANK0 ] int 
 20151 ;;  value           2  105[BANK0 ] int 
 20152 ;;  find            1  107[BANK0 ] unsigned char 
 20153 ;; Return value:  Size  Location     Type
 20154 ;;                  2   49[BANK0 ] int 
 20155 ;; Registers used:
 20156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20157 ;; Tracked objects:
 20158 ;;		On entry : 0/0
 20159 ;;		On exit  : 0/0
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20162 ;;      Params:         0       4       0       0       0       0       0       0       0
 20163 ;;      Locals:         0      57       0       0       0       0       0       0       0
 20164 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20165 ;;      Totals:         0      63       0       0       0       0       0       0       0
 20166 ;;Total ram usage:       63 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:    9
 20169 ;; This function calls:
 20170 ;;		_atoi
 20171 ;;		_sprintf
 20172 ;;		_strlen
 20173 ;;		_strstr
 20174 ;; This function is called by:
 20175 ;;		_alterarDadosConexaoConfigWifi
 20176 ;; This function uses a non-reentrant model
 20177 ;;
 20178                           
 20179                           	psect	text39
 20180  0041C4                     __ptext39:
 20181                           	opt stack 0
 20182  0041C4                     _getIntJSON:
 20183                           	opt stack 20
 20184                           
 20185                           ;json.c: 7: int i, j = 0;
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;incstack = 0
 20189  0041C4  0E00               	movlw	0
 20190  0041C6  0100               	movlb	0	; () banked
 20191  0041C8  6FCD               	movwf	(getIntJSON@j+1)& (0+255),b
 20192  0041CA  0E00               	movlw	0
 20193  0041CC  6FCC               	movwf	getIntJSON@j& (0+255),b
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;json.c: 8: char aux[10] = "";
 20197  0041CE  EE21  F042         	lfsr	2,getIntJSON@F274
 20198  0041D2  EE10  F0AB         	lfsr	1,getIntJSON@aux
 20199  0041D6  0E09               	movlw	9
 20200  0041D8                     u11861:
 20201  0041D8  CFDB FFE3          	movff	plusw2,plusw1
 20202  0041DC  06E8               	decf	wreg,f,c
 20203  0041DE  E2FC               	bc	u11861
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;json.c: 9: char attr[20] = "";
 20207  0041E0  EE22  F055         	lfsr	2,getIntJSON@F276
 20208  0041E4  EE10  F0B5         	lfsr	1,getIntJSON@attr
 20209  0041E8  0E13               	movlw	19
 20210  0041EA                     u11871:
 20211  0041EA  CFDB FFE3          	movff	plusw2,plusw1
 20212  0041EE  06E8               	decf	wreg,f,c
 20213  0041F0  E2FC               	bc	u11871
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;json.c: 10: char expected[20] = "";
 20217  0041F2  EE22  F041         	lfsr	2,getIntJSON@F278
 20218  0041F6  EE10  F097         	lfsr	1,getIntJSON@expected
 20219  0041FA  0E13               	movlw	19
 20220  0041FC                     u11881:
 20221  0041FC  CFDB FFE3          	movff	plusw2,plusw1
 20222  004200  06E8               	decf	wreg,f,c
 20223  004202  E2FC               	bc	u11881
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;json.c: 11: char find = 0;
 20227  004204  0E00               	movlw	0
 20228  004206  6FCB               	movwf	getIntJSON@find& (0+255),b
 20229                           
 20230                           ; BSR set to: 0
 20231                           ;json.c: 12: int value = -1;
 20232  004208  69C9               	setf	getIntJSON@value& (0+255),b
 20233  00420A  69CA               	setf	(getIntJSON@value+1)& (0+255),b
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;json.c: 14: sprintf(expected, "\"%s\":", key);
 20237  00420C  0E97               	movlw	low getIntJSON@expected
 20238  00420E  6F81               	movwf	sprintf@wh& (0+255),b
 20239  004210  0E00               	movlw	high getIntJSON@expected
 20240  004212  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20241  004214  0EB0               	movlw	low STR_127
 20242  004216  6F83               	movwf	sprintf@f& (0+255),b
 20243  004218  0E7F               	movlw	high STR_127
 20244  00421A  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20245  00421C  C093  F085         	movff	getIntJSON@key,?_sprintf+4
 20246  004220  C094  F086         	movff	getIntJSON@key+1,?_sprintf+5
 20247  004224  EC08  F02D         	call	_sprintf	;wreg free
 20248                           
 20249                           ;json.c: 16: for (i = 0; i < strlen(buff) && value == -1; i++)
 20250  004228  0E00               	movlw	0
 20251  00422A  0100               	movlb	0	; () banked
 20252  00422C  6FCF               	movwf	(getIntJSON@i+1)& (0+255),b
 20253  00422E  0E00               	movlw	0
 20254  004230  6FCE               	movwf	getIntJSON@i& (0+255),b
 20255  004232  D095               	goto	l1537
 20256  004234                     
 20257                           ; BSR set to: 0
 20258                           ;json.c: 17: {
 20259                           ;json.c: 18: if (buff[i] == expected[j] && !find)
 20260                           
 20261                           ; BSR set to: 0
 20262  004234  0E97               	movlw	low getIntJSON@expected
 20263  004236  25CC               	addwf	getIntJSON@j& (0+255),w,b
 20264  004238  6ED9               	movwf	fsr2l,c
 20265  00423A  0E00               	movlw	high getIntJSON@expected
 20266  00423C  21CD               	addwfc	(getIntJSON@j+1)& (0+255),w,b
 20267  00423E  6EDA               	movwf	fsr2h,c
 20268  004240  51CE               	movf	getIntJSON@i& (0+255),w,b
 20269  004242  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20270  004244  6EE1               	movwf	fsr1l,c
 20271  004246  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20272  004248  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20273  00424A  6EE2               	movwf	fsr1h,c
 20274  00424C  50DE               	movf	postinc2,w,c
 20275  00424E  18E6               	xorwf	postinc1,w,c
 20276  004250  A4D8               	btfss	status,2,c
 20277  004252  D035               	goto	l1539
 20278                           
 20279                           ; BSR set to: 0
 20280  004254  51CB               	movf	getIntJSON@find& (0+255),w,b
 20281  004256  A4D8               	btfss	status,2,c
 20282  004258  D032               	goto	l1539
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;json.c: 19: {
 20286                           ;json.c: 20: sprintf(attr, "%s%c", attr, buff[i]);
 20287  00425A  0EB5               	movlw	low getIntJSON@attr
 20288  00425C  6F81               	movwf	sprintf@wh& (0+255),b
 20289  00425E  0E00               	movlw	high getIntJSON@attr
 20290  004260  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20291  004262  0EC2               	movlw	low STR_128
 20292  004264  6F83               	movwf	sprintf@f& (0+255),b
 20293  004266  0E7F               	movlw	high STR_128
 20294  004268  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20295  00426A  0EB5               	movlw	low getIntJSON@attr
 20296  00426C  6F85               	movwf	(?_sprintf+4)& (0+255),b
 20297  00426E  0E00               	movlw	high getIntJSON@attr
 20298  004270  6F86               	movwf	(?_sprintf+5)& (0+255),b
 20299  004272  51CE               	movf	getIntJSON@i& (0+255),w,b
 20300  004274  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20301  004276  6ED9               	movwf	fsr2l,c
 20302  004278  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20303  00427A  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20304  00427C  6EDA               	movwf	fsr2h,c
 20305  00427E  50DF               	movf	indf2,w,c
 20306  004280  6F95               	movwf	??_getIntJSON& (0+255),b
 20307  004282  5195               	movf	??_getIntJSON& (0+255),w,b
 20308  004284  6F87               	movwf	(?_sprintf+6)& (0+255),b
 20309  004286  6B88               	clrf	(?_sprintf+7)& (0+255),b
 20310  004288  EC08  F02D         	call	_sprintf	;wreg free
 20311                           
 20312                           ;json.c: 21: j++;
 20313  00428C  0100               	movlb	0	; () banked
 20314  00428E  4BCC               	infsnz	getIntJSON@j& (0+255),f,b
 20315  004290  2BCD               	incf	(getIntJSON@j+1)& (0+255),f,b
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;json.c: 22: if (strstr(attr, expected))
 20319  004292  0EB5               	movlw	low getIntJSON@attr
 20320  004294  6F6F               	movwf	strstr@s1& (0+255),b
 20321  004296  0E00               	movlw	high getIntJSON@attr
 20322  004298  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20323  00429A  0E97               	movlw	low getIntJSON@expected
 20324  00429C  6F71               	movwf	strstr@s2& (0+255),b
 20325  00429E  0E00               	movlw	high getIntJSON@expected
 20326  0042A0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20327  0042A2  ECAE  F027         	call	_strstr	;wreg free
 20328  0042A6  0100               	movlb	0	; () banked
 20329  0042A8  516F               	movf	?_strstr& (0+255),w,b
 20330  0042AA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20331  0042AC  B4D8               	btfsc	status,2,c
 20332  0042AE  D054               	goto	l1547
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;json.c: 23: {
 20336                           ;json.c: 24: j = 0;
 20337  0042B0  0E00               	movlw	0
 20338  0042B2  6FCD               	movwf	(getIntJSON@j+1)& (0+255),b
 20339  0042B4  0E00               	movlw	0
 20340  0042B6  6FCC               	movwf	getIntJSON@j& (0+255),b
 20341                           
 20342                           ;json.c: 25: find = 1;
 20343  0042B8  0E01               	movlw	1
 20344  0042BA  6FCB               	movwf	getIntJSON@find& (0+255),b
 20345                           
 20346                           ; BSR set to: 0
 20347                           ;json.c: 26: }
 20348                           ;json.c: 27: }
 20349  0042BC  D04D               	goto	l1547
 20350  0042BE                     l1539:
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;json.c: 28: else if (!find)
 20354                           
 20355                           ; BSR set to: 0
 20356  0042BE  51CB               	movf	getIntJSON@find& (0+255),w,b
 20357  0042C0  A4D8               	btfss	status,2,c
 20358  0042C2  D00F               	goto	l1542
 20359                           
 20360                           ; BSR set to: 0
 20361                           ;json.c: 29: {
 20362                           ;json.c: 30: j = 0;
 20363  0042C4  0E00               	movlw	0
 20364  0042C6  6FCD               	movwf	(getIntJSON@j+1)& (0+255),b
 20365  0042C8  0E00               	movlw	0
 20366  0042CA  6FCC               	movwf	getIntJSON@j& (0+255),b
 20367                           
 20368                           ; BSR set to: 0
 20369                           ;json.c: 31: sprintf(attr, "");
 20370  0042CC  0EB5               	movlw	low getIntJSON@attr
 20371  0042CE  6F81               	movwf	sprintf@wh& (0+255),b
 20372  0042D0  0E00               	movlw	high getIntJSON@attr
 20373  0042D2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 20374  0042D4  0E85               	movlw	low (STR_35+44)
 20375  0042D6  6F83               	movwf	sprintf@f& (0+255),b
 20376  0042D8  0E7B               	movlw	high (STR_35+44)
 20377  0042DA  6F84               	movwf	(sprintf@f+1)& (0+255),b
 20378  0042DC  EC08  F02D         	call	_sprintf	;wreg free
 20379                           
 20380                           ;json.c: 32: }
 20381  0042E0  D03B               	goto	l1547
 20382  0042E2                     l1542:
 20383                           
 20384                           ;json.c: 33: else
 20385                           ;json.c: 34: {
 20386                           ;json.c: 35: if (buff[i] == '"' || buff[i] == ',' || buff[i] == '}')
 20387  0042E2  0100               	movlb	0	; () banked
 20388  0042E4  51CE               	movf	getIntJSON@i& (0+255),w,b
 20389  0042E6  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20390  0042E8  6ED9               	movwf	fsr2l,c
 20391  0042EA  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20392  0042EC  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20393  0042EE  6EDA               	movwf	fsr2h,c
 20394  0042F0  0E22               	movlw	34
 20395  0042F2  18DE               	xorwf	postinc2,w,c
 20396  0042F4  B4D8               	btfsc	status,2,c
 20397  0042F6  D014               	goto	u11950
 20398                           
 20399                           ; BSR set to: 0
 20400  0042F8  51CE               	movf	getIntJSON@i& (0+255),w,b
 20401  0042FA  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20402  0042FC  6ED9               	movwf	fsr2l,c
 20403  0042FE  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20404  004300  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20405  004302  6EDA               	movwf	fsr2h,c
 20406  004304  0E2C               	movlw	44
 20407  004306  18DE               	xorwf	postinc2,w,c
 20408  004308  B4D8               	btfsc	status,2,c
 20409  00430A  D00A               	goto	u11950
 20410                           
 20411                           ; BSR set to: 0
 20412  00430C  51CE               	movf	getIntJSON@i& (0+255),w,b
 20413  00430E  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20414  004310  6ED9               	movwf	fsr2l,c
 20415  004312  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20416  004314  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20417  004316  6EDA               	movwf	fsr2h,c
 20418  004318  0E7D               	movlw	125
 20419  00431A  18DE               	xorwf	postinc2,w,c
 20420  00431C  A4D8               	btfss	status,2,c
 20421  00431E  D00B               	goto	l1544
 20422  004320                     u11950:
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;json.c: 36: {
 20426                           ;json.c: 37: value = atoi(aux);
 20427                           
 20428                           ; BSR set to: 0
 20429  004320  0EAB               	movlw	low getIntJSON@aux
 20430  004322  6F66               	movwf	atoi@s& (0+255),b
 20431  004324  0E00               	movlw	high getIntJSON@aux
 20432  004326  6F67               	movwf	(atoi@s+1)& (0+255),b
 20433  004328  EC7F  F026         	call	_atoi	;wreg free
 20434  00432C  C066  F0C9         	movff	?_atoi,getIntJSON@value
 20435  004330  C067  F0CA         	movff	?_atoi+1,getIntJSON@value+1
 20436                           
 20437                           ;json.c: 38: }
 20438  004334  D011               	goto	l1547
 20439  004336                     l1544:
 20440                           
 20441                           ;json.c: 39: else
 20442                           ;json.c: 40: {
 20443                           ;json.c: 41: aux[j++] = buff[i];
 20444  004336  0100               	movlb	0	; () banked
 20445  004338  51CE               	movf	getIntJSON@i& (0+255),w,b
 20446  00433A  2591               	addwf	getIntJSON@buff& (0+255),w,b
 20447  00433C  6ED9               	movwf	fsr2l,c
 20448  00433E  51CF               	movf	(getIntJSON@i+1)& (0+255),w,b
 20449  004340  2192               	addwfc	(getIntJSON@buff+1)& (0+255),w,b
 20450  004342  6EDA               	movwf	fsr2h,c
 20451  004344  0EAB               	movlw	low getIntJSON@aux
 20452  004346  25CC               	addwf	getIntJSON@j& (0+255),w,b
 20453  004348  6EE1               	movwf	fsr1l,c
 20454  00434A  0E00               	movlw	high getIntJSON@aux
 20455  00434C  21CD               	addwfc	(getIntJSON@j+1)& (0+255),w,b
 20456  00434E  6EE2               	movwf	fsr1h,c
 20457  004350  CFDF FFE7          	movff	indf2,indf1
 20458                           
 20459                           ; BSR set to: 0
 20460  004354  4BCC               	infsnz	getIntJSON@j& (0+255),f,b
 20461  004356  2BCD               	incf	(getIntJSON@j+1)& (0+255),f,b
 20462  004358                     l1547:
 20463                           
 20464                           ; BSR set to: 0
 20465                           
 20466                           ; BSR set to: 0
 20467                           
 20468                           ; BSR set to: 0
 20469  004358  0100               	movlb	0	; () banked
 20470  00435A  4BCE               	infsnz	getIntJSON@i& (0+255),f,b
 20471  00435C  2BCF               	incf	(getIntJSON@i+1)& (0+255),f,b
 20472  00435E                     l1537:
 20473                           
 20474                           ; BSR set to: 0
 20475                           
 20476                           ; BSR set to: 0
 20477  00435E  C091  F060         	movff	getIntJSON@buff,strlen@s
 20478  004362  C092  F061         	movff	getIntJSON@buff+1,strlen@s+1
 20479  004366  EC3D  F02C         	call	_strlen	;wreg free
 20480  00436A  0100               	movlb	0	; () banked
 20481  00436C  5160               	movf	?_strlen& (0+255),w,b
 20482  00436E  5DCE               	subwf	getIntJSON@i& (0+255),w,b
 20483  004370  5161               	movf	(?_strlen+1)& (0+255),w,b
 20484  004372  59CF               	subwfb	(getIntJSON@i+1)& (0+255),w,b
 20485  004374  B0D8               	btfsc	status,0,c
 20486  004376  D005               	goto	u11970
 20487                           
 20488                           ; BSR set to: 0
 20489  004378  29C9               	incf	getIntJSON@value& (0+255),w,b
 20490  00437A  E103               	bnz	l1550
 20491  00437C  29CA               	incf	(getIntJSON@value+1)& (0+255),w,b
 20492  00437E  B4D8               	btfsc	status,2,c
 20493  004380  D759               	goto	l1538
 20494  004382                     u11970:
 20495  004382                     l1550:
 20496                           
 20497                           ; BSR set to: 0
 20498                           ;json.c: 42: }
 20499                           ;json.c: 43: }
 20500                           ;json.c: 44: }
 20501                           ;json.c: 45: return value;
 20502  004382  C0C9  F091         	movff	getIntJSON@value,?_getIntJSON
 20503  004386  C0CA  F092         	movff	getIntJSON@value+1,?_getIntJSON+1
 20504                           
 20505                           ; BSR set to: 0
 20506  00438A  0012               	return		;funcret
 20507  00438C                     __end_of_getIntJSON:
 20508                           	opt stack 0
 20509                           tblptru	equ	0xFF8
 20510                           tblptrh	equ	0xFF7
 20511                           tblptrl	equ	0xFF6
 20512                           tablat	equ	0xFF5
 20513                           prodh	equ	0xFF4
 20514                           prodl	equ	0xFF3
 20515                           intcon	equ	0xFF2
 20516                           intcon2	equ	0xFF1
 20517                           intcon3	equ	0xFF0
 20518                           postinc0	equ	0xFEE
 20519                           wreg	equ	0xFE8
 20520                           indf1	equ	0xFE7
 20521                           postinc1	equ	0xFE6
 20522                           postdec1	equ	0xFE5
 20523                           plusw1	equ	0xFE3
 20524                           fsr1h	equ	0xFE2
 20525                           fsr1l	equ	0xFE1
 20526                           indf2	equ	0xFDF
 20527                           postinc2	equ	0xFDE
 20528                           postdec2	equ	0xFDD
 20529                           plusw2	equ	0xFDB
 20530                           fsr2h	equ	0xFDA
 20531                           fsr2l	equ	0xFD9
 20532                           status	equ	0xFD8
 20533                           
 20534 ;; *************** function _sprintf *****************
 20535 ;; Defined at:
 20536 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 20539 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 20540 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), enviaDadosWifi@AUX(15), ipServer(20), 
 20541 ;;		 -> senha(15), ssid(15), line4(21), line3(21), 
 20542 ;;		 -> line2(21), line1(21), 
 20543 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 20544 ;;		 -> STR_135(3), STR_134(5), STR_133(3), STR_132(1), 
 20545 ;;		 -> STR_131(5), STR_130(7), STR_129(1), STR_128(5), 
 20546 ;;		 -> STR_127(6), STR_126(18), STR_125(19), STR_124(19), 
 20547 ;;		 -> STR_123(19), STR_122(20), STR_121(9), STR_120(7), 
 20548 ;;		 -> STR_119(8), STR_118(8), STR_117(10), STR_116(18), 
 20549 ;;		 -> STR_115(18), STR_114(18), STR_113(17), STR_112(17), 
 20550 ;;		 -> STR_111(17), STR_110(17), STR_109(20), STR_108(20), 
 20551 ;;		 -> STR_107(20), STR_104(11), STR_101(10), STR_98(9), 
 20552 ;;		 -> STR_97(10), STR_96(9), STR_95(15), STR_94(18), 
 20553 ;;		 -> STR_93(20), STR_92(10), STR_91(22), STR_90(21), 
 20554 ;;		 -> STR_89(15), STR_88(12), STR_86(3), STR_85(14), 
 20555 ;;		 -> STR_84(20), STR_69(3), STR_48(18), STR_47(6), 
 20556 ;;		 -> STR_46(3), STR_45(3), STR_39(14), STR_29(9), 
 20557 ;;		 -> STR_28(21), STR_27(17), STR_26(20), 
 20558 ;; Auto vars:     Size  Location     Type
 20559 ;;  pb              4   45[BANK0 ] struct __prbuf
 20560 ;;  ap              2   43[BANK0 ] PTR void [1]
 20561 ;;		 -> ?_sprintf(2), ?_printf(2), 
 20562 ;; Return value:  Size  Location     Type
 20563 ;;                  2   33[BANK0 ] int 
 20564 ;; Registers used:
 20565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20566 ;; Tracked objects:
 20567 ;;		On entry : 0/0
 20568 ;;		On exit  : 0/0
 20569 ;;		Unchanged: 0/0
 20570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20571 ;;      Params:         0      10       0       0       0       0       0       0       0
 20572 ;;      Locals:         0       6       0       0       0       0       0       0       0
 20573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20574 ;;      Totals:         0      16       0       0       0       0       0       0       0
 20575 ;;Total ram usage:       16 bytes
 20576 ;; Hardware stack levels used:    1
 20577 ;; Hardware stack levels required when called:    8
 20578 ;; This function calls:
 20579 ;;		__doprnt
 20580 ;; This function is called by:
 20581 ;;		_alterarDadosConexaoConfigWifi
 20582 ;;		_enviaDadosWifi
 20583 ;;		_main
 20584 ;;		_getIntJSON
 20585 ;;		_getStringJSON
 20586 ;;		_setKeyStartReceiveSerial
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text40
 20591  005A10                     __ptext40:
 20592                           	opt stack 0
 20593  005A10                     _sprintf:
 20594                           	opt stack 22
 20595                           
 20596                           ; BSR set to: 0
 20597                           ;incstack = 0
 20598  005A10  C081  F08D         	movff	sprintf@wh,sprintf@pb
 20599  005A14  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 20600  005A18  0E00               	movlw	0
 20601  005A1A  0100               	movlb	0	; () banked
 20602  005A1C  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 20603  005A1E  0E00               	movlw	0
 20604  005A20  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 20605  005A22  0E85               	movlw	low (?_sprintf+4)
 20606  005A24  6F8B               	movwf	sprintf@ap& (0+255),b
 20607  005A26  0E00               	movlw	high (?_sprintf+4)
 20608  005A28  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 20609                           
 20610                           ; BSR set to: 0
 20611  005A2A  0E8D               	movlw	low sprintf@pb
 20612  005A2C  6F6C               	movwf	__doprnt@pb& (0+255),b
 20613  005A2E  0E00               	movlw	high sprintf@pb
 20614  005A30  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 20615  005A32  C083  F06E         	movff	sprintf@f,__doprnt@f
 20616  005A36  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 20617  005A3A  0E8B               	movlw	low sprintf@ap
 20618  005A3C  6F70               	movwf	__doprnt@ap& (0+255),b
 20619  005A3E  0E00               	movlw	high sprintf@ap
 20620  005A40  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 20621  005A42  ECF3  F012         	call	__doprnt	;wreg free
 20622  005A46  C08D  FFD9         	movff	sprintf@pb,fsr2l
 20623  005A4A  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 20624  005A4E  0E00               	movlw	0
 20625  005A50  6EDF               	movwf	indf2,c
 20626  005A52  0012               	return	
 20627  005A54                     __end_of_sprintf:
 20628                           	opt stack 0
 20629                           tblptru	equ	0xFF8
 20630                           tblptrh	equ	0xFF7
 20631                           tblptrl	equ	0xFF6
 20632                           tablat	equ	0xFF5
 20633                           prodh	equ	0xFF4
 20634                           prodl	equ	0xFF3
 20635                           intcon	equ	0xFF2
 20636                           intcon2	equ	0xFF1
 20637                           intcon3	equ	0xFF0
 20638                           postinc0	equ	0xFEE
 20639                           wreg	equ	0xFE8
 20640                           indf1	equ	0xFE7
 20641                           postinc1	equ	0xFE6
 20642                           postdec1	equ	0xFE5
 20643                           plusw1	equ	0xFE3
 20644                           fsr1h	equ	0xFE2
 20645                           fsr1l	equ	0xFE1
 20646                           indf2	equ	0xFDF
 20647                           postinc2	equ	0xFDE
 20648                           postdec2	equ	0xFDD
 20649                           plusw2	equ	0xFDB
 20650                           fsr2h	equ	0xFDA
 20651                           fsr2l	equ	0xFD9
 20652                           status	equ	0xFD8
 20653                           
 20654 ;; *************** function __doprnt *****************
 20655 ;; Defined at:
 20656 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 20657 ;; Parameters:    Size  Location     Type
 20658 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 20659 ;;		 -> sprintf@pb(4), printf@pb(4), 
 20660 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 20661 ;;		 -> STR_135(3), STR_134(5), STR_133(3), STR_132(1), 
 20662 ;;		 -> STR_131(5), STR_130(7), STR_129(1), STR_128(5), 
 20663 ;;		 -> STR_127(6), STR_126(18), STR_125(19), STR_124(19), 
 20664 ;;		 -> STR_123(19), STR_122(20), STR_121(9), STR_120(7), 
 20665 ;;		 -> STR_119(8), STR_118(8), STR_117(10), STR_116(18), 
 20666 ;;		 -> STR_115(18), STR_114(18), STR_113(17), STR_112(17), 
 20667 ;;		 -> STR_111(17), STR_110(17), STR_109(20), STR_108(20), 
 20668 ;;		 -> STR_107(20), STR_104(11), STR_101(10), STR_98(9), 
 20669 ;;		 -> STR_97(10), STR_96(9), STR_95(15), STR_94(18), 
 20670 ;;		 -> STR_93(20), STR_92(10), STR_91(22), STR_90(21), 
 20671 ;;		 -> STR_89(15), STR_88(12), STR_86(3), STR_85(14), 
 20672 ;;		 -> STR_84(20), STR_83(9), STR_81(11), STR_78(14), 
 20673 ;;		 -> STR_74(14), STR_71(168), STR_69(3), STR_66(19), 
 20674 ;;		 -> STR_63(28), STR_59(15), STR_57(21), STR_53(14), 
 20675 ;;		 -> STR_50(14), STR_48(18), STR_47(6), STR_46(3), 
 20676 ;;		 -> STR_45(3), STR_39(14), STR_37(16), STR_36(608), 
 20677 ;;		 -> STR_35(45), STR_32(21), STR_29(9), STR_28(21), 
 20678 ;;		 -> STR_27(17), STR_26(20), STR_23(20), STR_20(22), 
 20679 ;;		 -> STR_17(35), STR_14(14), STR_11(14), 
 20680 ;;  ap              2   16[BANK0 ] PTR PTR void 
 20681 ;;		 -> sprintf@ap(2), printf@ap(2), 
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;  tmpval          4    0        struct .
 20684 ;;  width           2   30[BANK0 ] int 
 20685 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 20686 ;;		 -> ?_sprintf(2), ?_printf(2), STR_137(7), _doprnt@c(1), 
 20687 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 20688 ;;		 -> NULL(0), getIntJSON@expected(20), getIntJSON@attr(20), STR_106(10), 
 20689 ;;		 -> STR_105(7), STR_103(11), STR_102(8), STR_100(11), 
 20690 ;;		 -> STR_99(7), STR_87(12), STR_80(4), STR_77(4), 
 20691 ;;		 -> STR_73(4), STR_70(12), enviaDadosWifi@AUX(15), STR_68(4), 
 20692 ;;		 -> STR_65(4), STR_62(4), STR_58(4), STR_56(4), 
 20693 ;;		 -> STR_52(4), STR_49(4), wifi_MAC(12), STR_44(3), 
 20694 ;;		 -> STR_43(3), STR_42(3), STR_41(3), STR_38(3), 
 20695 ;;		 -> ipServer(20), senha(15), ssid(15), STR_34(4), 
 20696 ;;		 -> STR_31(4), line4(21), line3(21), line2(21), 
 20697 ;;		 -> line1(21), STR_25(7), STR_22(4), STR_19(4), 
 20698 ;;		 -> STR_16(4), STR_13(4), STR_10(4), STR_9(3), 
 20699 ;;		 -> STR_8(5), STR_7(7), STR_6(6), STR_5(4), 
 20700 ;;		 -> STR_4(10), STR_3(11), STR_2(12), STR_1(11), 
 20701 ;;  len             2   26[BANK0 ] unsigned int 
 20702 ;;  val             2   24[BANK0 ] unsigned int 
 20703 ;;  c               1   32[BANK0 ] char 
 20704 ;;  flag            1   23[BANK0 ] unsigned char 
 20705 ;;  prec            1   22[BANK0 ] char 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;                  2   12[BANK0 ] int 
 20708 ;; Registers used:
 20709 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20715 ;;      Params:         0       6       0       0       0       0       0       0       0
 20716 ;;      Locals:         0      11       0       0       0       0       0       0       0
 20717 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20718 ;;      Totals:         0      21       0       0       0       0       0       0       0
 20719 ;;Total ram usage:       21 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:    7
 20722 ;; This function calls:
 20723 ;;		Absolute function
 20724 ;;		___lwdiv
 20725 ;;		___lwmod
 20726 ;;		___wmul
 20727 ;;		_isdigit
 20728 ;;		_putch
 20729 ;; This function is called by:
 20730 ;;		_printf
 20731 ;;		_sprintf
 20732 ;; This function uses a non-reentrant model
 20733 ;;
 20734                           
 20735                           	psect	text41
 20736  0025E6                     __ptext41:
 20737                           	opt stack 0
 20738  0025E6                     __doprnt:
 20739                           	opt stack 22
 20740                           
 20741                           ;doprnt.c: 499: signed char c;
 20742                           ;doprnt.c: 501: int width;
 20743                           ;doprnt.c: 506: signed char prec;
 20744                           ;doprnt.c: 508: unsigned char flag;
 20745                           ;doprnt.c: 523: union {
 20746                           ;doprnt.c: 524: unsigned long vd;
 20747                           ;doprnt.c: 525: double integ;
 20748                           ;doprnt.c: 526: } tmpval;
 20749                           ;doprnt.c: 528: unsigned int val;
 20750                           ;doprnt.c: 529: unsigned len;
 20751                           ;doprnt.c: 530: const char * cp;
 20752                           ;doprnt.c: 536: while(c = *f++) {
 20753                           
 20754                           ;incstack = 0
 20755  0025E6  D2CC               	goto	u8300
 20756  0025E8                     
 20757                           ;doprnt.c: 538: if(c != '%')
 20758  0025E8  0E25               	movlw	37
 20759  0025EA  0100               	movlb	0	; () banked
 20760  0025EC  1980               	xorwf	__doprnt@c& (0+255),w,b
 20761  0025EE  B4D8               	btfsc	status,2,c
 20762  0025F0  D033               	goto	l1617
 20763                           
 20764                           ; BSR set to: 0
 20765                           ;doprnt.c: 540: {
 20766                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 20767  0025F2  EE20 F002          	lfsr	2,2
 20768  0025F6  516C               	movf	__doprnt@pb& (0+255),w,b
 20769  0025F8  26D9               	addwf	fsr2l,f,c
 20770  0025FA  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20771  0025FC  22DA               	addwfc	fsr2h,f,c
 20772  0025FE  50DE               	movf	postinc2,w,c
 20773  002600  10DE               	iorwf	postinc2,w,c
 20774  002602  B4D8               	btfsc	status,2,c
 20775  002604  D013               	goto	l1618
 20776                           
 20777                           ; BSR set to: 0
 20778  002606  EE20 F002          	lfsr	2,2
 20779  00260A  516C               	movf	__doprnt@pb& (0+255),w,b
 20780  00260C  26D9               	addwf	fsr2l,f,c
 20781  00260E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20782  002610  22DA               	addwfc	fsr2h,f,c
 20783  002612  D801               	call	u7998
 20784  002614  D2B5               	goto	u8300
 20785  002616                     u7998:
 20786  002616  0005               	push	
 20787  002618  6EFA               	movwf	pclath,c
 20788  00261A  50DE               	movf	postinc2,w,c
 20789  00261C  6EFD               	movwf	tosl,c
 20790  00261E  50DE               	movf	postinc2,w,c
 20791  002620  6EFE               	movwf	tosh,c
 20792  002622  50F8               	movf	tblptru,w,c
 20793  002624  6EFF               	movwf	tosu,c
 20794  002626  50FA               	movf	pclath,w,c
 20795  002628  5180               	movf	__doprnt@c& (0+255),w,b
 20796  00262A  0012               	return		;indir
 20797  00262C                     l1618:
 20798  00262C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20799  002630  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20800  002634  CFDE F072          	movff	postinc2,??__doprnt
 20801  002638  CFDD F073          	movff	postdec2,??__doprnt+1
 20802  00263C  C072  FFD9         	movff	??__doprnt,fsr2l
 20803  002640  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20804  002644  C080  FFDF         	movff	__doprnt@c,indf2
 20805  002648  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20806  00264C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20807  002650  2ADE               	incf	postinc2,f,c
 20808  002652  0E00               	movlw	0
 20809  002654  22DD               	addwfc	postdec2,f,c
 20810                           
 20811                           ;doprnt.c: 542: continue;
 20812  002656  D294               	goto	u8300
 20813  002658                     l1617:
 20814                           
 20815                           ;doprnt.c: 543: }
 20816                           ;doprnt.c: 546: width = 0;
 20817  002658  0E00               	movlw	0
 20818  00265A  0100               	movlb	0	; () banked
 20819  00265C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20820  00265E  0E00               	movlw	0
 20821  002660  6F7E               	movwf	__doprnt@width& (0+255),b
 20822                           
 20823                           ;doprnt.c: 548: flag = 0;
 20824  002662  0E00               	movlw	0
 20825  002664  6F77               	movwf	__doprnt@flag& (0+255),b
 20826                           
 20827                           ; BSR set to: 0
 20828                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20829  002666  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20830  00266A  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20831  00266E                     	if	0	;tblptru may be non-zero
 20832  00266E                     	endif
 20833  00266E                     	if	0	;tblptru may be non-zero
 20834  00266E                     	endif
 20835  00266E  0008               	tblrd		*
 20836  002670  50F5               	movf	tablat,w,c
 20837  002672  EC21  F02F         	call	_isdigit
 20838  002676  A0D8               	btfss	status,0,c
 20839  002678  D13C               	goto	l1623
 20840                           
 20841                           ;doprnt.c: 598: width = 0;
 20842  00267A  0E00               	movlw	0
 20843  00267C  0100               	movlb	0	; () banked
 20844  00267E  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20845  002680  0E00               	movlw	0
 20846  002682  6F7E               	movwf	__doprnt@width& (0+255),b
 20847  002684                     
 20848                           ;doprnt.c: 600: width *= 10;
 20849                           
 20850                           ; BSR set to: 0
 20851  002684  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 20852  002688  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 20853  00268C  0E00               	movlw	0
 20854  00268E  0100               	movlb	0	; () banked
 20855  002690  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20856  002692  0E0A               	movlw	10
 20857  002694  6F62               	movwf	___wmul@multiplicand& (0+255),b
 20858  002696  EC9B  F02E         	call	___wmul	;wreg free
 20859  00269A  C060  F07E         	movff	?___wmul,__doprnt@width
 20860  00269E  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 20861                           
 20862                           ;doprnt.c: 601: width += *f++ - '0';
 20863  0026A2  0ED0               	movlw	208
 20864  0026A4  0100               	movlb	0	; () banked
 20865  0026A6  6F72               	movwf	??__doprnt& (0+255),b
 20866  0026A8  0EFF               	movlw	255
 20867  0026AA  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20868  0026AC  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20869  0026B0  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20870  0026B4                     	if	0	;tblptru may be non-zero
 20871  0026B4                     	endif
 20872  0026B4                     	if	0	;tblptru may be non-zero
 20873  0026B4                     	endif
 20874  0026B4  0008               	tblrd		*
 20875  0026B6  50F5               	movf	tablat,w,c
 20876  0026B8  6F74               	movwf	(??__doprnt+2)& (0+255),b
 20877  0026BA  6B75               	clrf	(??__doprnt+3)& (0+255),b
 20878  0026BC  5172               	movf	??__doprnt& (0+255),w,b
 20879  0026BE  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 20880  0026C0  5173               	movf	(??__doprnt+1)& (0+255),w,b
 20881  0026C2  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 20882  0026C4  5174               	movf	(??__doprnt+2)& (0+255),w,b
 20883  0026C6  277E               	addwf	__doprnt@width& (0+255),f,b
 20884  0026C8  5175               	movf	(??__doprnt+3)& (0+255),w,b
 20885  0026CA  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 20886                           
 20887                           ; BSR set to: 0
 20888  0026CC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20889  0026CE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20893  0026D0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20894  0026D4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20895  0026D8                     	if	0	;tblptru may be non-zero
 20896  0026D8                     	endif
 20897  0026D8                     	if	0	;tblptru may be non-zero
 20898  0026D8                     	endif
 20899  0026D8  0008               	tblrd		*
 20900  0026DA  50F5               	movf	tablat,w,c
 20901  0026DC  EC21  F02F         	call	_isdigit
 20902  0026E0  A0D8               	btfss	status,0,c
 20903  0026E2  D107               	goto	l1623
 20904  0026E4  D7CF               	goto	l1621
 20905  0026E6                     
 20906                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20907  0026E6  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20908  0026EA  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20909  0026EE  CFDF F072          	movff	indf2,??__doprnt
 20910  0026F2  0E02               	movlw	2
 20911  0026F4  26DE               	addwf	postinc2,f,c
 20912  0026F6  CFDF F073          	movff	indf2,??__doprnt+1
 20913  0026FA  0E00               	movlw	0
 20914  0026FC  22DD               	addwfc	postdec2,f,c
 20915  0026FE  C072  FFD9         	movff	??__doprnt,fsr2l
 20916  002702  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20917  002706  CFDE F07C          	movff	postinc2,__doprnt@cp
 20918  00270A  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 20919                           
 20920                           ;doprnt.c: 740: if(!cp)
 20921  00270E  0100               	movlb	0	; () banked
 20922  002710  517C               	movf	__doprnt@cp& (0+255),w,b
 20923  002712  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 20924  002714  A4D8               	btfss	status,2,c
 20925  002716  D004               	goto	l1630
 20926                           
 20927                           ; BSR set to: 0
 20928                           ;doprnt.c: 741: cp = "(null)";
 20929  002718  0E78               	movlw	low STR_137
 20930  00271A  6F7C               	movwf	__doprnt@cp& (0+255),b
 20931  00271C  0E7F               	movlw	high STR_137
 20932  00271E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20933  002720                     l1630:
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;doprnt.c: 745: len = 0;
 20937                           
 20938                           ; BSR set to: 0
 20939  002720  0E00               	movlw	0
 20940  002722  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20941  002724  0E00               	movlw	0
 20942  002726  6F7A               	movwf	__doprnt@len& (0+255),b
 20943                           
 20944                           ;doprnt.c: 746: while(cp[len])
 20945  002728  D003               	goto	l1631
 20946  00272A                     
 20947                           ;doprnt.c: 747: len++;
 20948                           
 20949                           ; BSR set to: 0
 20950  00272A  0100               	movlb	0	; () banked
 20951  00272C  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 20952  00272E  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 20953  002730                     l1631:
 20954                           
 20955                           ; BSR set to: 0
 20956                           
 20957                           ; BSR set to: 0
 20958  002730  517A               	movf	__doprnt@len& (0+255),w,b
 20959  002732  257C               	addwf	__doprnt@cp& (0+255),w,b
 20960  002734  6F72               	movwf	??__doprnt& (0+255),b
 20961  002736  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20962  002738  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 20963  00273A  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20964  00273C  C072  FFF6         	movff	??__doprnt,tblptrl
 20965  002740  C073  FFF7         	movff	??__doprnt+1,tblptrh
 20966  002744  6AF8               	clrf	tblptru,c
 20967  002746  0E07               	movlw	(high __ramtop+-1)
 20968  002748  64F7               	cpfsgt	tblptrh,c
 20969  00274A  D003               	bra	u8037
 20970  00274C  0008               	tblrd		*
 20971  00274E  50F5               	movf	tablat,w,c
 20972  002750  D005               	bra	u8030
 20973  002752                     u8037:
 20974  002752  CFF6 FFE9          	movff	tblptrl,fsr0l
 20975  002756  CFF7 FFEA          	movff	tblptrh,fsr0h
 20976  00275A  50EF               	movf	indf0,w,c
 20977  00275C                     u8030:
 20978  00275C  0900               	iorlw	0
 20979  00275E  A4D8               	btfss	status,2,c
 20980  002760  D7E4               	goto	l1632
 20981  002762                     u8040:
 20982                           
 20983                           ;doprnt.c: 757: if(width > len)
 20984                           
 20985                           ;doprnt.c: 750: dostring:
 20986  002762  0100               	movlb	0	; () banked
 20987  002764  517E               	movf	__doprnt@width& (0+255),w,b
 20988  002766  5D7A               	subwf	__doprnt@len& (0+255),w,b
 20989  002768  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20990  00276A  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 20991  00276C  B0D8               	btfsc	status,0,c
 20992  00276E  D005               	goto	l1635
 20993                           
 20994                           ; BSR set to: 0
 20995                           ;doprnt.c: 758: width -= len;
 20996  002770  517A               	movf	__doprnt@len& (0+255),w,b
 20997  002772  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20998  002774  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20999  002776  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 21000  002778  D037               	goto	l1640
 21001  00277A                     l1635:
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;doprnt.c: 759: else
 21005                           ;doprnt.c: 760: width = 0;
 21006                           
 21007                           ; BSR set to: 0
 21008  00277A  0E00               	movlw	0
 21009  00277C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 21010  00277E  0E00               	movlw	0
 21011  002780  6F7E               	movwf	__doprnt@width& (0+255),b
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;doprnt.c: 764: while(width--)
 21015  002782  D032               	goto	l1640
 21016  002784                     l6412:
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 21020  002784  EE20 F002          	lfsr	2,2
 21021  002788  516C               	movf	__doprnt@pb& (0+255),w,b
 21022  00278A  26D9               	addwf	fsr2l,f,c
 21023  00278C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21024  00278E  22DA               	addwfc	fsr2h,f,c
 21025  002790  50DE               	movf	postinc2,w,c
 21026  002792  10DE               	iorwf	postinc2,w,c
 21027  002794  B4D8               	btfsc	status,2,c
 21028  002796  D013               	goto	l1639
 21029                           
 21030                           ; BSR set to: 0
 21031  002798  EE20 F002          	lfsr	2,2
 21032  00279C  516C               	movf	__doprnt@pb& (0+255),w,b
 21033  00279E  26D9               	addwf	fsr2l,f,c
 21034  0027A0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21035  0027A2  22DA               	addwfc	fsr2h,f,c
 21036  0027A4  D801               	call	u8078
 21037  0027A6  D020               	goto	l1640
 21038  0027A8                     u8078:
 21039  0027A8  0005               	push	
 21040  0027AA  6EFA               	movwf	pclath,c
 21041  0027AC  50DE               	movf	postinc2,w,c
 21042  0027AE  6EFD               	movwf	tosl,c
 21043  0027B0  50DE               	movf	postinc2,w,c
 21044  0027B2  6EFE               	movwf	tosh,c
 21045  0027B4  50F8               	movf	tblptru,w,c
 21046  0027B6  6EFF               	movwf	tosu,c
 21047  0027B8  50FA               	movf	pclath,w,c
 21048  0027BA  0E20               	movlw	32
 21049  0027BC  0012               	return		;indir
 21050  0027BE                     l1639:
 21051  0027BE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21052  0027C2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21053  0027C6  CFDE F072          	movff	postinc2,??__doprnt
 21054  0027CA  CFDD F073          	movff	postdec2,??__doprnt+1
 21055  0027CE  C072  FFD9         	movff	??__doprnt,fsr2l
 21056  0027D2  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21057  0027D6  0E20               	movlw	32
 21058  0027D8  6EDF               	movwf	indf2,c
 21059  0027DA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21060  0027DE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21061  0027E2  2ADE               	incf	postinc2,f,c
 21062  0027E4  0E00               	movlw	0
 21063  0027E6  22DD               	addwfc	postdec2,f,c
 21064  0027E8                     l1640:
 21065  0027E8  0100               	movlb	0	; () banked
 21066  0027EA  077E               	decf	__doprnt@width& (0+255),f,b
 21067  0027EC  A0D8               	btfss	status,0,c
 21068  0027EE  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 21069  0027F0  297E               	incf	__doprnt@width& (0+255),w,b
 21070  0027F2  E1C8               	bnz	l6412
 21071  0027F4  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 21072  0027F6  B4D8               	btfsc	status,2,c
 21073  0027F8  D058               	goto	l1645
 21074  0027FA  D7C4               	goto	l1638
 21075  0027FC                     l6422:
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 21079  0027FC  EE20 F002          	lfsr	2,2
 21080  002800  516C               	movf	__doprnt@pb& (0+255),w,b
 21081  002802  26D9               	addwf	fsr2l,f,c
 21082  002804  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21083  002806  22DA               	addwfc	fsr2h,f,c
 21084  002808  50DE               	movf	postinc2,w,c
 21085  00280A  10DE               	iorwf	postinc2,w,c
 21086  00280C  B4D8               	btfsc	status,2,c
 21087  00280E  D026               	goto	l1644
 21088                           
 21089                           ; BSR set to: 0
 21090  002810  EE20 F002          	lfsr	2,2
 21091  002814  516C               	movf	__doprnt@pb& (0+255),w,b
 21092  002816  26D9               	addwf	fsr2l,f,c
 21093  002818  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21094  00281A  22DA               	addwfc	fsr2h,f,c
 21095  00281C  D801               	call	u8108
 21096  00281E  D01A               	goto	u8109
 21097  002820                     u8108:
 21098  002820  0005               	push	
 21099  002822  6EFA               	movwf	pclath,c
 21100  002824  50DE               	movf	postinc2,w,c
 21101  002826  6EFD               	movwf	tosl,c
 21102  002828  50DE               	movf	postinc2,w,c
 21103  00282A  6EFE               	movwf	tosh,c
 21104  00282C  50F8               	movf	tblptru,w,c
 21105  00282E  6EFF               	movwf	tosu,c
 21106  002830  50FA               	movf	pclath,w,c
 21107  002832  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 21108  002836  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 21109  00283A  6AF8               	clrf	tblptru,c
 21110  00283C  0E07               	movlw	(high __ramtop+-1)
 21111  00283E  64F7               	cpfsgt	tblptrh,c
 21112  002840  D003               	bra	u8117
 21113  002842  0008               	tblrd		*
 21114  002844  50F5               	movf	tablat,w,c
 21115  002846  D005               	bra	u8110
 21116  002848                     u8117:
 21117  002848  CFF6 FFE9          	movff	tblptrl,fsr0l
 21118  00284C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21119  002850  50EF               	movf	indf0,w,c
 21120  002852                     u8110:
 21121  002852  0012               	return		;indir
 21122  002854                     u8109:
 21123  002854  0100               	movlb	0	; () banked
 21124  002856  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 21125  002858  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 21126  00285A  D027               	goto	l1645
 21127  00285C                     l1644:
 21128                           
 21129                           ; BSR set to: 0
 21130                           
 21131                           ; BSR set to: 0
 21132  00285C  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 21133  002860  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 21134  002864  6AF8               	clrf	tblptru,c
 21135  002866  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21136  00286A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21137  00286E  CFDE F072          	movff	postinc2,??__doprnt
 21138  002872  CFDD F073          	movff	postdec2,??__doprnt+1
 21139  002876  C072  FFD9         	movff	??__doprnt,fsr2l
 21140  00287A  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21141  00287E  0E07               	movlw	(high __ramtop+-1)
 21142  002880  64F7               	cpfsgt	tblptrh,c
 21143  002882  D003               	bra	u8127
 21144  002884  0008               	tblrd		*
 21145  002886  50F5               	movf	tablat,w,c
 21146  002888  D005               	bra	u8120
 21147  00288A                     u8127:
 21148  00288A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21149  00288E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21150  002892  50EF               	movf	indf0,w,c
 21151  002894                     u8120:
 21152  002894  6EDF               	movwf	indf2,c
 21153  002896  0100               	movlb	0	; () banked
 21154  002898  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 21155  00289A  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 21156                           
 21157                           ; BSR set to: 0
 21158  00289C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21159  0028A0  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21160  0028A4  2ADE               	incf	postinc2,f,c
 21161  0028A6  0E00               	movlw	0
 21162  0028A8  22DD               	addwfc	postdec2,f,c
 21163  0028AA                     l1645:
 21164                           
 21165                           ; BSR set to: 0
 21166                           
 21167                           ; BSR set to: 0
 21168                           
 21169                           ; BSR set to: 0
 21170  0028AA  077A               	decf	__doprnt@len& (0+255),f,b
 21171  0028AC  A0D8               	btfss	status,0,c
 21172  0028AE  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 21173  0028B0  297A               	incf	__doprnt@len& (0+255),w,b
 21174  0028B2  E1A4               	bnz	l6422
 21175  0028B4  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 21176  0028B6  B4D8               	btfsc	status,2,c
 21177  0028B8  D163               	goto	u8300
 21178  0028BA  D7A0               	goto	l1643
 21179  0028BC                     
 21180                           ; BSR set to: 0
 21181                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21182                           
 21183                           ; BSR set to: 0
 21184  0028BC  C070  FFD9         	movff	__doprnt@ap,fsr2l
 21185  0028C0  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 21186  0028C4  CFDF F072          	movff	indf2,??__doprnt
 21187  0028C8  0E02               	movlw	2
 21188  0028CA  26DE               	addwf	postinc2,f,c
 21189  0028CC  CFDF F073          	movff	indf2,??__doprnt+1
 21190  0028D0  0E00               	movlw	0
 21191  0028D2  22DD               	addwfc	postdec2,f,c
 21192  0028D4  C072  FFD9         	movff	??__doprnt,fsr2l
 21193  0028D8  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21194  0028DC  50DF               	movf	indf2,w,c
 21195  0028DE  6F80               	movwf	__doprnt@c& (0+255),b
 21196  0028E0                     
 21197                           ; BSR set to: 0
 21198                           ;doprnt.c: 805: cp = (char *)&c;
 21199                           
 21200                           ; BSR set to: 0
 21201  0028E0  0E80               	movlw	low __doprnt@c
 21202  0028E2  6F7C               	movwf	__doprnt@cp& (0+255),b
 21203  0028E4  0E00               	movlw	high __doprnt@c
 21204  0028E6  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;doprnt.c: 806: len = 1;
 21208  0028E8  0E00               	movlw	0
 21209  0028EA  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 21210  0028EC  0E01               	movlw	1
 21211  0028EE  6F7A               	movwf	__doprnt@len& (0+255),b
 21212                           
 21213                           ;doprnt.c: 807: goto dostring;
 21214  0028F0  D738               	goto	u8040
 21215  0028F2                     l1623:
 21216                           
 21217                           ; BSR set to: 0
 21218  0028F2  C06E  FFF6         	movff	__doprnt@f,tblptrl
 21219  0028F6  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 21220  0028FA  0100               	movlb	0	; () banked
 21221  0028FC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 21222  0028FE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 21223  002900                     	if	0	;tblptru may be non-zero
 21224  002900                     	endif
 21225  002900                     	if	0	;tblptru may be non-zero
 21226  002900                     	endif
 21227  002900  0008               	tblrd		*
 21228  002902  CFF5 F080          	movff	tablat,__doprnt@c
 21229  002906  5180               	movf	__doprnt@c& (0+255),w,b
 21230                           
 21231                           ; Switch size 1, requested type "space"
 21232                           ; Number of cases is 5, Range of values is 0 to 115
 21233                           ; switch strategies available:
 21234                           ; Name         Instructions Cycles
 21235                           ; simple_byte           16     9 (average)
 21236                           ;	Chosen strategy is simple_byte
 21237  002908  0A00               	xorlw	0	; case 0
 21238  00290A  B4D8               	btfsc	status,2,c
 21239  00290C  D146               	goto	u8310
 21240  00290E  0A63               	xorlw	99	; case 99
 21241  002910  B4D8               	btfsc	status,2,c
 21242  002912  D7D4               	goto	l1647
 21243  002914  0A07               	xorlw	7	; case 100
 21244  002916  B4D8               	btfsc	status,2,c
 21245  002918  D007               	goto	l1628
 21246  00291A  0A0D               	xorlw	13	; case 105
 21247  00291C  B4D8               	btfsc	status,2,c
 21248  00291E  D004               	goto	l1628
 21249  002920  0A1A               	xorlw	26	; case 115
 21250  002922  B4D8               	btfsc	status,2,c
 21251  002924  D6E0               	goto	l1629
 21252  002926  D7DC               	goto	l1648
 21253  002928                     l1628:
 21254                           
 21255                           ;doprnt.c: 1253: {
 21256                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 21257                           
 21258                           ; BSR set to: 0
 21259  002928  C070  FFD9         	movff	__doprnt@ap,fsr2l
 21260  00292C  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 21261  002930  CFDF F072          	movff	indf2,??__doprnt
 21262  002934  0E02               	movlw	2
 21263  002936  26DE               	addwf	postinc2,f,c
 21264  002938  CFDF F073          	movff	indf2,??__doprnt+1
 21265  00293C  0E00               	movlw	0
 21266  00293E  22DD               	addwfc	postdec2,f,c
 21267  002940  C072  FFD9         	movff	??__doprnt,fsr2l
 21268  002944  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21269  002948  CFDE F078          	movff	postinc2,__doprnt@val
 21270  00294C  CFDD F079          	movff	postdec2,__doprnt@val+1
 21271                           
 21272                           ;doprnt.c: 1261: if((int)val < 0) {
 21273  002950  0100               	movlb	0	; () banked
 21274  002952  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 21275  002954  D006               	goto	l1649
 21276                           
 21277                           ; BSR set to: 0
 21278                           ;doprnt.c: 1262: flag |= 0x03;
 21279  002956  0E03               	movlw	3
 21280  002958  1377               	iorwf	__doprnt@flag& (0+255),f,b
 21281                           
 21282                           ; BSR set to: 0
 21283                           ;doprnt.c: 1263: val = -val;
 21284  00295A  6D78               	negf	__doprnt@val& (0+255),b
 21285  00295C  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 21286  00295E  B0D8               	btfsc	status,0,c
 21287  002960  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 21288  002962                     l1649:
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;doprnt.c: 1264: }
 21292                           ;doprnt.c: 1266: }
 21293                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21294                           
 21295                           ; BSR set to: 0
 21296  002962  0E01               	movlw	1
 21297  002964  6F80               	movwf	__doprnt@c& (0+255),b
 21298  002966                     l6456:
 21299                           
 21300                           ; BSR set to: 0
 21301  002966  0E05               	movlw	5
 21302  002968  1980               	xorwf	__doprnt@c& (0+255),w,b
 21303  00296A  B4D8               	btfsc	status,2,c
 21304  00296C  D012               	goto	u8170
 21305                           
 21306                           ; BSR set to: 0
 21307                           ;doprnt.c: 1306: if(val < dpowers[c])
 21308                           
 21309                           ; BSR set to: 0
 21310                           
 21311                           ; BSR set to: 0
 21312  00296E  5180               	movf	__doprnt@c& (0+255),w,b
 21313  002970  0D02               	mullw	2
 21314  002972  0E47               	movlw	low _dpowers
 21315  002974  24F3               	addwf	prodl,w,c
 21316  002976  6EF6               	movwf	tblptrl,c
 21317  002978  0E78               	movlw	high _dpowers
 21318  00297A  20F4               	addwfc	prodh,w,c
 21319  00297C  6EF7               	movwf	tblptrh,c
 21320  00297E                     	if	0	;There are less than 3 active tblptr bytes
 21321  00297E                     	endif
 21322  00297E  0009               	tblrd		*+
 21323  002980  50F5               	movf	tablat,w,c
 21324  002982  5D78               	subwf	__doprnt@val& (0+255),w,b
 21325  002984  0009               	tblrd		*+
 21326  002986  50F5               	movf	tablat,w,c
 21327  002988  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 21328  00298A  A0D8               	btfss	status,0,c
 21329  00298C  D002               	goto	u8170
 21330                           
 21331                           ; BSR set to: 0
 21332                           
 21333                           ; BSR set to: 0
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;doprnt.c: 1307: break;
 21337  00298E  2B80               	incf	__doprnt@c& (0+255),f,b
 21338  002990  D7EA               	goto	l6456
 21339  002992                     u8170:
 21340                           
 21341                           ; BSR set to: 0
 21342                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21343                           
 21344                           ; BSR set to: 0
 21345  002992  517E               	movf	__doprnt@width& (0+255),w,b
 21346  002994  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 21347  002996  B4D8               	btfsc	status,2,c
 21348  002998  D009               	goto	l1653
 21349                           
 21350                           ; BSR set to: 0
 21351  00299A  C077  F072         	movff	__doprnt@flag,??__doprnt
 21352  00299E  0E03               	movlw	3
 21353  0029A0  1772               	andwf	??__doprnt& (0+255),f,b
 21354  0029A2  B4D8               	btfsc	status,2,c
 21355  0029A4  D003               	goto	l1653
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;doprnt.c: 1346: width--;
 21359  0029A6  077E               	decf	__doprnt@width& (0+255),f,b
 21360  0029A8  A0D8               	btfss	status,0,c
 21361  0029AA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 21362  0029AC                     l1653:
 21363                           
 21364                           ; BSR set to: 0
 21365                           ;doprnt.c: 1381: if(width > c)
 21366                           
 21367                           ; BSR set to: 0
 21368  0029AC  0E80               	movlw	128
 21369  0029AE  BF80               	btfsc	__doprnt@c& (0+255),7,b
 21370  0029B0  0E7F               	movlw	127
 21371  0029B2  6F72               	movwf	??__doprnt& (0+255),b
 21372  0029B4  517E               	movf	__doprnt@width& (0+255),w,b
 21373  0029B6  5D80               	subwf	__doprnt@c& (0+255),w,b
 21374  0029B8  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 21375  0029BA  0A80               	xorlw	128
 21376  0029BC  5972               	subwfb	??__doprnt& (0+255),w,b
 21377  0029BE  B0D8               	btfsc	status,0,c
 21378  0029C0  D007               	goto	l1654
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;doprnt.c: 1382: width -= c;
 21382  0029C2  5180               	movf	__doprnt@c& (0+255),w,b
 21383  0029C4  5F7E               	subwf	__doprnt@width& (0+255),f,b
 21384  0029C6  0E00               	movlw	0
 21385  0029C8  BF80               	btfsc	__doprnt@c& (0+255),7,b
 21386  0029CA  0EFF               	movlw	255
 21387  0029CC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 21388  0029CE  D004               	goto	l1655
 21389  0029D0                     l1654:
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;doprnt.c: 1383: else
 21393                           ;doprnt.c: 1384: width = 0;
 21394                           
 21395                           ; BSR set to: 0
 21396  0029D0  0E00               	movlw	0
 21397  0029D2  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 21398  0029D4  0E00               	movlw	0
 21399  0029D6  6F7E               	movwf	__doprnt@width& (0+255),b
 21400  0029D8                     l1655:
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;doprnt.c: 1422: {
 21404                           ;doprnt.c: 1424: if(width
 21405                           ;doprnt.c: 1428: )
 21406                           
 21407                           ; BSR set to: 0
 21408  0029D8  517E               	movf	__doprnt@width& (0+255),w,b
 21409  0029DA  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 21410  0029DC  B4D8               	btfsc	status,2,c
 21411  0029DE  D03A               	goto	u8240
 21412  0029E0                     u8210:
 21413                           
 21414                           ; BSR set to: 0
 21415                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 21416                           
 21417                           ; BSR set to: 0
 21418                           
 21419                           ;doprnt.c: 1429: do
 21420  0029E0  EE20 F002          	lfsr	2,2
 21421  0029E4  516C               	movf	__doprnt@pb& (0+255),w,b
 21422  0029E6  26D9               	addwf	fsr2l,f,c
 21423  0029E8  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21424  0029EA  22DA               	addwfc	fsr2h,f,c
 21425  0029EC  50DE               	movf	postinc2,w,c
 21426  0029EE  10DE               	iorwf	postinc2,w,c
 21427  0029F0  B4D8               	btfsc	status,2,c
 21428  0029F2  D013               	goto	l1658
 21429                           
 21430                           ; BSR set to: 0
 21431  0029F4  EE20 F002          	lfsr	2,2
 21432  0029F8  516C               	movf	__doprnt@pb& (0+255),w,b
 21433  0029FA  26D9               	addwf	fsr2l,f,c
 21434  0029FC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21435  0029FE  22DA               	addwfc	fsr2h,f,c
 21436  002A00  D801               	call	u8238
 21437  002A02  D020               	goto	l1659
 21438  002A04                     u8238:
 21439  002A04  0005               	push	
 21440  002A06  6EFA               	movwf	pclath,c
 21441  002A08  50DE               	movf	postinc2,w,c
 21442  002A0A  6EFD               	movwf	tosl,c
 21443  002A0C  50DE               	movf	postinc2,w,c
 21444  002A0E  6EFE               	movwf	tosh,c
 21445  002A10  50F8               	movf	tblptru,w,c
 21446  002A12  6EFF               	movwf	tosu,c
 21447  002A14  50FA               	movf	pclath,w,c
 21448  002A16  0E20               	movlw	32
 21449  002A18  0012               	return		;indir
 21450  002A1A                     l1658:
 21451  002A1A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21452  002A1E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21453  002A22  CFDE F072          	movff	postinc2,??__doprnt
 21454  002A26  CFDD F073          	movff	postdec2,??__doprnt+1
 21455  002A2A  C072  FFD9         	movff	??__doprnt,fsr2l
 21456  002A2E  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21457  002A32  0E20               	movlw	32
 21458  002A34  6EDF               	movwf	indf2,c
 21459  002A36  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21460  002A3A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21461  002A3E  2ADE               	incf	postinc2,f,c
 21462  002A40  0E00               	movlw	0
 21463  002A42  22DD               	addwfc	postdec2,f,c
 21464  002A44                     l1659:
 21465                           
 21466                           ;doprnt.c: 1431: while(--width);
 21467  002A44  0100               	movlb	0	; () banked
 21468  002A46  077E               	decf	__doprnt@width& (0+255),f,b
 21469  002A48  A0D8               	btfss	status,0,c
 21470  002A4A  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 21471  002A4C  517E               	movf	__doprnt@width& (0+255),w,b
 21472  002A4E  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 21473  002A50  A4D8               	btfss	status,2,c
 21474  002A52  D7C6               	goto	u8210
 21475  002A54                     u8240:
 21476                           
 21477                           ; BSR set to: 0
 21478                           ;doprnt.c: 1438: if(flag & 0x03)
 21479                           
 21480                           ; BSR set to: 0
 21481                           
 21482                           ; BSR set to: 0
 21483  002A54  C077  F072         	movff	__doprnt@flag,??__doprnt
 21484  002A58  0E03               	movlw	3
 21485  002A5A  1772               	andwf	??__doprnt& (0+255),f,b
 21486  002A5C  B4D8               	btfsc	status,2,c
 21487  002A5E  D032               	goto	l1663
 21488                           
 21489                           ; BSR set to: 0
 21490                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 21491  002A60  EE20 F002          	lfsr	2,2
 21492  002A64  516C               	movf	__doprnt@pb& (0+255),w,b
 21493  002A66  26D9               	addwf	fsr2l,f,c
 21494  002A68  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21495  002A6A  22DA               	addwfc	fsr2h,f,c
 21496  002A6C  50DE               	movf	postinc2,w,c
 21497  002A6E  10DE               	iorwf	postinc2,w,c
 21498  002A70  B4D8               	btfsc	status,2,c
 21499  002A72  D013               	goto	l1662
 21500                           
 21501                           ; BSR set to: 0
 21502  002A74  EE20 F002          	lfsr	2,2
 21503  002A78  516C               	movf	__doprnt@pb& (0+255),w,b
 21504  002A7A  26D9               	addwf	fsr2l,f,c
 21505  002A7C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21506  002A7E  22DA               	addwfc	fsr2h,f,c
 21507  002A80  D801               	call	u8278
 21508  002A82  D020               	goto	l1663
 21509  002A84                     u8278:
 21510  002A84  0005               	push	
 21511  002A86  6EFA               	movwf	pclath,c
 21512  002A88  50DE               	movf	postinc2,w,c
 21513  002A8A  6EFD               	movwf	tosl,c
 21514  002A8C  50DE               	movf	postinc2,w,c
 21515  002A8E  6EFE               	movwf	tosh,c
 21516  002A90  50F8               	movf	tblptru,w,c
 21517  002A92  6EFF               	movwf	tosu,c
 21518  002A94  50FA               	movf	pclath,w,c
 21519  002A96  0E2D               	movlw	45
 21520  002A98  0012               	return		;indir
 21521  002A9A                     l1662:
 21522  002A9A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21523  002A9E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21524  002AA2  CFDE F072          	movff	postinc2,??__doprnt
 21525  002AA6  CFDD F073          	movff	postdec2,??__doprnt+1
 21526  002AAA  C072  FFD9         	movff	??__doprnt,fsr2l
 21527  002AAE  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21528  002AB2  0E2D               	movlw	45
 21529  002AB4  6EDF               	movwf	indf2,c
 21530  002AB6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21531  002ABA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21532  002ABE  2ADE               	incf	postinc2,f,c
 21533  002AC0  0E00               	movlw	0
 21534  002AC2  22DD               	addwfc	postdec2,f,c
 21535  002AC4                     l1663:
 21536                           
 21537                           ;doprnt.c: 1469: }
 21538                           ;doprnt.c: 1472: prec = c;
 21539  002AC4  C080  F076         	movff	__doprnt@c,__doprnt@prec
 21540                           
 21541                           ;doprnt.c: 1474: while(prec--) {
 21542  002AC8  D056               	goto	l1667
 21543  002ACA                     
 21544                           ;doprnt.c: 1478: {
 21545                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21546  002ACA  0100               	movlb	0	; () banked
 21547  002ACC  5176               	movf	__doprnt@prec& (0+255),w,b
 21548  002ACE  0D02               	mullw	2
 21549  002AD0  0E47               	movlw	low _dpowers
 21550  002AD2  24F3               	addwf	prodl,w,c
 21551  002AD4  6EF6               	movwf	tblptrl,c
 21552  002AD6  0E78               	movlw	high _dpowers
 21553  002AD8  20F4               	addwfc	prodh,w,c
 21554  002ADA  6EF7               	movwf	tblptrh,c
 21555  002ADC                     	if	0	;There are less than 3 active tblptr bytes
 21556  002ADC                     	endif
 21557  002ADC  0009               	tblrd		*+
 21558  002ADE  CFF5 F062          	movff	tablat,___lwdiv@divisor
 21559  002AE2  000A               	tblrd		*-
 21560  002AE4  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 21561  002AE8  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 21562  002AEC  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 21563  002AF0  EC68  F02C         	call	___lwdiv
 21564  002AF4  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 21565  002AF8  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 21566  002AFC  0E00               	movlw	0
 21567  002AFE  0100               	movlb	0	; () banked
 21568  002B00  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 21569  002B02  0E0A               	movlw	10
 21570  002B04  6F69               	movwf	___lwmod@divisor& (0+255),b
 21571  002B06  EC2A  F02D         	call	___lwmod	;wreg free
 21572  002B0A  0100               	movlb	0	; () banked
 21573  002B0C  5167               	movf	?___lwmod& (0+255),w,b
 21574  002B0E  0F30               	addlw	48
 21575  002B10  6F80               	movwf	__doprnt@c& (0+255),b
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;doprnt.c: 1523: }
 21579                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 21580  002B12  EE20 F002          	lfsr	2,2
 21581  002B16  516C               	movf	__doprnt@pb& (0+255),w,b
 21582  002B18  26D9               	addwf	fsr2l,f,c
 21583  002B1A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21584  002B1C  22DA               	addwfc	fsr2h,f,c
 21585  002B1E  50DE               	movf	postinc2,w,c
 21586  002B20  10DE               	iorwf	postinc2,w,c
 21587  002B22  B4D8               	btfsc	status,2,c
 21588  002B24  D013               	goto	l1666
 21589                           
 21590                           ; BSR set to: 0
 21591  002B26  EE20 F002          	lfsr	2,2
 21592  002B2A  516C               	movf	__doprnt@pb& (0+255),w,b
 21593  002B2C  26D9               	addwf	fsr2l,f,c
 21594  002B2E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21595  002B30  22DA               	addwfc	fsr2h,f,c
 21596  002B32  D801               	call	u8298
 21597  002B34  D020               	goto	l1667
 21598  002B36                     u8298:
 21599  002B36  0005               	push	
 21600  002B38  6EFA               	movwf	pclath,c
 21601  002B3A  50DE               	movf	postinc2,w,c
 21602  002B3C  6EFD               	movwf	tosl,c
 21603  002B3E  50DE               	movf	postinc2,w,c
 21604  002B40  6EFE               	movwf	tosh,c
 21605  002B42  50F8               	movf	tblptru,w,c
 21606  002B44  6EFF               	movwf	tosu,c
 21607  002B46  50FA               	movf	pclath,w,c
 21608  002B48  5180               	movf	__doprnt@c& (0+255),w,b
 21609  002B4A  0012               	return		;indir
 21610  002B4C                     l1666:
 21611  002B4C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21612  002B50  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21613  002B54  CFDE F072          	movff	postinc2,??__doprnt
 21614  002B58  CFDD F073          	movff	postdec2,??__doprnt+1
 21615  002B5C  C072  FFD9         	movff	??__doprnt,fsr2l
 21616  002B60  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21617  002B64  C080  FFDF         	movff	__doprnt@c,indf2
 21618  002B68  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21619  002B6C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21620  002B70  2ADE               	incf	postinc2,f,c
 21621  002B72  0E00               	movlw	0
 21622  002B74  22DD               	addwfc	postdec2,f,c
 21623  002B76                     l1667:
 21624  002B76  0100               	movlb	0	; () banked
 21625  002B78  0776               	decf	__doprnt@prec& (0+255),f,b
 21626  002B7A  2976               	incf	__doprnt@prec& (0+255),w,b
 21627  002B7C  A4D8               	btfss	status,2,c
 21628  002B7E  D7A5               	goto	l1665
 21629  002B80                     u8300:
 21630                           
 21631                           ; BSR set to: 0
 21632                           
 21633                           ; BSR set to: 0
 21634  002B80  C06E  FFF6         	movff	__doprnt@f,tblptrl
 21635  002B84  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 21636  002B88  0100               	movlb	0	; () banked
 21637  002B8A  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 21638  002B8C  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 21639  002B8E                     	if	0	;tblptru may be non-zero
 21640  002B8E                     	endif
 21641  002B8E                     	if	0	;tblptru may be non-zero
 21642  002B8E                     	endif
 21643  002B8E  0008               	tblrd		*
 21644  002B90  CFF5 F080          	movff	tablat,__doprnt@c
 21645  002B94  5180               	movf	__doprnt@c& (0+255),w,b
 21646  002B96  A4D8               	btfss	status,2,c
 21647  002B98  D527               	goto	l1616
 21648  002B9A                     u8310:
 21649                           
 21650                           ;doprnt.c: 1540: return 0;
 21651                           
 21652                           ; BSR set to: 0
 21653                           
 21654                           ;doprnt.c: 1525: }
 21655                           ;doprnt.c: 1533: }
 21656                           ;doprnt.c: 1535: alldone:
 21657                           
 21658                           ; BSR set to: 0
 21659  002B9A  0E00               	movlw	0
 21660  002B9C  0100               	movlb	0	; () banked
 21661  002B9E  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 21662  002BA0  0E00               	movlw	0
 21663  002BA2  6F6C               	movwf	?__doprnt& (0+255),b
 21664  002BA4  0012               	return	
 21665  002BA6                     __end_of__doprnt:
 21666                           	opt stack 0
 21667                           tosu	equ	0xFFF
 21668                           tosh	equ	0xFFE
 21669                           tosl	equ	0xFFD
 21670                           pclath	equ	0xFFA
 21671                           tblptru	equ	0xFF8
 21672                           tblptrh	equ	0xFF7
 21673                           tblptrl	equ	0xFF6
 21674                           tablat	equ	0xFF5
 21675                           prodh	equ	0xFF4
 21676                           prodl	equ	0xFF3
 21677                           intcon	equ	0xFF2
 21678                           intcon2	equ	0xFF1
 21679                           intcon3	equ	0xFF0
 21680                           indf0	equ	0xFEF
 21681                           postinc0	equ	0xFEE
 21682                           fsr0h	equ	0xFEA
 21683                           fsr0l	equ	0xFE9
 21684                           wreg	equ	0xFE8
 21685                           indf1	equ	0xFE7
 21686                           postinc1	equ	0xFE6
 21687                           postdec1	equ	0xFE5
 21688                           plusw1	equ	0xFE3
 21689                           fsr1h	equ	0xFE2
 21690                           fsr1l	equ	0xFE1
 21691                           indf2	equ	0xFDF
 21692                           postinc2	equ	0xFDE
 21693                           postdec2	equ	0xFDD
 21694                           plusw2	equ	0xFDB
 21695                           fsr2h	equ	0xFDA
 21696                           fsr2l	equ	0xFD9
 21697                           status	equ	0xFD8
 21698                           
 21699 ;; *************** function _putch *****************
 21700 ;; Defined at:
 21701 ;;		line 35 in file "src/USART.h"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;  c               1    wreg     unsigned char 
 21704 ;; Auto vars:     Size  Location     Type
 21705 ;;  c               1    0[BANK0 ] unsigned char 
 21706 ;; Return value:  Size  Location     Type
 21707 ;;                  1    wreg      void 
 21708 ;; Registers used:
 21709 ;;		wreg
 21710 ;; Tracked objects:
 21711 ;;		On entry : 0/0
 21712 ;;		On exit  : 0/0
 21713 ;;		Unchanged: 0/0
 21714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21715 ;;      Params:         0       0       0       0       0       0       0       0       0
 21716 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21717 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21718 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21719 ;;Total ram usage:        1 bytes
 21720 ;; Hardware stack levels used:    1
 21721 ;; Hardware stack levels required when called:    6
 21722 ;; This function calls:
 21723 ;;		Nothing
 21724 ;; This function is called by:
 21725 ;;		_printf
 21726 ;;		__doprnt
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text42
 21731  005EE0                     __ptext42:
 21732                           	opt stack 0
 21733  005EE0                     _putch:
 21734                           	opt stack 22
 21735                           
 21736                           ; BSR set to: 0
 21737                           ;incstack = 0
 21738                           ;putch@c stored from wreg
 21739  005EE0  0100               	movlb	0	; () banked
 21740  005EE2  6F60               	movwf	putch@c& (0+255),b
 21741  005EE4                     
 21742                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 21743  005EE4  A2AC               	btfss	4012,1,c	;volatile
 21744  005EE6  D7FE               	goto	l6242
 21745                           
 21746                           ;USART.h: 38: TXREG = c;
 21747  005EE8  C060  FFAD         	movff	putch@c,4013	;volatile
 21748  005EEC  0012               	return		;funcret
 21749  005EEE                     __end_of_putch:
 21750                           	opt stack 0
 21751                           tosu	equ	0xFFF
 21752                           tosh	equ	0xFFE
 21753                           tosl	equ	0xFFD
 21754                           pclath	equ	0xFFA
 21755                           tblptru	equ	0xFF8
 21756                           tblptrh	equ	0xFF7
 21757                           tblptrl	equ	0xFF6
 21758                           tablat	equ	0xFF5
 21759                           prodh	equ	0xFF4
 21760                           prodl	equ	0xFF3
 21761                           intcon	equ	0xFF2
 21762                           intcon2	equ	0xFF1
 21763                           intcon3	equ	0xFF0
 21764                           indf0	equ	0xFEF
 21765                           postinc0	equ	0xFEE
 21766                           fsr0h	equ	0xFEA
 21767                           fsr0l	equ	0xFE9
 21768                           wreg	equ	0xFE8
 21769                           indf1	equ	0xFE7
 21770                           postinc1	equ	0xFE6
 21771                           postdec1	equ	0xFE5
 21772                           plusw1	equ	0xFE3
 21773                           fsr1h	equ	0xFE2
 21774                           fsr1l	equ	0xFE1
 21775                           indf2	equ	0xFDF
 21776                           postinc2	equ	0xFDE
 21777                           postdec2	equ	0xFDD
 21778                           plusw2	equ	0xFDB
 21779                           fsr2h	equ	0xFDA
 21780                           fsr2l	equ	0xFD9
 21781                           status	equ	0xFD8
 21782                           
 21783 ;; *************** function ___lwmod *****************
 21784 ;; Defined at:
 21785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  dividend        2    7[BANK0 ] unsigned int 
 21788 ;;  divisor         2    9[BANK0 ] unsigned int 
 21789 ;; Auto vars:     Size  Location     Type
 21790 ;;  counter         1   11[BANK0 ] unsigned char 
 21791 ;; Return value:  Size  Location     Type
 21792 ;;                  2    7[BANK0 ] unsigned int 
 21793 ;; Registers used:
 21794 ;;		wreg, status,2, status,0
 21795 ;; Tracked objects:
 21796 ;;		On entry : 0/0
 21797 ;;		On exit  : 0/0
 21798 ;;		Unchanged: 0/0
 21799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21800 ;;      Params:         0       4       0       0       0       0       0       0       0
 21801 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21803 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21804 ;;Total ram usage:        5 bytes
 21805 ;; Hardware stack levels used:    1
 21806 ;; Hardware stack levels required when called:    6
 21807 ;; This function calls:
 21808 ;;		Nothing
 21809 ;; This function is called by:
 21810 ;;		__doprnt
 21811 ;; This function uses a non-reentrant model
 21812 ;;
 21813                           
 21814                           	psect	text43
 21815  005A54                     __ptext43:
 21816                           	opt stack 0
 21817  005A54                     ___lwmod:
 21818                           	opt stack 22
 21819                           
 21820                           ;incstack = 0
 21821  005A54  0100               	movlb	0	; () banked
 21822  005A56  5169               	movf	___lwmod@divisor& (0+255),w,b
 21823  005A58  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21824  005A5A  B4D8               	btfsc	status,2,c
 21825  005A5C  D018               	goto	l2109
 21826                           
 21827                           ; BSR set to: 0
 21828  005A5E  0E01               	movlw	1
 21829  005A60  6F6B               	movwf	___lwmod@counter& (0+255),b
 21830  005A62  D004               	goto	l2104
 21831  005A64                     
 21832                           ; BSR set to: 0
 21833                           
 21834                           ; BSR set to: 0
 21835  005A64  90D8               	bcf	status,0,c
 21836  005A66  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 21837  005A68  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21838  005A6A  2B6B               	incf	___lwmod@counter& (0+255),f,b
 21839  005A6C                     l2104:
 21840                           
 21841                           ; BSR set to: 0
 21842                           
 21843                           ; BSR set to: 0
 21844  005A6C  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21845  005A6E  D7FA               	goto	l2105
 21846  005A70                     u7900:
 21847                           
 21848                           ; BSR set to: 0
 21849                           
 21850                           ; BSR set to: 0
 21851                           
 21852                           ; BSR set to: 0
 21853  005A70  5169               	movf	___lwmod@divisor& (0+255),w,b
 21854  005A72  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 21855  005A74  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21856  005A76  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21857  005A78  A0D8               	btfss	status,0,c
 21858  005A7A  D004               	goto	l2108
 21859                           
 21860                           ; BSR set to: 0
 21861  005A7C  5169               	movf	___lwmod@divisor& (0+255),w,b
 21862  005A7E  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 21863  005A80  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21864  005A82  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21865  005A84                     l2108:
 21866                           
 21867                           ; BSR set to: 0
 21868                           
 21869                           ; BSR set to: 0
 21870  005A84  90D8               	bcf	status,0,c
 21871  005A86  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21872  005A88  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 21873                           
 21874                           ; BSR set to: 0
 21875  005A8A  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 21876  005A8C  D7F1               	goto	u7900
 21877  005A8E                     l2109:
 21878                           
 21879                           ; BSR set to: 0
 21880                           
 21881                           ; BSR set to: 0
 21882  005A8E  C067  F067         	movff	___lwmod@dividend,?___lwmod
 21883  005A92  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 21884                           
 21885                           ; BSR set to: 0
 21886  005A96  0012               	return		;funcret
 21887  005A98                     __end_of___lwmod:
 21888                           	opt stack 0
 21889                           tosu	equ	0xFFF
 21890                           tosh	equ	0xFFE
 21891                           tosl	equ	0xFFD
 21892                           pclath	equ	0xFFA
 21893                           tblptru	equ	0xFF8
 21894                           tblptrh	equ	0xFF7
 21895                           tblptrl	equ	0xFF6
 21896                           tablat	equ	0xFF5
 21897                           prodh	equ	0xFF4
 21898                           prodl	equ	0xFF3
 21899                           intcon	equ	0xFF2
 21900                           intcon2	equ	0xFF1
 21901                           intcon3	equ	0xFF0
 21902                           indf0	equ	0xFEF
 21903                           postinc0	equ	0xFEE
 21904                           fsr0h	equ	0xFEA
 21905                           fsr0l	equ	0xFE9
 21906                           wreg	equ	0xFE8
 21907                           indf1	equ	0xFE7
 21908                           postinc1	equ	0xFE6
 21909                           postdec1	equ	0xFE5
 21910                           plusw1	equ	0xFE3
 21911                           fsr1h	equ	0xFE2
 21912                           fsr1l	equ	0xFE1
 21913                           indf2	equ	0xFDF
 21914                           postinc2	equ	0xFDE
 21915                           postdec2	equ	0xFDD
 21916                           plusw2	equ	0xFDB
 21917                           fsr2h	equ	0xFDA
 21918                           fsr2l	equ	0xFD9
 21919                           status	equ	0xFD8
 21920                           
 21921 ;; *************** function ___lwdiv *****************
 21922 ;; Defined at:
 21923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 21924 ;; Parameters:    Size  Location     Type
 21925 ;;  dividend        2    0[BANK0 ] unsigned int 
 21926 ;;  divisor         2    2[BANK0 ] unsigned int 
 21927 ;; Auto vars:     Size  Location     Type
 21928 ;;  quotient        2    4[BANK0 ] unsigned int 
 21929 ;;  counter         1    6[BANK0 ] unsigned char 
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  2    0[BANK0 ] unsigned int 
 21932 ;; Registers used:
 21933 ;;		wreg, status,2, status,0
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21939 ;;      Params:         0       4       0       0       0       0       0       0       0
 21940 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21941 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21942 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21943 ;;Total ram usage:        7 bytes
 21944 ;; Hardware stack levels used:    1
 21945 ;; Hardware stack levels required when called:    6
 21946 ;; This function calls:
 21947 ;;		Nothing
 21948 ;; This function is called by:
 21949 ;;		__doprnt
 21950 ;; This function uses a non-reentrant model
 21951 ;;
 21952                           
 21953                           	psect	text44
 21954  0058D0                     __ptext44:
 21955                           	opt stack 0
 21956  0058D0                     ___lwdiv:
 21957                           	opt stack 22
 21958                           
 21959                           ; BSR set to: 0
 21960                           ;incstack = 0
 21961  0058D0  0E00               	movlw	0
 21962  0058D2  0100               	movlb	0	; () banked
 21963  0058D4  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21964  0058D6  0E00               	movlw	0
 21965  0058D8  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21966                           
 21967                           ; BSR set to: 0
 21968  0058DA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21969  0058DC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21970  0058DE  B4D8               	btfsc	status,2,c
 21971  0058E0  D01C               	goto	l2099
 21972                           
 21973                           ; BSR set to: 0
 21974  0058E2  0E01               	movlw	1
 21975  0058E4  6F66               	movwf	___lwdiv@counter& (0+255),b
 21976  0058E6  D004               	goto	l2094
 21977  0058E8                     
 21978                           ; BSR set to: 0
 21979                           
 21980                           ; BSR set to: 0
 21981  0058E8  90D8               	bcf	status,0,c
 21982  0058EA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21983  0058EC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21984  0058EE  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21985  0058F0                     l2094:
 21986                           
 21987                           ; BSR set to: 0
 21988                           
 21989                           ; BSR set to: 0
 21990  0058F0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21991  0058F2  D7FA               	goto	l2095
 21992  0058F4                     u7870:
 21993                           
 21994                           ; BSR set to: 0
 21995                           
 21996                           ; BSR set to: 0
 21997                           
 21998                           ; BSR set to: 0
 21999  0058F4  90D8               	bcf	status,0,c
 22000  0058F6  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 22001  0058F8  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 22002                           
 22003                           ; BSR set to: 0
 22004  0058FA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22005  0058FC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 22006  0058FE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22007  005900  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 22008  005902  A0D8               	btfss	status,0,c
 22009  005904  D005               	goto	l2098
 22010                           
 22011                           ; BSR set to: 0
 22012  005906  5162               	movf	___lwdiv@divisor& (0+255),w,b
 22013  005908  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 22014  00590A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 22015  00590C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 22016                           
 22017                           ; BSR set to: 0
 22018  00590E  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 22019  005910                     l2098:
 22020                           
 22021                           ; BSR set to: 0
 22022                           
 22023                           ; BSR set to: 0
 22024  005910  90D8               	bcf	status,0,c
 22025  005912  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 22026  005914  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 22027                           
 22028                           ; BSR set to: 0
 22029  005916  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 22030  005918  D7ED               	goto	u7870
 22031  00591A                     l2099:
 22032                           
 22033                           ; BSR set to: 0
 22034                           
 22035                           ; BSR set to: 0
 22036  00591A  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 22037  00591E  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 22038                           
 22039                           ; BSR set to: 0
 22040  005922  0012               	return		;funcret
 22041  005924                     __end_of___lwdiv:
 22042                           	opt stack 0
 22043                           tosu	equ	0xFFF
 22044                           tosh	equ	0xFFE
 22045                           tosl	equ	0xFFD
 22046                           pclath	equ	0xFFA
 22047                           tblptru	equ	0xFF8
 22048                           tblptrh	equ	0xFF7
 22049                           tblptrl	equ	0xFF6
 22050                           tablat	equ	0xFF5
 22051                           prodh	equ	0xFF4
 22052                           prodl	equ	0xFF3
 22053                           intcon	equ	0xFF2
 22054                           intcon2	equ	0xFF1
 22055                           intcon3	equ	0xFF0
 22056                           indf0	equ	0xFEF
 22057                           postinc0	equ	0xFEE
 22058                           fsr0h	equ	0xFEA
 22059                           fsr0l	equ	0xFE9
 22060                           wreg	equ	0xFE8
 22061                           indf1	equ	0xFE7
 22062                           postinc1	equ	0xFE6
 22063                           postdec1	equ	0xFE5
 22064                           plusw1	equ	0xFE3
 22065                           fsr1h	equ	0xFE2
 22066                           fsr1l	equ	0xFE1
 22067                           indf2	equ	0xFDF
 22068                           postinc2	equ	0xFDE
 22069                           postdec2	equ	0xFDD
 22070                           plusw2	equ	0xFDB
 22071                           fsr2h	equ	0xFDA
 22072                           fsr2l	equ	0xFD9
 22073                           status	equ	0xFD8
 22074                           
 22075 ;; *************** function _atoi *****************
 22076 ;; Defined at:
 22077 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\atoi.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 22080 ;;		 -> getIntJSON@aux(10), 
 22081 ;; Auto vars:     Size  Location     Type
 22082 ;;  a               2   11[BANK0 ] int 
 22083 ;;  sign            1   10[BANK0 ] unsigned char 
 22084 ;; Return value:  Size  Location     Type
 22085 ;;                  2    6[BANK0 ] int 
 22086 ;; Registers used:
 22087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22088 ;; Tracked objects:
 22089 ;;		On entry : 0/0
 22090 ;;		On exit  : 0/0
 22091 ;;		Unchanged: 0/0
 22092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22093 ;;      Params:         0       2       0       0       0       0       0       0       0
 22094 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22095 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22096 ;;      Totals:         0       7       0       0       0       0       0       0       0
 22097 ;;Total ram usage:        7 bytes
 22098 ;; Hardware stack levels used:    1
 22099 ;; Hardware stack levels required when called:    7
 22100 ;; This function calls:
 22101 ;;		___wmul
 22102 ;;		_isdigit
 22103 ;; This function is called by:
 22104 ;;		_getIntJSON
 22105 ;; This function uses a non-reentrant model
 22106 ;;
 22107                           
 22108                           	psect	text45
 22109  004CFE                     __ptext45:
 22110                           	opt stack 0
 22111  004CFE                     _atoi:
 22112                           	opt stack 21
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;incstack = 0
 22116  004CFE  D003               	goto	l1834
 22117  004D00  0100               	movlb	0	; () banked
 22118  004D02  4B66               	infsnz	atoi@s& (0+255),f,b
 22119  004D04  2B67               	incf	(atoi@s+1)& (0+255),f,b
 22120  004D06                     l1834:
 22121                           
 22122                           ; BSR set to: 0
 22123  004D06  C066  FFD9         	movff	atoi@s,fsr2l
 22124  004D0A  C067  FFDA         	movff	atoi@s+1,fsr2h
 22125  004D0E  0E20               	movlw	32
 22126  004D10  18DE               	xorwf	postinc2,w,c
 22127  004D12  B4D8               	btfsc	status,2,c
 22128  004D14  D7F5               	goto	l1835
 22129  004D16  C066  FFD9         	movff	atoi@s,fsr2l
 22130  004D1A  C067  FFDA         	movff	atoi@s+1,fsr2h
 22131  004D1E  0E09               	movlw	9
 22132  004D20  18DE               	xorwf	postinc2,w,c
 22133  004D22  B4D8               	btfsc	status,2,c
 22134  004D24  D7ED               	goto	l1835
 22135  004D26  0E00               	movlw	0
 22136  004D28  0100               	movlb	0	; () banked
 22137  004D2A  6F6C               	movwf	(atoi@a+1)& (0+255),b
 22138  004D2C  0E00               	movlw	0
 22139  004D2E  6F6B               	movwf	atoi@a& (0+255),b
 22140  004D30  0E00               	movlw	0
 22141  004D32  6F6A               	movwf	atoi@sign& (0+255),b
 22142                           
 22143                           ; BSR set to: 0
 22144  004D34  C066  FFD9         	movff	atoi@s,fsr2l
 22145  004D38  C067  FFDA         	movff	atoi@s+1,fsr2h
 22146  004D3C  0E2D               	movlw	45
 22147  004D3E  18DE               	xorwf	postinc2,w,c
 22148  004D40  A4D8               	btfss	status,2,c
 22149  004D42  D002               	goto	l1837
 22150                           
 22151                           ; BSR set to: 0
 22152  004D44  2B6A               	incf	atoi@sign& (0+255),f,b
 22153  004D46  D026               	goto	l6684
 22154  004D48                     l1837:
 22155                           
 22156                           ; BSR set to: 0
 22157                           
 22158                           ; BSR set to: 0
 22159  004D48  C066  FFD9         	movff	atoi@s,fsr2l
 22160  004D4C  C067  FFDA         	movff	atoi@s+1,fsr2h
 22161  004D50  0E2B               	movlw	43
 22162  004D52  18DE               	xorwf	postinc2,w,c
 22163  004D54  A4D8               	btfss	status,2,c
 22164  004D56  D020               	goto	l1840
 22165  004D58  D01D               	goto	l6684
 22166  004D5A                     
 22167                           ; BSR set to: 0
 22168  004D5A  C06B  F060         	movff	atoi@a,___wmul@multiplier
 22169  004D5E  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 22170  004D62  0E00               	movlw	0
 22171  004D64  0100               	movlb	0	; () banked
 22172  004D66  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22173  004D68  0E0A               	movlw	10
 22174  004D6A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 22175  004D6C  EC9B  F02E         	call	___wmul
 22176  004D70  C066  FFD9         	movff	atoi@s,fsr2l
 22177  004D74  C067  FFDA         	movff	atoi@s+1,fsr2h
 22178  004D78  50DF               	movf	indf2,w,c
 22179  004D7A  0100               	movlb	0	; () banked
 22180  004D7C  6F68               	movwf	??_atoi& (0+255),b
 22181  004D7E  6B69               	clrf	(??_atoi+1)& (0+255),b
 22182  004D80  5160               	movf	?___wmul& (0+255),w,b
 22183  004D82  2768               	addwf	??_atoi& (0+255),f,b
 22184  004D84  5161               	movf	(?___wmul+1)& (0+255),w,b
 22185  004D86  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 22186  004D88  0ED0               	movlw	208
 22187  004D8A  2568               	addwf	??_atoi& (0+255),w,b
 22188  004D8C  6F6B               	movwf	atoi@a& (0+255),b
 22189  004D8E  0EFF               	movlw	255
 22190  004D90  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 22191  004D92  6F6C               	movwf	(atoi@a+1)& (0+255),b
 22192  004D94                     l6684:
 22193                           
 22194                           ; BSR set to: 0
 22195  004D94  4B66               	infsnz	atoi@s& (0+255),f,b
 22196  004D96  2B67               	incf	(atoi@s+1)& (0+255),f,b
 22197  004D98                     l1840:
 22198                           
 22199                           ; BSR set to: 0
 22200                           
 22201                           ; BSR set to: 0
 22202  004D98  C066  FFD9         	movff	atoi@s,fsr2l
 22203  004D9C  C067  FFDA         	movff	atoi@s+1,fsr2h
 22204  004DA0  50DF               	movf	indf2,w,c
 22205  004DA2  EC21  F02F         	call	_isdigit
 22206  004DA6  B0D8               	btfsc	status,0,c
 22207  004DA8  D7D8               	goto	l1841
 22208  004DAA  0100               	movlb	0	; () banked
 22209  004DAC  516A               	movf	atoi@sign& (0+255),w,b
 22210  004DAE  B4D8               	btfsc	status,2,c
 22211  004DB0  D00D               	goto	l1843
 22212                           
 22213                           ; BSR set to: 0
 22214  004DB2  C06B  F068         	movff	atoi@a,??_atoi
 22215  004DB6  C06C  F069         	movff	atoi@a+1,??_atoi+1
 22216  004DBA  1F68               	comf	??_atoi& (0+255),f,b
 22217  004DBC  1F69               	comf	(??_atoi+1)& (0+255),f,b
 22218  004DBE  4B68               	infsnz	??_atoi& (0+255),f,b
 22219  004DC0  2B69               	incf	(??_atoi+1)& (0+255),f,b
 22220  004DC2  C068  F066         	movff	??_atoi,?_atoi
 22221  004DC6  C069  F067         	movff	??_atoi+1,?_atoi+1
 22222  004DCA  0012               	return	
 22223  004DCC                     l1843:
 22224                           
 22225                           ; BSR set to: 0
 22226  004DCC  C06B  F066         	movff	atoi@a,?_atoi
 22227  004DD0  C06C  F067         	movff	atoi@a+1,?_atoi+1
 22228                           
 22229                           ; BSR set to: 0
 22230  004DD4  0012               	return		;funcret
 22231  004DD6                     __end_of_atoi:
 22232                           	opt stack 0
 22233                           tosu	equ	0xFFF
 22234                           tosh	equ	0xFFE
 22235                           tosl	equ	0xFFD
 22236                           pclath	equ	0xFFA
 22237                           tblptru	equ	0xFF8
 22238                           tblptrh	equ	0xFF7
 22239                           tblptrl	equ	0xFF6
 22240                           tablat	equ	0xFF5
 22241                           prodh	equ	0xFF4
 22242                           prodl	equ	0xFF3
 22243                           intcon	equ	0xFF2
 22244                           intcon2	equ	0xFF1
 22245                           intcon3	equ	0xFF0
 22246                           indf0	equ	0xFEF
 22247                           postinc0	equ	0xFEE
 22248                           fsr0h	equ	0xFEA
 22249                           fsr0l	equ	0xFE9
 22250                           wreg	equ	0xFE8
 22251                           indf1	equ	0xFE7
 22252                           postinc1	equ	0xFE6
 22253                           postdec1	equ	0xFE5
 22254                           plusw1	equ	0xFE3
 22255                           fsr1h	equ	0xFE2
 22256                           fsr1l	equ	0xFE1
 22257                           indf2	equ	0xFDF
 22258                           postinc2	equ	0xFDE
 22259                           postdec2	equ	0xFDD
 22260                           plusw2	equ	0xFDB
 22261                           fsr2h	equ	0xFDA
 22262                           fsr2l	equ	0xFD9
 22263                           status	equ	0xFD8
 22264                           
 22265 ;; *************** function _isdigit *****************
 22266 ;; Defined at:
 22267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 22268 ;; Parameters:    Size  Location     Type
 22269 ;;  c               1    wreg     unsigned char 
 22270 ;; Auto vars:     Size  Location     Type
 22271 ;;  c               1    2[BANK0 ] unsigned char 
 22272 ;; Return value:  Size  Location     Type
 22273 ;;		None               void
 22274 ;; Registers used:
 22275 ;;		wreg, status,2, status,0
 22276 ;; Tracked objects:
 22277 ;;		On entry : 0/0
 22278 ;;		On exit  : 0/0
 22279 ;;		Unchanged: 0/0
 22280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22281 ;;      Params:         0       0       0       0       0       0       0       0       0
 22282 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22283 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22284 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22285 ;;Total ram usage:        3 bytes
 22286 ;; Hardware stack levels used:    1
 22287 ;; Hardware stack levels required when called:    6
 22288 ;; This function calls:
 22289 ;;		Nothing
 22290 ;; This function is called by:
 22291 ;;		__doprnt
 22292 ;;		_atoi
 22293 ;; This function uses a non-reentrant model
 22294 ;;
 22295                           
 22296                           	psect	text46
 22297  005E42                     __ptext46:
 22298                           	opt stack 0
 22299  005E42                     _isdigit:
 22300                           	opt stack 22
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;incstack = 0
 22304                           ;isdigit@c stored from wreg
 22305  005E42  0100               	movlb	0	; () banked
 22306  005E44  6F62               	movwf	isdigit@c& (0+255),b
 22307  005E46  0E00               	movlw	0
 22308  005E48  0100               	movlb	0	; () banked
 22309  005E4A  6F61               	movwf	_isdigit$2066& (0+255),b
 22310                           
 22311                           ; BSR set to: 0
 22312  005E4C  0E3A               	movlw	58
 22313  005E4E  6162               	cpfslt	isdigit@c& (0+255),b
 22314  005E50  D005               	goto	l2015
 22315                           
 22316                           ; BSR set to: 0
 22317  005E52  0E2F               	movlw	47
 22318  005E54  6562               	cpfsgt	isdigit@c& (0+255),b
 22319  005E56  D002               	goto	l2015
 22320                           
 22321                           ; BSR set to: 0
 22322  005E58  0E01               	movlw	1
 22323  005E5A  6F61               	movwf	_isdigit$2066& (0+255),b
 22324  005E5C                     l2015:
 22325                           
 22326                           ; BSR set to: 0
 22327                           
 22328                           ; BSR set to: 0
 22329  005E5C  C061  F060         	movff	_isdigit$2066,??_isdigit
 22330  005E60  3160               	rrcf	??_isdigit& (0+255),w,b
 22331  005E62  0012               	return	
 22332  005E64                     __end_of_isdigit:
 22333                           	opt stack 0
 22334                           tosu	equ	0xFFF
 22335                           tosh	equ	0xFFE
 22336                           tosl	equ	0xFFD
 22337                           pclath	equ	0xFFA
 22338                           tblptru	equ	0xFF8
 22339                           tblptrh	equ	0xFF7
 22340                           tblptrl	equ	0xFF6
 22341                           tablat	equ	0xFF5
 22342                           prodh	equ	0xFF4
 22343                           prodl	equ	0xFF3
 22344                           intcon	equ	0xFF2
 22345                           intcon2	equ	0xFF1
 22346                           intcon3	equ	0xFF0
 22347                           indf0	equ	0xFEF
 22348                           postinc0	equ	0xFEE
 22349                           fsr0h	equ	0xFEA
 22350                           fsr0l	equ	0xFE9
 22351                           wreg	equ	0xFE8
 22352                           indf1	equ	0xFE7
 22353                           postinc1	equ	0xFE6
 22354                           postdec1	equ	0xFE5
 22355                           plusw1	equ	0xFE3
 22356                           fsr1h	equ	0xFE2
 22357                           fsr1l	equ	0xFE1
 22358                           indf2	equ	0xFDF
 22359                           postinc2	equ	0xFDE
 22360                           postdec2	equ	0xFDD
 22361                           plusw2	equ	0xFDB
 22362                           fsr2h	equ	0xFDA
 22363                           fsr2l	equ	0xFD9
 22364                           status	equ	0xFD8
 22365                           
 22366 ;; *************** function ___wmul *****************
 22367 ;; Defined at:
 22368 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 22369 ;; Parameters:    Size  Location     Type
 22370 ;;  multiplier      2    0[BANK0 ] unsigned int 
 22371 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 22372 ;; Auto vars:     Size  Location     Type
 22373 ;;  product         2    4[BANK0 ] unsigned int 
 22374 ;; Return value:  Size  Location     Type
 22375 ;;                  2    0[BANK0 ] unsigned int 
 22376 ;; Registers used:
 22377 ;;		wreg, status,2, status,0, prodl, prodh
 22378 ;; Tracked objects:
 22379 ;;		On entry : 0/0
 22380 ;;		On exit  : 0/0
 22381 ;;		Unchanged: 0/0
 22382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22383 ;;      Params:         0       4       0       0       0       0       0       0       0
 22384 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22385 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22386 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22387 ;;Total ram usage:        6 bytes
 22388 ;; Hardware stack levels used:    1
 22389 ;; Hardware stack levels required when called:    6
 22390 ;; This function calls:
 22391 ;;		Nothing
 22392 ;; This function is called by:
 22393 ;;		_enviaDadosWifi
 22394 ;;		_main
 22395 ;;		__doprnt
 22396 ;;		_atoi
 22397 ;; This function uses a non-reentrant model
 22398 ;;
 22399                           
 22400                           	psect	text47
 22401  005D36                     __ptext47:
 22402                           	opt stack 0
 22403  005D36                     ___wmul:
 22404                           	opt stack 22
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;incstack = 0
 22408  005D36  0100               	movlb	0	; () banked
 22409  005D38  5160               	movf	___wmul@multiplier& (0+255),w,b
 22410  005D3A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 22411  005D3C  CFF3 F064          	movff	prodl,___wmul@product
 22412  005D40  CFF4 F065          	movff	prodh,___wmul@product+1
 22413  005D44  5160               	movf	___wmul@multiplier& (0+255),w,b
 22414  005D46  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 22415  005D48  50F3               	movf	prodl,w,c
 22416  005D4A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 22417  005D4C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 22418  005D4E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 22419  005D50  50F3               	movf	prodl,w,c
 22420  005D52  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 22421                           
 22422                           ; BSR set to: 0
 22423  005D54  C064  F060         	movff	___wmul@product,?___wmul
 22424  005D58  C065  F061         	movff	___wmul@product+1,?___wmul+1
 22425  005D5C  0012               	return	
 22426  005D5E                     __end_of___wmul:
 22427                           	opt stack 0
 22428                           tosu	equ	0xFFF
 22429                           tosh	equ	0xFFE
 22430                           tosl	equ	0xFFD
 22431                           pclath	equ	0xFFA
 22432                           tblptru	equ	0xFF8
 22433                           tblptrh	equ	0xFF7
 22434                           tblptrl	equ	0xFF6
 22435                           tablat	equ	0xFF5
 22436                           prodh	equ	0xFF4
 22437                           prodl	equ	0xFF3
 22438                           intcon	equ	0xFF2
 22439                           intcon2	equ	0xFF1
 22440                           intcon3	equ	0xFF0
 22441                           indf0	equ	0xFEF
 22442                           postinc0	equ	0xFEE
 22443                           fsr0h	equ	0xFEA
 22444                           fsr0l	equ	0xFE9
 22445                           wreg	equ	0xFE8
 22446                           indf1	equ	0xFE7
 22447                           postinc1	equ	0xFE6
 22448                           postdec1	equ	0xFE5
 22449                           plusw1	equ	0xFE3
 22450                           fsr1h	equ	0xFE2
 22451                           fsr1l	equ	0xFE1
 22452                           indf2	equ	0xFDF
 22453                           postinc2	equ	0xFDE
 22454                           postdec2	equ	0xFDD
 22455                           plusw2	equ	0xFDB
 22456                           fsr2h	equ	0xFDA
 22457                           fsr2l	equ	0xFD9
 22458                           status	equ	0xFD8
 22459                           
 22460 ;; *************** function _findBufferSerial *****************
 22461 ;; Defined at:
 22462 ;;		line 33 in file "src/serial.c"
 22463 ;; Parameters:    Size  Location     Type
 22464 ;;  key             2   20[BANK0 ] PTR unsigned char 
 22465 ;;		 -> STR_82(3), STR_79(3), STR_76(7), STR_75(3), 
 22466 ;;		 -> STR_72(5), STR_67(2), STR_64(3), STR_61(2), 
 22467 ;;		 -> STR_60(2), STR_55(5), STR_54(3), STR_51(3), 
 22468 ;;		 -> STR_40(3), STR_33(2), STR_30(7), STR_24(3), 
 22469 ;;		 -> STR_21(3), STR_18(3), STR_15(3), STR_12(3), 
 22470 ;; Auto vars:     Size  Location     Type
 22471 ;;		None
 22472 ;; Return value:  Size  Location     Type
 22473 ;;                  1    wreg      unsigned char 
 22474 ;; Registers used:
 22475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22476 ;; Tracked objects:
 22477 ;;		On entry : 0/0
 22478 ;;		On exit  : 0/0
 22479 ;;		Unchanged: 0/0
 22480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22481 ;;      Params:         0       2       0       0       0       0       0       0       0
 22482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22484 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22485 ;;Total ram usage:        2 bytes
 22486 ;; Hardware stack levels used:    1
 22487 ;; Hardware stack levels required when called:    8
 22488 ;; This function calls:
 22489 ;;		_strstr
 22490 ;; This function is called by:
 22491 ;;		_alterarDadosConexaoConfigWifi
 22492 ;;		_enviaDadosWifi
 22493 ;; This function uses a non-reentrant model
 22494 ;;
 22495                           
 22496                           	psect	text48
 22497  005D5E                     __ptext48:
 22498                           	opt stack 0
 22499  005D5E                     _findBufferSerial:
 22500                           	opt stack 21
 22501                           
 22502                           ;serial.c: 34: return strstr(bufferSerial, key) != (0);
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;incstack = 0
 22506  005D5E  0E69               	movlw	low _bufferSerial
 22507  005D60  0100               	movlb	0	; () banked
 22508  005D62  6F6F               	movwf	strstr@s1& (0+255),b
 22509  005D64  0E02               	movlw	high _bufferSerial
 22510  005D66  6F70               	movwf	(strstr@s1+1)& (0+255),b
 22511  005D68  C074  F071         	movff	findBufferSerial@key,strstr@s2
 22512  005D6C  C075  F072         	movff	findBufferSerial@key+1,strstr@s2+1
 22513  005D70  ECAE  F027         	call	_strstr	;wreg free
 22514  005D74  0100               	movlb	0	; () banked
 22515  005D76  516F               	movf	?_strstr& (0+255),w,b
 22516  005D78  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 22517  005D7A  B4D8               	btfsc	status,2,c
 22518  005D7C  D002               	goto	u11740
 22519  005D7E  0E01               	movlw	1
 22520  005D80  0012               	return	
 22521  005D82                     u11740:
 22522  005D82  0E00               	movlw	0
 22523  005D84  0012               	return	
 22524  005D86                     __end_of_findBufferSerial:
 22525                           	opt stack 0
 22526                           tosu	equ	0xFFF
 22527                           tosh	equ	0xFFE
 22528                           tosl	equ	0xFFD
 22529                           pclath	equ	0xFFA
 22530                           tblptru	equ	0xFF8
 22531                           tblptrh	equ	0xFF7
 22532                           tblptrl	equ	0xFF6
 22533                           tablat	equ	0xFF5
 22534                           prodh	equ	0xFF4
 22535                           prodl	equ	0xFF3
 22536                           intcon	equ	0xFF2
 22537                           intcon2	equ	0xFF1
 22538                           intcon3	equ	0xFF0
 22539                           indf0	equ	0xFEF
 22540                           postinc0	equ	0xFEE
 22541                           fsr0h	equ	0xFEA
 22542                           fsr0l	equ	0xFE9
 22543                           wreg	equ	0xFE8
 22544                           indf1	equ	0xFE7
 22545                           postinc1	equ	0xFE6
 22546                           postdec1	equ	0xFE5
 22547                           plusw1	equ	0xFE3
 22548                           fsr1h	equ	0xFE2
 22549                           fsr1l	equ	0xFE1
 22550                           indf2	equ	0xFDF
 22551                           postinc2	equ	0xFDE
 22552                           postdec2	equ	0xFDD
 22553                           plusw2	equ	0xFDB
 22554                           fsr2h	equ	0xFDA
 22555                           fsr2l	equ	0xFD9
 22556                           status	equ	0xFD8
 22557                           
 22558 ;; *************** function _strstr *****************
 22559 ;; Defined at:
 22560 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 22561 ;; Parameters:    Size  Location     Type
 22562 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 22563 ;;		 -> STR_136(4), getStringJSON@attr(20), NULL(0), getIntJSON@attr(20), 
 22564 ;;		 -> bufferSerial(100), 
 22565 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 22566 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), STR_80(4), 
 22567 ;;		 -> STR_79(3), STR_77(4), STR_76(7), STR_75(3), 
 22568 ;;		 -> STR_73(4), STR_72(5), STR_68(4), STR_67(2), 
 22569 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 22570 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 22571 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 22572 ;;		 -> STR_40(3), STR_38(3), STR_34(4), STR_33(2), 
 22573 ;;		 -> STR_31(4), STR_30(7), STR_25(7), STR_24(3), 
 22574 ;;		 -> STR_22(4), STR_21(3), STR_19(4), STR_18(3), 
 22575 ;;		 -> STR_16(4), STR_15(3), STR_13(4), STR_12(3), 
 22576 ;;		 -> STR_10(4), 
 22577 ;; Auto vars:     Size  Location     Type
 22578 ;;		None
 22579 ;; Return value:  Size  Location     Type
 22580 ;;                  2   15[BANK0 ] PTR unsigned char 
 22581 ;; Registers used:
 22582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22583 ;; Tracked objects:
 22584 ;;		On entry : 0/0
 22585 ;;		On exit  : 0/0
 22586 ;;		Unchanged: 0/0
 22587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22588 ;;      Params:         0       4       0       0       0       0       0       0       0
 22589 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22590 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22591 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22592 ;;Total ram usage:        5 bytes
 22593 ;; Hardware stack levels used:    1
 22594 ;; Hardware stack levels required when called:    7
 22595 ;; This function calls:
 22596 ;;		_strchr
 22597 ;;		_strlen
 22598 ;;		_strncmp
 22599 ;; This function is called by:
 22600 ;;		_getIntJSON
 22601 ;;		_getStringJSON
 22602 ;;		_setKeyStartReceiveSerial
 22603 ;;		_findBufferSerial
 22604 ;; This function uses a non-reentrant model
 22605 ;;
 22606                           
 22607                           	psect	text49
 22608  004F5C                     __ptext49:
 22609                           	opt stack 0
 22610  004F5C                     _strstr:
 22611                           	opt stack 21
 22612                           
 22613                           ; BSR set to: 0
 22614                           ;incstack = 0
 22615  004F5C  D03F               	goto	l2272
 22616  004F5E  C06F  F066         	movff	strstr@s1,strncmp@s1
 22617  004F62  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 22618  004F66  C071  F068         	movff	strstr@s2,strncmp@s2
 22619  004F6A  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 22620  004F6E  C071  F060         	movff	strstr@s2,strlen@s
 22621  004F72  C072  F061         	movff	strstr@s2+1,strlen@s+1
 22622  004F76  EC3D  F02C         	call	_strlen	;wreg free
 22623  004F7A  C060  F06A         	movff	?_strlen,strncmp@len
 22624  004F7E  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 22625  004F82  EC14  F025         	call	_strncmp	;wreg free
 22626  004F86  0100               	movlb	0	; () banked
 22627  004F88  5166               	movf	?_strncmp& (0+255),w,b
 22628  004F8A  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 22629  004F8C  A4D8               	btfss	status,2,c
 22630  004F8E  D005               	goto	l2274
 22631                           
 22632                           ; BSR set to: 0
 22633  004F90  C06F  F06F         	movff	strstr@s1,?_strstr
 22634  004F94  C070  F070         	movff	strstr@s1+1,?_strstr+1
 22635                           
 22636                           ; BSR set to: 0
 22637  004F98  0012               	return	
 22638  004F9A                     l2274:
 22639                           
 22640                           ; BSR set to: 0
 22641                           
 22642                           ; BSR set to: 0
 22643  004F9A  0E01               	movlw	1
 22644  004F9C  256F               	addwf	strstr@s1& (0+255),w,b
 22645  004F9E  6F60               	movwf	strchr@ptr& (0+255),b
 22646  004FA0  0E00               	movlw	0
 22647  004FA2  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 22648  004FA4  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 22649  004FA6  C071  FFF6         	movff	strstr@s2,tblptrl
 22650  004FAA  C072  FFF7         	movff	strstr@s2+1,tblptrh
 22651  004FAE  6AF8               	clrf	tblptru,c
 22652  004FB0  0E07               	movlw	(high __ramtop+-1)
 22653  004FB2  64F7               	cpfsgt	tblptrh,c
 22654  004FB4  D003               	bra	u8507
 22655  004FB6  0008               	tblrd		*
 22656  004FB8  50F5               	movf	tablat,w,c
 22657  004FBA  D005               	bra	u8500
 22658  004FBC                     u8507:
 22659  004FBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 22660  004FC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 22661  004FC4  50EF               	movf	indf0,w,c
 22662  004FC6                     u8500:
 22663  004FC6  0100               	movlb	0	; () banked
 22664  004FC8  6F73               	movwf	??_strstr& (0+255),b
 22665  004FCA  5173               	movf	??_strstr& (0+255),w,b
 22666  004FCC  6F62               	movwf	strchr@chr& (0+255),b
 22667  004FCE  6B63               	clrf	(strchr@chr+1)& (0+255),b
 22668  004FD0  EC5F  F02B         	call	_strchr	;wreg free
 22669  004FD4  C060  F06F         	movff	?_strchr,strstr@s1
 22670  004FD8  C061  F070         	movff	?_strchr+1,strstr@s1+1
 22671  004FDC                     l2272:
 22672  004FDC  0100               	movlb	0	; () banked
 22673  004FDE  516F               	movf	strstr@s1& (0+255),w,b
 22674  004FE0  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 22675  004FE2  B4D8               	btfsc	status,2,c
 22676  004FE4  D013               	goto	u8530
 22677                           
 22678                           ; BSR set to: 0
 22679  004FE6  C06F  FFF6         	movff	strstr@s1,tblptrl
 22680  004FEA  C070  FFF7         	movff	strstr@s1+1,tblptrh
 22681  004FEE  6AF8               	clrf	tblptru,c
 22682  004FF0  0E07               	movlw	(high __ramtop+-1)
 22683  004FF2  64F7               	cpfsgt	tblptrh,c
 22684  004FF4  D003               	bra	u8527
 22685  004FF6  0008               	tblrd		*
 22686  004FF8  50F5               	movf	tablat,w,c
 22687  004FFA  D005               	bra	u8520
 22688  004FFC                     u8527:
 22689  004FFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 22690  005000  CFF7 FFEA          	movff	tblptrh,fsr0h
 22691  005004  50EF               	movf	indf0,w,c
 22692  005006                     u8520:
 22693  005006  0900               	iorlw	0
 22694  005008  A4D8               	btfss	status,2,c
 22695  00500A  D7A9               	goto	l2273
 22696  00500C                     u8530:
 22697  00500C  0E00               	movlw	0
 22698  00500E  0100               	movlb	0	; () banked
 22699  005010  6F6F               	movwf	?_strstr& (0+255),b
 22700  005012  0E00               	movlw	0
 22701  005014  6F70               	movwf	(?_strstr+1)& (0+255),b
 22702  005016  0012               	return	
 22703  005018                     __end_of_strstr:
 22704                           	opt stack 0
 22705                           tosu	equ	0xFFF
 22706                           tosh	equ	0xFFE
 22707                           tosl	equ	0xFFD
 22708                           pclath	equ	0xFFA
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           intcon2	equ	0xFF1
 22717                           intcon3	equ	0xFF0
 22718                           indf0	equ	0xFEF
 22719                           postinc0	equ	0xFEE
 22720                           fsr0h	equ	0xFEA
 22721                           fsr0l	equ	0xFE9
 22722                           wreg	equ	0xFE8
 22723                           indf1	equ	0xFE7
 22724                           postinc1	equ	0xFE6
 22725                           postdec1	equ	0xFE5
 22726                           plusw1	equ	0xFE3
 22727                           fsr1h	equ	0xFE2
 22728                           fsr1l	equ	0xFE1
 22729                           indf2	equ	0xFDF
 22730                           postinc2	equ	0xFDE
 22731                           postdec2	equ	0xFDD
 22732                           plusw2	equ	0xFDB
 22733                           fsr2h	equ	0xFDA
 22734                           fsr2l	equ	0xFD9
 22735                           status	equ	0xFD8
 22736                           
 22737 ;; *************** function _strncmp *****************
 22738 ;; Defined at:
 22739 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 22740 ;; Parameters:    Size  Location     Type
 22741 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 22742 ;;		 -> STR_136(4), getStringJSON@attr(20), NULL(0), getIntJSON@attr(20), 
 22743 ;;		 -> bufferSerial(100), 
 22744 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 22745 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), STR_80(4), 
 22746 ;;		 -> STR_79(3), STR_77(4), STR_76(7), STR_75(3), 
 22747 ;;		 -> STR_73(4), STR_72(5), STR_68(4), STR_67(2), 
 22748 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 22749 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 22750 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 22751 ;;		 -> STR_40(3), STR_38(3), STR_34(4), STR_33(2), 
 22752 ;;		 -> STR_31(4), STR_30(7), STR_25(7), STR_24(3), 
 22753 ;;		 -> STR_22(4), STR_21(3), STR_19(4), STR_18(3), 
 22754 ;;		 -> STR_16(4), STR_15(3), STR_13(4), STR_12(3), 
 22755 ;;		 -> STR_10(4), 
 22756 ;;  len             2   10[BANK0 ] unsigned int 
 22757 ;; Auto vars:     Size  Location     Type
 22758 ;;		None
 22759 ;; Return value:  Size  Location     Type
 22760 ;;                  2    6[BANK0 ] int 
 22761 ;; Registers used:
 22762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22763 ;; Tracked objects:
 22764 ;;		On entry : 0/0
 22765 ;;		On exit  : 0/0
 22766 ;;		Unchanged: 0/0
 22767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22768 ;;      Params:         0       6       0       0       0       0       0       0       0
 22769 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22770 ;;      Temps:          0       3       0       0       0       0       0       0       0
 22771 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22772 ;;Total ram usage:        9 bytes
 22773 ;; Hardware stack levels used:    1
 22774 ;; Hardware stack levels required when called:    6
 22775 ;; This function calls:
 22776 ;;		Nothing
 22777 ;; This function is called by:
 22778 ;;		_strstr
 22779 ;; This function uses a non-reentrant model
 22780 ;;
 22781                           
 22782                           	psect	text50
 22783  004A28                     __ptext50:
 22784                           	opt stack 0
 22785  004A28                     _strncmp:
 22786                           	opt stack 21
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;incstack = 0
 22790  004A28  D06D               	goto	l2306
 22791  004A2A                     l6524:
 22792  004A2A  C066  FFF6         	movff	strncmp@s1,tblptrl
 22793  004A2E  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22794  004A32  6AF8               	clrf	tblptru,c
 22795  004A34  0E07               	movlw	(high __ramtop+-1)
 22796  004A36  64F7               	cpfsgt	tblptrh,c
 22797  004A38  D003               	bra	u8327
 22798  004A3A  0008               	tblrd		*
 22799  004A3C  50F5               	movf	tablat,w,c
 22800  004A3E  D005               	bra	u8320
 22801  004A40                     u8327:
 22802  004A40  CFF6 FFE9          	movff	tblptrl,fsr0l
 22803  004A44  CFF7 FFEA          	movff	tblptrh,fsr0h
 22804  004A48  50EF               	movf	indf0,w,c
 22805  004A4A                     u8320:
 22806  004A4A  0900               	iorlw	0
 22807  004A4C  B4D8               	btfsc	status,2,c
 22808  004A4E  D025               	goto	u8350
 22809  004A50  C068  FFF6         	movff	strncmp@s2,tblptrl
 22810  004A54  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22811  004A58  6AF8               	clrf	tblptru,c
 22812  004A5A  0E07               	movlw	(high __ramtop+-1)
 22813  004A5C  64F7               	cpfsgt	tblptrh,c
 22814  004A5E  D003               	bra	u8347
 22815  004A60  0008               	tblrd		*
 22816  004A62  50F5               	movf	tablat,w,c
 22817  004A64  D005               	bra	u8340
 22818  004A66                     u8347:
 22819  004A66  CFF6 FFE9          	movff	tblptrl,fsr0l
 22820  004A6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22821  004A6E  50EF               	movf	indf0,w,c
 22822  004A70                     u8340:
 22823  004A70  0100               	movlb	0	; () banked
 22824  004A72  6F6C               	movwf	??_strncmp& (0+255),b
 22825  004A74  C066  FFF6         	movff	strncmp@s1,tblptrl
 22826  004A78  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22827  004A7C  6AF8               	clrf	tblptru,c
 22828  004A7E  0E07               	movlw	(high __ramtop+-1)
 22829  004A80  64F7               	cpfsgt	tblptrh,c
 22830  004A82  D003               	bra	u8357
 22831  004A84  0008               	tblrd		*
 22832  004A86  50F5               	movf	tablat,w,c
 22833  004A88  D005               	bra	u8355
 22834  004A8A                     u8357:
 22835  004A8A  CFF6 FFE9          	movff	tblptrl,fsr0l
 22836  004A8E  CFF7 FFEA          	movff	tblptrh,fsr0h
 22837  004A92  50EF               	movf	indf0,w,c
 22838  004A94                     u8355:
 22839  004A94  196C               	xorwf	??_strncmp& (0+255),w,b
 22840  004A96  B4D8               	btfsc	status,2,c
 22841  004A98  D030               	goto	l2308
 22842  004A9A                     u8350:
 22843  004A9A  C068  FFF6         	movff	strncmp@s2,tblptrl
 22844  004A9E  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22845  004AA2  6AF8               	clrf	tblptru,c
 22846  004AA4  0E07               	movlw	(high __ramtop+-1)
 22847  004AA6  64F7               	cpfsgt	tblptrh,c
 22848  004AA8  D003               	bra	u8367
 22849  004AAA  0008               	tblrd		*
 22850  004AAC  50F5               	movf	tablat,w,c
 22851  004AAE  D005               	bra	u8360
 22852  004AB0                     u8367:
 22853  004AB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22854  004AB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22855  004AB8  50EF               	movf	indf0,w,c
 22856  004ABA                     u8360:
 22857  004ABA  0100               	movlb	0	; () banked
 22858  004ABC  6F6C               	movwf	??_strncmp& (0+255),b
 22859  004ABE  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 22860  004AC0  1F6C               	comf	??_strncmp& (0+255),f,b
 22861  004AC2  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 22862  004AC4  4B6C               	infsnz	??_strncmp& (0+255),f,b
 22863  004AC6  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 22864  004AC8  C066  FFF6         	movff	strncmp@s1,tblptrl
 22865  004ACC  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22866  004AD0  6AF8               	clrf	tblptru,c
 22867  004AD2  0E07               	movlw	(high __ramtop+-1)
 22868  004AD4  64F7               	cpfsgt	tblptrh,c
 22869  004AD6  D003               	bra	u8377
 22870  004AD8  0008               	tblrd		*
 22871  004ADA  50F5               	movf	tablat,w,c
 22872  004ADC  D005               	bra	u8370
 22873  004ADE                     u8377:
 22874  004ADE  CFF6 FFE9          	movff	tblptrl,fsr0l
 22875  004AE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 22876  004AE6  50EF               	movf	indf0,w,c
 22877  004AE8                     u8370:
 22878  004AE8  0100               	movlb	0	; () banked
 22879  004AEA  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 22880  004AEC  516E               	movf	(??_strncmp+2)& (0+255),w,b
 22881  004AEE  256C               	addwf	??_strncmp& (0+255),w,b
 22882  004AF0  6F66               	movwf	?_strncmp& (0+255),b
 22883  004AF2  0E00               	movlw	0
 22884  004AF4  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 22885  004AF6  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22886                           
 22887                           ; BSR set to: 0
 22888  004AF8  0012               	return	
 22889  004AFA                     l2308:
 22890                           
 22891                           ; BSR set to: 0
 22892  004AFA  0100               	movlb	0	; () banked
 22893  004AFC  4B66               	infsnz	strncmp@s1& (0+255),f,b
 22894  004AFE  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 22895  004B00  4B68               	infsnz	strncmp@s2& (0+255),f,b
 22896  004B02  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 22897  004B04                     l2306:
 22898                           
 22899                           ; BSR set to: 0
 22900  004B04  0100               	movlb	0	; () banked
 22901  004B06  076A               	decf	strncmp@len& (0+255),f,b
 22902  004B08  A0D8               	btfss	status,0,c
 22903  004B0A  076B               	decf	(strncmp@len+1)& (0+255),f,b
 22904  004B0C  296A               	incf	strncmp@len& (0+255),w,b
 22905  004B0E  E18D               	bnz	l6524
 22906  004B10  296B               	incf	(strncmp@len+1)& (0+255),w,b
 22907  004B12  A4D8               	btfss	status,2,c
 22908  004B14  D78A               	goto	l2307
 22909                           
 22910                           ; BSR set to: 0
 22911                           
 22912                           ; BSR set to: 0
 22913  004B16  0E00               	movlw	0
 22914  004B18  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22915  004B1A  0E00               	movlw	0
 22916  004B1C  6F66               	movwf	?_strncmp& (0+255),b
 22917  004B1E  0012               	return	
 22918  004B20                     __end_of_strncmp:
 22919                           	opt stack 0
 22920                           tosu	equ	0xFFF
 22921                           tosh	equ	0xFFE
 22922                           tosl	equ	0xFFD
 22923                           pclath	equ	0xFFA
 22924                           tblptru	equ	0xFF8
 22925                           tblptrh	equ	0xFF7
 22926                           tblptrl	equ	0xFF6
 22927                           tablat	equ	0xFF5
 22928                           prodh	equ	0xFF4
 22929                           prodl	equ	0xFF3
 22930                           intcon	equ	0xFF2
 22931                           intcon2	equ	0xFF1
 22932                           intcon3	equ	0xFF0
 22933                           indf0	equ	0xFEF
 22934                           postinc0	equ	0xFEE
 22935                           fsr0h	equ	0xFEA
 22936                           fsr0l	equ	0xFE9
 22937                           wreg	equ	0xFE8
 22938                           indf1	equ	0xFE7
 22939                           postinc1	equ	0xFE6
 22940                           postdec1	equ	0xFE5
 22941                           plusw1	equ	0xFE3
 22942                           fsr1h	equ	0xFE2
 22943                           fsr1l	equ	0xFE1
 22944                           indf2	equ	0xFDF
 22945                           postinc2	equ	0xFDE
 22946                           postdec2	equ	0xFDD
 22947                           plusw2	equ	0xFDB
 22948                           fsr2h	equ	0xFDA
 22949                           fsr2l	equ	0xFD9
 22950                           status	equ	0xFD8
 22951                           
 22952 ;; *************** function _strlen *****************
 22953 ;; Defined at:
 22954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 22955 ;; Parameters:    Size  Location     Type
 22956 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 22957 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 22958 ;;		 -> STR_80(4), STR_79(3), STR_77(4), STR_76(7), 
 22959 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 22960 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 22961 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 22962 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 22963 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), bufferSerial(100), 
 22964 ;;		 -> STR_40(3), STR_38(3), ssid(15), STR_34(4), 
 22965 ;;		 -> STR_33(2), STR_31(4), STR_30(7), STR_25(7), 
 22966 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 22967 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 22968 ;;		 -> STR_12(3), STR_10(4), 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 22971 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 22972 ;;		 -> STR_80(4), STR_79(3), STR_77(4), STR_76(7), 
 22973 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 22974 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 22975 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 22976 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 22977 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), bufferSerial(100), 
 22978 ;;		 -> STR_40(3), STR_38(3), ssid(15), STR_34(4), 
 22979 ;;		 -> STR_33(2), STR_31(4), STR_30(7), STR_25(7), 
 22980 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 22981 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 22982 ;;		 -> STR_12(3), STR_10(4), 
 22983 ;; Return value:  Size  Location     Type
 22984 ;;                  2    0[BANK0 ] unsigned int 
 22985 ;; Registers used:
 22986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22987 ;; Tracked objects:
 22988 ;;		On entry : 0/0
 22989 ;;		On exit  : 0/0
 22990 ;;		Unchanged: 0/0
 22991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22992 ;;      Params:         0       2       0       0       0       0       0       0       0
 22993 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22994 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22995 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22996 ;;Total ram usage:        6 bytes
 22997 ;; Hardware stack levels used:    1
 22998 ;; Hardware stack levels required when called:    6
 22999 ;; This function calls:
 23000 ;;		Nothing
 23001 ;; This function is called by:
 23002 ;;		_alterarDadosConexaoConfigWifi
 23003 ;;		_enviaDadosWifi
 23004 ;;		_getIntJSON
 23005 ;;		_getStringJSON
 23006 ;;		_strstr
 23007 ;; This function uses a non-reentrant model
 23008 ;;
 23009                           
 23010                           	psect	text51
 23011  00587A                     __ptext51:
 23012                           	opt stack 0
 23013  00587A                     _strlen:
 23014                           	opt stack 23
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;incstack = 0
 23018  00587A  C060  F064         	movff	strlen@s,strlen@cp
 23019  00587E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 23020  005882  D003               	goto	l2260
 23021  005884  0100               	movlb	0	; () banked
 23022  005886  4B64               	infsnz	strlen@cp& (0+255),f,b
 23023  005888  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 23024  00588A                     l2260:
 23025                           
 23026                           ; BSR set to: 0
 23027  00588A  C064  FFF6         	movff	strlen@cp,tblptrl
 23028  00588E  C065  FFF7         	movff	strlen@cp+1,tblptrh
 23029  005892  6AF8               	clrf	tblptru,c
 23030  005894  0E07               	movlw	(high __ramtop+-1)
 23031  005896  64F7               	cpfsgt	tblptrh,c
 23032  005898  D003               	bra	u7957
 23033  00589A  0008               	tblrd		*
 23034  00589C  50F5               	movf	tablat,w,c
 23035  00589E  D005               	bra	u7950
 23036  0058A0                     u7957:
 23037  0058A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 23038  0058A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 23039  0058A8  50EF               	movf	indf0,w,c
 23040  0058AA                     u7950:
 23041  0058AA  0900               	iorlw	0
 23042  0058AC  A4D8               	btfss	status,2,c
 23043  0058AE  D7EA               	goto	l2261
 23044  0058B0  C060  F062         	movff	strlen@s,??_strlen
 23045  0058B4  C061  F063         	movff	strlen@s+1,??_strlen+1
 23046  0058B8  0100               	movlb	0	; () banked
 23047  0058BA  1F62               	comf	??_strlen& (0+255),f,b
 23048  0058BC  1F63               	comf	(??_strlen+1)& (0+255),f,b
 23049  0058BE  4B62               	infsnz	??_strlen& (0+255),f,b
 23050  0058C0  2B63               	incf	(??_strlen+1)& (0+255),f,b
 23051  0058C2  5164               	movf	strlen@cp& (0+255),w,b
 23052  0058C4  2562               	addwf	??_strlen& (0+255),w,b
 23053  0058C6  6F60               	movwf	?_strlen& (0+255),b
 23054  0058C8  5165               	movf	(strlen@cp+1)& (0+255),w,b
 23055  0058CA  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 23056  0058CC  6F61               	movwf	(?_strlen+1)& (0+255),b
 23057  0058CE  0012               	return	
 23058  0058D0                     __end_of_strlen:
 23059                           	opt stack 0
 23060                           tosu	equ	0xFFF
 23061                           tosh	equ	0xFFE
 23062                           tosl	equ	0xFFD
 23063                           pclath	equ	0xFFA
 23064                           tblptru	equ	0xFF8
 23065                           tblptrh	equ	0xFF7
 23066                           tblptrl	equ	0xFF6
 23067                           tablat	equ	0xFF5
 23068                           prodh	equ	0xFF4
 23069                           prodl	equ	0xFF3
 23070                           intcon	equ	0xFF2
 23071                           intcon2	equ	0xFF1
 23072                           intcon3	equ	0xFF0
 23073                           indf0	equ	0xFEF
 23074                           postinc0	equ	0xFEE
 23075                           fsr0h	equ	0xFEA
 23076                           fsr0l	equ	0xFE9
 23077                           wreg	equ	0xFE8
 23078                           indf1	equ	0xFE7
 23079                           postinc1	equ	0xFE6
 23080                           postdec1	equ	0xFE5
 23081                           plusw1	equ	0xFE3
 23082                           fsr1h	equ	0xFE2
 23083                           fsr1l	equ	0xFE1
 23084                           indf2	equ	0xFDF
 23085                           postinc2	equ	0xFDE
 23086                           postdec2	equ	0xFDD
 23087                           plusw2	equ	0xFDB
 23088                           fsr2h	equ	0xFDA
 23089                           fsr2l	equ	0xFD9
 23090                           status	equ	0xFD8
 23091                           
 23092 ;; *************** function _strchr *****************
 23093 ;; Defined at:
 23094 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 23095 ;; Parameters:    Size  Location     Type
 23096 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 23097 ;;		 -> STR_136(4), getStringJSON@attr(20), NULL(0), getIntJSON@attr(20), 
 23098 ;;		 -> bufferSerial(100), 
 23099 ;;  chr             2    2[BANK0 ] int 
 23100 ;; Auto vars:     Size  Location     Type
 23101 ;;		None
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  2    0[BANK0 ] PTR unsigned char 
 23104 ;; Registers used:
 23105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/0
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23111 ;;      Params:         0       4       0       0       0       0       0       0       0
 23112 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23113 ;;      Temps:          0       2       0       0       0       0       0       0       0
 23114 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23115 ;;Total ram usage:        6 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:    6
 23118 ;; This function calls:
 23119 ;;		Nothing
 23120 ;; This function is called by:
 23121 ;;		_strstr
 23122 ;; This function uses a non-reentrant model
 23123 ;;
 23124                           
 23125                           	psect	text52
 23126  0056BE                     __ptext52:
 23127                           	opt stack 0
 23128  0056BE                     _strchr:
 23129                           	opt stack 21
 23130                           
 23131                           ; BSR set to: 0
 23132                           ;incstack = 0
 23133  0056BE  C060  FFF6         	movff	strchr@ptr,tblptrl
 23134  0056C2  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 23135  0056C6  6AF8               	clrf	tblptru,c
 23136  0056C8  0E07               	movlw	(high __ramtop+-1)
 23137  0056CA  64F7               	cpfsgt	tblptrh,c
 23138  0056CC  D003               	bra	u8397
 23139  0056CE  0008               	tblrd		*
 23140  0056D0  50F5               	movf	tablat,w,c
 23141  0056D2  D005               	bra	u8390
 23142  0056D4                     u8397:
 23143  0056D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 23144  0056D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 23145  0056DC  50EF               	movf	indf0,w,c
 23146  0056DE                     u8390:
 23147  0056DE  0100               	movlb	0	; () banked
 23148  0056E0  1962               	xorwf	strchr@chr& (0+255),w,b
 23149  0056E2  A4D8               	btfss	status,2,c
 23150  0056E4  D005               	goto	l2301
 23151                           
 23152                           ; BSR set to: 0
 23153  0056E6  C060  F060         	movff	strchr@ptr,?_strchr
 23154  0056EA  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 23155                           
 23156                           ; BSR set to: 0
 23157  0056EE  0012               	return	
 23158  0056F0                     l2301:
 23159                           
 23160                           ; BSR set to: 0
 23161                           
 23162                           ; BSR set to: 0
 23163  0056F0  5160               	movf	strchr@ptr& (0+255),w,b
 23164  0056F2  6F64               	movwf	??_strchr& (0+255),b
 23165  0056F4  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 23166  0056F6  6F65               	movwf	(??_strchr+1)& (0+255),b
 23167  0056F8  4B60               	infsnz	strchr@ptr& (0+255),f,b
 23168  0056FA  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 23169  0056FC  C064  FFF6         	movff	??_strchr,tblptrl
 23170  005700  C065  FFF7         	movff	??_strchr+1,tblptrh
 23171  005704  6AF8               	clrf	tblptru,c
 23172  005706  0E07               	movlw	(high __ramtop+-1)
 23173  005708  64F7               	cpfsgt	tblptrh,c
 23174  00570A  D003               	bra	u8417
 23175  00570C  0008               	tblrd		*
 23176  00570E  50F5               	movf	tablat,w,c
 23177  005710  D005               	bra	u8410
 23178  005712                     u8417:
 23179  005712  CFF6 FFE9          	movff	tblptrl,fsr0l
 23180  005716  CFF7 FFEA          	movff	tblptrh,fsr0h
 23181  00571A  50EF               	movf	indf0,w,c
 23182  00571C                     u8410:
 23183  00571C  0900               	iorlw	0
 23184  00571E  A4D8               	btfss	status,2,c
 23185  005720  D7CE               	goto	_strchr
 23186  005722  0E00               	movlw	0
 23187  005724  0100               	movlb	0	; () banked
 23188  005726  6F60               	movwf	?_strchr& (0+255),b
 23189  005728  0E00               	movlw	0
 23190  00572A  6F61               	movwf	(?_strchr+1)& (0+255),b
 23191  00572C  0012               	return	
 23192  00572E                     __end_of_strchr:
 23193                           	opt stack 0
 23194                           tosu	equ	0xFFF
 23195                           tosh	equ	0xFFE
 23196                           tosl	equ	0xFFD
 23197                           pclath	equ	0xFFA
 23198                           tblptru	equ	0xFF8
 23199                           tblptrh	equ	0xFF7
 23200                           tblptrl	equ	0xFF6
 23201                           tablat	equ	0xFF5
 23202                           prodh	equ	0xFF4
 23203                           prodl	equ	0xFF3
 23204                           intcon	equ	0xFF2
 23205                           intcon2	equ	0xFF1
 23206                           intcon3	equ	0xFF0
 23207                           indf0	equ	0xFEF
 23208                           postinc0	equ	0xFEE
 23209                           fsr0h	equ	0xFEA
 23210                           fsr0l	equ	0xFE9
 23211                           wreg	equ	0xFE8
 23212                           indf1	equ	0xFE7
 23213                           postinc1	equ	0xFE6
 23214                           postdec1	equ	0xFE5
 23215                           plusw1	equ	0xFE3
 23216                           fsr1h	equ	0xFE2
 23217                           fsr1l	equ	0xFE1
 23218                           indf2	equ	0xFDF
 23219                           postinc2	equ	0xFDE
 23220                           postdec2	equ	0xFDD
 23221                           plusw2	equ	0xFDB
 23222                           fsr2h	equ	0xFDA
 23223                           fsr2l	equ	0xFD9
 23224                           status	equ	0xFD8
 23225                           
 23226 ;; *************** function _atualizaLCD *****************
 23227 ;; Defined at:
 23228 ;;		line 159 in file "src/lcd.h"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 23231 ;;		 -> line1(21), 
 23232 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 23233 ;;		 -> line2(21), 
 23234 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 23235 ;;		 -> line3(21), 
 23236 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 23237 ;;		 -> line4(21), 
 23238 ;; Auto vars:     Size  Location     Type
 23239 ;;  i               1   16[BANK0 ] unsigned char 
 23240 ;; Return value:  Size  Location     Type
 23241 ;;                  1    wreg      void 
 23242 ;; Registers used:
 23243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23244 ;; Tracked objects:
 23245 ;;		On entry : 0/0
 23246 ;;		On exit  : 0/0
 23247 ;;		Unchanged: 0/0
 23248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23249 ;;      Params:         0       8       0       0       0       0       0       0       0
 23250 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23252 ;;      Totals:         0       9       0       0       0       0       0       0       0
 23253 ;;Total ram usage:        9 bytes
 23254 ;; Hardware stack levels used:    1
 23255 ;; Hardware stack levels required when called:    9
 23256 ;; This function calls:
 23257 ;;		_Lcd_Set_Cursor
 23258 ;;		_Lcd_Write_String
 23259 ;; This function is called by:
 23260 ;;		_alterarDadosConexaoConfigWifi
 23261 ;;		_main
 23262 ;; This function uses a non-reentrant model
 23263 ;;
 23264                           
 23265                           	psect	text53
 23266  004DD6                     __ptext53:
 23267                           	opt stack 0
 23268  004DD6                     _atualizaLCD:
 23269                           	opt stack 21
 23270                           
 23271                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 23272                           
 23273                           ; BSR set to: 0
 23274                           ;incstack = 0
 23275  004DD6  0E01               	movlw	1
 23276  004DD8  0100               	movlb	0	; () banked
 23277  004DDA  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23278  004DDC  0E01               	movlw	1
 23279  004DDE  EC0C  F028         	call	_Lcd_Set_Cursor
 23280                           
 23281                           ;lcd.h: 163: Lcd_Write_String(line1);
 23282  004DE2  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 23283  004DE6  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 23284  004DEA  EC58  F02E         	call	_Lcd_Write_String	;wreg free
 23285                           
 23286                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 23287  004DEE  0E01               	movlw	1
 23288  004DF0  0100               	movlb	0	; () banked
 23289  004DF2  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23290  004DF4  0E02               	movlw	2
 23291  004DF6  EC0C  F028         	call	_Lcd_Set_Cursor
 23292                           
 23293                           ;lcd.h: 165: Lcd_Write_String(line2);
 23294  004DFA  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 23295  004DFE  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 23296  004E02  EC58  F02E         	call	_Lcd_Write_String	;wreg free
 23297                           
 23298                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 23299  004E06  0E00               	movlw	0
 23300  004E08  0100               	movlb	0	; () banked
 23301  004E0A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23302  004E0C  0E03               	movlw	3
 23303  004E0E  EC0C  F028         	call	_Lcd_Set_Cursor
 23304                           
 23305                           ;lcd.h: 167: Lcd_Write_String(line3);
 23306  004E12  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 23307  004E16  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 23308  004E1A  EC58  F02E         	call	_Lcd_Write_String	;wreg free
 23309                           
 23310                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 23311  004E1E  0E00               	movlw	0
 23312  004E20  0100               	movlb	0	; () banked
 23313  004E22  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 23314  004E24  0E04               	movlw	4
 23315  004E26  EC0C  F028         	call	_Lcd_Set_Cursor
 23316                           
 23317                           ;lcd.h: 169: Lcd_Write_String(line4);
 23318  004E2A  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 23319  004E2E  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 23320  004E32  EC58  F02E         	call	_Lcd_Write_String	;wreg free
 23321                           
 23322                           ;lcd.h: 171: char i = 0;
 23323  004E36  0E00               	movlw	0
 23324  004E38  0100               	movlb	0	; () banked
 23325  004E3A  6F70               	movwf	atualizaLCD@i& (0+255),b
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 23329  004E3C  0E00               	movlw	0
 23330  004E3E  6F70               	movwf	atualizaLCD@i& (0+255),b
 23331  004E40                     l6754:
 23332                           
 23333                           ; BSR set to: 0
 23334  004E40  0E13               	movlw	19
 23335  004E42  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 23336  004E44  D001               	goto	l268
 23337  004E46  0012               	return	
 23338  004E48                     l268:
 23339                           
 23340                           ; BSR set to: 0
 23341                           ;lcd.h: 173: line1[i] = ' ';
 23342                           
 23343                           ; BSR set to: 0
 23344  004E48  5170               	movf	atualizaLCD@i& (0+255),w,b
 23345  004E4A  0D01               	mullw	1
 23346  004E4C  50F3               	movf	prodl,w,c
 23347  004E4E  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 23348  004E50  6ED9               	movwf	fsr2l,c
 23349  004E52  50F4               	movf	prodh,w,c
 23350  004E54  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 23351  004E56  6EDA               	movwf	fsr2h,c
 23352  004E58  0E20               	movlw	32
 23353  004E5A  6EDF               	movwf	indf2,c
 23354                           
 23355                           ;lcd.h: 174: line2[i] = ' ';
 23356  004E5C  5170               	movf	atualizaLCD@i& (0+255),w,b
 23357  004E5E  0D01               	mullw	1
 23358  004E60  50F3               	movf	prodl,w,c
 23359  004E62  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 23360  004E64  6ED9               	movwf	fsr2l,c
 23361  004E66  50F4               	movf	prodh,w,c
 23362  004E68  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 23363  004E6A  6EDA               	movwf	fsr2h,c
 23364  004E6C  0E20               	movlw	32
 23365  004E6E  6EDF               	movwf	indf2,c
 23366                           
 23367                           ;lcd.h: 175: line3[i] = ' ';
 23368  004E70  5170               	movf	atualizaLCD@i& (0+255),w,b
 23369  004E72  0D01               	mullw	1
 23370  004E74  50F3               	movf	prodl,w,c
 23371  004E76  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 23372  004E78  6ED9               	movwf	fsr2l,c
 23373  004E7A  50F4               	movf	prodh,w,c
 23374  004E7C  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 23375  004E7E  6EDA               	movwf	fsr2h,c
 23376  004E80  0E20               	movlw	32
 23377  004E82  6EDF               	movwf	indf2,c
 23378                           
 23379                           ;lcd.h: 176: line4[i] = ' ';
 23380  004E84  5170               	movf	atualizaLCD@i& (0+255),w,b
 23381  004E86  0D01               	mullw	1
 23382  004E88  50F3               	movf	prodl,w,c
 23383  004E8A  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 23384  004E8C  6ED9               	movwf	fsr2l,c
 23385  004E8E  50F4               	movf	prodh,w,c
 23386  004E90  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 23387  004E92  6EDA               	movwf	fsr2h,c
 23388  004E94  0E20               	movlw	32
 23389  004E96  6EDF               	movwf	indf2,c
 23390                           
 23391                           ; BSR set to: 0
 23392  004E98  2B70               	incf	atualizaLCD@i& (0+255),f,b
 23393  004E9A  D7D2               	goto	l6754
 23394  004E9C                     __end_of_atualizaLCD:
 23395                           	opt stack 0
 23396                           tosu	equ	0xFFF
 23397                           tosh	equ	0xFFE
 23398                           tosl	equ	0xFFD
 23399                           pclath	equ	0xFFA
 23400                           tblptru	equ	0xFF8
 23401                           tblptrh	equ	0xFF7
 23402                           tblptrl	equ	0xFF6
 23403                           tablat	equ	0xFF5
 23404                           prodh	equ	0xFF4
 23405                           prodl	equ	0xFF3
 23406                           intcon	equ	0xFF2
 23407                           intcon2	equ	0xFF1
 23408                           intcon3	equ	0xFF0
 23409                           indf0	equ	0xFEF
 23410                           postinc0	equ	0xFEE
 23411                           fsr0h	equ	0xFEA
 23412                           fsr0l	equ	0xFE9
 23413                           wreg	equ	0xFE8
 23414                           indf1	equ	0xFE7
 23415                           postinc1	equ	0xFE6
 23416                           postdec1	equ	0xFE5
 23417                           plusw1	equ	0xFE3
 23418                           fsr1h	equ	0xFE2
 23419                           fsr1l	equ	0xFE1
 23420                           indf2	equ	0xFDF
 23421                           postinc2	equ	0xFDE
 23422                           postdec2	equ	0xFDD
 23423                           plusw2	equ	0xFDB
 23424                           fsr2h	equ	0xFDA
 23425                           fsr2l	equ	0xFD9
 23426                           status	equ	0xFD8
 23427                           
 23428 ;; *************** function _Lcd_Write_String *****************
 23429 ;; Defined at:
 23430 ;;		line 137 in file "src/lcd.h"
 23431 ;; Parameters:    Size  Location     Type
 23432 ;;  a               2    4[BANK0 ] PTR unsigned char 
 23433 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 23434 ;; Auto vars:     Size  Location     Type
 23435 ;;  i               1    6[BANK0 ] unsigned char 
 23436 ;; Return value:  Size  Location     Type
 23437 ;;                  1    wreg      void 
 23438 ;; Registers used:
 23439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23440 ;; Tracked objects:
 23441 ;;		On entry : 0/0
 23442 ;;		On exit  : 0/0
 23443 ;;		Unchanged: 0/0
 23444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23445 ;;      Params:         0       2       0       0       0       0       0       0       0
 23446 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23448 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23449 ;;Total ram usage:        3 bytes
 23450 ;; Hardware stack levels used:    1
 23451 ;; Hardware stack levels required when called:    8
 23452 ;; This function calls:
 23453 ;;		_Lcd_Write_Char
 23454 ;; This function is called by:
 23455 ;;		_atualizaLCD
 23456 ;; This function uses a non-reentrant model
 23457 ;;
 23458                           
 23459                           	psect	text54
 23460  005CB0                     __ptext54:
 23461                           	opt stack 0
 23462  005CB0                     _Lcd_Write_String:
 23463                           	opt stack 21
 23464                           
 23465                           ;lcd.h: 138: unsigned char i = 0;
 23466                           
 23467                           ; BSR set to: 0
 23468                           ;incstack = 0
 23469  005CB0  0E00               	movlw	0
 23470  005CB2  0100               	movlb	0	; () banked
 23471  005CB4  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23472                           
 23473                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 23474  005CB6  0E00               	movlw	0
 23475  005CB8  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 23476  005CBA                     l6608:
 23477                           
 23478                           ; BSR set to: 0
 23479  005CBA  0E13               	movlw	19
 23480  005CBC  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 23481  005CBE  D001               	goto	l263
 23482  005CC0  0012               	return	
 23483  005CC2                     l263:
 23484                           
 23485                           ; BSR set to: 0
 23486                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 23487                           
 23488                           ; BSR set to: 0
 23489  005CC2  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 23490  005CC4  0D01               	mullw	1
 23491  005CC6  50F3               	movf	prodl,w,c
 23492  005CC8  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 23493  005CCA  6ED9               	movwf	fsr2l,c
 23494  005CCC  50F4               	movf	prodh,w,c
 23495  005CCE  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 23496  005CD0  6EDA               	movwf	fsr2h,c
 23497  005CD2  50DF               	movf	indf2,w,c
 23498  005CD4  EC6D  F02D         	call	_Lcd_Write_Char
 23499  005CD8  0100               	movlb	0	; () banked
 23500  005CDA  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 23501  005CDC  D7EE               	goto	l6608
 23502  005CDE                     __end_of_Lcd_Write_String:
 23503                           	opt stack 0
 23504                           tosu	equ	0xFFF
 23505                           tosh	equ	0xFFE
 23506                           tosl	equ	0xFFD
 23507                           pclath	equ	0xFFA
 23508                           tblptru	equ	0xFF8
 23509                           tblptrh	equ	0xFF7
 23510                           tblptrl	equ	0xFF6
 23511                           tablat	equ	0xFF5
 23512                           prodh	equ	0xFF4
 23513                           prodl	equ	0xFF3
 23514                           intcon	equ	0xFF2
 23515                           intcon2	equ	0xFF1
 23516                           intcon3	equ	0xFF0
 23517                           indf0	equ	0xFEF
 23518                           postinc0	equ	0xFEE
 23519                           fsr0h	equ	0xFEA
 23520                           fsr0l	equ	0xFE9
 23521                           wreg	equ	0xFE8
 23522                           indf1	equ	0xFE7
 23523                           postinc1	equ	0xFE6
 23524                           postdec1	equ	0xFE5
 23525                           plusw1	equ	0xFE3
 23526                           fsr1h	equ	0xFE2
 23527                           fsr1l	equ	0xFE1
 23528                           indf2	equ	0xFDF
 23529                           postinc2	equ	0xFDE
 23530                           postdec2	equ	0xFDD
 23531                           plusw2	equ	0xFDB
 23532                           fsr2h	equ	0xFDA
 23533                           fsr2l	equ	0xFD9
 23534                           status	equ	0xFD8
 23535                           
 23536 ;; *************** function _Lcd_Write_Char *****************
 23537 ;; Defined at:
 23538 ;;		line 122 in file "src/lcd.h"
 23539 ;; Parameters:    Size  Location     Type
 23540 ;;  a               1    wreg     unsigned char 
 23541 ;; Auto vars:     Size  Location     Type
 23542 ;;  a               1    3[BANK0 ] unsigned char 
 23543 ;;  y               1    2[BANK0 ] unsigned char 
 23544 ;;  tempp           1    1[BANK0 ] unsigned char 
 23545 ;; Return value:  Size  Location     Type
 23546 ;;                  1    wreg      void 
 23547 ;; Registers used:
 23548 ;;		wreg, status,2, status,0, cstack
 23549 ;; Tracked objects:
 23550 ;;		On entry : 0/0
 23551 ;;		On exit  : 0/0
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23554 ;;      Params:         0       0       0       0       0       0       0       0       0
 23555 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23557 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23558 ;;Total ram usage:        3 bytes
 23559 ;; Hardware stack levels used:    1
 23560 ;; Hardware stack levels required when called:    7
 23561 ;; This function calls:
 23562 ;;		_Lcd_Port
 23563 ;; This function is called by:
 23564 ;;		_Lcd_Write_String
 23565 ;;		_criaCaracteresCGRAM
 23566 ;; This function uses a non-reentrant model
 23567 ;;
 23568                           
 23569                           	psect	text55
 23570  005ADA                     __ptext55:
 23571                           	opt stack 0
 23572  005ADA                     _Lcd_Write_Char:
 23573                           	opt stack 22
 23574                           
 23575                           ; BSR set to: 0
 23576                           ;incstack = 0
 23577                           ;Lcd_Write_Char@a stored from wreg
 23578  005ADA  0100               	movlb	0	; () banked
 23579  005ADC  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 23580                           
 23581                           ;lcd.h: 123: char tempp, y;
 23582                           ;lcd.h: 124: tempp = a & 0x0F;
 23583  005ADE  0100               	movlb	0	; () banked
 23584  005AE0  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23585  005AE2  0B0F               	andlw	15
 23586  005AE4  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 23587                           
 23588                           ;lcd.h: 125: y = a & 0xF0;
 23589  005AE6  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 23590  005AE8  0BF0               	andlw	240
 23591  005AEA  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 23595  005AEC  8483               	bsf	3971,2,c	;volatile
 23596                           
 23597                           ; BSR set to: 0
 23598                           ;lcd.h: 127: Lcd_Port(y >> 4);
 23599  005AEE  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 23600  005AF0  0B0F               	andlw	15
 23601  005AF2  EC40  F02E         	call	_Lcd_Port
 23602                           
 23603                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 23604  005AF6  8683               	bsf	3971,3,c	;volatile
 23605                           
 23606                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23607  005AF8  0E1A               	movlw	26
 23608  005AFA                     u15567:
 23609  005AFA  2EE8               	decfsz	wreg,f,c
 23610  005AFC  D7FE               	bra	u15567
 23611  005AFE  D000               	nop2	
 23612                           
 23613                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 23614  005B00  9683               	bcf	3971,3,c	;volatile
 23615                           
 23616                           ;lcd.h: 131: Lcd_Port(tempp);
 23617  005B02  0100               	movlb	0	; () banked
 23618  005B04  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 23619  005B06  EC40  F02E         	call	_Lcd_Port
 23620                           
 23621                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 23622  005B0A  8683               	bsf	3971,3,c	;volatile
 23623                           
 23624                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 23625  005B0C  0E1A               	movlw	26
 23626  005B0E                     u15577:
 23627  005B0E  2EE8               	decfsz	wreg,f,c
 23628  005B10  D7FE               	bra	u15577
 23629  005B12  D000               	nop2	
 23630                           
 23631                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 23632  005B14  9683               	bcf	3971,3,c	;volatile
 23633  005B16  0012               	return		;funcret
 23634  005B18                     __end_of_Lcd_Write_Char:
 23635                           	opt stack 0
 23636                           tosu	equ	0xFFF
 23637                           tosh	equ	0xFFE
 23638                           tosl	equ	0xFFD
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           intcon2	equ	0xFF1
 23648                           intcon3	equ	0xFF0
 23649                           indf0	equ	0xFEF
 23650                           postinc0	equ	0xFEE
 23651                           fsr0h	equ	0xFEA
 23652                           fsr0l	equ	0xFE9
 23653                           wreg	equ	0xFE8
 23654                           indf1	equ	0xFE7
 23655                           postinc1	equ	0xFE6
 23656                           postdec1	equ	0xFE5
 23657                           plusw1	equ	0xFE3
 23658                           fsr1h	equ	0xFE2
 23659                           fsr1l	equ	0xFE1
 23660                           indf2	equ	0xFDF
 23661                           postinc2	equ	0xFDE
 23662                           postdec2	equ	0xFDD
 23663                           plusw2	equ	0xFDB
 23664                           fsr2h	equ	0xFDA
 23665                           fsr2l	equ	0xFD9
 23666                           status	equ	0xFD8
 23667                           
 23668 ;; *************** function _Lcd_Set_Cursor *****************
 23669 ;; Defined at:
 23670 ;;		line 87 in file "src/lcd.h"
 23671 ;; Parameters:    Size  Location     Type
 23672 ;;  a               1    wreg     unsigned char 
 23673 ;;  b               1    3[BANK0 ] unsigned char 
 23674 ;; Auto vars:     Size  Location     Type
 23675 ;;  a               1    4[BANK0 ] unsigned char 
 23676 ;;  temp            1    7[BANK0 ] unsigned char 
 23677 ;;  y               1    6[BANK0 ] unsigned char 
 23678 ;;  z               1    5[BANK0 ] unsigned char 
 23679 ;; Return value:  Size  Location     Type
 23680 ;;                  1    wreg      void 
 23681 ;; Registers used:
 23682 ;;		wreg, status,2, status,0, cstack
 23683 ;; Tracked objects:
 23684 ;;		On entry : 0/0
 23685 ;;		On exit  : 0/0
 23686 ;;		Unchanged: 0/0
 23687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23688 ;;      Params:         0       1       0       0       0       0       0       0       0
 23689 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23691 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23692 ;;Total ram usage:        5 bytes
 23693 ;; Hardware stack levels used:    1
 23694 ;; Hardware stack levels required when called:    8
 23695 ;; This function calls:
 23696 ;;		_Lcd_Cmd
 23697 ;; This function is called by:
 23698 ;;		_atualizaLCD
 23699 ;; This function uses a non-reentrant model
 23700 ;;
 23701                           
 23702                           	psect	text56
 23703  005018                     __ptext56:
 23704                           	opt stack 0
 23705  005018                     _Lcd_Set_Cursor:
 23706                           	opt stack 21
 23707                           
 23708                           ;incstack = 0
 23709                           ;Lcd_Set_Cursor@a stored from wreg
 23710  005018  0100               	movlb	0	; () banked
 23711  00501A  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 23712                           
 23713                           ;lcd.h: 88: char temp, z, y;
 23714                           ;lcd.h: 89: switch (a) {
 23715  00501C  D048               	goto	l250
 23716  00501E                     
 23717                           ;lcd.h: 91: temp = 0x80 + b - 1;
 23718  00501E  0100               	movlb	0	; () banked
 23719  005020  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23720  005022  0F7F               	addlw	127
 23721  005024  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23722                           
 23723                           ;lcd.h: 92: z = temp >> 4;
 23724  005026  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23725  005028  0B0F               	andlw	15
 23726  00502A  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23727                           
 23728                           ;lcd.h: 93: y = temp & 0x0F;
 23729  00502C  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23730  00502E  0B0F               	andlw	15
 23731  005030  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23732                           
 23733                           ; BSR set to: 0
 23734                           ;lcd.h: 94: Lcd_Cmd(z);
 23735  005032  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23736  005034  ECEA  F02E         	call	_Lcd_Cmd
 23737                           
 23738                           ;lcd.h: 95: Lcd_Cmd(y);
 23739  005038  0100               	movlb	0	; () banked
 23740  00503A  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23741  00503C  ECEA  F02E         	call	_Lcd_Cmd
 23742                           
 23743                           ;lcd.h: 96: break;
 23744  005040  0012               	return	
 23745  005042                     
 23746                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 23747  005042  0100               	movlb	0	; () banked
 23748  005044  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23749  005046  0FBF               	addlw	191
 23750  005048  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23751                           
 23752                           ;lcd.h: 99: z = temp >> 4;
 23753  00504A  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23754  00504C  0B0F               	andlw	15
 23755  00504E  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23756                           
 23757                           ;lcd.h: 100: y = temp & 0x0F;
 23758  005050  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23759  005052  0B0F               	andlw	15
 23760  005054  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23761                           
 23762                           ; BSR set to: 0
 23763                           ;lcd.h: 101: Lcd_Cmd(z);
 23764  005056  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23765  005058  ECEA  F02E         	call	_Lcd_Cmd
 23766                           
 23767                           ;lcd.h: 102: Lcd_Cmd(y);
 23768  00505C  0100               	movlb	0	; () banked
 23769  00505E  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23770  005060  ECEA  F02E         	call	_Lcd_Cmd
 23771                           
 23772                           ;lcd.h: 103: break;
 23773  005064  0012               	return	
 23774  005066                     
 23775                           ;lcd.h: 105: temp = 0x94 + b;
 23776  005066  0100               	movlb	0	; () banked
 23777  005068  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23778  00506A  0F94               	addlw	148
 23779  00506C  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23780                           
 23781                           ;lcd.h: 106: z = temp >> 4;
 23782  00506E  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23783  005070  0B0F               	andlw	15
 23784  005072  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23785                           
 23786                           ;lcd.h: 107: y = temp & 0x0F;
 23787  005074  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23788  005076  0B0F               	andlw	15
 23789  005078  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;lcd.h: 108: Lcd_Cmd(z);
 23793  00507A  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23794  00507C  ECEA  F02E         	call	_Lcd_Cmd
 23795                           
 23796                           ;lcd.h: 109: Lcd_Cmd(y);
 23797  005080  0100               	movlb	0	; () banked
 23798  005082  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23799  005084  ECEA  F02E         	call	_Lcd_Cmd
 23800                           
 23801                           ;lcd.h: 110: break;
 23802  005088  0012               	return	
 23803  00508A                     
 23804                           ;lcd.h: 112: temp = 0xD4 + b;
 23805  00508A  0100               	movlb	0	; () banked
 23806  00508C  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23807  00508E  0FD4               	addlw	212
 23808  005090  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23809                           
 23810                           ;lcd.h: 113: z = temp >> 4;
 23811  005092  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23812  005094  0B0F               	andlw	15
 23813  005096  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23814                           
 23815                           ;lcd.h: 114: y = temp & 0x0F;
 23816  005098  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23817  00509A  0B0F               	andlw	15
 23818  00509C  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23819                           
 23820                           ; BSR set to: 0
 23821                           ;lcd.h: 115: Lcd_Cmd(z);
 23822  00509E  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23823  0050A0  ECEA  F02E         	call	_Lcd_Cmd
 23824                           
 23825                           ;lcd.h: 116: Lcd_Cmd(y);
 23826  0050A4  0100               	movlb	0	; () banked
 23827  0050A6  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23828  0050A8  ECEA  F02E         	call	_Lcd_Cmd
 23829                           
 23830                           ;lcd.h: 119: }
 23831                           
 23832                           ;lcd.h: 118: default:return;
 23833                           
 23834                           ;lcd.h: 117: break;
 23835  0050AC  0012               	return	
 23836  0050AE                     l250:
 23837  0050AE  0100               	movlb	0	; () banked
 23838  0050B0  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 23839                           
 23840                           ; Switch size 1, requested type "space"
 23841                           ; Number of cases is 4, Range of values is 1 to 4
 23842                           ; switch strategies available:
 23843                           ; Name         Instructions Cycles
 23844                           ; simple_byte           13     7 (average)
 23845                           ;	Chosen strategy is simple_byte
 23846  0050B2  0A01               	xorlw	1	; case 1
 23847  0050B4  B4D8               	btfsc	status,2,c
 23848  0050B6  D7B3               	goto	l251
 23849  0050B8  0A03               	xorlw	3	; case 2
 23850  0050BA  B4D8               	btfsc	status,2,c
 23851  0050BC  D7C2               	goto	l253
 23852  0050BE  0A01               	xorlw	1	; case 3
 23853  0050C0  B4D8               	btfsc	status,2,c
 23854  0050C2  D7D1               	goto	l254
 23855  0050C4  0A07               	xorlw	7	; case 4
 23856  0050C6  A4D8               	btfss	status,2,c
 23857  0050C8  0012               	return	
 23858  0050CA  D7DF               	goto	l255
 23859  0050CC                     __end_of_Lcd_Set_Cursor:
 23860                           	opt stack 0
 23861                           tosu	equ	0xFFF
 23862                           tosh	equ	0xFFE
 23863                           tosl	equ	0xFFD
 23864                           pclath	equ	0xFFA
 23865                           tblptru	equ	0xFF8
 23866                           tblptrh	equ	0xFF7
 23867                           tblptrl	equ	0xFF6
 23868                           tablat	equ	0xFF5
 23869                           prodh	equ	0xFF4
 23870                           prodl	equ	0xFF3
 23871                           intcon	equ	0xFF2
 23872                           intcon2	equ	0xFF1
 23873                           intcon3	equ	0xFF0
 23874                           indf0	equ	0xFEF
 23875                           postinc0	equ	0xFEE
 23876                           fsr0h	equ	0xFEA
 23877                           fsr0l	equ	0xFE9
 23878                           wreg	equ	0xFE8
 23879                           indf1	equ	0xFE7
 23880                           postinc1	equ	0xFE6
 23881                           postdec1	equ	0xFE5
 23882                           plusw1	equ	0xFE3
 23883                           fsr1h	equ	0xFE2
 23884                           fsr1l	equ	0xFE1
 23885                           indf2	equ	0xFDF
 23886                           postinc2	equ	0xFDE
 23887                           postdec2	equ	0xFDD
 23888                           plusw2	equ	0xFDB
 23889                           fsr2h	equ	0xFDA
 23890                           fsr2l	equ	0xFD9
 23891                           status	equ	0xFD8
 23892                           
 23893 ;; *************** function _UART_Init *****************
 23894 ;; Defined at:
 23895 ;;		line 9 in file "src/USART.h"
 23896 ;; Parameters:    Size  Location     Type
 23897 ;;		None
 23898 ;; Auto vars:     Size  Location     Type
 23899 ;;		None
 23900 ;; Return value:  Size  Location     Type
 23901 ;;                  1    wreg      void 
 23902 ;; Registers used:
 23903 ;;		wreg, status,2
 23904 ;; Tracked objects:
 23905 ;;		On entry : 0/0
 23906 ;;		On exit  : 0/0
 23907 ;;		Unchanged: 0/0
 23908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23909 ;;      Params:         0       0       0       0       0       0       0       0       0
 23910 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23912 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23913 ;;Total ram usage:        0 bytes
 23914 ;; Hardware stack levels used:    1
 23915 ;; Hardware stack levels required when called:    6
 23916 ;; This function calls:
 23917 ;;		Nothing
 23918 ;; This function is called by:
 23919 ;;		_main
 23920 ;; This function uses a non-reentrant model
 23921 ;;
 23922                           
 23923                           	psect	text57
 23924  005E9E                     __ptext57:
 23925                           	opt stack 0
 23926  005E9E                     _UART_Init:
 23927                           	opt stack 24
 23928                           
 23929                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 23930                           
 23931                           ;incstack = 0
 23932  005E9E  9C94               	bcf	3988,6,c	;volatile
 23933                           
 23934                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 23935  005EA0  8E94               	bsf	3988,7,c	;volatile
 23936                           
 23937                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 23938  005EA2  8AAC               	bsf	4012,5,c	;volatile
 23939                           
 23940                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 23941  005EA4  84AC               	bsf	4012,2,c	;volatile
 23942                           
 23943                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 23944  005EA6  98AC               	bcf	4012,4,c	;volatile
 23945                           
 23946                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 23947  005EA8  8EAB               	bsf	4011,7,c	;volatile
 23948                           
 23949                           ;USART.h: 20: RCSTAbits.CREN = 1;
 23950  005EAA  88AB               	bsf	4011,4,c	;volatile
 23951                           
 23952                           ;USART.h: 25: SPBRG = 25;
 23953  005EAC  0E19               	movlw	25
 23954  005EAE  6EAF               	movwf	4015,c	;volatile
 23955                           
 23956                           ;USART.h: 28: INTCONbits.GIE = 1;
 23957  005EB0  8EF2               	bsf	intcon,7,c	;volatile
 23958                           
 23959                           ;USART.h: 29: INTCONbits.PEIE = 1;
 23960  005EB2  8CF2               	bsf	intcon,6,c	;volatile
 23961                           
 23962                           ;USART.h: 31: PIR1bits.RCIF = 0;
 23963  005EB4  9A9E               	bcf	3998,5,c	;volatile
 23964                           
 23965                           ;USART.h: 32: PIE1bits.RCIE = 1;
 23966  005EB6  8A9D               	bsf	3997,5,c	;volatile
 23967  005EB8  0012               	return		;funcret
 23968  005EBA                     __end_of_UART_Init:
 23969                           	opt stack 0
 23970                           tosu	equ	0xFFF
 23971                           tosh	equ	0xFFE
 23972                           tosl	equ	0xFFD
 23973                           pclath	equ	0xFFA
 23974                           tblptru	equ	0xFF8
 23975                           tblptrh	equ	0xFF7
 23976                           tblptrl	equ	0xFF6
 23977                           tablat	equ	0xFF5
 23978                           prodh	equ	0xFF4
 23979                           prodl	equ	0xFF3
 23980                           intcon	equ	0xFF2
 23981                           intcon2	equ	0xFF1
 23982                           intcon3	equ	0xFF0
 23983                           indf0	equ	0xFEF
 23984                           postinc0	equ	0xFEE
 23985                           fsr0h	equ	0xFEA
 23986                           fsr0l	equ	0xFE9
 23987                           wreg	equ	0xFE8
 23988                           indf1	equ	0xFE7
 23989                           postinc1	equ	0xFE6
 23990                           postdec1	equ	0xFE5
 23991                           plusw1	equ	0xFE3
 23992                           fsr1h	equ	0xFE2
 23993                           fsr1l	equ	0xFE1
 23994                           indf2	equ	0xFDF
 23995                           postinc2	equ	0xFDE
 23996                           postdec2	equ	0xFDD
 23997                           plusw2	equ	0xFDB
 23998                           fsr2h	equ	0xFDA
 23999                           fsr2l	equ	0xFD9
 24000                           status	equ	0xFD8
 24001                           
 24002 ;; *************** function _Lcd_Init *****************
 24003 ;; Defined at:
 24004 ;;		line 17 in file "src/lcd.h"
 24005 ;; Parameters:    Size  Location     Type
 24006 ;;		None
 24007 ;; Auto vars:     Size  Location     Type
 24008 ;;		None
 24009 ;; Return value:  Size  Location     Type
 24010 ;;                  1    wreg      void 
 24011 ;; Registers used:
 24012 ;;		wreg, status,2, cstack
 24013 ;; Tracked objects:
 24014 ;;		On entry : 0/0
 24015 ;;		On exit  : 0/0
 24016 ;;		Unchanged: 0/0
 24017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24018 ;;      Params:         0       0       0       0       0       0       0       0       0
 24019 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24020 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24021 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24022 ;;Total ram usage:        1 bytes
 24023 ;; Hardware stack levels used:    1
 24024 ;; Hardware stack levels required when called:    8
 24025 ;; This function calls:
 24026 ;;		_Lcd_Cmd
 24027 ;;		_Lcd_Port
 24028 ;; This function is called by:
 24029 ;;		_main
 24030 ;; This function uses a non-reentrant model
 24031 ;;
 24032                           
 24033                           	psect	text58
 24034  0055B6                     __ptext58:
 24035                           	opt stack 0
 24036  0055B6                     _Lcd_Init:
 24037                           	opt stack 22
 24038                           
 24039                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 24040                           
 24041                           ;incstack = 0
 24042  0055B6  9E95               	bcf	3989,7,c	;volatile
 24043                           
 24044                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 24045  0055B8  9C95               	bcf	3989,6,c	;volatile
 24046                           
 24047                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 24048  0055BA  9A95               	bcf	3989,5,c	;volatile
 24049                           
 24050                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 24051  0055BC  9895               	bcf	3989,4,c	;volatile
 24052                           
 24053                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 24054  0055BE  9695               	bcf	3989,3,c	;volatile
 24055                           
 24056                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 24057  0055C0  9495               	bcf	3989,2,c	;volatile
 24058                           
 24059                           ;lcd.h: 35: Lcd_Port(0x00);
 24060  0055C2  0E00               	movlw	0
 24061  0055C4  EC40  F02E         	call	_Lcd_Port
 24062                           
 24063                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 24064  0055C8  0E34               	movlw	52
 24065  0055CA  0100               	movlb	0	; () banked
 24066  0055CC  6F63               	movwf	??_Lcd_Init& (0+255),b
 24067  0055CE  0EF1               	movlw	241
 24068  0055D0                     u15587:
 24069  0055D0  2EE8               	decfsz	wreg,f,c
 24070  0055D2  D7FE               	bra	u15587
 24071  0055D4  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24072  0055D6  D7FC               	bra	u15587
 24073  0055D8  D000               	nop2	
 24074                           
 24075                           ;lcd.h: 37: Lcd_Cmd(0x03);
 24076  0055DA  0E03               	movlw	3
 24077  0055DC  ECEA  F02E         	call	_Lcd_Cmd
 24078                           
 24079                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 24080  0055E0  0E0D               	movlw	13
 24081  0055E2  0100               	movlb	0	; () banked
 24082  0055E4  6F63               	movwf	??_Lcd_Init& (0+255),b
 24083  0055E6  0EFB               	movlw	251
 24084  0055E8                     u15597:
 24085  0055E8  2EE8               	decfsz	wreg,f,c
 24086  0055EA  D7FE               	bra	u15597
 24087  0055EC  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24088  0055EE  D7FC               	bra	u15597
 24089  0055F0  D000               	nop2	
 24090                           
 24091                           ;lcd.h: 39: Lcd_Cmd(0x03);
 24092  0055F2  0E03               	movlw	3
 24093  0055F4  ECEA  F02E         	call	_Lcd_Cmd
 24094                           
 24095                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 24096  0055F8  0E1D               	movlw	29
 24097  0055FA  0100               	movlb	0	; () banked
 24098  0055FC  6F63               	movwf	??_Lcd_Init& (0+255),b
 24099  0055FE  0E91               	movlw	145
 24100  005600                     u15607:
 24101  005600  2EE8               	decfsz	wreg,f,c
 24102  005602  D7FE               	bra	u15607
 24103  005604  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 24104  005606  D7FC               	bra	u15607
 24105                           
 24106                           ;lcd.h: 41: Lcd_Cmd(0x03);
 24107  005608  0E03               	movlw	3
 24108  00560A  ECEA  F02E         	call	_Lcd_Cmd
 24109                           
 24110                           ;lcd.h: 43: Lcd_Cmd(0x02);
 24111  00560E  0E02               	movlw	2
 24112  005610  ECEA  F02E         	call	_Lcd_Cmd
 24113                           
 24114                           ;lcd.h: 44: Lcd_Cmd(0x02);
 24115  005614  0E02               	movlw	2
 24116  005616  ECEA  F02E         	call	_Lcd_Cmd
 24117                           
 24118                           ;lcd.h: 45: Lcd_Cmd(0x08);
 24119  00561A  0E08               	movlw	8
 24120  00561C  ECEA  F02E         	call	_Lcd_Cmd
 24121                           
 24122                           ;lcd.h: 46: Lcd_Cmd(0x00);
 24123  005620  0E00               	movlw	0
 24124  005622  ECEA  F02E         	call	_Lcd_Cmd
 24125                           
 24126                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 24127  005626  0E0C               	movlw	12
 24128  005628  ECEA  F02E         	call	_Lcd_Cmd
 24129                           
 24130                           ;lcd.h: 48: Lcd_Cmd(0x00);
 24131  00562C  0E00               	movlw	0
 24132  00562E  ECEA  F02E         	call	_Lcd_Cmd
 24133                           
 24134                           ;lcd.h: 49: Lcd_Cmd(0x06);
 24135  005632  0E06               	movlw	6
 24136  005634  ECEA  F02E         	call	_Lcd_Cmd
 24137  005638  0012               	return		;funcret
 24138  00563A                     __end_of_Lcd_Init:
 24139                           	opt stack 0
 24140                           tosu	equ	0xFFF
 24141                           tosh	equ	0xFFE
 24142                           tosl	equ	0xFFD
 24143                           pclath	equ	0xFFA
 24144                           tblptru	equ	0xFF8
 24145                           tblptrh	equ	0xFF7
 24146                           tblptrl	equ	0xFF6
 24147                           tablat	equ	0xFF5
 24148                           prodh	equ	0xFF4
 24149                           prodl	equ	0xFF3
 24150                           intcon	equ	0xFF2
 24151                           intcon2	equ	0xFF1
 24152                           intcon3	equ	0xFF0
 24153                           indf0	equ	0xFEF
 24154                           postinc0	equ	0xFEE
 24155                           fsr0h	equ	0xFEA
 24156                           fsr0l	equ	0xFE9
 24157                           wreg	equ	0xFE8
 24158                           indf1	equ	0xFE7
 24159                           postinc1	equ	0xFE6
 24160                           postdec1	equ	0xFE5
 24161                           plusw1	equ	0xFE3
 24162                           fsr1h	equ	0xFE2
 24163                           fsr1l	equ	0xFE1
 24164                           indf2	equ	0xFDF
 24165                           postinc2	equ	0xFDE
 24166                           postdec2	equ	0xFDD
 24167                           plusw2	equ	0xFDB
 24168                           fsr2h	equ	0xFDA
 24169                           fsr2l	equ	0xFD9
 24170                           status	equ	0xFD8
 24171                           
 24172 ;; *************** function _Lcd_Clear *****************
 24173 ;; Defined at:
 24174 ;;		line 82 in file "src/lcd.h"
 24175 ;; Parameters:    Size  Location     Type
 24176 ;;		None
 24177 ;; Auto vars:     Size  Location     Type
 24178 ;;		None
 24179 ;; Return value:  Size  Location     Type
 24180 ;;                  1    wreg      void 
 24181 ;; Registers used:
 24182 ;;		wreg, status,2, cstack
 24183 ;; Tracked objects:
 24184 ;;		On entry : 0/0
 24185 ;;		On exit  : 0/0
 24186 ;;		Unchanged: 0/0
 24187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24188 ;;      Params:         0       0       0       0       0       0       0       0       0
 24189 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24190 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24191 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24192 ;;Total ram usage:        0 bytes
 24193 ;; Hardware stack levels used:    1
 24194 ;; Hardware stack levels required when called:    8
 24195 ;; This function calls:
 24196 ;;		_Lcd_Cmd
 24197 ;; This function is called by:
 24198 ;;		_main
 24199 ;; This function uses a non-reentrant model
 24200 ;;
 24201                           
 24202                           	psect	text59
 24203  005EEE                     __ptext59:
 24204                           	opt stack 0
 24205  005EEE                     _Lcd_Clear:
 24206                           	opt stack 22
 24207                           
 24208                           ;lcd.h: 83: Lcd_Cmd(0);
 24209                           
 24210                           ;incstack = 0
 24211  005EEE  0E00               	movlw	0
 24212  005EF0  ECEA  F02E         	call	_Lcd_Cmd
 24213                           
 24214                           ;lcd.h: 84: Lcd_Cmd(1);
 24215  005EF4  0E01               	movlw	1
 24216  005EF6  ECEA  F02E         	call	_Lcd_Cmd
 24217  005EFA  0012               	return		;funcret
 24218  005EFC                     __end_of_Lcd_Clear:
 24219                           	opt stack 0
 24220                           tosu	equ	0xFFF
 24221                           tosh	equ	0xFFE
 24222                           tosl	equ	0xFFD
 24223                           pclath	equ	0xFFA
 24224                           tblptru	equ	0xFF8
 24225                           tblptrh	equ	0xFF7
 24226                           tblptrl	equ	0xFF6
 24227                           tablat	equ	0xFF5
 24228                           prodh	equ	0xFF4
 24229                           prodl	equ	0xFF3
 24230                           intcon	equ	0xFF2
 24231                           intcon2	equ	0xFF1
 24232                           intcon3	equ	0xFF0
 24233                           indf0	equ	0xFEF
 24234                           postinc0	equ	0xFEE
 24235                           fsr0h	equ	0xFEA
 24236                           fsr0l	equ	0xFE9
 24237                           wreg	equ	0xFE8
 24238                           indf1	equ	0xFE7
 24239                           postinc1	equ	0xFE6
 24240                           postdec1	equ	0xFE5
 24241                           plusw1	equ	0xFE3
 24242                           fsr1h	equ	0xFE2
 24243                           fsr1l	equ	0xFE1
 24244                           indf2	equ	0xFDF
 24245                           postinc2	equ	0xFDE
 24246                           postdec2	equ	0xFDD
 24247                           plusw2	equ	0xFDB
 24248                           fsr2h	equ	0xFDA
 24249                           fsr2l	equ	0xFD9
 24250                           status	equ	0xFD8
 24251                           
 24252 ;; *************** function _Lcd_Cmd *****************
 24253 ;; Defined at:
 24254 ;;		line 74 in file "src/lcd.h"
 24255 ;; Parameters:    Size  Location     Type
 24256 ;;  a               1    wreg     unsigned char 
 24257 ;; Auto vars:     Size  Location     Type
 24258 ;;  a               1    2[BANK0 ] unsigned char 
 24259 ;; Return value:  Size  Location     Type
 24260 ;;                  1    wreg      void 
 24261 ;; Registers used:
 24262 ;;		wreg, status,2, cstack
 24263 ;; Tracked objects:
 24264 ;;		On entry : 0/0
 24265 ;;		On exit  : 0/0
 24266 ;;		Unchanged: 0/0
 24267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24268 ;;      Params:         0       0       0       0       0       0       0       0       0
 24269 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24270 ;;      Temps:          0       1       0       0       0       0       0       0       0
 24271 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24272 ;;Total ram usage:        2 bytes
 24273 ;; Hardware stack levels used:    1
 24274 ;; Hardware stack levels required when called:    7
 24275 ;; This function calls:
 24276 ;;		_Lcd_Port
 24277 ;; This function is called by:
 24278 ;;		_Lcd_Init
 24279 ;;		_Lcd_Clear
 24280 ;;		_Lcd_Set_Cursor
 24281 ;;		_criaCaracteresCGRAM
 24282 ;; This function uses a non-reentrant model
 24283 ;;
 24284                           
 24285                           	psect	text60
 24286  005DD4                     __ptext60:
 24287                           	opt stack 0
 24288  005DD4                     _Lcd_Cmd:
 24289                           	opt stack 22
 24290                           
 24291                           ;incstack = 0
 24292                           ;Lcd_Cmd@a stored from wreg
 24293  005DD4  0100               	movlb	0	; () banked
 24294  005DD6  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 24295                           
 24296                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 24297  005DD8  9483               	bcf	3971,2,c	;volatile
 24298                           
 24299                           ;lcd.h: 76: Lcd_Port(a);
 24300  005DDA  0100               	movlb	0	; () banked
 24301  005DDC  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 24302  005DDE  EC40  F02E         	call	_Lcd_Port
 24303                           
 24304                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 24305  005DE2  8683               	bsf	3971,3,c	;volatile
 24306                           
 24307                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 24308  005DE4  0E0B               	movlw	11
 24309  005DE6  0100               	movlb	0	; () banked
 24310  005DE8  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 24311  005DEA  0E62               	movlw	98
 24312  005DEC                     u15617:
 24313  005DEC  2EE8               	decfsz	wreg,f,c
 24314  005DEE  D7FE               	bra	u15617
 24315  005DF0  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 24316  005DF2  D7FC               	bra	u15617
 24317  005DF4  F000               	nop	
 24318                           
 24319                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 24320  005DF6  9683               	bcf	3971,3,c	;volatile
 24321  005DF8  0012               	return		;funcret
 24322  005DFA                     __end_of_Lcd_Cmd:
 24323                           	opt stack 0
 24324                           tosu	equ	0xFFF
 24325                           tosh	equ	0xFFE
 24326                           tosl	equ	0xFFD
 24327                           pclath	equ	0xFFA
 24328                           tblptru	equ	0xFF8
 24329                           tblptrh	equ	0xFF7
 24330                           tblptrl	equ	0xFF6
 24331                           tablat	equ	0xFF5
 24332                           prodh	equ	0xFF4
 24333                           prodl	equ	0xFF3
 24334                           intcon	equ	0xFF2
 24335                           intcon2	equ	0xFF1
 24336                           intcon3	equ	0xFF0
 24337                           indf0	equ	0xFEF
 24338                           postinc0	equ	0xFEE
 24339                           fsr0h	equ	0xFEA
 24340                           fsr0l	equ	0xFE9
 24341                           wreg	equ	0xFE8
 24342                           indf1	equ	0xFE7
 24343                           postinc1	equ	0xFE6
 24344                           postdec1	equ	0xFE5
 24345                           plusw1	equ	0xFE3
 24346                           fsr1h	equ	0xFE2
 24347                           fsr1l	equ	0xFE1
 24348                           indf2	equ	0xFDF
 24349                           postinc2	equ	0xFDE
 24350                           postdec2	equ	0xFDD
 24351                           plusw2	equ	0xFDB
 24352                           fsr2h	equ	0xFDA
 24353                           fsr2l	equ	0xFD9
 24354                           status	equ	0xFD8
 24355                           
 24356 ;; *************** function _Lcd_Port *****************
 24357 ;; Defined at:
 24358 ;;		line 52 in file "src/lcd.h"
 24359 ;; Parameters:    Size  Location     Type
 24360 ;;  a               1    wreg     unsigned char 
 24361 ;; Auto vars:     Size  Location     Type
 24362 ;;  a               1    0[BANK0 ] unsigned char 
 24363 ;; Return value:  Size  Location     Type
 24364 ;;                  1    wreg      void 
 24365 ;; Registers used:
 24366 ;;		wreg
 24367 ;; Tracked objects:
 24368 ;;		On entry : 0/0
 24369 ;;		On exit  : 0/0
 24370 ;;		Unchanged: 0/0
 24371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24372 ;;      Params:         0       0       0       0       0       0       0       0       0
 24373 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24375 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24376 ;;Total ram usage:        1 bytes
 24377 ;; Hardware stack levels used:    1
 24378 ;; Hardware stack levels required when called:    6
 24379 ;; This function calls:
 24380 ;;		Nothing
 24381 ;; This function is called by:
 24382 ;;		_Lcd_Init
 24383 ;;		_Lcd_Cmd
 24384 ;;		_Lcd_Write_Char
 24385 ;; This function uses a non-reentrant model
 24386 ;;
 24387                           
 24388                           	psect	text61
 24389  005C80                     __ptext61:
 24390                           	opt stack 0
 24391  005C80                     _Lcd_Port:
 24392                           	opt stack 22
 24393                           
 24394                           ;incstack = 0
 24395                           ;Lcd_Port@a stored from wreg
 24396  005C80  0100               	movlb	0	; () banked
 24397  005C82  6F60               	movwf	Lcd_Port@a& (0+255),b
 24398                           
 24399                           ;lcd.h: 53: if (a & 1)
 24400  005C84  0100               	movlb	0	; () banked
 24401  005C86  A160               	btfss	Lcd_Port@a& (0+255),0,b
 24402  005C88  D002               	goto	l233
 24403                           
 24404                           ; BSR set to: 0
 24405                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 24406  005C8A  8883               	bsf	3971,4,c	;volatile
 24407  005C8C  D001               	goto	l234
 24408  005C8E                     l233:
 24409                           
 24410                           ; BSR set to: 0
 24411                           ;lcd.h: 55: else
 24412                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 24413  005C8E  9883               	bcf	3971,4,c	;volatile
 24414  005C90                     l234:
 24415                           
 24416                           ; BSR set to: 0
 24417                           ;lcd.h: 58: if (a & 2)
 24418                           
 24419                           ; BSR set to: 0
 24420  005C90  A360               	btfss	Lcd_Port@a& (0+255),1,b
 24421  005C92  D002               	goto	l235
 24422                           
 24423                           ; BSR set to: 0
 24424                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 24425  005C94  8A83               	bsf	3971,5,c	;volatile
 24426  005C96  D001               	goto	l236
 24427  005C98                     l235:
 24428                           
 24429                           ; BSR set to: 0
 24430                           ;lcd.h: 60: else
 24431                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 24432  005C98  9A83               	bcf	3971,5,c	;volatile
 24433  005C9A                     l236:
 24434                           
 24435                           ; BSR set to: 0
 24436                           ;lcd.h: 63: if (a & 4)
 24437                           
 24438                           ; BSR set to: 0
 24439  005C9A  A560               	btfss	Lcd_Port@a& (0+255),2,b
 24440  005C9C  D002               	goto	l237
 24441                           
 24442                           ; BSR set to: 0
 24443                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 24444  005C9E  8C83               	bsf	3971,6,c	;volatile
 24445  005CA0  D001               	goto	l238
 24446  005CA2                     l237:
 24447                           
 24448                           ; BSR set to: 0
 24449                           ;lcd.h: 65: else
 24450                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 24451  005CA2  9C83               	bcf	3971,6,c	;volatile
 24452  005CA4                     l238:
 24453                           
 24454                           ; BSR set to: 0
 24455                           ;lcd.h: 68: if (a & 8)
 24456                           
 24457                           ; BSR set to: 0
 24458  005CA4  A760               	btfss	Lcd_Port@a& (0+255),3,b
 24459  005CA6  D002               	goto	l239
 24460                           
 24461                           ; BSR set to: 0
 24462                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 24463  005CA8  8E83               	bsf	3971,7,c	;volatile
 24464  005CAA  0012               	return	
 24465  005CAC                     l239:
 24466                           
 24467                           ; BSR set to: 0
 24468                           ;lcd.h: 70: else
 24469                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 24470  005CAC  9E83               	bcf	3971,7,c	;volatile
 24471  005CAE  0012               	return	
 24472  005CB0                     __end_of_Lcd_Port:
 24473                           	opt stack 0
 24474                           tosu	equ	0xFFF
 24475                           tosh	equ	0xFFE
 24476                           tosl	equ	0xFFD
 24477                           pclath	equ	0xFFA
 24478                           tblptru	equ	0xFF8
 24479                           tblptrh	equ	0xFF7
 24480                           tblptrl	equ	0xFF6
 24481                           tablat	equ	0xFF5
 24482                           prodh	equ	0xFF4
 24483                           prodl	equ	0xFF3
 24484                           intcon	equ	0xFF2
 24485                           intcon2	equ	0xFF1
 24486                           intcon3	equ	0xFF0
 24487                           indf0	equ	0xFEF
 24488                           postinc0	equ	0xFEE
 24489                           fsr0h	equ	0xFEA
 24490                           fsr0l	equ	0xFE9
 24491                           wreg	equ	0xFE8
 24492                           indf1	equ	0xFE7
 24493                           postinc1	equ	0xFE6
 24494                           postdec1	equ	0xFE5
 24495                           plusw1	equ	0xFE3
 24496                           fsr1h	equ	0xFE2
 24497                           fsr1l	equ	0xFE1
 24498                           indf2	equ	0xFDF
 24499                           postinc2	equ	0xFDE
 24500                           postdec2	equ	0xFDD
 24501                           plusw2	equ	0xFDB
 24502                           fsr2h	equ	0xFDA
 24503                           fsr2l	equ	0xFD9
 24504                           status	equ	0xFD8
 24505                           
 24506 ;; *************** function _I2C_Master_Init *****************
 24507 ;; Defined at:
 24508 ;;		line 11 in file "src/I2C.c"
 24509 ;; Parameters:    Size  Location     Type
 24510 ;;  c               4   13[BANK0 ] const unsigned long 
 24511 ;; Auto vars:     Size  Location     Type
 24512 ;;		None
 24513 ;; Return value:  Size  Location     Type
 24514 ;;                  1    wreg      void 
 24515 ;; Registers used:
 24516 ;;		wreg, status,2, status,0, cstack
 24517 ;; Tracked objects:
 24518 ;;		On entry : 0/0
 24519 ;;		On exit  : 0/0
 24520 ;;		Unchanged: 0/0
 24521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24522 ;;      Params:         0       4       0       0       0       0       0       0       0
 24523 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24524 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24525 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24526 ;;Total ram usage:        8 bytes
 24527 ;; Hardware stack levels used:    1
 24528 ;; Hardware stack levels required when called:    7
 24529 ;; This function calls:
 24530 ;;		___lldiv
 24531 ;; This function is called by:
 24532 ;;		_main
 24533 ;; This function uses a non-reentrant model
 24534 ;;
 24535                           
 24536                           	psect	text62
 24537  00572E                     __ptext62:
 24538                           	opt stack 0
 24539  00572E                     _I2C_Master_Init:
 24540                           	opt stack 23
 24541                           
 24542                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;incstack = 0
 24546  00572E  8093               	bsf	3987,0,c	;volatile
 24547                           
 24548                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 24549  005730  8293               	bsf	3987,1,c	;volatile
 24550                           
 24551                           ;I2C.c: 14: SSPCON1 = 0x28;
 24552  005732  0E28               	movlw	40
 24553  005734  6EC6               	movwf	4038,c	;volatile
 24554                           
 24555                           ;I2C.c: 15: SSPCON2 = 0x0;
 24556  005736  0E00               	movlw	0
 24557  005738  6EC5               	movwf	4037,c	;volatile
 24558                           
 24559                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 24560  00573A  0E00               	movlw	0
 24561  00573C  0100               	movlb	0	; () banked
 24562  00573E  6F60               	movwf	___lldiv@dividend& (0+255),b
 24563  005740  0E12               	movlw	18
 24564  005742  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 24565  005744  0E7A               	movlw	122
 24566  005746  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 24567  005748  0E00               	movlw	0
 24568  00574A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 24569  00574C  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 24570  005750  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 24571  005754  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 24572  005758  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 24573  00575C  0E02               	movlw	2
 24574  00575E                     u14435:
 24575  00575E  90D8               	bcf	status,0,c
 24576  005760  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 24577  005762  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 24578  005764  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 24579  005766  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 24580  005768  2EE8               	decfsz	wreg,f,c
 24581  00576A  D7F9               	goto	u14435
 24582  00576C  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 24583  005770  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 24584  005774  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 24585  005778  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 24586  00577C  EC1D  F02B         	call	___lldiv	;wreg free
 24587  005780  0100               	movlb	0	; () banked
 24588  005782  0560               	decf	?___lldiv& (0+255),w,b
 24589  005784  6EC8               	movwf	4040,c	;volatile
 24590                           
 24591                           ; BSR set to: 0
 24592                           ;I2C.c: 17: SSPSTAT = 0;
 24593  005786  0E00               	movlw	0
 24594  005788  6EC7               	movwf	4039,c	;volatile
 24595                           
 24596                           ; BSR set to: 0
 24597                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 24598  00578A  0E82               	movlw	130
 24599  00578C  0100               	movlb	0	; () banked
 24600  00578E  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 24601  005790  0EDD               	movlw	221
 24602  005792                     u15627:
 24603  005792  2EE8               	decfsz	wreg,f,c
 24604  005794  D7FE               	bra	u15627
 24605  005796  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 24606  005798  D7FC               	bra	u15627
 24607  00579A  D000               	nop2	
 24608  00579C  0012               	return		;funcret
 24609  00579E                     __end_of_I2C_Master_Init:
 24610                           	opt stack 0
 24611                           tosu	equ	0xFFF
 24612                           tosh	equ	0xFFE
 24613                           tosl	equ	0xFFD
 24614                           pclath	equ	0xFFA
 24615                           tblptru	equ	0xFF8
 24616                           tblptrh	equ	0xFF7
 24617                           tblptrl	equ	0xFF6
 24618                           tablat	equ	0xFF5
 24619                           prodh	equ	0xFF4
 24620                           prodl	equ	0xFF3
 24621                           intcon	equ	0xFF2
 24622                           intcon2	equ	0xFF1
 24623                           intcon3	equ	0xFF0
 24624                           indf0	equ	0xFEF
 24625                           postinc0	equ	0xFEE
 24626                           fsr0h	equ	0xFEA
 24627                           fsr0l	equ	0xFE9
 24628                           wreg	equ	0xFE8
 24629                           indf1	equ	0xFE7
 24630                           postinc1	equ	0xFE6
 24631                           postdec1	equ	0xFE5
 24632                           plusw1	equ	0xFE3
 24633                           fsr1h	equ	0xFE2
 24634                           fsr1l	equ	0xFE1
 24635                           indf2	equ	0xFDF
 24636                           postinc2	equ	0xFDE
 24637                           postdec2	equ	0xFDD
 24638                           plusw2	equ	0xFDB
 24639                           fsr2h	equ	0xFDA
 24640                           fsr2l	equ	0xFD9
 24641                           status	equ	0xFD8
 24642                           
 24643 ;; *************** function ___lldiv *****************
 24644 ;; Defined at:
 24645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 24646 ;; Parameters:    Size  Location     Type
 24647 ;;  dividend        4    0[BANK0 ] unsigned long 
 24648 ;;  divisor         4    4[BANK0 ] unsigned long 
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;  quotient        4    8[BANK0 ] unsigned long 
 24651 ;;  counter         1   12[BANK0 ] unsigned char 
 24652 ;; Return value:  Size  Location     Type
 24653 ;;                  4    0[BANK0 ] unsigned long 
 24654 ;; Registers used:
 24655 ;;		wreg, status,2, status,0
 24656 ;; Tracked objects:
 24657 ;;		On entry : 0/0
 24658 ;;		On exit  : 0/0
 24659 ;;		Unchanged: 0/0
 24660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24661 ;;      Params:         0       8       0       0       0       0       0       0       0
 24662 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24664 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24665 ;;Total ram usage:       13 bytes
 24666 ;; Hardware stack levels used:    1
 24667 ;; Hardware stack levels required when called:    6
 24668 ;; This function calls:
 24669 ;;		Nothing
 24670 ;; This function is called by:
 24671 ;;		_I2C_Master_Init
 24672 ;; This function uses a non-reentrant model
 24673 ;;
 24674                           
 24675                           	psect	text63
 24676  00563A                     __ptext63:
 24677                           	opt stack 0
 24678  00563A                     ___lldiv:
 24679                           	opt stack 23
 24680                           
 24681                           ;incstack = 0
 24682  00563A  0E00               	movlw	0
 24683  00563C  0100               	movlb	0	; () banked
 24684  00563E  6F68               	movwf	___lldiv@quotient& (0+255),b
 24685  005640  0E00               	movlw	0
 24686  005642  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 24687  005644  0E00               	movlw	0
 24688  005646  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 24689  005648  0E00               	movlw	0
 24690  00564A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 24691                           
 24692                           ; BSR set to: 0
 24693  00564C  5164               	movf	___lldiv@divisor& (0+255),w,b
 24694  00564E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24695  005650  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24696  005652  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24697  005654  B4D8               	btfsc	status,2,c
 24698  005656  D02A               	goto	l2046
 24699                           
 24700                           ; BSR set to: 0
 24701  005658  0E01               	movlw	1
 24702  00565A  6F6C               	movwf	___lldiv@counter& (0+255),b
 24703  00565C  D006               	goto	l2041
 24704  00565E                     
 24705                           ; BSR set to: 0
 24706                           
 24707                           ; BSR set to: 0
 24708  00565E  90D8               	bcf	status,0,c
 24709  005660  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 24710  005662  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24711  005664  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24712  005666  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24713  005668  2B6C               	incf	___lldiv@counter& (0+255),f,b
 24714  00566A                     l2041:
 24715                           
 24716                           ; BSR set to: 0
 24717                           
 24718                           ; BSR set to: 0
 24719  00566A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24720  00566C  D7F8               	goto	l2042
 24721  00566E                     u12560:
 24722                           
 24723                           ; BSR set to: 0
 24724                           
 24725                           ; BSR set to: 0
 24726                           
 24727                           ; BSR set to: 0
 24728  00566E  90D8               	bcf	status,0,c
 24729  005670  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 24730  005672  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24731  005674  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24732  005676  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24733                           
 24734                           ; BSR set to: 0
 24735  005678  5164               	movf	___lldiv@divisor& (0+255),w,b
 24736  00567A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 24737  00567C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24738  00567E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24739  005680  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24740  005682  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24741  005684  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24742  005686  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24743  005688  A0D8               	btfss	status,0,c
 24744  00568A  D009               	goto	l2045
 24745                           
 24746                           ; BSR set to: 0
 24747  00568C  5164               	movf	___lldiv@divisor& (0+255),w,b
 24748  00568E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 24749  005690  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24750  005692  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24751  005694  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24752  005696  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24753  005698  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24754  00569A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24755                           
 24756                           ; BSR set to: 0
 24757  00569C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 24758  00569E                     l2045:
 24759                           
 24760                           ; BSR set to: 0
 24761                           
 24762                           ; BSR set to: 0
 24763  00569E  90D8               	bcf	status,0,c
 24764  0056A0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24765  0056A2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24766  0056A4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24767  0056A6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 24768                           
 24769                           ; BSR set to: 0
 24770  0056A8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 24771  0056AA  D7E1               	goto	u12560
 24772  0056AC                     l2046:
 24773                           
 24774                           ; BSR set to: 0
 24775                           
 24776                           ; BSR set to: 0
 24777  0056AC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 24778  0056B0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 24779  0056B4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 24780  0056B8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 24781                           
 24782                           ; BSR set to: 0
 24783  0056BC  0012               	return		;funcret
 24784  0056BE                     __end_of___lldiv:
 24785                           	opt stack 0
 24786                           tosu	equ	0xFFF
 24787                           tosh	equ	0xFFE
 24788                           tosl	equ	0xFFD
 24789                           pclath	equ	0xFFA
 24790                           tblptru	equ	0xFF8
 24791                           tblptrh	equ	0xFF7
 24792                           tblptrl	equ	0xFF6
 24793                           tablat	equ	0xFF5
 24794                           prodh	equ	0xFF4
 24795                           prodl	equ	0xFF3
 24796                           intcon	equ	0xFF2
 24797                           intcon2	equ	0xFF1
 24798                           intcon3	equ	0xFF0
 24799                           indf0	equ	0xFEF
 24800                           postinc0	equ	0xFEE
 24801                           fsr0h	equ	0xFEA
 24802                           fsr0l	equ	0xFE9
 24803                           wreg	equ	0xFE8
 24804                           indf1	equ	0xFE7
 24805                           postinc1	equ	0xFE6
 24806                           postdec1	equ	0xFE5
 24807                           plusw1	equ	0xFE3
 24808                           fsr1h	equ	0xFE2
 24809                           fsr1l	equ	0xFE1
 24810                           indf2	equ	0xFDF
 24811                           postinc2	equ	0xFDE
 24812                           postdec2	equ	0xFDD
 24813                           plusw2	equ	0xFDB
 24814                           fsr2h	equ	0xFDA
 24815                           fsr2l	equ	0xFD9
 24816                           status	equ	0xFD8
 24817                           
 24818 ;; *************** function _TIMER0 *****************
 24819 ;; Defined at:
 24820 ;;		line 16 in file "src/main.c"
 24821 ;; Parameters:    Size  Location     Type
 24822 ;;		None
 24823 ;; Auto vars:     Size  Location     Type
 24824 ;;  c               1   47[COMRAM] unsigned char 
 24825 ;; Return value:  Size  Location     Type
 24826 ;;                  1    wreg      void 
 24827 ;; Registers used:
 24828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24829 ;; Tracked objects:
 24830 ;;		On entry : 0/0
 24831 ;;		On exit  : 0/0
 24832 ;;		Unchanged: 0/0
 24833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24834 ;;      Params:         0       0       0       0       0       0       0       0       0
 24835 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24836 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24837 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24838 ;;Total ram usage:       19 bytes
 24839 ;; Hardware stack levels used:    1
 24840 ;; Hardware stack levels required when called:    5
 24841 ;; This function calls:
 24842 ;;		_readButtons
 24843 ;;		_receiveByteSerial
 24844 ;;		_timer
 24845 ;; This function is called by:
 24846 ;;		Interrupt level 2
 24847 ;; This function uses a non-reentrant model
 24848 ;;
 24849                           
 24850                           	psect	intcode
 24851  000008                     __pintcode:
 24852                           	opt stack 0
 24853  000008                     _TIMER0:
 24854                           	opt stack 20
 24855                           
 24856                           ; BSR set to: 0
 24857                           ;incstack = 0
 24858  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24859  00000A  ED4E  F027         	call	int_func,f	;refresh shadow registers
 24860                           tosu	equ	0xFFF
 24861                           tosh	equ	0xFFE
 24862                           tosl	equ	0xFFD
 24863                           pclath	equ	0xFFA
 24864                           tblptru	equ	0xFF8
 24865                           tblptrh	equ	0xFF7
 24866                           tblptrl	equ	0xFF6
 24867                           tablat	equ	0xFF5
 24868                           prodh	equ	0xFF4
 24869                           prodl	equ	0xFF3
 24870                           intcon	equ	0xFF2
 24871                           intcon2	equ	0xFF1
 24872                           intcon3	equ	0xFF0
 24873                           indf0	equ	0xFEF
 24874                           postinc0	equ	0xFEE
 24875                           fsr0h	equ	0xFEA
 24876                           fsr0l	equ	0xFE9
 24877                           wreg	equ	0xFE8
 24878                           indf1	equ	0xFE7
 24879                           postinc1	equ	0xFE6
 24880                           postdec1	equ	0xFE5
 24881                           plusw1	equ	0xFE3
 24882                           fsr1h	equ	0xFE2
 24883                           fsr1l	equ	0xFE1
 24884                           indf2	equ	0xFDF
 24885                           postinc2	equ	0xFDE
 24886                           postdec2	equ	0xFDD
 24887                           plusw2	equ	0xFDB
 24888                           fsr2h	equ	0xFDA
 24889                           fsr2l	equ	0xFD9
 24890                           status	equ	0xFD8
 24891                           
 24892                           	psect	intcode_body
 24893  004E9C                     __pintcode_body:
 24894                           	opt stack 20
 24895  004E9C                     int_func:
 24896                           	opt stack 20
 24897  004E9C  0006               	pop		; remove dummy address from shadow register refresh
 24898  004E9E  CFFA F01E          	movff	pclath,??_TIMER0
 24899  004EA2  CFFB F01F          	movff	pclatu,??_TIMER0+1
 24900  004EA6  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 24901  004EAA  CFEA F021          	movff	fsr0h,??_TIMER0+3
 24902  004EAE  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 24903  004EB2  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 24904  004EB6  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 24905  004EBA  CFDA F025          	movff	fsr2h,??_TIMER0+7
 24906  004EBE  CFF3 F026          	movff	prodl,??_TIMER0+8
 24907  004EC2  CFF4 F027          	movff	prodh,??_TIMER0+9
 24908  004EC6  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 24909  004ECA  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 24910  004ECE  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 24911  004ED2  CFF5 F02B          	movff	tablat,??_TIMER0+13
 24912  004ED6  C05F  F02C         	movff	btemp,??_TIMER0+14
 24913  004EDA  C060  F02D         	movff	btemp+1,??_TIMER0+15
 24914  004EDE  C061  F02E         	movff	btemp+2,??_TIMER0+16
 24915  004EE2  C062  F02F         	movff	btemp+3,??_TIMER0+17
 24916                           
 24917                           ;main.c: 17: if (TMR0IF) {
 24918  004EE6  A4F2               	btfss	intcon,2,c	;volatile
 24919  004EE8  D007               	goto	i2l1251
 24920                           
 24921                           ;main.c: 18: TMR0IF = 0x00;
 24922  004EEA  94F2               	bcf	intcon,2,c	;volatile
 24923                           
 24924                           ;main.c: 19: TMR0H = 0x3C;
 24925  004EEC  0E3C               	movlw	60
 24926  004EEE  6ED7               	movwf	4055,c	;volatile
 24927                           
 24928                           ;main.c: 20: TMR0L = 0xB0;
 24929  004EF0  0EB0               	movlw	176
 24930  004EF2  6ED6               	movwf	4054,c	;volatile
 24931                           
 24932                           ;main.c: 21: timer();
 24933  004EF4  EC83  F01F         	call	_timer	;wreg free
 24934  004EF8                     i2l1251:
 24935                           
 24936                           ;main.c: 22: }
 24937                           ;main.c: 23: if (RCIF) {
 24938  004EF8  AA9E               	btfss	3998,5,c	;volatile
 24939  004EFA  D005               	goto	i2l1252
 24940                           
 24941                           ;main.c: 24: char c = RCREG;
 24942  004EFC  CFAE F030          	movff	4014,TIMER0@c	;volatile
 24943                           
 24944                           ;main.c: 25: receiveByteSerial(c);
 24945  004F00  5030               	movf	TIMER0@c,w,c
 24946  004F02  EC06  F02C         	call	_receiveByteSerial
 24947  004F06                     i2l1252:
 24948                           
 24949                           ;main.c: 26: }
 24950                           ;main.c: 27: if (INT2IF) {
 24951  004F06  A2F0               	btfss	intcon3,1,c	;volatile
 24952  004F08  D003               	goto	i2l1253
 24953                           
 24954                           ;main.c: 28: INT2IF = 0;
 24955  004F0A  92F0               	bcf	intcon3,1,c	;volatile
 24956                           
 24957                           ;main.c: 29: readButtons();
 24958  004F0C  ECC3  F02E         	call	_readButtons	;wreg free
 24959  004F10                     i2l1253:
 24960  004F10  C02F  F062         	movff	??_TIMER0+17,btemp+3
 24961  004F14  C02E  F061         	movff	??_TIMER0+16,btemp+2
 24962  004F18  C02D  F060         	movff	??_TIMER0+15,btemp+1
 24963  004F1C  C02C  F05F         	movff	??_TIMER0+14,btemp
 24964  004F20  C02B  FFF5         	movff	??_TIMER0+13,tablat
 24965  004F24  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 24966  004F28  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 24967  004F2C  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 24968  004F30  C027  FFF4         	movff	??_TIMER0+9,prodh
 24969  004F34  C026  FFF3         	movff	??_TIMER0+8,prodl
 24970  004F38  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 24971  004F3C  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 24972  004F40  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 24973  004F44  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 24974  004F48  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 24975  004F4C  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 24976  004F50  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 24977  004F54  C01E  FFFA         	movff	??_TIMER0,pclath
 24978  004F58  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24979  004F5A  0011               	retfie		f
 24980  004F5C                     __end_of_TIMER0:
 24981                           	opt stack 0
 24982                           tosu	equ	0xFFF
 24983                           tosh	equ	0xFFE
 24984                           tosl	equ	0xFFD
 24985                           pclatu	equ	0xFFB
 24986                           pclath	equ	0xFFA
 24987                           tblptru	equ	0xFF8
 24988                           tblptrh	equ	0xFF7
 24989                           tblptrl	equ	0xFF6
 24990                           tablat	equ	0xFF5
 24991                           prodh	equ	0xFF4
 24992                           prodl	equ	0xFF3
 24993                           intcon	equ	0xFF2
 24994                           intcon2	equ	0xFF1
 24995                           intcon3	equ	0xFF0
 24996                           indf0	equ	0xFEF
 24997                           postinc0	equ	0xFEE
 24998                           fsr0h	equ	0xFEA
 24999                           fsr0l	equ	0xFE9
 25000                           wreg	equ	0xFE8
 25001                           indf1	equ	0xFE7
 25002                           postinc1	equ	0xFE6
 25003                           postdec1	equ	0xFE5
 25004                           plusw1	equ	0xFE3
 25005                           fsr1h	equ	0xFE2
 25006                           fsr1l	equ	0xFE1
 25007                           indf2	equ	0xFDF
 25008                           postinc2	equ	0xFDE
 25009                           postdec2	equ	0xFDD
 25010                           plusw2	equ	0xFDB
 25011                           fsr2h	equ	0xFDA
 25012                           fsr2l	equ	0xFD9
 25013                           status	equ	0xFD8
 25014                           
 25015 ;; *************** function _timer *****************
 25016 ;; Defined at:
 25017 ;;		line 39 in file "src/controle.h"
 25018 ;; Parameters:    Size  Location     Type
 25019 ;;		None
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1    wreg      void 
 25024 ;; Registers used:
 25025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0
 25032 ;;      Locals:         6       0       0       0       0       0       0       0       0
 25033 ;;      Temps:          7       0       0       0       0       0       0       0       0
 25034 ;;      Totals:        13       0       0       0       0       0       0       0       0
 25035 ;;Total ram usage:       13 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; Hardware stack levels required when called:    4
 25038 ;; This function calls:
 25039 ;;		i2_setRangeValor
 25040 ;; This function is called by:
 25041 ;;		_TIMER0
 25042 ;; This function uses a non-reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text65
 25046  003F06                     __ptext65:
 25047                           	opt stack 0
 25048  003F06                     _timer:
 25049                           	opt stack 20
 25050                           
 25051                           ;controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 25052                           
 25053                           ;incstack = 0
 25054  003F06  5032               	movf	_t_controle_flap+1,w,c
 25055  003F08  E109               	bnz	i2l8910
 25056  003F0A  0E02               	movlw	2
 25057  003F0C  5C31               	subwf	_t_controle_flap,w,c
 25058  003F0E  B0D8               	btfsc	status,0,c
 25059  003F10  D005               	goto	i2l1088
 25060  003F12  0E00               	movlw	0
 25061  003F14  6E32               	movwf	_t_controle_flap+1,c
 25062  003F16  0E00               	movlw	0
 25063  003F18  6E31               	movwf	_t_controle_flap,c
 25064  003F1A  D007               	goto	i2l1090
 25065  003F1C                     i2l1088:
 25066  003F1C                     i2l8910:
 25067  003F1C  0631               	decf	_t_controle_flap,f,c
 25068  003F1E  A0D8               	btfss	status,0,c
 25069  003F20  0632               	decf	_t_controle_flap+1,f,c
 25070  003F22  C031  F031         	movff	_t_controle_flap,_t_controle_flap
 25071  003F26  C032  F032         	movff	_t_controle_flap+1,_t_controle_flap+1
 25072  003F2A                     i2l1090:
 25073                           
 25074                           ;controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 25075  003F2A  0E02               	movlw	2
 25076  003F2C  6037               	cpfslt	_t_controle_buzzer,c
 25077  003F2E  D005               	goto	i2l1092
 25078  003F30  0E00               	movlw	0
 25079  003F32  6E19               	movwf	_timer$1414+1,c
 25080  003F34  0E00               	movlw	0
 25081  003F36  6E18               	movwf	_timer$1414,c
 25082  003F38  D004               	goto	i2l1094
 25083  003F3A                     i2l1092:
 25084  003F3A  0637               	decf	_t_controle_buzzer,f,c
 25085  003F3C  C037  F018         	movff	_t_controle_buzzer,_timer$1414
 25086  003F40  6A19               	clrf	_timer$1414+1,c
 25087  003F42                     i2l1094:
 25088  003F42  C018  F037         	movff	_timer$1414,_t_controle_buzzer
 25089                           
 25090                           ;controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 25091  003F46  0101               	movlb	1	; () banked
 25092  003F48  514D               	movf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 25093  003F4A  E109               	bnz	i2l8924
 25094  003F4C  0E02               	movlw	2
 25095  003F4E  5D4C               	subwf	_t_controle_modo_seguranca& (0+255),w,b
 25096  003F50  B0D8               	btfsc	status,0,c
 25097  003F52  D005               	goto	i2l1096
 25098                           
 25099                           ; BSR set to: 1
 25100  003F54  0E00               	movlw	0
 25101  003F56  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 25102  003F58  0E00               	movlw	0
 25103  003F5A  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 25104  003F5C  D007               	goto	i2l1098
 25105  003F5E                     i2l1096:
 25106  003F5E                     i2l8924:
 25107                           
 25108                           ; BSR set to: 1
 25109  003F5E  074C               	decf	_t_controle_modo_seguranca& (0+255),f,b
 25110  003F60  A0D8               	btfss	status,0,c
 25111  003F62  074D               	decf	(_t_controle_modo_seguranca+1)& (0+255),f,b
 25112  003F64  C14C  F14C         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 25113  003F68  C14D  F14D         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 25114  003F6C                     i2l1098:
 25115                           
 25116                           ; BSR set to: 1
 25117                           ;controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 25118                           
 25119                           ; BSR set to: 1
 25120  003F6C  0E02               	movlw	2
 25121  003F6E  6036               	cpfslt	_t_leitura_adc,c
 25122  003F70  D005               	goto	i2l1100
 25123                           
 25124                           ; BSR set to: 1
 25125  003F72  0E00               	movlw	0
 25126  003F74  6E1B               	movwf	_timer$1415+1,c
 25127  003F76  0E00               	movlw	0
 25128  003F78  6E1A               	movwf	_timer$1415,c
 25129  003F7A  D004               	goto	i2l1102
 25130  003F7C                     i2l1100:
 25131                           
 25132                           ; BSR set to: 1
 25133                           
 25134                           ; BSR set to: 1
 25135  003F7C  0636               	decf	_t_leitura_adc,f,c
 25136  003F7E  C036  F01A         	movff	_t_leitura_adc,_timer$1415
 25137  003F82  6A1B               	clrf	_timer$1415+1,c
 25138  003F84                     i2l1102:
 25139                           
 25140                           ; BSR set to: 1
 25141                           
 25142                           ; BSR set to: 1
 25143  003F84  C01A  F036         	movff	_timer$1415,_t_leitura_adc
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;controle.h: 47: if (t_controle_blink > 1) {
 25147  003F88  0E01               	movlw	1
 25148  003F8A  6553               	cpfsgt	_t_controle_blink& (0+255),b
 25149  003F8C  D002               	goto	i2l1103
 25150                           
 25151                           ; BSR set to: 1
 25152                           ;controle.h: 48: --t_controle_blink;
 25153  003F8E  0753               	decf	_t_controle_blink& (0+255),f,b
 25154                           
 25155                           ;controle.h: 49: } else {
 25156  003F90  D008               	goto	i2l1104
 25157  003F92                     i2l1103:
 25158                           
 25159                           ; BSR set to: 1
 25160                           ;controle.h: 50: blinkk = ~blinkk;
 25161  003F92  B45B               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 25162  003F94  D002               	goto	i2u1347_40
 25163  003F96  845B               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 25164  003F98  D001               	goto	i2u1348_45
 25165  003F9A                     i2u1347_40:
 25166  003F9A  945B               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 25167  003F9C                     i2u1348_45:
 25168                           
 25169                           ;controle.h: 51: t_controle_blink = 5;
 25170  003F9C  0E05               	movlw	5
 25171  003F9E  0101               	movlb	1	; () banked
 25172  003FA0  6F53               	movwf	_t_controle_blink& (0+255),b
 25173  003FA2                     i2l1104:
 25174                           
 25175                           ; BSR set to: 1
 25176                           ;controle.h: 52: }
 25177                           ;controle.h: 54: base_sec++;
 25178                           
 25179                           ; BSR set to: 1
 25180  003FA2  2A48               	incf	_base_sec,f,c
 25181                           
 25182                           ; BSR set to: 1
 25183                           ;controle.h: 55: if (base_sec > 9) {
 25184  003FA4  0E09               	movlw	9
 25185  003FA6  6448               	cpfsgt	_base_sec,c
 25186  003FA8  0012               	return	
 25187                           
 25188                           ; BSR set to: 1
 25189                           ;controle.h: 56: base_sec = 0;
 25190  003FAA  0E00               	movlw	0
 25191  003FAC  6E48               	movwf	_base_sec,c
 25192                           
 25193                           ; BSR set to: 1
 25194                           ;controle.h: 57: sec++;
 25195  003FAE  2A46               	incf	_sec,f,c
 25196                           
 25197                           ; BSR set to: 1
 25198                           ;controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 25199  003FB0  0E02               	movlw	2
 25200  003FB2  603C               	cpfslt	_t_wifi_restart,c
 25201  003FB4  D005               	goto	i2l1107
 25202                           
 25203                           ; BSR set to: 1
 25204  003FB6  0E00               	movlw	0
 25205  003FB8  6E1D               	movwf	_timer$1416+1,c
 25206  003FBA  0E00               	movlw	0
 25207  003FBC  6E1C               	movwf	_timer$1416,c
 25208  003FBE  D004               	goto	i2l1109
 25209  003FC0                     i2l1107:
 25210                           
 25211                           ; BSR set to: 1
 25212                           
 25213                           ; BSR set to: 1
 25214  003FC0  063C               	decf	_t_wifi_restart,f,c
 25215  003FC2  C03C  F01C         	movff	_t_wifi_restart,_timer$1416
 25216  003FC6  6A1D               	clrf	_timer$1416+1,c
 25217  003FC8                     i2l1109:
 25218                           
 25219                           ; BSR set to: 1
 25220                           
 25221                           ; BSR set to: 1
 25222  003FC8  C01C  F03C         	movff	_timer$1416,_t_wifi_restart
 25223                           
 25224                           ; BSR set to: 1
 25225                           ;controle.h: 66: if (sec > 59) {
 25226  003FCC  0E3B               	movlw	59
 25227  003FCE  6446               	cpfsgt	_sec,c
 25228  003FD0  0012               	return	
 25229                           
 25230                           ; BSR set to: 1
 25231                           ;controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 25232  003FD2  5151               	movf	(_t_controle_religar_buzzer+1)& (0+255),w,b
 25233  003FD4  E109               	bnz	i2l8962
 25234  003FD6  0E02               	movlw	2
 25235  003FD8  5D50               	subwf	_t_controle_religar_buzzer& (0+255),w,b
 25236  003FDA  B0D8               	btfsc	status,0,c
 25237  003FDC  D005               	goto	i2l1112
 25238                           
 25239                           ; BSR set to: 1
 25240  003FDE  0E00               	movlw	0
 25241  003FE0  6F51               	movwf	(_t_controle_religar_buzzer+1)& (0+255),b
 25242  003FE2  0E00               	movlw	0
 25243  003FE4  6F50               	movwf	_t_controle_religar_buzzer& (0+255),b
 25244  003FE6  D007               	goto	i2l1114
 25245  003FE8                     i2l1112:
 25246  003FE8                     i2l8962:
 25247                           
 25248                           ; BSR set to: 1
 25249  003FE8  0750               	decf	_t_controle_religar_buzzer& (0+255),f,b
 25250  003FEA  A0D8               	btfss	status,0,c
 25251  003FEC  0751               	decf	(_t_controle_religar_buzzer+1)& (0+255),f,b
 25252  003FEE  C150  F150         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 25253  003FF2  C151  F151         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 25254  003FF6                     i2l1114:
 25255                           
 25256                           ; BSR set to: 1
 25257                           ;controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 25258                           
 25259                           ; BSR set to: 1
 25260  003FF6  514F               	movf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 25261  003FF8  E109               	bnz	i2l8968
 25262  003FFA  0E02               	movlw	2
 25263  003FFC  5D4E               	subwf	_t_controle_religar_ventoinha& (0+255),w,b
 25264  003FFE  B0D8               	btfsc	status,0,c
 25265  004000  D005               	goto	i2l1116
 25266                           
 25267                           ; BSR set to: 1
 25268  004002  0E00               	movlw	0
 25269  004004  6F4F               	movwf	(_t_controle_religar_ventoinha+1)& (0+255),b
 25270  004006  0E00               	movlw	0
 25271  004008  6F4E               	movwf	_t_controle_religar_ventoinha& (0+255),b
 25272  00400A  D007               	goto	i2l1118
 25273  00400C                     i2l1116:
 25274  00400C                     i2l8968:
 25275                           
 25276                           ; BSR set to: 1
 25277  00400C  074E               	decf	_t_controle_religar_ventoinha& (0+255),f,b
 25278  00400E  A0D8               	btfss	status,0,c
 25279  004010  074F               	decf	(_t_controle_religar_ventoinha+1)& (0+255),f,b
 25280  004012  C14E  F14E         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 25281  004016  C14F  F14F         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 25282  00401A                     i2l1118:
 25283                           
 25284                           ; BSR set to: 1
 25285                           ;controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 25286                           
 25287                           ; BSR set to: 1
 25288  00401A  0E64               	movlw	100
 25289  00401C  0100               	movlb	0	; () banked
 25290  00401E  19F6               	xorwf	_tempajt& (0+255),w,b
 25291  004020  B4D8               	btfsc	status,2,c
 25292  004022  D05B               	goto	i2l1121
 25293                           
 25294                           ; BSR set to: 0
 25295  004024  0E6E               	movlw	110
 25296  004026  19F6               	xorwf	_tempajt& (0+255),w,b
 25297  004028  B4D8               	btfsc	status,2,c
 25298  00402A  D057               	goto	i2l1121
 25299                           
 25300                           ; BSR set to: 0
 25301  00402C  0E85               	movlw	133
 25302  00402E  19F6               	xorwf	_tempajt& (0+255),w,b
 25303  004030  B4D8               	btfsc	status,2,c
 25304  004032  D053               	goto	i2l1121
 25305                           
 25306                           ; BSR set to: 0
 25307  004034  045E               	decf	_f_falta_energia,w,c
 25308  004036  A4D8               	btfss	status,2,c
 25309  004038  D050               	goto	i2l1121
 25310                           
 25311                           ; BSR set to: 0
 25312                           ;controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 25313  00403A  51F6               	movf	_tempajt& (0+255),w,b
 25314  00403C  6E11               	movwf	??_timer& (0+255),c
 25315  00403E  6A12               	clrf	(??_timer+1)& (0+255),c
 25316  004040  504D               	movf	_h_subir_temp_automatica,w,c
 25317  004042  C0FE  F013         	movff	_temp,??_timer+2
 25318  004046  6A14               	clrf	(??_timer+3)& (0+255),c
 25319  004048  2613               	addwf	??_timer+2,f,c
 25320  00404A  0E00               	movlw	0
 25321  00404C  2214               	addwfc	??_timer+3,f,c
 25322  00404E  5011               	movf	??_timer,w,c
 25323  004050  5C13               	subwf	??_timer+2,w,c
 25324  004052  5014               	movf	??_timer+3,w,c
 25325  004054  0A80               	xorlw	128
 25326  004056  6E15               	movwf	(??_timer+4)& (0+255),c
 25327  004058  5012               	movf	??_timer+1,w,c
 25328  00405A  0A80               	xorlw	128
 25329  00405C  5815               	subwfb	(??_timer+4)& (0+255),w,c
 25330  00405E  A0D8               	btfss	status,0,c
 25331  004060  D03C               	goto	i2l1121
 25332                           
 25333                           ; BSR set to: 0
 25334  004062  504D               	movf	_h_subir_temp_automatica,w,c
 25335  004064  6E11               	movwf	??_timer& (0+255),c
 25336  004066  6A12               	clrf	(??_timer+1)& (0+255),c
 25337  004068  1E11               	comf	??_timer,f,c
 25338  00406A  1E12               	comf	??_timer+1,f,c
 25339  00406C  4A11               	infsnz	??_timer,f,c
 25340  00406E  2A12               	incf	??_timer+1,f,c
 25341  004070  51FE               	movf	_temp& (0+255),w,b
 25342  004072  6E13               	movwf	(??_timer+2)& (0+255),c
 25343  004074  6A14               	clrf	(??_timer+3)& (0+255),c
 25344  004076  5011               	movf	??_timer,w,c
 25345  004078  2613               	addwf	??_timer+2,f,c
 25346  00407A  5012               	movf	??_timer+1,w,c
 25347  00407C  2214               	addwfc	??_timer+3,f,c
 25348  00407E  51F6               	movf	_tempajt& (0+255),w,b
 25349  004080  6E15               	movwf	(??_timer+4)& (0+255),c
 25350  004082  6A16               	clrf	(??_timer+5)& (0+255),c
 25351  004084  5013               	movf	??_timer+2,w,c
 25352  004086  5C15               	subwf	??_timer+4,w,c
 25353  004088  5016               	movf	??_timer+5,w,c
 25354  00408A  0A80               	xorlw	128
 25355  00408C  6E17               	movwf	(??_timer+6)& (0+255),c
 25356  00408E  5014               	movf	??_timer+3,w,c
 25357  004090  0A80               	xorlw	128
 25358  004092  5817               	subwfb	(??_timer+6)& (0+255),w,c
 25359  004094  A0D8               	btfss	status,0,c
 25360  004096  D021               	goto	i2l1121
 25361                           
 25362                           ; BSR set to: 0
 25363  004098  0E96               	movlw	150
 25364  00409A  61F6               	cpfslt	_tempajt& (0+255),b
 25365  00409C  D01E               	goto	i2l1121
 25366                           
 25367                           ; BSR set to: 0
 25368  00409E  51FA               	movf	_t_temp_automatica& (0+255),w,b
 25369  0040A0  B4D8               	btfsc	status,2,c
 25370  0040A2  D01B               	goto	i2l1121
 25371                           
 25372                           ; BSR set to: 0
 25373  0040A4  5059               	movf	_trava_fase,w,c
 25374  0040A6  A4D8               	btfss	status,2,c
 25375  0040A8  D018               	goto	i2l1121
 25376                           
 25377                           ; BSR set to: 0
 25378                           ;controle.h: 75: t_controle_temp_automatica++;
 25379  0040AA  0101               	movlb	1	; () banked
 25380  0040AC  2B52               	incf	_t_controle_temp_automatica& (0+255),f,b
 25381                           
 25382                           ; BSR set to: 1
 25383                           ;controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 25384  0040AE  0100               	movlb	0	; () banked
 25385  0040B0  51FA               	movf	_t_temp_automatica& (0+255),w,b
 25386  0040B2  0101               	movlb	1	; () banked
 25387  0040B4  5D52               	subwf	_t_controle_temp_automatica& (0+255),w,b
 25388  0040B6  A0D8               	btfss	status,0,c
 25389  0040B8  D010               	goto	i2l1121
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 25393  0040BA  0EF6               	movlw	low _tempajt
 25394  0040BC  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25395  0040BE  0E00               	movlw	high _tempajt
 25396  0040C0  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25397  0040C2  0E55               	movlw	85
 25398  0040C4  6E08               	movwf	i2setRangeValor@_min,c
 25399  0040C6  0E97               	movlw	151
 25400  0040C8  6E09               	movwf	i2setRangeValor@_max,c
 25401  0040CA  0E01               	movlw	1
 25402  0040CC  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25403  0040CE  0E2B               	movlw	43
 25404  0040D0  ECFE  F029         	call	i2_setRangeValor
 25405                           
 25406                           ;controle.h: 78: t_controle_temp_automatica = 0;
 25407  0040D4  0E00               	movlw	0
 25408  0040D6  0101               	movlb	1	; () banked
 25409  0040D8  6F52               	movwf	_t_controle_temp_automatica& (0+255),b
 25410  0040DA                     i2l1121:
 25411                           
 25412                           ;controle.h: 79: }
 25413                           ;controle.h: 80: }
 25414                           ;controle.h: 81: }
 25415                           ;controle.h: 83: sec = 0;
 25416                           
 25417                           ; BSR set to: 1
 25418                           
 25419                           ; BSR set to: 1
 25420                           
 25421                           ; BSR set to: 1
 25422  0040DA  0E00               	movlw	0
 25423  0040DC  6E46               	movwf	_sec,c
 25424                           
 25425                           ;controle.h: 84: min++;
 25426  0040DE  2A45               	incf	_min,f,c
 25427                           
 25428                           ;controle.h: 85: if (min > 59) {
 25429  0040E0  0E3B               	movlw	59
 25430  0040E2  6445               	cpfsgt	_min,c
 25431  0040E4  0012               	return	
 25432                           
 25433                           ;controle.h: 86: min = 0;
 25434  0040E6  0E00               	movlw	0
 25435  0040E8  6E45               	movwf	_min,c
 25436                           
 25437                           ;controle.h: 87: hor++;
 25438  0040EA  2A44               	incf	_hor,f,c
 25439                           
 25440                           ;controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 25441  0040EC  5059               	movf	_trava_fase,w,c
 25442  0040EE  A4D8               	btfss	status,2,c
 25443  0040F0  D063               	goto	i2l1132
 25444  0040F2  0100               	movlb	0	; () banked
 25445  0040F4  51FA               	movf	_t_temp_automatica& (0+255),w,b
 25446  0040F6  B4D8               	btfsc	status,2,c
 25447  0040F8  D05F               	goto	i2l1132
 25448                           
 25449                           ; BSR set to: 0
 25450  0040FA  045E               	decf	_f_falta_energia,w,c
 25451  0040FC  A4D8               	btfss	status,2,c
 25452  0040FE  D05C               	goto	i2l1132
 25453                           
 25454                           ; BSR set to: 0
 25455                           ;controle.h: 91: if (tempajt == 100 && fase == 1) {
 25456  004100  0E64               	movlw	100
 25457  004102  19F6               	xorwf	_tempajt& (0+255),w,b
 25458  004104  A4D8               	btfss	status,2,c
 25459  004106  D019               	goto	i2l1124
 25460                           
 25461                           ; BSR set to: 0
 25462  004108  05F8               	decf	_fase& (0+255),w,b
 25463  00410A  A4D8               	btfss	status,2,c
 25464  00410C  D016               	goto	i2l1124
 25465                           
 25466                           ; BSR set to: 0
 25467                           ;controle.h: 92: t_controle_fim_fases++;
 25468  00410E  2A38               	incf	_t_controle_fim_fases,f,c
 25469                           
 25470                           ; BSR set to: 0
 25471                           ;controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 25472  004110  5057               	movf	_t_fim_fase1,w,c
 25473  004112  5C38               	subwf	_t_controle_fim_fases,w,c
 25474  004114  A0D8               	btfss	status,0,c
 25475  004116  D050               	goto	i2l1132
 25476                           
 25477                           ; BSR set to: 0
 25478  004118  5057               	movf	_t_fim_fase1,w,c
 25479  00411A  B4D8               	btfsc	status,2,c
 25480  00411C  D04D               	goto	i2l1132
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 25484  00411E  0EF6               	movlw	low _tempajt
 25485  004120  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25486  004122  0E00               	movlw	high _tempajt
 25487  004124  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25488  004126  0E55               	movlw	85
 25489  004128  6E08               	movwf	i2setRangeValor@_min,c
 25490  00412A  0E97               	movlw	151
 25491  00412C  6E09               	movwf	i2setRangeValor@_max,c
 25492  00412E  0E01               	movlw	1
 25493  004130  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25494  004132  0E2B               	movlw	43
 25495  004134  ECFE  F029         	call	i2_setRangeValor
 25496  004138  D03D               	goto	i2l1130
 25497  00413A                     i2l1124:
 25498  00413A  0E6E               	movlw	110
 25499  00413C  0100               	movlb	0	; () banked
 25500  00413E  19F6               	xorwf	_tempajt& (0+255),w,b
 25501  004140  A4D8               	btfss	status,2,c
 25502  004142  D01A               	goto	i2l1127
 25503                           
 25504                           ; BSR set to: 0
 25505  004144  0E02               	movlw	2
 25506  004146  19F8               	xorwf	_fase& (0+255),w,b
 25507  004148  A4D8               	btfss	status,2,c
 25508  00414A  D016               	goto	i2l1127
 25509                           
 25510                           ; BSR set to: 0
 25511                           ;controle.h: 98: t_controle_fim_fases++;
 25512  00414C  2A38               	incf	_t_controle_fim_fases,f,c
 25513                           
 25514                           ; BSR set to: 0
 25515                           ;controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 25516  00414E  5056               	movf	_t_fim_fase2,w,c
 25517  004150  5C38               	subwf	_t_controle_fim_fases,w,c
 25518  004152  A0D8               	btfss	status,0,c
 25519  004154  D031               	goto	i2l1132
 25520                           
 25521                           ; BSR set to: 0
 25522  004156  5056               	movf	_t_fim_fase2,w,c
 25523  004158  B4D8               	btfsc	status,2,c
 25524  00415A  D02E               	goto	i2l1132
 25525                           
 25526                           ; BSR set to: 0
 25527                           ;controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 25528  00415C  0EF6               	movlw	low _tempajt
 25529  00415E  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25530  004160  0E00               	movlw	high _tempajt
 25531  004162  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25532  004164  0E55               	movlw	85
 25533  004166  6E08               	movwf	i2setRangeValor@_min,c
 25534  004168  0E97               	movlw	151
 25535  00416A  6E09               	movwf	i2setRangeValor@_max,c
 25536  00416C  0E01               	movlw	1
 25537  00416E  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25538  004170  0E2B               	movlw	43
 25539  004172  ECFE  F029         	call	i2_setRangeValor
 25540  004176  D01E               	goto	i2l1130
 25541  004178                     i2l1127:
 25542  004178  0E85               	movlw	133
 25543  00417A  0100               	movlb	0	; () banked
 25544  00417C  19F6               	xorwf	_tempajt& (0+255),w,b
 25545  00417E  A4D8               	btfss	status,2,c
 25546  004180  D019               	goto	i2l1130
 25547                           
 25548                           ; BSR set to: 0
 25549  004182  0E03               	movlw	3
 25550  004184  19F8               	xorwf	_fase& (0+255),w,b
 25551  004186  A4D8               	btfss	status,2,c
 25552  004188  D015               	goto	i2l1130
 25553                           
 25554                           ; BSR set to: 0
 25555                           ;controle.h: 104: t_controle_fim_fases++;
 25556  00418A  2A38               	incf	_t_controle_fim_fases,f,c
 25557                           
 25558                           ; BSR set to: 0
 25559                           ;controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 25560  00418C  5055               	movf	_t_fim_fase3,w,c
 25561  00418E  5C38               	subwf	_t_controle_fim_fases,w,c
 25562  004190  A0D8               	btfss	status,0,c
 25563  004192  D012               	goto	i2l1132
 25564                           
 25565                           ; BSR set to: 0
 25566  004194  5055               	movf	_t_fim_fase3,w,c
 25567  004196  B4D8               	btfsc	status,2,c
 25568  004198  D00F               	goto	i2l1132
 25569                           
 25570                           ; BSR set to: 0
 25571                           ;controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 25572  00419A  0EF6               	movlw	low _tempajt
 25573  00419C  6E06               	movwf	i2setRangeValor@_var_ajt,c
 25574  00419E  0E00               	movlw	high _tempajt
 25575  0041A0  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 25576  0041A2  0E55               	movlw	85
 25577  0041A4  6E08               	movwf	i2setRangeValor@_min,c
 25578  0041A6  0E97               	movlw	151
 25579  0041A8  6E09               	movwf	i2setRangeValor@_max,c
 25580  0041AA  0E01               	movlw	1
 25581  0041AC  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 25582  0041AE  0E2B               	movlw	43
 25583  0041B0  ECFE  F029         	call	i2_setRangeValor
 25584  0041B4                     i2l1130:
 25585                           
 25586                           ;controle.h: 110: t_controle_fim_fases = 0;
 25587  0041B4  0E00               	movlw	0
 25588  0041B6  6E38               	movwf	_t_controle_fim_fases,c
 25589  0041B8                     i2l1132:
 25590                           
 25591                           ;controle.h: 111: }
 25592                           ;controle.h: 112: }
 25593                           ;controle.h: 114: if (hor > 23) {
 25594  0041B8  0E17               	movlw	23
 25595  0041BA  6444               	cpfsgt	_hor,c
 25596  0041BC  0012               	return	
 25597                           
 25598                           ;controle.h: 115: hor = 0;
 25599  0041BE  0E00               	movlw	0
 25600  0041C0  6E44               	movwf	_hor,c
 25601  0041C2  0012               	return	
 25602  0041C4                     __end_of_timer:
 25603                           	opt stack 0
 25604                           tosu	equ	0xFFF
 25605                           tosh	equ	0xFFE
 25606                           tosl	equ	0xFFD
 25607                           pclatu	equ	0xFFB
 25608                           pclath	equ	0xFFA
 25609                           tblptru	equ	0xFF8
 25610                           tblptrh	equ	0xFF7
 25611                           tblptrl	equ	0xFF6
 25612                           tablat	equ	0xFF5
 25613                           prodh	equ	0xFF4
 25614                           prodl	equ	0xFF3
 25615                           intcon	equ	0xFF2
 25616                           intcon2	equ	0xFF1
 25617                           intcon3	equ	0xFF0
 25618                           indf0	equ	0xFEF
 25619                           postinc0	equ	0xFEE
 25620                           fsr0h	equ	0xFEA
 25621                           fsr0l	equ	0xFE9
 25622                           wreg	equ	0xFE8
 25623                           indf1	equ	0xFE7
 25624                           postinc1	equ	0xFE6
 25625                           postdec1	equ	0xFE5
 25626                           plusw1	equ	0xFE3
 25627                           fsr1h	equ	0xFE2
 25628                           fsr1l	equ	0xFE1
 25629                           indf2	equ	0xFDF
 25630                           postinc2	equ	0xFDE
 25631                           postdec2	equ	0xFDD
 25632                           plusw2	equ	0xFDB
 25633                           fsr2h	equ	0xFDA
 25634                           fsr2l	equ	0xFD9
 25635                           status	equ	0xFD8
 25636                           
 25637 ;; *************** function i2_setRangeValor *****************
 25638 ;; Defined at:
 25639 ;;		line 76 in file "src/FuncoesControlador.h"
 25640 ;; Parameters:    Size  Location     Type
 25641 ;;  _acao           1    wreg     unsigned char 
 25642 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 25643 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 25644 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 25645 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 25646 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 25647 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 25648 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 25649 ;;		 -> clima(1), 
 25650 ;;  _min            1    7[COMRAM] unsigned char 
 25651 ;;  _max            1    8[COMRAM] unsigned char 
 25652 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 25653 ;; Auto vars:     Size  Location     Type
 25654 ;;  _acao           1   13[COMRAM] unsigned char 
 25655 ;;  setRangeValo    2   14[COMRAM] int 
 25656 ;; Return value:  Size  Location     Type
 25657 ;;                  1    wreg      void 
 25658 ;; Registers used:
 25659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25660 ;; Tracked objects:
 25661 ;;		On entry : 0/0
 25662 ;;		On exit  : 0/0
 25663 ;;		Unchanged: 0/0
 25664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25665 ;;      Params:         5       0       0       0       0       0       0       0       0
 25666 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25667 ;;      Temps:          3       0       0       0       0       0       0       0       0
 25668 ;;      Totals:        11       0       0       0       0       0       0       0       0
 25669 ;;Total ram usage:       11 bytes
 25670 ;; Hardware stack levels used:    1
 25671 ;; Hardware stack levels required when called:    3
 25672 ;; This function calls:
 25673 ;;		i2_writeEEPROM_ext
 25674 ;; This function is called by:
 25675 ;;		_timer
 25676 ;; This function uses a non-reentrant model
 25677 ;;
 25678                           
 25679                           	psect	text66
 25680  0053FC                     __ptext66:
 25681                           	opt stack 0
 25682  0053FC                     i2_setRangeValor:
 25683                           	opt stack 20
 25684                           
 25685                           ;incstack = 0
 25686                           ;i2setRangeValor@_acao stored from wreg
 25687  0053FC  6E0E               	movwf	i2setRangeValor@_acao,c
 25688                           
 25689                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 25690  0053FE  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25691  005402  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25692  005406  50DF               	movf	indf2,w,c
 25693  005408  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25694  00540A  500B               	movf	??i2_setRangeValor,w,c
 25695  00540C  6E0F               	movwf	i2setRangeValor@_aux,c
 25696  00540E  6A10               	clrf	i2setRangeValor@_aux+1,c
 25697                           
 25698                           ;FuncoesControlador.h: 78: switch (_acao) {
 25699  005410  D02C               	goto	i2l942
 25700  005412                     
 25701                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 25702  005412  5009               	movf	i2setRangeValor@_max,w,c
 25703  005414  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25704  005416  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25705  005418  500B               	movf	??i2_setRangeValor,w,c
 25706  00541A  5C0F               	subwf	i2setRangeValor@_aux,w,c
 25707  00541C  5010               	movf	i2setRangeValor@_aux+1,w,c
 25708  00541E  0A80               	xorlw	128
 25709  005420  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25710  005422  500C               	movf	??i2_setRangeValor+1,w,c
 25711  005424  0A80               	xorlw	128
 25712  005426  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25713  005428  B0D8               	btfsc	status,0,c
 25714  00542A  D003               	goto	i2l945
 25715  00542C  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 25716  00542E  2A10               	incf	i2setRangeValor@_aux+1,f,c
 25717  005430  D013               	goto	L30
 25718  005432                     i2l945:
 25719  005432  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 25720  005436  D017               	goto	L31
 25721  005438                     
 25722                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 25723  005438  5008               	movf	i2setRangeValor@_min,w,c
 25724  00543A  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 25725  00543C  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 25726  00543E  500F               	movf	i2setRangeValor@_aux,w,c
 25727  005440  5C0B               	subwf	??i2_setRangeValor,w,c
 25728  005442  500C               	movf	??i2_setRangeValor+1,w,c
 25729  005444  0A80               	xorlw	128
 25730  005446  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 25731  005448  5010               	movf	i2setRangeValor@_aux+1,w,c
 25732  00544A  0A80               	xorlw	128
 25733  00544C  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 25734  00544E  B0D8               	btfsc	status,0,c
 25735  005450  D008               	goto	i2l951
 25736  005452  060F               	decf	i2setRangeValor@_aux,f,c
 25737  005454  A0D8               	btfss	status,0,c
 25738  005456  0610               	decf	i2setRangeValor@_aux+1,f,c
 25739  005458                     L30:
 25740  005458  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 25741  00545C  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 25742  005460  D00B               	goto	i2l948
 25743  005462                     i2l951:
 25744  005462  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 25745  005466                     L31:
 25746  005466  6A10               	clrf	i2setRangeValor@_aux+1,c
 25747                           
 25748                           ;FuncoesControlador.h: 85: }
 25749                           
 25750                           ;FuncoesControlador.h: 84: break;
 25751  005468  D007               	goto	i2l948
 25752  00546A                     i2l942:
 25753  00546A  500E               	movf	i2setRangeValor@_acao,w,c
 25754                           
 25755                           ; Switch size 1, requested type "space"
 25756                           ; Number of cases is 2, Range of values is 43 to 45
 25757                           ; switch strategies available:
 25758                           ; Name         Instructions Cycles
 25759                           ; simple_byte            7     4 (average)
 25760                           ;	Chosen strategy is simple_byte
 25761  00546C  0A2B               	xorlw	43	; case 43
 25762  00546E  B4D8               	btfsc	status,2,c
 25763  005470  D7D0               	goto	i2l943
 25764  005472  0A06               	xorlw	6	; case 45
 25765  005474  B4D8               	btfsc	status,2,c
 25766  005476  D7E0               	goto	i2l949
 25767  005478                     i2l948:
 25768                           
 25769                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 25770  005478  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25771  00547A  B4D8               	btfsc	status,2,c
 25772  00547C  D005               	goto	i2l954
 25773                           
 25774                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 25775  00547E  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 25776  005482  500A               	movf	i2setRangeValor@end_eeprom,w,c
 25777  005484  ECA8  F02D         	call	i2_writeEEPROM_ext
 25778  005488                     i2l954:
 25779                           
 25780                           ;FuncoesControlador.h: 88: }
 25781                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 25782  005488  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 25783  00548C  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 25784  005490  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 25785  005494  0012               	return		;funcret
 25786  005496                     __end_ofi2_setRangeValor:
 25787                           	opt stack 0
 25788                           tosu	equ	0xFFF
 25789                           tosh	equ	0xFFE
 25790                           tosl	equ	0xFFD
 25791                           pclatu	equ	0xFFB
 25792                           pclath	equ	0xFFA
 25793                           tblptru	equ	0xFF8
 25794                           tblptrh	equ	0xFF7
 25795                           tblptrl	equ	0xFF6
 25796                           tablat	equ	0xFF5
 25797                           prodh	equ	0xFF4
 25798                           prodl	equ	0xFF3
 25799                           intcon	equ	0xFF2
 25800                           intcon2	equ	0xFF1
 25801                           intcon3	equ	0xFF0
 25802                           indf0	equ	0xFEF
 25803                           postinc0	equ	0xFEE
 25804                           fsr0h	equ	0xFEA
 25805                           fsr0l	equ	0xFE9
 25806                           wreg	equ	0xFE8
 25807                           indf1	equ	0xFE7
 25808                           postinc1	equ	0xFE6
 25809                           postdec1	equ	0xFE5
 25810                           plusw1	equ	0xFE3
 25811                           fsr1h	equ	0xFE2
 25812                           fsr1l	equ	0xFE1
 25813                           indf2	equ	0xFDF
 25814                           postinc2	equ	0xFDE
 25815                           postdec2	equ	0xFDD
 25816                           plusw2	equ	0xFDB
 25817                           fsr2h	equ	0xFDA
 25818                           fsr2l	equ	0xFD9
 25819                           status	equ	0xFD8
 25820                           
 25821 ;; *************** function i2_writeEEPROM_ext *****************
 25822 ;; Defined at:
 25823 ;;		line 14 in file "src/Eeprom_ext.h"
 25824 ;; Parameters:    Size  Location     Type
 25825 ;;  adress          1    wreg     unsigned char 
 25826 ;;  data            1    3[COMRAM] unsigned char 
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;  adress          1    4[COMRAM] unsigned char 
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1    wreg      void 
 25831 ;; Registers used:
 25832 ;;		wreg, status,2, status,0, cstack
 25833 ;; Tracked objects:
 25834 ;;		On entry : 0/0
 25835 ;;		On exit  : 0/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25838 ;;      Params:         1       0       0       0       0       0       0       0       0
 25839 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25841 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25842 ;;Total ram usage:        2 bytes
 25843 ;; Hardware stack levels used:    1
 25844 ;; Hardware stack levels required when called:    2
 25845 ;; This function calls:
 25846 ;;		i2_I2C_Start
 25847 ;;		i2_I2C_Stop
 25848 ;;		i2_I2C_Write
 25849 ;;		i2_delay
 25850 ;; This function is called by:
 25851 ;;		i2_setRangeValor
 25852 ;; This function uses a non-reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text67
 25856  005B50                     __ptext67:
 25857                           	opt stack 0
 25858  005B50                     i2_writeEEPROM_ext:
 25859                           	opt stack 20
 25860                           
 25861                           ;incstack = 0
 25862                           ;i2writeEEPROM_ext@adress stored from wreg
 25863  005B50  6E05               	movwf	i2writeEEPROM_ext@adress,c
 25864                           
 25865                           ;Eeprom_ext.h: 16: I2C_Start();
 25866  005B52  EC9E  F02F         	call	i2_I2C_Start	;wreg free
 25867                           
 25868                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 25869  005B56  0E00               	movlw	0
 25870  005B58  6E03               	movwf	i2I2C_Write@d+1,c
 25871  005B5A  0EA0               	movlw	160
 25872  005B5C  6E02               	movwf	i2I2C_Write@d,c
 25873  005B5E  EC89  F02F         	call	i2_I2C_Write	;wreg free
 25874                           
 25875                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 25876  005B62  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 25877  005B66  6A03               	clrf	i2I2C_Write@d+1,c
 25878  005B68  EC89  F02F         	call	i2_I2C_Write	;wreg free
 25879                           
 25880                           ;Eeprom_ext.h: 20: I2C_Write(data);
 25881  005B6C  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 25882  005B70  6A03               	clrf	i2I2C_Write@d+1,c
 25883  005B72  EC89  F02F         	call	i2_I2C_Write	;wreg free
 25884                           
 25885                           ;Eeprom_ext.h: 21: I2C_Stop();
 25886  005B76  EC9A  F02F         	call	i2_I2C_Stop	;wreg free
 25887                           
 25888                           ;Eeprom_ext.h: 22: delay(105);
 25889  005B7A  0E00               	movlw	0
 25890  005B7C  6E02               	movwf	i2delay@x+1,c
 25891  005B7E  0E69               	movlw	105
 25892  005B80  6E01               	movwf	i2delay@x,c
 25893  005B82  EC0F  F02F         	call	i2_delay	;wreg free
 25894  005B86  0012               	return		;funcret
 25895  005B88                     __end_ofi2_writeEEPROM_ext:
 25896                           	opt stack 0
 25897                           tosu	equ	0xFFF
 25898                           tosh	equ	0xFFE
 25899                           tosl	equ	0xFFD
 25900                           pclatu	equ	0xFFB
 25901                           pclath	equ	0xFFA
 25902                           tblptru	equ	0xFF8
 25903                           tblptrh	equ	0xFF7
 25904                           tblptrl	equ	0xFF6
 25905                           tablat	equ	0xFF5
 25906                           prodh	equ	0xFF4
 25907                           prodl	equ	0xFF3
 25908                           intcon	equ	0xFF2
 25909                           intcon2	equ	0xFF1
 25910                           intcon3	equ	0xFF0
 25911                           indf0	equ	0xFEF
 25912                           postinc0	equ	0xFEE
 25913                           fsr0h	equ	0xFEA
 25914                           fsr0l	equ	0xFE9
 25915                           wreg	equ	0xFE8
 25916                           indf1	equ	0xFE7
 25917                           postinc1	equ	0xFE6
 25918                           postdec1	equ	0xFE5
 25919                           plusw1	equ	0xFE3
 25920                           fsr1h	equ	0xFE2
 25921                           fsr1l	equ	0xFE1
 25922                           indf2	equ	0xFDF
 25923                           postinc2	equ	0xFDE
 25924                           postdec2	equ	0xFDD
 25925                           plusw2	equ	0xFDB
 25926                           fsr2h	equ	0xFDA
 25927                           fsr2l	equ	0xFD9
 25928                           status	equ	0xFD8
 25929                           
 25930 ;; *************** function i2_delay *****************
 25931 ;; Defined at:
 25932 ;;		line 18 in file "src/function.c"
 25933 ;; Parameters:    Size  Location     Type
 25934 ;;  x               2    0[COMRAM] int 
 25935 ;; Auto vars:     Size  Location     Type
 25936 ;;		None
 25937 ;; Return value:  Size  Location     Type
 25938 ;;                  1    wreg      void 
 25939 ;; Registers used:
 25940 ;;		wreg, status,2, status,0
 25941 ;; Tracked objects:
 25942 ;;		On entry : 0/0
 25943 ;;		On exit  : 0/0
 25944 ;;		Unchanged: 0/0
 25945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25946 ;;      Params:         2       0       0       0       0       0       0       0       0
 25947 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25948 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25949 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25950 ;;Total ram usage:        3 bytes
 25951 ;; Hardware stack levels used:    1
 25952 ;; This function calls:
 25953 ;;		Nothing
 25954 ;; This function is called by:
 25955 ;;		i2_writeEEPROM_ext
 25956 ;; This function uses a non-reentrant model
 25957 ;;
 25958                           
 25959                           	psect	text68
 25960  005E1E                     __ptext68:
 25961                           	opt stack 0
 25962  005E1E                     i2_delay:
 25963                           	opt stack 21
 25964                           
 25965                           ;function.c: 19: while (x--) {
 25966                           
 25967                           ;incstack = 0
 25968  005E1E  D008               	goto	i2l1467
 25969  005E20                     i2l6554:
 25970                           
 25971                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 25972  005E20  0E03               	movlw	3
 25973  005E22  6E03               	movwf	??i2_delay& (0+255),c
 25974  005E24  0E98               	movlw	152
 25975  005E26                     i2u1563_47:
 25976  005E26  2EE8               	decfsz	wreg,f,c
 25977  005E28  D7FE               	bra	i2u1563_47
 25978  005E2A  2E03               	decfsz	??i2_delay& (0+255),f,c
 25979  005E2C  D7FC               	bra	i2u1563_47
 25980  005E2E  0004               	clrwdt		;# 
 25981  005E30                     i2l1467:
 25982  005E30  0601               	decf	i2delay@x,f,c
 25983  005E32  A0D8               	btfss	status,0,c
 25984  005E34  0602               	decf	i2delay@x+1,f,c
 25985  005E36  2801               	incf	i2delay@x,w,c
 25986  005E38  E1F3               	bnz	i2l6554
 25987  005E3A  2802               	incf	i2delay@x+1,w,c
 25988  005E3C  B4D8               	btfsc	status,2,c
 25989  005E3E  0012               	return	
 25990  005E40  D7EF               	goto	i2l1468
 25991  005E42                     __end_ofi2_delay:
 25992                           	opt stack 0
 25993                           tosu	equ	0xFFF
 25994                           tosh	equ	0xFFE
 25995                           tosl	equ	0xFFD
 25996                           pclatu	equ	0xFFB
 25997                           pclath	equ	0xFFA
 25998                           tblptru	equ	0xFF8
 25999                           tblptrh	equ	0xFF7
 26000                           tblptrl	equ	0xFF6
 26001                           tablat	equ	0xFF5
 26002                           prodh	equ	0xFF4
 26003                           prodl	equ	0xFF3
 26004                           intcon	equ	0xFF2
 26005                           intcon2	equ	0xFF1
 26006                           intcon3	equ	0xFF0
 26007                           indf0	equ	0xFEF
 26008                           postinc0	equ	0xFEE
 26009                           fsr0h	equ	0xFEA
 26010                           fsr0l	equ	0xFE9
 26011                           wreg	equ	0xFE8
 26012                           indf1	equ	0xFE7
 26013                           postinc1	equ	0xFE6
 26014                           postdec1	equ	0xFE5
 26015                           plusw1	equ	0xFE3
 26016                           fsr1h	equ	0xFE2
 26017                           fsr1l	equ	0xFE1
 26018                           indf2	equ	0xFDF
 26019                           postinc2	equ	0xFDE
 26020                           postdec2	equ	0xFDD
 26021                           plusw2	equ	0xFDB
 26022                           fsr2h	equ	0xFDA
 26023                           fsr2l	equ	0xFD9
 26024                           status	equ	0xFD8
 26025                           
 26026 ;; *************** function _receiveByteSerial *****************
 26027 ;; Defined at:
 26028 ;;		line 17 in file "src/serial.c"
 26029 ;; Parameters:    Size  Location     Type
 26030 ;;  byte            1    wreg     unsigned char 
 26031 ;; Auto vars:     Size  Location     Type
 26032 ;;  byte            1    8[COMRAM] unsigned char 
 26033 ;; Return value:  Size  Location     Type
 26034 ;;                  1    wreg      void 
 26035 ;; Registers used:
 26036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26037 ;; Tracked objects:
 26038 ;;		On entry : 0/0
 26039 ;;		On exit  : 0/0
 26040 ;;		Unchanged: 0/0
 26041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26042 ;;      Params:         0       0       0       0       0       0       0       0       0
 26043 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26044 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26045 ;;      Totals:         3       0       0       0       0       0       0       0       0
 26046 ;;Total ram usage:        3 bytes
 26047 ;; Hardware stack levels used:    1
 26048 ;; Hardware stack levels required when called:    1
 26049 ;; This function calls:
 26050 ;;		i2_strlen
 26051 ;; This function is called by:
 26052 ;;		_TIMER0
 26053 ;; This function uses a non-reentrant model
 26054 ;;
 26055                           
 26056                           	psect	text69
 26057  00580C                     __ptext69:
 26058                           	opt stack 0
 26059  00580C                     _receiveByteSerial:
 26060                           	opt stack 23
 26061                           
 26062                           ;incstack = 0
 26063                           ;receiveByteSerial@byte stored from wreg
 26064  00580C  6E09               	movwf	receiveByteSerial@byte,c
 26065                           
 26066                           ;serial.c: 18: if (_BF_enable_receive) {
 26067  00580E  503F               	movf	__BF_enable_receive,w,c
 26068  005810  B4D8               	btfsc	status,2,c
 26069  005812  D011               	goto	i2l1597
 26070                           
 26071                           ;serial.c: 19: bufferSerial[_BF_current++] = byte;
 26072  005814  503D               	movf	__BF_current,w,c
 26073  005816  0D01               	mullw	1
 26074  005818  0E69               	movlw	low _bufferSerial
 26075  00581A  24F3               	addwf	prodl,w,c
 26076  00581C  6ED9               	movwf	fsr2l,c
 26077  00581E  0E02               	movlw	high _bufferSerial
 26078  005820  20F4               	addwfc	prodh,w,c
 26079  005822  6EDA               	movwf	fsr2h,c
 26080  005824  C009  FFDF         	movff	receiveByteSerial@byte,indf2
 26081  005828  2A3D               	incf	__BF_current,f,c
 26082                           
 26083                           ;serial.c: 20: if (_BF_current >= 100) {
 26084  00582A  0E63               	movlw	99
 26085  00582C  643D               	cpfsgt	__BF_current,c
 26086  00582E  0012               	return	
 26087                           
 26088                           ;serial.c: 21: _BF_current = 0;
 26089  005830  0E00               	movlw	0
 26090  005832  6E3D               	movwf	__BF_current,c
 26091                           
 26092                           ;serial.c: 22: }
 26093                           ;serial.c: 23: } else if (_BF_start[_BF_i_count] == byte) {
 26094  005834  0012               	return	
 26095  005836                     i2l1597:
 26096  005836  503E               	movf	__BF_i_count,w,c
 26097  005838  0D01               	mullw	1
 26098  00583A  0EDC               	movlw	low __BF_start
 26099  00583C  24F3               	addwf	prodl,w,c
 26100  00583E  6ED9               	movwf	fsr2l,c
 26101  005840  0E01               	movlw	high __BF_start
 26102  005842  20F4               	addwfc	prodh,w,c
 26103  005844  6EDA               	movwf	fsr2h,c
 26104  005846  5009               	movf	receiveByteSerial@byte,w,c
 26105  005848  18DE               	xorwf	postinc2,w,c
 26106  00584A  A4D8               	btfss	status,2,c
 26107  00584C  D013               	goto	i2l1600
 26108                           
 26109                           ;serial.c: 24: _BF_i_count++;
 26110  00584E  2A3E               	incf	__BF_i_count,f,c
 26111                           
 26112                           ;serial.c: 25: if(_BF_i_count >= strlen(_BF_start)){
 26113  005850  0EDC               	movlw	low __BF_start
 26114  005852  6E01               	movwf	i2strlen@s,c
 26115  005854  0E01               	movlw	high __BF_start
 26116  005856  6E02               	movwf	i2strlen@s+1,c
 26117  005858  ECBB  F02C         	call	i2_strlen	;wreg free
 26118  00585C  503E               	movf	__BF_i_count,w,c
 26119  00585E  6E07               	movwf	??_receiveByteSerial& (0+255),c
 26120  005860  6A08               	clrf	(??_receiveByteSerial+1)& (0+255),c
 26121  005862  5001               	movf	?i2_strlen,w,c
 26122  005864  5C07               	subwf	??_receiveByteSerial,w,c
 26123  005866  5002               	movf	?i2_strlen+1,w,c
 26124  005868  5808               	subwfb	??_receiveByteSerial+1,w,c
 26125  00586A  A0D8               	btfss	status,0,c
 26126  00586C  0012               	return	
 26127                           
 26128                           ;serial.c: 26: _BF_enable_receive = 1;
 26129  00586E  0E01               	movlw	1
 26130  005870  6E3F               	movwf	__BF_enable_receive,c
 26131                           
 26132                           ;serial.c: 27: }
 26133                           ;serial.c: 28: } else {
 26134  005872  0012               	return	
 26135  005874                     i2l1600:
 26136                           
 26137                           ;serial.c: 29: _BF_i_count = 0;
 26138  005874  0E00               	movlw	0
 26139  005876  6E3E               	movwf	__BF_i_count,c
 26140  005878  0012               	return	
 26141  00587A                     __end_of_receiveByteSerial:
 26142                           	opt stack 0
 26143                           tosu	equ	0xFFF
 26144                           tosh	equ	0xFFE
 26145                           tosl	equ	0xFFD
 26146                           pclatu	equ	0xFFB
 26147                           pclath	equ	0xFFA
 26148                           tblptru	equ	0xFF8
 26149                           tblptrh	equ	0xFF7
 26150                           tblptrl	equ	0xFF6
 26151                           tablat	equ	0xFF5
 26152                           prodh	equ	0xFF4
 26153                           prodl	equ	0xFF3
 26154                           intcon	equ	0xFF2
 26155                           intcon2	equ	0xFF1
 26156                           intcon3	equ	0xFF0
 26157                           indf0	equ	0xFEF
 26158                           postinc0	equ	0xFEE
 26159                           fsr0h	equ	0xFEA
 26160                           fsr0l	equ	0xFE9
 26161                           wreg	equ	0xFE8
 26162                           indf1	equ	0xFE7
 26163                           postinc1	equ	0xFE6
 26164                           postdec1	equ	0xFE5
 26165                           plusw1	equ	0xFE3
 26166                           fsr1h	equ	0xFE2
 26167                           fsr1l	equ	0xFE1
 26168                           indf2	equ	0xFDF
 26169                           postinc2	equ	0xFDE
 26170                           postdec2	equ	0xFDD
 26171                           plusw2	equ	0xFDB
 26172                           fsr2h	equ	0xFDA
 26173                           fsr2l	equ	0xFD9
 26174                           status	equ	0xFD8
 26175                           
 26176 ;; *************** function i2_strlen *****************
 26177 ;; Defined at:
 26178 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 26179 ;; Parameters:    Size  Location     Type
 26180 ;;  s               2    0[COMRAM] PTR const unsigned char 
 26181 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 26182 ;;		 -> STR_80(4), STR_79(3), STR_77(4), STR_76(7), 
 26183 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 26184 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 26185 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 26186 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 26187 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), bufferSerial(100), 
 26188 ;;		 -> STR_40(3), STR_38(3), ssid(15), STR_34(4), 
 26189 ;;		 -> STR_33(2), STR_31(4), STR_30(7), STR_25(7), 
 26190 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 26191 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 26192 ;;		 -> STR_12(3), STR_10(4), 
 26193 ;; Auto vars:     Size  Location     Type
 26194 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 26195 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_82(3), 
 26196 ;;		 -> STR_80(4), STR_79(3), STR_77(4), STR_76(7), 
 26197 ;;		 -> STR_75(3), STR_73(4), STR_72(5), enviaDadosWifi@AUX(15), 
 26198 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 26199 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 26200 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 26201 ;;		 -> STR_51(3), STR_49(4), wifi_MAC(12), bufferSerial(100), 
 26202 ;;		 -> STR_40(3), STR_38(3), ssid(15), STR_34(4), 
 26203 ;;		 -> STR_33(2), STR_31(4), STR_30(7), STR_25(7), 
 26204 ;;		 -> STR_24(3), STR_22(4), STR_21(3), STR_19(4), 
 26205 ;;		 -> STR_18(3), STR_16(4), STR_15(3), STR_13(4), 
 26206 ;;		 -> STR_12(3), STR_10(4), 
 26207 ;; Return value:  Size  Location     Type
 26208 ;;                  2    0[COMRAM] unsigned int 
 26209 ;; Registers used:
 26210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 26211 ;; Tracked objects:
 26212 ;;		On entry : 0/0
 26213 ;;		On exit  : 0/0
 26214 ;;		Unchanged: 0/0
 26215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26216 ;;      Params:         2       0       0       0       0       0       0       0       0
 26217 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26218 ;;      Temps:          2       0       0       0       0       0       0       0       0
 26219 ;;      Totals:         6       0       0       0       0       0       0       0       0
 26220 ;;Total ram usage:        6 bytes
 26221 ;; Hardware stack levels used:    1
 26222 ;; This function calls:
 26223 ;;		Nothing
 26224 ;; This function is called by:
 26225 ;;		_receiveByteSerial
 26226 ;; This function uses a non-reentrant model
 26227 ;;
 26228                           
 26229                           	psect	text70
 26230  005976                     __ptext70:
 26231                           	opt stack 0
 26232  005976                     i2_strlen:
 26233                           	opt stack 23
 26234                           
 26235                           ;incstack = 0
 26236  005976  C001  F005         	movff	i2strlen@s,i2strlen@cp
 26237  00597A  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 26238  00597E  D002               	goto	i2l2260
 26239  005980  4A05               	infsnz	i2strlen@cp,f,c
 26240  005982  2A06               	incf	i2strlen@cp+1,f,c
 26241  005984                     i2l2260:
 26242  005984  C005  FFF6         	movff	i2strlen@cp,tblptrl
 26243  005988  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 26244  00598C  6AF8               	clrf	tblptru,c
 26245  00598E  0E07               	movlw	(high __ramtop+-1)
 26246  005990  64F7               	cpfsgt	tblptrh,c
 26247  005992  D003               	bra	i2u1263_47
 26248  005994  0008               	tblrd		*
 26249  005996  50F5               	movf	tablat,w,c
 26250  005998  D005               	bra	i2u1263_40
 26251  00599A                     i2u1263_47:
 26252  00599A  CFF6 FFE9          	movff	tblptrl,fsr0l
 26253  00599E  CFF7 FFEA          	movff	tblptrh,fsr0h
 26254  0059A2  50EF               	movf	indf0,w,c
 26255  0059A4                     i2u1263_40:
 26256  0059A4  0900               	iorlw	0
 26257  0059A6  A4D8               	btfss	status,2,c
 26258  0059A8  D7EB               	goto	i2l2261
 26259  0059AA  C001  F003         	movff	i2strlen@s,??i2_strlen
 26260  0059AE  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 26261  0059B2  1E03               	comf	??i2_strlen,f,c
 26262  0059B4  1E04               	comf	??i2_strlen+1,f,c
 26263  0059B6  4A03               	infsnz	??i2_strlen,f,c
 26264  0059B8  2A04               	incf	??i2_strlen+1,f,c
 26265  0059BA  5005               	movf	i2strlen@cp,w,c
 26266  0059BC  2403               	addwf	??i2_strlen,w,c
 26267  0059BE  6E01               	movwf	?i2_strlen,c
 26268  0059C0  5006               	movf	i2strlen@cp+1,w,c
 26269  0059C2  2004               	addwfc	??i2_strlen+1,w,c
 26270  0059C4  6E02               	movwf	?i2_strlen+1,c
 26271  0059C6  0012               	return	
 26272  0059C8                     __end_ofi2_strlen:
 26273                           	opt stack 0
 26274                           tosu	equ	0xFFF
 26275                           tosh	equ	0xFFE
 26276                           tosl	equ	0xFFD
 26277                           pclatu	equ	0xFFB
 26278                           pclath	equ	0xFFA
 26279                           tblptru	equ	0xFF8
 26280                           tblptrh	equ	0xFF7
 26281                           tblptrl	equ	0xFF6
 26282                           tablat	equ	0xFF5
 26283                           prodh	equ	0xFF4
 26284                           prodl	equ	0xFF3
 26285                           intcon	equ	0xFF2
 26286                           intcon2	equ	0xFF1
 26287                           intcon3	equ	0xFF0
 26288                           indf0	equ	0xFEF
 26289                           postinc0	equ	0xFEE
 26290                           fsr0h	equ	0xFEA
 26291                           fsr0l	equ	0xFE9
 26292                           wreg	equ	0xFE8
 26293                           indf1	equ	0xFE7
 26294                           postinc1	equ	0xFE6
 26295                           postdec1	equ	0xFE5
 26296                           plusw1	equ	0xFE3
 26297                           fsr1h	equ	0xFE2
 26298                           fsr1l	equ	0xFE1
 26299                           indf2	equ	0xFDF
 26300                           postinc2	equ	0xFDE
 26301                           postdec2	equ	0xFDD
 26302                           plusw2	equ	0xFDB
 26303                           fsr2h	equ	0xFDA
 26304                           fsr2l	equ	0xFD9
 26305                           status	equ	0xFD8
 26306                           
 26307 ;; *************** function _readButtons *****************
 26308 ;; Defined at:
 26309 ;;		line 19 in file "src/Teclado.h"
 26310 ;; Parameters:    Size  Location     Type
 26311 ;;		None
 26312 ;; Auto vars:     Size  Location     Type
 26313 ;;		None
 26314 ;; Return value:  Size  Location     Type
 26315 ;;                  1    wreg      void 
 26316 ;; Registers used:
 26317 ;;		wreg, status,2, status,0, cstack
 26318 ;; Tracked objects:
 26319 ;;		On entry : 0/0
 26320 ;;		On exit  : 0/0
 26321 ;;		Unchanged: 0/0
 26322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26323 ;;      Params:         0       0       0       0       0       0       0       0       0
 26324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26326 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26327 ;;Total ram usage:        0 bytes
 26328 ;; Hardware stack levels used:    1
 26329 ;; Hardware stack levels required when called:    2
 26330 ;; This function calls:
 26331 ;;		i2_I2C_Read
 26332 ;;		i2_I2C_Start
 26333 ;;		i2_I2C_Stop
 26334 ;;		i2_I2C_Write
 26335 ;; This function is called by:
 26336 ;;		_TIMER0
 26337 ;; This function uses a non-reentrant model
 26338 ;;
 26339                           
 26340                           	psect	text71
 26341  005D86                     __ptext71:
 26342                           	opt stack 0
 26343  005D86                     _readButtons:
 26344                           	opt stack 22
 26345                           
 26346                           ;Teclado.h: 20: I2C_Start();
 26347                           
 26348                           ;incstack = 0
 26349  005D86  EC9E  F02F         	call	i2_I2C_Start	;wreg free
 26350                           
 26351                           ;Teclado.h: 21: I2C_Write(0x4F);
 26352  005D8A  0E00               	movlw	0
 26353  005D8C  6E03               	movwf	i2I2C_Write@d+1,c
 26354  005D8E  0E4F               	movlw	79
 26355  005D90  6E02               	movwf	i2I2C_Write@d,c
 26356  005D92  EC89  F02F         	call	i2_I2C_Write	;wreg free
 26357                           
 26358                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 26359  005D96  0E00               	movlw	0
 26360  005D98  6E03               	movwf	i2I2C_Read@a+1,c
 26361  005D9A  0E00               	movlw	0
 26362  005D9C  6E02               	movwf	i2I2C_Read@a,c
 26363  005D9E  EC6F  F02E         	call	i2_I2C_Read	;wreg free
 26364  005DA2  5002               	movf	?i2_I2C_Read,w,c
 26365  005DA4  0AFF               	xorlw	255
 26366  005DA6  6E40               	movwf	_bt_flag,c
 26367                           
 26368                           ;Teclado.h: 23: I2C_Stop();
 26369  005DA8  EC9A  F02F         	call	i2_I2C_Stop	;wreg free
 26370  005DAC  0012               	return		;funcret
 26371  005DAE                     __end_of_readButtons:
 26372                           	opt stack 0
 26373                           tosu	equ	0xFFF
 26374                           tosh	equ	0xFFE
 26375                           tosl	equ	0xFFD
 26376                           pclatu	equ	0xFFB
 26377                           pclath	equ	0xFFA
 26378                           tblptru	equ	0xFF8
 26379                           tblptrh	equ	0xFF7
 26380                           tblptrl	equ	0xFF6
 26381                           tablat	equ	0xFF5
 26382                           prodh	equ	0xFF4
 26383                           prodl	equ	0xFF3
 26384                           intcon	equ	0xFF2
 26385                           intcon2	equ	0xFF1
 26386                           intcon3	equ	0xFF0
 26387                           indf0	equ	0xFEF
 26388                           postinc0	equ	0xFEE
 26389                           fsr0h	equ	0xFEA
 26390                           fsr0l	equ	0xFE9
 26391                           wreg	equ	0xFE8
 26392                           indf1	equ	0xFE7
 26393                           postinc1	equ	0xFE6
 26394                           postdec1	equ	0xFE5
 26395                           plusw1	equ	0xFE3
 26396                           fsr1h	equ	0xFE2
 26397                           fsr1l	equ	0xFE1
 26398                           indf2	equ	0xFDF
 26399                           postinc2	equ	0xFDE
 26400                           postdec2	equ	0xFDD
 26401                           plusw2	equ	0xFDB
 26402                           fsr2h	equ	0xFDA
 26403                           fsr2l	equ	0xFD9
 26404                           status	equ	0xFD8
 26405                           
 26406 ;; *************** function i2_I2C_Write *****************
 26407 ;; Defined at:
 26408 ;;		line 41 in file "src/I2C.c"
 26409 ;; Parameters:    Size  Location     Type
 26410 ;;  d               2    1[COMRAM] unsigned int 
 26411 ;; Auto vars:     Size  Location     Type
 26412 ;;		None
 26413 ;; Return value:  Size  Location     Type
 26414 ;;                  1    wreg      void 
 26415 ;; Registers used:
 26416 ;;		wreg, status,2, status,0, cstack
 26417 ;; Tracked objects:
 26418 ;;		On entry : 0/0
 26419 ;;		On exit  : 0/0
 26420 ;;		Unchanged: 0/0
 26421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26422 ;;      Params:         2       0       0       0       0       0       0       0       0
 26423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26425 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26426 ;;Total ram usage:        2 bytes
 26427 ;; Hardware stack levels used:    1
 26428 ;; Hardware stack levels required when called:    1
 26429 ;; This function calls:
 26430 ;;		i2_I2C_Wait
 26431 ;; This function is called by:
 26432 ;;		_readButtons
 26433 ;;		i2_writeEEPROM_ext
 26434 ;; This function uses a non-reentrant model
 26435 ;;
 26436                           
 26437                           	psect	text72
 26438  005F12                     __ptext72:
 26439                           	opt stack 0
 26440  005F12                     i2_I2C_Write:
 26441                           	opt stack 20
 26442                           
 26443                           ;I2C.c: 42: I2C_Wait();
 26444                           
 26445                           ;incstack = 0
 26446  005F12  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26447                           
 26448                           ;I2C.c: 43: SSPBUF = d;
 26449  005F16  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 26450  005F1A  0012               	return		;funcret
 26451  005F1C                     __end_ofi2_I2C_Write:
 26452                           	opt stack 0
 26453                           tosu	equ	0xFFF
 26454                           tosh	equ	0xFFE
 26455                           tosl	equ	0xFFD
 26456                           pclatu	equ	0xFFB
 26457                           pclath	equ	0xFFA
 26458                           tblptru	equ	0xFF8
 26459                           tblptrh	equ	0xFF7
 26460                           tblptrl	equ	0xFF6
 26461                           tablat	equ	0xFF5
 26462                           prodh	equ	0xFF4
 26463                           prodl	equ	0xFF3
 26464                           intcon	equ	0xFF2
 26465                           intcon2	equ	0xFF1
 26466                           intcon3	equ	0xFF0
 26467                           indf0	equ	0xFEF
 26468                           postinc0	equ	0xFEE
 26469                           fsr0h	equ	0xFEA
 26470                           fsr0l	equ	0xFE9
 26471                           wreg	equ	0xFE8
 26472                           indf1	equ	0xFE7
 26473                           postinc1	equ	0xFE6
 26474                           postdec1	equ	0xFE5
 26475                           plusw1	equ	0xFE3
 26476                           fsr1h	equ	0xFE2
 26477                           fsr1l	equ	0xFE1
 26478                           indf2	equ	0xFDF
 26479                           postinc2	equ	0xFDE
 26480                           postdec2	equ	0xFDD
 26481                           plusw2	equ	0xFDB
 26482                           fsr2h	equ	0xFDA
 26483                           fsr2l	equ	0xFD9
 26484                           status	equ	0xFD8
 26485                           
 26486 ;; *************** function i2_I2C_Stop *****************
 26487 ;; Defined at:
 26488 ;;		line 35 in file "src/I2C.c"
 26489 ;; Parameters:    Size  Location     Type
 26490 ;;		None
 26491 ;; Auto vars:     Size  Location     Type
 26492 ;;		None
 26493 ;; Return value:  Size  Location     Type
 26494 ;;                  1    wreg      void 
 26495 ;; Registers used:
 26496 ;;		wreg, status,2, status,0, cstack
 26497 ;; Tracked objects:
 26498 ;;		On entry : 0/0
 26499 ;;		On exit  : 0/0
 26500 ;;		Unchanged: 0/0
 26501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26502 ;;      Params:         0       0       0       0       0       0       0       0       0
 26503 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26504 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26505 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26506 ;;Total ram usage:        0 bytes
 26507 ;; Hardware stack levels used:    1
 26508 ;; Hardware stack levels required when called:    1
 26509 ;; This function calls:
 26510 ;;		i2_I2C_Wait
 26511 ;; This function is called by:
 26512 ;;		_readButtons
 26513 ;;		i2_writeEEPROM_ext
 26514 ;; This function uses a non-reentrant model
 26515 ;;
 26516                           
 26517                           	psect	text73
 26518  005F34                     __ptext73:
 26519                           	opt stack 0
 26520  005F34                     i2_I2C_Stop:
 26521                           	opt stack 20
 26522                           
 26523                           ;I2C.c: 36: I2C_Wait();
 26524                           
 26525                           ;incstack = 0
 26526  005F34  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26527                           
 26528                           ;I2C.c: 37: PEN = 1;
 26529  005F38  84C5               	bsf	4037,2,c	;volatile
 26530  005F3A  0012               	return		;funcret
 26531  005F3C                     __end_ofi2_I2C_Stop:
 26532                           	opt stack 0
 26533                           tosu	equ	0xFFF
 26534                           tosh	equ	0xFFE
 26535                           tosl	equ	0xFFD
 26536                           pclatu	equ	0xFFB
 26537                           pclath	equ	0xFFA
 26538                           tblptru	equ	0xFF8
 26539                           tblptrh	equ	0xFF7
 26540                           tblptrl	equ	0xFF6
 26541                           tablat	equ	0xFF5
 26542                           prodh	equ	0xFF4
 26543                           prodl	equ	0xFF3
 26544                           intcon	equ	0xFF2
 26545                           intcon2	equ	0xFF1
 26546                           intcon3	equ	0xFF0
 26547                           indf0	equ	0xFEF
 26548                           postinc0	equ	0xFEE
 26549                           fsr0h	equ	0xFEA
 26550                           fsr0l	equ	0xFE9
 26551                           wreg	equ	0xFE8
 26552                           indf1	equ	0xFE7
 26553                           postinc1	equ	0xFE6
 26554                           postdec1	equ	0xFE5
 26555                           plusw1	equ	0xFE3
 26556                           fsr1h	equ	0xFE2
 26557                           fsr1l	equ	0xFE1
 26558                           indf2	equ	0xFDF
 26559                           postinc2	equ	0xFDE
 26560                           postdec2	equ	0xFDD
 26561                           plusw2	equ	0xFDB
 26562                           fsr2h	equ	0xFDA
 26563                           fsr2l	equ	0xFD9
 26564                           status	equ	0xFD8
 26565                           
 26566 ;; *************** function i2_I2C_Start *****************
 26567 ;; Defined at:
 26568 ;;		line 25 in file "src/I2C.c"
 26569 ;; Parameters:    Size  Location     Type
 26570 ;;		None
 26571 ;; Auto vars:     Size  Location     Type
 26572 ;;		None
 26573 ;; Return value:  Size  Location     Type
 26574 ;;                  1    wreg      void 
 26575 ;; Registers used:
 26576 ;;		wreg, status,2, status,0, cstack
 26577 ;; Tracked objects:
 26578 ;;		On entry : 0/0
 26579 ;;		On exit  : 0/0
 26580 ;;		Unchanged: 0/0
 26581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26582 ;;      Params:         0       0       0       0       0       0       0       0       0
 26583 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26584 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26585 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26586 ;;Total ram usage:        0 bytes
 26587 ;; Hardware stack levels used:    1
 26588 ;; Hardware stack levels required when called:    1
 26589 ;; This function calls:
 26590 ;;		i2_I2C_Wait
 26591 ;; This function is called by:
 26592 ;;		_readButtons
 26593 ;;		i2_writeEEPROM_ext
 26594 ;; This function uses a non-reentrant model
 26595 ;;
 26596                           
 26597                           	psect	text74
 26598  005F3C                     __ptext74:
 26599                           	opt stack 0
 26600  005F3C                     i2_I2C_Start:
 26601                           	opt stack 20
 26602                           
 26603                           ;I2C.c: 26: I2C_Wait();
 26604                           
 26605                           ;incstack = 0
 26606  005F3C  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26607                           
 26608                           ;I2C.c: 27: SEN = 1;
 26609  005F40  80C5               	bsf	4037,0,c	;volatile
 26610  005F42  0012               	return		;funcret
 26611  005F44                     __end_ofi2_I2C_Start:
 26612                           	opt stack 0
 26613                           tosu	equ	0xFFF
 26614                           tosh	equ	0xFFE
 26615                           tosl	equ	0xFFD
 26616                           pclatu	equ	0xFFB
 26617                           pclath	equ	0xFFA
 26618                           tblptru	equ	0xFF8
 26619                           tblptrh	equ	0xFF7
 26620                           tblptrl	equ	0xFF6
 26621                           tablat	equ	0xFF5
 26622                           prodh	equ	0xFF4
 26623                           prodl	equ	0xFF3
 26624                           intcon	equ	0xFF2
 26625                           intcon2	equ	0xFF1
 26626                           intcon3	equ	0xFF0
 26627                           indf0	equ	0xFEF
 26628                           postinc0	equ	0xFEE
 26629                           fsr0h	equ	0xFEA
 26630                           fsr0l	equ	0xFE9
 26631                           wreg	equ	0xFE8
 26632                           indf1	equ	0xFE7
 26633                           postinc1	equ	0xFE6
 26634                           postdec1	equ	0xFE5
 26635                           plusw1	equ	0xFE3
 26636                           fsr1h	equ	0xFE2
 26637                           fsr1l	equ	0xFE1
 26638                           indf2	equ	0xFDF
 26639                           postinc2	equ	0xFDE
 26640                           postdec2	equ	0xFDD
 26641                           plusw2	equ	0xFDB
 26642                           fsr2h	equ	0xFDA
 26643                           fsr2l	equ	0xFD9
 26644                           status	equ	0xFD8
 26645                           
 26646 ;; *************** function i2_I2C_Read *****************
 26647 ;; Defined at:
 26648 ;;		line 46 in file "src/I2C.c"
 26649 ;; Parameters:    Size  Location     Type
 26650 ;;  a               2    1[COMRAM] unsigned short 
 26651 ;; Auto vars:     Size  Location     Type
 26652 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 26653 ;; Return value:  Size  Location     Type
 26654 ;;                  2    1[COMRAM] unsigned short 
 26655 ;; Registers used:
 26656 ;;		wreg, status,2, status,0, cstack
 26657 ;; Tracked objects:
 26658 ;;		On entry : 0/0
 26659 ;;		On exit  : 0/0
 26660 ;;		Unchanged: 0/0
 26661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26662 ;;      Params:         2       0       0       0       0       0       0       0       0
 26663 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26665 ;;      Totals:         4       0       0       0       0       0       0       0       0
 26666 ;;Total ram usage:        4 bytes
 26667 ;; Hardware stack levels used:    1
 26668 ;; Hardware stack levels required when called:    1
 26669 ;; This function calls:
 26670 ;;		i2_I2C_Wait
 26671 ;; This function is called by:
 26672 ;;		_readButtons
 26673 ;; This function uses a non-reentrant model
 26674 ;;
 26675                           
 26676                           	psect	text75
 26677  005CDE                     __ptext75:
 26678                           	opt stack 0
 26679  005CDE                     i2_I2C_Read:
 26680                           	opt stack 22
 26681                           
 26682                           ;I2C.c: 47: unsigned short temp;
 26683                           ;I2C.c: 48: I2C_Wait();
 26684                           
 26685                           ;incstack = 0
 26686  005CDE  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26687                           
 26688                           ;I2C.c: 49: RCEN = 1;
 26689  005CE2  86C5               	bsf	4037,3,c	;volatile
 26690                           
 26691                           ;I2C.c: 50: I2C_Wait();
 26692  005CE4  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26693                           
 26694                           ;I2C.c: 51: temp = SSPBUF;
 26695  005CE8  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 26696  005CEC  6A05               	clrf	i2I2C_Read@temp+1,c
 26697                           
 26698                           ;I2C.c: 52: I2C_Wait();
 26699  005CEE  EC67  F02F         	call	i2_I2C_Wait	;wreg free
 26700                           
 26701                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 26702  005CF2  5002               	movf	i2I2C_Read@a,w,c
 26703  005CF4  1003               	iorwf	i2I2C_Read@a+1,w,c
 26704  005CF6  A4D8               	btfss	status,2,c
 26705  005CF8  D002               	goto	i2u1261_40
 26706  005CFA  8AC5               	bsf	4037,5,c	;volatile
 26707  005CFC  D001               	goto	i2u1262_45
 26708  005CFE                     i2u1261_40:
 26709  005CFE  9AC5               	bcf	4037,5,c	;volatile
 26710  005D00                     i2u1262_45:
 26711                           
 26712                           ;I2C.c: 54: ACKEN = 1;
 26713  005D00  88C5               	bsf	4037,4,c	;volatile
 26714                           
 26715                           ;I2C.c: 55: return temp;
 26716  005D02  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 26717  005D06  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 26718  005D0A  0012               	return	
 26719  005D0C                     __end_ofi2_I2C_Read:
 26720                           	opt stack 0
 26721                           tosu	equ	0xFFF
 26722                           tosh	equ	0xFFE
 26723                           tosl	equ	0xFFD
 26724                           pclatu	equ	0xFFB
 26725                           pclath	equ	0xFFA
 26726                           tblptru	equ	0xFF8
 26727                           tblptrh	equ	0xFF7
 26728                           tblptrl	equ	0xFF6
 26729                           tablat	equ	0xFF5
 26730                           prodh	equ	0xFF4
 26731                           prodl	equ	0xFF3
 26732                           intcon	equ	0xFF2
 26733                           intcon2	equ	0xFF1
 26734                           intcon3	equ	0xFF0
 26735                           indf0	equ	0xFEF
 26736                           postinc0	equ	0xFEE
 26737                           fsr0h	equ	0xFEA
 26738                           fsr0l	equ	0xFE9
 26739                           wreg	equ	0xFE8
 26740                           indf1	equ	0xFE7
 26741                           postinc1	equ	0xFE6
 26742                           postdec1	equ	0xFE5
 26743                           plusw1	equ	0xFE3
 26744                           fsr1h	equ	0xFE2
 26745                           fsr1l	equ	0xFE1
 26746                           indf2	equ	0xFDF
 26747                           postinc2	equ	0xFDE
 26748                           postdec2	equ	0xFDD
 26749                           plusw2	equ	0xFDB
 26750                           fsr2h	equ	0xFDA
 26751                           fsr2l	equ	0xFD9
 26752                           status	equ	0xFD8
 26753                           
 26754 ;; *************** function i2_I2C_Wait *****************
 26755 ;; Defined at:
 26756 ;;		line 21 in file "src/I2C.c"
 26757 ;; Parameters:    Size  Location     Type
 26758 ;;		None
 26759 ;; Auto vars:     Size  Location     Type
 26760 ;;		None
 26761 ;; Return value:  Size  Location     Type
 26762 ;;                  1    wreg      void 
 26763 ;; Registers used:
 26764 ;;		wreg, status,2, status,0
 26765 ;; Tracked objects:
 26766 ;;		On entry : 0/0
 26767 ;;		On exit  : 0/0
 26768 ;;		Unchanged: 0/0
 26769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26770 ;;      Params:         0       0       0       0       0       0       0       0       0
 26771 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26772 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26773 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26774 ;;Total ram usage:        1 bytes
 26775 ;; Hardware stack levels used:    1
 26776 ;; This function calls:
 26777 ;;		Nothing
 26778 ;; This function is called by:
 26779 ;;		i2_I2C_Start
 26780 ;;		i2_I2C_Stop
 26781 ;;		i2_I2C_Write
 26782 ;;		i2_I2C_Read
 26783 ;; This function uses a non-reentrant model
 26784 ;;
 26785                           
 26786                           	psect	text76
 26787  005ECE                     __ptext76:
 26788                           	opt stack 0
 26789  005ECE                     i2_I2C_Wait:
 26790                           	opt stack 20
 26791                           
 26792                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 26793                           
 26794                           ;incstack = 0
 26795  005ECE  B4C7               	btfsc	4039,2,c	;volatile
 26796  005ED0  D7FE               	goto	i2_I2C_Wait
 26797  005ED2  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 26798  005ED6  0E1F               	movlw	31
 26799  005ED8  1601               	andwf	??i2_I2C_Wait,f,c
 26800  005EDA  B4D8               	btfsc	status,2,c
 26801  005EDC  0012               	return	
 26802  005EDE  D7F7               	goto	i2_I2C_Wait
 26803  005EE0                     __end_ofi2_I2C_Wait:
 26804                           	opt stack 0
 26805                           tosu	equ	0xFFF
 26806                           tosh	equ	0xFFE
 26807                           tosl	equ	0xFFD
 26808                           pclatu	equ	0xFFB
 26809                           pclath	equ	0xFFA
 26810                           tblptru	equ	0xFF8
 26811                           tblptrh	equ	0xFF7
 26812                           tblptrl	equ	0xFF6
 26813                           tablat	equ	0xFF5
 26814                           prodh	equ	0xFF4
 26815                           prodl	equ	0xFF3
 26816                           intcon	equ	0xFF2
 26817                           intcon2	equ	0xFF1
 26818                           intcon3	equ	0xFF0
 26819                           indf0	equ	0xFEF
 26820                           postinc0	equ	0xFEE
 26821                           fsr0h	equ	0xFEA
 26822                           fsr0l	equ	0xFE9
 26823                           wreg	equ	0xFE8
 26824                           indf1	equ	0xFE7
 26825                           postinc1	equ	0xFE6
 26826                           postdec1	equ	0xFE5
 26827                           plusw1	equ	0xFE3
 26828                           fsr1h	equ	0xFE2
 26829                           fsr1l	equ	0xFE1
 26830                           indf2	equ	0xFDF
 26831                           postinc2	equ	0xFDE
 26832                           postdec2	equ	0xFDD
 26833                           plusw2	equ	0xFDB
 26834                           fsr2h	equ	0xFDA
 26835                           fsr2l	equ	0xFD9
 26836                           status	equ	0xFD8
 26837                           tosu	equ	0xFFF
 26838                           tosh	equ	0xFFE
 26839                           tosl	equ	0xFFD
 26840                           pclatu	equ	0xFFB
 26841                           pclath	equ	0xFFA
 26842                           tblptru	equ	0xFF8
 26843                           tblptrh	equ	0xFF7
 26844                           tblptrl	equ	0xFF6
 26845                           tablat	equ	0xFF5
 26846                           prodh	equ	0xFF4
 26847                           prodl	equ	0xFF3
 26848                           intcon	equ	0xFF2
 26849                           intcon2	equ	0xFF1
 26850                           intcon3	equ	0xFF0
 26851                           indf0	equ	0xFEF
 26852                           postinc0	equ	0xFEE
 26853                           fsr0h	equ	0xFEA
 26854                           fsr0l	equ	0xFE9
 26855                           wreg	equ	0xFE8
 26856                           indf1	equ	0xFE7
 26857                           postinc1	equ	0xFE6
 26858                           postdec1	equ	0xFE5
 26859                           plusw1	equ	0xFE3
 26860                           fsr1h	equ	0xFE2
 26861                           fsr1l	equ	0xFE1
 26862                           indf2	equ	0xFDF
 26863                           postinc2	equ	0xFDE
 26864                           postdec2	equ	0xFDD
 26865                           plusw2	equ	0xFDB
 26866                           fsr2h	equ	0xFDA
 26867                           fsr2l	equ	0xFD9
 26868                           status	equ	0xFD8
 26869                           
 26870                           	psect	text77
 26871  000000                     __ptext77:
 26872                           	opt stack 0
 26873                           tosu	equ	0xFFF
 26874                           tosh	equ	0xFFE
 26875                           tosl	equ	0xFFD
 26876                           pclatu	equ	0xFFB
 26877                           pclath	equ	0xFFA
 26878                           tblptru	equ	0xFF8
 26879                           tblptrh	equ	0xFF7
 26880                           tblptrl	equ	0xFF6
 26881                           tablat	equ	0xFF5
 26882                           prodh	equ	0xFF4
 26883                           prodl	equ	0xFF3
 26884                           intcon	equ	0xFF2
 26885                           intcon2	equ	0xFF1
 26886                           intcon3	equ	0xFF0
 26887                           indf0	equ	0xFEF
 26888                           postinc0	equ	0xFEE
 26889                           fsr0h	equ	0xFEA
 26890                           fsr0l	equ	0xFE9
 26891                           wreg	equ	0xFE8
 26892                           indf1	equ	0xFE7
 26893                           postinc1	equ	0xFE6
 26894                           postdec1	equ	0xFE5
 26895                           plusw1	equ	0xFE3
 26896                           fsr1h	equ	0xFE2
 26897                           fsr1l	equ	0xFE1
 26898                           indf2	equ	0xFDF
 26899                           postinc2	equ	0xFDE
 26900                           postdec2	equ	0xFDD
 26901                           plusw2	equ	0xFDB
 26902                           fsr2h	equ	0xFDA
 26903                           fsr2l	equ	0xFD9
 26904                           status	equ	0xFD8
 26905                           
 26906                           	psect	rparam
 26907  0000                     tosu	equ	0xFFF
 26908                           tosh	equ	0xFFE
 26909                           tosl	equ	0xFFD
 26910                           pclatu	equ	0xFFB
 26911                           pclath	equ	0xFFA
 26912                           tblptru	equ	0xFF8
 26913                           tblptrh	equ	0xFF7
 26914                           tblptrl	equ	0xFF6
 26915                           tablat	equ	0xFF5
 26916                           prodh	equ	0xFF4
 26917                           prodl	equ	0xFF3
 26918                           intcon	equ	0xFF2
 26919                           intcon2	equ	0xFF1
 26920                           intcon3	equ	0xFF0
 26921                           indf0	equ	0xFEF
 26922                           postinc0	equ	0xFEE
 26923                           fsr0h	equ	0xFEA
 26924                           fsr0l	equ	0xFE9
 26925                           wreg	equ	0xFE8
 26926                           indf1	equ	0xFE7
 26927                           postinc1	equ	0xFE6
 26928                           postdec1	equ	0xFE5
 26929                           plusw1	equ	0xFE3
 26930                           fsr1h	equ	0xFE2
 26931                           fsr1l	equ	0xFE1
 26932                           indf2	equ	0xFDF
 26933                           postinc2	equ	0xFDE
 26934                           postdec2	equ	0xFDD
 26935                           plusw2	equ	0xFDB
 26936                           fsr2h	equ	0xFDA
 26937                           fsr2l	equ	0xFD9
 26938                           status	equ	0xFD8
 26939                           
 26940                           	psect	temp
 26941  00005F                     btemp:
 26942                           	opt stack 0
 26943  00005F                     	ds	1
 26944  0000                     int$flags	set	btemp
 26945  0000                     wtemp6	set	btemp+1
 26946                           tosu	equ	0xFFF
 26947                           tosh	equ	0xFFE
 26948                           tosl	equ	0xFFD
 26949                           pclatu	equ	0xFFB
 26950                           pclath	equ	0xFFA
 26951                           tblptru	equ	0xFF8
 26952                           tblptrh	equ	0xFF7
 26953                           tblptrl	equ	0xFF6
 26954                           tablat	equ	0xFF5
 26955                           prodh	equ	0xFF4
 26956                           prodl	equ	0xFF3
 26957                           intcon	equ	0xFF2
 26958                           intcon2	equ	0xFF1
 26959                           intcon3	equ	0xFF0
 26960                           indf0	equ	0xFEF
 26961                           postinc0	equ	0xFEE
 26962                           fsr0h	equ	0xFEA
 26963                           fsr0l	equ	0xFE9
 26964                           wreg	equ	0xFE8
 26965                           indf1	equ	0xFE7
 26966                           postinc1	equ	0xFE6
 26967                           postdec1	equ	0xFE5
 26968                           plusw1	equ	0xFE3
 26969                           fsr1h	equ	0xFE2
 26970                           fsr1l	equ	0xFE1
 26971                           indf2	equ	0xFDF
 26972                           postinc2	equ	0xFDE
 26973                           postdec2	equ	0xFDD
 26974                           plusw2	equ	0xFDB
 26975                           fsr2h	equ	0xFDA
 26976                           fsr2l	equ	0xFD9
 26977                           status	equ	0xFD8


Data Sizes:
    Strings     1966
    Constant    66
    Data        18
    BSS         485
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      94
    BANK0           160    149     160
    BANK1           256      0     242
    BANK2           256      0     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(BANK0[20]), STR_82(CODE[3]), STR_80(CODE[4]), 
		 -> STR_79(CODE[3]), STR_77(CODE[4]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_73(CODE[4]), STR_72(CODE[5]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), 
		 -> STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), 
		 -> STR_10(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), NULL(NULL[0]), getIntJSON@attr(BANK0[20]), 
		 -> bufferSerial(BANK2[100]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), NULL(NULL[0]), getIntJSON@attr(BANK0[20]), 
		 -> bufferSerial(BANK2[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), NULL(NULL[0]), getIntJSON@attr(BANK0[20]), 
		 -> bufferSerial(BANK2[100]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(BANK0[20]), STR_82(CODE[3]), STR_80(CODE[4]), 
		 -> STR_79(CODE[3]), STR_77(CODE[4]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_73(CODE[4]), STR_72(CODE[5]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), 
		 -> STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), 
		 -> STR_10(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), NULL(NULL[0]), getIntJSON@attr(BANK0[20]), 
		 -> bufferSerial(BANK2[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(BANK0[20]), STR_82(CODE[3]), 
		 -> STR_80(CODE[4]), STR_79(CODE[3]), STR_77(CODE[4]), STR_76(CODE[7]), 
		 -> STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), wifi_MAC(BANK1[12]), bufferSerial(BANK2[100]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), ssid(BANK1[15]), STR_34(CODE[4]), 
		 -> STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), 
		 -> STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), 
		 -> STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[3]), STR_10(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(BANK0[20]), STR_82(CODE[3]), 
		 -> STR_80(CODE[4]), STR_79(CODE[3]), STR_77(CODE[4]), STR_76(CODE[7]), 
		 -> STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), wifi_MAC(BANK1[12]), bufferSerial(BANK2[100]), 
		 -> STR_40(CODE[3]), STR_38(CODE[3]), ssid(BANK1[15]), STR_34(CODE[4]), 
		 -> STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), STR_25(CODE[7]), 
		 -> STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), STR_19(CODE[4]), 
		 -> STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), STR_13(CODE[4]), 
		 -> STR_12(CODE[3]), STR_10(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_135(CODE[3]), STR_134(CODE[5]), STR_133(CODE[3]), STR_132(CODE[1]), 
		 -> STR_131(CODE[5]), STR_130(CODE[7]), STR_129(CODE[1]), STR_128(CODE[5]), 
		 -> STR_127(CODE[6]), STR_126(CODE[18]), STR_125(CODE[19]), STR_124(CODE[19]), 
		 -> STR_123(CODE[19]), STR_122(CODE[20]), STR_121(CODE[9]), STR_120(CODE[7]), 
		 -> STR_119(CODE[8]), STR_118(CODE[8]), STR_117(CODE[10]), STR_116(CODE[18]), 
		 -> STR_115(CODE[18]), STR_114(CODE[18]), STR_113(CODE[17]), STR_112(CODE[17]), 
		 -> STR_111(CODE[17]), STR_110(CODE[17]), STR_109(CODE[20]), STR_108(CODE[20]), 
		 -> STR_107(CODE[20]), STR_104(CODE[11]), STR_101(CODE[10]), STR_98(CODE[9]), 
		 -> STR_97(CODE[10]), STR_96(CODE[9]), STR_95(CODE[15]), STR_94(CODE[18]), 
		 -> STR_93(CODE[20]), STR_92(CODE[10]), STR_91(CODE[22]), STR_90(CODE[21]), 
		 -> STR_89(CODE[15]), STR_88(CODE[12]), STR_86(CODE[3]), STR_85(CODE[14]), 
		 -> STR_84(CODE[20]), STR_69(CODE[3]), STR_48(CODE[18]), STR_47(CODE[6]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_39(CODE[14]), STR_29(CODE[9]), 
		 -> STR_28(CODE[21]), STR_27(CODE[17]), STR_26(CODE[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), enviaDadosWifi@AUX(BANK0[15]), ipServer(BANK1[20]), 
		 -> senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> NULL(NULL[0]), getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 608
		 -> STR_83(CODE[9]), STR_81(CODE[11]), STR_78(CODE[14]), STR_74(CODE[14]), 
		 -> STR_71(CODE[168]), STR_66(CODE[19]), STR_63(CODE[28]), STR_59(CODE[15]), 
		 -> STR_57(CODE[21]), STR_53(CODE[14]), STR_50(CODE[14]), STR_37(CODE[16]), 
		 -> STR_36(CODE[608]), STR_35(CODE[45]), STR_32(CODE[21]), STR_23(CODE[20]), 
		 -> STR_20(CODE[22]), STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> NULL(NULL[0]), getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> getIntJSON@aux(BANK0[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_137(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> NULL(NULL[0]), getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), STR_106(CODE[10]), 
		 -> STR_105(CODE[7]), STR_103(CODE[11]), STR_102(CODE[8]), STR_100(CODE[11]), 
		 -> STR_99(CODE[7]), STR_87(CODE[12]), STR_80(CODE[4]), STR_77(CODE[4]), 
		 -> STR_73(CODE[4]), STR_70(CODE[12]), enviaDadosWifi@AUX(BANK0[15]), STR_68(CODE[4]), 
		 -> STR_65(CODE[4]), STR_62(CODE[4]), STR_58(CODE[4]), STR_56(CODE[4]), 
		 -> STR_52(CODE[4]), STR_49(CODE[4]), wifi_MAC(BANK1[12]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[3]), STR_41(CODE[3]), STR_38(CODE[3]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), STR_34(CODE[4]), 
		 -> STR_31(CODE[4]), line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), 
		 -> line1(BANK1[21]), STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), 
		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), 
		 -> STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 608
		 -> STR_135(CODE[3]), STR_134(CODE[5]), STR_133(CODE[3]), STR_132(CODE[1]), 
		 -> STR_131(CODE[5]), STR_130(CODE[7]), STR_129(CODE[1]), STR_128(CODE[5]), 
		 -> STR_127(CODE[6]), STR_126(CODE[18]), STR_125(CODE[19]), STR_124(CODE[19]), 
		 -> STR_123(CODE[19]), STR_122(CODE[20]), STR_121(CODE[9]), STR_120(CODE[7]), 
		 -> STR_119(CODE[8]), STR_118(CODE[8]), STR_117(CODE[10]), STR_116(CODE[18]), 
		 -> STR_115(CODE[18]), STR_114(CODE[18]), STR_113(CODE[17]), STR_112(CODE[17]), 
		 -> STR_111(CODE[17]), STR_110(CODE[17]), STR_109(CODE[20]), STR_108(CODE[20]), 
		 -> STR_107(CODE[20]), STR_104(CODE[11]), STR_101(CODE[10]), STR_98(CODE[9]), 
		 -> STR_97(CODE[10]), STR_96(CODE[9]), STR_95(CODE[15]), STR_94(CODE[18]), 
		 -> STR_93(CODE[20]), STR_92(CODE[10]), STR_91(CODE[22]), STR_90(CODE[21]), 
		 -> STR_89(CODE[15]), STR_88(CODE[12]), STR_86(CODE[3]), STR_85(CODE[14]), 
		 -> STR_84(CODE[20]), STR_83(CODE[9]), STR_81(CODE[11]), STR_78(CODE[14]), 
		 -> STR_74(CODE[14]), STR_71(CODE[168]), STR_69(CODE[3]), STR_66(CODE[19]), 
		 -> STR_63(CODE[28]), STR_59(CODE[15]), STR_57(CODE[21]), STR_53(CODE[14]), 
		 -> STR_50(CODE[14]), STR_48(CODE[18]), STR_47(CODE[6]), STR_46(CODE[3]), 
		 -> STR_45(CODE[3]), STR_39(CODE[14]), STR_37(CODE[16]), STR_36(CODE[608]), 
		 -> STR_35(CODE[45]), STR_32(CODE[21]), STR_29(CODE[9]), STR_28(CODE[21]), 
		 -> STR_27(CODE[17]), STR_26(CODE[20]), STR_23(CODE[20]), STR_20(CODE[22]), 
		 -> STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    S1804__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1804__prbuf$ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> NULL(NULL[0]), getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> NULL(NULL[0]), getIntJSON@expected(BANK0[20]), getIntJSON@attr(BANK0[20]), enviaDadosWifi@AUX(BANK0[15]), 
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    findBufferSerial@key	PTR unsigned char  size(2) Largest target is 7
		 -> STR_82(CODE[3]), STR_79(CODE[3]), STR_76(CODE[7]), STR_75(CODE[3]), 
		 -> STR_72(CODE[5]), STR_67(CODE[2]), STR_64(CODE[3]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_55(CODE[5]), STR_54(CODE[3]), STR_51(CODE[3]), 
		 -> STR_40(CODE[3]), STR_33(CODE[2]), STR_30(CODE[7]), STR_24(CODE[3]), 
		 -> STR_21(CODE[3]), STR_18(CODE[3]), STR_15(CODE[3]), STR_12(CODE[3]), 

    setKeyStartReceiveSerial@start	PTR unsigned char  size(2) Largest target is 7
		 -> STR_80(CODE[4]), STR_77(CODE[4]), STR_73(CODE[4]), STR_68(CODE[4]), 
		 -> STR_65(CODE[4]), STR_62(CODE[4]), STR_58(CODE[4]), STR_56(CODE[4]), 
		 -> STR_52(CODE[4]), STR_49(CODE[4]), STR_38(CODE[3]), STR_34(CODE[4]), 
		 -> STR_31(CODE[4]), STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), 
		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@ret	PTR unsigned char  size(2) Largest target is 20
		 -> ipServer(BANK1[20]), senha(BANK1[15]), ssid(BANK1[15]), 

    getStringJSON@buff	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@key	PTR unsigned char  size(2) Largest target is 3
		 -> STR_43(CODE[3]), STR_42(CODE[3]), STR_41(CODE[3]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_136(CODE[4]), getStringJSON@attr(BANK0[20]), NULL(NULL[0]), getIntJSON@attr(BANK0[20]), 
		 -> bufferSerial(BANK2[100]), 

    getIntJSON@buff	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getIntJSON@key	PTR unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    main$1657	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_106(CODE[10]), STR_105(CODE[7]), 

    main$1652	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_103(CODE[11]), STR_102(CODE[8]), 

    main$1647	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_100(CODE[11]), STR_99(CODE[7]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(COMRAM[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(COMRAM[1]), wifi_habilita_alteracao(COMRAM[1]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(COMRAM[1]), t_flap_ligado(COMRAM[1]), h_buzzer(COMRAM[1]), 
		 -> h_modo_seguranca(COMRAM[1]), h_venotinha(COMRAM[1]), h_flap(COMRAM[1]), h_abafador(COMRAM[1]), 
		 -> wifi_SENHA(COMRAM[2]), trava_fase(COMRAM[1]), tipo_modo_trabalho(COMRAM[1]), buzzer(BANK0[1]), 
		 -> fornalha(COMRAM[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _receiveByteSerial->i2_strlen
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_alterarDadosConexaoConfigWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM16_ext->_readEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarDadosConexaoConfigWifi->_getStringJSON
    _writeEEPROM16_ext->_writeEEPROM_ext
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _setKeyStartReceiveSerial->_sprintf
    _printf->__doprnt
    _getStringJSON->_sprintf
    _getIntJSON->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul
    _findBufferSerial->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  201678
                                            131 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
      _alterarDadosConexaoConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                   _readEEPROM16_ext
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11753
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18829
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM16_ext                                     6     4      2     965
                                              7 BANK0      6     4      2
                     _readEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      23    23      0   39744
                                             99 BANK0     23    23      0
                             ___wmul
                              _delay
                   _findBufferSerial
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarDadosConexaoConfigWifi                        3     3      0   80076
                                            128 BANK0      3     3      0
                        _atualizaLCD
                              _delay
                   _findBufferSerial
                         _getIntJSON
                      _getStringJSON
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
                  _writeEEPROM16_ext
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _writeEEPROM16_ext                                    3     1      2    2659
                                              5 BANK0      3     1      2
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2494
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1086
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setKeyStartReceiveSerial                             2     0      2   15935
                                             49 BANK0      2     0      2
                             _memset
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    5092
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _getStringJSON                                       79    73      6   16203
                                             49 BANK0     79    73      6
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _getIntJSON                                          63    59      4   16890
                                             49 BANK0     63    59      4
                               _atoi
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   11988
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3444
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1139
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _findBufferSerial                                     2     0      2    3677
                                             20 BANK0      2     0      2
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     1      4    2135
                                             15 BANK0      5     1      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     748
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     240
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1447
                                             29 COMRAM    19    19      0
                        _readButtons
                  _receiveByteSerial
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _receiveByteSerial                                    3     3      0     160
                                              6 COMRAM     3     3      0
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarDadosConexaoConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getIntJSON
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getStringJSON
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _writeEEPROM16_ext
       _writeEEPROM_ext
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _I2C_Write
           _I2C_Wait
         _delay
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM16_ext
     _readEEPROM_ext
       _I2C_Read
         _I2C_Wait
       _I2C_Restart
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _receiveByteSerial
     i2_strlen
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     95      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BD      20        0.0%
DATA                 0      0     2BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Jul 16 20:26:49 2020

                       i2_setRangeValor 53FC                       setRangeValor@_aux 006E  
                     setRangeValor@_max 0068                 __size_of_readEEPROM_ext 0052  
                     setRangeValor@_min 0067                      __size_of_I2C_Start 0008  
                   tabelaUmidade@_clima 0062                      __size_of_I2C_Write 000A  
              __end_of_readEEPROM16_ext 5BBC                                      _GO 007E11  
                    setRangeValor@_acao 006D                      _tipo_modo_trabalho 0058  
                           __CFG_BOR$ON 000000                     ___wmul@multiplicand 0062  
                           __CFG_BORV$3 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 0086  
                          ___ftadd@exp2 0085                            ___ftadd@sign 0084  
             __size_of_findBufferSerial 0028                             __CFG_WDT$ON 000000  
                                   l300 5E9A                                     l221 5E78  
                                   l311 1652                                     l304 1C56  
                                   l233 5C8E                                     l305 1C2C  
                                   l321 1698                                     l313 1660  
                                   l234 5C90                                     l250 50AE  
                                   l410 1902                                     l306 1622  
                                   l235 5C98                                     l251 501E  
                                   l331 16F2                                     l323 16A6  
                                   l315 166E                                     l307 1636  
                                   l236 5C9A                                     l500 1B90  
                                   l412 1926                                     l237 5CA2  
                                   l253 5042                                     l333 1716  
                                   l325 16B4                                     l317 167C  
                                   l309 1644                                     l238 5CA4  
                                   l254 5066                                     l510 1BE4  
                                   l239 5CAC                                     l255 508A  
                                   l263 5CC2                                     l319 168A  
                                   l504 1BB4                                     l408 18E2  
                                   l281 51E8                                     l329 16D2  
                                   l514 1BFC                                     l506 1BCC  
                                   l450 1A20                                     l434 19B6  
                                   l283 5216                                     l275 51C2  
                                   l268 4E48                                     l436 19D6  
                                   l277 51CC                                     l525 25C8  
                                   l453 1A36                                     l278 51D8  
                                   l526 1C62                                     l518 1C14  
                                   l535 1CB0                                     l391 186C  
                                   l367 17E4                                     l288 5C16  
                                   l800 23CC                                     l640 1F18  
                                   l480 1AF4                                     l289 5C00  
                                   l633 1EEC                                     l561 1D66  
                                   l537 1CD0                                     l369 1804  
                                   l810 241C                                     l802 23DC  
                                   l650 1F72                                     l642 1F28  
                                   l490 1B3C                                     l482 1B0C  
                                   l474 1AC0                                     l571 1D9C  
                                   l555 1D44                                     l900 4814  
                                   l820 246C                                     l812 242C  
                                   l804 23EC                                     l652 1F98  
                                   l549 1D10                                     l910 59EE  
                                   l638 25DE                                     l830 24BC  
                                   l822 247C                                     l814 243C  
                                   l806 23FC                                     l670 2026  
                                   l662 1FD6                                     l654 1FA8  
                                   l646 1F42                                     l494 1B60  
                                   l486 1B24                                     l639 1F02  
                                   l840 250C                                     l832 24CC  
                                   l824 248C                                     l816 244C  
                                   l808 240C                                     l760 227E  
                                   l672 2036                                     l664 1FE6  
                                   l496 1B78                                     l920 4874  
                                   l905 59F8                                     l753 220E  
                                   l921 4896                                     l906 59CE  
                                   l850 255C                                     l842 251C  
                                   l834 24DC                                     l826 249C  
                                   l818 245C                                     l770 22C6  
                                   l754 2224                                     l674 2046  
                                   l666 1FF6                                     l914 490E  
                                   l930 48BA                                     l587 1DF0  
                                   l923 488A                                     l915 4856  
                                   l908 59DA                                     l852 256C  
                                   l844 252C                                     l836 24EC  
                                   l828 24AC                                     l780 232C  
                                   l772 22D6                                     l756 2234  
                                   l748 21F2                                     l684 208A  
                                   l676 2056                                     l932 48C2  
                                   l916 487A                                     l909 59E4  
                                   l933 48E4                                     l925 4892  
                                   l942 529A                                     l854 257C  
                                   l846 253C                                     l838 24FC  
                                   l790 237C                                     l782 233C  
                                   l774 22E6                                     l766 22A6  
                                   l758 225A                                     l694 20C8  
                                   l678 2066                                     l926 4922  
                                   l918 486C                                     l951 5292  
                                   l943 5242                                     l935 48D8  
                                   l927 48A2                                     l880 471E  
                                   l856 25A2                                     l848 254C  
                                   l792 238C                                     l784 234C  
                                   l776 22F6                                     l768 22B6  
                                   l696 20D8                                     l688 20A4  
                                   l928 48C8                                     l881 4728  
                                   l945 5262                                     l937 48E0  
                                   l882 4732                                     l954 52B8  
                                   l858 25B2                                     l794 239C  
                                   l786 235C                                     l778 231C  
                                   l938 48F0                                     l891 47B2  
                                   l883 473C                                     l980 3676  
                                   l972 360E                                     l876 4762  
                                   l948 52A8                                     l796 23AC  
                                   l788 236C                                     l877 4746  
                                   l949 5268                                     l990 37D6  
                                   l982 36AA                                     l886 47CC  
                                   l878 4714                                     l798 23BC  
                                   l975 3A92                                     l887 477E  
                                   l992 3882                                     l984 36DE  
                                   l976 361E                                     l896 47E8  
                                   l889 4798                                     l994 3936  
                                   l986 3712                                     l978 3642  
                                   l898 47FE                                     l995 3A8A  
                                   l996 39FE                                     l988 373C  
                                   l998 3A2C                            __CFG_CPB$OFF 000000  
                                   _PEN 007E2A                            __CFG_CPD$OFF 000000  
                                   _SEN 007E28                                     _hor 0044  
                                   _min 0045                                     _sec 0046  
                           ?i2_I2C_Read 0002                             ?i2_I2C_Wait 0001  
                           ?i2_I2C_Stop 0001                                     prod 000FF3  
                                   tosl 000FFD                                     wreg 000FE8  
                          ?_atualizaLCD 0068                            __CFG_FOSC$HS 000000  
                  __size_of_I2C_Restart 0008                          getStringJSON@i 00DE  
                        getStringJSON@j 00DB                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0090                            ___ftdiv@sign 0095  
                                  l1000 3A5A                                    l1011 2F34  
                                  l1020 2C94                                    l1012 2BD2  
                                  l1005 3A8C                                    l1030 2DC4  
                                  l1022 2CBA                                    l1014 2BF6  
                                  l1031 2D96                                    l1040 2F2E  
                                  l1032 2DC2                                    l1016 2C2A  
                                  l1008 2BB6                                    l2000 495E  
                                  l1042 30CE                                    l1050 2FEE  
                                  l1034 2EC8                                    l1026 2D16  
                                  l2002 49D6                                    l1051 3012  
                                  l1043 2F6E                                    l2011 4A16  
                                  l2003 49C6                                    l1140 5562  
                                  l1036 2EFC                                    l1028 2D4A  
                                  l1300 05CC                                    l1141 5578  
                                  l1053 3046                                    l1045 2F90  
                                  l1301 0642                                    l1142 55B0  
                                  l1214 34E2                                    l1222 322E  
                                  l1302 0614                                    l2015 5E5C  
                                  l1047 2FC6                                    l1231 3374  
                                  l2104 5A6C                                    l1160 3CCA  
                                  l1152 3BD8                                    l1056 30A4  
                                  l2008 49FA                                    l1224 323C  
                                  l1216 3110                                    l1400 1064  
                                  l1312 0708                                    l2041 566A  
                                  l2105 5A64                                    l1137 5544  
                                  l1161 3C7C                                    l1049 30A6  
                                  l2009 49EE                                    l1209 53D6  
                                  l1225 3368                                    l2042 565E  
                                  l1170 3CD0                                    l1146 3B28  
                                  l1058 30C8                                    l1242 34FE  
                                  l1234 3456                                    l1226 3284  
                                  l1218 3118                                    l1402 108E  
                                  l1306 0A6A                                    l1330 09AE  
                                  l1322 0784                                    l1314 0718  
                                  l1139 5556                                    l1171 3CE6  
                                  l1163 3C8A                                    l1147 3B10  
                                  l1235 3484                                    l1219 3134  
                                  l1411 11A2                                    l1403 10C2  
                                  l1331 09B4                                    l1307 0658  
                                  l2108 5A84                                    l1164 3C8E  
                                  l1148 3B24                                    l1244 358A  
                                  l1228 333A                                    l1420 12AA  
                                  l1412 11D0                                    l1340 0AC0  
                                  l1332 0A20                                    l2045 569E  
                                  l2301 56F0                                    l2109 5A8E  
                                  l1181 3DB6                                    l1173 3CFC  
                                  l1157 3C28                                    l1237 34BA  
                                  l1421 12D8                                    l1405 10EC  
                                  l1333 0E02                                    l1325 07C0  
                                  l1309 0684                                    l1261 0258  
                                  l2046 56AC                                    l2118 5C6C  
                                  l1166 3CC0                                    l1414 11FA  
                                  l1406 1120                                    l1350 0C4C  
                                  l1342 0AEA                                    l1326 07EE  
                                  l1318 074E                                    l1270 0324  
                                  l2119 5C5A                                    l1183 3DFE  
                                  l1175 3D88                                    l1159 3C48  
                                  l1239 34C6                                    l1431 148E  
                                  l1423 1302                                    l1415 1228  
                                  l1327 0878                                    l1271 0354  
                                  l1263 0284                                    l1424 1330  
                                  l1408 114A                                    l1336 0D94  
                                  l1360 0CF4                                    l1352 0C76  
                                  l1344 0B22                                    l1328 08FE  
                                  l1185 3E48                                    l1417 1252  
                                  l1409 1178                                    l1337 0A88  
                                  l1329 0996                                    l2306 4B04  
                                  l1186 3E60                                    l1178 3D8A  
                                  l1450 14F0                                    l1434 1456  
                                  l1426 135A                                    l1418 1280  
                                  l1338 0DDA                                    l1370 0D90  
                                  l1346 0B50                                    l1274 0A28  
                                  l1290 04F0                                    l1266 02CE  
                                  l2307 4A2A                                    l1187 3EA2  
                                  l1179 3DA0                                    l1451 151E  
                                  l1435 1400                                    l1347 0BB6  
                                  l1339 0A8C                                    l1291 0506  
                                  l1283 0428                                    l1275 03A2  
                                  l1259 022C                                    l2260 588A  
                                  l2308 4AFA                                    l1436 1466  
                                  l1380 0E20                                    l1364 0D30  
                                  l1356 0CB8                                    l1276 03DA  
                                  l1268 031C                                    l2261 5884  
                                  l1621 2684                                    l1189 3EEC  
                                  l1445 15A6                                    l1453 1548  
                                  l1437 1408                                    l1381 0E54  
                                  l1349 0C18                                    l1293 053A  
                                  l1277 03FC                                    l2094 58F0  
                                  l1630 2720                                    l1550 4382  
                                  l1542 42E2                                    l1454 1576  
                                  l1446 1498                                    l1390 0F2E  
                                  l1366 0D4C                                    l2095 58E8  
                                  l1623 28F2                                    l1631 2730  
                                  l1447 14C6                                    l1439 1450  
                                  l1375 13EE                                    l1383 13BE  
                                  l1391 0F5C                                    l1295 0648  
                                  l1287 046A                                    l1279 040C  
                                  l2272 4FDC                                    l1640 27E8  
                                  l1632 272A                                    l1616 25E8  
                                  l1544 4336                                    l1560 451C  
                                  l1456 15A0                                    l1384 0E7E  
                                  l1368 0D6C                                    l1296 0564  
                                  l2273 4F5E                                    l1617 2658  
                                  l1537 435E                                    l1561 43FC  
                                  l1449 15BC                                    l1393 0F86  
                                  l1385 0EAC                                    l1297 05A2  
                                  l2274 4F9A                                    l2098 5910  
                                  l1618 262C                                    l1538 4234  
                                  l1562 4486                                    l1394 0FB4  
                                  l2099 591A                                    l1643 27FC  
                                  l1635 277A                                    l1547 4358  
                                  l1539 42BE                                    l1467 5D22  
                                  l1459 15E6                                    l1379 1360  
                                  l1387 0ED6                                    l1628 2928  
                                  l1644 285C                                    l1468 5D0E  
                                  l1900 50F6                                    l1396 0FDE  
                                  l1388 0F04                                    l1653 29AC  
                                  l1645 28AA                                    l1629 26E6  
                                  l1565 44AA                                    l1901 50EC  
                                  l1397 100C                                    l1662 2A9A  
                                  l1654 29D0                                    l1638 2784  
                                  l1663 2AC4                                    l1655 29D8  
                                  l1647 28BC                                    l1639 27BE  
                                  l1567 44E2                                    l1903 512A  
                                  l1399 1036                                    l1840 4D98  
                                  l1648 28E0                                    l1568 4516  
                                  l1904 5114                                    l1841 4D5A  
                                  l1665 2ACA                                    l1649 2962  
                                  l1834 4D06                                    l1666 2B4C  
                                  l1658 2A1A                                    l1906 5152  
                                  l1843 4DCC                                    l1835 4D00  
                                  l1667 2B76                                    l1659 2A44  
                                  l1907 5148                                    l1931 4592  
                                  l1940 4622                                    l1837 4D48  
                                  l1935 45BC                                    l1945 4618  
                                  l1954 4656                                    l1946 460E  
                                  l1955 464C                                    l1964 4C40  
                                  l1972 54C8                                    l7012 19D6  
                                  l1957 467A                                    l1973 54F8  
                                  l1981 4B72                                    l1958 4696  
                                  l1966 4C68                                    l6222 5524  
                                  l1982 4BA4                                    l7006 19B6  
                                  l1959 46C6                                    l1967 4CA6  
                                  l1983 4BB4                                    l1968 4CCC  
                                  l1985 4BCC                                    l6242 5EE4  
                                  l1986 4BDC                                    l7122 1B60  
                                  l1979 4B4A                                    l6412 2784  
                                  l7204 1CD0                                    l7140 1BB4  
                                  l7044 1A46                                    l6422 27FC  
                                  l7400 1EEC                                    l6354 5D0E  
                                  l7242 1D44                                    l6524 4A2A  
                                  l7412 1F18                                    l7180 1C72  
                                  l7086 1AC0                                    l6608 5CBA  
                                  l6456 2966                                    l7440 1F98  
                                  l7434 1F72                                    l7098 1AF4  
                                  l8404 51D0                                    l9300 3582  
                                  l9230 327C                                    l9206 312C  
                                  l7702 231C                                    l7198 1CB0  
                                  l6822 16F2                                    l6754 4E40  
                                  l6684 4D94                                    l7636 21F2  
                                  l6924 187C                                    l6828 1716  
                                  l6772 1636                                    l6694 5C5A  
                                  l9246 336C                                    l7478 2026  
                                  l7664 227E                                    l7648 2224  
                                  l8722 39F6                                    l9282 34F6  
                                  l7658 225A                                    l6970 1926  
                                  l6882 17E4                                    l9450 0224  
                                  l8396 51BA                                    l7860 25A2  
                                  l6964 1902                                    _ADON 007E10  
                                  l8734 3A24                                    l6958 18E2  
                                  l9462 0250                                    l6888 1804  
                                  l8746 3A52                                    l9474 027C  
                                  STR_1 7ECB                                    l8896 30A4  
                                  STR_2 7EA9                                    STR_3 7EC0  
                                  STR_4 7F01                                    STR_5 7FD6  
                                  STR_6 7FBC                                    STR_7 7F8D  
                                  STR_8 7FD1                                    STR_9 7FEC  
                                  _RCIF 007CF5                                    _RCEN 007E2B  
                                  u8110 2852                                    u8030 275C  
                                  u8120 2894                                    u8040 2762  
                                  u8210 29E0                                    u8300 2B80  
                                  u8108 2820                                    u8117 2848  
                                  u8109 2854                                    u8037 2752  
                                  u8310 2B9A                                    u8127 288A  
                                  u8320 4A4A                                    u8240 2A54  
                                  u9040 17D4                                    u8410 571C  
                                  u8170 2992                                    u8340 4A70  
                                  u8500 4FC6                                    u9300 1912  
                                  u9060 17F4                                    u8350 4A9A  
                                  u8238 2A04                                    u8078 27A8  
                                  u8327 4A40                                    u8360 4ABA  
                                  u8520 5006                                    u8417 5712  
                                  u8370 4AE8                                    u8530 500C  
                                  u9170 186A                                    u8355 4A94  
                                  u8347 4A66                                    u8507 4FBC  
                                  u7900 5A70                                    u8620 50DE  
                                  u9420 19A2                                    u9260 18D2  
                                  u8357 4A8A                                    u8390 56DE  
                                  u8278 2A84                                    u8470 5BE0  
                                  u9430 19B2                                    u8367 4AB0  
                                  u8527 4FFC                                    u9520 1A1C  
                                  u9440 19C6                                    u9280 18F2  
                                  u8800 16A2                                    u8720 1632  
                                  u8377 4ADE                                    u8298 2B36  
                                  u9530 1A34                                    u8810 16B0  
                                  u8730 1640                                    u8660 515C  
                                  u8397 56D4                                    u8485 5BE2  
                                  u7950 58AA                                    u7870 58F4  
                                  u9710 1B08                                    u8750 165C  
                                  u9640 1AB0                                    u8840 16E2  
                                  u8760 166A                                    u9810 1B8C  
                                  u9730 1B20                                    u8770 1678  
                                  u9820 1BA0                                    u8860 1702  
                                  u8780 1686                                    u7957 58A0  
                                  u9910 1C10                                    u9830 1BB0  
                                  u9750 1B38                                    u8790 1694  
                                  u9920 1C28                                    u9760 1B4C  
                                  u9680 1AE4                                    u9850 1BC8  
                                  u9770 1B5C                                    u7998 2616  
                                  u9870 1BE0                                    u9790 1B74  
                                  u9890 1BF8                                    u9980 1CA0  
                                  _RSEN 007E29                   writeEEPROM16_ext@data 0065  
                       _f_wifi_processo 003B                                    __led 005C  
                     ?_Lcd_Write_String 0064                                    __sec 0154  
                                  _fase 00F8                                    _atoi 4CFE  
                                  _main 0012                                    _leds 0041  
                          ___ftpack@arg 0060                                    _menu 00FD  
                          ___ftpack@exp 0063                                    _temp 00FE  
                      __end_of_I2C_Read 5BEE                                    _umid 005D  
                                  fsr0h 000FEA                                    _ssid 01CD  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 005F                        __end_of_I2C_Wait 5ECE  
                      __end_of_I2C_Stop 5F2C                            ?i2_I2C_Start 0001  
                                  prodh 000FF4                                    prodl 000FF3  
                          ?i2_I2C_Write 0002                         __end_ofi2_delay 5E42  
                                  start 000E                      ??_Lcd_Write_String 0066  
                         __CFG_IESO$OFF 000000                         ??_getStringJSON 0097  
                       __end_of_Lcd_Cmd 5DFA                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 0079                            ___param_bank 000000  
                          ___ftmul@sign 007A              __size_of_receiveByteSerial 006E  
                          ___fttol@exp1 00A4                            ___fttol@lval 00A0  
                      ?_I2C_Master_Init 006D                           __CFG_PLLDIV$1 000000  
                          ?_readButtons 0001                          __CFG_CCP2MX$ON 000000  
                                 ?_atoi 0066                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                       __end_of___ftadd 46EC                                   STR_10 7FE2  
                                 STR_11 7E59                                   STR_12 7FEF  
                                 STR_20 7BC5                                   STR_21 7FEF  
                                 STR_13 7FE2                                   STR_22 7FE2  
                                 STR_30 7FA9                                   STR_14 7E4B  
                                 STR_15 7FEF                                   STR_31 7FE2  
                                 STR_23 7C45                                   STR_24 7FEF  
                                 STR_16 7FE2                                   STR_40 7FE9  
                                 STR_32 7C06                                   STR_33 7C7F  
                                 STR_41 7FF2                                   STR_25 7FA9  
                                 STR_17 7B86                                   STR_18 7FEF  
                                 STR_34 7FE2                                   STR_42 7FF8  
                                 STR_50 7E3D                                   STR_26 7CD1  
                                 STR_51 7FEF                                   STR_19 7FE2  
                                 STR_43 7FF5                                   STR_27 7D9D  
                                 STR_35 7B59                                   STR_52 7FE2  
                                 STR_44 7FAD                                   STR_60 7FFB  
                                 STR_28 7C1B                                   STR_36 7851  
                                 STR_45 7F12                                   STR_61 7FFD  
                                 STR_29 7F3C                                   STR_53 7E2F  
                                 STR_37 7DF2                                   STR_54 7FEF  
                                 STR_62 7FE2                                   STR_46 7F12  
                                 STR_38 7FE6                                   STR_70 7E91  
                                 STR_55 7FCC                                   STR_47 7FB6  
                                 STR_39 7E75                                   STR_63 7BA9  
                                 STR_71 7AB1                                   STR_64 7FEF  
                                 STR_56 7FE2                                   STR_80 7FDE  
                                 STR_72 7FC7                                   STR_48 7D31  
                                 STR_73 7FE2                                   STR_65 7FE2  
                                 STR_49 7FE2                                   STR_81 7EB5  
                                 STR_57 7BF1                                   STR_82 7FEF  
                                 STR_58 7FE2                                   STR_74 7E67  
                                 STR_66 7CE5                                   STR_90 7C30  
                                 STR_67 7C7F                                   STR_75 7FEF  
                                 STR_83 7F33                                   STR_59 7E02  
                                 STR_91 7BDB                                   STR_68 7FDA  
                                 STR_76 7F86                                   STR_92 7F1F  
                                 STR_84 7CBD                                   STR_77 7FE2  
                                 STR_69 7F12                                   STR_85 7E83  
                                 STR_93 7C59                                   STR_78 7E3D  
                                 STR_86 7F12                                   STR_94 7D43  
                                 STR_87 7E91                                   STR_79 7FEF  
                                 STR_95 7E11                                   STR_96 7F4E  
                                 STR_88 7E9D                                   STR_97 7F0B  
                                 STR_89 7E20                                   STR_98 7F57  
                                 STR_99 7F94                         __end_of___ftdiv 4CFE  
                                 u10000 1CC0                         __end_of___lldiv 56BE  
                                 u10100 1D34                                   u11110 21E2  
                                 u12020 5592                                   u11300 2316  
                                 u11140 220C                                   u10500 1EDC  
                       __end_of___ftmul 4C16                                   u11310 2326  
                                 u11150 221E                                   u12104 53CA  
                                 u11400 23B6                                   u11320 2336  
                                 u11240 22B0                                   u11160 222E  
                                 _T0CON 000FD5                                   u12121 4550  
                                 u12105 53C6                                   u12050 539A  
                                 u11410 23C6                                   u11250 22C0  
                                 u11170 2244                                   u10610 1F82  
                                 u10530 1F00                                   u12131 4564  
                                 u13100 39EE                                   u12220 45EC  
                                 u11500 2456                                   u11260 22D0  
                                 u11180 2254                                   u10620 1F92  
                                 u10540 1F12                                   u12045 55AC  
                                 u12046 55AE                                   u12038 5596  
                                 u11510 2466                                   u11430 23E6  
                                 u11350 2366                                   u11270 22E0  
                                 u11190 226A                                   u10710 2010  
                                 u10550 1F22                                   u13120 3A20  
                                 u12160 4584                                   u12080 53BA  
                                 u11600 24F6                                   u11520 2476  
                                 u11440 23F6                                   u11360 2376  
                                 u11280 22F0                                   u10720 2020  
                                 u12401 4B5A                                   u13210 2C52  
                                 u12074 53AA                                   u11610 2506  
                                 u11530 2486                                   u11450 2406  
                                 u11370 2386                                   u11290 2306  
                                 u10810 209E                                   u10570 1F3C  
                                 u12331 4C28                                   u12075 53A6  
                                 u13140 3A4E                                   u12260 462A  
                                 u12068 539E                                   u11700 259C  
                                 u11620 2516                                   u11540 2496  
                                 u11460 2416                                   u11380 2396  
                       __end_of___fttol 4A28                                   u13310 2F24  
                                 u12190 45AE                                   u11710 25AC  
                                 u11630 2526                                   u11550 24A6  
                                 u11470 2426                                   u11390 23A6  
                                 u10590 1F5E                                   u12351 4C50  
                                 u13160 3A7C                                   u13240 2CE2  
                                 u11720 25C2                                   u11640 2536  
                                 u11560 24B6                                   u11480 2436  
                                 u10840 20C2                                   u10680 1FE0  
                                 u12290 465E                                   u12530 4A00  
                                 u12098 53BE                                   u11650 2546  
                                 u11570 24C6                                   u11490 2446  
                                 u10850 20D2                                   u11740 5D82  
                                 u14220 31B8                                   u11660 2556  
                                 u11580 24D6                                   u15020 0E12  
                                 u12381 4B32                                   u12710 5222  
                                 u11670 2566                                   u11590 24E6  
                                 u12471 4942                                   u12560 566E  
                                 u14080 3D68                                   u11680 2576  
                                 u11761 43A0                                   u14090 3D74  
                                 u12490 497C                                   u11690 258C  
                                 u11771 43B2                                   u12660 518A  
                                 u14340 34AC                                   u14500 0278  
                                 u11861 41D8                                   u11781 43C4  
                                 u11950 4320                                   u11871 41EA  
                                 u12495 4974                                   u14096 3D76  
                                 u14360 353C                                   u14520 02A4  
                                 u11881 41FC                                   u11970 4382  
                                 u14290 33F8                                   u14435 575E  
                                 u14380 35C8                                   u13910 3BD4  
                                 u14480 024C                                   u13825 3ADA  
                                 u13827 3ADC                                   u14900 0C9A  
                                 u15607 5600                                   u13880 3B8E  
                                 u14920 0CD6                                   u15617 5DEC  
                                 u13865 3B20                                   u15537 538A  
                                 u15627 5792                                   u13867 3B22  
                                 u15547 51A2                                   u14940 0D12  
                                 u15557 5D16                                   u14790 0A82  
                                 u15567 5AFA                                   u15577 5B0E  
                                 u15587 55D0                                   u15597 55E8  
                       __end_of___lwdiv 5924                         __end_of___lwmod 5A98  
                                 i2l942 546A                                   i2l951 5462  
                                 i2l943 5412                                   i2l945 5432  
                                 i2l954 5488                                   i2l948 5478  
                                 i2l949 5438                                   _RCREG 000FAE  
                                 _TMR0H 000FD7                                   _TMR0L 000FD6  
                                 _SPBRG 000FAF                           __CFG_USBDIV$1 000000  
                       __end_of__doprnt 2BA6                 __size_of_Lcd_Set_Cursor 00B4  
                                 _TXREG 000FAD                         _writeEEPROM_ext 5A98  
                         __CFG_PWRT$OFF 000000                         __end_of_btPress 5E9E  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                             __BF_i_count 003E  
                         __CFG_WRT3$OFF 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                    __size_of_UART_Init 001C                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                       __end_of_readADC 53FC                          __CFG_EBTRB$OFF 000000  
                                 _delay 5D0C                                   _blink 5BEE  
                                 __temp 0121                                   _clima 00F7  
                                 __umid 0100                         __end_of_dpowers 7851  
                                 _line1 0195                                   _line2 0180  
                                 _line3 016B                                   _line4 0156  
                           __BF_current 003D                         __end_of_isdigit 5E64  
                                 _senha 01BE                           ___ftpack@sign 0064  
              _contador_fase_automatica 02D8                                   _timer 3F06  
                                 atoi@a 006B                                   atoi@s 0066  
                                 _putch 5EE0                                   main@i 00F4  
                     __end_of_I2C_Start 5F34                          __pbitbssCOMRAM 02D8  
                     __end_of_I2C_Write 5F12                                   pclath 000FFA  
                 __end_of_setRangeValor 52C6                                   tablat 000FF5  
                                 plusw1 000FE3                   setRangeValor@_var_ajt 0065  
                                 plusw2 000FDB                                   status 000FD8  
               __end_ofi2_setRangeValor 5496        __end_of_setKeyStartReceiveSerial 580C  
                                 wtemp6 0060                         __end_of_sprintf 5A54  
                        setUmidade@_umd 0079                         __end_of_strncmp 4B20  
                        __CFG_ICPRT$OFF 000000                        atualizaLCD@line1 0068  
                      atualizaLCD@line2 006A                        atualizaLCD@line3 006C  
                      atualizaLCD@line4 006E                   i2writeEEPROM_ext@data 0004  
                        __CFG_PBADEN$ON 000000                        __end_of_Lcd_Init 563A  
                      __end_of_Lcd_Port 5CB0                        __end_ofi2_strlen 59C8  
                   __size_ofi2_I2C_Read 002E                     __size_ofi2_I2C_Wait 0012  
                       __initialization 52C6                     __size_ofi2_I2C_Stop 0008  
                          __end_of_atoi 4DD6                            __end_of_main 1614  
                      getStringJSON@key 0093                        getStringJSON@res 0099  
                      getStringJSON@ret 0095                        _ajuste_parametro 0042  
                                ??_atoi 0068                                  ??_main 00E3  
                         ___fttol@sign1 009F                            i2I2C_Write@d 0002  
                   _enviaDadosWifi$2522 00D4                      __size_of_Lcd_Clear 000E  
                         __activetblptr 000002                          _enviaDadosWifi 2BA6  
                            i2strlen@cp 0005                               I2C_Read@a 0061  
                    readEEPROM_ext@data 0066                                  ?_delay 0060  
                                ?_blink 0060                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                                STR_100 7ED6                                  STR_101 7F15  
                                STR_102 7F60                                  STR_110 7DAE  
                                STR_103 7EE1                                  STR_111 7DBF  
                                STR_120 7FA2                                  STR_104 7EEC  
                                STR_112 7DD0                                  STR_105 7F9B  
                                STR_121 7F45                                  STR_113 7DE1  
                                STR_130 7F7F                                  STR_106 7EF7  
                                STR_114 7D55                                  STR_122 7C6D  
                                _ADRESH 000FC4                                  STR_131 7FC2  
                                STR_115 7D67                                  STR_123 7D0B  
                                STR_107 7C95                                  STR_132 7B85  
                                STR_116 7D79                                  STR_124 7D1E  
                                STR_108 7C81                                  STR_133 7F12  
                                STR_117 7F29                                  STR_125 7CF8  
                                STR_109 7CA9                                  STR_134 7FC2  
                                STR_118 7F68                                  STR_126 7D8B  
                                _ADRESL 000FC3                                  STR_135 7F12  
                                STR_127 7FB0                                  STR_119 7F70  
                                STR_136 7FE2                                  STR_128 7FC2  
                                STR_129 7B85                                  STR_137 7F78  
                                ?_timer 0001                        __end_of_acaoFlap 55B6  
                                ?_putch 0001                        __end_of___ftpack 517C  
       ??_alterarDadosConexaoConfigWifi 00E0                               ??i2_delay 0003  
                                _INT2IF 007F81                                  i2l1100 3F7C  
                                i2l1102 3F84                                  i2l1103 3F92  
                                i2l1112 3FE8                                  i2l1104 3FA2  
                                i2l1121 40DA                                  i2l1130 41B4  
                                i2l1114 3FF6                                  i2l1107 3FC0  
                                i2l1132 41B8                                  i2l1124 413A  
                                i2l1116 400C                                  i2l1109 3FC8  
                                i2l1118 401A                                  i2l1127 4178  
                                i2l1090 3F2A                                  i2l1251 4EF8  
                                i2l1092 3F3A                                  i2l1252 4F06  
                                i2l1253 4F10                                  i2l1094 3F42  
                                i2l1600 5874                                  i2l1096 3F5E  
                                i2l1088 3F1C                                  i2l1098 3F6C  
                                i2l2260 5984                                  i2l2261 5980  
                                i2l1467 5E30                                  i2l1468 5E20  
                                i2l1597 5836                                  _INTCON 000FF2  
                                i2l6554 5E20                                  i2l8910 3F1C  
                                i2l8924 3F5E                                  i2l8962 3FE8  
                                i2l8968 400C                        __end_of___lwtoft 5DD4  
                             ??_Lcd_Cmd 0061                                  _TIMER0 0008  
                                _TMR0IF 007F92                 __size_of_Lcd_Write_Char 003E  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                          atualizaLCD@i 0070                          __CFG_XINST$OFF 000000  
               writeEEPROM16_ext@adress 0067                       __end_of_UART_Init 5EBA  
                          readADC@canal 0068                                  ___ftge 5496  
                        _readEEPROM_ext 5924                                  ___wmul 5D36  
                             ??___ftadd 0081                          __CFG_STVREN$ON 000000  
                      __end_of_controle 3F06                               ??___ftdiv 008D  
                                _h_flap 004F                               ??___lldiv 0068  
                             ??___ftmul 0072                               ??___fttol 009A  
                                _blinkk 02DA                               ??___lwdiv 0064  
                             ??___lwmod 006B                 __end_of_writeEEPROM_ext 5ADA  
                             ??__doprnt 0072                                  _memset 5C50  
                                delay@x 0060                                  _buzzer 00FC  
                                clear_0 5328                                  clear_1 5334  
                                clear_2 5340                                  clear_3 534E  
                                _setLed 5E64                                  blink@i 0064  
                             ??_btPress 0060            _t_controle_religar_ventoinha 014E  
                          __doprnt@flag 0077                                  _printf 5B18  
                          __doprnt@prec 0076                        _findBufferSerial 5D5E  
                __end_of_enviaDadosWifi 30E4                                  _strchr 56BE  
                                _strlen 587A                                  _strstr 4F5C  
                 ___ftmul@f3_as_product 0076                               ??_readADC 0062  
                          __pdataCOMRAM 005C                               ??_isdigit 0060  
                             ?_I2C_Read 0061                               ?_I2C_Wait 0001  
                             ?_I2C_Stop 0001                            acaoFlap@acao 0067  
                          __mediumconst 780E                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                putch@c 0060                               ??_sprintf 008B  
                  __size_of_atualizaLCD 00C6                         setUmidade@_clim 0078  
                             ??_strncmp 006C                         Lcd_Set_Cursor@a 0064  
                       Lcd_Set_Cursor@b 0063                         Lcd_Set_Cursor@y 0066  
                       Lcd_Set_Cursor@z 0065                              __acao_flap 003A  
                            __accesstop 0060                 __end_of__initialization 5354  
                            ___ftadd@f1 007B                              ___ftadd@f2 007E  
                      ?i2_setRangeValor 0006                              ___ftge@ff1 0060  
                            ___ftge@ff2 0063                    enviaDadosWifi@i_1397 00D9  
          __size_of_criaCaracteresCGRAM 00AC                       __end_of_Lcd_Clear 5EFC  
                      _h_modo_seguranca 0052                           ___rparam_used 000001  
                            ___ftdiv@f1 0087                              ___ftdiv@f2 008A  
                            ___ftdiv@f3 0091                    getStringJSON@isValid 00DA  
                __end_of_readEEPROM_ext 5976                 _h_subir_temp_automatica 004D  
                       _getSensors$1520 00A5                         _getSensors$1522 00A8  
                            ___ftmul@f1 006C                         _getSensors$1518 00AB  
                            ___ftmul@f2 006F                         _getSensors$2523 00B0  
                  __size_ofi2_I2C_Start 0008                              ___fttol@f1 0096  
                  __size_ofi2_I2C_Write 000A                          __pcstackCOMRAM 0001  
                     getStringJSON@F290 022D                       getStringJSON@F292 0219  
                          __pidataBANK0 5F47                            __pidataBANK1 5EFC  
                     getStringJSON@F288 0200                           __end_of_delay 5D36  
                         __end_of_blink 5C20                           __end_of_timer 41C4  
                         __end_of_putch 5EEE                       ?_readEEPROM16_ext 0067  
                    __size_of_faseAtual 013E                  __size_of_tabelaUmidade 0FD2  
                     getStringJSON@find 00DD                       getStringJSON@buff 0091  
                     getStringJSON@attr 00C6                              ___lwtoft@c 0069  
                       ?_enviaDadosWifi 0001       __size_of_setKeyStartReceiveSerial 006E  
                    ??_readEEPROM16_ext 0069               ?_setKeyStartReceiveSerial 0091  
                  __size_of_readButtons 0028                          _Lcd_Set_Cursor 5018  
                          ??i2_I2C_Read 0004                              ??_I2C_Read 0063  
                          ??i2_I2C_Wait 0001                              ??_I2C_Wait 0060  
                          ??i2_I2C_Stop 0002                              ??_I2C_Stop 0061  
                 receiveByteSerial@byte 0009                               ?_Lcd_Init 0001  
                               ??_delay 0062                               ?_Lcd_Port 0001  
                            _h_abafador 0050                               ?i2_strlen 0001  
                            __doprnt@ap 0070                                 ??_blink 0064  
                            __doprnt@cp 007C                              __doprnt@pb 006C  
                 writeEEPROM_ext@adress 0064           setKeyStartReceiveSerial@start 0091  
                               ??_timer 0011                                 ??_putch 0060  
               i2setRangeValor@_var_ajt 0006                              __pbssBANK0 00F5  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                               ?_TIMER0 0001   __end_of_alterarDadosConexaoConfigWifi 3ACC  
__size_of_alterarDadosConexaoConfigWifi 04D0           _alterarDadosConexaoConfigWifi 35FC  
                   writeEEPROM_ext@data 0063                         ?_readEEPROM_ext 0001  
                               TIMER0@c 0030                      __end_ofi2_I2C_Read 5D0C  
                          I2C_Read@temp 0063                      __end_ofi2_I2C_Wait 5EE0  
                               ?___ftge 0060                      __end_ofi2_I2C_Stop 5F3C  
                            _climaAtual 59C8                                 ?___wmul 0060  
                            _getIntJSON 41C4                       _writeEEPROM16_ext 5DFA  
                               ?_memset 0060                        ?_writeEEPROM_ext 0063  
                               ?_setLed 0060               __size_of_Lcd_Write_String 002E  
                             ?_acaoFlap 0062                      ?_writeEEPROM16_ext 0065  
                             ?___ftpack 0060                  __end_of_Lcd_Set_Cursor 50CC  
                            I2C_Write@d 0061                                 ?_printf 0081  
                            _getSensors 30E4                                 ?_strchr 0060  
                               ?_strlen 0060                               ?___lwtoft 0069  
                               ?_strstr 006F                           ??_I2C_Restart 0061  
                   ??_writeEEPROM16_ext 0067                         __CFG_WDTPS$1024 000000  
                            ??_Lcd_Init 0063                              ??_Lcd_Port 0060  
                            ??i2_strlen 0003                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               i2_delay 5E1E                               ?_controle 0001  
                         _tabelaUmidade 1614                         __CFG_VREGEN$OFF 000000  
                     __end_of_faseAtual 482A                          _Lcd_Write_Char 5ADA  
                acaoFlap@tempo_aguardar 0064                                 _Lcd_Cmd 5DD4  
                       __size_of_TIMER0 4F54                               _I2C_Start 5F2C  
                        getIntJSON@F274 0142                          getIntJSON@F276 0255  
                        getIntJSON@F278 0241                               _I2C_Write 5F08  
                               __Hparam 0000                                 __Lparam 0000  
             __end_of_writeEEPROM16_ext 5E1E                          getIntJSON@find 00CB  
                        getIntJSON@buff 0091                          getIntJSON@attr 00B5  
                 __end_of_getStringJSON 453E                         __size_of___ftge 0092  
                               ___ftadd 453E                                 ___ftdiv 4C16  
                               ___lldiv 563A                         __size_of___wmul 0028  
                               ___ftmul 4B20                                 ___fttol 4930  
                               ___lwdiv 58D0                                 ___lwmod 5A54  
                  i2setRangeValor@_acao 000E                                 __doprnt 25E6  
                               __pcinit 52C6                              ??_acaoFlap 0066  
                            ??___ftpack 0065                         __size_of_memset 0030  
                               _btPress 5E82                                 __ramtop 0800  
                       ?_Lcd_Set_Cursor 0063                         __size_of_setLed 001E  
                               _bt_flag 0040                                 __ptext0 0012  
                               __ptext1 5C20                                 __ptext2 482A  
                               __ptext3 1614                                 __ptext4 5228  
                               __ptext5 5B88                                 __ptext6 5924  
                               __ptext7 5F1C                                 __ptext8 5BBC  
                               __ptext9 30E4                 _wifi_habilita_alteracao 004C  
                        _t_wifi_restart 003C                         __size_of_printf 0038  
                            ??___lwtoft 006C                         __size_of_strchr 0070  
                               _readADC 5362                         __size_of_strlen 0056  
                       __size_of_strstr 00BC                                 _dpowers 7847  
                  readEEPROM16_ext@data 006A                                 _isdigit 5E42  
             _t_controle_modo_seguranca 014C                __size_of_I2C_Master_Init 0070  
                               _tempajt 00F6                           _t_flap_ligado 0054  
                               _umidajt 00F5                                 _sprintf 5A10  
                         __doprnt@width 007E                     __end_of_I2C_Restart 5F24  
                __end_of_Lcd_Write_Char 5B18                                 _strncmp 4A28  
                        __pintcode_body 4E9C                      getIntJSON@expected 0097  
                  end_of_initialization 5354                          ?_tabelaUmidade 0060  
                            ??_controle 0068                                 memset@c 0062  
                               memset@n 0064                                 memset@p 0066  
                         __Lmediumconst 780E                                 int_func 4E9C  
              __end_of_findBufferSerial 5D86                              _timer$1414 0018  
                            _timer$1415 001A                              _timer$1416 001C  
                            _setUmidade 482A                              blink@start 0062  
                             i2u1261_40 5CFE                              ?_I2C_Start 0001  
                             i2u1262_45 5D00                               i2u1263_40 59A4  
                             i2u1263_47 599A                               i2u1347_40 3F9A  
                             i2u1348_45 3F9C                              ?_I2C_Write 0061  
                             i2u1563_47 5E26                            _bufferSerial 0269  
                       ___lldiv@divisor 0064                         ___lldiv@counter 006C  
                             _RCSTAbits 000FAB                                 printf@f 0081  
              criaCaracteresCGRAM@F3900 780F                        I2C_Master_Init@c 006D  
                               postdec1 000FE5                                 postdec2 000FDD  
                           ?_climaAtual 0060          ?_alterarDadosConexaoConfigWifi 0001  
                           ?_getIntJSON 0091                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                             Lcd_Port@a 0060                 setRangeValor@end_eeprom 0069  
                            _wifi_SENHA 0049                                 strlen@s 0060  
                             _UART_Init 5E9E                        setUmidade@_clima 006C  
                             _PORTAbits 000F80                  __size_of_setRangeValor 009E  
                             _PORTBbits 000F81                             ?_getSensors 0001  
                             _PORTCbits 000F82                               _PORTDbits 000F83  
                             _PORTEbits 000F84                              _portServer 0033  
                   _criaCaracteresCGRAM 517C                              _updateLeds 5C20  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                             _TRISCbits 000F94                               _TRISDbits 000F95  
                             _TRISEbits 000F96                 i2writeEEPROM_ext@adress 0005  
                     __size_of_I2C_Read 0032                       tabelaUmidade@_umd 0067  
                     tabelaUmidade@_tmp 0060                       __size_of_I2C_Wait 0014  
                     __size_of_I2C_Stop 0008                              _trava_fase 0059  
                    __BF_enable_receive 003F                        _t_flap_intervalo 0053  
                       ?_Lcd_Write_Char 0001                       Lcd_Write_String@a 0064  
                     Lcd_Write_String@i 0066                    _t_controle_fim_fases 0038  
                           ___ftdiv@exp 0094                    ?_criaCaracteresCGRAM 0001  
                             _TXSTAbits 000FAC                          __end_of_TIMER0 4F5C  
                             __BF_start 01DC                    criaCaracteresCGRAM@i 00A3  
                  criaCaracteresCGRAM@j 00A2                    criaCaracteresCGRAM@k 00A1  
             tabelaUmidade@_tipo_sensor 0064              __size_of_writeEEPROM16_ext 0024  
                 getStringJSON@expected 00B2                             ___ftmul@exp 0075  
                             _Lcd_Clear 5EEE                        ??_enviaDadosWifi 00C3  
                         _t_leitura_adc 0036                          __end_of___ftge 5528  
                        i2I2C_Read@temp 0004                          __end_of___wmul 5D5E  
                          _md_seguranca 02D9                        _Lcd_Write_String 5CB0  
                            ?_UART_Init 0001                           __pidataCOMRAM 5F44  
                        __end_of_memset 5C80                          __end_of_setLed 5E82  
                        __end_of_printf 5B50                             _I2C_Restart 5F1C  
                        __end_of_strchr 572E                         _setUmidade$1300 0075  
                        __end_of_strlen 58D0                         _setUmidade$1297 006F  
                       _setUmidade$1298 0071                         _setUmidade$1299 0073  
                        __end_of_strstr 5018                           ??_atualizaLCD 0070  
                   start_initialization 52C6              _t_controle_temp_automatica 0152  
                           i2I2C_Read@a 0002                         ??_tabelaUmidade 0065  
                   __size_of_climaAtual 0048                     __size_of_getIntJSON 01C8  
             __size_of_readEEPROM16_ext 0034                       __size_of_Lcd_Init 0084  
                     __size_of_Lcd_Port 0030                       __size_ofi2_strlen 0052  
                             i2strlen@s 0001                        ??_readEEPROM_ext 0065  
                     ??_I2C_Master_Init 0071                                ??_TIMER0 001E  
                         _setRangeValor 5228                   ??_criaCaracteresCGRAM 0064  
                           ?_setUmidade 0068                           ??i2_I2C_Start 0002  
                           ??_I2C_Start 0061                           ??i2_I2C_Write 0004  
                   __size_of_getSensors 0518                             ??_I2C_Write 0063  
             _t_controle_religar_buzzer 0150                              ?_Lcd_Clear 0001  
                              ??___ftge 0066                                ??___wmul 0064  
              __size_ofi2_setRangeValor 009A                             __doprnt@len 007A  
                           __doprnt@val 0078                             __pdataBANK0 00FD  
                           __pdataBANK1 01E6                        __CFG_LPT1OSC$OFF 000000  
                         ??_readButtons 0006                         Lcd_Write_Char@a 0063  
                              ??_memset 0066                         Lcd_Write_Char@y 0062  
                              ??_setLed 0061                                ??_printf 00BD  
                     faseAtual@_tempajt 0062                                ??_strchr 0064  
                              ??_strlen 0062                                ??_strstr 0073  
                     __size_of_acaoFlap 008E                       __size_of___ftpack 00B0  
                           __pbssCOMRAM 0031                             ?_updateLeds 0001  
                     __size_of___lwtoft 0026                           __pcstackBANK0 0060  
                     _t_temp_automatica 00FA                            _isdigit$2066 0061  
                      _t_buzzer_religar 00FF                                ?i2_delay 0001  
                        ?_setRangeValor 0065                     __end_of_atualizaLCD 4E9C  
                _senha_desbloqueio_func 004B                                ?_Lcd_Cmd 0001  
                             __doprnt@c 0080                               __doprnt@f 006E  
                            setLed@acao 0060                       __size_of_controle 043A  
              _criaCaracteresCGRAM$1229 009F                               _faseAtual 46EC  
                             _main$1631 00E6                               _main$1640 00EC  
                             _main$1632 00E8                               _main$1635 00EA  
                             _main$1652 00F0                               _main$2524 00E4  
                             _main$1647 00EE                               _main$1657 00F2  
                      ___lwdiv@dividend 0060                        ??_Lcd_Set_Cursor 0064  
                             __pintcode 0008                           __pmediumconst 780E  
                              ?___ftadd 007B                                ?___ftdiv 0087  
                   __end_ofi2_I2C_Start 5F44                                ?___lldiv 0060  
                              ?___ftmul 006C                                ?___fttol 0096  
                   __end_ofi2_I2C_Write 5F1C                                ?___lwdiv 0060  
                              ?___lwmod 0067                _setKeyStartReceiveSerial 579E  
                              ?__doprnt 006C                     _tipo_sensor_umidade 00FB  
                           ??_UART_Init 0060                    readEEPROM_ext@adress 0065  
                              ?_btPress 0001                                ?_readADC 0060  
                             _media_adc 0035                     __size_of_setUmidade 0106  
                              ?_isdigit 0001                                _I2C_Read 5BBC  
                              _I2C_Wait 5EBA                                _I2C_Stop 5F24  
                   __end_of_readButtons 5DAE                   acaoFlap@tempo_ativado 0062  
              __size_of_writeEEPROM_ext 0042                           getIntJSON@aux 00AB  
                         getIntJSON@key 0093                  readEEPROM16_ext@adress 006C  
                      ___lwdiv@quotient 0064                          __size_of_delay 002A  
                        __size_of_blink 0032                     i2setRangeValor@_aux 000F  
                   i2setRangeValor@_max 0009                     i2setRangeValor@_min 0008  
                              ?_sprintf 0081                                ?_strncmp 0066  
                        __size_of_timer 02BE                          __size_of_putch 000E  
                        ___wmul@product 0064                               btPress@bt 0060  
                              _LATAbits 000F89                                _LATBbits 000F8A  
                              _LATCbits 000F8B                                _LATDbits 000F8C  
                              _LATEbits 000F8D                       ?_findBufferSerial 0074  
                             _opcaomenu 0043                                _PIE1bits 000F9D  
                             blink@line 0060                         enviaDadosWifi@i 00D8  
                       enviaDadosWifi@j 00D6                             _h_venotinha 0051  
                            ?_faseAtual 0060                                Lcd_Cmd@a 0062  
                              _PIR1bits 000F9E                      ??_findBufferSerial 0076  
                   __size_of_updateLeds 0030                             ??_Lcd_Clear 0063  
                          ??_climaAtual 0062                            ??_getIntJSON 0095  
                          ??_getSensors 00A5                              _ADCON0bits 000FC2  
                     ___wmul@multiplier 0060                       ??i2_setRangeValor 000B  
                      ??_Lcd_Write_Char 0061                                i2delay@x 0001  
                           _atualizaLCD 4DD6                                _Lcd_Init 55B6  
                     i2_writeEEPROM_ext 5B50                                _Lcd_Port 5C80  
                              i2_strlen 5976                         ??_setRangeValor 006A  
        alterarDadosConexaoConfigWifi@i 00E2                             _INTCON2bits 000FF1  
                           _INTCON3bits 000FF0                  __size_of_getStringJSON 01B2  
                             copy_data0 52DA                        _readEEPROM16_ext 5B88  
                    ?i2_writeEEPROM_ext 0004                      __end_of_climaAtual 5A10  
                    __end_of_getIntJSON 438C                            setUmidade@tp 006E  
              __end_of_Lcd_Write_String 5CDE                         _f_falta_energia 005E  
                      __size_ofi2_delay 0024                        __size_of_Lcd_Cmd 0026  
                           i2_I2C_Start 5F3C                             i2_I2C_Write 5F12  
                    __end_of_getSensors 35FC                     ??i2_writeEEPROM_ext 0005  
                              __Hrparam 0000                                __Lrparam 0000  
                       getIntJSON@value 00C9                     findBufferSerial@key 0074  
                      __size_of___ftadd 01AE                        __size_of___ftdiv 00E8  
                      __size_of___lldiv 0084                        __size_of___ftmul 00F6  
                      __size_of___fttol 00F8                        __size_of___lwdiv 0054  
                      __size_of___lwmod 0044                             _readButtons 5D86  
                              _acaoFlap 5528                                ___ftpack 50CC  
                      __size_of__doprnt 05C0                          readADC@digital 0066  
                   Lcd_Write_Char@tempp 0061                        __size_of_btPress 001C  
                              ___lwtoft 5DAE                            ?_I2C_Restart 0001  
                              _base_sec 0048                          getSensors@auxx 00AD  
                       _I2C_Master_Init 572E                        __size_of_readADC 009A  
             __end_ofi2_writeEEPROM_ext 5B88                               setLed@led 0061  
                      __size_of_isdigit 0022                         ___lwdiv@divisor 0062  
                       ___lwdiv@counter 0066                                _h_buzzer 004E  
                              __ptext10 5362                                __ptext11 5DAE  
                              __ptext20 517C                                __ptext12 4930  
                              __ptext21 3ACC                                __ptext13 4B20  
                              __ptext30 5D0C                                __ptext22 5528  
                              __ptext14 5496                                __ptext31 5F08  
                              __ptext23 5E64                                __ptext15 4C16  
                              __ptext40 5A10                                __ptext32 5F24  
                              __ptext24 59C8                                __ptext16 453E  
                              __ptext41 25E6                                __ptext33 5F2C  
                              __ptext25 5E82                                __ptext17 50CC  
                              __ptext50 4A28                                __ptext42 5EE0  
                              __ptext34 5EBA                                __ptext26 5BEE  
                              __ptext18 46EC                                __ptext51 587A  
                              __ptext43 5A54                                __ptext35 579E  
                              __ptext27 35FC                                __ptext19 2BA6  
                              __ptext60 5DD4                                __ptext52 56BE  
                              __ptext44 58D0                                __ptext36 5C50  
                              __ptext28 5DFA                                __ptext61 5C80  
                              __ptext53 4DD6                                __ptext45 4CFE  
                              __ptext37 5B18                                __ptext29 5A98  
                              __ptext70 5976                                __ptext62 572E  
                              __ptext54 5CB0                                __ptext46 5E42  
                              __ptext38 438C                                __ptext71 5D86  
                              __ptext63 563A                                __ptext55 5ADA  
                              __ptext47 5D36                                __ptext39 41C4  
                              __ptext72 5F12                                __ptext56 5018  
                              __ptext48 5D5E                                __ptext73 5F34  
                              __ptext65 3F06                                __ptext57 5E9E  
                              __ptext49 4F5C                                __ptext74 5F3C  
                              __ptext66 53FC                                __ptext58 55B6  
                              __ptext75 5CDE                                __ptext67 5B50  
                              __ptext59 5EEE                                __ptext76 5ECE  
                              __ptext68 5E1E                                __ptext77 0000  
                              __ptext69 580C                                _lcd_rfsh 0155  
                              _ipServer 01AA               i2setRangeValor@end_eeprom 000A  
                      __size_of_sprintf 0044                  _f_buzzer_falta_energia 0039  
                      __size_of_strncmp 00F8                                _controle 3ACC  
                     ??_writeEEPROM_ext 0064                                _fornalha 005A  
                         __size_of_atoi 00D8                           __size_of_main 1602  
                          ??_setUmidade 006E                             _t_fim_fase1 0057  
                           _t_fim_fase2 0056                             _t_fim_fase3 0055  
                            strncmp@len 006A                             ??_faseAtual 0064  
                              blink@end 0063                          _wifi_conectado 0047  
                              _wifi_MAC 01E6                             faseAtual@tp 0065  
                              int$flags 005F                           _getStringJSON 438C  
                              atoi@sign 006A                       _receiveByteSerial 580C  
                 __CFG_CPUDIV$OSC1_PLL2 000000                      ?_receiveByteSerial 0001  
        _t_religar_ventoinha_automatica 00F9                              _INTCONbits 000FF2  
                            i2_I2C_Read 5CDE                              i2_I2C_Wait 5ECE  
                            i2_I2C_Stop 5F34                            ??_updateLeds 0063  
                    __end_of_setUmidade 4930                         faseAtual@_fasee 0064  
                              isdigit@c 0062                                memset@p1 0060  
                   ??_receiveByteSerial 0007             __end_of_criaCaracteresCGRAM 5228  
                     enviaDadosWifi@AUX 00C5                       enviaDadosWifi@men 00D7  
                 __end_of_tabelaUmidade 25E6                                intlevel2 0000  
                             sprintf@ap 008B        __end_ofcriaCaracteresCGRAM@F3900 7847  
                             sprintf@pb 008D                           getSensors@aux 00B4  
                             sprintf@wh 0081                         faseAtual@tmpajt 0066  
                             strchr@chr 0062                        ___lwmod@dividend 0067  
                             strchr@ptr 0060                        ___lldiv@dividend 0060  
                           climaAtual@c 0062              ??_setKeyStartReceiveSerial 0093  
                           getIntJSON@i 00CE                             getIntJSON@j 00CC  
                             strncmp@s1 0066                               strncmp@s2 0068  
          criaCaracteresCGRAM@character 0067                          ?_getStringJSON 0091  
             __end_of_receiveByteSerial 587A                      __end_of_updateLeds 5C50  
                              printf@ap 00BD                                printf@pb 00BF  
                     _t_controle_buzzer 0037                 __end_of_I2C_Master_Init 579E  
                    Lcd_Set_Cursor@temp 0067                      setUmidade@_tempajt 006A  
                        faseAtual@_fase 0060                                sprintf@f 0083  
                      ___lldiv@quotient 0068                         ___lwmod@divisor 0069  
            __size_ofi2_writeEEPROM_ext 0038       alterarDadosConexaoConfigWifi@port 00E0  
                              strlen@cp 0064                         ___lwmod@counter 006B  
               __size_of_enviaDadosWifi 053E                        _t_controle_blink 0153  
                              strstr@s1 006F                                strstr@s2 0071  
                     setUmidade@_umdajt 0068                       setUmidade@_tmpajt 0077  
                           getSensors@i 00B3                         _t_controle_flap 0031  
