

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Jul 14 22:54:08 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           ; Version 1.44
   101                           ; Generated 14/09/2017 GMT
   102                           ; 
   103                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F4550 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     
   135                           	psect	idataCOMRAM
   136  005B7A                     __pidataCOMRAM:
   137                           	opt stack 0
   138                           
   139                           ;initializer for __led
   140  005B7A  01                 	db	1
   141                           
   142                           ;initializer for _umid
   143  005B7B  64                 	db	100
   144                           
   145                           ;initializer for _f_falta_energia
   146  005B7C  01                 	db	1
   147                           
   148                           	psect	idataBANK0
   149  005B7D                     __pidataBANK0:
   150                           	opt stack 0
   151                           
   152                           ;initializer for _menu
   153  005B7D  0F                 	db	15
   154                           
   155                           ;initializer for _temp
   156  005B7E  63                 	db	99
   157                           
   158                           ;initializer for _t_buzzer_religar
   159  005B7F  01                 	db	1
   160                           
   161                           	psect	idataBANK1
   162  005B32                     __pidataBANK1:
   163                           	opt stack 0
   164                           
   165                           ;initializer for _wifi_MAC
   166  005B32  3F                 	db	63
   167  005B33  00                 	db	0
   168  005B34  00                 	db	0
   169  005B35  00                 	db	0
   170  005B36  00                 	db	0
   171  005B37  00                 	db	0
   172  005B38  00                 	db	0
   173  005B39  00                 	db	0
   174  005B3A  00                 	db	0
   175  005B3B  00                 	db	0
   176  005B3C  00                 	db	0
   177  005B3D  00                 	db	0
   178                           
   179                           	psect	mediumconst
   180  00787E                     __pmediumconst:
   181                           	opt stack 0
   182  00787E  00                 	db	0
   183  00787F                     criaCaracteresCGRAM@F3898:
   184                           	opt stack 0
   185  00787F  0E                 	db	14
   186  007880  11                 	db	17
   187  007881  11                 	db	17
   188  007882  1F                 	db	31
   189  007883  1B                 	db	27
   190  007884  1B                 	db	27
   191  007885  1F                 	db	31
   192  007886  1F                 	db	31
   193  007887  01                 	db	1
   194  007888  03                 	db	3
   195  007889  07                 	db	7
   196  00788A  1D                 	db	29
   197  00788B  1D                 	db	29
   198  00788C  07                 	db	7
   199  00788D  03                 	db	3
   200  00788E  01                 	db	1
   201  00788F  04                 	db	4
   202  007890  04                 	db	4
   203  007891  0E                 	db	14
   204  007892  0E                 	db	14
   205  007893  1F                 	db	31
   206  007894  1D                 	db	29
   207  007895  1B                 	db	27
   208  007896  0E                 	db	14
   209  007897  04                 	db	4
   210  007898  0A                 	db	10
   211  007899  0A                 	db	10
   212  00789A  0A                 	db	10
   213  00789B  0E                 	db	14
   214  00789C  1F                 	db	31
   215  00789D  1F                 	db	31
   216  00789E  0E                 	db	14
   217  00789F  00                 	db	0
   218  0078A0  0E                 	db	14
   219  0078A1  11                 	db	17
   220  0078A2  04                 	db	4
   221  0078A3  0A                 	db	10
   222  0078A4  00                 	db	0
   223  0078A5  04                 	db	4
   224  0078A6  00                 	db	0
   225  0078A7  00                 	db	0
   226  0078A8  00                 	db	0
   227  0078A9  00                 	db	0
   228  0078AA  00                 	db	0
   229  0078AB  00                 	db	0
   230  0078AC  00                 	db	0
   231  0078AD  00                 	db	0
   232  0078AE  00                 	db	0
   233  0078AF  00                 	db	0
   234  0078B0  00                 	db	0
   235  0078B1  00                 	db	0
   236  0078B2  00                 	db	0
   237  0078B3  00                 	db	0
   238  0078B4  00                 	db	0
   239  0078B5  00                 	db	0
   240  0078B6  00                 	db	0
   241  0078B7                     __end_ofcriaCaracteresCGRAM@F3898:
   242                           	opt stack 0
   243  0078B7                     _dpowers:
   244                           	opt stack 0
   245  0078B7  0001               	dw	1
   246  0078B9  000A               	dw	10
   247  0078BB  0064               	dw	100
   248  0078BD  03E8               	dw	1000
   249  0078BF  2710               	dw	10000
   250  0078C1                     __end_of_dpowers:
   251                           	opt stack 0
   252  0000                     _SSPBUF	set	4041
   253  0000                     _SSPSTAT	set	4039
   254  0000                     _SSPADD	set	4040
   255  0000                     _SSPCON2	set	4037
   256  0000                     _SSPCON1	set	4038
   257  0000                     _ADCON2	set	4032
   258  0000                     _ADCON1	set	4033
   259  0000                     _INTCON	set	4082
   260  0000                     _T0CON	set	4053
   261  0000                     _INTCON3bits	set	4080
   262  0000                     _INTCON2bits	set	4081
   263  0000                     _TRISBbits	set	3987
   264  0000                     _PORTEbits	set	3972
   265  0000                     _PORTCbits	set	3970
   266  0000                     _PORTAbits	set	3968
   267  0000                     _TRISEbits	set	3990
   268  0000                     _TRISAbits	set	3986
   269  0000                     _RCREG	set	4014
   270  0000                     _TMR0L	set	4054
   271  0000                     _TMR0H	set	4055
   272  0000                     _ADCON0bits	set	4034
   273  0000                     _ADCON0	set	4034
   274  0000                     _ADRESL	set	4035
   275  0000                     _ADRESH	set	4036
   276  0000                     _TXREG	set	4013
   277  0000                     _PIE1bits	set	3997
   278  0000                     _PIR1bits	set	3998
   279  0000                     _INTCONbits	set	4082
   280  0000                     _SPBRG	set	4015
   281  0000                     _RCSTAbits	set	4011
   282  0000                     _TXSTAbits	set	4012
   283  0000                     _TRISCbits	set	3988
   284  0000                     _LATDbits	set	3980
   285  0000                     _LATEbits	set	3981
   286  0000                     _LATBbits	set	3978
   287  0000                     _LATCbits	set	3979
   288  0000                     _LATAbits	set	3977
   289  0000                     _PORTBbits	set	3969
   290  0000                     _PORTDbits	set	3971
   291  0000                     _TRISDbits	set	3989
   292  0000                     _ACKEN	set	32300
   293  0000                     _ACKDT	set	32301
   294  0000                     _RCEN	set	32299
   295  0000                     _PEN	set	32298
   296  0000                     _RSEN	set	32297
   297  0000                     _SEN	set	32296
   298  0000                     _INT2IF	set	32641
   299  0000                     _RCIF	set	31989
   300  0000                     _TMR0IF	set	32658
   301  0000                     _GO	set	32273
   302  0000                     _ADON	set	32272
   303  0078C1                     STR_36:
   304  0078C1  3C                 	db	60	;'<'
   305  0078C2  68                 	db	104	;'h'
   306  0078C3  74                 	db	116	;'t'
   307  0078C4  6D                 	db	109	;'m'
   308  0078C5  6C                 	db	108	;'l'
   309  0078C6  3E                 	db	62	;'>'
   310  0078C7  3C                 	db	60	;'<'
   311  0078C8  73                 	db	115	;'s'
   312  0078C9  74                 	db	116	;'t'
   313  0078CA  79                 	db	121	;'y'
   314  0078CB  6C                 	db	108	;'l'
   315  0078CC  65                 	db	101	;'e'
   316  0078CD  3E                 	db	62	;'>'
   317  0078CE  64                 	db	100	;'d'
   318  0078CF  69                 	db	105	;'i'
   319  0078D0  76                 	db	118	;'v'
   320  0078D1  7B                 	db	123
   321  0078D2  6D                 	db	109	;'m'
   322  0078D3  61                 	db	97	;'a'
   323  0078D4  72                 	db	114	;'r'
   324  0078D5  67                 	db	103	;'g'
   325  0078D6  69                 	db	105	;'i'
   326  0078D7  6E                 	db	110	;'n'
   327  0078D8  3A                 	db	58	;':'
   328  0078D9  32                 	db	50	;'2'
   329  0078DA  35                 	db	53	;'5'
   330  0078DB  70                 	db	112	;'p'
   331  0078DC  78                 	db	120	;'x'
   332  0078DD  20                 	db	32
   333  0078DE  61                 	db	97	;'a'
   334  0078DF  75                 	db	117	;'u'
   335  0078E0  74                 	db	116	;'t'
   336  0078E1  6F                 	db	111	;'o'
   337  0078E2  3B                 	db	59	;';'
   338  0078E3  6D                 	db	109	;'m'
   339  0078E4  61                 	db	97	;'a'
   340  0078E5  78                 	db	120	;'x'
   341  0078E6  2D                 	db	45
   342  0078E7  77                 	db	119	;'w'
   343  0078E8  69                 	db	105	;'i'
   344  0078E9  64                 	db	100	;'d'
   345  0078EA  74                 	db	116	;'t'
   346  0078EB  68                 	db	104	;'h'
   347  0078EC  3A                 	db	58	;':'
   348  0078ED  33                 	db	51	;'3'
   349  0078EE  35                 	db	53	;'5'
   350  0078EF  30                 	db	48	;'0'
   351  0078F0  70                 	db	112	;'p'
   352  0078F1  78                 	db	120	;'x'
   353  0078F2  3B                 	db	59	;';'
   354  0078F3  64                 	db	100	;'d'
   355  0078F4  69                 	db	105	;'i'
   356  0078F5  73                 	db	115	;'s'
   357  0078F6  70                 	db	112	;'p'
   358  0078F7  6C                 	db	108	;'l'
   359  0078F8  61                 	db	97	;'a'
   360  0078F9  79                 	db	121	;'y'
   361  0078FA  3A                 	db	58	;':'
   362  0078FB  66                 	db	102	;'f'
   363  0078FC  6C                 	db	108	;'l'
   364  0078FD  65                 	db	101	;'e'
   365  0078FE  78                 	db	120	;'x'
   366  0078FF  3B                 	db	59	;';'
   367  007900  66                 	db	102	;'f'
   368  007901  6C                 	db	108	;'l'
   369  007902  65                 	db	101	;'e'
   370  007903  78                 	db	120	;'x'
   371  007904  2D                 	db	45
   372  007905  64                 	db	100	;'d'
   373  007906  69                 	db	105	;'i'
   374  007907  72                 	db	114	;'r'
   375  007908  65                 	db	101	;'e'
   376  007909  63                 	db	99	;'c'
   377  00790A  74                 	db	116	;'t'
   378  00790B  69                 	db	105	;'i'
   379  00790C  6F                 	db	111	;'o'
   380  00790D  6E                 	db	110	;'n'
   381  00790E  3A                 	db	58	;':'
   382  00790F  63                 	db	99	;'c'
   383  007910  6F                 	db	111	;'o'
   384  007911  6C                 	db	108	;'l'
   385  007912  75                 	db	117	;'u'
   386  007913  6D                 	db	109	;'m'
   387  007914  6E                 	db	110	;'n'
   388  007915  3B                 	db	59	;';'
   389  007916  7D                 	db	125
   390  007917  69                 	db	105	;'i'
   391  007918  6E                 	db	110	;'n'
   392  007919  70                 	db	112	;'p'
   393  00791A  75                 	db	117	;'u'
   394  00791B  74                 	db	116	;'t'
   395  00791C  2C                 	db	44
   396  00791D  62                 	db	98	;'b'
   397  00791E  75                 	db	117	;'u'
   398  00791F  74                 	db	116	;'t'
   399  007920  74                 	db	116	;'t'
   400  007921  6F                 	db	111	;'o'
   401  007922  6E                 	db	110	;'n'
   402  007923  7B                 	db	123
   403  007924  70                 	db	112	;'p'
   404  007925  61                 	db	97	;'a'
   405  007926  64                 	db	100	;'d'
   406  007927  64                 	db	100	;'d'
   407  007928  69                 	db	105	;'i'
   408  007929  6E                 	db	110	;'n'
   409  00792A  67                 	db	103	;'g'
   410  00792B  3A                 	db	58	;':'
   411  00792C  37                 	db	55	;'7'
   412  00792D  70                 	db	112	;'p'
   413  00792E  78                 	db	120	;'x'
   414  00792F  3B                 	db	59	;';'
   415  007930  6D                 	db	109	;'m'
   416  007931  61                 	db	97	;'a'
   417  007932  72                 	db	114	;'r'
   418  007933  67                 	db	103	;'g'
   419  007934  69                 	db	105	;'i'
   420  007935  6E                 	db	110	;'n'
   421  007936  2D                 	db	45
   422  007937  62                 	db	98	;'b'
   423  007938  6F                 	db	111	;'o'
   424  007939  74                 	db	116	;'t'
   425  00793A  74                 	db	116	;'t'
   426  00793B  6F                 	db	111	;'o'
   427  00793C  6D                 	db	109	;'m'
   428  00793D  3A                 	db	58	;':'
   429  00793E  32                 	db	50	;'2'
   430  00793F  35                 	db	53	;'5'
   431  007940  70                 	db	112	;'p'
   432  007941  78                 	db	120	;'x'
   433  007942  3B                 	db	59	;';'
   434  007943  62                 	db	98	;'b'
   435  007944  6F                 	db	111	;'o'
   436  007945  72                 	db	114	;'r'
   437  007946  64                 	db	100	;'d'
   438  007947  65                 	db	101	;'e'
   439  007948  72                 	db	114	;'r'
   440  007949  3A                 	db	58	;':'
   441  00794A  31                 	db	49	;'1'
   442  00794B  70                 	db	112	;'p'
   443  00794C  78                 	db	120	;'x'
   444  00794D  20                 	db	32
   445  00794E  73                 	db	115	;'s'
   446  00794F  6F                 	db	111	;'o'
   447  007950  6C                 	db	108	;'l'
   448  007951  69                 	db	105	;'i'
   449  007952  64                 	db	100	;'d'
   450  007953  20                 	db	32
   451  007954  23                 	db	35
   452  007955  37                 	db	55	;'7'
   453  007956  37                 	db	55	;'7'
   454  007957  37                 	db	55	;'7'
   455  007958  3B                 	db	59	;';'
   456  007959  7D                 	db	125
   457  00795A  3C                 	db	60	;'<'
   458  00795B  2F                 	db	47
   459  00795C  73                 	db	115	;'s'
   460  00795D  74                 	db	116	;'t'
   461  00795E  79                 	db	121	;'y'
   462  00795F  6C                 	db	108	;'l'
   463  007960  65                 	db	101	;'e'
   464  007961  3E                 	db	62	;'>'
   465  007962  3C                 	db	60	;'<'
   466  007963  62                 	db	98	;'b'
   467  007964  6F                 	db	111	;'o'
   468  007965  64                 	db	100	;'d'
   469  007966  79                 	db	121	;'y'
   470  007967  3E                 	db	62	;'>'
   471  007968  3C                 	db	60	;'<'
   472  007969  64                 	db	100	;'d'
   473  00796A  69                 	db	105	;'i'
   474  00796B  76                 	db	118	;'v'
   475  00796C  3E                 	db	62	;'>'
   476  00796D  20                 	db	32
   477  00796E  3C                 	db	60	;'<'
   478  00796F  68                 	db	104	;'h'
   479  007970  32                 	db	50	;'2'
   480  007971  3E                 	db	62	;'>'
   481  007972  43                 	db	67	;'C'
   482  007973  6F                 	db	111	;'o'
   483  007974  6E                 	db	110	;'n'
   484  007975  66                 	db	102	;'f'
   485  007976  69                 	db	105	;'i'
   486  007977  67                 	db	103	;'g'
   487  007978  75                 	db	117	;'u'
   488  007979  72                 	db	114	;'r'
   489  00797A  61                 	db	97	;'a'
   490  00797B  E7                 	db	-25
   491  00797C  E3                 	db	-29
   492  00797D  6F                 	db	111	;'o'
   493  00797E  20                 	db	32
   494  00797F  57                 	db	87	;'W'
   495  007980  69                 	db	105	;'i'
   496  007981  66                 	db	102	;'f'
   497  007982  69                 	db	105	;'i'
   498  007983  3C                 	db	60	;'<'
   499  007984  2F                 	db	47
   500  007985  68                 	db	104	;'h'
   501  007986  32                 	db	50	;'2'
   502  007987  3E                 	db	62	;'>'
   503  007988  20                 	db	32
   504  007989  53                 	db	83	;'S'
   505  00798A  53                 	db	83	;'S'
   506  00798B  49                 	db	73	;'I'
   507  00798C  44                 	db	68	;'D'
   508  00798D  3A                 	db	58	;':'
   509  00798E  20                 	db	32
   510  00798F  3C                 	db	60	;'<'
   511  007990  69                 	db	105	;'i'
   512  007991  6E                 	db	110	;'n'
   513  007992  70                 	db	112	;'p'
   514  007993  75                 	db	117	;'u'
   515  007994  74                 	db	116	;'t'
   516  007995  20                 	db	32
   517  007996  69                 	db	105	;'i'
   518  007997  64                 	db	100	;'d'
   519  007998  3D                 	db	61	;'='
   520  007999  27                 	db	39
   521  00799A  73                 	db	115	;'s'
   522  00799B  27                 	db	39
   523  00799C  3E                 	db	62	;'>'
   524  00799D  53                 	db	83	;'S'
   525  00799E  65                 	db	101	;'e'
   526  00799F  6E                 	db	110	;'n'
   527  0079A0  68                 	db	104	;'h'
   528  0079A1  61                 	db	97	;'a'
   529  0079A2  3A                 	db	58	;':'
   530  0079A3  20                 	db	32
   531  0079A4  3C                 	db	60	;'<'
   532  0079A5  69                 	db	105	;'i'
   533  0079A6  6E                 	db	110	;'n'
   534  0079A7  70                 	db	112	;'p'
   535  0079A8  75                 	db	117	;'u'
   536  0079A9  74                 	db	116	;'t'
   537  0079AA  20                 	db	32
   538  0079AB  69                 	db	105	;'i'
   539  0079AC  64                 	db	100	;'d'
   540  0079AD  3D                 	db	61	;'='
   541  0079AE  27                 	db	39
   542  0079AF  70                 	db	112	;'p'
   543  0079B0  27                 	db	39
   544  0079B1  3E                 	db	62	;'>'
   545  0079B2  3C                 	db	60	;'<'
   546  0079B3  62                 	db	98	;'b'
   547  0079B4  75                 	db	117	;'u'
   548  0079B5  74                 	db	116	;'t'
   549  0079B6  74                 	db	116	;'t'
   550  0079B7  6F                 	db	111	;'o'
   551  0079B8  6E                 	db	110	;'n'
   552  0079B9  20                 	db	32
   553  0079BA  6F                 	db	111	;'o'
   554  0079BB  6E                 	db	110	;'n'
   555  0079BC  63                 	db	99	;'c'
   556  0079BD  6C                 	db	108	;'l'
   557  0079BE  69                 	db	105	;'i'
   558  0079BF  63                 	db	99	;'c'
   559  0079C0  6B                 	db	107	;'k'
   560  0079C1  3D                 	db	61	;'='
   561  0079C2  27                 	db	39
   562  0079C3  73                 	db	115	;'s'
   563  0079C4  28                 	db	40
   564  0079C5  29                 	db	41
   565  0079C6  27                 	db	39
   566  0079C7  3E                 	db	62	;'>'
   567  0079C8  43                 	db	67	;'C'
   568  0079C9  6F                 	db	111	;'o'
   569  0079CA  6E                 	db	110	;'n'
   570  0079CB  66                 	db	102	;'f'
   571  0079CC  69                 	db	105	;'i'
   572  0079CD  72                 	db	114	;'r'
   573  0079CE  6D                 	db	109	;'m'
   574  0079CF  61                 	db	97	;'a'
   575  0079D0  72                 	db	114	;'r'
   576  0079D1  3C                 	db	60	;'<'
   577  0079D2  2F                 	db	47
   578  0079D3  62                 	db	98	;'b'
   579  0079D4  75                 	db	117	;'u'
   580  0079D5  74                 	db	116	;'t'
   581  0079D6  74                 	db	116	;'t'
   582  0079D7  6F                 	db	111	;'o'
   583  0079D8  6E                 	db	110	;'n'
   584  0079D9  3E                 	db	62	;'>'
   585  0079DA  3C                 	db	60	;'<'
   586  0079DB  2F                 	db	47
   587  0079DC  64                 	db	100	;'d'
   588  0079DD  69                 	db	105	;'i'
   589  0079DE  76                 	db	118	;'v'
   590  0079DF  3E                 	db	62	;'>'
   591  0079E0  3C                 	db	60	;'<'
   592  0079E1  2F                 	db	47
   593  0079E2  62                 	db	98	;'b'
   594  0079E3  6F                 	db	111	;'o'
   595  0079E4  64                 	db	100	;'d'
   596  0079E5  79                 	db	121	;'y'
   597  0079E6  3E                 	db	62	;'>'
   598  0079E7  3C                 	db	60	;'<'
   599  0079E8  2F                 	db	47
   600  0079E9  68                 	db	104	;'h'
   601  0079EA  74                 	db	116	;'t'
   602  0079EB  6D                 	db	109	;'m'
   603  0079EC  6C                 	db	108	;'l'
   604  0079ED  3E                 	db	62	;'>'
   605  0079EE  3C                 	db	60	;'<'
   606  0079EF  73                 	db	115	;'s'
   607  0079F0  63                 	db	99	;'c'
   608  0079F1  72                 	db	114	;'r'
   609  0079F2  69                 	db	105	;'i'
   610  0079F3  70                 	db	112	;'p'
   611  0079F4  74                 	db	116	;'t'
   612  0079F5  3E                 	db	62	;'>'
   613  0079F6  66                 	db	102	;'f'
   614  0079F7  75                 	db	117	;'u'
   615  0079F8  6E                 	db	110	;'n'
   616  0079F9  63                 	db	99	;'c'
   617  0079FA  74                 	db	116	;'t'
   618  0079FB  69                 	db	105	;'i'
   619  0079FC  6F                 	db	111	;'o'
   620  0079FD  6E                 	db	110	;'n'
   621  0079FE  20                 	db	32
   622  0079FF  73                 	db	115	;'s'
   623  007A00  28                 	db	40
   624  007A01  29                 	db	41
   625  007A02  7B                 	db	123
   626  007A03  66                 	db	102	;'f'
   627  007A04  65                 	db	101	;'e'
   628  007A05  74                 	db	116	;'t'
   629  007A06  63                 	db	99	;'c'
   630  007A07  68                 	db	104	;'h'
   631  007A08  28                 	db	40
   632  007A09  27                 	db	39
   633  007A0A  2F                 	db	47
   634  007A0B  27                 	db	39
   635  007A0C  2C                 	db	44
   636  007A0D  7B                 	db	123
   637  007A0E  6D                 	db	109	;'m'
   638  007A0F  65                 	db	101	;'e'
   639  007A10  74                 	db	116	;'t'
   640  007A11  68                 	db	104	;'h'
   641  007A12  6F                 	db	111	;'o'
   642  007A13  64                 	db	100	;'d'
   643  007A14  3A                 	db	58	;':'
   644  007A15  27                 	db	39
   645  007A16  70                 	db	112	;'p'
   646  007A17  6F                 	db	111	;'o'
   647  007A18  73                 	db	115	;'s'
   648  007A19  74                 	db	116	;'t'
   649  007A1A  27                 	db	39
   650  007A1B  2C                 	db	44
   651  007A1C  62                 	db	98	;'b'
   652  007A1D  6F                 	db	111	;'o'
   653  007A1E  64                 	db	100	;'d'
   654  007A1F  79                 	db	121	;'y'
   655  007A20  3A                 	db	58	;':'
   656  007A21  4A                 	db	74	;'J'
   657  007A22  53                 	db	83	;'S'
   658  007A23  4F                 	db	79	;'O'
   659  007A24  4E                 	db	78	;'N'
   660  007A25  2E                 	db	46
   661  007A26  73                 	db	115	;'s'
   662  007A27  74                 	db	116	;'t'
   663  007A28  72                 	db	114	;'r'
   664  007A29  69                 	db	105	;'i'
   665  007A2A  6E                 	db	110	;'n'
   666  007A2B  67                 	db	103	;'g'
   667  007A2C  69                 	db	105	;'i'
   668  007A2D  66                 	db	102	;'f'
   669  007A2E  79                 	db	121	;'y'
   670  007A2F  28                 	db	40
   671  007A30  7B                 	db	123
   672  007A31  27                 	db	39
   673  007A32  24                 	db	36
   674  007A33  23                 	db	35
   675  007A34  27                 	db	39
   676  007A35  3A                 	db	58	;':'
   677  007A36  27                 	db	39
   678  007A37  27                 	db	39
   679  007A38  2C                 	db	44
   680  007A39  73                 	db	115	;'s'
   681  007A3A  73                 	db	115	;'s'
   682  007A3B  3A                 	db	58	;':'
   683  007A3C  64                 	db	100	;'d'
   684  007A3D  6F                 	db	111	;'o'
   685  007A3E  63                 	db	99	;'c'
   686  007A3F  75                 	db	117	;'u'
   687  007A40  6D                 	db	109	;'m'
   688  007A41  65                 	db	101	;'e'
   689  007A42  6E                 	db	110	;'n'
   690  007A43  74                 	db	116	;'t'
   691  007A44  2E                 	db	46
   692  007A45  71                 	db	113	;'q'
   693  007A46  75                 	db	117	;'u'
   694  007A47  65                 	db	101	;'e'
   695  007A48  72                 	db	114	;'r'
   696  007A49  79                 	db	121	;'y'
   697  007A4A  53                 	db	83	;'S'
   698  007A4B  65                 	db	101	;'e'
   699  007A4C  6C                 	db	108	;'l'
   700  007A4D  65                 	db	101	;'e'
   701  007A4E  63                 	db	99	;'c'
   702  007A4F  74                 	db	116	;'t'
   703  007A50  6F                 	db	111	;'o'
   704  007A51  72                 	db	114	;'r'
   705  007A52  28                 	db	40
   706  007A53  27                 	db	39
   707  007A54  23                 	db	35
   708  007A55  73                 	db	115	;'s'
   709  007A56  27                 	db	39
   710  007A57  29                 	db	41
   711  007A58  2E                 	db	46
   712  007A59  76                 	db	118	;'v'
   713  007A5A  61                 	db	97	;'a'
   714  007A5B  6C                 	db	108	;'l'
   715  007A5C  75                 	db	117	;'u'
   716  007A5D  65                 	db	101	;'e'
   717  007A5E  2C                 	db	44
   718  007A5F  70                 	db	112	;'p'
   719  007A60  77                 	db	119	;'w'
   720  007A61  3A                 	db	58	;':'
   721  007A62  64                 	db	100	;'d'
   722  007A63  6F                 	db	111	;'o'
   723  007A64  63                 	db	99	;'c'
   724  007A65  75                 	db	117	;'u'
   725  007A66  6D                 	db	109	;'m'
   726  007A67  65                 	db	101	;'e'
   727  007A68  6E                 	db	110	;'n'
   728  007A69  74                 	db	116	;'t'
   729  007A6A  2E                 	db	46
   730  007A6B  71                 	db	113	;'q'
   731  007A6C  75                 	db	117	;'u'
   732  007A6D  65                 	db	101	;'e'
   733  007A6E  72                 	db	114	;'r'
   734  007A6F  79                 	db	121	;'y'
   735  007A70  53                 	db	83	;'S'
   736  007A71  65                 	db	101	;'e'
   737  007A72  6C                 	db	108	;'l'
   738  007A73  65                 	db	101	;'e'
   739  007A74  63                 	db	99	;'c'
   740  007A75  74                 	db	116	;'t'
   741  007A76  6F                 	db	111	;'o'
   742  007A77  72                 	db	114	;'r'
   743  007A78  28                 	db	40
   744  007A79  27                 	db	39
   745  007A7A  23                 	db	35
   746  007A7B  70                 	db	112	;'p'
   747  007A7C  27                 	db	39
   748  007A7D  29                 	db	41
   749  007A7E  2E                 	db	46
   750  007A7F  76                 	db	118	;'v'
   751  007A80  61                 	db	97	;'a'
   752  007A81  6C                 	db	108	;'l'
   753  007A82  75                 	db	117	;'u'
   754  007A83  65                 	db	101	;'e'
   755  007A84  2C                 	db	44
   756  007A85  27                 	db	39
   757  007A86  27                 	db	39
   758  007A87  3A                 	db	58	;':'
   759  007A88  27                 	db	39
   760  007A89  23                 	db	35
   761  007A8A  24                 	db	36
   762  007A8B  27                 	db	39
   763  007A8C  7D                 	db	125
   764  007A8D  29                 	db	41
   765  007A8E  7D                 	db	125
   766  007A8F  29                 	db	41
   767  007A90  7D                 	db	125
   768  007A91  3C                 	db	60	;'<'
   769  007A92  2F                 	db	47
   770  007A93  73                 	db	115	;'s'
   771  007A94  63                 	db	99	;'c'
   772  007A95  72                 	db	114	;'r'
   773  007A96  69                 	db	105	;'i'
   774  007A97  70                 	db	112	;'p'
   775  007A98  74                 	db	116	;'t'
   776  007A99  3E                 	db	62	;'>'
   777  007A9A  0D                 	db	13
   778  007A9B  0A                 	db	10
   779  007A9C  0D                 	db	13
   780  007A9D  0A                 	db	10
   781  007A9E  5C                 	db	92	;'\'
   782  007A9F  30                 	db	48	;'0'
   783  007AA0  00                 	db	0
   784  007AA1                     STR_68:
   785  007AA1  47                 	db	71	;'G'
   786  007AA2  45                 	db	69	;'E'
   787  007AA3  54                 	db	84	;'T'
   788  007AA4  20                 	db	32
   789  007AA5  2F                 	db	47
   790  007AA6  64                 	db	100	;'d'
   791  007AA7  65                 	db	101	;'e'
   792  007AA8  76                 	db	118	;'v'
   793  007AA9  69                 	db	105	;'i'
   794  007AAA  63                 	db	99	;'c'
   795  007AAB  65                 	db	101	;'e'
   796  007AAC  2F                 	db	47
   797  007AAD  69                 	db	105	;'i'
   798  007AAE  6E                 	db	110	;'n'
   799  007AAF  74                 	db	116	;'t'
   800  007AB0  65                 	db	101	;'e'
   801  007AB1  67                 	db	103	;'g'
   802  007AB2  72                 	db	114	;'r'
   803  007AB3  61                 	db	97	;'a'
   804  007AB4  74                 	db	116	;'t'
   805  007AB5  69                 	db	105	;'i'
   806  007AB6  6F                 	db	111	;'o'
   807  007AB7  6E                 	db	110	;'n'
   808  007AB8  3F                 	db	63	;'?'
   809  007AB9  69                 	db	105	;'i'
   810  007ABA  3D                 	db	61	;'='
   811  007ABB  25                 	db	37
   812  007ABC  64                 	db	100	;'d'
   813  007ABD  7C                 	db	124
   814  007ABE  25                 	db	37
   815  007ABF  64                 	db	100	;'d'
   816  007AC0  7C                 	db	124
   817  007AC1  25                 	db	37
   818  007AC2  64                 	db	100	;'d'
   819  007AC3  7C                 	db	124
   820  007AC4  25                 	db	37
   821  007AC5  64                 	db	100	;'d'
   822  007AC6  7C                 	db	124
   823  007AC7  25                 	db	37
   824  007AC8  64                 	db	100	;'d'
   825  007AC9  7C                 	db	124
   826  007ACA  25                 	db	37
   827  007ACB  64                 	db	100	;'d'
   828  007ACC  7C                 	db	124
   829  007ACD  25                 	db	37
   830  007ACE  64                 	db	100	;'d'
   831  007ACF  7C                 	db	124
   832  007AD0  25                 	db	37
   833  007AD1  64                 	db	100	;'d'
   834  007AD2  7C                 	db	124
   835  007AD3  25                 	db	37
   836  007AD4  64                 	db	100	;'d'
   837  007AD5  7C                 	db	124
   838  007AD6  25                 	db	37
   839  007AD7  64                 	db	100	;'d'
   840  007AD8  7C                 	db	124
   841  007AD9  25                 	db	37
   842  007ADA  64                 	db	100	;'d'
   843  007ADB  7C                 	db	124
   844  007ADC  25                 	db	37
   845  007ADD  73                 	db	115	;'s'
   846  007ADE  7C                 	db	124
   847  007ADF  25                 	db	37
   848  007AE0  64                 	db	100	;'d'
   849  007AE1  7C                 	db	124
   850  007AE2  25                 	db	37
   851  007AE3  73                 	db	115	;'s'
   852  007AE4  7C                 	db	124
   853  007AE5  25                 	db	37
   854  007AE6  64                 	db	100	;'d'
   855  007AE7  26                 	db	38
   856  007AE8  70                 	db	112	;'p'
   857  007AE9  3D                 	db	61	;'='
   858  007AEA  25                 	db	37
   859  007AEB  64                 	db	100	;'d'
   860  007AEC  7C                 	db	124
   861  007AED  25                 	db	37
   862  007AEE  64                 	db	100	;'d'
   863  007AEF  7C                 	db	124
   864  007AF0  25                 	db	37
   865  007AF1  64                 	db	100	;'d'
   866  007AF2  7C                 	db	124
   867  007AF3  25                 	db	37
   868  007AF4  64                 	db	100	;'d'
   869  007AF5  7C                 	db	124
   870  007AF6  25                 	db	37
   871  007AF7  64                 	db	100	;'d'
   872  007AF8  7C                 	db	124
   873  007AF9  25                 	db	37
   874  007AFA  64                 	db	100	;'d'
   875  007AFB  7C                 	db	124
   876  007AFC  25                 	db	37
   877  007AFD  64                 	db	100	;'d'
   878  007AFE  7C                 	db	124
   879  007AFF  25                 	db	37
   880  007B00  64                 	db	100	;'d'
   881  007B01  7C                 	db	124
   882  007B02  25                 	db	37
   883  007B03  64                 	db	100	;'d'
   884  007B04  7C                 	db	124
   885  007B05  25                 	db	37
   886  007B06  64                 	db	100	;'d'
   887  007B07  7C                 	db	124
   888  007B08  25                 	db	37
   889  007B09  64                 	db	100	;'d'
   890  007B0A  7C                 	db	124
   891  007B0B  25                 	db	37
   892  007B0C  64                 	db	100	;'d'
   893  007B0D  7C                 	db	124
   894  007B0E  25                 	db	37
   895  007B0F  64                 	db	100	;'d'
   896  007B10  7C                 	db	124
   897  007B11  25                 	db	37
   898  007B12  64                 	db	100	;'d'
   899  007B13  26                 	db	38
   900  007B14  6B                 	db	107	;'k'
   901  007B15  3D                 	db	61	;'='
   902  007B16  31                 	db	49	;'1'
   903  007B17  7A                 	db	122	;'z'
   904  007B18  34                 	db	52	;'4'
   905  007B19  64                 	db	100	;'d'
   906  007B1A  66                 	db	102	;'f'
   907  007B1B  36                 	db	54	;'6'
   908  007B1C  38                 	db	56	;'8'
   909  007B1D  69                 	db	105	;'i'
   910  007B1E  77                 	db	119	;'w'
   911  007B1F  31                 	db	49	;'1'
   912  007B20  66                 	db	102	;'f'
   913  007B21  70                 	db	112	;'p'
   914  007B22  35                 	db	53	;'5'
   915  007B23  20                 	db	32
   916  007B24  48                 	db	72	;'H'
   917  007B25  54                 	db	84	;'T'
   918  007B26  54                 	db	84	;'T'
   919  007B27  50                 	db	80	;'P'
   920  007B28  2F                 	db	47
   921  007B29  31                 	db	49	;'1'
   922  007B2A  2E                 	db	46
   923  007B2B  31                 	db	49	;'1'
   924  007B2C  0D                 	db	13
   925  007B2D  0A                 	db	10
   926  007B2E  48                 	db	72	;'H'
   927  007B2F  6F                 	db	111	;'o'
   928  007B30  73                 	db	115	;'s'
   929  007B31  74                 	db	116	;'t'
   930  007B32  3A                 	db	58	;':'
   931  007B33  20                 	db	32
   932  007B34  31                 	db	49	;'1'
   933  007B35  38                 	db	56	;'8'
   934  007B36  2E                 	db	46
   935  007B37  32                 	db	50	;'2'
   936  007B38  32                 	db	50	;'2'
   937  007B39  38                 	db	56	;'8'
   938  007B3A  2E                 	db	46
   939  007B3B  31                 	db	49	;'1'
   940  007B3C  35                 	db	53	;'5'
   941  007B3D  34                 	db	52	;'4'
   942  007B3E  2E                 	db	46
   943  007B3F  32                 	db	50	;'2'
   944  007B40  34                 	db	52	;'4'
   945  007B41  38                 	db	56	;'8'
   946  007B42  0D                 	db	13
   947  007B43  0A                 	db	10
   948  007B44  0D                 	db	13
   949  007B45  0A                 	db	10
   950  007B46  5C                 	db	92	;'\'
   951  007B47  30                 	db	48	;'0'
   952  007B48  00                 	db	0
   953  007B49                     STR_35:
   954  007B49  48                 	db	72	;'H'
   955  007B4A  54                 	db	84	;'T'
   956  007B4B  54                 	db	84	;'T'
   957  007B4C  50                 	db	80	;'P'
   958  007B4D  20                 	db	32
   959  007B4E  31                 	db	49	;'1'
   960  007B4F  2E                 	db	46
   961  007B50  31                 	db	49	;'1'
   962  007B51  2F                 	db	47
   963  007B52  32                 	db	50	;'2'
   964  007B53  30                 	db	48	;'0'
   965  007B54  30                 	db	48	;'0'
   966  007B55  20                 	db	32
   967  007B56  4F                 	db	79	;'O'
   968  007B57  4B                 	db	75	;'K'
   969  007B58  0D                 	db	13
   970  007B59  0A                 	db	10
   971  007B5A  43                 	db	67	;'C'
   972  007B5B  6F                 	db	111	;'o'
   973  007B5C  6E                 	db	110	;'n'
   974  007B5D  74                 	db	116	;'t'
   975  007B5E  65                 	db	101	;'e'
   976  007B5F  6E                 	db	110	;'n'
   977  007B60  74                 	db	116	;'t'
   978  007B61  2D                 	db	45
   979  007B62  74                 	db	116	;'t'
   980  007B63  79                 	db	121	;'y'
   981  007B64  70                 	db	112	;'p'
   982  007B65  65                 	db	101	;'e'
   983  007B66  3A                 	db	58	;':'
   984  007B67  20                 	db	32
   985  007B68  74                 	db	116	;'t'
   986  007B69  65                 	db	101	;'e'
   987  007B6A  78                 	db	120	;'x'
   988  007B6B  74                 	db	116	;'t'
   989  007B6C  2F                 	db	47
   990  007B6D  68                 	db	104	;'h'
   991  007B6E  74                 	db	116	;'t'
   992  007B6F  6D                 	db	109	;'m'
   993  007B70  6C                 	db	108	;'l'
   994  007B71  0D                 	db	13
   995  007B72  0A                 	db	10
   996  007B73  0D                 	db	13
   997  007B74  0A                 	db	10
   998  007B75  00                 	db	0
   999  007B76                     STR_60:
  1000  007B76  41                 	db	65	;'A'
  1001  007B77  54                 	db	84	;'T'
  1002  007B78  2B                 	db	43
  1003  007B79  43                 	db	67	;'C'
  1004  007B7A  49                 	db	73	;'I'
  1005  007B7B  50                 	db	80	;'P'
  1006  007B7C  53                 	db	83	;'S'
  1007  007B7D  54                 	db	84	;'T'
  1008  007B7E  41                 	db	65	;'A'
  1009  007B7F  52                 	db	82	;'R'
  1010  007B80  54                 	db	84	;'T'
  1011  007B81  3D                 	db	61	;'='
  1012  007B82  22                 	db	34
  1013  007B83  54                 	db	84	;'T'
  1014  007B84  43                 	db	67	;'C'
  1015  007B85  50                 	db	80	;'P'
  1016  007B86  22                 	db	34
  1017  007B87  2C                 	db	44
  1018  007B88  22                 	db	34
  1019  007B89  31                 	db	49	;'1'
  1020  007B8A  38                 	db	56	;'8'
  1021  007B8B  2E                 	db	46
  1022  007B8C  32                 	db	50	;'2'
  1023  007B8D  32                 	db	50	;'2'
  1024  007B8E  38                 	db	56	;'8'
  1025  007B8F  2E                 	db	46
  1026  007B90  31                 	db	49	;'1'
  1027  007B91  35                 	db	53	;'5'
  1028  007B92  34                 	db	52	;'4'
  1029  007B93  2E                 	db	46
  1030  007B94  32                 	db	50	;'2'
  1031  007B95  34                 	db	52	;'4'
  1032  007B96  38                 	db	56	;'8'
  1033  007B97  22                 	db	34
  1034  007B98  2C                 	db	44
  1035  007B99  38                 	db	56	;'8'
  1036  007B9A  30                 	db	48	;'0'
  1037  007B9B  0D                 	db	13
  1038  007B9C  0A                 	db	10
  1039  007B9D  00                 	db	0
  1040  007B9E                     STR_17:
  1041  007B9E  41                 	db	65	;'A'
  1042  007B9F  54                 	db	84	;'T'
  1043  007BA0  2B                 	db	43
  1044  007BA1  43                 	db	67	;'C'
  1045  007BA2  57                 	db	87	;'W'
  1046  007BA3  53                 	db	83	;'S'
  1047  007BA4  41                 	db	65	;'A'
  1048  007BA5  50                 	db	80	;'P'
  1049  007BA6  3D                 	db	61	;'='
  1050  007BA7  22                 	db	34
  1051  007BA8  43                 	db	67	;'C'
  1052  007BA9  4F                 	db	79	;'O'
  1053  007BAA  4E                 	db	78	;'N'
  1054  007BAB  54                 	db	84	;'T'
  1055  007BAC  52                 	db	82	;'R'
  1056  007BAD  4F                 	db	79	;'O'
  1057  007BAE  4C                 	db	76	;'L'
  1058  007BAF  41                 	db	65	;'A'
  1059  007BB0  44                 	db	68	;'D'
  1060  007BB1  4F                 	db	79	;'O'
  1061  007BB2  52                 	db	82	;'R'
  1062  007BB3  22                 	db	34
  1063  007BB4  2C                 	db	44
  1064  007BB5  22                 	db	34
  1065  007BB6  22                 	db	34
  1066  007BB7  2C                 	db	44
  1067  007BB8  31                 	db	49	;'1'
  1068  007BB9  31                 	db	49	;'1'
  1069  007BBA  2C                 	db	44
  1070  007BBB  30                 	db	48	;'0'
  1071  007BBC  2C                 	db	44
  1072  007BBD  34                 	db	52	;'4'
  1073  007BBE  0D                 	db	13
  1074  007BBF  0A                 	db	10
  1075  007BC0  00                 	db	0
  1076  007BC1                     STR_20:
  1077  007BC1  41                 	db	65	;'A'
  1078  007BC2  54                 	db	84	;'T'
  1079  007BC3  2B                 	db	43
  1080  007BC4  43                 	db	67	;'C'
  1081  007BC5  49                 	db	73	;'I'
  1082  007BC6  50                 	db	80	;'P'
  1083  007BC7  41                 	db	65	;'A'
  1084  007BC8  50                 	db	80	;'P'
  1085  007BC9  3D                 	db	61	;'='
  1086  007BCA  22                 	db	34
  1087  007BCB  31                 	db	49	;'1'
  1088  007BCC  30                 	db	48	;'0'
  1089  007BCD  2E                 	db	46
  1090  007BCE  31                 	db	49	;'1'
  1091  007BCF  2E                 	db	46
  1092  007BD0  31                 	db	49	;'1'
  1093  007BD1  2E                 	db	46
  1094  007BD2  31                 	db	49	;'1'
  1095  007BD3  22                 	db	34
  1096  007BD4  0D                 	db	13
  1097  007BD5  0A                 	db	10
  1098  007BD6  00                 	db	0
  1099  007BD7                     STR_85:
  1100  007BD7  55                 	db	85	;'U'
  1101  007BD8  4D                 	db	77	;'M'
  1102  007BD9  49                 	db	73	;'I'
  1103  007BDA  44                 	db	68	;'D'
  1104  007BDB  20                 	db	32
  1105  007BDC  20                 	db	32
  1106  007BDD  7C                 	db	124
  1107  007BDE  20                 	db	32
  1108  007BDF  20                 	db	32
  1109  007BE0  25                 	db	37
  1110  007BE1  33                 	db	51	;'3'
  1111  007BE2  64                 	db	100	;'d'
  1112  007BE3  20                 	db	32
  1113  007BE4  7C                 	db	124
  1114  007BE5  20                 	db	32
  1115  007BE6  25                 	db	37
  1116  007BE7  33                 	db	51	;'3'
  1117  007BE8  64                 	db	100	;'d'
  1118  007BE9  20                 	db	32
  1119  007BEA  25                 	db	37
  1120  007BEB  63                 	db	99	;'c'
  1121  007BEC  00                 	db	0
  1122  007BED                     STR_54:
  1123  007BED  41                 	db	65	;'A'
  1124  007BEE  54                 	db	84	;'T'
  1125  007BEF  2B                 	db	43
  1126  007BF0  43                 	db	67	;'C'
  1127  007BF1  57                 	db	87	;'W'
  1128  007BF2  4A                 	db	74	;'J'
  1129  007BF3  41                 	db	65	;'A'
  1130  007BF4  50                 	db	80	;'P'
  1131  007BF5  3D                 	db	61	;'='
  1132  007BF6  22                 	db	34
  1133  007BF7  25                 	db	37
  1134  007BF8  73                 	db	115	;'s'
  1135  007BF9  22                 	db	34
  1136  007BFA  2C                 	db	44
  1137  007BFB  22                 	db	34
  1138  007BFC  25                 	db	37
  1139  007BFD  73                 	db	115	;'s'
  1140  007BFE  22                 	db	34
  1141  007BFF  0D                 	db	13
  1142  007C00  0A                 	db	10
  1143  007C01  00                 	db	0
  1144  007C02                     STR_32:
  1145  007C02  41                 	db	65	;'A'
  1146  007C03  54                 	db	84	;'T'
  1147  007C04  2B                 	db	43
  1148  007C05  43                 	db	67	;'C'
  1149  007C06  49                 	db	73	;'I'
  1150  007C07  50                 	db	80	;'P'
  1151  007C08  53                 	db	83	;'S'
  1152  007C09  45                 	db	69	;'E'
  1153  007C0A  4E                 	db	78	;'N'
  1154  007C0B  44                 	db	68	;'D'
  1155  007C0C  45                 	db	69	;'E'
  1156  007C0D  58                 	db	88	;'X'
  1157  007C0E  3D                 	db	61	;'='
  1158  007C0F  30                 	db	48	;'0'
  1159  007C10  2C                 	db	44
  1160  007C11  38                 	db	56	;'8'
  1161  007C12  30                 	db	48	;'0'
  1162  007C13  30                 	db	48	;'0'
  1163  007C14  0D                 	db	13
  1164  007C15  0A                 	db	10
  1165  007C16  00                 	db	0
  1166  007C17                     STR_28:
  1167  007C17  63                 	db	99	;'c'
  1168  007C18  6F                 	db	111	;'o'
  1169  007C19  6E                 	db	110	;'n'
  1170  007C1A  66                 	db	102	;'f'
  1171  007C1B  69                 	db	105	;'i'
  1172  007C1C  67                 	db	103	;'g'
  1173  007C1D  75                 	db	117	;'u'
  1174  007C1E  72                 	db	114	;'r'
  1175  007C1F  61                 	db	97	;'a'
  1176  007C20  72                 	db	114	;'r'
  1177  007C21  20                 	db	32
  1178  007C22  6F                 	db	111	;'o'
  1179  007C23  20                 	db	32
  1180  007C24  57                 	db	87	;'W'
  1181  007C25  49                 	db	73	;'I'
  1182  007C26  46                 	db	70	;'F'
  1183  007C27  49                 	db	73	;'I'
  1184  007C28  2E                 	db	46
  1185  007C29  2E                 	db	46
  1186  007C2A  2E                 	db	46
  1187  007C2B  00                 	db	0
  1188  007C2C                     STR_84:
  1189  007C2C  54                 	db	84	;'T'
  1190  007C2D  45                 	db	69	;'E'
  1191  007C2E  4D                 	db	77	;'M'
  1192  007C2F  50                 	db	80	;'P'
  1193  007C30  20                 	db	32
  1194  007C31  20                 	db	32
  1195  007C32  7C                 	db	124
  1196  007C33  20                 	db	32
  1197  007C34  20                 	db	32
  1198  007C35  25                 	db	37
  1199  007C36  33                 	db	51	;'3'
  1200  007C37  64                 	db	100	;'d'
  1201  007C38  20                 	db	32
  1202  007C39  7C                 	db	124
  1203  007C3A  20                 	db	32
  1204  007C3B  25                 	db	37
  1205  007C3C  33                 	db	51	;'3'
  1206  007C3D  64                 	db	100	;'d'
  1207  007C3E  20                 	db	32
  1208  007C3F  46                 	db	70	;'F'
  1209  007C40  00                 	db	0
  1210  007C41                     STR_23:
  1211  007C41  41                 	db	65	;'A'
  1212  007C42  54                 	db	84	;'T'
  1213  007C43  2B                 	db	43
  1214  007C44  43                 	db	67	;'C'
  1215  007C45  49                 	db	73	;'I'
  1216  007C46  50                 	db	80	;'P'
  1217  007C47  53                 	db	83	;'S'
  1218  007C48  45                 	db	69	;'E'
  1219  007C49  52                 	db	82	;'R'
  1220  007C4A  56                 	db	86	;'V'
  1221  007C4B  45                 	db	69	;'E'
  1222  007C4C  52                 	db	82	;'R'
  1223  007C4D  3D                 	db	61	;'='
  1224  007C4E  31                 	db	49	;'1'
  1225  007C4F  2C                 	db	44
  1226  007C50  38                 	db	56	;'8'
  1227  007C51  30                 	db	48	;'0'
  1228  007C52  0D                 	db	13
  1229  007C53  0A                 	db	10
  1230  007C54  00                 	db	0
  1231  007C55                     STR_87:
  1232  007C55  20                 	db	32
  1233  007C56  2A                 	db	42
  1234  007C57  46                 	db	70	;'F'
  1235  007C58  41                 	db	65	;'A'
  1236  007C59  4C                 	db	76	;'L'
  1237  007C5A  54                 	db	84	;'T'
  1238  007C5B  41                 	db	65	;'A'
  1239  007C5C  20                 	db	32
  1240  007C5D  44                 	db	68	;'D'
  1241  007C5E  45                 	db	69	;'E'
  1242  007C5F  20                 	db	32
  1243  007C60  45                 	db	69	;'E'
  1244  007C61  4E                 	db	78	;'N'
  1245  007C62  45                 	db	69	;'E'
  1246  007C63  52                 	db	82	;'R'
  1247  007C64  47                 	db	71	;'G'
  1248  007C65  49                 	db	73	;'I'
  1249  007C66  41                 	db	65	;'A'
  1250  007C67  2A                 	db	42
  1251  007C68  00                 	db	0
  1252  007C69                     STR_116:
  1253  007C69  43                 	db	67	;'C'
  1254  007C6A  4F                 	db	79	;'O'
  1255  007C6B  4E                 	db	78	;'N'
  1256  007C6C  46                 	db	70	;'F'
  1257  007C6D  49                 	db	73	;'I'
  1258  007C6E  47                 	db	71	;'G'
  1259  007C6F  55                 	db	85	;'U'
  1260  007C70  52                 	db	82	;'R'
  1261  007C71  41                 	db	65	;'A'
  1262  007C72  52                 	db	82	;'R'
  1263  007C73  20                 	db	32
  1264  007C74  20                 	db	32
  1265  007C75  20                 	db	32
  1266  007C76  20                 	db	32
  1267  007C77  20                 	db	32
  1268  007C78  20                 	db	32
  1269  007C79  20                 	db	32
  1270  007C7A  3E                 	db	62	;'>'
  1271  007C7B  3E                 	db	62	;'>'
  1272  007C7C  00                 	db	0
  1273  007C7D                     STR_102:
  1274  007C7D  43                 	db	67	;'C'
  1275  007C7E  4F                 	db	79	;'O'
  1276  007C7F  4E                 	db	78	;'N'
  1277  007C80  46                 	db	70	;'F'
  1278  007C81  49                 	db	73	;'I'
  1279  007C82  47                 	db	71	;'G'
  1280  007C83  20                 	db	32
  1281  007C84  57                 	db	87	;'W'
  1282  007C85  49                 	db	73	;'I'
  1283  007C86  46                 	db	70	;'F'
  1284  007C87  49                 	db	73	;'I'
  1285  007C88  20                 	db	32
  1286  007C89  20                 	db	32
  1287  007C8A  20                 	db	32
  1288  007C8B  20                 	db	32
  1289  007C8C  20                 	db	32
  1290  007C8D  20                 	db	32
  1291  007C8E  3E                 	db	62	;'>'
  1292  007C8F  3E                 	db	62	;'>'
  1293  007C90  00                 	db	0
  1294  007C91                     STR_101:
  1295  007C91  54                 	db	84	;'T'
  1296  007C92  45                 	db	69	;'E'
  1297  007C93  4D                 	db	77	;'M'
  1298  007C94  50                 	db	80	;'P'
  1299  007C95  4F                 	db	79	;'O'
  1300  007C96  20                 	db	32
  1301  007C97  46                 	db	70	;'F'
  1302  007C98  49                 	db	73	;'I'
  1303  007C99  4D                 	db	77	;'M'
  1304  007C9A  20                 	db	32
  1305  007C9B  46                 	db	70	;'F'
  1306  007C9C  41                 	db	65	;'A'
  1307  007C9D  53                 	db	83	;'S'
  1308  007C9E  45                 	db	69	;'E'
  1309  007C9F  20                 	db	32
  1310  007CA0  20                 	db	32
  1311  007CA1  20                 	db	32
  1312  007CA2  3E                 	db	62	;'>'
  1313  007CA3  3E                 	db	62	;'>'
  1314  007CA4  00                 	db	0
  1315  007CA5                     STR_103:
  1316  007CA5  43                 	db	67	;'C'
  1317  007CA6  4F                 	db	79	;'O'
  1318  007CA7  4E                 	db	78	;'N'
  1319  007CA8  46                 	db	70	;'F'
  1320  007CA9  49                 	db	73	;'I'
  1321  007CAA  47                 	db	71	;'G'
  1322  007CAB  20                 	db	32
  1323  007CAC  41                 	db	65	;'A'
  1324  007CAD  56                 	db	86	;'V'
  1325  007CAE  41                 	db	65	;'A'
  1326  007CAF  4E                 	db	78	;'N'
  1327  007CB0  43                 	db	67	;'C'
  1328  007CB1  41                 	db	65	;'A'
  1329  007CB2  44                 	db	68	;'D'
  1330  007CB3  41                 	db	65	;'A'
  1331  007CB4  53                 	db	83	;'S'
  1332  007CB5  20                 	db	32
  1333  007CB6  3E                 	db	62	;'>'
  1334  007CB7  3E                 	db	62	;'>'
  1335  007CB8  00                 	db	0
  1336  007CB9                     STR_78:
  1337  007CB9  20                 	db	32
  1338  007CBA  54                 	db	84	;'T'
  1339  007CBB  45                 	db	69	;'E'
  1340  007CBC  43                 	db	67	;'C'
  1341  007CBD  48                 	db	72	;'H'
  1342  007CBE  4E                 	db	78	;'N'
  1343  007CBF  4F                 	db	79	;'O'
  1344  007CC0  57                 	db	87	;'W'
  1345  007CC1  20                 	db	32
  1346  007CC2  54                 	db	84	;'T'
  1347  007CC3  65                 	db	101	;'e'
  1348  007CC4  63                 	db	99	;'c'
  1349  007CC5  6E                 	db	110	;'n'
  1350  007CC6  6F                 	db	111	;'o'
  1351  007CC7  6C                 	db	108	;'l'
  1352  007CC8  6F                 	db	111	;'o'
  1353  007CC9  67                 	db	103	;'g'
  1354  007CCA  69                 	db	105	;'i'
  1355  007CCB  61                 	db	97	;'a'
  1356  007CCC  00                 	db	0
  1357  007CCD                     STR_26:
  1358  007CCD  43                 	db	67	;'C'
  1359  007CCE  6F                 	db	111	;'o'
  1360  007CCF  6E                 	db	110	;'n'
  1361  007CD0  65                 	db	101	;'e'
  1362  007CD1  63                 	db	99	;'c'
  1363  007CD2  74                 	db	116	;'t'
  1364  007CD3  65                 	db	101	;'e'
  1365  007CD4  2D                 	db	45
  1366  007CD5  73                 	db	115	;'s'
  1367  007CD6  65                 	db	101	;'e'
  1368  007CD7  20                 	db	32
  1369  007CD8  61                 	db	97	;'a'
  1370  007CD9  20                 	db	32
  1371  007CDA  72                 	db	114	;'r'
  1372  007CDB  65                 	db	101	;'e'
  1373  007CDC  64                 	db	100	;'d'
  1374  007CDD  65                 	db	101	;'e'
  1375  007CDE  20                 	db	32
  1376  007CDF  65                 	db	101	;'e'
  1377  007CE0  00                 	db	0
  1378  007CE1                     STR_63:
  1379  007CE1  41                 	db	65	;'A'
  1380  007CE2  54                 	db	84	;'T'
  1381  007CE3  2B                 	db	43
  1382  007CE4  43                 	db	67	;'C'
  1383  007CE5  49                 	db	73	;'I'
  1384  007CE6  50                 	db	80	;'P'
  1385  007CE7  53                 	db	83	;'S'
  1386  007CE8  45                 	db	69	;'E'
  1387  007CE9  4E                 	db	78	;'N'
  1388  007CEA  44                 	db	68	;'D'
  1389  007CEB  45                 	db	69	;'E'
  1390  007CEC  58                 	db	88	;'X'
  1391  007CED  3D                 	db	61	;'='
  1392  007CEE  32                 	db	50	;'2'
  1393  007CEF  36                 	db	54	;'6'
  1394  007CF0  30                 	db	48	;'0'
  1395  007CF1  0D                 	db	13
  1396  007CF2  0A                 	db	10
  1397  007CF3  00                 	db	0
  1398  007CF4                     STR_119:
  1399  007CF4  53                 	db	83	;'S'
  1400  007CF5  65                 	db	101	;'e'
  1401  007CF6  63                 	db	99	;'c'
  1402  007CF7  2E                 	db	46
  1403  007CF8  20                 	db	32
  1404  007CF9  46                 	db	70	;'F'
  1405  007CFA  6F                 	db	111	;'o'
  1406  007CFB  6C                 	db	108	;'l'
  1407  007CFC  68                 	db	104	;'h'
  1408  007CFD  61                 	db	97	;'a'
  1409  007CFE  20                 	db	32
  1410  007CFF  3A                 	db	58	;':'
  1411  007D00  20                 	db	32
  1412  007D01  25                 	db	37
  1413  007D02  64                 	db	100	;'d'
  1414  007D03  20                 	db	32
  1415  007D04  68                 	db	104	;'h'
  1416  007D05  72                 	db	114	;'r'
  1417  007D06  00                 	db	0
  1418  007D07                     STR_117:
  1419  007D07  41                 	db	65	;'A'
  1420  007D08  6D                 	db	109	;'m'
  1421  007D09  61                 	db	97	;'a'
  1422  007D0A  72                 	db	114	;'r'
  1423  007D0B  65                 	db	101	;'e'
  1424  007D0C  6C                 	db	108	;'l'
  1425  007D0D  61                 	db	97	;'a'
  1426  007D0E  63                 	db	99	;'c'
  1427  007D0F  61                 	db	97	;'a'
  1428  007D10  6F                 	db	111	;'o'
  1429  007D11  20                 	db	32
  1430  007D12  3A                 	db	58	;':'
  1431  007D13  20                 	db	32
  1432  007D14  25                 	db	37
  1433  007D15  64                 	db	100	;'d'
  1434  007D16  20                 	db	32
  1435  007D17  68                 	db	104	;'h'
  1436  007D18  72                 	db	114	;'r'
  1437  007D19  00                 	db	0
  1438  007D1A                     STR_118:
  1439  007D1A  4D                 	db	77	;'M'
  1440  007D1B  75                 	db	117	;'u'
  1441  007D1C  72                 	db	114	;'r'
  1442  007D1D  63                 	db	99	;'c'
  1443  007D1E  68                 	db	104	;'h'
  1444  007D1F  61                 	db	97	;'a'
  1445  007D20  6D                 	db	109	;'m'
  1446  007D21  65                 	db	101	;'e'
  1447  007D22  6E                 	db	110	;'n'
  1448  007D23  74                 	db	116	;'t'
  1449  007D24  6F                 	db	111	;'o'
  1450  007D25  3A                 	db	58	;':'
  1451  007D26  20                 	db	32
  1452  007D27  25                 	db	37
  1453  007D28  64                 	db	100	;'d'
  1454  007D29  20                 	db	32
  1455  007D2A  68                 	db	104	;'h'
  1456  007D2B  72                 	db	114	;'r'
  1457  007D2C  00                 	db	0
  1458  007D2D                     STR_45:
  1459  007D2D  4F                 	db	79	;'O'
  1460  007D2E  4B                 	db	75	;'K'
  1461  007D2F  20                 	db	32
  1462  007D30  72                 	db	114	;'r'
  1463  007D31  65                 	db	101	;'e'
  1464  007D32  69                 	db	105	;'i'
  1465  007D33  6E                 	db	110	;'n'
  1466  007D34  69                 	db	105	;'i'
  1467  007D35  63                 	db	99	;'c'
  1468  007D36  69                 	db	105	;'i'
  1469  007D37  61                 	db	97	;'a'
  1470  007D38  6E                 	db	110	;'n'
  1471  007D39  64                 	db	100	;'d'
  1472  007D3A  6F                 	db	111	;'o'
  1473  007D3B  2E                 	db	46
  1474  007D3C  2E                 	db	46
  1475  007D3D  2E                 	db	46
  1476  007D3E  00                 	db	0
  1477  007D3F                     STR_88:
  1478  007D3F  54                 	db	84	;'T'
  1479  007D40  45                 	db	69	;'E'
  1480  007D41  4D                 	db	77	;'M'
  1481  007D42  50                 	db	80	;'P'
  1482  007D43  45                 	db	69	;'E'
  1483  007D44  52                 	db	82	;'R'
  1484  007D45  41                 	db	65	;'A'
  1485  007D46  54                 	db	84	;'T'
  1486  007D47  55                 	db	85	;'U'
  1487  007D48  52                 	db	82	;'R'
  1488  007D49  41                 	db	65	;'A'
  1489  007D4A  3A                 	db	58	;':'
  1490  007D4B  20                 	db	32
  1491  007D4C  25                 	db	37
  1492  007D4D  64                 	db	100	;'d'
  1493  007D4E  20                 	db	32
  1494  007D4F  46                 	db	70	;'F'
  1495  007D50  00                 	db	0
  1496  007D51                     STR_108:
  1497  007D51  50                 	db	80	;'P'
  1498  007D52  39                 	db	57	;'9'
  1499  007D53  20                 	db	32
  1500  007D54  3A                 	db	58	;':'
  1501  007D55  25                 	db	37
  1502  007D56  34                 	db	52	;'4'
  1503  007D57  64                 	db	100	;'d'
  1504  007D58  20                 	db	32
  1505  007D59  7C                 	db	124
  1506  007D5A  20                 	db	32
  1507  007D5B  50                 	db	80	;'P'
  1508  007D5C  31                 	db	49	;'1'
  1509  007D5D  33                 	db	51	;'3'
  1510  007D5E  3A                 	db	58	;':'
  1511  007D5F  25                 	db	37
  1512  007D60  34                 	db	52	;'4'
  1513  007D61  64                 	db	100	;'d'
  1514  007D62  00                 	db	0
  1515  007D63                     STR_109:
  1516  007D63  50                 	db	80	;'P'
  1517  007D64  31                 	db	49	;'1'
  1518  007D65  30                 	db	48	;'0'
  1519  007D66  3A                 	db	58	;':'
  1520  007D67  25                 	db	37
  1521  007D68  34                 	db	52	;'4'
  1522  007D69  64                 	db	100	;'d'
  1523  007D6A  20                 	db	32
  1524  007D6B  7C                 	db	124
  1525  007D6C  20                 	db	32
  1526  007D6D  50                 	db	80	;'P'
  1527  007D6E  31                 	db	49	;'1'
  1528  007D6F  34                 	db	52	;'4'
  1529  007D70  3A                 	db	58	;':'
  1530  007D71  25                 	db	37
  1531  007D72  34                 	db	52	;'4'
  1532  007D73  64                 	db	100	;'d'
  1533  007D74  00                 	db	0
  1534  007D75                     STR_110:
  1535  007D75  50                 	db	80	;'P'
  1536  007D76  31                 	db	49	;'1'
  1537  007D77  31                 	db	49	;'1'
  1538  007D78  3A                 	db	58	;':'
  1539  007D79  25                 	db	37
  1540  007D7A  34                 	db	52	;'4'
  1541  007D7B  64                 	db	100	;'d'
  1542  007D7C  20                 	db	32
  1543  007D7D  7C                 	db	124
  1544  007D7E  20                 	db	32
  1545  007D7F  50                 	db	80	;'P'
  1546  007D80  31                 	db	49	;'1'
  1547  007D81  35                 	db	53	;'5'
  1548  007D82  3A                 	db	58	;':'
  1549  007D83  25                 	db	37
  1550  007D84  34                 	db	52	;'4'
  1551  007D85  64                 	db	100	;'d'
  1552  007D86  00                 	db	0
  1553  007D87                     STR_120:
  1554  007D87  2A                 	db	42
  1555  007D88  30                 	db	48	;'0'
  1556  007D89  20                 	db	32
  1557  007D8A  6E                 	db	110	;'n'
  1558  007D8B  61                 	db	97	;'a'
  1559  007D8C  6F                 	db	111	;'o'
  1560  007D8D  20                 	db	32
  1561  007D8E  70                 	db	112	;'p'
  1562  007D8F  61                 	db	97	;'a'
  1563  007D90  73                 	db	115	;'s'
  1564  007D91  73                 	db	115	;'s'
  1565  007D92  61                 	db	97	;'a'
  1566  007D93  20                 	db	32
  1567  007D94  66                 	db	102	;'f'
  1568  007D95  61                 	db	97	;'a'
  1569  007D96  73                 	db	115	;'s'
  1570  007D97  65                 	db	101	;'e'
  1571  007D98  00                 	db	0
  1572  007D99                     STR_27:
  1573  007D99  61                 	db	97	;'a'
  1574  007D9A  63                 	db	99	;'c'
  1575  007D9B  65                 	db	101	;'e'
  1576  007D9C  73                 	db	115	;'s'
  1577  007D9D  73                 	db	115	;'s'
  1578  007D9E  65                 	db	101	;'e'
  1579  007D9F  20                 	db	32
  1580  007DA0  6F                 	db	111	;'o'
  1581  007DA1  20                 	db	32
  1582  007DA2  49                 	db	73	;'I'
  1583  007DA3  50                 	db	80	;'P'
  1584  007DA4  20                 	db	32
  1585  007DA5  70                 	db	112	;'p'
  1586  007DA6  61                 	db	97	;'a'
  1587  007DA7  72                 	db	114	;'r'
  1588  007DA8  61                 	db	97	;'a'
  1589  007DA9  00                 	db	0
  1590  007DAA                     STR_115:
  1591  007DAA  53                 	db	83	;'S'
  1592  007DAB  45                 	db	69	;'E'
  1593  007DAC  4E                 	db	78	;'N'
  1594  007DAD  48                 	db	72	;'H'
  1595  007DAE  41                 	db	65	;'A'
  1596  007DAF  20                 	db	32
  1597  007DB0  52                 	db	82	;'R'
  1598  007DB1  45                 	db	69	;'E'
  1599  007DB2  4D                 	db	77	;'M'
  1600  007DB3  4F                 	db	79	;'O'
  1601  007DB4  54                 	db	84	;'T'
  1602  007DB5  41                 	db	65	;'A'
  1603  007DB6  3A                 	db	58	;':'
  1604  007DB7  20                 	db	32
  1605  007DB8  25                 	db	37
  1606  007DB9  64                 	db	100	;'d'
  1607  007DBA  00                 	db	0
  1608  007DBB                     STR_104:
  1609  007DBB  50                 	db	80	;'P'
  1610  007DBC  31                 	db	49	;'1'
  1611  007DBD  3A                 	db	58	;':'
  1612  007DBE  25                 	db	37
  1613  007DBF  34                 	db	52	;'4'
  1614  007DC0  64                 	db	100	;'d'
  1615  007DC1  20                 	db	32
  1616  007DC2  7C                 	db	124
  1617  007DC3  20                 	db	32
  1618  007DC4  20                 	db	32
  1619  007DC5  50                 	db	80	;'P'
  1620  007DC6  35                 	db	53	;'5'
  1621  007DC7  3A                 	db	58	;':'
  1622  007DC8  25                 	db	37
  1623  007DC9  34                 	db	52	;'4'
  1624  007DCA  64                 	db	100	;'d'
  1625  007DCB  00                 	db	0
  1626  007DCC                     STR_105:
  1627  007DCC  50                 	db	80	;'P'
  1628  007DCD  32                 	db	50	;'2'
  1629  007DCE  3A                 	db	58	;':'
  1630  007DCF  25                 	db	37
  1631  007DD0  34                 	db	52	;'4'
  1632  007DD1  64                 	db	100	;'d'
  1633  007DD2  20                 	db	32
  1634  007DD3  7C                 	db	124
  1635  007DD4  20                 	db	32
  1636  007DD5  20                 	db	32
  1637  007DD6  50                 	db	80	;'P'
  1638  007DD7  36                 	db	54	;'6'
  1639  007DD8  3A                 	db	58	;':'
  1640  007DD9  25                 	db	37
  1641  007DDA  34                 	db	52	;'4'
  1642  007DDB  64                 	db	100	;'d'
  1643  007DDC  00                 	db	0
  1644  007DDD                     STR_106:
  1645  007DDD  50                 	db	80	;'P'
  1646  007DDE  33                 	db	51	;'3'
  1647  007DDF  3A                 	db	58	;':'
  1648  007DE0  25                 	db	37
  1649  007DE1  34                 	db	52	;'4'
  1650  007DE2  64                 	db	100	;'d'
  1651  007DE3  20                 	db	32
  1652  007DE4  7C                 	db	124
  1653  007DE5  20                 	db	32
  1654  007DE6  20                 	db	32
  1655  007DE7  50                 	db	80	;'P'
  1656  007DE8  37                 	db	55	;'7'
  1657  007DE9  3A                 	db	58	;':'
  1658  007DEA  25                 	db	37
  1659  007DEB  34                 	db	52	;'4'
  1660  007DEC  64                 	db	100	;'d'
  1661  007DED  00                 	db	0
  1662  007DEE                     STR_107:
  1663  007DEE  50                 	db	80	;'P'
  1664  007DEF  34                 	db	52	;'4'
  1665  007DF0  3A                 	db	58	;':'
  1666  007DF1  25                 	db	37
  1667  007DF2  34                 	db	52	;'4'
  1668  007DF3  64                 	db	100	;'d'
  1669  007DF4  20                 	db	32
  1670  007DF5  7C                 	db	124
  1671  007DF6  20                 	db	32
  1672  007DF7  20                 	db	32
  1673  007DF8  50                 	db	80	;'P'
  1674  007DF9  38                 	db	56	;'8'
  1675  007DFA  3A                 	db	58	;':'
  1676  007DFB  25                 	db	37
  1677  007DFC  34                 	db	52	;'4'
  1678  007DFD  64                 	db	100	;'d'
  1679  007DFE  00                 	db	0
  1680  007DFF                     STR_37:
  1681  007DFF  41                 	db	65	;'A'
  1682  007E00  54                 	db	84	;'T'
  1683  007E01  2B                 	db	43
  1684  007E02  43                 	db	67	;'C'
  1685  007E03  49                 	db	73	;'I'
  1686  007E04  50                 	db	80	;'P'
  1687  007E05  43                 	db	67	;'C'
  1688  007E06  4C                 	db	76	;'L'
  1689  007E07  4F                 	db	79	;'O'
  1690  007E08  53                 	db	83	;'S'
  1691  007E09  45                 	db	69	;'E'
  1692  007E0A  3D                 	db	61	;'='
  1693  007E0B  30                 	db	48	;'0'
  1694  007E0C  0D                 	db	13
  1695  007E0D  0A                 	db	10
  1696  007E0E  00                 	db	0
  1697  007E0F                     STR_56:
  1698  007E0F  41                 	db	65	;'A'
  1699  007E10  54                 	db	84	;'T'
  1700  007E11  2B                 	db	43
  1701  007E12  43                 	db	67	;'C'
  1702  007E13  49                 	db	73	;'I'
  1703  007E14  50                 	db	80	;'P'
  1704  007E15  53                 	db	83	;'S'
  1705  007E16  54                 	db	84	;'T'
  1706  007E17  41                 	db	65	;'A'
  1707  007E18  54                 	db	84	;'T'
  1708  007E19  55                 	db	85	;'U'
  1709  007E1A  53                 	db	83	;'S'
  1710  007E1B  0D                 	db	13
  1711  007E1C  0A                 	db	10
  1712  007E1D  00                 	db	0
  1713  007E1E                     STR_89:
  1714  007E1E  55                 	db	85	;'U'
  1715  007E1F  4D                 	db	77	;'M'
  1716  007E20  49                 	db	73	;'I'
  1717  007E21  44                 	db	68	;'D'
  1718  007E22  41                 	db	65	;'A'
  1719  007E23  44                 	db	68	;'D'
  1720  007E24  45                 	db	69	;'E'
  1721  007E25  3A                 	db	58	;':'
  1722  007E26  20                 	db	32
  1723  007E27  25                 	db	37
  1724  007E28  64                 	db	100	;'d'
  1725  007E29  20                 	db	32
  1726  007E2A  25                 	db	37
  1727  007E2B  63                 	db	99	;'c'
  1728  007E2C  00                 	db	0
  1729  007E2D                     STR_83:
  1730  007E2D  7C                 	db	124
  1731  007E2E  53                 	db	83	;'S'
  1732  007E2F  65                 	db	101	;'e'
  1733  007E30  6E                 	db	110	;'n'
  1734  007E31  73                 	db	115	;'s'
  1735  007E32  6F                 	db	111	;'o'
  1736  007E33  72                 	db	114	;'r'
  1737  007E34  7C                 	db	124
  1738  007E35  41                 	db	65	;'A'
  1739  007E36  6A                 	db	106	;'j'
  1740  007E37  75                 	db	117	;'u'
  1741  007E38  73                 	db	115	;'s'
  1742  007E39  74                 	db	116	;'t'
  1743  007E3A  65                 	db	101	;'e'
  1744  007E3B  00                 	db	0
  1745  007E3C                     STR_50:
  1746  007E3C  41                 	db	65	;'A'
  1747  007E3D  54                 	db	84	;'T'
  1748  007E3E  2B                 	db	43
  1749  007E3F  43                 	db	67	;'C'
  1750  007E40  49                 	db	73	;'I'
  1751  007E41  50                 	db	80	;'P'
  1752  007E42  4D                 	db	77	;'M'
  1753  007E43  55                 	db	85	;'U'
  1754  007E44  58                 	db	88	;'X'
  1755  007E45  3D                 	db	61	;'='
  1756  007E46  30                 	db	48	;'0'
  1757  007E47  0D                 	db	13
  1758  007E48  0A                 	db	10
  1759  007E49  00                 	db	0
  1760  007E4A                     STR_47:
  1761  007E4A  41                 	db	65	;'A'
  1762  007E4B  54                 	db	84	;'T'
  1763  007E4C  2B                 	db	43
  1764  007E4D  43                 	db	67	;'C'
  1765  007E4E  57                 	db	87	;'W'
  1766  007E4F  4D                 	db	77	;'M'
  1767  007E50  4F                 	db	79	;'O'
  1768  007E51  44                 	db	68	;'D'
  1769  007E52  45                 	db	69	;'E'
  1770  007E53  3D                 	db	61	;'='
  1771  007E54  31                 	db	49	;'1'
  1772  007E55  0D                 	db	13
  1773  007E56  0A                 	db	10
  1774  007E57  00                 	db	0
  1775  007E58                     STR_14:
  1776  007E58  41                 	db	65	;'A'
  1777  007E59  54                 	db	84	;'T'
  1778  007E5A  2B                 	db	43
  1779  007E5B  43                 	db	67	;'C'
  1780  007E5C  49                 	db	73	;'I'
  1781  007E5D  50                 	db	80	;'P'
  1782  007E5E  4D                 	db	77	;'M'
  1783  007E5F  55                 	db	85	;'U'
  1784  007E60  58                 	db	88	;'X'
  1785  007E61  3D                 	db	61	;'='
  1786  007E62  31                 	db	49	;'1'
  1787  007E63  0D                 	db	13
  1788  007E64  0A                 	db	10
  1789  007E65  00                 	db	0
  1790  007E66                     STR_11:
  1791  007E66  41                 	db	65	;'A'
  1792  007E67  54                 	db	84	;'T'
  1793  007E68  2B                 	db	43
  1794  007E69  43                 	db	67	;'C'
  1795  007E6A  57                 	db	87	;'W'
  1796  007E6B  4D                 	db	77	;'M'
  1797  007E6C  4F                 	db	79	;'O'
  1798  007E6D  44                 	db	68	;'D'
  1799  007E6E  45                 	db	69	;'E'
  1800  007E6F  3D                 	db	61	;'='
  1801  007E70  32                 	db	50	;'2'
  1802  007E71  0D                 	db	13
  1803  007E72  0A                 	db	10
  1804  007E73  00                 	db	0
  1805  007E74                     STR_71:
  1806  007E74  41                 	db	65	;'A'
  1807  007E75  54                 	db	84	;'T'
  1808  007E76  2B                 	db	43
  1809  007E77  43                 	db	67	;'C'
  1810  007E78  49                 	db	73	;'I'
  1811  007E79  50                 	db	80	;'P'
  1812  007E7A  43                 	db	67	;'C'
  1813  007E7B  4C                 	db	76	;'L'
  1814  007E7C  4F                 	db	79	;'O'
  1815  007E7D  53                 	db	83	;'S'
  1816  007E7E  45                 	db	69	;'E'
  1817  007E7F  0D                 	db	13
  1818  007E80  0A                 	db	10
  1819  007E81  00                 	db	0
  1820  007E82                     STR_39:
  1821  007E82  41                 	db	65	;'A'
  1822  007E83  67                 	db	103	;'g'
  1823  007E84  75                 	db	117	;'u'
  1824  007E85  61                 	db	97	;'a'
  1825  007E86  72                 	db	114	;'r'
  1826  007E87  64                 	db	100	;'d'
  1827  007E88  61                 	db	97	;'a'
  1828  007E89  6E                 	db	110	;'n'
  1829  007E8A  64                 	db	100	;'d'
  1830  007E8B  6F                 	db	111	;'o'
  1831  007E8C  2E                 	db	46
  1832  007E8D  2E                 	db	46
  1833  007E8E  2E                 	db	46
  1834  007E8F  00                 	db	0
  1835  007E90                     STR_79:
  1836  007E90  56                 	db	86	;'V'
  1837  007E91  65                 	db	101	;'e'
  1838  007E92  72                 	db	114	;'r'
  1839  007E93  73                 	db	115	;'s'
  1840  007E94  61                 	db	97	;'a'
  1841  007E95  6F                 	db	111	;'o'
  1842  007E96  20                 	db	32
  1843  007E97  53                 	db	83	;'S'
  1844  007E98  6F                 	db	111	;'o'
  1845  007E99  66                 	db	102	;'f'
  1846  007E9A  74                 	db	116	;'t'
  1847  007E9B  2E                 	db	46
  1848  007E9C  3A                 	db	58	;':'
  1849  007E9D  00                 	db	0
  1850  007E9E                     STR_67:
  1851  007E9E  4A                 	db	74	;'J'
  1852  007E9F  75                 	db	117	;'u'
  1853  007EA0  6C                 	db	108	;'l'
  1854  007EA1  20                 	db	32
  1855  007EA2  31                 	db	49	;'1'
  1856  007EA3  34                 	db	52	;'4'
  1857  007EA4  20                 	db	32
  1858  007EA5  32                 	db	50	;'2'
  1859  007EA6  30                 	db	48	;'0'
  1860  007EA7  32                 	db	50	;'2'
  1861  007EA8  30                 	db	48	;'0'
  1862  007EA9  00                 	db	0
  1863  007EAA                     STR_82:
  1864  007EAA  45                 	db	69	;'E'
  1865  007EAB  52                 	db	82	;'R'
  1866  007EAC  52                 	db	82	;'R'
  1867  007EAD  4F                 	db	79	;'O'
  1868  007EAE  20                 	db	32
  1869  007EAF  45                 	db	69	;'E'
  1870  007EB0  45                 	db	69	;'E'
  1871  007EB1  50                 	db	80	;'P'
  1872  007EB2  52                 	db	82	;'R'
  1873  007EB3  4F                 	db	79	;'O'
  1874  007EB4  4D                 	db	77	;'M'
  1875  007EB5  00                 	db	0
  1876  007EB6                     STR_2:
  1877  007EB6  4D                 	db	77	;'M'
  1878  007EB7  75                 	db	117	;'u'
  1879  007EB8  72                 	db	114	;'r'
  1880  007EB9  63                 	db	99	;'c'
  1881  007EBA  68                 	db	104	;'h'
  1882  007EBB  61                 	db	97	;'a'
  1883  007EBC  6D                 	db	109	;'m'
  1884  007EBD  65                 	db	101	;'e'
  1885  007EBE  6E                 	db	110	;'n'
  1886  007EBF  74                 	db	116	;'t'
  1887  007EC0  6F                 	db	111	;'o'
  1888  007EC1  00                 	db	0
  1889  007EC2                     STR_75:
  1890  007EC2  41                 	db	65	;'A'
  1891  007EC3  54                 	db	84	;'T'
  1892  007EC4  2B                 	db	43
  1893  007EC5  43                 	db	67	;'C'
  1894  007EC6  49                 	db	73	;'I'
  1895  007EC7  46                 	db	70	;'F'
  1896  007EC8  53                 	db	83	;'S'
  1897  007EC9  52                 	db	82	;'R'
  1898  007ECA  0D                 	db	13
  1899  007ECB  0A                 	db	10
  1900  007ECC  00                 	db	0
  1901  007ECD                     STR_3:
  1902  007ECD  53                 	db	83	;'S'
  1903  007ECE  65                 	db	101	;'e'
  1904  007ECF  63                 	db	99	;'c'
  1905  007ED0  2E                 	db	46
  1906  007ED1  20                 	db	32
  1907  007ED2  46                 	db	70	;'F'
  1908  007ED3  6F                 	db	111	;'o'
  1909  007ED4  6C                 	db	108	;'l'
  1910  007ED5  68                 	db	104	;'h'
  1911  007ED6  61                 	db	97	;'a'
  1912  007ED7  00                 	db	0
  1913  007ED8                     STR_1:
  1914  007ED8  41                 	db	65	;'A'
  1915  007ED9  6D                 	db	109	;'m'
  1916  007EDA  61                 	db	97	;'a'
  1917  007EDB  72                 	db	114	;'r'
  1918  007EDC  65                 	db	101	;'e'
  1919  007EDD  6C                 	db	108	;'l'
  1920  007EDE  61                 	db	97	;'a'
  1921  007EDF  63                 	db	99	;'c'
  1922  007EE0  61                 	db	97	;'a'
  1923  007EE1  6F                 	db	111	;'o'
  1924  007EE2  00                 	db	0
  1925  007EE3                     STR_94:
  1926  007EE3  41                 	db	65	;'A'
  1927  007EE4  75                 	db	117	;'u'
  1928  007EE5  74                 	db	116	;'t'
  1929  007EE6  6F                 	db	111	;'o'
  1930  007EE7  6D                 	db	109	;'m'
  1931  007EE8  61                 	db	97	;'a'
  1932  007EE9  74                 	db	116	;'t'
  1933  007EEA  69                 	db	105	;'i'
  1934  007EEB  63                 	db	99	;'c'
  1935  007EEC  6F                 	db	111	;'o'
  1936  007EED  00                 	db	0
  1937  007EEE                     STR_97:
  1938  007EEE  44                 	db	68	;'D'
  1939  007EEF  65                 	db	101	;'e'
  1940  007EF0  73                 	db	115	;'s'
  1941  007EF1  74                 	db	116	;'t'
  1942  007EF2  72                 	db	114	;'r'
  1943  007EF3  61                 	db	97	;'a'
  1944  007EF4  76                 	db	118	;'v'
  1945  007EF5  61                 	db	97	;'a'
  1946  007EF6  64                 	db	100	;'d'
  1947  007EF7  6F                 	db	111	;'o'
  1948  007EF8  00                 	db	0
  1949  007EF9                     STR_98:
  1950  007EF9  41                 	db	65	;'A'
  1951  007EFA  4C                 	db	76	;'L'
  1952  007EFB  41                 	db	65	;'A'
  1953  007EFC  52                 	db	82	;'R'
  1954  007EFD  4D                 	db	77	;'M'
  1955  007EFE  45                 	db	69	;'E'
  1956  007EFF  3A                 	db	58	;':'
  1957  007F00  20                 	db	32
  1958  007F01  25                 	db	37
  1959  007F02  73                 	db	115	;'s'
  1960  007F03  00                 	db	0
  1961  007F04                     STR_100:
  1962  007F04  44                 	db	68	;'D'
  1963  007F05  65                 	db	101	;'e'
  1964  007F06  73                 	db	115	;'s'
  1965  007F07  6C                 	db	108	;'l'
  1966  007F08  69                 	db	105	;'i'
  1967  007F09  67                 	db	103	;'g'
  1968  007F0A  61                 	db	97	;'a'
  1969  007F0B  64                 	db	100	;'d'
  1970  007F0C  6F                 	db	111	;'o'
  1971  007F0D  00                 	db	0
  1972  007F0E                     STR_4:
  1973  007F0E  53                 	db	83	;'S'
  1974  007F0F  65                 	db	101	;'e'
  1975  007F10  63                 	db	99	;'c'
  1976  007F11  2E                 	db	46
  1977  007F12  20                 	db	32
  1978  007F13  54                 	db	84	;'T'
  1979  007F14  61                 	db	97	;'a'
  1980  007F15  6C                 	db	108	;'l'
  1981  007F16  6F                 	db	111	;'o'
  1982  007F17  00                 	db	0
  1983  007F18                     STR_91:
  1984  007F18  43                 	db	67	;'C'
  1985  007F19  4C                 	db	76	;'L'
  1986  007F1A  49                 	db	73	;'I'
  1987  007F1B  4D                 	db	77	;'M'
  1988  007F1C  41                 	db	65	;'A'
  1989  007F1D  3A                 	db	58	;':'
  1990  007F1E  20                 	db	32
  1991  007F1F  25                 	db	37
  1992  007F20  73                 	db	115	;'s'
  1993  007F21  00                 	db	0
  1994  007F22                     STR_95:
  1995  007F22  54                 	db	84	;'T'
  1996  007F23  52                 	db	82	;'R'
  1997  007F24  41                 	db	65	;'A'
  1998  007F25  56                 	db	86	;'V'
  1999  007F26  41                 	db	65	;'A'
  2000  007F27  3A                 	db	58	;':'
  2001  007F28  20                 	db	32
  2002  007F29  25                 	db	37
  2003  007F2A  73                 	db	115	;'s'
  2004  007F2B  00                 	db	0
  2005  007F2C                     STR_86:
  2006  007F2C  46                 	db	70	;'F'
  2007  007F2D  61                 	db	97	;'a'
  2008  007F2E  73                 	db	115	;'s'
  2009  007F2F  65                 	db	101	;'e'
  2010  007F30  20                 	db	32
  2011  007F31  7E                 	db	126
  2012  007F32  20                 	db	32
  2013  007F33  25                 	db	37
  2014  007F34  73                 	db	115	;'s'
  2015  007F35  00                 	db	0
  2016  007F36                     STR_111:
  2017  007F36  50                 	db	80	;'P'
  2018  007F37  31                 	db	49	;'1'
  2019  007F38  32                 	db	50	;'2'
  2020  007F39  3A                 	db	58	;':'
  2021  007F3A  25                 	db	37
  2022  007F3B  34                 	db	52	;'4'
  2023  007F3C  64                 	db	100	;'d'
  2024  007F3D  20                 	db	32
  2025  007F3E  7C                 	db	124
  2026  007F3F  00                 	db	0
  2027  007F40                     STR_77:
  2028  007F40  41                 	db	65	;'A'
  2029  007F41  54                 	db	84	;'T'
  2030  007F42  2B                 	db	43
  2031  007F43  52                 	db	82	;'R'
  2032  007F44  53                 	db	83	;'S'
  2033  007F45  54                 	db	84	;'T'
  2034  007F46  0D                 	db	13
  2035  007F47  0A                 	db	10
  2036  007F48  00                 	db	0
  2037  007F49                     STR_29:
  2038  007F49  31                 	db	49	;'1'
  2039  007F4A  30                 	db	48	;'0'
  2040  007F4B  2E                 	db	46
  2041  007F4C  31                 	db	49	;'1'
  2042  007F4D  2E                 	db	46
  2043  007F4E  31                 	db	49	;'1'
  2044  007F4F  2E                 	db	46
  2045  007F50  31                 	db	49	;'1'
  2046  007F51  00                 	db	0
  2047  007F52                     STR_90:
  2048  007F52  46                 	db	70	;'F'
  2049  007F53  41                 	db	65	;'A'
  2050  007F54  53                 	db	83	;'S'
  2051  007F55  45                 	db	69	;'E'
  2052  007F56  3A                 	db	58	;':'
  2053  007F57  20                 	db	32
  2054  007F58  25                 	db	37
  2055  007F59  73                 	db	115	;'s'
  2056  007F5A  00                 	db	0
  2057  007F5B                     STR_92:
  2058  007F5B  4D                 	db	77	;'M'
  2059  007F5C  4F                 	db	79	;'O'
  2060  007F5D  44                 	db	68	;'D'
  2061  007F5E  4F                 	db	79	;'O'
  2062  007F5F  3A                 	db	58	;':'
  2063  007F60  20                 	db	32
  2064  007F61  25                 	db	37
  2065  007F62  73                 	db	115	;'s'
  2066  007F63  00                 	db	0
  2067  007F64                     STR_113:
  2068  007F64  53                 	db	83	;'S'
  2069  007F65  45                 	db	69	;'E'
  2070  007F66  4E                 	db	78	;'N'
  2071  007F67  48                 	db	72	;'H'
  2072  007F68  41                 	db	65	;'A'
  2073  007F69  3A                 	db	58	;':'
  2074  007F6A  25                 	db	37
  2075  007F6B  73                 	db	115	;'s'
  2076  007F6C  00                 	db	0
  2077  007F6D                     STR_96:
  2078  007F6D  54                 	db	84	;'T'
  2079  007F6E  72                 	db	114	;'r'
  2080  007F6F  61                 	db	97	;'a'
  2081  007F70  76                 	db	118	;'v'
  2082  007F71  61                 	db	97	;'a'
  2083  007F72  64                 	db	100	;'d'
  2084  007F73  6F                 	db	111	;'o'
  2085  007F74  00                 	db	0
  2086  007F75                     STR_112:
  2087  007F75  52                 	db	82	;'R'
  2088  007F76  45                 	db	69	;'E'
  2089  007F77  44                 	db	68	;'D'
  2090  007F78  45                 	db	69	;'E'
  2091  007F79  3A                 	db	58	;':'
  2092  007F7A  25                 	db	37
  2093  007F7B  73                 	db	115	;'s'
  2094  007F7C  00                 	db	0
  2095  007F7D                     STR_131:
  2096  007F7D  28                 	db	40
  2097  007F7E  6E                 	db	110	;'n'
  2098  007F7F  75                 	db	117	;'u'
  2099  007F80  6C                 	db	108	;'l'
  2100  007F81  6C                 	db	108	;'l'
  2101  007F82  29                 	db	41
  2102  007F83  00                 	db	0
  2103  007F84                     STR_124:
  2104  007F84  22                 	db	34
  2105  007F85  25                 	db	37
  2106  007F86  73                 	db	115	;'s'
  2107  007F87  22                 	db	34
  2108  007F88  3A                 	db	58	;':'
  2109  007F89  22                 	db	34
  2110  007F8A  00                 	db	0
  2111  007F8B                     STR_73:
  2112  007F8B  43                 	db	67	;'C'
  2113  007F8C  4C                 	db	76	;'L'
  2114  007F8D  4F                 	db	79	;'O'
  2115  007F8E  53                 	db	83	;'S'
  2116  007F8F  45                 	db	69	;'E'
  2117  007F90  44                 	db	68	;'D'
  2118  007F91  00                 	db	0
  2119  007F92                     STR_7:
  2120  007F92  4E                 	db	78	;'N'
  2121  007F93  6F                 	db	111	;'o'
  2122  007F94  72                 	db	114	;'r'
  2123  007F95  6D                 	db	109	;'m'
  2124  007F96  61                 	db	97	;'a'
  2125  007F97  6C                 	db	108	;'l'
  2126  007F98  00                 	db	0
  2127  007F99                     STR_93:
  2128  007F99  4D                 	db	77	;'M'
  2129  007F9A  61                 	db	97	;'a'
  2130  007F9B  6E                 	db	110	;'n'
  2131  007F9C  75                 	db	117	;'u'
  2132  007F9D  61                 	db	97	;'a'
  2133  007F9E  6C                 	db	108	;'l'
  2134  007F9F  00                 	db	0
  2135  007FA0                     STR_99:
  2136  007FA0  4C                 	db	76	;'L'
  2137  007FA1  69                 	db	105	;'i'
  2138  007FA2  67                 	db	103	;'g'
  2139  007FA3  61                 	db	97	;'a'
  2140  007FA4  64                 	db	100	;'d'
  2141  007FA5  6F                 	db	111	;'o'
  2142  007FA6  00                 	db	0
  2143  007FA7                     STR_114:
  2144  007FA7  4E                 	db	78	;'N'
  2145  007FA8  53                 	db	83	;'S'
  2146  007FA9  3A                 	db	58	;':'
  2147  007FAA  20                 	db	32
  2148  007FAB  25                 	db	37
  2149  007FAC  73                 	db	115	;'s'
  2150  007FAD  00                 	db	0
  2151  007FAE                     STR_25:
  2152  007FAE  41                 	db	65	;'A'
  2153  007FAF  63                 	db	99	;'c'
  2154  007FB0  63                 	db	99	;'c'
  2155  007FB1  65                 	db	101	;'e'
  2156  007FB2  70                 	db	112	;'p'
  2157  007FB3  74                 	db	116	;'t'
  2158  007FB4  00                 	db	0
  2159  007FB5  22                 	db	34
  2160  007FB6  25                 	db	37
  2161  007FB7  73                 	db	115	;'s'
  2162  007FB8  22                 	db	34
  2163  007FB9  3A                 	db	58	;':'
  2164  007FBA  00                 	db	0
  2165  007FBB                     STR_6:
  2166  007FBB  55                 	db	85	;'U'
  2167  007FBC  6D                 	db	109	;'m'
  2168  007FBD  69                 	db	105	;'i'
  2169  007FBE  64                 	db	100	;'d'
  2170  007FBF  6F                 	db	111	;'o'
  2171  007FC0  00                 	db	0
  2172  007FC1                     STR_122:
  2173  007FC1  25                 	db	37
  2174  007FC2  73                 	db	115	;'s'
  2175  007FC3  25                 	db	37
  2176  007FC4  63                 	db	99	;'c'
  2177  007FC5  00                 	db	0
  2178  007FC6                     STR_69:
  2179  007FC6  73                 	db	115	;'s'
  2180  007FC7  61                 	db	97	;'a'
  2181  007FC8  76                 	db	118	;'v'
  2182  007FC9  65                 	db	101	;'e'
  2183  007FCA  00                 	db	0
  2184  007FCB                     STR_52:
  2185  007FCB  6C                 	db	108	;'l'
  2186  007FCC  69                 	db	105	;'i'
  2187  007FCD  6E                 	db	110	;'n'
  2188  007FCE  6B                 	db	107	;'k'
  2189  007FCF  00                 	db	0
  2190  007FD0                     STR_8:
  2191  007FD0  53                 	db	83	;'S'
  2192  007FD1  65                 	db	101	;'e'
  2193  007FD2  63                 	db	99	;'c'
  2194  007FD3  6F                 	db	111	;'o'
  2195  007FD4  00                 	db	0
  2196  007FD5                     STR_5:
  2197  007FD5  2D                 	db	45
  2198  007FD6  20                 	db	32
  2199  007FD7  2D                 	db	45
  2200  007FD8  00                 	db	0
  2201  007FD9                     STR_65:
  2202  007FD9  32                 	db	50	;'2'
  2203  007FDA  30                 	db	48	;'0'
  2204  007FDB  30                 	db	48	;'0'
  2205  007FDC  00                 	db	0
  2206  007FDD                     STR_10:
  2207  007FDD  41                 	db	65	;'A'
  2208  007FDE  4C                 	db	76	;'L'
  2209  007FDF  4C                 	db	76	;'L'
  2210  007FE0  00                 	db	0
  2211  007FE1                     STR_74:
  2212  007FE1  41                 	db	65	;'A'
  2213  007FE2  50                 	db	80	;'P'
  2214  007FE3  4D                 	db	77	;'M'
  2215  007FE4  00                 	db	0
  2216  007FE5                     STR_38:
  2217  007FE5  24                 	db	36
  2218  007FE6  23                 	db	35
  2219  007FE7  00                 	db	0
  2220  007FE8                     STR_40:
  2221  007FE8  23                 	db	35
  2222  007FE9  24                 	db	36
  2223  007FEA  00                 	db	0
  2224  007FEB                     STR_76:
  2225  007FEB  43                 	db	67	;'C'
  2226  007FEC  2C                 	db	44
  2227  007FED  00                 	db	0
  2228  007FEE                     STR_9:
  2229  007FEE  2D                 	db	45
  2230  007FEF  2D                 	db	45
  2231  007FF0  00                 	db	0
  2232  007FF1                     STR_12:
  2233  007FF1  4F                 	db	79	;'O'
  2234  007FF2  4B                 	db	75	;'K'
  2235  007FF3  00                 	db	0
  2236  007FF4                     STR_41:
  2237  007FF4  73                 	db	115	;'s'
  2238  007FF5  73                 	db	115	;'s'
  2239  007FF6  00                 	db	0
  2240  007FF7                     STR_42:
  2241  007FF7  70                 	db	112	;'p'
  2242  007FF8  77                 	db	119	;'w'
  2243  007FF9  00                 	db	0
  2244  007FFA                     STR_57:
  2245  007FFA  32                 	db	50	;'2'
  2246  007FFB  00                 	db	0
  2247  007FFC                     STR_58:
  2248  007FFC  34                 	db	52	;'4'
  2249  007FFD  00                 	db	0
  2250  0000                     
  2251                           ; #config settings
  2252  007FFE  00                 	db	0	; dummy byte at the end
  2253  0000                     
  2254                           	psect	cinit
  2255  004F54                     __pcinit:
  2256                           	opt stack 0
  2257  004F54                     start_initialization:
  2258                           	opt stack 0
  2259  004F54                     __initialization:
  2260                           	opt stack 0
  2261                           
  2262                           ; Initialize objects allocated to BANK1 (12 bytes)
  2263                           ; load TBLPTR registers with __pidataBANK1
  2264  004F54  0E32               	movlw	low __pidataBANK1
  2265  004F56  6EF6               	movwf	tblptrl,c
  2266  004F58  0E5B               	movlw	high __pidataBANK1
  2267  004F5A  6EF7               	movwf	tblptrh,c
  2268  004F5C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2269  004F5E  6EF8               	movwf	tblptru,c
  2270  004F60  EE01  F0E2         	lfsr	0,__pdataBANK1
  2271  004F64  EE10 F00C          	lfsr	1,12
  2272  004F68                     copy_data0:
  2273  004F68  0009               	tblrd		*+
  2274  004F6A  CFF5 FFEE          	movff	tablat,postinc0
  2275  004F6E  50E5               	movf	postdec1,w,c
  2276  004F70  50E1               	movf	fsr1l,w,c
  2277  004F72  E1FA               	bnz	copy_data0
  2278                           
  2279                           ; Initialize objects allocated to BANK0 (3 bytes)
  2280                           ; load TBLPTR registers with __pidataBANK0
  2281  004F74  0E7D               	movlw	low __pidataBANK0
  2282  004F76  6EF6               	movwf	tblptrl,c
  2283  004F78  0E5B               	movlw	high __pidataBANK0
  2284  004F7A  6EF7               	movwf	tblptrh,c
  2285  004F7C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2286  004F7E  6EF8               	movwf	tblptru,c
  2287  004F80  0009               	tblrd		*+	;fetch initializer
  2288  004F82  CFF5 F0FD          	movff	tablat,__pdataBANK0
  2289  004F86  0009               	tblrd		*+	;fetch initializer
  2290  004F88  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  2291  004F8C  0009               	tblrd		*+	;fetch initializer
  2292  004F8E  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
  2293                           
  2294                           ; Initialize objects allocated to COMRAM (3 bytes)
  2295                           ; load TBLPTR registers with __pidataCOMRAM
  2296  004F92  0E7A               	movlw	low __pidataCOMRAM
  2297  004F94  6EF6               	movwf	tblptrl,c
  2298  004F96  0E5B               	movlw	high __pidataCOMRAM
  2299  004F98  6EF7               	movwf	tblptrh,c
  2300  004F9A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2301  004F9C  6EF8               	movwf	tblptru,c
  2302  004F9E  0009               	tblrd		*+	;fetch initializer
  2303  004FA0  CFF5 F05C          	movff	tablat,__pdataCOMRAM
  2304  004FA4  0009               	tblrd		*+	;fetch initializer
  2305  004FA6  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
  2306  004FAA  0009               	tblrd		*+	;fetch initializer
  2307  004FAC  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
  2308                           
  2309                           ; Clear objects allocated to BANK2 (185 bytes)
  2310  004FB0  EE02  F000         	lfsr	0,__pbssBANK2
  2311  004FB4  0EB9               	movlw	185
  2312  004FB6                     clear_0:
  2313  004FB6  6AEE               	clrf	postinc0,c
  2314  004FB8  06E8               	decf	wreg,f,c
  2315  004FBA  E1FD               	bnz	clear_0
  2316                           
  2317                           ; Clear objects allocated to BANK1 (226 bytes)
  2318  004FBC  EE01  F000         	lfsr	0,__pbssBANK1
  2319  004FC0  0EE2               	movlw	226
  2320  004FC2                     clear_1:
  2321  004FC2  6AEE               	clrf	postinc0,c
  2322  004FC4  06E8               	decf	wreg,f,c
  2323  004FC6  E1FD               	bnz	clear_1
  2324                           
  2325                           ; Clear objects allocated to BANK0 (10 bytes)
  2326  004FC8  EE00  F0F3         	lfsr	0,__pbssBANK0
  2327  004FCC  0E0A               	movlw	10
  2328  004FCE                     clear_2:
  2329  004FCE  6AEE               	clrf	postinc0,c
  2330  004FD0  06E8               	decf	wreg,f,c
  2331  004FD2  E1FD               	bnz	clear_2
  2332                           
  2333                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2334  004FD4  6A5B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2335                           
  2336                           ; Clear objects allocated to COMRAM (42 bytes)
  2337  004FD6  EE00  F031         	lfsr	0,__pbssCOMRAM
  2338  004FDA  0E2A               	movlw	42
  2339  004FDC                     clear_3:
  2340  004FDC  6AEE               	clrf	postinc0,c
  2341  004FDE  06E8               	decf	wreg,f,c
  2342  004FE0  E1FD               	bnz	clear_3
  2343  004FE2                     end_of_initialization:
  2344                           	opt stack 0
  2345  004FE2                     __end_of__initialization:
  2346                           	opt stack 0
  2347  004FE2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2348  004FE4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2349  004FE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2350  004FE8  6EF8               	movwf	tblptru,c
  2351  004FEA  0100               	movlb	0
  2352  004FEC  EF09  F000         	goto	_main	;jump to C main() function
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1l	equ	0xFE1
  2361                           
  2362                           	psect	bitbssCOMRAM
  2363  0002D8                     __pbitbssCOMRAM:
  2364                           	opt stack 0
  2365  0002D8                     _contador_fase_automatica:
  2366                           	opt stack 0
  2367  0002D8                     	ds	1
  2368  0002D9                     _md_seguranca:
  2369                           	opt stack 0
  2370  0002D9                     	ds	1
  2371  0002DA                     _blinkk:
  2372                           	opt stack 0
  2373  0002DA                     	ds	1
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           postdec1	equ	0xFE5
  2381                           fsr1l	equ	0xFE1
  2382                           
  2383                           	psect	bssCOMRAM
  2384  000031                     __pbssCOMRAM:
  2385                           	opt stack 0
  2386  000031                     _t_controle_religar_buzzer:
  2387                           	opt stack 0
  2388  000031                     	ds	2
  2389  000033                     _t_controle_flap:
  2390                           	opt stack 0
  2391  000033                     	ds	2
  2392  000035                     _media_adc:
  2393                           	opt stack 0
  2394  000035                     	ds	1
  2395  000036                     _t_leitura_adc:
  2396                           	opt stack 0
  2397  000036                     	ds	1
  2398  000037                     _t_controle_temp_automatica:
  2399                           	opt stack 0
  2400  000037                     	ds	1
  2401  000038                     _t_controle_blink:
  2402                           	opt stack 0
  2403  000038                     	ds	1
  2404  000039                     _t_controle_buzzer:
  2405                           	opt stack 0
  2406  000039                     	ds	1
  2407  00003A                     _t_controle_fim_fases:
  2408                           	opt stack 0
  2409  00003A                     	ds	1
  2410  00003B                     _f_buzzer_falta_energia:
  2411                           	opt stack 0
  2412  00003B                     	ds	1
  2413  00003C                     __acao_flap:
  2414                           	opt stack 0
  2415  00003C                     	ds	1
  2416  00003D                     _f_wifi_processo:
  2417                           	opt stack 0
  2418  00003D                     	ds	1
  2419  00003E                     _t_wifi_restart:
  2420                           	opt stack 0
  2421  00003E                     	ds	1
  2422  00003F                     __BF_current:
  2423                           	opt stack 0
  2424  00003F                     	ds	1
  2425  000040                     __BF_i_count:
  2426                           	opt stack 0
  2427  000040                     	ds	1
  2428  000041                     __BF_enable_receive:
  2429                           	opt stack 0
  2430  000041                     	ds	1
  2431  000042                     _bt_flag:
  2432                           	opt stack 0
  2433  000042                     	ds	1
  2434  000043                     _leds:
  2435                           	opt stack 0
  2436  000043                     	ds	1
  2437  000044                     _ajuste_parametro:
  2438                           	opt stack 0
  2439  000044                     	ds	1
  2440  000045                     _opcaomenu:
  2441                           	opt stack 0
  2442  000045                     	ds	1
  2443  000046                     _hor:
  2444                           	opt stack 0
  2445  000046                     	ds	1
  2446  000047                     _min:
  2447                           	opt stack 0
  2448  000047                     	ds	1
  2449  000048                     _sec:
  2450                           	opt stack 0
  2451  000048                     	ds	1
  2452  000049                     _wifi_conectado:
  2453                           	opt stack 0
  2454  000049                     	ds	1
  2455  00004A                     _base_sec:
  2456                           	opt stack 0
  2457  00004A                     	ds	1
  2458  00004B                     _wifi_SENHA:
  2459                           	opt stack 0
  2460  00004B                     	ds	2
  2461  00004D                     _senha_desbloqueio_func:
  2462                           	opt stack 0
  2463  00004D                     	ds	1
  2464  00004E                     _wifi_habilita_alteracao:
  2465                           	opt stack 0
  2466  00004E                     	ds	1
  2467  00004F                     _h_subir_temp_automatica:
  2468                           	opt stack 0
  2469  00004F                     	ds	1
  2470  000050                     _h_buzzer:
  2471                           	opt stack 0
  2472  000050                     	ds	1
  2473  000051                     _h_flap:
  2474                           	opt stack 0
  2475  000051                     	ds	1
  2476  000052                     _h_abafador:
  2477                           	opt stack 0
  2478  000052                     	ds	1
  2479  000053                     _h_venotinha:
  2480                           	opt stack 0
  2481  000053                     	ds	1
  2482  000054                     _t_flap_intervalo:
  2483                           	opt stack 0
  2484  000054                     	ds	1
  2485  000055                     _t_flap_ligado:
  2486                           	opt stack 0
  2487  000055                     	ds	1
  2488  000056                     _t_fim_fase3:
  2489                           	opt stack 0
  2490  000056                     	ds	1
  2491  000057                     _t_fim_fase2:
  2492                           	opt stack 0
  2493  000057                     	ds	1
  2494  000058                     _t_fim_fase1:
  2495                           	opt stack 0
  2496  000058                     	ds	1
  2497  000059                     _tipo_modo_trabalho:
  2498                           	opt stack 0
  2499  000059                     	ds	1
  2500  00005A                     _fornalha:
  2501                           	opt stack 0
  2502  00005A                     	ds	1
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           postdec1	equ	0xFE5
  2510                           fsr1l	equ	0xFE1
  2511                           
  2512                           	psect	dataCOMRAM
  2513  00005C                     __pdataCOMRAM:
  2514                           	opt stack 0
  2515  00005C                     __led:
  2516                           	opt stack 0
  2517  00005C                     	ds	1
  2518  00005D                     _umid:
  2519                           	opt stack 0
  2520  00005D                     	ds	1
  2521  00005E                     _f_falta_energia:
  2522                           	opt stack 0
  2523  00005E                     	ds	1
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           postinc0	equ	0xFEE
  2529                           wreg	equ	0xFE8
  2530                           postdec1	equ	0xFE5
  2531                           fsr1l	equ	0xFE1
  2532                           
  2533                           	psect	bssBANK0
  2534  0000F3                     __pbssBANK0:
  2535                           	opt stack 0
  2536  0000F3                     _umidajt:
  2537                           	opt stack 0
  2538  0000F3                     	ds	1
  2539  0000F4                     _tempajt:
  2540                           	opt stack 0
  2541  0000F4                     	ds	1
  2542  0000F5                     _clima:
  2543                           	opt stack 0
  2544  0000F5                     	ds	1
  2545  0000F6                     _fase:
  2546                           	opt stack 0
  2547  0000F6                     	ds	1
  2548  0000F7                     _h_modo_seguranca:
  2549                           	opt stack 0
  2550  0000F7                     	ds	1
  2551  0000F8                     _t_religar_ventoinha_automatica:
  2552                           	opt stack 0
  2553  0000F8                     	ds	1
  2554  0000F9                     _t_temp_automatica:
  2555                           	opt stack 0
  2556  0000F9                     	ds	1
  2557  0000FA                     _tipo_sensor_umidade:
  2558                           	opt stack 0
  2559  0000FA                     	ds	1
  2560  0000FB                     _trava_fase:
  2561                           	opt stack 0
  2562  0000FB                     	ds	1
  2563  0000FC                     _buzzer:
  2564                           	opt stack 0
  2565  0000FC                     	ds	1
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           postdec1	equ	0xFE5
  2573                           fsr1l	equ	0xFE1
  2574                           
  2575                           	psect	dataBANK0
  2576  0000FD                     __pdataBANK0:
  2577                           	opt stack 0
  2578  0000FD                     _menu:
  2579                           	opt stack 0
  2580  0000FD                     	ds	1
  2581  0000FE                     _temp:
  2582                           	opt stack 0
  2583  0000FE                     	ds	1
  2584  0000FF                     _t_buzzer_religar:
  2585                           	opt stack 0
  2586  0000FF                     	ds	1
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           postdec1	equ	0xFE5
  2594                           fsr1l	equ	0xFE1
  2595                           
  2596                           	psect	bssBANK1
  2597  000100                     __pbssBANK1:
  2598                           	opt stack 0
  2599  000100                     __umid:
  2600                           	opt stack 0
  2601  000100                     	ds	33
  2602  000121                     __temp:
  2603                           	opt stack 0
  2604  000121                     	ds	33
  2605  000142                     getIntJSON@F276:
  2606                           	opt stack 0
  2607  000142                     	ds	20
  2608  000156                     getIntJSON@F274:
  2609                           	opt stack 0
  2610  000156                     	ds	10
  2611  000160                     _t_controle_modo_seguranca:
  2612                           	opt stack 0
  2613  000160                     	ds	2
  2614  000162                     _t_controle_religar_ventoinha:
  2615                           	opt stack 0
  2616  000162                     	ds	2
  2617  000164                     __sec:
  2618                           	opt stack 0
  2619  000164                     	ds	1
  2620  000165                     _lcd_rfsh:
  2621                           	opt stack 0
  2622  000165                     	ds	1
  2623  000166                     _line4:
  2624                           	opt stack 0
  2625  000166                     	ds	21
  2626  00017B                     _line3:
  2627                           	opt stack 0
  2628  00017B                     	ds	21
  2629  000190                     _line2:
  2630                           	opt stack 0
  2631  000190                     	ds	21
  2632  0001A5                     _line1:
  2633                           	opt stack 0
  2634  0001A5                     	ds	21
  2635  0001BA                     _senha:
  2636                           	opt stack 0
  2637  0001BA                     	ds	15
  2638  0001C9                     _ssid:
  2639                           	opt stack 0
  2640  0001C9                     	ds	15
  2641  0001D8                     __BF_start:
  2642                           	opt stack 0
  2643  0001D8                     	ds	10
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           fsr1l	equ	0xFE1
  2652                           
  2653                           	psect	dataBANK1
  2654  0001E2                     __pdataBANK1:
  2655                           	opt stack 0
  2656  0001E2                     _wifi_MAC:
  2657                           	opt stack 0
  2658  0001E2                     	ds	12
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           postinc0	equ	0xFEE
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1l	equ	0xFE1
  2667                           
  2668                           	psect	bssBANK2
  2669  000200                     __pbssBANK2:
  2670                           	opt stack 0
  2671  000200                     getStringJSON@F288:
  2672                           	opt stack 0
  2673  000200                     	ds	25
  2674  000219                     getStringJSON@F292:
  2675                           	opt stack 0
  2676  000219                     	ds	20
  2677  00022D                     getStringJSON@F290:
  2678                           	opt stack 0
  2679  00022D                     	ds	20
  2680  000241                     getIntJSON@F278:
  2681                           	opt stack 0
  2682  000241                     	ds	20
  2683  000255                     _bufferSerial:
  2684                           	opt stack 0
  2685  000255                     	ds	100
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1l	equ	0xFE1
  2694                           
  2695                           	psect	cstackBANK0
  2696  000060                     __pcstackBANK0:
  2697                           	opt stack 0
  2698  000060                     ??_isdigit:
  2699  000060                     ??_I2C_Wait:
  2700  000060                     ?_strlen:
  2701                           	opt stack 0
  2702  000060                     ?_faseAtual:
  2703                           	opt stack 0
  2704  000060                     ?_climaAtual:
  2705                           	opt stack 0
  2706  000060                     ?_strchr:
  2707                           	opt stack 0
  2708  000060                     ?_tabelaUmidade:
  2709                           	opt stack 0
  2710  000060                     ?_readADC:
  2711                           	opt stack 0
  2712  000060                     ?___wmul:
  2713                           	opt stack 0
  2714  000060                     ?___lwdiv:
  2715                           	opt stack 0
  2716  000060                     ?___ftpack:
  2717                           	opt stack 0
  2718  000060                     ?___lldiv:
  2719                           	opt stack 0
  2720  000060                     setLed@acao:
  2721                           	opt stack 0
  2722  000060                     Lcd_Port@a:
  2723                           	opt stack 0
  2724  000060                     btPress@bt:
  2725                           	opt stack 0
  2726  000060                     putch@c:
  2727                           	opt stack 0
  2728  000060                     blink@line:
  2729                           	opt stack 0
  2730  000060                     tabelaUmidade@_tmp:
  2731                           	opt stack 0
  2732  000060                     faseAtual@_fase:
  2733                           	opt stack 0
  2734  000060                     delay@x:
  2735                           	opt stack 0
  2736  000060                     ___wmul@multiplier:
  2737                           	opt stack 0
  2738  000060                     ___lwdiv@dividend:
  2739                           	opt stack 0
  2740  000060                     memset@p1:
  2741                           	opt stack 0
  2742  000060                     strlen@s:
  2743                           	opt stack 0
  2744  000060                     strchr@ptr:
  2745                           	opt stack 0
  2746  000060                     ___ftpack@arg:
  2747                           	opt stack 0
  2748  000060                     ___ftge@ff1:
  2749                           	opt stack 0
  2750  000060                     ___lldiv@dividend:
  2751                           	opt stack 0
  2752                           
  2753                           ; 4 bytes @ 0x0
  2754  000060                     	ds	1
  2755  000061                     ??_Lcd_Cmd:
  2756  000061                     ?_I2C_Read:
  2757                           	opt stack 0
  2758  000061                     setLed@led:
  2759                           	opt stack 0
  2760  000061                     Lcd_Write_Char@tempp:
  2761                           	opt stack 0
  2762  000061                     _isdigit$2054:
  2763                           	opt stack 0
  2764  000061                     I2C_Write@d:
  2765                           	opt stack 0
  2766  000061                     I2C_Read@a:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x1
  2770  000061                     	ds	1
  2771  000062                     ??_delay:
  2772  000062                     ??_strlen:
  2773  000062                     ??_readADC:
  2774  000062                     Lcd_Cmd@a:
  2775                           	opt stack 0
  2776  000062                     Lcd_Write_Char@y:
  2777                           	opt stack 0
  2778  000062                     blink@start:
  2779                           	opt stack 0
  2780  000062                     climaAtual@c:
  2781                           	opt stack 0
  2782  000062                     isdigit@c:
  2783                           	opt stack 0
  2784  000062                     tabelaUmidade@_clima:
  2785                           	opt stack 0
  2786  000062                     faseAtual@_tempajt:
  2787                           	opt stack 0
  2788  000062                     acaoFlap@tempo_ativado:
  2789                           	opt stack 0
  2790  000062                     ___wmul@multiplicand:
  2791                           	opt stack 0
  2792  000062                     ___lwdiv@divisor:
  2793                           	opt stack 0
  2794  000062                     memset@c:
  2795                           	opt stack 0
  2796  000062                     strchr@chr:
  2797                           	opt stack 0
  2798                           
  2799                           ; 2 bytes @ 0x2
  2800  000062                     	ds	1
  2801  000063                     ??_Lcd_Init:
  2802  000063                     Lcd_Set_Cursor@b:
  2803                           	opt stack 0
  2804  000063                     Lcd_Write_Char@a:
  2805                           	opt stack 0
  2806  000063                     blink@end:
  2807                           	opt stack 0
  2808  000063                     writeEEPROM_ext@data:
  2809                           	opt stack 0
  2810  000063                     ___ftpack@exp:
  2811                           	opt stack 0
  2812  000063                     I2C_Read@temp:
  2813                           	opt stack 0
  2814  000063                     ___ftge@ff2:
  2815                           	opt stack 0
  2816                           
  2817                           ; 3 bytes @ 0x3
  2818  000063                     	ds	1
  2819  000064                     ??_strchr:
  2820  000064                     ??_criaCaracteresCGRAM:
  2821  000064                     Lcd_Set_Cursor@a:
  2822                           	opt stack 0
  2823  000064                     blink@i:
  2824                           	opt stack 0
  2825  000064                     tabelaUmidade@_tipo_sensor:
  2826                           	opt stack 0
  2827  000064                     writeEEPROM_ext@adress:
  2828                           	opt stack 0
  2829  000064                     faseAtual@_fasee:
  2830                           	opt stack 0
  2831  000064                     ___ftpack@sign:
  2832                           	opt stack 0
  2833  000064                     Lcd_Write_String@a:
  2834                           	opt stack 0
  2835  000064                     acaoFlap@tempo_aguardar:
  2836                           	opt stack 0
  2837  000064                     ___wmul@product:
  2838                           	opt stack 0
  2839  000064                     ___lwdiv@quotient:
  2840                           	opt stack 0
  2841  000064                     memset@n:
  2842                           	opt stack 0
  2843  000064                     strlen@cp:
  2844                           	opt stack 0
  2845  000064                     ___lldiv@divisor:
  2846                           	opt stack 0
  2847                           
  2848                           ; 4 bytes @ 0x4
  2849  000064                     	ds	1
  2850  000065                     ??___ftpack:
  2851  000065                     ??_tabelaUmidade:
  2852  000065                     Lcd_Set_Cursor@z:
  2853                           	opt stack 0
  2854  000065                     readEEPROM_ext@adress:
  2855                           	opt stack 0
  2856  000065                     faseAtual@tp:
  2857                           	opt stack 0
  2858  000065                     setRangeValor@_var_ajt:
  2859                           	opt stack 0
  2860                           
  2861                           ; 2 bytes @ 0x5
  2862  000065                     	ds	1
  2863  000066                     ??_acaoFlap:
  2864  000066                     ??___ftge:
  2865  000066                     ?_strncmp:
  2866                           	opt stack 0
  2867  000066                     Lcd_Set_Cursor@y:
  2868                           	opt stack 0
  2869  000066                     Lcd_Write_String@i:
  2870                           	opt stack 0
  2871  000066                     readEEPROM_ext@data:
  2872                           	opt stack 0
  2873  000066                     faseAtual@tmpajt:
  2874                           	opt stack 0
  2875  000066                     ___lwdiv@counter:
  2876                           	opt stack 0
  2877  000066                     getMacAdress@mac:
  2878                           	opt stack 0
  2879  000066                     readADC@digital:
  2880                           	opt stack 0
  2881  000066                     memset@p:
  2882                           	opt stack 0
  2883  000066                     strncmp@s1:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0x6
  2887  000066                     	ds	1
  2888  000067                     ?___lwmod:
  2889                           	opt stack 0
  2890  000067                     Lcd_Set_Cursor@temp:
  2891                           	opt stack 0
  2892  000067                     tabelaUmidade@_umd:
  2893                           	opt stack 0
  2894  000067                     setRangeValor@_min:
  2895                           	opt stack 0
  2896  000067                     acaoFlap@acao:
  2897                           	opt stack 0
  2898  000067                     ___lwmod@dividend:
  2899                           	opt stack 0
  2900  000067                     criaCaracteresCGRAM@character:
  2901                           	opt stack 0
  2902                           
  2903                           ; 56 bytes @ 0x7
  2904  000067                     	ds	1
  2905  000068                     ??_controle:
  2906  000068                     setRangeValor@_max:
  2907                           	opt stack 0
  2908  000068                     readADC@canal:
  2909                           	opt stack 0
  2910  000068                     atualizaLCD@line1:
  2911                           	opt stack 0
  2912  000068                     setUmidade@_umdajt:
  2913                           	opt stack 0
  2914  000068                     getMacAdress@var:
  2915                           	opt stack 0
  2916  000068                     strncmp@s2:
  2917                           	opt stack 0
  2918  000068                     ___lldiv@quotient:
  2919                           	opt stack 0
  2920                           
  2921                           ; 4 bytes @ 0x8
  2922  000068                     	ds	1
  2923  000069                     ?___lwtoft:
  2924                           	opt stack 0
  2925  000069                     setRangeValor@end_eeprom:
  2926                           	opt stack 0
  2927  000069                     ___lwmod@divisor:
  2928                           	opt stack 0
  2929  000069                     ___lwtoft@c:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x9
  2933  000069                     	ds	1
  2934  00006A                     ??_setRangeValor:
  2935  00006A                     ??_getMacAdress:
  2936  00006A                     atualizaLCD@line2:
  2937                           	opt stack 0
  2938  00006A                     setUmidade@_tempajt:
  2939                           	opt stack 0
  2940  00006A                     strncmp@len:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0xA
  2944  00006A                     	ds	1
  2945  00006B                     ___lwmod@counter:
  2946                           	opt stack 0
  2947                           
  2948                           ; 1 bytes @ 0xB
  2949  00006B                     	ds	1
  2950  00006C                     ??_strncmp:
  2951  00006C                     ?__doprnt:
  2952                           	opt stack 0
  2953  00006C                     ?___ftmul:
  2954                           	opt stack 0
  2955  00006C                     getMacAdress@j:
  2956                           	opt stack 0
  2957  00006C                     ___lldiv@counter:
  2958                           	opt stack 0
  2959  00006C                     atualizaLCD@line3:
  2960                           	opt stack 0
  2961  00006C                     setUmidade@_clima:
  2962                           	opt stack 0
  2963  00006C                     __doprnt@pb:
  2964                           	opt stack 0
  2965  00006C                     ___ftmul@f1:
  2966                           	opt stack 0
  2967                           
  2968                           ; 3 bytes @ 0xC
  2969  00006C                     	ds	1
  2970  00006D                     setRangeValor@_acao:
  2971                           	opt stack 0
  2972  00006D                     getMacAdress@men:
  2973                           	opt stack 0
  2974  00006D                     I2C_Master_Init@c:
  2975                           	opt stack 0
  2976                           
  2977                           ; 4 bytes @ 0xD
  2978  00006D                     	ds	1
  2979  00006E                     setUmidade@tp:
  2980                           	opt stack 0
  2981  00006E                     getMacAdress@i:
  2982                           	opt stack 0
  2983  00006E                     atualizaLCD@line4:
  2984                           	opt stack 0
  2985  00006E                     setRangeValor@_aux:
  2986                           	opt stack 0
  2987  00006E                     __doprnt@f:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0xE
  2991  00006E                     	ds	1
  2992  00006F                     ?_strstr:
  2993                           	opt stack 0
  2994  00006F                     _setUmidade$1295:
  2995                           	opt stack 0
  2996  00006F                     strstr@s1:
  2997                           	opt stack 0
  2998  00006F                     ___ftmul@f2:
  2999                           	opt stack 0
  3000                           
  3001                           ; 3 bytes @ 0xF
  3002  00006F                     	ds	1
  3003  000070                     atualizaLCD@i:
  3004                           	opt stack 0
  3005  000070                     __doprnt@ap:
  3006                           	opt stack 0
  3007                           
  3008                           ; 2 bytes @ 0x10
  3009  000070                     	ds	1
  3010  000071                     ??_I2C_Master_Init:
  3011  000071                     _setUmidade$1296:
  3012                           	opt stack 0
  3013  000071                     strstr@s2:
  3014                           	opt stack 0
  3015                           
  3016                           ; 2 bytes @ 0x11
  3017  000071                     	ds	1
  3018  000072                     ??___ftmul:
  3019  000072                     ??__doprnt:
  3020                           
  3021                           ; 1 bytes @ 0x12
  3022  000072                     	ds	1
  3023  000073                     ??_strstr:
  3024  000073                     _setUmidade$1297:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x13
  3028  000073                     	ds	1
  3029  000074                     findBufferSerial@key:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x14
  3033  000074                     	ds	1
  3034  000075                     ___ftmul@exp:
  3035                           	opt stack 0
  3036  000075                     _setUmidade$1298:
  3037                           	opt stack 0
  3038                           
  3039                           ; 2 bytes @ 0x15
  3040  000075                     	ds	1
  3041  000076                     __doprnt@prec:
  3042                           	opt stack 0
  3043  000076                     ___ftmul@f3_as_product:
  3044                           	opt stack 0
  3045                           
  3046                           ; 3 bytes @ 0x16
  3047  000076                     	ds	1
  3048  000077                     setUmidade@_tmpajt:
  3049                           	opt stack 0
  3050  000077                     __doprnt@flag:
  3051                           	opt stack 0
  3052                           
  3053                           ; 1 bytes @ 0x17
  3054  000077                     	ds	1
  3055  000078                     setUmidade@_clim:
  3056                           	opt stack 0
  3057  000078                     __doprnt@val:
  3058                           	opt stack 0
  3059                           
  3060                           ; 2 bytes @ 0x18
  3061  000078                     	ds	1
  3062  000079                     setUmidade@_umd:
  3063                           	opt stack 0
  3064  000079                     ___ftmul@cntr:
  3065                           	opt stack 0
  3066                           
  3067                           ; 1 bytes @ 0x19
  3068  000079                     	ds	1
  3069  00007A                     ___ftmul@sign:
  3070                           	opt stack 0
  3071  00007A                     __doprnt@len:
  3072                           	opt stack 0
  3073                           
  3074                           ; 2 bytes @ 0x1A
  3075  00007A                     	ds	1
  3076  00007B                     ?___ftadd:
  3077                           	opt stack 0
  3078  00007B                     ___ftadd@f1:
  3079                           	opt stack 0
  3080                           
  3081                           ; 3 bytes @ 0x1B
  3082  00007B                     	ds	1
  3083  00007C                     __doprnt@cp:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x1C
  3087  00007C                     	ds	2
  3088  00007E                     __doprnt@width:
  3089                           	opt stack 0
  3090  00007E                     ___ftadd@f2:
  3091                           	opt stack 0
  3092                           
  3093                           ; 3 bytes @ 0x1E
  3094  00007E                     	ds	2
  3095  000080                     __doprnt@c:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x20
  3099  000080                     	ds	1
  3100  000081                     ??___ftadd:
  3101  000081                     ?_printf:
  3102                           	opt stack 0
  3103  000081                     ?_sprintf:
  3104                           	opt stack 0
  3105  000081                     printf@f:
  3106                           	opt stack 0
  3107  000081                     sprintf@wh:
  3108                           	opt stack 0
  3109                           
  3110                           ; 2 bytes @ 0x21
  3111  000081                     	ds	2
  3112  000083                     sprintf@f:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x23
  3116  000083                     	ds	1
  3117  000084                     ___ftadd@sign:
  3118                           	opt stack 0
  3119                           
  3120                           ; 1 bytes @ 0x24
  3121  000084                     	ds	1
  3122  000085                     ___ftadd@exp2:
  3123                           	opt stack 0
  3124                           
  3125                           ; 1 bytes @ 0x25
  3126  000085                     	ds	1
  3127  000086                     ___ftadd@exp1:
  3128                           	opt stack 0
  3129                           
  3130                           ; 1 bytes @ 0x26
  3131  000086                     	ds	1
  3132  000087                     ?___ftdiv:
  3133                           	opt stack 0
  3134  000087                     ___ftdiv@f1:
  3135                           	opt stack 0
  3136                           
  3137                           ; 3 bytes @ 0x27
  3138  000087                     	ds	3
  3139  00008A                     ___ftdiv@f2:
  3140                           	opt stack 0
  3141                           
  3142                           ; 3 bytes @ 0x2A
  3143  00008A                     	ds	1
  3144  00008B                     sprintf@ap:
  3145                           	opt stack 0
  3146                           
  3147                           ; 2 bytes @ 0x2B
  3148  00008B                     	ds	2
  3149  00008D                     ??___ftdiv:
  3150  00008D                     sprintf@pb:
  3151                           	opt stack 0
  3152                           
  3153                           ; 4 bytes @ 0x2D
  3154  00008D                     	ds	3
  3155  000090                     ___ftdiv@cntr:
  3156                           	opt stack 0
  3157                           
  3158                           ; 1 bytes @ 0x30
  3159  000090                     	ds	1
  3160  000091                     getStringJSON@buff:
  3161                           	opt stack 0
  3162  000091                     setKeyStartReceiveSerial@start:
  3163                           	opt stack 0
  3164  000091                     ___ftdiv@f3:
  3165                           	opt stack 0
  3166                           
  3167                           ; 3 bytes @ 0x31
  3168  000091                     	ds	2
  3169  000093                     getStringJSON@key:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x33
  3173  000093                     	ds	1
  3174  000094                     ___ftdiv@exp:
  3175                           	opt stack 0
  3176                           
  3177                           ; 1 bytes @ 0x34
  3178  000094                     	ds	1
  3179  000095                     ___ftdiv@sign:
  3180                           	opt stack 0
  3181  000095                     getStringJSON@ret:
  3182                           	opt stack 0
  3183                           
  3184                           ; 2 bytes @ 0x35
  3185  000095                     	ds	1
  3186  000096                     ?___fttol:
  3187                           	opt stack 0
  3188  000096                     ___fttol@f1:
  3189                           	opt stack 0
  3190                           
  3191                           ; 3 bytes @ 0x36
  3192  000096                     	ds	1
  3193  000097                     ??_getStringJSON:
  3194                           
  3195                           ; 1 bytes @ 0x37
  3196  000097                     	ds	2
  3197  000099                     getStringJSON@res:
  3198                           	opt stack 0
  3199                           
  3200                           ; 25 bytes @ 0x39
  3201  000099                     	ds	1
  3202  00009A                     ??___fttol:
  3203                           
  3204                           ; 1 bytes @ 0x3A
  3205  00009A                     	ds	5
  3206  00009F                     ___fttol@sign1:
  3207                           	opt stack 0
  3208  00009F                     _criaCaracteresCGRAM$1227:
  3209                           	opt stack 0
  3210                           
  3211                           ; 2 bytes @ 0x3F
  3212  00009F                     	ds	1
  3213  0000A0                     ___fttol@lval:
  3214                           	opt stack 0
  3215                           
  3216                           ; 4 bytes @ 0x40
  3217  0000A0                     	ds	1
  3218  0000A1                     criaCaracteresCGRAM@k:
  3219                           	opt stack 0
  3220                           
  3221                           ; 1 bytes @ 0x41
  3222  0000A1                     	ds	1
  3223  0000A2                     criaCaracteresCGRAM@j:
  3224                           	opt stack 0
  3225                           
  3226                           ; 1 bytes @ 0x42
  3227  0000A2                     	ds	1
  3228  0000A3                     criaCaracteresCGRAM@i:
  3229                           	opt stack 0
  3230                           
  3231                           ; 1 bytes @ 0x43
  3232  0000A3                     	ds	1
  3233  0000A4                     ___fttol@exp1:
  3234                           	opt stack 0
  3235                           
  3236                           ; 1 bytes @ 0x44
  3237  0000A4                     	ds	1
  3238  0000A5                     _getSensors$1515:
  3239                           	opt stack 0
  3240                           
  3241                           ; 3 bytes @ 0x45
  3242  0000A5                     	ds	3
  3243  0000A8                     _getSensors$1517:
  3244                           	opt stack 0
  3245                           
  3246                           ; 3 bytes @ 0x48
  3247  0000A8                     	ds	3
  3248  0000AB                     _getSensors$1513:
  3249                           	opt stack 0
  3250                           
  3251                           ; 2 bytes @ 0x4B
  3252  0000AB                     	ds	2
  3253  0000AD                     getSensors@auxx:
  3254                           	opt stack 0
  3255                           
  3256                           ; 3 bytes @ 0x4D
  3257  0000AD                     	ds	3
  3258  0000B0                     _getSensors$2518:
  3259                           	opt stack 0
  3260                           
  3261                           ; 3 bytes @ 0x50
  3262  0000B0                     	ds	2
  3263  0000B2                     getStringJSON@expected:
  3264                           	opt stack 0
  3265                           
  3266                           ; 20 bytes @ 0x52
  3267  0000B2                     	ds	1
  3268  0000B3                     getSensors@i:
  3269                           	opt stack 0
  3270                           
  3271                           ; 1 bytes @ 0x53
  3272  0000B3                     	ds	1
  3273  0000B4                     getSensors@aux:
  3274                           	opt stack 0
  3275                           
  3276                           ; 3 bytes @ 0x54
  3277  0000B4                     	ds	9
  3278  0000BD                     printf@ap:
  3279                           	opt stack 0
  3280                           
  3281                           ; 2 bytes @ 0x5D
  3282  0000BD                     	ds	2
  3283  0000BF                     printf@pb:
  3284                           	opt stack 0
  3285                           
  3286                           ; 4 bytes @ 0x5F
  3287  0000BF                     	ds	4
  3288  0000C3                     ??_enviaDadosWifi:
  3289                           
  3290                           ; 1 bytes @ 0x63
  3291  0000C3                     	ds	2
  3292  0000C5                     enviaDadosWifi@AUX:
  3293                           	opt stack 0
  3294                           
  3295                           ; 15 bytes @ 0x65
  3296  0000C5                     	ds	1
  3297  0000C6                     getStringJSON@attr:
  3298                           	opt stack 0
  3299                           
  3300                           ; 20 bytes @ 0x66
  3301  0000C6                     	ds	14
  3302  0000D4                     _enviaDadosWifi$2517:
  3303                           	opt stack 0
  3304                           
  3305                           ; 2 bytes @ 0x74
  3306  0000D4                     	ds	2
  3307  0000D6                     enviaDadosWifi@i:
  3308                           	opt stack 0
  3309                           
  3310                           ; 1 bytes @ 0x76
  3311  0000D6                     	ds	4
  3312  0000DA                     getStringJSON@isValid:
  3313                           	opt stack 0
  3314                           
  3315                           ; 1 bytes @ 0x7A
  3316  0000DA                     	ds	1
  3317  0000DB                     getStringJSON@j:
  3318                           	opt stack 0
  3319                           
  3320                           ; 2 bytes @ 0x7B
  3321  0000DB                     	ds	2
  3322  0000DD                     getStringJSON@find:
  3323                           	opt stack 0
  3324                           
  3325                           ; 1 bytes @ 0x7D
  3326  0000DD                     	ds	1
  3327  0000DE                     getStringJSON@i:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0x7E
  3331  0000DE                     	ds	2
  3332  0000E0                     alterarDadosConexaoConfigWifi@i:
  3333                           	opt stack 0
  3334                           
  3335                           ; 1 bytes @ 0x80
  3336  0000E0                     	ds	1
  3337  0000E1                     ??_main:
  3338                           
  3339                           ; 1 bytes @ 0x81
  3340  0000E1                     	ds	1
  3341  0000E2                     _main$2519:
  3342                           	opt stack 0
  3343                           
  3344                           ; 2 bytes @ 0x82
  3345  0000E2                     	ds	2
  3346  0000E4                     _main$1625:
  3347                           	opt stack 0
  3348                           
  3349                           ; 2 bytes @ 0x84
  3350  0000E4                     	ds	2
  3351  0000E6                     _main$1626:
  3352                           	opt stack 0
  3353                           
  3354                           ; 2 bytes @ 0x86
  3355  0000E6                     	ds	2
  3356  0000E8                     _main$1629:
  3357                           	opt stack 0
  3358                           
  3359                           ; 2 bytes @ 0x88
  3360  0000E8                     	ds	2
  3361  0000EA                     _main$1634:
  3362                           	opt stack 0
  3363                           
  3364                           ; 2 bytes @ 0x8A
  3365  0000EA                     	ds	2
  3366  0000EC                     _main$1641:
  3367                           	opt stack 0
  3368                           
  3369                           ; 2 bytes @ 0x8C
  3370  0000EC                     	ds	2
  3371  0000EE                     _main$1646:
  3372                           	opt stack 0
  3373                           
  3374                           ; 2 bytes @ 0x8E
  3375  0000EE                     	ds	2
  3376  0000F0                     _main$1651:
  3377                           	opt stack 0
  3378                           
  3379                           ; 2 bytes @ 0x90
  3380  0000F0                     	ds	2
  3381  0000F2                     main@i:
  3382                           	opt stack 0
  3383                           
  3384                           ; 1 bytes @ 0x92
  3385  0000F2                     	ds	1
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           postdec1	equ	0xFE5
  3393                           fsr1l	equ	0xFE1
  3394                           
  3395                           	psect	cstackCOMRAM
  3396  000001                     __pcstackCOMRAM:
  3397                           	opt stack 0
  3398  000001                     ??i2_I2C_Wait:
  3399  000001                     ?i2_strlen:
  3400                           	opt stack 0
  3401  000001                     i2delay@x:
  3402                           	opt stack 0
  3403  000001                     i2strlen@s:
  3404                           	opt stack 0
  3405                           
  3406                           ; 2 bytes @ 0x0
  3407  000001                     	ds	1
  3408  000002                     ?i2_I2C_Read:
  3409                           	opt stack 0
  3410  000002                     i2I2C_Write@d:
  3411                           	opt stack 0
  3412  000002                     i2I2C_Read@a:
  3413                           	opt stack 0
  3414                           
  3415                           ; 2 bytes @ 0x1
  3416  000002                     	ds	1
  3417  000003                     ??i2_delay:
  3418  000003                     ??i2_strlen:
  3419                           
  3420                           ; 1 bytes @ 0x2
  3421  000003                     	ds	1
  3422  000004                     i2writeEEPROM_ext@data:
  3423                           	opt stack 0
  3424  000004                     i2I2C_Read@temp:
  3425                           	opt stack 0
  3426                           
  3427                           ; 2 bytes @ 0x3
  3428  000004                     	ds	1
  3429  000005                     i2writeEEPROM_ext@adress:
  3430                           	opt stack 0
  3431  000005                     i2strlen@cp:
  3432                           	opt stack 0
  3433                           
  3434                           ; 2 bytes @ 0x4
  3435  000005                     	ds	1
  3436  000006                     i2setRangeValor@_var_ajt:
  3437                           	opt stack 0
  3438                           
  3439                           ; 2 bytes @ 0x5
  3440  000006                     	ds	1
  3441  000007                     ??_receiveByteSerial:
  3442                           
  3443                           ; 1 bytes @ 0x6
  3444  000007                     	ds	1
  3445  000008                     i2setRangeValor@_min:
  3446                           	opt stack 0
  3447                           
  3448                           ; 1 bytes @ 0x7
  3449  000008                     	ds	1
  3450  000009                     receiveByteSerial@byte:
  3451                           	opt stack 0
  3452  000009                     i2setRangeValor@_max:
  3453                           	opt stack 0
  3454                           
  3455                           ; 1 bytes @ 0x8
  3456  000009                     	ds	1
  3457  00000A                     i2setRangeValor@end_eeprom:
  3458                           	opt stack 0
  3459                           
  3460                           ; 1 bytes @ 0x9
  3461  00000A                     	ds	1
  3462  00000B                     ??i2_setRangeValor:
  3463                           
  3464                           ; 1 bytes @ 0xA
  3465  00000B                     	ds	3
  3466  00000E                     i2setRangeValor@_acao:
  3467                           	opt stack 0
  3468                           
  3469                           ; 1 bytes @ 0xD
  3470  00000E                     	ds	1
  3471  00000F                     i2setRangeValor@_aux:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0xE
  3475  00000F                     	ds	2
  3476  000011                     ??_timer:
  3477                           
  3478                           ; 1 bytes @ 0x10
  3479  000011                     	ds	7
  3480  000018                     _timer$1409:
  3481                           	opt stack 0
  3482                           
  3483                           ; 2 bytes @ 0x17
  3484  000018                     	ds	2
  3485  00001A                     _timer$1410:
  3486                           	opt stack 0
  3487                           
  3488                           ; 2 bytes @ 0x19
  3489  00001A                     	ds	2
  3490  00001C                     _timer$1411:
  3491                           	opt stack 0
  3492                           
  3493                           ; 2 bytes @ 0x1B
  3494  00001C                     	ds	2
  3495  00001E                     ??_TIMER0:
  3496                           
  3497                           ; 1 bytes @ 0x1D
  3498  00001E                     	ds	18
  3499  000030                     TIMER0@c:
  3500                           	opt stack 0
  3501                           
  3502                           ; 1 bytes @ 0x2F
  3503  000030                     	ds	1
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           postdec1	equ	0xFE5
  3511                           fsr1l	equ	0xFE1
  3512                           
  3513 ;;
  3514 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3515 ;;
  3516 ;; *************** function _main *****************
  3517 ;; Defined at:
  3518 ;;		line 33 in file "src/main.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  i               1  146[BANK0 ] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3534 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3535 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3536 ;;Total ram usage:       18 bytes
  3537 ;; Hardware stack levels required when called:   11
  3538 ;; This function calls:
  3539 ;;		_I2C_Master_Init
  3540 ;;		_Lcd_Clear
  3541 ;;		_Lcd_Init
  3542 ;;		_UART_Init
  3543 ;;		___wmul
  3544 ;;		_alterarDadosConexaoConfigWifi
  3545 ;;		_atualizaLCD
  3546 ;;		_blink
  3547 ;;		_btPress
  3548 ;;		_climaAtual
  3549 ;;		_controle
  3550 ;;		_criaCaracteresCGRAM
  3551 ;;		_delay
  3552 ;;		_enviaDadosWifi
  3553 ;;		_faseAtual
  3554 ;;		_getSensors
  3555 ;;		_printf
  3556 ;;		_readEEPROM_ext
  3557 ;;		_setRangeValor
  3558 ;;		_setUmidade
  3559 ;;		_sprintf
  3560 ;;		_updateLeds
  3561 ;;		_writeEEPROM_ext
  3562 ;; This function is called by:
  3563 ;;		Startup code after reset
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text0
  3568  000012                     __ptext0:
  3569                           	opt stack 0
  3570  000012                     _main:
  3571                           	opt stack 20
  3572                           
  3573                           ;main.c: 36: TRISAbits.RA5 = 0;
  3574                           
  3575                           ;incstack = 0
  3576  000012  9A92               	bcf	3986,5,c	;volatile
  3577                           
  3578                           ;main.c: 37: TRISCbits.RC2 = 0;
  3579  000014  9494               	bcf	3988,2,c	;volatile
  3580                           
  3581                           ;main.c: 38: TRISEbits.RE0 = 0;
  3582  000016  9096               	bcf	3990,0,c	;volatile
  3583                           
  3584                           ;main.c: 39: TRISDbits.RD0 = 0;
  3585  000018  9095               	bcf	3989,0,c	;volatile
  3586                           
  3587                           ;main.c: 40: TRISCbits.RC1 = 0;
  3588  00001A  9294               	bcf	3988,1,c	;volatile
  3589                           
  3590                           ;main.c: 41: TRISDbits.RD1 = 0;
  3591  00001C  9295               	bcf	3989,1,c	;volatile
  3592                           
  3593                           ;main.c: 42: TRISCbits.RC0 = 1;
  3594  00001E  8094               	bsf	3988,0,c	;volatile
  3595                           
  3596                           ;main.c: 44: PORTAbits.RA5 = 0;
  3597  000020  9A80               	bcf	3968,5,c	;volatile
  3598                           
  3599                           ;main.c: 45: PORTCbits.RC2 = 0;
  3600  000022  9482               	bcf	3970,2,c	;volatile
  3601                           
  3602                           ;main.c: 46: PORTEbits.RE0 = 0;
  3603  000024  9084               	bcf	3972,0,c	;volatile
  3604                           
  3605                           ;main.c: 47: PORTDbits.RD0 = 0;
  3606  000026  9083               	bcf	3971,0,c	;volatile
  3607                           
  3608                           ;main.c: 48: PORTCbits.RC1 = 0;
  3609  000028  9282               	bcf	3970,1,c	;volatile
  3610                           
  3611                           ;main.c: 49: PORTDbits.RD1 = 0;
  3612  00002A  9283               	bcf	3971,1,c	;volatile
  3613                           
  3614                           ;main.c: 53: TRISAbits.RA4 = 0;
  3615  00002C  9892               	bcf	3986,4,c	;volatile
  3616                           
  3617                           ;main.c: 54: LATAbits.LATA4 = 0;
  3618  00002E  9889               	bcf	3977,4,c	;volatile
  3619                           
  3620                           ;main.c: 58: TRISBbits.RB5 = 0;
  3621  000030  9A93               	bcf	3987,5,c	;volatile
  3622                           
  3623                           ;main.c: 59: LATBbits.LATB5 = 0;
  3624  000032  9A8A               	bcf	3978,5,c	;volatile
  3625                           
  3626                           ;main.c: 63: TRISBbits.RB2 = 1;
  3627  000034  8493               	bsf	3987,2,c	;volatile
  3628                           
  3629                           ;main.c: 64: INTCON2bits.INTEDG2 = 0;
  3630  000036  98F1               	bcf	intcon2,4,c	;volatile
  3631                           
  3632                           ;main.c: 65: INTCON2bits.RBIP = 0;
  3633  000038  90F1               	bcf	intcon2,0,c	;volatile
  3634                           
  3635                           ;main.c: 66: INTCON3bits.INT2IE = 1;
  3636  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3637                           
  3638                           ;main.c: 69: TRISAbits.RA0 = 1;
  3639  00003C  8092               	bsf	3986,0,c	;volatile
  3640                           
  3641                           ;main.c: 70: PORTAbits.AN0 = 0;
  3642  00003E  9080               	bcf	3968,0,c	;volatile
  3643                           
  3644                           ;main.c: 71: TRISAbits.RA1 = 1;
  3645  000040  8292               	bsf	3986,1,c	;volatile
  3646                           
  3647                           ;main.c: 72: PORTAbits.AN1 = 0;
  3648  000042  9280               	bcf	3968,1,c	;volatile
  3649                           
  3650                           ;main.c: 73: TRISAbits.RA2 = 1;
  3651  000044  8492               	bsf	3986,2,c	;volatile
  3652                           
  3653                           ;main.c: 74: PORTAbits.AN2 = 0;
  3654  000046  9480               	bcf	3968,2,c	;volatile
  3655                           
  3656                           ;main.c: 79: T0CON = 0x81;
  3657  000048  0E81               	movlw	129
  3658  00004A  6ED5               	movwf	4053,c	;volatile
  3659                           
  3660                           ;main.c: 80: INTCON = 0xE4;
  3661  00004C  0EE4               	movlw	228
  3662  00004E  6EF2               	movwf	intcon,c	;volatile
  3663                           
  3664                           ;main.c: 83: ADCON0 = 0x01;
  3665  000050  0E01               	movlw	1
  3666  000052  6EC2               	movwf	4034,c	;volatile
  3667                           
  3668                           ;main.c: 84: ADCON1 = 0x0C;
  3669  000054  0E0C               	movlw	12
  3670  000056  6EC1               	movwf	4033,c	;volatile
  3671                           
  3672                           ;main.c: 85: ADCON2 = 0xB5;
  3673  000058  0EB5               	movlw	181
  3674  00005A  6EC0               	movwf	4032,c	;volatile
  3675                           
  3676                           ;main.c: 88: UART_Init();
  3677  00005C  EC6A  F02D         	call	_UART_Init	;wreg free
  3678                           
  3679                           ;main.c: 89: printf("AT+RST\r\n");
  3680  000060  0E40               	movlw	low STR_77
  3681  000062  0100               	movlb	0	; () banked
  3682  000064  6F81               	movwf	printf@f& (0+255),b
  3683  000066  0E7F               	movlw	high STR_77
  3684  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3685  00006A  ECD3  F02B         	call	_printf	;wreg free
  3686                           
  3687                           ;main.c: 90: delay(200);
  3688  00006E  0E00               	movlw	0
  3689  000070  0100               	movlb	0	; () banked
  3690  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3691  000074  0EC8               	movlw	200
  3692  000076  6F60               	movwf	delay@x& (0+255),b
  3693  000078  ECB3  F02C         	call	_delay	;wreg free
  3694                           
  3695                           ;main.c: 92: Lcd_Init();
  3696  00007C  EC22  F029         	call	_Lcd_Init	;wreg free
  3697                           
  3698                           ;main.c: 93: Lcd_Clear();
  3699  000080  EC92  F02D         	call	_Lcd_Clear	;wreg free
  3700                           
  3701                           ;main.c: 94: criaCaracteresCGRAM();
  3702  000084  EC05  F027         	call	_criaCaracteresCGRAM	;wreg free
  3703                           
  3704                           ;main.c: 95: I2C_Master_Init(1000000);
  3705  000088  0E40               	movlw	64
  3706  00008A  0100               	movlb	0	; () banked
  3707  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3708  00008E  0E42               	movlw	66
  3709  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3710  000092  0E0F               	movlw	15
  3711  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3712  000096  0E00               	movlw	0
  3713  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3714  00009A  ECDE  F029         	call	_I2C_Master_Init	;wreg free
  3715                           
  3716                           ;main.c: 96: delay(150);
  3717  00009E  0E00               	movlw	0
  3718  0000A0  0100               	movlb	0	; () banked
  3719  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3720  0000A4  0E96               	movlw	150
  3721  0000A6  6F60               	movwf	delay@x& (0+255),b
  3722  0000A8  ECB3  F02C         	call	_delay	;wreg free
  3723                           
  3724                           ;main.c: 99: sprintf(line1, " TECHNOW Tecnologia");
  3725  0000AC  0EA5               	movlw	low _line1
  3726  0000AE  0100               	movlb	0	; () banked
  3727  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3728  0000B2  0E01               	movlw	high _line1
  3729  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3730  0000B6  0EB9               	movlw	low STR_78
  3731  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3732  0000BA  0E7C               	movlw	high STR_78
  3733  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3734  0000BE  EC4F  F02B         	call	_sprintf	;wreg free
  3735                           
  3736                           ;main.c: 100: sprintf(line3, "Versao Soft.:");
  3737  0000C2  0E7B               	movlw	low _line3
  3738  0000C4  0100               	movlb	0	; () banked
  3739  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3740  0000C8  0E01               	movlw	high _line3
  3741  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3742  0000CC  0E90               	movlw	low STR_79
  3743  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  3744  0000D0  0E7E               	movlw	high STR_79
  3745  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3746  0000D4  EC4F  F02B         	call	_sprintf	;wreg free
  3747                           
  3748                           ;main.c: 101: sprintf(&line4[9], "%s", "Jul 14 2020");
  3749  0000D8  0E6F               	movlw	low (_line4+9)
  3750  0000DA  0100               	movlb	0	; () banked
  3751  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  3752  0000DE  0E01               	movlw	high (_line4+9)
  3753  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3754  0000E2  0E1F               	movlw	low (STR_91+7)
  3755  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  3756  0000E6  0E7F               	movlw	high (STR_91+7)
  3757  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3758  0000EA  0E9E               	movlw	low STR_67
  3759  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  3760  0000EE  0E7E               	movlw	high STR_67
  3761  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  3762  0000F2  EC4F  F02B         	call	_sprintf	;wreg free
  3763                           
  3764                           ;main.c: 102: atualizaLCD(line1, line2, line3, line4);
  3765  0000F6  0EA5               	movlw	low _line1
  3766  0000F8  0100               	movlb	0	; () banked
  3767  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  3768  0000FC  0E01               	movlw	high _line1
  3769  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  3770  000100  0E90               	movlw	low _line2
  3771  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  3772  000104  0E01               	movlw	high _line2
  3773  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  3774  000108  0E7B               	movlw	low _line3
  3775  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  3776  00010C  0E01               	movlw	high _line3
  3777  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  3778  000110  0E66               	movlw	low _line4
  3779  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  3780  000114  0E01               	movlw	high _line4
  3781  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  3782  000118  EC32  F025         	call	_atualizaLCD	;wreg free
  3783                           
  3784                           ;main.c: 103: delay(300);
  3785  00011C  0E01               	movlw	1
  3786  00011E  0100               	movlb	0	; () banked
  3787  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  3788  000122  0E2C               	movlw	44
  3789  000124  6F60               	movwf	delay@x& (0+255),b
  3790  000126  ECB3  F02C         	call	_delay	;wreg free
  3791                           
  3792                           ;main.c: 104: LATBbits.LATB5 = 1;
  3793  00012A  8A8A               	bsf	3978,5,c	;volatile
  3794                           
  3795                           ;main.c: 105: delay(2450);
  3796  00012C  0E09               	movlw	9
  3797  00012E  0100               	movlb	0	; () banked
  3798  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  3799  000132  0E92               	movlw	146
  3800  000134  6F60               	movwf	delay@x& (0+255),b
  3801  000136  ECB3  F02C         	call	_delay	;wreg free
  3802                           
  3803                           ;main.c: 107: tempajt = readEEPROM_ext(1);
  3804  00013A  0E01               	movlw	1
  3805  00013C  ECD9  F02A         	call	_readEEPROM_ext
  3806  000140  0100               	movlb	0	; () banked
  3807  000142  6FF4               	movwf	_tempajt& (0+255),b
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;main.c: 108: umidajt = readEEPROM_ext(2);
  3811  000144  0E02               	movlw	2
  3812  000146  ECD9  F02A         	call	_readEEPROM_ext
  3813  00014A  0100               	movlb	0	; () banked
  3814  00014C  6FF3               	movwf	_umidajt& (0+255),b
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;main.c: 109: trava_fase = readEEPROM_ext(3);
  3818  00014E  0E03               	movlw	3
  3819  000150  ECD9  F02A         	call	_readEEPROM_ext
  3820  000154  0100               	movlb	0	; () banked
  3821  000156  6FFB               	movwf	_trava_fase& (0+255),b
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;main.c: 110: fase = readEEPROM_ext(4);
  3825  000158  0E04               	movlw	4
  3826  00015A  ECD9  F02A         	call	_readEEPROM_ext
  3827  00015E  0100               	movlb	0	; () banked
  3828  000160  6FF6               	movwf	_fase& (0+255),b
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;main.c: 111: clima = readEEPROM_ext(5);
  3832  000162  0E05               	movlw	5
  3833  000164  ECD9  F02A         	call	_readEEPROM_ext
  3834  000168  0100               	movlb	0	; () banked
  3835  00016A  6FF5               	movwf	_clima& (0+255),b
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;main.c: 112: tipo_modo_trabalho = readEEPROM_ext(6);
  3839  00016C  0E06               	movlw	6
  3840  00016E  ECD9  F02A         	call	_readEEPROM_ext
  3841  000172  6E59               	movwf	_tipo_modo_trabalho,c
  3842                           
  3843                           ;main.c: 113: tipo_sensor_umidade = readEEPROM_ext(7);
  3844  000174  0E07               	movlw	7
  3845  000176  ECD9  F02A         	call	_readEEPROM_ext
  3846  00017A  0100               	movlb	0	; () banked
  3847  00017C  6FFA               	movwf	_tipo_sensor_umidade& (0+255),b
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;main.c: 114: t_fim_fase1 = readEEPROM_ext(8);
  3851  00017E  0E08               	movlw	8
  3852  000180  ECD9  F02A         	call	_readEEPROM_ext
  3853  000184  6E58               	movwf	_t_fim_fase1,c
  3854                           
  3855                           ;main.c: 115: t_fim_fase2 = readEEPROM_ext(9);
  3856  000186  0E09               	movlw	9
  3857  000188  ECD9  F02A         	call	_readEEPROM_ext
  3858  00018C  6E57               	movwf	_t_fim_fase2,c
  3859                           
  3860                           ;main.c: 116: t_fim_fase3 = readEEPROM_ext(10);
  3861  00018E  0E0A               	movlw	10
  3862  000190  ECD9  F02A         	call	_readEEPROM_ext
  3863  000194  6E56               	movwf	_t_fim_fase3,c
  3864                           
  3865                           ;main.c: 117: h_venotinha = readEEPROM_ext(11);
  3866  000196  0E0B               	movlw	11
  3867  000198  ECD9  F02A         	call	_readEEPROM_ext
  3868  00019C  6E53               	movwf	_h_venotinha,c
  3869                           
  3870                           ;main.c: 118: h_abafador = readEEPROM_ext(12);
  3871  00019E  0E0C               	movlw	12
  3872  0001A0  ECD9  F02A         	call	_readEEPROM_ext
  3873  0001A4  6E52               	movwf	_h_abafador,c
  3874                           
  3875                           ;main.c: 119: h_flap = readEEPROM_ext(13);
  3876  0001A6  0E0D               	movlw	13
  3877  0001A8  ECD9  F02A         	call	_readEEPROM_ext
  3878  0001AC  6E51               	movwf	_h_flap,c
  3879                           
  3880                           ;main.c: 120: buzzer = readEEPROM_ext(14);
  3881  0001AE  0E0E               	movlw	14
  3882  0001B0  ECD9  F02A         	call	_readEEPROM_ext
  3883  0001B4  0100               	movlb	0	; () banked
  3884  0001B6  6FFC               	movwf	_buzzer& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;main.c: 121: fornalha = readEEPROM_ext(15);
  3888  0001B8  0E0F               	movlw	15
  3889  0001BA  ECD9  F02A         	call	_readEEPROM_ext
  3890  0001BE  6E5A               	movwf	_fornalha,c
  3891                           
  3892                           ;main.c: 122: h_modo_seguranca = readEEPROM_ext(16);
  3893  0001C0  0E10               	movlw	16
  3894  0001C2  ECD9  F02A         	call	_readEEPROM_ext
  3895  0001C6  0100               	movlb	0	; () banked
  3896  0001C8  6FF7               	movwf	_h_modo_seguranca& (0+255),b
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;main.c: 123: h_buzzer = readEEPROM_ext(17);
  3900  0001CA  0E11               	movlw	17
  3901  0001CC  ECD9  F02A         	call	_readEEPROM_ext
  3902  0001D0  6E50               	movwf	_h_buzzer,c
  3903                           
  3904                           ;main.c: 124: t_flap_ligado = readEEPROM_ext(18);
  3905  0001D2  0E12               	movlw	18
  3906  0001D4  ECD9  F02A         	call	_readEEPROM_ext
  3907  0001D8  6E55               	movwf	_t_flap_ligado,c
  3908                           
  3909                           ;main.c: 125: t_flap_intervalo = readEEPROM_ext(20);
  3910  0001DA  0E14               	movlw	20
  3911  0001DC  ECD9  F02A         	call	_readEEPROM_ext
  3912  0001E0  6E54               	movwf	_t_flap_intervalo,c
  3913                           
  3914                           ;main.c: 126: t_buzzer_religar = readEEPROM_ext(21);
  3915  0001E2  0E15               	movlw	21
  3916  0001E4  ECD9  F02A         	call	_readEEPROM_ext
  3917  0001E8  0100               	movlb	0	; () banked
  3918  0001EA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;main.c: 127: t_temp_automatica = readEEPROM_ext(22);
  3922  0001EC  0E16               	movlw	22
  3923  0001EE  ECD9  F02A         	call	_readEEPROM_ext
  3924  0001F2  0100               	movlb	0	; () banked
  3925  0001F4  6FF9               	movwf	_t_temp_automatica& (0+255),b
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;main.c: 128: wifi_habilita_alteracao = readEEPROM_ext(23);
  3929  0001F6  0E17               	movlw	23
  3930  0001F8  ECD9  F02A         	call	_readEEPROM_ext
  3931  0001FC  6E4E               	movwf	_wifi_habilita_alteracao,c
  3932                           
  3933                           ;main.c: 129: wifi_SENHA = readEEPROM_ext(25);
  3934  0001FE  0E19               	movlw	25
  3935  000200  ECD9  F02A         	call	_readEEPROM_ext
  3936  000204  0100               	movlb	0	; () banked
  3937  000206  6FE1               	movwf	??_main& (0+255),b
  3938  000208  51E1               	movf	??_main& (0+255),w,b
  3939  00020A  6E4B               	movwf	_wifi_SENHA,c
  3940  00020C  6A4C               	clrf	_wifi_SENHA+1,c
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;main.c: 130: h_subir_temp_automatica = readEEPROM_ext(27);
  3944  00020E  0E1B               	movlw	27
  3945  000210  ECD9  F02A         	call	_readEEPROM_ext
  3946  000214  6E4F               	movwf	_h_subir_temp_automatica,c
  3947                           
  3948                           ;main.c: 131: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  3949  000216  0E1C               	movlw	28
  3950  000218  ECD9  F02A         	call	_readEEPROM_ext
  3951  00021C  0100               	movlb	0	; () banked
  3952  00021E  6FF8               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;main.c: 133: char i = 0;
  3956  000220  0E00               	movlw	0
  3957  000222  6FF2               	movwf	main@i& (0+255),b
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 134: for (i = 0; i < 15; i++) {
  3961  000224  0E00               	movlw	0
  3962  000226  6FF2               	movwf	main@i& (0+255),b
  3963  000228                     l9347:
  3964                           
  3965                           ; BSR set to: 0
  3966  000228  0E0E               	movlw	14
  3967  00022A  65F2               	cpfsgt	main@i& (0+255),b
  3968  00022C  D001               	goto	l1266
  3969  00022E  D010               	goto	u14140
  3970  000230                     l1266:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;main.c: 135: ssid[i] = (char) readEEPROM_ext(40 + i);
  3974                           
  3975                           ; BSR set to: 0
  3976  000230  51F2               	movf	main@i& (0+255),w,b
  3977  000232  0D01               	mullw	1
  3978  000234  0EC9               	movlw	low _ssid
  3979  000236  24F3               	addwf	prodl,w,c
  3980  000238  6ED9               	movwf	fsr2l,c
  3981  00023A  0E01               	movlw	high _ssid
  3982  00023C  20F4               	addwfc	prodh,w,c
  3983  00023E  6EDA               	movwf	fsr2h,c
  3984  000240  51F2               	movf	main@i& (0+255),w,b
  3985  000242  0F28               	addlw	40
  3986  000244  ECD9  F02A         	call	_readEEPROM_ext
  3987  000248  6EDF               	movwf	indf2,c
  3988  00024A  0100               	movlb	0	; () banked
  3989  00024C  2BF2               	incf	main@i& (0+255),f,b
  3990  00024E  D7EC               	goto	l9347
  3991  000250                     u14140:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;main.c: 136: }
  3995                           ;main.c: 137: for (i = 0; i < 15; i++) {
  3996                           
  3997                           ; BSR set to: 0
  3998  000250  0E00               	movlw	0
  3999  000252  6FF2               	movwf	main@i& (0+255),b
  4000  000254                     l9359:
  4001                           
  4002                           ; BSR set to: 0
  4003  000254  0E0E               	movlw	14
  4004  000256  65F2               	cpfsgt	main@i& (0+255),b
  4005  000258  D001               	goto	l1268
  4006  00025A  D010               	goto	u14160
  4007  00025C                     l1268:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;main.c: 138: senha[i] = (char) readEEPROM_ext(60 + i);
  4011                           
  4012                           ; BSR set to: 0
  4013  00025C  51F2               	movf	main@i& (0+255),w,b
  4014  00025E  0D01               	mullw	1
  4015  000260  0EBA               	movlw	low _senha
  4016  000262  24F3               	addwf	prodl,w,c
  4017  000264  6ED9               	movwf	fsr2l,c
  4018  000266  0E01               	movlw	high _senha
  4019  000268  20F4               	addwfc	prodh,w,c
  4020  00026A  6EDA               	movwf	fsr2h,c
  4021  00026C  51F2               	movf	main@i& (0+255),w,b
  4022  00026E  0F3C               	addlw	60
  4023  000270  ECD9  F02A         	call	_readEEPROM_ext
  4024  000274  6EDF               	movwf	indf2,c
  4025  000276  0100               	movlb	0	; () banked
  4026  000278  2BF2               	incf	main@i& (0+255),f,b
  4027  00027A  D7EC               	goto	l9359
  4028  00027C                     u14160:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;main.c: 139: }
  4032                           ;main.c: 141: i = readEEPROM_ext(30);
  4033                           
  4034                           ; BSR set to: 0
  4035  00027C  0E1E               	movlw	30
  4036  00027E  ECD9  F02A         	call	_readEEPROM_ext
  4037  000282  0100               	movlb	0	; () banked
  4038  000284  6FF2               	movwf	main@i& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 142: if (i != 187) {
  4042  000286  0EBB               	movlw	187
  4043  000288  19F2               	xorwf	main@i& (0+255),w,b
  4044  00028A  B4D8               	btfsc	status,2,c
  4045  00028C  D02C               	goto	l1273
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 143: writeEEPROM_ext(30, 187);
  4049  00028E  0EBB               	movlw	187
  4050  000290  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4051  000292  0E1E               	movlw	30
  4052  000294  EC93  F02B         	call	_writeEEPROM_ext
  4053  000298                     l1271:
  4054  000298  0004               	clrwdt		;# 
  4055                           
  4056                           ;main.c: 146: sprintf(line4, "ERRO EEPROM");
  4057  00029A  0E66               	movlw	low _line4
  4058  00029C  0100               	movlb	0	; () banked
  4059  00029E  6F81               	movwf	sprintf@wh& (0+255),b
  4060  0002A0  0E01               	movlw	high _line4
  4061  0002A2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4062  0002A4  0EAA               	movlw	low STR_82
  4063  0002A6  6F83               	movwf	sprintf@f& (0+255),b
  4064  0002A8  0E7E               	movlw	high STR_82
  4065  0002AA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4066  0002AC  EC4F  F02B         	call	_sprintf	;wreg free
  4067                           
  4068                           ;main.c: 147: atualizaLCD(line1, line2, line3, line4);
  4069  0002B0  0EA5               	movlw	low _line1
  4070  0002B2  0100               	movlb	0	; () banked
  4071  0002B4  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4072  0002B6  0E01               	movlw	high _line1
  4073  0002B8  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4074  0002BA  0E90               	movlw	low _line2
  4075  0002BC  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4076  0002BE  0E01               	movlw	high _line2
  4077  0002C0  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4078  0002C2  0E7B               	movlw	low _line3
  4079  0002C4  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4080  0002C6  0E01               	movlw	high _line3
  4081  0002C8  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4082  0002CA  0E66               	movlw	low _line4
  4083  0002CC  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4084  0002CE  0E01               	movlw	high _line4
  4085  0002D0  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4086  0002D2  EC32  F025         	call	_atualizaLCD	;wreg free
  4087                           
  4088                           ;main.c: 148: delay(3000);
  4089  0002D6  0E0B               	movlw	11
  4090  0002D8  0100               	movlb	0	; () banked
  4091  0002DA  6F61               	movwf	(delay@x+1)& (0+255),b
  4092  0002DC  0EB8               	movlw	184
  4093  0002DE  6F60               	movwf	delay@x& (0+255),b
  4094  0002E0  ECB3  F02C         	call	_delay	;wreg free
  4095  0002E4  D7D9               	goto	l1271
  4096  0002E6                     l1273:
  4097                           
  4098                           ;main.c: 159: if (RCSTAbits.OERR) {
  4099                           
  4100                           ;main.c: 149: }
  4101                           ;main.c: 150: }
  4102                           ;main.c: 152: while (1) {
  4103  0002E6  A2AB               	btfss	4011,1,c	;volatile
  4104  0002E8  D002               	goto	l1275
  4105                           
  4106                           ;main.c: 160: RCSTAbits.CREN = 0;
  4107  0002EA  98AB               	bcf	4011,4,c	;volatile
  4108                           
  4109                           ;main.c: 161: RCSTAbits.CREN = 1;
  4110  0002EC  88AB               	bsf	4011,4,c	;volatile
  4111  0002EE                     l1275:
  4112  0002EE  0004               	clrwdt		;# 
  4113                           
  4114                           ;main.c: 165: getSensors();
  4115  0002F0  ECB7  F015         	call	_getSensors	;wreg free
  4116                           
  4117                           ;main.c: 166: controle();
  4118  0002F4  EC98  F01C         	call	_controle	;wreg free
  4119                           
  4120                           ;main.c: 169: if (tipo_modo_trabalho == 1) {
  4121  0002F8  0459               	decf	_tipo_modo_trabalho,w,c
  4122  0002FA  A4D8               	btfss	status,2,c
  4123  0002FC  D010               	goto	l1276
  4124                           
  4125                           ;main.c: 170: setUmidade('A', &umidajt, &tempajt, &clima);
  4126  0002FE  0EF3               	movlw	low _umidajt
  4127  000300  0100               	movlb	0	; () banked
  4128  000302  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4129  000304  0E00               	movlw	high _umidajt
  4130  000306  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4131  000308  0EF4               	movlw	low _tempajt
  4132  00030A  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4133  00030C  0E00               	movlw	high _tempajt
  4134  00030E  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4135  000310  0EF5               	movlw	low _clima
  4136  000312  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4137  000314  0E00               	movlw	high _clima
  4138  000316  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4139  000318  0E41               	movlw	65
  4140  00031A  EC5B  F022         	call	_setUmidade
  4141  00031E                     l1276:
  4142                           
  4143                           ;main.c: 171: }
  4144                           ;main.c: 173: faseAtual('F', &fase, &tempajt);
  4145  00031E  0EF6               	movlw	low _fase
  4146  000320  0100               	movlb	0	; () banked
  4147  000322  6F60               	movwf	faseAtual@_fase& (0+255),b
  4148  000324  0E00               	movlw	high _fase
  4149  000326  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4150  000328  0EF4               	movlw	low _tempajt
  4151  00032A  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4152  00032C  0E00               	movlw	high _tempajt
  4153  00032E  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4154  000330  0E46               	movlw	70
  4155  000332  ECBC  F021         	call	_faseAtual
  4156                           
  4157                           ;main.c: 175: if (menu != 10) {
  4158  000336  0E0A               	movlw	10
  4159  000338  0100               	movlb	0	; () banked
  4160  00033A  19FD               	xorwf	_menu& (0+255),w,b
  4161  00033C  A4D8               	btfss	status,2,c
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;main.c: 176: enviaDadosWifi();
  4165  00033E  EC43  F018         	call	_enviaDadosWifi	;wreg free
  4166                           
  4167                           ;main.c: 177: }
  4168                           ;main.c: 181: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4169  000342  0E04               	movlw	4
  4170  000344  EC5C  F02D         	call	_btPress
  4171  000348  0900               	iorlw	0
  4172  00034A  B4D8               	btfsc	status,2,c
  4173  00034C  D351               	goto	l1279
  4174  00034E  0E5A               	movlw	low _fornalha
  4175  000350  0100               	movlb	0	; () banked
  4176  000352  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4177  000354  0E00               	movlw	high _fornalha
  4178  000356  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4179  000358  0E00               	movlw	0
  4180  00035A  6F67               	movwf	setRangeValor@_min& (0+255),b
  4181  00035C  0E01               	movlw	1
  4182  00035E  6F68               	movwf	setRangeValor@_max& (0+255),b
  4183  000360  0E0F               	movlw	15
  4184  000362  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4185  000364  0E2B               	movlw	43
  4186  000366  EC5B  F027         	call	_setRangeValor
  4187                           
  4188                           ;main.c: 183: switch (menu) {
  4189  00036A  D342               	goto	l1279
  4190  00036C                     
  4191                           ;main.c: 185: sprintf(&line1[6], "|Sensor|Ajuste");
  4192  00036C  0EAB               	movlw	low (_line1+6)
  4193  00036E  0100               	movlb	0	; () banked
  4194  000370  6F81               	movwf	sprintf@wh& (0+255),b
  4195  000372  0E01               	movlw	high (_line1+6)
  4196  000374  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4197  000376  0E2D               	movlw	low STR_83
  4198  000378  6F83               	movwf	sprintf@f& (0+255),b
  4199  00037A  0E7E               	movlw	high STR_83
  4200  00037C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4201  00037E  EC4F  F02B         	call	_sprintf	;wreg free
  4202                           
  4203                           ;main.c: 186: line1[0] = 0x02;
  4204  000382  0E02               	movlw	2
  4205  000384  0101               	movlb	1	; () banked
  4206  000386  6FA5               	movwf	_line1& (0+255),b
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;main.c: 187: if (!buzzer) blink(line1, 1, 2);
  4210  000388  0100               	movlb	0	; () banked
  4211  00038A  51FC               	movf	_buzzer& (0+255),w,b
  4212  00038C  A4D8               	btfss	status,2,c
  4213  00038E  D00A               	goto	l1281
  4214                           
  4215                           ; BSR set to: 0
  4216  000390  0EA5               	movlw	low _line1
  4217  000392  6F60               	movwf	blink@line& (0+255),b
  4218  000394  0E01               	movlw	high _line1
  4219  000396  6F61               	movwf	(blink@line+1)& (0+255),b
  4220  000398  0E01               	movlw	1
  4221  00039A  6F62               	movwf	blink@start& (0+255),b
  4222  00039C  0E02               	movlw	2
  4223  00039E  6F63               	movwf	blink@end& (0+255),b
  4224  0003A0  EC24  F02C         	call	_blink	;wreg free
  4225  0003A4                     l1281:
  4226                           
  4227                           ;main.c: 188: line1[2] = 'F';
  4228  0003A4  0E46               	movlw	70
  4229  0003A6  0101               	movlb	1	; () banked
  4230  0003A8  6FA7               	movwf	(_line1+2)& (0+255),b
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;main.c: 189: if (!fornalha) blink(line1, 2, 3);
  4234  0003AA  505A               	movf	_fornalha,w,c
  4235  0003AC  A4D8               	btfss	status,2,c
  4236  0003AE  D00B               	goto	l1282
  4237                           
  4238                           ; BSR set to: 1
  4239  0003B0  0EA5               	movlw	low _line1
  4240  0003B2  0100               	movlb	0	; () banked
  4241  0003B4  6F60               	movwf	blink@line& (0+255),b
  4242  0003B6  0E01               	movlw	high _line1
  4243  0003B8  6F61               	movwf	(blink@line+1)& (0+255),b
  4244  0003BA  0E02               	movlw	2
  4245  0003BC  6F62               	movwf	blink@start& (0+255),b
  4246  0003BE  0E03               	movlw	3
  4247  0003C0  6F63               	movwf	blink@end& (0+255),b
  4248  0003C2  EC24  F02C         	call	_blink	;wreg free
  4249  0003C6                     l1282:
  4250                           
  4251                           ;main.c: 190: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4252  0003C6  5049               	movf	_wifi_conectado,w,c
  4253  0003C8  A4D8               	btfss	status,2,c
  4254  0003CA  D005               	goto	l1284
  4255  0003CC  0E00               	movlw	0
  4256  0003CE  0100               	movlb	0	; () banked
  4257  0003D0  6FE5               	movwf	(_main$1625+1)& (0+255),b
  4258  0003D2  0E20               	movlw	32
  4259  0003D4  D004               	goto	L1
  4260  0003D6                     l1284:
  4261                           
  4262                           ; BSR set to: 0
  4263  0003D6  0E00               	movlw	0
  4264  0003D8  0100               	movlb	0	; () banked
  4265  0003DA  6FE5               	movwf	(_main$1625+1)& (0+255),b
  4266  0003DC  0E05               	movlw	5
  4267  0003DE                     L1:
  4268  0003DE  6FE4               	movwf	_main$1625& (0+255),b
  4269                           
  4270                           ; BSR set to: 0
  4271                           
  4272                           ; BSR set to: 0
  4273  0003E0  C0E4  F1A9         	movff	_main$1625,_line1+4
  4274                           
  4275                           ;main.c: 191: line1[5] = (trava_fase) ? 0x01 : ' ';
  4276  0003E4  51FB               	movf	_trava_fase& (0+255),w,b
  4277  0003E6  A4D8               	btfss	status,2,c
  4278  0003E8  D004               	goto	l1288
  4279                           
  4280                           ; BSR set to: 0
  4281  0003EA  0E00               	movlw	0
  4282  0003EC  6FE7               	movwf	(_main$1626+1)& (0+255),b
  4283  0003EE  0E20               	movlw	32
  4284  0003F0  D003               	goto	L2
  4285  0003F2                     l1288:
  4286                           
  4287                           ; BSR set to: 0
  4288                           
  4289                           ; BSR set to: 0
  4290  0003F2  0E00               	movlw	0
  4291  0003F4  6FE7               	movwf	(_main$1626+1)& (0+255),b
  4292  0003F6  0E01               	movlw	1
  4293  0003F8                     L2:
  4294  0003F8  6FE6               	movwf	_main$1626& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297                           
  4298                           ; BSR set to: 0
  4299  0003FA  C0E6  F1AA         	movff	_main$1626,_line1+5
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;main.c: 192: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4303  0003FE  0E90               	movlw	low _line2
  4304  000400  6F81               	movwf	sprintf@wh& (0+255),b
  4305  000402  0E01               	movlw	high _line2
  4306  000404  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4307  000406  0E2C               	movlw	low STR_84
  4308  000408  6F83               	movwf	sprintf@f& (0+255),b
  4309  00040A  0E7C               	movlw	high STR_84
  4310  00040C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4311  00040E  C0FE  F085         	movff	_temp,?_sprintf+4
  4312  000412  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4313  000414  C0F4  F087         	movff	_tempajt,?_sprintf+6
  4314  000418  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4315  00041A  EC4F  F02B         	call	_sprintf	;wreg free
  4316                           
  4317                           ;main.c: 193: line2[5] = 0x04;
  4318  00041E  0E04               	movlw	4
  4319  000420  0101               	movlb	1	; () banked
  4320  000422  6F95               	movwf	(_line2+5)& (0+255),b
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;main.c: 194: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4324  000424  0100               	movlb	0	; () banked
  4325  000426  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4326  000428  A4D8               	btfss	status,2,c
  4327  00042A  D004               	goto	l1292
  4328                           
  4329                           ; BSR set to: 0
  4330  00042C  0E00               	movlw	0
  4331  00042E  6FE9               	movwf	(_main$1629+1)& (0+255),b
  4332  000430  0E46               	movlw	70
  4333  000432  D003               	goto	L3
  4334  000434                     l1292:
  4335                           
  4336                           ; BSR set to: 0
  4337                           
  4338                           ; BSR set to: 0
  4339  000434  0E00               	movlw	0
  4340  000436  6FE9               	movwf	(_main$1629+1)& (0+255),b
  4341  000438  0E25               	movlw	37
  4342  00043A                     L3:
  4343  00043A  6FE8               	movwf	_main$1629& (0+255),b
  4344                           
  4345                           ; BSR set to: 0
  4346                           
  4347                           ; BSR set to: 0
  4348  00043C  0E7B               	movlw	low _line3
  4349  00043E  6F81               	movwf	sprintf@wh& (0+255),b
  4350  000440  0E01               	movlw	high _line3
  4351  000442  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4352  000444  0ED7               	movlw	low STR_85
  4353  000446  6F83               	movwf	sprintf@f& (0+255),b
  4354  000448  0E7B               	movlw	high STR_85
  4355  00044A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4356  00044C  C05D  F085         	movff	_umid,?_sprintf+4
  4357  000450  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4358  000452  C0F3  F087         	movff	_umidajt,?_sprintf+6
  4359  000456  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4360  000458  C0E8  F089         	movff	_main$1629,?_sprintf+8
  4361  00045C  C0E9  F08A         	movff	_main$1629+1,?_sprintf+9
  4362  000460  EC4F  F02B         	call	_sprintf	;wreg free
  4363                           
  4364                           ;main.c: 195: line3[5] = 0x03;
  4365  000464  0E03               	movlw	3
  4366  000466  0101               	movlb	1	; () banked
  4367  000468  6F80               	movwf	(_line3+5)& (0+255),b
  4368                           
  4369                           ;main.c: 196: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4370  00046A  0E66               	movlw	low _line4
  4371  00046C  0100               	movlb	0	; () banked
  4372  00046E  6F81               	movwf	sprintf@wh& (0+255),b
  4373  000470  0E01               	movlw	high _line4
  4374  000472  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4375  000474  0E2C               	movlw	low STR_86
  4376  000476  6F83               	movwf	sprintf@f& (0+255),b
  4377  000478  0E7F               	movlw	high STR_86
  4378  00047A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4379  00047C  0EF6               	movlw	low _fase
  4380  00047E  6F60               	movwf	faseAtual@_fase& (0+255),b
  4381  000480  0E00               	movlw	high _fase
  4382  000482  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4383  000484  0EF4               	movlw	low _tempajt
  4384  000486  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4385  000488  0E00               	movlw	high _tempajt
  4386  00048A  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4387  00048C  0E3F               	movlw	63
  4388  00048E  ECBC  F021         	call	_faseAtual
  4389  000492  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4390  000496  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4391  00049A  EC4F  F02B         	call	_sprintf	;wreg free
  4392                           
  4393                           ;main.c: 197: if (!f_falta_energia) {
  4394  00049E  505E               	movf	_f_falta_energia,w,c
  4395  0004A0  A4D8               	btfss	status,2,c
  4396  0004A2  D00B               	goto	l1295
  4397                           
  4398                           ;main.c: 198: sprintf(line4, " *FALTA DE ENERGIA*");
  4399  0004A4  0E66               	movlw	low _line4
  4400  0004A6  0100               	movlb	0	; () banked
  4401  0004A8  6F81               	movwf	sprintf@wh& (0+255),b
  4402  0004AA  0E01               	movlw	high _line4
  4403  0004AC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4404  0004AE  0E55               	movlw	low STR_87
  4405  0004B0  6F83               	movwf	sprintf@f& (0+255),b
  4406  0004B2  0E7C               	movlw	high STR_87
  4407  0004B4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4408  0004B6  EC4F  F02B         	call	_sprintf	;wreg free
  4409  0004BA                     l1295:
  4410                           
  4411                           ;main.c: 199: };
  4412                           ;main.c: 201: if (btPress(8)) {
  4413  0004BA  0E08               	movlw	8
  4414  0004BC  EC5C  F02D         	call	_btPress
  4415  0004C0  0900               	iorlw	0
  4416  0004C2  B4D8               	btfsc	status,2,c
  4417  0004C4  D005               	goto	l1296
  4418                           
  4419                           ;main.c: 202: menu = 1;
  4420  0004C6  0E01               	movlw	1
  4421  0004C8  0100               	movlb	0	; () banked
  4422  0004CA  6FFD               	movwf	_menu& (0+255),b
  4423                           
  4424                           ;main.c: 203: opcaomenu = 1;
  4425  0004CC  0E01               	movlw	1
  4426  0004CE  6E45               	movwf	_opcaomenu,c
  4427  0004D0                     l1296:
  4428                           
  4429                           ;main.c: 204: }
  4430                           ;main.c: 205: if (btPress(2)) {
  4431                           
  4432                           ; BSR set to: 0
  4433  0004D0  0E02               	movlw	2
  4434  0004D2  EC5C  F02D         	call	_btPress
  4435  0004D6  0900               	iorlw	0
  4436  0004D8  A4D8               	btfss	status,2,c
  4437                           
  4438                           ;main.c: 206: ajuste_parametro++;
  4439  0004DA  2A44               	incf	_ajuste_parametro,f,c
  4440                           
  4441                           ;main.c: 207: }
  4442                           ;main.c: 208: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4443  0004DC  0E01               	movlw	1
  4444  0004DE  EC5C  F02D         	call	_btPress
  4445  0004E2  0900               	iorlw	0
  4446  0004E4  B4D8               	btfsc	status,2,c
  4447  0004E6  D00E               	goto	l1298
  4448  0004E8  0EFC               	movlw	low _buzzer
  4449  0004EA  0100               	movlb	0	; () banked
  4450  0004EC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4451  0004EE  0E00               	movlw	high _buzzer
  4452  0004F0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4453  0004F2  0E01               	movlw	1
  4454  0004F4  6F67               	movwf	setRangeValor@_min& (0+255),b
  4455  0004F6  0E01               	movlw	1
  4456  0004F8  6F68               	movwf	setRangeValor@_max& (0+255),b
  4457  0004FA  0E0E               	movlw	14
  4458  0004FC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4459  0004FE  0E2B               	movlw	43
  4460  000500  EC5B  F027         	call	_setRangeValor
  4461  000504                     l1298:
  4462                           
  4463                           ;main.c: 209: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4464  000504  0E10               	movlw	16
  4465  000506  EC5C  F02D         	call	_btPress
  4466  00050A  0900               	iorlw	0
  4467  00050C  B4D8               	btfsc	status,2,c
  4468  00050E  D081               	goto	l1300
  4469  000510  0EFC               	movlw	low _buzzer
  4470  000512  0100               	movlb	0	; () banked
  4471  000514  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4472  000516  0E00               	movlw	high _buzzer
  4473  000518  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4474  00051A  0E00               	movlw	0
  4475  00051C  6F67               	movwf	setRangeValor@_min& (0+255),b
  4476  00051E  0E00               	movlw	0
  4477  000520  6F68               	movwf	setRangeValor@_max& (0+255),b
  4478  000522  0E0E               	movlw	14
  4479  000524  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4480  000526  0E2B               	movlw	43
  4481  000528  EC5B  F027         	call	_setRangeValor
  4482                           
  4483                           ;main.c: 212: switch (ajuste_parametro) {
  4484  00052C  D072               	goto	l1300
  4485  00052E                     
  4486                           ;main.c: 214: blink(line2, 15, 20);
  4487  00052E  0E90               	movlw	low _line2
  4488  000530  0100               	movlb	0	; () banked
  4489  000532  6F60               	movwf	blink@line& (0+255),b
  4490  000534  0E01               	movlw	high _line2
  4491  000536  6F61               	movwf	(blink@line+1)& (0+255),b
  4492  000538  0E0F               	movlw	15
  4493  00053A  6F62               	movwf	blink@start& (0+255),b
  4494  00053C  0E14               	movlw	20
  4495  00053E  6F63               	movwf	blink@end& (0+255),b
  4496  000540  EC24  F02C         	call	_blink	;wreg free
  4497                           
  4498                           ;main.c: 215: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4499  000544  0E40               	movlw	64
  4500  000546  EC5C  F02D         	call	_btPress
  4501  00054A  0900               	iorlw	0
  4502  00054C  B4D8               	btfsc	status,2,c
  4503  00054E  D00E               	goto	l1302
  4504  000550  0EF4               	movlw	low _tempajt
  4505  000552  0100               	movlb	0	; () banked
  4506  000554  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4507  000556  0E00               	movlw	high _tempajt
  4508  000558  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4509  00055A  0E55               	movlw	85
  4510  00055C  6F67               	movwf	setRangeValor@_min& (0+255),b
  4511  00055E  0EA0               	movlw	160
  4512  000560  6F68               	movwf	setRangeValor@_max& (0+255),b
  4513  000562  0E01               	movlw	1
  4514  000564  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4515  000566  0E2B               	movlw	43
  4516  000568  EC5B  F027         	call	_setRangeValor
  4517  00056C                     l1302:
  4518                           
  4519                           ;main.c: 216: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4520  00056C  0E20               	movlw	32
  4521  00056E  EC5C  F02D         	call	_btPress
  4522  000572  0900               	iorlw	0
  4523  000574  B4D8               	btfsc	status,2,c
  4524  000576  D25D               	goto	l1311
  4525  000578  0EF4               	movlw	low _tempajt
  4526  00057A  0100               	movlb	0	; () banked
  4527  00057C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4528  00057E  0E00               	movlw	high _tempajt
  4529  000580  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4530  000582  0E55               	movlw	85
  4531  000584  6F67               	movwf	setRangeValor@_min& (0+255),b
  4532  000586  0EA0               	movlw	160
  4533  000588  6F68               	movwf	setRangeValor@_max& (0+255),b
  4534  00058A  0E01               	movlw	1
  4535  00058C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4536  00058E  0E2D               	movlw	45
  4537  000590  EC5B  F027         	call	_setRangeValor
  4538                           
  4539                           ;main.c: 217: break;
  4540  000594  D24E               	goto	l1311
  4541  000596                     
  4542                           ;main.c: 219: if (tipo_modo_trabalho == 0) {
  4543  000596  5059               	movf	_tipo_modo_trabalho,w,c
  4544  000598  A4D8               	btfss	status,2,c
  4545  00059A  D038               	goto	l1306
  4546                           
  4547                           ;main.c: 220: blink(line3, 15, 20);
  4548  00059C  0E7B               	movlw	low _line3
  4549  00059E  0100               	movlb	0	; () banked
  4550  0005A0  6F60               	movwf	blink@line& (0+255),b
  4551  0005A2  0E01               	movlw	high _line3
  4552  0005A4  6F61               	movwf	(blink@line+1)& (0+255),b
  4553  0005A6  0E0F               	movlw	15
  4554  0005A8  6F62               	movwf	blink@start& (0+255),b
  4555  0005AA  0E14               	movlw	20
  4556  0005AC  6F63               	movwf	blink@end& (0+255),b
  4557  0005AE  EC24  F02C         	call	_blink	;wreg free
  4558                           
  4559                           ;main.c: 221: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4560  0005B2  0E40               	movlw	64
  4561  0005B4  EC5C  F02D         	call	_btPress
  4562  0005B8  0900               	iorlw	0
  4563  0005BA  B4D8               	btfsc	status,2,c
  4564  0005BC  D010               	goto	l1307
  4565  0005BE  0EF3               	movlw	low _umidajt
  4566  0005C0  0100               	movlb	0	; () banked
  4567  0005C2  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4568  0005C4  0E00               	movlw	high _umidajt
  4569  0005C6  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4570  0005C8  0EF4               	movlw	low _tempajt
  4571  0005CA  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4572  0005CC  0E00               	movlw	high _tempajt
  4573  0005CE  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4574  0005D0  0EF5               	movlw	low _clima
  4575  0005D2  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4576  0005D4  0E00               	movlw	high _clima
  4577  0005D6  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4578  0005D8  0E2B               	movlw	43
  4579  0005DA  EC5B  F022         	call	_setUmidade
  4580  0005DE                     l1307:
  4581                           
  4582                           ;main.c: 222: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4583  0005DE  0E20               	movlw	32
  4584  0005E0  EC5C  F02D         	call	_btPress
  4585  0005E4  0900               	iorlw	0
  4586  0005E6  B4D8               	btfsc	status,2,c
  4587  0005E8  D224               	goto	l1311
  4588  0005EA  0EF3               	movlw	low _umidajt
  4589  0005EC  0100               	movlb	0	; () banked
  4590  0005EE  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4591  0005F0  0E00               	movlw	high _umidajt
  4592  0005F2  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4593  0005F4  0EF4               	movlw	low _tempajt
  4594  0005F6  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4595  0005F8  0E00               	movlw	high _tempajt
  4596  0005FA  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4597  0005FC  0EF5               	movlw	low _clima
  4598  0005FE  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4599  000600  0E00               	movlw	high _clima
  4600  000602  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4601  000604  0E2D               	movlw	45
  4602  000606  EC5B  F022         	call	_setUmidade
  4603                           
  4604                           ;main.c: 223: } else {
  4605  00060A  D213               	goto	l1311
  4606  00060C                     l1306:
  4607                           
  4608                           ;main.c: 228: ajuste_parametro = 0;
  4609                           
  4610                           ;main.c: 227: default:
  4611                           
  4612                           ;main.c: 225: }
  4613                           ;main.c: 226: break;
  4614                           
  4615                           ;main.c: 224: ajuste_parametro = 0;
  4616  00060C  0E00               	movlw	0
  4617  00060E  6E44               	movwf	_ajuste_parametro,c
  4618                           
  4619                           ;main.c: 229: }
  4620  000610  D210               	goto	l1311
  4621  000612                     l1300:
  4622  000612  5044               	movf	_ajuste_parametro,w,c
  4623                           
  4624                           ; Switch size 1, requested type "space"
  4625                           ; Number of cases is 2, Range of values is 1 to 2
  4626                           ; switch strategies available:
  4627                           ; Name         Instructions Cycles
  4628                           ; simple_byte            7     4 (average)
  4629                           ;	Chosen strategy is simple_byte
  4630  000614  0A01               	xorlw	1	; case 1
  4631  000616  B4D8               	btfsc	status,2,c
  4632  000618  D78A               	goto	l1301
  4633  00061A  0A03               	xorlw	3	; case 2
  4634  00061C  B4D8               	btfsc	status,2,c
  4635  00061E  D7BB               	goto	l1305
  4636  000620  D7F5               	goto	l1306
  4637  000622                     
  4638                           ;main.c: 232: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4639  000622  0EA6               	movlw	low (_line1+1)
  4640  000624  0100               	movlb	0	; () banked
  4641  000626  6F81               	movwf	sprintf@wh& (0+255),b
  4642  000628  0E01               	movlw	high (_line1+1)
  4643  00062A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4644  00062C  0E3F               	movlw	low STR_88
  4645  00062E  6F83               	movwf	sprintf@f& (0+255),b
  4646  000630  0E7D               	movlw	high STR_88
  4647  000632  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4648  000634  C0F4  F085         	movff	_tempajt,?_sprintf+4
  4649  000638  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4650  00063A  EC4F  F02B         	call	_sprintf	;wreg free
  4651                           
  4652                           ;main.c: 233: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4653  00063E  0100               	movlb	0	; () banked
  4654  000640  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4655  000642  A4D8               	btfss	status,2,c
  4656  000644  D004               	goto	l1314
  4657                           
  4658                           ; BSR set to: 0
  4659  000646  0E00               	movlw	0
  4660  000648  6FEB               	movwf	(_main$1634+1)& (0+255),b
  4661  00064A  0E46               	movlw	70
  4662  00064C  D003               	goto	L4
  4663  00064E                     l1314:
  4664                           
  4665                           ; BSR set to: 0
  4666                           
  4667                           ; BSR set to: 0
  4668  00064E  0E00               	movlw	0
  4669  000650  6FEB               	movwf	(_main$1634+1)& (0+255),b
  4670  000652  0E25               	movlw	37
  4671  000654                     L4:
  4672  000654  6FEA               	movwf	_main$1634& (0+255),b
  4673                           
  4674                           ; BSR set to: 0
  4675                           
  4676                           ; BSR set to: 0
  4677  000656  0E91               	movlw	low (_line2+1)
  4678  000658  6F81               	movwf	sprintf@wh& (0+255),b
  4679  00065A  0E01               	movlw	high (_line2+1)
  4680  00065C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4681  00065E  0E1E               	movlw	low STR_89
  4682  000660  6F83               	movwf	sprintf@f& (0+255),b
  4683  000662  0E7E               	movlw	high STR_89
  4684  000664  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4685  000666  C0F3  F085         	movff	_umidajt,?_sprintf+4
  4686  00066A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4687  00066C  C0EA  F087         	movff	_main$1634,?_sprintf+6
  4688  000670  C0EB  F088         	movff	_main$1634+1,?_sprintf+7
  4689  000674  EC4F  F02B         	call	_sprintf	;wreg free
  4690                           
  4691                           ;main.c: 234: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4692  000678  0E7C               	movlw	low (_line3+1)
  4693  00067A  0100               	movlb	0	; () banked
  4694  00067C  6F81               	movwf	sprintf@wh& (0+255),b
  4695  00067E  0E01               	movlw	high (_line3+1)
  4696  000680  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4697  000682  0E52               	movlw	low STR_90
  4698  000684  6F83               	movwf	sprintf@f& (0+255),b
  4699  000686  0E7F               	movlw	high STR_90
  4700  000688  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4701  00068A  0EF6               	movlw	low _fase
  4702  00068C  6F60               	movwf	faseAtual@_fase& (0+255),b
  4703  00068E  0E00               	movlw	high _fase
  4704  000690  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4705  000692  0EF4               	movlw	low _tempajt
  4706  000694  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4707  000696  0E00               	movlw	high _tempajt
  4708  000698  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4709  00069A  0E3F               	movlw	63
  4710  00069C  ECBC  F021         	call	_faseAtual
  4711  0006A0  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4712  0006A4  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4713  0006A8  EC4F  F02B         	call	_sprintf	;wreg free
  4714                           
  4715                           ;main.c: 235: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  4716  0006AC  0E67               	movlw	low (_line4+1)
  4717  0006AE  0100               	movlb	0	; () banked
  4718  0006B0  6F81               	movwf	sprintf@wh& (0+255),b
  4719  0006B2  0E01               	movlw	high (_line4+1)
  4720  0006B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4721  0006B6  0E18               	movlw	low STR_91
  4722  0006B8  6F83               	movwf	sprintf@f& (0+255),b
  4723  0006BA  0E7F               	movlw	high STR_91
  4724  0006BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4725  0006BE  51F5               	movf	_clima& (0+255),w,b
  4726  0006C0  EC2B  F02B         	call	_climaAtual
  4727  0006C4  C060  F085         	movff	?_climaAtual,?_sprintf+4
  4728  0006C8  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  4729  0006CC  EC4F  F02B         	call	_sprintf	;wreg free
  4730                           
  4731                           ;main.c: 236: break;
  4732  0006D0  D1B0               	goto	l1311
  4733  0006D2                     
  4734                           ;main.c: 238: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  4735  0006D2  5059               	movf	_tipo_modo_trabalho,w,c
  4736  0006D4  B4D8               	btfsc	status,2,c
  4737  0006D6  D005               	goto	l1319
  4738  0006D8  0EE3               	movlw	low STR_94
  4739  0006DA  0100               	movlb	0	; () banked
  4740  0006DC  6FEC               	movwf	_main$1641& (0+255),b
  4741  0006DE  0E7E               	movlw	high STR_94
  4742  0006E0  D004               	goto	L5
  4743  0006E2                     l1319:
  4744                           
  4745                           ; BSR set to: 0
  4746  0006E2  0E99               	movlw	low STR_93
  4747  0006E4  0100               	movlb	0	; () banked
  4748  0006E6  6FEC               	movwf	_main$1641& (0+255),b
  4749  0006E8  0E7F               	movlw	high STR_93
  4750  0006EA                     L5:
  4751  0006EA  6FED               	movwf	(_main$1641+1)& (0+255),b
  4752                           
  4753                           ; BSR set to: 0
  4754                           
  4755                           ; BSR set to: 0
  4756  0006EC  0EA6               	movlw	low (_line1+1)
  4757  0006EE  6F81               	movwf	sprintf@wh& (0+255),b
  4758  0006F0  0E01               	movlw	high (_line1+1)
  4759  0006F2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4760  0006F4  0E5B               	movlw	low STR_92
  4761  0006F6  6F83               	movwf	sprintf@f& (0+255),b
  4762  0006F8  0E7F               	movlw	high STR_92
  4763  0006FA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4764  0006FC  C0EC  F085         	movff	_main$1641,?_sprintf+4
  4765  000700  C0ED  F086         	movff	_main$1641+1,?_sprintf+5
  4766  000704  EC4F  F02B         	call	_sprintf	;wreg free
  4767                           
  4768                           ;main.c: 239: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  4769  000708  0100               	movlb	0	; () banked
  4770  00070A  51FB               	movf	_trava_fase& (0+255),w,b
  4771  00070C  A4D8               	btfss	status,2,c
  4772  00070E  D004               	goto	l1323
  4773                           
  4774                           ; BSR set to: 0
  4775  000710  0EEE               	movlw	low STR_97
  4776  000712  6FEE               	movwf	_main$1646& (0+255),b
  4777  000714  0E7E               	movlw	high STR_97
  4778  000716  D003               	goto	L6
  4779  000718                     l1323:
  4780                           
  4781                           ; BSR set to: 0
  4782                           
  4783                           ; BSR set to: 0
  4784  000718  0E6D               	movlw	low STR_96
  4785  00071A  6FEE               	movwf	_main$1646& (0+255),b
  4786  00071C  0E7F               	movlw	high STR_96
  4787  00071E                     L6:
  4788  00071E  6FEF               	movwf	(_main$1646+1)& (0+255),b
  4789                           
  4790                           ; BSR set to: 0
  4791                           
  4792                           ; BSR set to: 0
  4793  000720  0E91               	movlw	low (_line2+1)
  4794  000722  6F81               	movwf	sprintf@wh& (0+255),b
  4795  000724  0E01               	movlw	high (_line2+1)
  4796  000726  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4797  000728  0E22               	movlw	low STR_95
  4798  00072A  6F83               	movwf	sprintf@f& (0+255),b
  4799  00072C  0E7F               	movlw	high STR_95
  4800  00072E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4801  000730  C0EE  F085         	movff	_main$1646,?_sprintf+4
  4802  000734  C0EF  F086         	movff	_main$1646+1,?_sprintf+5
  4803  000738  EC4F  F02B         	call	_sprintf	;wreg free
  4804                           
  4805                           ;main.c: 240: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  4806  00073C  0100               	movlb	0	; () banked
  4807  00073E  51FC               	movf	_buzzer& (0+255),w,b
  4808  000740  A4D8               	btfss	status,2,c
  4809  000742  D004               	goto	l1327
  4810                           
  4811                           ; BSR set to: 0
  4812  000744  0E04               	movlw	low STR_100
  4813  000746  6FF0               	movwf	_main$1651& (0+255),b
  4814  000748  0E7F               	movlw	high STR_100
  4815  00074A  D003               	goto	L7
  4816  00074C                     l1327:
  4817                           
  4818                           ; BSR set to: 0
  4819                           
  4820                           ; BSR set to: 0
  4821  00074C  0EA0               	movlw	low STR_99
  4822  00074E  6FF0               	movwf	_main$1651& (0+255),b
  4823  000750  0E7F               	movlw	high STR_99
  4824  000752                     L7:
  4825  000752  6FF1               	movwf	(_main$1651+1)& (0+255),b
  4826                           
  4827                           ; BSR set to: 0
  4828                           
  4829                           ; BSR set to: 0
  4830  000754  0E7C               	movlw	low (_line3+1)
  4831  000756  6F81               	movwf	sprintf@wh& (0+255),b
  4832  000758  0E01               	movlw	high (_line3+1)
  4833  00075A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4834  00075C  0EF9               	movlw	low STR_98
  4835  00075E  6F83               	movwf	sprintf@f& (0+255),b
  4836  000760  0E7E               	movlw	high STR_98
  4837  000762  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4838  000764  C0F0  F085         	movff	_main$1651,?_sprintf+4
  4839  000768  C0F1  F086         	movff	_main$1651+1,?_sprintf+5
  4840  00076C  EC4F  F02B         	call	_sprintf	;wreg free
  4841                           
  4842                           ;main.c: 241: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  4843  000770  0E67               	movlw	low (_line4+1)
  4844  000772  0100               	movlb	0	; () banked
  4845  000774  6F81               	movwf	sprintf@wh& (0+255),b
  4846  000776  0E01               	movlw	high (_line4+1)
  4847  000778  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4848  00077A  0E91               	movlw	low STR_101
  4849  00077C  6F83               	movwf	sprintf@f& (0+255),b
  4850  00077E  0E7C               	movlw	high STR_101
  4851  000780  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4852  000782  EC4F  F02B         	call	_sprintf	;wreg free
  4853                           
  4854                           ;main.c: 242: break;
  4855  000786  D155               	goto	l1311
  4856  000788                     
  4857                           ;main.c: 244: sprintf(&line1[1], "CONFIG WIFI      >>");
  4858  000788  0EA6               	movlw	low (_line1+1)
  4859  00078A  0100               	movlb	0	; () banked
  4860  00078C  6F81               	movwf	sprintf@wh& (0+255),b
  4861  00078E  0E01               	movlw	high (_line1+1)
  4862  000790  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4863  000792  0E7D               	movlw	low STR_102
  4864  000794  6F83               	movwf	sprintf@f& (0+255),b
  4865  000796  0E7C               	movlw	high STR_102
  4866  000798  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4867  00079A  EC4F  F02B         	call	_sprintf	;wreg free
  4868                           
  4869                           ;main.c: 245: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  4870  00079E  0E91               	movlw	low (_line2+1)
  4871  0007A0  0100               	movlb	0	; () banked
  4872  0007A2  6F81               	movwf	sprintf@wh& (0+255),b
  4873  0007A4  0E01               	movlw	high (_line2+1)
  4874  0007A6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4875  0007A8  0EA5               	movlw	low STR_103
  4876  0007AA  6F83               	movwf	sprintf@f& (0+255),b
  4877  0007AC  0E7C               	movlw	high STR_103
  4878  0007AE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4879  0007B0  EC4F  F02B         	call	_sprintf	;wreg free
  4880                           
  4881                           ;main.c: 246: break;
  4882  0007B4  D13E               	goto	l1311
  4883  0007B6                     
  4884                           ;main.c: 248: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  4885  0007B6  0EA6               	movlw	low (_line1+1)
  4886  0007B8  0100               	movlb	0	; () banked
  4887  0007BA  6F81               	movwf	sprintf@wh& (0+255),b
  4888  0007BC  0E01               	movlw	high (_line1+1)
  4889  0007BE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4890  0007C0  0EBB               	movlw	low STR_104
  4891  0007C2  6F83               	movwf	sprintf@f& (0+255),b
  4892  0007C4  0E7D               	movlw	high STR_104
  4893  0007C6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4894  0007C8  C04D  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  4895  0007CC  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4896  0007CE  C053  F087         	movff	_h_venotinha,?_sprintf+6
  4897  0007D2  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4898  0007D4  EC4F  F02B         	call	_sprintf	;wreg free
  4899                           
  4900                           ;main.c: 249: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  4901  0007D8  0E91               	movlw	low (_line2+1)
  4902  0007DA  0100               	movlb	0	; () banked
  4903  0007DC  6F81               	movwf	sprintf@wh& (0+255),b
  4904  0007DE  0E01               	movlw	high (_line2+1)
  4905  0007E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4906  0007E2  0ECC               	movlw	low STR_105
  4907  0007E4  6F83               	movwf	sprintf@f& (0+255),b
  4908  0007E6  0E7D               	movlw	high STR_105
  4909  0007E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4910  0007EA  C0FA  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  4911  0007EE  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4912  0007F0  C0F7  F087         	movff	_h_modo_seguranca,?_sprintf+6
  4913  0007F4  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4914  0007F6  EC4F  F02B         	call	_sprintf	;wreg free
  4915                           
  4916                           ;main.c: 250: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  4917  0007FA  0E7C               	movlw	low (_line3+1)
  4918  0007FC  0100               	movlb	0	; () banked
  4919  0007FE  6F81               	movwf	sprintf@wh& (0+255),b
  4920  000800  0E01               	movlw	high (_line3+1)
  4921  000802  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4922  000804  0EDD               	movlw	low STR_106
  4923  000806  6F83               	movwf	sprintf@f& (0+255),b
  4924  000808  0E7D               	movlw	high STR_106
  4925  00080A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4926  00080C  C052  F085         	movff	_h_abafador,?_sprintf+4
  4927  000810  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4928  000812  C050  F087         	movff	_h_buzzer,?_sprintf+6
  4929  000816  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4930  000818  EC4F  F02B         	call	_sprintf	;wreg free
  4931                           
  4932                           ;main.c: 251: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  4933  00081C  0E67               	movlw	low (_line4+1)
  4934  00081E  0100               	movlb	0	; () banked
  4935  000820  6F81               	movwf	sprintf@wh& (0+255),b
  4936  000822  0E01               	movlw	high (_line4+1)
  4937  000824  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4938  000826  0EEE               	movlw	low STR_107
  4939  000828  6F83               	movwf	sprintf@f& (0+255),b
  4940  00082A  0E7D               	movlw	high STR_107
  4941  00082C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4942  00082E  C051  F085         	movff	_h_flap,?_sprintf+4
  4943  000832  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4944  000834  C055  F087         	movff	_t_flap_ligado,?_sprintf+6
  4945  000838  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4946  00083A  EC4F  F02B         	call	_sprintf	;wreg free
  4947                           
  4948                           ;main.c: 252: break;
  4949  00083E  D0F9               	goto	l1311
  4950  000840                     
  4951                           ;main.c: 254: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  4952  000840  0EA6               	movlw	low (_line1+1)
  4953  000842  0100               	movlb	0	; () banked
  4954  000844  6F81               	movwf	sprintf@wh& (0+255),b
  4955  000846  0E01               	movlw	high (_line1+1)
  4956  000848  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4957  00084A  0E51               	movlw	low STR_108
  4958  00084C  6F83               	movwf	sprintf@f& (0+255),b
  4959  00084E  0E7D               	movlw	high STR_108
  4960  000850  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4961  000852  C054  F085         	movff	_t_flap_intervalo,?_sprintf+4
  4962  000856  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4963  000858  C04B  F087         	movff	_wifi_SENHA,?_sprintf+6
  4964  00085C  C04C  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  4965  000860  EC4F  F02B         	call	_sprintf	;wreg free
  4966                           
  4967                           ;main.c: 255: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  4968  000864  0E91               	movlw	low (_line2+1)
  4969  000866  0100               	movlb	0	; () banked
  4970  000868  6F81               	movwf	sprintf@wh& (0+255),b
  4971  00086A  0E01               	movlw	high (_line2+1)
  4972  00086C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4973  00086E  0E63               	movlw	low STR_109
  4974  000870  6F83               	movwf	sprintf@f& (0+255),b
  4975  000872  0E7D               	movlw	high STR_109
  4976  000874  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4977  000876  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  4978  00087A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4979  00087C  C04F  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  4980  000880  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4981  000882  EC4F  F02B         	call	_sprintf	;wreg free
  4982                           
  4983                           ;main.c: 256: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  4984  000886  0E7C               	movlw	low (_line3+1)
  4985  000888  0100               	movlb	0	; () banked
  4986  00088A  6F81               	movwf	sprintf@wh& (0+255),b
  4987  00088C  0E01               	movlw	high (_line3+1)
  4988  00088E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4989  000890  0E75               	movlw	low STR_110
  4990  000892  6F83               	movwf	sprintf@f& (0+255),b
  4991  000894  0E7D               	movlw	high STR_110
  4992  000896  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4993  000898  C0F9  F085         	movff	_t_temp_automatica,?_sprintf+4
  4994  00089C  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4995  00089E  C0F8  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  4996  0008A2  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4997  0008A4  EC4F  F02B         	call	_sprintf	;wreg free
  4998                           
  4999                           ;main.c: 257: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5000  0008A8  0E67               	movlw	low (_line4+1)
  5001  0008AA  0100               	movlb	0	; () banked
  5002  0008AC  6F81               	movwf	sprintf@wh& (0+255),b
  5003  0008AE  0E01               	movlw	high (_line4+1)
  5004  0008B0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5005  0008B2  0E36               	movlw	low STR_111
  5006  0008B4  6F83               	movwf	sprintf@f& (0+255),b
  5007  0008B6  0E7F               	movlw	high STR_111
  5008  0008B8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5009  0008BA  C04E  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5010  0008BE  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5011  0008C0  EC4F  F02B         	call	_sprintf	;wreg free
  5012                           
  5013                           ;main.c: 258: break;
  5014  0008C4  D0B6               	goto	l1311
  5015  0008C6                     
  5016                           ;main.c: 260: sprintf(line1, "REDE:%s", ssid);
  5017  0008C6  0EA5               	movlw	low _line1
  5018  0008C8  0100               	movlb	0	; () banked
  5019  0008CA  6F81               	movwf	sprintf@wh& (0+255),b
  5020  0008CC  0E01               	movlw	high _line1
  5021  0008CE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5022  0008D0  0E75               	movlw	low STR_112
  5023  0008D2  6F83               	movwf	sprintf@f& (0+255),b
  5024  0008D4  0E7F               	movlw	high STR_112
  5025  0008D6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5026  0008D8  0EC9               	movlw	low _ssid
  5027  0008DA  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5028  0008DC  0E01               	movlw	high _ssid
  5029  0008DE  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5030  0008E0  EC4F  F02B         	call	_sprintf	;wreg free
  5031                           
  5032                           ;main.c: 261: sprintf(line2, "SENHA:%s", senha);
  5033  0008E4  0E90               	movlw	low _line2
  5034  0008E6  0100               	movlb	0	; () banked
  5035  0008E8  6F81               	movwf	sprintf@wh& (0+255),b
  5036  0008EA  0E01               	movlw	high _line2
  5037  0008EC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5038  0008EE  0E64               	movlw	low STR_113
  5039  0008F0  6F83               	movwf	sprintf@f& (0+255),b
  5040  0008F2  0E7F               	movlw	high STR_113
  5041  0008F4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5042  0008F6  0EBA               	movlw	low _senha
  5043  0008F8  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5044  0008FA  0E01               	movlw	high _senha
  5045  0008FC  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5046  0008FE  EC4F  F02B         	call	_sprintf	;wreg free
  5047                           
  5048                           ;main.c: 263: sprintf(line3, "NS: %s", wifi_MAC);
  5049  000902  0E7B               	movlw	low _line3
  5050  000904  0100               	movlb	0	; () banked
  5051  000906  6F81               	movwf	sprintf@wh& (0+255),b
  5052  000908  0E01               	movlw	high _line3
  5053  00090A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5054  00090C  0EA7               	movlw	low STR_114
  5055  00090E  6F83               	movwf	sprintf@f& (0+255),b
  5056  000910  0E7F               	movlw	high STR_114
  5057  000912  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5058  000914  0EE2               	movlw	low _wifi_MAC
  5059  000916  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5060  000918  0E01               	movlw	high _wifi_MAC
  5061  00091A  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5062  00091C  EC4F  F02B         	call	_sprintf	;wreg free
  5063                           
  5064                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5065  000920  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5066  000924  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5067  000928  0E00               	movlw	0
  5068  00092A  0100               	movlb	0	; () banked
  5069  00092C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5070  00092E  0E27               	movlw	39
  5071  000930  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5072  000932  ECC8  F02C         	call	___wmul	;wreg free
  5073  000936  C060  F0E2         	movff	?___wmul,_main$2519
  5074  00093A  C061  F0E3         	movff	?___wmul+1,_main$2519+1
  5075                           
  5076                           ;main.c: 264: sprintf(line4, "SENHA REMOTA: %d", (int) (wifi_SENHA * 39));
  5077  00093E  0E66               	movlw	low _line4
  5078  000940  0100               	movlb	0	; () banked
  5079  000942  6F81               	movwf	sprintf@wh& (0+255),b
  5080  000944  0E01               	movlw	high _line4
  5081  000946  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5082  000948  0EAA               	movlw	low STR_115
  5083  00094A  6F83               	movwf	sprintf@f& (0+255),b
  5084  00094C  0E7D               	movlw	high STR_115
  5085  00094E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5086  000950  C0E2  F085         	movff	_main$2519,?_sprintf+4
  5087  000954  C0E3  F086         	movff	_main$2519+1,?_sprintf+5
  5088  000958  EC4F  F02B         	call	_sprintf	;wreg free
  5089                           
  5090                           ;main.c: 265: break;
  5091  00095C  D06A               	goto	l1311
  5092  00095E                     
  5093                           ;main.c: 267: sprintf(&line1[1], "CONFIGURAR       >>");
  5094  00095E  0EA6               	movlw	low (_line1+1)
  5095  000960  0100               	movlb	0	; () banked
  5096  000962  6F81               	movwf	sprintf@wh& (0+255),b
  5097  000964  0E01               	movlw	high (_line1+1)
  5098  000966  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5099  000968  0E69               	movlw	low STR_116
  5100  00096A  6F83               	movwf	sprintf@f& (0+255),b
  5101  00096C  0E7C               	movlw	high STR_116
  5102  00096E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5103  000970  EC4F  F02B         	call	_sprintf	;wreg free
  5104                           
  5105                           ;main.c: 268: break;
  5106  000974  D05E               	goto	l1311
  5107  000976                     
  5108                           ;main.c: 270: alterarDadosConexaoConfigWifi();
  5109  000976  EC73  F01A         	call	_alterarDadosConexaoConfigWifi	;wreg free
  5110                           
  5111                           ;main.c: 271: break;
  5112  00097A  D05B               	goto	l1311
  5113  00097C                     
  5114                           ;main.c: 273: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5115  00097C  0EA6               	movlw	low (_line1+1)
  5116  00097E  0100               	movlb	0	; () banked
  5117  000980  6F81               	movwf	sprintf@wh& (0+255),b
  5118  000982  0E01               	movlw	high (_line1+1)
  5119  000984  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5120  000986  0E07               	movlw	low STR_117
  5121  000988  6F83               	movwf	sprintf@f& (0+255),b
  5122  00098A  0E7D               	movlw	high STR_117
  5123  00098C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5124  00098E  C058  F085         	movff	_t_fim_fase1,?_sprintf+4
  5125  000992  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5126  000994  EC4F  F02B         	call	_sprintf	;wreg free
  5127                           
  5128                           ;main.c: 274: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5129  000998  0E91               	movlw	low (_line2+1)
  5130  00099A  0100               	movlb	0	; () banked
  5131  00099C  6F81               	movwf	sprintf@wh& (0+255),b
  5132  00099E  0E01               	movlw	high (_line2+1)
  5133  0009A0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5134  0009A2  0E1A               	movlw	low STR_118
  5135  0009A4  6F83               	movwf	sprintf@f& (0+255),b
  5136  0009A6  0E7D               	movlw	high STR_118
  5137  0009A8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5138  0009AA  C057  F085         	movff	_t_fim_fase2,?_sprintf+4
  5139  0009AE  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5140  0009B0  EC4F  F02B         	call	_sprintf	;wreg free
  5141                           
  5142                           ;main.c: 275: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5143  0009B4  0E7C               	movlw	low (_line3+1)
  5144  0009B6  0100               	movlb	0	; () banked
  5145  0009B8  6F81               	movwf	sprintf@wh& (0+255),b
  5146  0009BA  0E01               	movlw	high (_line3+1)
  5147  0009BC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5148  0009BE  0EF4               	movlw	low STR_119
  5149  0009C0  6F83               	movwf	sprintf@f& (0+255),b
  5150  0009C2  0E7C               	movlw	high STR_119
  5151  0009C4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5152  0009C6  C056  F085         	movff	_t_fim_fase3,?_sprintf+4
  5153  0009CA  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5154  0009CC  EC4F  F02B         	call	_sprintf	;wreg free
  5155                           
  5156                           ;main.c: 276: sprintf(line4, "*0 nao passa fase");
  5157  0009D0  0E66               	movlw	low _line4
  5158  0009D2  0100               	movlb	0	; () banked
  5159  0009D4  6F81               	movwf	sprintf@wh& (0+255),b
  5160  0009D6  0E01               	movlw	high _line4
  5161  0009D8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5162  0009DA  0E87               	movlw	low STR_120
  5163  0009DC  6F83               	movwf	sprintf@f& (0+255),b
  5164  0009DE  0E7D               	movlw	high STR_120
  5165  0009E0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5166  0009E2  EC4F  F02B         	call	_sprintf	;wreg free
  5167                           
  5168                           ;main.c: 277: break;
  5169  0009E6  D025               	goto	l1311
  5170  0009E8  0E00               	movlw	0
  5171  0009EA  0100               	movlb	0	; () banked
  5172  0009EC  6FFD               	movwf	_menu& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;main.c: 280: }
  5176                           
  5177                           ;main.c: 279: break;
  5178  0009EE  D021               	goto	l1311
  5179  0009F0                     l1279:
  5180                           
  5181                           ; BSR set to: 0
  5182  0009F0  0100               	movlb	0	; () banked
  5183  0009F2  51FD               	movf	_menu& (0+255),w,b
  5184                           
  5185                           ; Switch size 1, requested type "space"
  5186                           ; Number of cases is 10, Range of values is 0 to 11
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte           31    16 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  0009F4  0A00               	xorlw	0	; case 0
  5192  0009F6  B4D8               	btfsc	status,2,c
  5193  0009F8  D4B9               	goto	l1280
  5194  0009FA  0A01               	xorlw	1	; case 1
  5195  0009FC  B4D8               	btfsc	status,2,c
  5196  0009FE  D611               	goto	l1312
  5197  000A00  0A03               	xorlw	3	; case 2
  5198  000A02  B4D8               	btfsc	status,2,c
  5199  000A04  D666               	goto	l1317
  5200  000A06  0A01               	xorlw	1	; case 3
  5201  000A08  B4D8               	btfsc	status,2,c
  5202  000A0A  D6BE               	goto	l1330
  5203  000A0C  0A06               	xorlw	6	; case 5
  5204  000A0E  B4D8               	btfsc	status,2,c
  5205  000A10  D6D2               	goto	l1331
  5206  000A12  0A03               	xorlw	3	; case 6
  5207  000A14  B4D8               	btfsc	status,2,c
  5208  000A16  D714               	goto	l1332
  5209  000A18  0A0E               	xorlw	14	; case 8
  5210  000A1A  B4D8               	btfsc	status,2,c
  5211  000A1C  D754               	goto	l1333
  5212  000A1E  0A01               	xorlw	1	; case 9
  5213  000A20  B4D8               	btfsc	status,2,c
  5214  000A22  D79D               	goto	l1334
  5215  000A24  0A03               	xorlw	3	; case 10
  5216  000A26  B4D8               	btfsc	status,2,c
  5217  000A28  D7A6               	goto	l1335
  5218  000A2A  0A01               	xorlw	1	; case 11
  5219  000A2C  B4D8               	btfsc	status,2,c
  5220  000A2E  D7A6               	goto	l1336
  5221  000A30  D7DB               	goto	l1337
  5222  000A32                     l1311:
  5223                           
  5224                           ;main.c: 284: if (menu == 1 | menu == 2 | menu == 3) {
  5225                           
  5226                           ; BSR set to: 0
  5227  000A32  0100               	movlb	0	; () banked
  5228  000A34  05FD               	decf	_menu& (0+255),w,b
  5229  000A36  B4D8               	btfsc	status,2,c
  5230  000A38  D008               	goto	u14430
  5231                           
  5232                           ; BSR set to: 0
  5233  000A3A  0E02               	movlw	2
  5234  000A3C  19FD               	xorwf	_menu& (0+255),w,b
  5235  000A3E  B4D8               	btfsc	status,2,c
  5236  000A40  D004               	goto	u14430
  5237                           
  5238                           ; BSR set to: 0
  5239  000A42  0E03               	movlw	3
  5240  000A44  19FD               	xorwf	_menu& (0+255),w,b
  5241  000A46  A4D8               	btfss	status,2,c
  5242  000A48  D1C0               	goto	l1338
  5243  000A4A                     u14430:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;main.c: 285: ajuste_parametro = 0;
  5247                           
  5248                           ; BSR set to: 0
  5249  000A4A  0E00               	movlw	0
  5250  000A4C  6E44               	movwf	_ajuste_parametro,c
  5251                           
  5252                           ;main.c: 287: switch (opcaomenu) {
  5253  000A4E  D186               	goto	l1341
  5254  000A50                     
  5255                           ;main.c: 289: opcaomenu = 10;
  5256                           
  5257                           ; BSR set to: 0
  5258  000A50  0E0A               	movlw	10
  5259  000A52  D180               	goto	L8
  5260  000A54                     
  5261                           ;main.c: 292: menu = 1;
  5262  000A54  0E01               	movlw	1
  5263  000A56  0100               	movlb	0	; () banked
  5264  000A58  6FFD               	movwf	_menu& (0+255),b
  5265                           
  5266                           ;main.c: 293: line1[0] = '>';
  5267  000A5A  0E3E               	movlw	62
  5268  000A5C  0101               	movlb	1	; () banked
  5269  000A5E  6FA5               	movwf	_line1& (0+255),b
  5270                           
  5271                           ; BSR set to: 1
  5272                           ;main.c: 294: if (btPress(64)) setRangeValor('+', &tempajt, 60, 160, 1);
  5273  000A60  0E40               	movlw	64
  5274  000A62  EC5C  F02D         	call	_btPress
  5275  000A66  0900               	iorlw	0
  5276  000A68  B4D8               	btfsc	status,2,c
  5277  000A6A  D00E               	goto	l1345
  5278  000A6C  0EF4               	movlw	low _tempajt
  5279  000A6E  0100               	movlb	0	; () banked
  5280  000A70  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5281  000A72  0E00               	movlw	high _tempajt
  5282  000A74  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5283  000A76  0E3C               	movlw	60
  5284  000A78  6F67               	movwf	setRangeValor@_min& (0+255),b
  5285  000A7A  0EA0               	movlw	160
  5286  000A7C  6F68               	movwf	setRangeValor@_max& (0+255),b
  5287  000A7E  0E01               	movlw	1
  5288  000A80  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5289  000A82  0E2B               	movlw	43
  5290  000A84  EC5B  F027         	call	_setRangeValor
  5291  000A88                     l1345:
  5292                           
  5293                           ;main.c: 295: if (btPress(32)) setRangeValor('-', &tempajt, 60, 160, 1);
  5294  000A88  0E20               	movlw	32
  5295  000A8A  EC5C  F02D         	call	_btPress
  5296  000A8E  0900               	iorlw	0
  5297  000A90  B4D8               	btfsc	status,2,c
  5298  000A92  D187               	goto	l1343
  5299  000A94  0EF4               	movlw	low _tempajt
  5300  000A96  0100               	movlb	0	; () banked
  5301  000A98  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5302  000A9A  0E00               	movlw	high _tempajt
  5303  000A9C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5304  000A9E  0E3C               	movlw	60
  5305  000AA0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5306  000AA2  0EA0               	movlw	160
  5307  000AA4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5308  000AA6  0E01               	movlw	1
  5309  000AA8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5310  000AAA  0E2D               	movlw	45
  5311  000AAC  EC5B  F027         	call	_setRangeValor
  5312                           
  5313                           ;main.c: 296: break;
  5314  000AB0  D178               	goto	l1343
  5315  000AB2                     
  5316                           ;main.c: 298: line2[0] = '>';
  5317  000AB2  0E3E               	movlw	62
  5318  000AB4  0101               	movlb	1	; () banked
  5319  000AB6  6F90               	movwf	_line2& (0+255),b
  5320                           
  5321                           ;main.c: 299: if (tipo_modo_trabalho == 0) {
  5322  000AB8  5059               	movf	_tipo_modo_trabalho,w,c
  5323  000ABA  A4D8               	btfss	status,2,c
  5324  000ABC  D172               	goto	l1343
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;main.c: 300: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5328  000ABE  0E40               	movlw	64
  5329  000AC0  EC5C  F02D         	call	_btPress
  5330  000AC4  0900               	iorlw	0
  5331  000AC6  B4D8               	btfsc	status,2,c
  5332  000AC8  D010               	goto	l1349
  5333  000ACA  0EF3               	movlw	low _umidajt
  5334  000ACC  0100               	movlb	0	; () banked
  5335  000ACE  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5336  000AD0  0E00               	movlw	high _umidajt
  5337  000AD2  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5338  000AD4  0EF4               	movlw	low _tempajt
  5339  000AD6  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5340  000AD8  0E00               	movlw	high _tempajt
  5341  000ADA  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5342  000ADC  0EF5               	movlw	low _clima
  5343  000ADE  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5344  000AE0  0E00               	movlw	high _clima
  5345  000AE2  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5346  000AE4  0E2B               	movlw	43
  5347  000AE6  EC5B  F022         	call	_setUmidade
  5348  000AEA                     l1349:
  5349                           
  5350                           ;main.c: 301: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5351  000AEA  0E20               	movlw	32
  5352  000AEC  EC5C  F02D         	call	_btPress
  5353  000AF0  0900               	iorlw	0
  5354  000AF2  B4D8               	btfsc	status,2,c
  5355  000AF4  D156               	goto	l1343
  5356  000AF6  0EF3               	movlw	low _umidajt
  5357  000AF8  0100               	movlb	0	; () banked
  5358  000AFA  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5359  000AFC  0E00               	movlw	high _umidajt
  5360  000AFE  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5361  000B00  0EF4               	movlw	low _tempajt
  5362  000B02  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5363  000B04  0E00               	movlw	high _tempajt
  5364  000B06  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5365  000B08  0EF5               	movlw	low _clima
  5366  000B0A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5367  000B0C  0E00               	movlw	high _clima
  5368  000B0E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5369  000B10  0E2D               	movlw	45
  5370  000B12  EC5B  F022         	call	_setUmidade
  5371                           
  5372                           ;main.c: 302: }
  5373                           ;main.c: 303: break;
  5374  000B16  D145               	goto	l1343
  5375  000B18                     
  5376                           ;main.c: 305: line3[0] = '>';
  5377  000B18  0E3E               	movlw	62
  5378  000B1A  0101               	movlb	1	; () banked
  5379  000B1C  6F7B               	movwf	_line3& (0+255),b
  5380                           
  5381                           ; BSR set to: 1
  5382                           ;main.c: 306: if (btPress(64)) {
  5383  000B1E  0E40               	movlw	64
  5384  000B20  EC5C  F02D         	call	_btPress
  5385  000B24  0900               	iorlw	0
  5386  000B26  B4D8               	btfsc	status,2,c
  5387  000B28  D02A               	goto	l1352
  5388                           
  5389                           ;main.c: 307: setRangeValor('+', &fase, 1, 4, 4);
  5390  000B2A  0EF6               	movlw	low _fase
  5391  000B2C  0100               	movlb	0	; () banked
  5392  000B2E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5393  000B30  0E00               	movlw	high _fase
  5394  000B32  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5395  000B34  0E01               	movlw	1
  5396  000B36  6F67               	movwf	setRangeValor@_min& (0+255),b
  5397  000B38  0E04               	movlw	4
  5398  000B3A  6F68               	movwf	setRangeValor@_max& (0+255),b
  5399  000B3C  0E04               	movlw	4
  5400  000B3E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5401  000B40  0E2B               	movlw	43
  5402  000B42  EC5B  F027         	call	_setRangeValor
  5403                           
  5404                           ;main.c: 308: faseAtual('A', &fase, &tempajt);
  5405  000B46  0EF6               	movlw	low _fase
  5406  000B48  0100               	movlb	0	; () banked
  5407  000B4A  6F60               	movwf	faseAtual@_fase& (0+255),b
  5408  000B4C  0E00               	movlw	high _fase
  5409  000B4E  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5410  000B50  0EF4               	movlw	low _tempajt
  5411  000B52  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5412  000B54  0E00               	movlw	high _tempajt
  5413  000B56  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5414  000B58  0E41               	movlw	65
  5415  000B5A  ECBC  F021         	call	_faseAtual
  5416                           
  5417                           ;main.c: 309: setUmidade('A', &umidajt, &tempajt, &clima);
  5418  000B5E  0EF3               	movlw	low _umidajt
  5419  000B60  0100               	movlb	0	; () banked
  5420  000B62  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5421  000B64  0E00               	movlw	high _umidajt
  5422  000B66  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5423  000B68  0EF4               	movlw	low _tempajt
  5424  000B6A  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5425  000B6C  0E00               	movlw	high _tempajt
  5426  000B6E  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5427  000B70  0EF5               	movlw	low _clima
  5428  000B72  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5429  000B74  0E00               	movlw	high _clima
  5430  000B76  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5431  000B78  0E41               	movlw	65
  5432  000B7A  EC5B  F022         	call	_setUmidade
  5433  000B7E                     l1352:
  5434                           
  5435                           ;main.c: 310: }
  5436                           ;main.c: 311: if (btPress(32)) {
  5437  000B7E  0E20               	movlw	32
  5438  000B80  EC5C  F02D         	call	_btPress
  5439  000B84  0900               	iorlw	0
  5440  000B86  B4D8               	btfsc	status,2,c
  5441  000B88  D10C               	goto	l1343
  5442                           
  5443                           ;main.c: 312: setRangeValor('-', &fase, 1, 4, 4);
  5444  000B8A  0EF6               	movlw	low _fase
  5445  000B8C  0100               	movlb	0	; () banked
  5446  000B8E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5447  000B90  0E00               	movlw	high _fase
  5448  000B92  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5449  000B94  0E01               	movlw	1
  5450  000B96  6F67               	movwf	setRangeValor@_min& (0+255),b
  5451  000B98  0E04               	movlw	4
  5452  000B9A  6F68               	movwf	setRangeValor@_max& (0+255),b
  5453  000B9C  0E04               	movlw	4
  5454  000B9E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5455  000BA0  0E2D               	movlw	45
  5456  000BA2  EC5B  F027         	call	_setRangeValor
  5457                           
  5458                           ;main.c: 313: faseAtual('A', &fase, &tempajt);
  5459  000BA6  0EF6               	movlw	low _fase
  5460  000BA8  0100               	movlb	0	; () banked
  5461  000BAA  6F60               	movwf	faseAtual@_fase& (0+255),b
  5462  000BAC  0E00               	movlw	high _fase
  5463  000BAE  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5464  000BB0  0EF4               	movlw	low _tempajt
  5465  000BB2  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5466  000BB4  0E00               	movlw	high _tempajt
  5467  000BB6  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5468  000BB8  0E41               	movlw	65
  5469  000BBA  ECBC  F021         	call	_faseAtual
  5470                           
  5471                           ;main.c: 314: setUmidade('A', &umidajt, &tempajt, &clima);
  5472  000BBE  0EF3               	movlw	low _umidajt
  5473  000BC0  0100               	movlb	0	; () banked
  5474  000BC2  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5475  000BC4  0E00               	movlw	high _umidajt
  5476  000BC6  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5477  000BC8  0EF4               	movlw	low _tempajt
  5478  000BCA  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5479  000BCC  0E00               	movlw	high _tempajt
  5480  000BCE  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5481  000BD0  0EF5               	movlw	low _clima
  5482  000BD2  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5483  000BD4  0E00               	movlw	high _clima
  5484  000BD6  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5485  000BD8  0E41               	movlw	65
  5486  000BDA  EC5B  F022         	call	_setUmidade
  5487                           
  5488                           ;main.c: 315: }
  5489                           ;main.c: 316: break;
  5490  000BDE  D0E1               	goto	l1343
  5491  000BE0                     
  5492                           ;main.c: 318: menu = 1;
  5493  000BE0  0E01               	movlw	1
  5494  000BE2  0100               	movlb	0	; () banked
  5495  000BE4  6FFD               	movwf	_menu& (0+255),b
  5496                           
  5497                           ;main.c: 319: line4[0] = '>';
  5498  000BE6  0E3E               	movlw	62
  5499  000BE8  0101               	movlb	1	; () banked
  5500  000BEA  6F66               	movwf	_line4& (0+255),b
  5501                           
  5502                           ; BSR set to: 1
  5503                           ;main.c: 320: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5504  000BEC  0E40               	movlw	64
  5505  000BEE  EC5C  F02D         	call	_btPress
  5506  000BF2  0900               	iorlw	0
  5507  000BF4  B4D8               	btfsc	status,2,c
  5508  000BF6  D00E               	goto	l1355
  5509  000BF8  0EF5               	movlw	low _clima
  5510  000BFA  0100               	movlb	0	; () banked
  5511  000BFC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5512  000BFE  0E00               	movlw	high _clima
  5513  000C00  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5514  000C02  0E01               	movlw	1
  5515  000C04  6F67               	movwf	setRangeValor@_min& (0+255),b
  5516  000C06  0E03               	movlw	3
  5517  000C08  6F68               	movwf	setRangeValor@_max& (0+255),b
  5518  000C0A  0E05               	movlw	5
  5519  000C0C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5520  000C0E  0E2B               	movlw	43
  5521  000C10  EC5B  F027         	call	_setRangeValor
  5522  000C14                     l1355:
  5523                           
  5524                           ;main.c: 321: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5525  000C14  0E20               	movlw	32
  5526  000C16  EC5C  F02D         	call	_btPress
  5527  000C1A  0900               	iorlw	0
  5528  000C1C  B4D8               	btfsc	status,2,c
  5529  000C1E  D0C1               	goto	l1343
  5530  000C20  0EF5               	movlw	low _clima
  5531  000C22  0100               	movlb	0	; () banked
  5532  000C24  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5533  000C26  0E00               	movlw	high _clima
  5534  000C28  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5535  000C2A  0E01               	movlw	1
  5536  000C2C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5537  000C2E  0E03               	movlw	3
  5538  000C30  6F68               	movwf	setRangeValor@_max& (0+255),b
  5539  000C32  0E05               	movlw	5
  5540  000C34  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5541  000C36  0E2D               	movlw	45
  5542  000C38  EC5B  F027         	call	_setRangeValor
  5543                           
  5544                           ;main.c: 322: break;
  5545  000C3C  D0B2               	goto	l1343
  5546  000C3E                     
  5547                           ;main.c: 324: menu = 2;
  5548  000C3E  0E02               	movlw	2
  5549  000C40  0100               	movlb	0	; () banked
  5550  000C42  6FFD               	movwf	_menu& (0+255),b
  5551                           
  5552                           ;main.c: 325: line1[0] = '>';
  5553  000C44  0E3E               	movlw	62
  5554  000C46  0101               	movlb	1	; () banked
  5555  000C48  6FA5               	movwf	_line1& (0+255),b
  5556                           
  5557                           ; BSR set to: 1
  5558                           ;main.c: 326: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5559  000C4A  0E40               	movlw	64
  5560  000C4C  EC5C  F02D         	call	_btPress
  5561  000C50  0900               	iorlw	0
  5562  000C52  A4D8               	btfss	status,2,c
  5563  000C54  D006               	goto	u14540
  5564  000C56  0E20               	movlw	32
  5565  000C58  EC5C  F02D         	call	_btPress
  5566  000C5C  0900               	iorlw	0
  5567  000C5E  B4D8               	btfsc	status,2,c
  5568  000C60  D0A0               	goto	l1343
  5569  000C62                     u14540:
  5570  000C62  0E59               	movlw	low _tipo_modo_trabalho
  5571  000C64  0100               	movlb	0	; () banked
  5572  000C66  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5573  000C68  0E00               	movlw	high _tipo_modo_trabalho
  5574  000C6A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5575  000C6C  0E00               	movlw	0
  5576  000C6E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5577  000C70  0E01               	movlw	1
  5578  000C72  6F68               	movwf	setRangeValor@_max& (0+255),b
  5579  000C74  0E06               	movlw	6
  5580  000C76  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5581  000C78  0E2B               	movlw	43
  5582  000C7A  EC5B  F027         	call	_setRangeValor
  5583                           
  5584                           ;main.c: 327: break;
  5585  000C7E  D091               	goto	l1343
  5586  000C80                     
  5587                           ;main.c: 329: line2[0] = '>';
  5588  000C80  0E3E               	movlw	62
  5589  000C82  0101               	movlb	1	; () banked
  5590  000C84  6F90               	movwf	_line2& (0+255),b
  5591                           
  5592                           ; BSR set to: 1
  5593                           ;main.c: 330: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5594  000C86  0E40               	movlw	64
  5595  000C88  EC5C  F02D         	call	_btPress
  5596  000C8C  0900               	iorlw	0
  5597  000C8E  A4D8               	btfss	status,2,c
  5598  000C90  D006               	goto	u14560
  5599  000C92  0E20               	movlw	32
  5600  000C94  EC5C  F02D         	call	_btPress
  5601  000C98  0900               	iorlw	0
  5602  000C9A  B4D8               	btfsc	status,2,c
  5603  000C9C  D082               	goto	l1343
  5604  000C9E                     u14560:
  5605  000C9E  0EFB               	movlw	low _trava_fase
  5606  000CA0  0100               	movlb	0	; () banked
  5607  000CA2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5608  000CA4  0E00               	movlw	high _trava_fase
  5609  000CA6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5610  000CA8  0E00               	movlw	0
  5611  000CAA  6F67               	movwf	setRangeValor@_min& (0+255),b
  5612  000CAC  0E01               	movlw	1
  5613  000CAE  6F68               	movwf	setRangeValor@_max& (0+255),b
  5614  000CB0  0E03               	movlw	3
  5615  000CB2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5616  000CB4  0E2B               	movlw	43
  5617  000CB6  EC5B  F027         	call	_setRangeValor
  5618                           
  5619                           ;main.c: 331: break;
  5620  000CBA  D073               	goto	l1343
  5621  000CBC                     
  5622                           ;main.c: 333: line3[0] = '>';
  5623  000CBC  0E3E               	movlw	62
  5624  000CBE  0101               	movlb	1	; () banked
  5625  000CC0  6F7B               	movwf	_line3& (0+255),b
  5626                           
  5627                           ; BSR set to: 1
  5628                           ;main.c: 334: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5629  000CC2  0E40               	movlw	64
  5630  000CC4  EC5C  F02D         	call	_btPress
  5631  000CC8  0900               	iorlw	0
  5632  000CCA  A4D8               	btfss	status,2,c
  5633  000CCC  D006               	goto	u14580
  5634  000CCE  0E20               	movlw	32
  5635  000CD0  EC5C  F02D         	call	_btPress
  5636  000CD4  0900               	iorlw	0
  5637  000CD6  B4D8               	btfsc	status,2,c
  5638  000CD8  D064               	goto	l1343
  5639  000CDA                     u14580:
  5640  000CDA  0EFC               	movlw	low _buzzer
  5641  000CDC  0100               	movlb	0	; () banked
  5642  000CDE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5643  000CE0  0E00               	movlw	high _buzzer
  5644  000CE2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5645  000CE4  0E00               	movlw	0
  5646  000CE6  6F67               	movwf	setRangeValor@_min& (0+255),b
  5647  000CE8  0E01               	movlw	1
  5648  000CEA  6F68               	movwf	setRangeValor@_max& (0+255),b
  5649  000CEC  0E0E               	movlw	14
  5650  000CEE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5651  000CF0  0E2B               	movlw	43
  5652  000CF2  EC5B  F027         	call	_setRangeValor
  5653                           
  5654                           ;main.c: 335: break;
  5655  000CF6  D055               	goto	l1343
  5656  000CF8                     
  5657                           ;main.c: 337: menu = 2;
  5658  000CF8  0E02               	movlw	2
  5659  000CFA  0100               	movlb	0	; () banked
  5660  000CFC  6FFD               	movwf	_menu& (0+255),b
  5661                           
  5662                           ;main.c: 338: line4[0] = '>';
  5663  000CFE  0E3E               	movlw	62
  5664  000D00  0101               	movlb	1	; () banked
  5665  000D02  6F66               	movwf	_line4& (0+255),b
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;main.c: 339: if (btPress(2)) menu = 11;
  5669  000D04  0E02               	movlw	2
  5670  000D06  EC5C  F02D         	call	_btPress
  5671  000D0A  0900               	iorlw	0
  5672  000D0C  B4D8               	btfsc	status,2,c
  5673  000D0E  D049               	goto	l1343
  5674  000D10  0E0B               	movlw	11
  5675  000D12  D00D               	goto	L9
  5676  000D14                     
  5677                           ;main.c: 342: menu = 3;
  5678                           
  5679                           ; BSR set to: 0
  5680  000D14  0E03               	movlw	3
  5681  000D16  0100               	movlb	0	; () banked
  5682  000D18  6FFD               	movwf	_menu& (0+255),b
  5683                           
  5684                           ;main.c: 343: line1[0] = '>';
  5685  000D1A  0E3E               	movlw	62
  5686  000D1C  0101               	movlb	1	; () banked
  5687  000D1E  6FA5               	movwf	_line1& (0+255),b
  5688                           
  5689                           ; BSR set to: 1
  5690                           ;main.c: 344: if (btPress(2)) menu = 8;
  5691  000D20  0E02               	movlw	2
  5692  000D22  EC5C  F02D         	call	_btPress
  5693  000D26  0900               	iorlw	0
  5694  000D28  B4D8               	btfsc	status,2,c
  5695  000D2A  D03B               	goto	l1343
  5696  000D2C  0E08               	movlw	8
  5697  000D2E                     L9:
  5698  000D2E  0100               	movlb	0	; () banked
  5699  000D30  6FFD               	movwf	_menu& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;main.c: 345: break;
  5703  000D32  D037               	goto	l1343
  5704  000D34                     
  5705                           ;main.c: 347: menu = 3;
  5706                           
  5707                           ; BSR set to: 0
  5708  000D34  0E03               	movlw	3
  5709  000D36  0100               	movlb	0	; () banked
  5710  000D38  6FFD               	movwf	_menu& (0+255),b
  5711                           
  5712                           ;main.c: 348: line2[0] = '>';
  5713  000D3A  0E3E               	movlw	62
  5714  000D3C  0101               	movlb	1	; () banked
  5715  000D3E  6F90               	movwf	_line2& (0+255),b
  5716                           
  5717                           ; BSR set to: 1
  5718                           ;main.c: 349: if (btPress(2)) {
  5719  000D40  0E02               	movlw	2
  5720  000D42  EC5C  F02D         	call	_btPress
  5721  000D46  0900               	iorlw	0
  5722  000D48  B4D8               	btfsc	status,2,c
  5723  000D4A  D02B               	goto	l1343
  5724                           
  5725                           ;main.c: 350: menu = 5;
  5726  000D4C  0E05               	movlw	5
  5727  000D4E  0100               	movlb	0	; () banked
  5728  000D50  6FFD               	movwf	_menu& (0+255),b
  5729  000D52  D002               	goto	l1375
  5730  000D54                     L8:
  5731  000D54  6E45               	movwf	_opcaomenu,c
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;main.c: 352: }
  5735                           ;main.c: 353: break;
  5736  000D56  D025               	goto	l1343
  5737  000D58                     l1375:
  5738                           
  5739                           ;main.c: 355: opcaomenu = 1;
  5740                           
  5741                           ; BSR set to: 0
  5742  000D58  0E01               	movlw	1
  5743  000D5A  D7FC               	goto	L8
  5744  000D5C                     l1341:
  5745  000D5C  5045               	movf	_opcaomenu,w,c
  5746                           
  5747                           ; Switch size 1, requested type "space"
  5748                           ; Number of cases is 11, Range of values is 0 to 10
  5749                           ; switch strategies available:
  5750                           ; Name         Instructions Cycles
  5751                           ; simple_byte           34    18 (average)
  5752                           ;	Chosen strategy is simple_byte
  5753  000D5E  0A00               	xorlw	0	; case 0
  5754  000D60  B4D8               	btfsc	status,2,c
  5755  000D62  D676               	goto	l1342
  5756  000D64  0A01               	xorlw	1	; case 1
  5757  000D66  B4D8               	btfsc	status,2,c
  5758  000D68  D675               	goto	l1344
  5759  000D6A  0A03               	xorlw	3	; case 2
  5760  000D6C  B4D8               	btfsc	status,2,c
  5761  000D6E  D6A1               	goto	l1347
  5762  000D70  0A01               	xorlw	1	; case 3
  5763  000D72  B4D8               	btfsc	status,2,c
  5764  000D74  D6D1               	goto	l1351
  5765  000D76  0A07               	xorlw	7	; case 4
  5766  000D78  B4D8               	btfsc	status,2,c
  5767  000D7A  D732               	goto	l1354
  5768  000D7C  0A01               	xorlw	1	; case 5
  5769  000D7E  B4D8               	btfsc	status,2,c
  5770  000D80  D75E               	goto	l1357
  5771  000D82  0A03               	xorlw	3	; case 6
  5772  000D84  B4D8               	btfsc	status,2,c
  5773  000D86  D77C               	goto	l1361
  5774  000D88  0A01               	xorlw	1	; case 7
  5775  000D8A  B4D8               	btfsc	status,2,c
  5776  000D8C  D797               	goto	l1365
  5777  000D8E  0A0F               	xorlw	15	; case 8
  5778  000D90  B4D8               	btfsc	status,2,c
  5779  000D92  D7B2               	goto	l1369
  5780  000D94  0A01               	xorlw	1	; case 9
  5781  000D96  B4D8               	btfsc	status,2,c
  5782  000D98  D7BD               	goto	l1371
  5783  000D9A  0A03               	xorlw	3	; case 10
  5784  000D9C  B4D8               	btfsc	status,2,c
  5785  000D9E  D7CA               	goto	l1373
  5786  000DA0  D7DB               	goto	l1375
  5787  000DA2                     l1343:
  5788                           
  5789                           ;main.c: 359: if (btPress(16)) opcaomenu++;
  5790  000DA2  0E10               	movlw	16
  5791  000DA4  EC5C  F02D         	call	_btPress
  5792  000DA8  0900               	iorlw	0
  5793  000DAA  A4D8               	btfss	status,2,c
  5794  000DAC  2A45               	incf	_opcaomenu,f,c
  5795                           
  5796                           ;main.c: 360: if (btPress(1)) opcaomenu--;
  5797  000DAE  0E01               	movlw	1
  5798  000DB0  EC5C  F02D         	call	_btPress
  5799  000DB4  0900               	iorlw	0
  5800  000DB6  A4D8               	btfss	status,2,c
  5801  000DB8  0645               	decf	_opcaomenu,f,c
  5802                           
  5803                           ;main.c: 361: if (btPress(8)) menu = 0;
  5804  000DBA  0E08               	movlw	8
  5805  000DBC  EC5C  F02D         	call	_btPress
  5806  000DC0  0900               	iorlw	0
  5807  000DC2  B4D8               	btfsc	status,2,c
  5808  000DC4  D3F4               	goto	l1464
  5809  000DC6  0E00               	movlw	0
  5810  000DC8  D3F0               	goto	L11
  5811  000DCA                     l1338:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;main.c: 366: if (menu == 5 | menu == 6) {
  5815                           
  5816                           ; BSR set to: 0
  5817  000DCA  0E05               	movlw	5
  5818  000DCC  19FD               	xorwf	_menu& (0+255),w,b
  5819  000DCE  B4D8               	btfsc	status,2,c
  5820  000DD0  D004               	goto	u14660
  5821                           
  5822                           ; BSR set to: 0
  5823  000DD2  0E06               	movlw	6
  5824  000DD4  19FD               	xorwf	_menu& (0+255),w,b
  5825  000DD6  A4D8               	btfss	status,2,c
  5826  000DD8  D2EE               	goto	l1380
  5827  000DDA                     u14660:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;main.c: 367: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  5831                           
  5832                           ; BSR set to: 0
  5833  000DDA  0E30               	movlw	48
  5834  000DDC  184D               	xorwf	_senha_desbloqueio_func,w,c
  5835  000DDE  B4D8               	btfsc	status,2,c
  5836  000DE0  D2A3               	goto	l1384
  5837                           
  5838                           ; BSR set to: 0
  5839  000DE2  0E01               	movlw	1
  5840  000DE4  6E45               	movwf	_opcaomenu,c
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;main.c: 368: switch (opcaomenu) {
  5844  000DE6  D2A0               	goto	l1384
  5845  000DE8                     
  5846                           ;main.c: 370: menu = 5;
  5847                           
  5848                           ; BSR set to: 0
  5849  000DE8  0E05               	movlw	5
  5850  000DEA  0100               	movlb	0	; () banked
  5851  000DEC  6FFD               	movwf	_menu& (0+255),b
  5852                           
  5853                           ;main.c: 371: line1[0] = '>';
  5854  000DEE  0E3E               	movlw	62
  5855  000DF0  0101               	movlb	1	; () banked
  5856  000DF2  6FA5               	movwf	_line1& (0+255),b
  5857                           
  5858                           ; BSR set to: 1
  5859                           ;main.c: 372: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  5860  000DF4  0E40               	movlw	64
  5861  000DF6  EC5C  F02D         	call	_btPress
  5862  000DFA  0900               	iorlw	0
  5863  000DFC  B4D8               	btfsc	status,2,c
  5864  000DFE  D00E               	goto	l1386
  5865  000E00  0E4D               	movlw	low _senha_desbloqueio_func
  5866  000E02  0100               	movlb	0	; () banked
  5867  000E04  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5868  000E06  0E00               	movlw	high _senha_desbloqueio_func
  5869  000E08  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5870  000E0A  0E00               	movlw	0
  5871  000E0C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5872  000E0E  0E32               	movlw	50
  5873  000E10  6F68               	movwf	setRangeValor@_max& (0+255),b
  5874  000E12  0E00               	movlw	0
  5875  000E14  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5876  000E16  0E2B               	movlw	43
  5877  000E18  EC5B  F027         	call	_setRangeValor
  5878  000E1C                     l1386:
  5879                           
  5880                           ;main.c: 373: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  5881  000E1C  0E20               	movlw	32
  5882  000E1E  EC5C  F02D         	call	_btPress
  5883  000E22  0900               	iorlw	0
  5884  000E24  B4D8               	btfsc	status,2,c
  5885  000E26  D2AF               	goto	l1388
  5886  000E28  0E4D               	movlw	low _senha_desbloqueio_func
  5887  000E2A  0100               	movlb	0	; () banked
  5888  000E2C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5889  000E2E  0E00               	movlw	high _senha_desbloqueio_func
  5890  000E30  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5891  000E32  0E00               	movlw	0
  5892  000E34  6F67               	movwf	setRangeValor@_min& (0+255),b
  5893  000E36  0E32               	movlw	50
  5894  000E38  6F68               	movwf	setRangeValor@_max& (0+255),b
  5895  000E3A  0E00               	movlw	0
  5896  000E3C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5897  000E3E  0E2D               	movlw	45
  5898  000E40  EC5B  F027         	call	_setRangeValor
  5899                           
  5900                           ;main.c: 374: break;
  5901  000E44  D2A0               	goto	l1388
  5902  000E46                     
  5903                           ;main.c: 376: line2[0] = '>';
  5904  000E46  0E3E               	movlw	62
  5905  000E48  0101               	movlb	1	; () banked
  5906  000E4A  6F90               	movwf	_line2& (0+255),b
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;main.c: 377: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  5910  000E4C  0E40               	movlw	64
  5911  000E4E  EC5C  F02D         	call	_btPress
  5912  000E52  0900               	iorlw	0
  5913  000E54  B4D8               	btfsc	status,2,c
  5914  000E56  D00E               	goto	l1390
  5915  000E58  0EFA               	movlw	low _tipo_sensor_umidade
  5916  000E5A  0100               	movlb	0	; () banked
  5917  000E5C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5918  000E5E  0E00               	movlw	high _tipo_sensor_umidade
  5919  000E60  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5920  000E62  0E00               	movlw	0
  5921  000E64  6F67               	movwf	setRangeValor@_min& (0+255),b
  5922  000E66  0E01               	movlw	1
  5923  000E68  6F68               	movwf	setRangeValor@_max& (0+255),b
  5924  000E6A  0E07               	movlw	7
  5925  000E6C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5926  000E6E  0E2B               	movlw	43
  5927  000E70  EC5B  F027         	call	_setRangeValor
  5928  000E74                     l1390:
  5929                           
  5930                           ;main.c: 378: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  5931  000E74  0E20               	movlw	32
  5932  000E76  EC5C  F02D         	call	_btPress
  5933  000E7A  0900               	iorlw	0
  5934  000E7C  B4D8               	btfsc	status,2,c
  5935  000E7E  D283               	goto	l1388
  5936  000E80  0EFA               	movlw	low _tipo_sensor_umidade
  5937  000E82  0100               	movlb	0	; () banked
  5938  000E84  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5939  000E86  0E00               	movlw	high _tipo_sensor_umidade
  5940  000E88  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5941  000E8A  0E00               	movlw	0
  5942  000E8C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5943  000E8E  0E01               	movlw	1
  5944  000E90  6F68               	movwf	setRangeValor@_max& (0+255),b
  5945  000E92  0E07               	movlw	7
  5946  000E94  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5947  000E96  0E2D               	movlw	45
  5948  000E98  EC5B  F027         	call	_setRangeValor
  5949                           
  5950                           ;main.c: 379: break;
  5951  000E9C  D274               	goto	l1388
  5952  000E9E                     
  5953                           ;main.c: 381: line3[0] = '>';
  5954  000E9E  0E3E               	movlw	62
  5955  000EA0  0101               	movlb	1	; () banked
  5956  000EA2  6F7B               	movwf	_line3& (0+255),b
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;main.c: 382: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  5960  000EA4  0E40               	movlw	64
  5961  000EA6  EC5C  F02D         	call	_btPress
  5962  000EAA  0900               	iorlw	0
  5963  000EAC  B4D8               	btfsc	status,2,c
  5964  000EAE  D00E               	goto	l1393
  5965  000EB0  0E52               	movlw	low _h_abafador
  5966  000EB2  0100               	movlb	0	; () banked
  5967  000EB4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5968  000EB6  0E00               	movlw	high _h_abafador
  5969  000EB8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5970  000EBA  0E01               	movlw	1
  5971  000EBC  6F67               	movwf	setRangeValor@_min& (0+255),b
  5972  000EBE  0E0A               	movlw	10
  5973  000EC0  6F68               	movwf	setRangeValor@_max& (0+255),b
  5974  000EC2  0E0C               	movlw	12
  5975  000EC4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5976  000EC6  0E2B               	movlw	43
  5977  000EC8  EC5B  F027         	call	_setRangeValor
  5978  000ECC                     l1393:
  5979                           
  5980                           ;main.c: 383: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  5981  000ECC  0E20               	movlw	32
  5982  000ECE  EC5C  F02D         	call	_btPress
  5983  000ED2  0900               	iorlw	0
  5984  000ED4  B4D8               	btfsc	status,2,c
  5985  000ED6  D257               	goto	l1388
  5986  000ED8  0E52               	movlw	low _h_abafador
  5987  000EDA  0100               	movlb	0	; () banked
  5988  000EDC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5989  000EDE  0E00               	movlw	high _h_abafador
  5990  000EE0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5991  000EE2  0E01               	movlw	1
  5992  000EE4  6F67               	movwf	setRangeValor@_min& (0+255),b
  5993  000EE6  0E0A               	movlw	10
  5994  000EE8  6F68               	movwf	setRangeValor@_max& (0+255),b
  5995  000EEA  0E0C               	movlw	12
  5996  000EEC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5997  000EEE  0E2D               	movlw	45
  5998  000EF0  EC5B  F027         	call	_setRangeValor
  5999                           
  6000                           ;main.c: 384: break;
  6001  000EF4  D248               	goto	l1388
  6002  000EF6                     
  6003                           ;main.c: 386: line4[0] = '>';
  6004  000EF6  0E3E               	movlw	62
  6005  000EF8  0101               	movlb	1	; () banked
  6006  000EFA  6F66               	movwf	_line4& (0+255),b
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;main.c: 387: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6010  000EFC  0E40               	movlw	64
  6011  000EFE  EC5C  F02D         	call	_btPress
  6012  000F02  0900               	iorlw	0
  6013  000F04  B4D8               	btfsc	status,2,c
  6014  000F06  D00E               	goto	l1396
  6015  000F08  0E51               	movlw	low _h_flap
  6016  000F0A  0100               	movlb	0	; () banked
  6017  000F0C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6018  000F0E  0E00               	movlw	high _h_flap
  6019  000F10  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6020  000F12  0E01               	movlw	1
  6021  000F14  6F67               	movwf	setRangeValor@_min& (0+255),b
  6022  000F16  0E0A               	movlw	10
  6023  000F18  6F68               	movwf	setRangeValor@_max& (0+255),b
  6024  000F1A  0E0D               	movlw	13
  6025  000F1C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6026  000F1E  0E2B               	movlw	43
  6027  000F20  EC5B  F027         	call	_setRangeValor
  6028  000F24                     l1396:
  6029                           
  6030                           ;main.c: 388: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6031  000F24  0E20               	movlw	32
  6032  000F26  EC5C  F02D         	call	_btPress
  6033  000F2A  0900               	iorlw	0
  6034  000F2C  B4D8               	btfsc	status,2,c
  6035  000F2E  D22B               	goto	l1388
  6036  000F30  0E51               	movlw	low _h_flap
  6037  000F32  0100               	movlb	0	; () banked
  6038  000F34  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6039  000F36  0E00               	movlw	high _h_flap
  6040  000F38  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6041  000F3A  0E01               	movlw	1
  6042  000F3C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6043  000F3E  0E0A               	movlw	10
  6044  000F40  6F68               	movwf	setRangeValor@_max& (0+255),b
  6045  000F42  0E0D               	movlw	13
  6046  000F44  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6047  000F46  0E2D               	movlw	45
  6048  000F48  EC5B  F027         	call	_setRangeValor
  6049                           
  6050                           ;main.c: 389: break;
  6051  000F4C  D21C               	goto	l1388
  6052  000F4E                     
  6053                           ;main.c: 391: line1[11] = '>';
  6054  000F4E  0E3E               	movlw	62
  6055  000F50  0101               	movlb	1	; () banked
  6056  000F52  6FB0               	movwf	(_line1+11)& (0+255),b
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;main.c: 392: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6060  000F54  0E40               	movlw	64
  6061  000F56  EC5C  F02D         	call	_btPress
  6062  000F5A  0900               	iorlw	0
  6063  000F5C  B4D8               	btfsc	status,2,c
  6064  000F5E  D00E               	goto	l1399
  6065  000F60  0E53               	movlw	low _h_venotinha
  6066  000F62  0100               	movlb	0	; () banked
  6067  000F64  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6068  000F66  0E00               	movlw	high _h_venotinha
  6069  000F68  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6070  000F6A  0E01               	movlw	1
  6071  000F6C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6072  000F6E  0E0A               	movlw	10
  6073  000F70  6F68               	movwf	setRangeValor@_max& (0+255),b
  6074  000F72  0E0B               	movlw	11
  6075  000F74  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6076  000F76  0E2B               	movlw	43
  6077  000F78  EC5B  F027         	call	_setRangeValor
  6078  000F7C                     l1399:
  6079                           
  6080                           ;main.c: 393: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6081  000F7C  0E20               	movlw	32
  6082  000F7E  EC5C  F02D         	call	_btPress
  6083  000F82  0900               	iorlw	0
  6084  000F84  B4D8               	btfsc	status,2,c
  6085  000F86  D1FF               	goto	l1388
  6086  000F88  0E53               	movlw	low _h_venotinha
  6087  000F8A  0100               	movlb	0	; () banked
  6088  000F8C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6089  000F8E  0E00               	movlw	high _h_venotinha
  6090  000F90  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6091  000F92  0E01               	movlw	1
  6092  000F94  6F67               	movwf	setRangeValor@_min& (0+255),b
  6093  000F96  0E0A               	movlw	10
  6094  000F98  6F68               	movwf	setRangeValor@_max& (0+255),b
  6095  000F9A  0E0B               	movlw	11
  6096  000F9C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6097  000F9E  0E2D               	movlw	45
  6098  000FA0  EC5B  F027         	call	_setRangeValor
  6099                           
  6100                           ;main.c: 394: break;
  6101  000FA4  D1F0               	goto	l1388
  6102  000FA6                     
  6103                           ;main.c: 396: line2[11] = '>';
  6104  000FA6  0E3E               	movlw	62
  6105  000FA8  0101               	movlb	1	; () banked
  6106  000FAA  6F9B               	movwf	(_line2+11)& (0+255),b
  6107                           
  6108                           ; BSR set to: 1
  6109                           ;main.c: 397: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6110  000FAC  0E40               	movlw	64
  6111  000FAE  EC5C  F02D         	call	_btPress
  6112  000FB2  0900               	iorlw	0
  6113  000FB4  B4D8               	btfsc	status,2,c
  6114  000FB6  D00E               	goto	l1402
  6115  000FB8  0EF7               	movlw	low _h_modo_seguranca
  6116  000FBA  0100               	movlb	0	; () banked
  6117  000FBC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6118  000FBE  0E00               	movlw	high _h_modo_seguranca
  6119  000FC0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6120  000FC2  0E00               	movlw	0
  6121  000FC4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6122  000FC6  0E0F               	movlw	15
  6123  000FC8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6124  000FCA  0E10               	movlw	16
  6125  000FCC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6126  000FCE  0E2B               	movlw	43
  6127  000FD0  EC5B  F027         	call	_setRangeValor
  6128  000FD4                     l1402:
  6129                           
  6130                           ;main.c: 398: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6131  000FD4  0E20               	movlw	32
  6132  000FD6  EC5C  F02D         	call	_btPress
  6133  000FDA  0900               	iorlw	0
  6134  000FDC  B4D8               	btfsc	status,2,c
  6135  000FDE  D1D3               	goto	l1388
  6136  000FE0  0EF7               	movlw	low _h_modo_seguranca
  6137  000FE2  0100               	movlb	0	; () banked
  6138  000FE4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6139  000FE6  0E00               	movlw	high _h_modo_seguranca
  6140  000FE8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6141  000FEA  0E00               	movlw	0
  6142  000FEC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6143  000FEE  0E0F               	movlw	15
  6144  000FF0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6145  000FF2  0E10               	movlw	16
  6146  000FF4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6147  000FF6  0E2D               	movlw	45
  6148  000FF8  EC5B  F027         	call	_setRangeValor
  6149                           
  6150                           ;main.c: 399: break;
  6151  000FFC  D1C4               	goto	l1388
  6152  000FFE                     
  6153                           ;main.c: 401: line3[11] = '>';
  6154  000FFE  0E3E               	movlw	62
  6155  001000  0101               	movlb	1	; () banked
  6156  001002  6F86               	movwf	(_line3+11)& (0+255),b
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;main.c: 402: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6160  001004  0E40               	movlw	64
  6161  001006  EC5C  F02D         	call	_btPress
  6162  00100A  0900               	iorlw	0
  6163  00100C  B4D8               	btfsc	status,2,c
  6164  00100E  D00E               	goto	l1405
  6165  001010  0E50               	movlw	low _h_buzzer
  6166  001012  0100               	movlb	0	; () banked
  6167  001014  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6168  001016  0E00               	movlw	high _h_buzzer
  6169  001018  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6170  00101A  0E01               	movlw	1
  6171  00101C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6172  00101E  0E0F               	movlw	15
  6173  001020  6F68               	movwf	setRangeValor@_max& (0+255),b
  6174  001022  0E11               	movlw	17
  6175  001024  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6176  001026  0E2B               	movlw	43
  6177  001028  EC5B  F027         	call	_setRangeValor
  6178  00102C                     l1405:
  6179                           
  6180                           ;main.c: 403: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6181  00102C  0E20               	movlw	32
  6182  00102E  EC5C  F02D         	call	_btPress
  6183  001032  0900               	iorlw	0
  6184  001034  B4D8               	btfsc	status,2,c
  6185  001036  D1A7               	goto	l1388
  6186  001038  0E50               	movlw	low _h_buzzer
  6187  00103A  0100               	movlb	0	; () banked
  6188  00103C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6189  00103E  0E00               	movlw	high _h_buzzer
  6190  001040  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6191  001042  0E01               	movlw	1
  6192  001044  6F67               	movwf	setRangeValor@_min& (0+255),b
  6193  001046  0E0F               	movlw	15
  6194  001048  6F68               	movwf	setRangeValor@_max& (0+255),b
  6195  00104A  0E11               	movlw	17
  6196  00104C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6197  00104E  0E2D               	movlw	45
  6198  001050  EC5B  F027         	call	_setRangeValor
  6199                           
  6200                           ;main.c: 404: break;
  6201  001054  D198               	goto	l1388
  6202  001056                     
  6203                           ;main.c: 406: menu = 5;
  6204  001056  0E05               	movlw	5
  6205  001058  0100               	movlb	0	; () banked
  6206  00105A  6FFD               	movwf	_menu& (0+255),b
  6207                           
  6208                           ;main.c: 407: line4[11] = '>';
  6209  00105C  0E3E               	movlw	62
  6210  00105E  0101               	movlb	1	; () banked
  6211  001060  6F71               	movwf	(_line4+11)& (0+255),b
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;main.c: 408: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6215  001062  0E40               	movlw	64
  6216  001064  EC5C  F02D         	call	_btPress
  6217  001068  0900               	iorlw	0
  6218  00106A  B4D8               	btfsc	status,2,c
  6219  00106C  D00E               	goto	l1408
  6220  00106E  0E55               	movlw	low _t_flap_ligado
  6221  001070  0100               	movlb	0	; () banked
  6222  001072  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6223  001074  0E00               	movlw	high _t_flap_ligado
  6224  001076  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6225  001078  0E01               	movlw	1
  6226  00107A  6F67               	movwf	setRangeValor@_min& (0+255),b
  6227  00107C  0EFA               	movlw	250
  6228  00107E  6F68               	movwf	setRangeValor@_max& (0+255),b
  6229  001080  0E12               	movlw	18
  6230  001082  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6231  001084  0E2B               	movlw	43
  6232  001086  EC5B  F027         	call	_setRangeValor
  6233  00108A                     l1408:
  6234                           
  6235                           ;main.c: 409: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6236  00108A  0E20               	movlw	32
  6237  00108C  EC5C  F02D         	call	_btPress
  6238  001090  0900               	iorlw	0
  6239  001092  B4D8               	btfsc	status,2,c
  6240  001094  D178               	goto	l1388
  6241  001096  0E55               	movlw	low _t_flap_ligado
  6242  001098  0100               	movlb	0	; () banked
  6243  00109A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6244  00109C  0E00               	movlw	high _t_flap_ligado
  6245  00109E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6246  0010A0  0E01               	movlw	1
  6247  0010A2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6248  0010A4  0EFA               	movlw	250
  6249  0010A6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6250  0010A8  0E12               	movlw	18
  6251  0010AA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6252  0010AC  0E2D               	movlw	45
  6253  0010AE  EC5B  F027         	call	_setRangeValor
  6254                           
  6255                           ;main.c: 410: break;
  6256  0010B2  D169               	goto	l1388
  6257  0010B4                     
  6258                           ;main.c: 412: menu = 6;
  6259  0010B4  0E06               	movlw	6
  6260  0010B6  0100               	movlb	0	; () banked
  6261  0010B8  6FFD               	movwf	_menu& (0+255),b
  6262                           
  6263                           ;main.c: 413: line1[0] = '>';
  6264  0010BA  0E3E               	movlw	62
  6265  0010BC  0101               	movlb	1	; () banked
  6266  0010BE  6FA5               	movwf	_line1& (0+255),b
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;main.c: 414: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6270  0010C0  0E40               	movlw	64
  6271  0010C2  EC5C  F02D         	call	_btPress
  6272  0010C6  0900               	iorlw	0
  6273  0010C8  B4D8               	btfsc	status,2,c
  6274  0010CA  D00E               	goto	l1411
  6275  0010CC  0E54               	movlw	low _t_flap_intervalo
  6276  0010CE  0100               	movlb	0	; () banked
  6277  0010D0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6278  0010D2  0E00               	movlw	high _t_flap_intervalo
  6279  0010D4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6280  0010D6  0E00               	movlw	0
  6281  0010D8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6282  0010DA  0EFA               	movlw	250
  6283  0010DC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6284  0010DE  0E14               	movlw	20
  6285  0010E0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6286  0010E2  0E2B               	movlw	43
  6287  0010E4  EC5B  F027         	call	_setRangeValor
  6288  0010E8                     l1411:
  6289                           
  6290                           ;main.c: 415: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6291  0010E8  0E20               	movlw	32
  6292  0010EA  EC5C  F02D         	call	_btPress
  6293  0010EE  0900               	iorlw	0
  6294  0010F0  B4D8               	btfsc	status,2,c
  6295  0010F2  D149               	goto	l1388
  6296  0010F4  0E54               	movlw	low _t_flap_intervalo
  6297  0010F6  0100               	movlb	0	; () banked
  6298  0010F8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6299  0010FA  0E00               	movlw	high _t_flap_intervalo
  6300  0010FC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6301  0010FE  0E00               	movlw	0
  6302  001100  6F67               	movwf	setRangeValor@_min& (0+255),b
  6303  001102  0EFA               	movlw	250
  6304  001104  6F68               	movwf	setRangeValor@_max& (0+255),b
  6305  001106  0E14               	movlw	20
  6306  001108  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6307  00110A  0E2D               	movlw	45
  6308  00110C  EC5B  F027         	call	_setRangeValor
  6309                           
  6310                           ;main.c: 416: break;
  6311  001110  D13A               	goto	l1388
  6312  001112                     
  6313                           ;main.c: 418: line2[0] = '>';
  6314  001112  0E3E               	movlw	62
  6315  001114  0101               	movlb	1	; () banked
  6316  001116  6F90               	movwf	_line2& (0+255),b
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;main.c: 419: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6320  001118  0E40               	movlw	64
  6321  00111A  EC5C  F02D         	call	_btPress
  6322  00111E  0900               	iorlw	0
  6323  001120  B4D8               	btfsc	status,2,c
  6324  001122  D00E               	goto	l1414
  6325  001124  0EFF               	movlw	low _t_buzzer_religar
  6326  001126  0100               	movlb	0	; () banked
  6327  001128  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6328  00112A  0E00               	movlw	high _t_buzzer_religar
  6329  00112C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6330  00112E  0E00               	movlw	0
  6331  001130  6F67               	movwf	setRangeValor@_min& (0+255),b
  6332  001132  0E1E               	movlw	30
  6333  001134  6F68               	movwf	setRangeValor@_max& (0+255),b
  6334  001136  0E15               	movlw	21
  6335  001138  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6336  00113A  0E2B               	movlw	43
  6337  00113C  EC5B  F027         	call	_setRangeValor
  6338  001140                     l1414:
  6339                           
  6340                           ;main.c: 420: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6341  001140  0E20               	movlw	32
  6342  001142  EC5C  F02D         	call	_btPress
  6343  001146  0900               	iorlw	0
  6344  001148  B4D8               	btfsc	status,2,c
  6345  00114A  D11D               	goto	l1388
  6346  00114C  0EFF               	movlw	low _t_buzzer_religar
  6347  00114E  0100               	movlb	0	; () banked
  6348  001150  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6349  001152  0E00               	movlw	high _t_buzzer_religar
  6350  001154  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6351  001156  0E00               	movlw	0
  6352  001158  6F67               	movwf	setRangeValor@_min& (0+255),b
  6353  00115A  0E1E               	movlw	30
  6354  00115C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6355  00115E  0E15               	movlw	21
  6356  001160  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6357  001162  0E2D               	movlw	45
  6358  001164  EC5B  F027         	call	_setRangeValor
  6359                           
  6360                           ;main.c: 421: break;
  6361  001168  D10E               	goto	l1388
  6362  00116A                     
  6363                           ;main.c: 423: line3[0] = '>';
  6364  00116A  0E3E               	movlw	62
  6365  00116C  0101               	movlb	1	; () banked
  6366  00116E  6F7B               	movwf	_line3& (0+255),b
  6367                           
  6368                           ; BSR set to: 1
  6369                           ;main.c: 424: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6370  001170  0E40               	movlw	64
  6371  001172  EC5C  F02D         	call	_btPress
  6372  001176  0900               	iorlw	0
  6373  001178  B4D8               	btfsc	status,2,c
  6374  00117A  D00E               	goto	l1417
  6375  00117C  0EF9               	movlw	low _t_temp_automatica
  6376  00117E  0100               	movlb	0	; () banked
  6377  001180  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6378  001182  0E00               	movlw	high _t_temp_automatica
  6379  001184  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6380  001186  0E00               	movlw	0
  6381  001188  6F67               	movwf	setRangeValor@_min& (0+255),b
  6382  00118A  0EFA               	movlw	250
  6383  00118C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6384  00118E  0E16               	movlw	22
  6385  001190  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6386  001192  0E2B               	movlw	43
  6387  001194  EC5B  F027         	call	_setRangeValor
  6388  001198                     l1417:
  6389                           
  6390                           ;main.c: 425: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6391  001198  0E20               	movlw	32
  6392  00119A  EC5C  F02D         	call	_btPress
  6393  00119E  0900               	iorlw	0
  6394  0011A0  B4D8               	btfsc	status,2,c
  6395  0011A2  D0F1               	goto	l1388
  6396  0011A4  0EF9               	movlw	low _t_temp_automatica
  6397  0011A6  0100               	movlb	0	; () banked
  6398  0011A8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6399  0011AA  0E00               	movlw	high _t_temp_automatica
  6400  0011AC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6401  0011AE  0E00               	movlw	0
  6402  0011B0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6403  0011B2  0EFA               	movlw	250
  6404  0011B4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6405  0011B6  0E16               	movlw	22
  6406  0011B8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6407  0011BA  0E2D               	movlw	45
  6408  0011BC  EC5B  F027         	call	_setRangeValor
  6409                           
  6410                           ;main.c: 426: break;
  6411  0011C0  D0E2               	goto	l1388
  6412  0011C2                     
  6413                           ;main.c: 428: line4[0] = '>';
  6414  0011C2  0E3E               	movlw	62
  6415  0011C4  0101               	movlb	1	; () banked
  6416  0011C6  6F66               	movwf	_line4& (0+255),b
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;main.c: 429: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6420  0011C8  0E40               	movlw	64
  6421  0011CA  EC5C  F02D         	call	_btPress
  6422  0011CE  0900               	iorlw	0
  6423  0011D0  B4D8               	btfsc	status,2,c
  6424  0011D2  D00E               	goto	l1420
  6425  0011D4  0E4E               	movlw	low _wifi_habilita_alteracao
  6426  0011D6  0100               	movlb	0	; () banked
  6427  0011D8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6428  0011DA  0E00               	movlw	high _wifi_habilita_alteracao
  6429  0011DC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6430  0011DE  0E00               	movlw	0
  6431  0011E0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6432  0011E2  0E01               	movlw	1
  6433  0011E4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6434  0011E6  0E17               	movlw	23
  6435  0011E8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6436  0011EA  0E2B               	movlw	43
  6437  0011EC  EC5B  F027         	call	_setRangeValor
  6438  0011F0                     l1420:
  6439                           
  6440                           ;main.c: 430: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6441  0011F0  0E20               	movlw	32
  6442  0011F2  EC5C  F02D         	call	_btPress
  6443  0011F6  0900               	iorlw	0
  6444  0011F8  B4D8               	btfsc	status,2,c
  6445  0011FA  D0C5               	goto	l1388
  6446  0011FC  0E4E               	movlw	low _wifi_habilita_alteracao
  6447  0011FE  0100               	movlb	0	; () banked
  6448  001200  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6449  001202  0E00               	movlw	high _wifi_habilita_alteracao
  6450  001204  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6451  001206  0E00               	movlw	0
  6452  001208  6F67               	movwf	setRangeValor@_min& (0+255),b
  6453  00120A  0E01               	movlw	1
  6454  00120C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6455  00120E  0E17               	movlw	23
  6456  001210  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6457  001212  0E2D               	movlw	45
  6458  001214  EC5B  F027         	call	_setRangeValor
  6459                           
  6460                           ;main.c: 431: break;
  6461  001218  D0B6               	goto	l1388
  6462  00121A                     
  6463                           ;main.c: 433: line1[11] = '>';
  6464  00121A  0E3E               	movlw	62
  6465  00121C  0101               	movlb	1	; () banked
  6466  00121E  6FB0               	movwf	(_line1+11)& (0+255),b
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;main.c: 434: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6470  001220  0E40               	movlw	64
  6471  001222  EC5C  F02D         	call	_btPress
  6472  001226  0900               	iorlw	0
  6473  001228  B4D8               	btfsc	status,2,c
  6474  00122A  D00E               	goto	l1423
  6475  00122C  0E4B               	movlw	low _wifi_SENHA
  6476  00122E  0100               	movlb	0	; () banked
  6477  001230  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6478  001232  0E00               	movlw	high _wifi_SENHA
  6479  001234  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6480  001236  0E01               	movlw	1
  6481  001238  6F67               	movwf	setRangeValor@_min& (0+255),b
  6482  00123A  0EFA               	movlw	250
  6483  00123C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6484  00123E  0E19               	movlw	25
  6485  001240  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6486  001242  0E2B               	movlw	43
  6487  001244  EC5B  F027         	call	_setRangeValor
  6488  001248                     l1423:
  6489                           
  6490                           ;main.c: 435: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6491  001248  0E20               	movlw	32
  6492  00124A  EC5C  F02D         	call	_btPress
  6493  00124E  0900               	iorlw	0
  6494  001250  B4D8               	btfsc	status,2,c
  6495  001252  D099               	goto	l1388
  6496  001254  0E4B               	movlw	low _wifi_SENHA
  6497  001256  0100               	movlb	0	; () banked
  6498  001258  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6499  00125A  0E00               	movlw	high _wifi_SENHA
  6500  00125C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6501  00125E  0E01               	movlw	1
  6502  001260  6F67               	movwf	setRangeValor@_min& (0+255),b
  6503  001262  0EFA               	movlw	250
  6504  001264  6F68               	movwf	setRangeValor@_max& (0+255),b
  6505  001266  0E19               	movlw	25
  6506  001268  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6507  00126A  0E2D               	movlw	45
  6508  00126C  EC5B  F027         	call	_setRangeValor
  6509                           
  6510                           ;main.c: 436: break;
  6511  001270  D08A               	goto	l1388
  6512  001272                     
  6513                           ;main.c: 438: line2[11] = '>';
  6514  001272  0E3E               	movlw	62
  6515  001274  0101               	movlb	1	; () banked
  6516  001276  6F9B               	movwf	(_line2+11)& (0+255),b
  6517                           
  6518                           ; BSR set to: 1
  6519                           ;main.c: 439: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6520  001278  0E40               	movlw	64
  6521  00127A  EC5C  F02D         	call	_btPress
  6522  00127E  0900               	iorlw	0
  6523  001280  B4D8               	btfsc	status,2,c
  6524  001282  D00E               	goto	l1426
  6525  001284  0E4F               	movlw	low _h_subir_temp_automatica
  6526  001286  0100               	movlb	0	; () banked
  6527  001288  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6528  00128A  0E00               	movlw	high _h_subir_temp_automatica
  6529  00128C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6530  00128E  0E00               	movlw	0
  6531  001290  6F67               	movwf	setRangeValor@_min& (0+255),b
  6532  001292  0E0F               	movlw	15
  6533  001294  6F68               	movwf	setRangeValor@_max& (0+255),b
  6534  001296  0E1B               	movlw	27
  6535  001298  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6536  00129A  0E2B               	movlw	43
  6537  00129C  EC5B  F027         	call	_setRangeValor
  6538  0012A0                     l1426:
  6539                           
  6540                           ;main.c: 440: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6541  0012A0  0E20               	movlw	32
  6542  0012A2  EC5C  F02D         	call	_btPress
  6543  0012A6  0900               	iorlw	0
  6544  0012A8  B4D8               	btfsc	status,2,c
  6545  0012AA  D06D               	goto	l1388
  6546  0012AC  0E4F               	movlw	low _h_subir_temp_automatica
  6547  0012AE  0100               	movlb	0	; () banked
  6548  0012B0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6549  0012B2  0E00               	movlw	high _h_subir_temp_automatica
  6550  0012B4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6551  0012B6  0E00               	movlw	0
  6552  0012B8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6553  0012BA  0E0F               	movlw	15
  6554  0012BC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6555  0012BE  0E1B               	movlw	27
  6556  0012C0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6557  0012C2  0E2D               	movlw	45
  6558  0012C4  EC5B  F027         	call	_setRangeValor
  6559                           
  6560                           ;main.c: 441: break;
  6561  0012C8  D05E               	goto	l1388
  6562  0012CA                     
  6563                           ;main.c: 443: line3[11] = '>';
  6564  0012CA  0E3E               	movlw	62
  6565  0012CC  0101               	movlb	1	; () banked
  6566  0012CE  6F86               	movwf	(_line3+11)& (0+255),b
  6567                           
  6568                           ; BSR set to: 1
  6569                           ;main.c: 444: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6570  0012D0  0E40               	movlw	64
  6571  0012D2  EC5C  F02D         	call	_btPress
  6572  0012D6  0900               	iorlw	0
  6573  0012D8  B4D8               	btfsc	status,2,c
  6574  0012DA  D00E               	goto	l1429
  6575  0012DC  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6576  0012DE  0100               	movlb	0	; () banked
  6577  0012E0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6578  0012E2  0E00               	movlw	high _t_religar_ventoinha_automatica
  6579  0012E4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6580  0012E6  0E00               	movlw	0
  6581  0012E8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6582  0012EA  0E3C               	movlw	60
  6583  0012EC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6584  0012EE  0E1C               	movlw	28
  6585  0012F0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6586  0012F2  0E2B               	movlw	43
  6587  0012F4  EC5B  F027         	call	_setRangeValor
  6588  0012F8                     l1429:
  6589                           
  6590                           ;main.c: 445: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6591  0012F8  0E20               	movlw	32
  6592  0012FA  EC5C  F02D         	call	_btPress
  6593  0012FE  0900               	iorlw	0
  6594  001300  B4D8               	btfsc	status,2,c
  6595  001302  D041               	goto	l1388
  6596  001304  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6597  001306  0100               	movlb	0	; () banked
  6598  001308  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6599  00130A  0E00               	movlw	high _t_religar_ventoinha_automatica
  6600  00130C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6601  00130E  0E00               	movlw	0
  6602  001310  6F67               	movwf	setRangeValor@_min& (0+255),b
  6603  001312  0E3C               	movlw	60
  6604  001314  6F68               	movwf	setRangeValor@_max& (0+255),b
  6605  001316  0E1C               	movlw	28
  6606  001318  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6607  00131A  0E2D               	movlw	45
  6608  00131C  EC5B  F027         	call	_setRangeValor
  6609                           
  6610                           ;main.c: 446: break;
  6611  001320  D032               	goto	l1388
  6612  001322  0E01               	movlw	1
  6613  001324  6E45               	movwf	_opcaomenu,c
  6614                           
  6615                           ;main.c: 448: }
  6616  001326  D02F               	goto	l1388
  6617  001328                     l1384:
  6618  001328  5045               	movf	_opcaomenu,w,c
  6619                           
  6620                           ; Switch size 1, requested type "space"
  6621                           ; Number of cases is 15, Range of values is 1 to 15
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte           46    24 (average)
  6625                           ;	Chosen strategy is simple_byte
  6626  00132A  0A01               	xorlw	1	; case 1
  6627  00132C  B4D8               	btfsc	status,2,c
  6628  00132E  D55C               	goto	l1385
  6629  001330  0A03               	xorlw	3	; case 2
  6630  001332  B4D8               	btfsc	status,2,c
  6631  001334  D588               	goto	l1389
  6632  001336  0A01               	xorlw	1	; case 3
  6633  001338  B4D8               	btfsc	status,2,c
  6634  00133A  D5B1               	goto	l1392
  6635  00133C  0A07               	xorlw	7	; case 4
  6636  00133E  B4D8               	btfsc	status,2,c
  6637  001340  D5DA               	goto	l1395
  6638  001342  0A01               	xorlw	1	; case 5
  6639  001344  B4D8               	btfsc	status,2,c
  6640  001346  D603               	goto	l1398
  6641  001348  0A03               	xorlw	3	; case 6
  6642  00134A  B4D8               	btfsc	status,2,c
  6643  00134C  D62C               	goto	l1401
  6644  00134E  0A01               	xorlw	1	; case 7
  6645  001350  B4D8               	btfsc	status,2,c
  6646  001352  D655               	goto	l1404
  6647  001354  0A0F               	xorlw	15	; case 8
  6648  001356  B4D8               	btfsc	status,2,c
  6649  001358  D67E               	goto	l1407
  6650  00135A  0A01               	xorlw	1	; case 9
  6651  00135C  B4D8               	btfsc	status,2,c
  6652  00135E  D6AA               	goto	l1410
  6653  001360  0A03               	xorlw	3	; case 10
  6654  001362  B4D8               	btfsc	status,2,c
  6655  001364  D6D6               	goto	l1413
  6656  001366  0A01               	xorlw	1	; case 11
  6657  001368  B4D8               	btfsc	status,2,c
  6658  00136A  D6FF               	goto	l1416
  6659  00136C  0A07               	xorlw	7	; case 12
  6660  00136E  B4D8               	btfsc	status,2,c
  6661  001370  D728               	goto	l1419
  6662  001372  0A01               	xorlw	1	; case 13
  6663  001374  B4D8               	btfsc	status,2,c
  6664  001376  D751               	goto	l1422
  6665  001378  0A03               	xorlw	3	; case 14
  6666  00137A  B4D8               	btfsc	status,2,c
  6667  00137C  D77A               	goto	l1425
  6668  00137E  0A01               	xorlw	1	; case 15
  6669  001380  B4D8               	btfsc	status,2,c
  6670  001382  D7A3               	goto	l1428
  6671  001384  D7CE               	goto	l1431
  6672  001386                     l1388:
  6673                           
  6674                           ;main.c: 449: if (btPress(16)) opcaomenu++;
  6675  001386  0E10               	movlw	16
  6676  001388  EC5C  F02D         	call	_btPress
  6677  00138C  0900               	iorlw	0
  6678  00138E  A4D8               	btfss	status,2,c
  6679  001390  2A45               	incf	_opcaomenu,f,c
  6680                           
  6681                           ;main.c: 450: if (btPress(1)) opcaomenu--;
  6682  001392  0E01               	movlw	1
  6683  001394  EC5C  F02D         	call	_btPress
  6684  001398  0900               	iorlw	0
  6685  00139A  A4D8               	btfss	status,2,c
  6686  00139C  0645               	decf	_opcaomenu,f,c
  6687                           
  6688                           ;main.c: 451: if (btPress(8)) {
  6689  00139E  0E08               	movlw	8
  6690  0013A0  EC5C  F02D         	call	_btPress
  6691  0013A4  0900               	iorlw	0
  6692  0013A6  B4D8               	btfsc	status,2,c
  6693  0013A8  D102               	goto	l1464
  6694                           
  6695                           ;main.c: 452: menu = 0;
  6696  0013AA  0E00               	movlw	0
  6697  0013AC  0100               	movlb	0	; () banked
  6698  0013AE  6FFD               	movwf	_menu& (0+255),b
  6699                           
  6700                           ;main.c: 453: senha_desbloqueio_func = 0;
  6701  0013B0  0E00               	movlw	0
  6702  0013B2  6E4D               	movwf	_senha_desbloqueio_func,c
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;main.c: 454: }
  6706                           ;main.c: 455: } else
  6707  0013B4  D0FC               	goto	l1464
  6708  0013B6                     l1380:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;main.c: 459: if (menu == 8 || menu == 9) {
  6712                           
  6713                           ; BSR set to: 0
  6714  0013B6  0E08               	movlw	8
  6715  0013B8  19FD               	xorwf	_menu& (0+255),w,b
  6716  0013BA  B4D8               	btfsc	status,2,c
  6717  0013BC  D030               	goto	l1439
  6718                           
  6719                           ; BSR set to: 0
  6720  0013BE  0E09               	movlw	9
  6721  0013C0  19FD               	xorwf	_menu& (0+255),w,b
  6722  0013C2  B4D8               	btfsc	status,2,c
  6723  0013C4  D02C               	goto	l1439
  6724  0013C6  D047               	goto	l1436
  6725  0013C8                     
  6726                           ;main.c: 462: menu = 8;
  6727                           
  6728                           ; BSR set to: 0
  6729  0013C8  0E08               	movlw	8
  6730  0013CA  0100               	movlb	0	; () banked
  6731  0013CC  6FFD               	movwf	_menu& (0+255),b
  6732                           
  6733                           ;main.c: 463: break;
  6734  0013CE  D02F               	goto	l1441
  6735  0013D0                     
  6736                           ;main.c: 465: menu = 9;
  6737                           
  6738                           ; BSR set to: 0
  6739  0013D0  0E09               	movlw	9
  6740  0013D2  0100               	movlb	0	; () banked
  6741  0013D4  6FFD               	movwf	_menu& (0+255),b
  6742                           
  6743                           ;main.c: 466: line1[0] = '>';
  6744  0013D6  0E3E               	movlw	62
  6745  0013D8  0101               	movlb	1	; () banked
  6746  0013DA  6FA5               	movwf	_line1& (0+255),b
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;main.c: 467: if (btPress(2)) {
  6750  0013DC  0E02               	movlw	2
  6751  0013DE  EC5C  F02D         	call	_btPress
  6752  0013E2  0900               	iorlw	0
  6753  0013E4  B4D8               	btfsc	status,2,c
  6754  0013E6  D023               	goto	l1441
  6755                           
  6756                           ;main.c: 468: LATAbits.LATA4 = 1;
  6757  0013E8  8889               	bsf	3977,4,c	;volatile
  6758                           
  6759                           ;main.c: 469: delay(100);
  6760  0013EA  0E00               	movlw	0
  6761  0013EC  0100               	movlb	0	; () banked
  6762  0013EE  6F61               	movwf	(delay@x+1)& (0+255),b
  6763  0013F0  0E64               	movlw	100
  6764  0013F2  6F60               	movwf	delay@x& (0+255),b
  6765  0013F4  ECB3  F02C         	call	_delay	;wreg free
  6766                           
  6767                           ;main.c: 470: LATAbits.LATA4 = 0;
  6768  0013F8  9889               	bcf	3977,4,c	;volatile
  6769                           
  6770                           ;main.c: 471: delay(800);
  6771  0013FA  0E03               	movlw	3
  6772  0013FC  0100               	movlb	0	; () banked
  6773  0013FE  6F61               	movwf	(delay@x+1)& (0+255),b
  6774  001400  0E20               	movlw	32
  6775  001402  6F60               	movwf	delay@x& (0+255),b
  6776  001404  ECB3  F02C         	call	_delay	;wreg free
  6777                           
  6778                           ;main.c: 472: menu = 10;
  6779  001408  0E0A               	movlw	10
  6780  00140A  0100               	movlb	0	; () banked
  6781  00140C  6FFD               	movwf	_menu& (0+255),b
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;main.c: 473: f_wifi_processo = 0;
  6785  00140E  0E00               	movlw	0
  6786  001410  6E3D               	movwf	_f_wifi_processo,c
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;main.c: 474: t_wifi_restart = 15;
  6790  001412  0E0F               	movlw	15
  6791  001414  6E3E               	movwf	_t_wifi_restart,c
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;main.c: 475: }
  6795                           ;main.c: 476: break;
  6796  001416  D00B               	goto	l1441
  6797  001418                     
  6798                           ;main.c: 478: opcaomenu = 1;
  6799                           
  6800                           ; BSR set to: 0
  6801  001418  0E01               	movlw	1
  6802  00141A  6E45               	movwf	_opcaomenu,c
  6803                           
  6804                           ;main.c: 481: }
  6805                           
  6806                           ;main.c: 480: break;
  6807  00141C  D008               	goto	l1441
  6808  00141E                     l1439:
  6809  00141E  5045               	movf	_opcaomenu,w,c
  6810                           
  6811                           ; Switch size 1, requested type "space"
  6812                           ; Number of cases is 2, Range of values is 1 to 2
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte            7     4 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817  001420  0A01               	xorlw	1	; case 1
  6818  001422  B4D8               	btfsc	status,2,c
  6819  001424  D7D1               	goto	l1440
  6820  001426  0A03               	xorlw	3	; case 2
  6821  001428  B4D8               	btfsc	status,2,c
  6822  00142A  D7D2               	goto	l1442
  6823  00142C  D7F5               	goto	l1444
  6824  00142E                     l1441:
  6825                           
  6826                           ;main.c: 482: if (btPress(16)) opcaomenu++;
  6827  00142E  0E10               	movlw	16
  6828  001430  EC5C  F02D         	call	_btPress
  6829  001434  0900               	iorlw	0
  6830  001436  A4D8               	btfss	status,2,c
  6831  001438  2A45               	incf	_opcaomenu,f,c
  6832                           
  6833                           ;main.c: 483: if (btPress(1)) opcaomenu--;
  6834  00143A  0E01               	movlw	1
  6835  00143C  EC5C  F02D         	call	_btPress
  6836  001440  0900               	iorlw	0
  6837  001442  A4D8               	btfss	status,2,c
  6838  001444  0645               	decf	_opcaomenu,f,c
  6839                           
  6840                           ;main.c: 484: if (btPress(8)) {
  6841  001446  0E08               	movlw	8
  6842  001448  EC5C  F02D         	call	_btPress
  6843  00144C  0900               	iorlw	0
  6844  00144E  B4D8               	btfsc	status,2,c
  6845  001450  D0AE               	goto	l1464
  6846                           
  6847                           ;main.c: 485: menu = 3;
  6848  001452  0E03               	movlw	3
  6849  001454  D0AA               	goto	L11
  6850  001456                     l1436:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;main.c: 491: if (menu == 11) {
  6854                           
  6855                           ; BSR set to: 0
  6856  001456  0E0B               	movlw	11
  6857  001458  19FD               	xorwf	_menu& (0+255),w,b
  6858  00145A  B4D8               	btfsc	status,2,c
  6859  00145C  D088               	goto	l1450
  6860  00145E  D0A7               	goto	l1464
  6861  001460                     
  6862                           ;main.c: 494: line1[0] = '>';
  6863                           
  6864                           ; BSR set to: 0
  6865  001460  0E3E               	movlw	62
  6866  001462  0101               	movlb	1	; () banked
  6867  001464  6FA5               	movwf	_line1& (0+255),b
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;main.c: 495: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  6871  001466  0E40               	movlw	64
  6872  001468  EC5C  F02D         	call	_btPress
  6873  00146C  0900               	iorlw	0
  6874  00146E  B4D8               	btfsc	status,2,c
  6875  001470  D00E               	goto	l1452
  6876  001472  0E58               	movlw	low _t_fim_fase1
  6877  001474  0100               	movlb	0	; () banked
  6878  001476  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6879  001478  0E00               	movlw	high _t_fim_fase1
  6880  00147A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6881  00147C  0E00               	movlw	0
  6882  00147E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6883  001480  0E1E               	movlw	30
  6884  001482  6F68               	movwf	setRangeValor@_max& (0+255),b
  6885  001484  0E08               	movlw	8
  6886  001486  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6887  001488  0E2B               	movlw	43
  6888  00148A  EC5B  F027         	call	_setRangeValor
  6889  00148E                     l1452:
  6890                           
  6891                           ;main.c: 496: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  6892  00148E  0E20               	movlw	32
  6893  001490  EC5C  F02D         	call	_btPress
  6894  001494  0900               	iorlw	0
  6895  001496  B4D8               	btfsc	status,2,c
  6896  001498  D075               	goto	l1454
  6897  00149A  0E58               	movlw	low _t_fim_fase1
  6898  00149C  0100               	movlb	0	; () banked
  6899  00149E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6900  0014A0  0E00               	movlw	high _t_fim_fase1
  6901  0014A2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6902  0014A4  0E00               	movlw	0
  6903  0014A6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6904  0014A8  0E1E               	movlw	30
  6905  0014AA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6906  0014AC  0E08               	movlw	8
  6907  0014AE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6908  0014B0  0E2D               	movlw	45
  6909  0014B2  EC5B  F027         	call	_setRangeValor
  6910                           
  6911                           ;main.c: 497: break;
  6912  0014B6  D066               	goto	l1454
  6913  0014B8                     
  6914                           ;main.c: 499: line2[0] = '>';
  6915  0014B8  0E3E               	movlw	62
  6916  0014BA  0101               	movlb	1	; () banked
  6917  0014BC  6F90               	movwf	_line2& (0+255),b
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;main.c: 500: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  6921  0014BE  0E40               	movlw	64
  6922  0014C0  EC5C  F02D         	call	_btPress
  6923  0014C4  0900               	iorlw	0
  6924  0014C6  B4D8               	btfsc	status,2,c
  6925  0014C8  D00E               	goto	l1456
  6926  0014CA  0E57               	movlw	low _t_fim_fase2
  6927  0014CC  0100               	movlb	0	; () banked
  6928  0014CE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6929  0014D0  0E00               	movlw	high _t_fim_fase2
  6930  0014D2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6931  0014D4  0E00               	movlw	0
  6932  0014D6  6F67               	movwf	setRangeValor@_min& (0+255),b
  6933  0014D8  0E1E               	movlw	30
  6934  0014DA  6F68               	movwf	setRangeValor@_max& (0+255),b
  6935  0014DC  0E09               	movlw	9
  6936  0014DE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6937  0014E0  0E2B               	movlw	43
  6938  0014E2  EC5B  F027         	call	_setRangeValor
  6939  0014E6                     l1456:
  6940                           
  6941                           ;main.c: 501: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  6942  0014E6  0E20               	movlw	32
  6943  0014E8  EC5C  F02D         	call	_btPress
  6944  0014EC  0900               	iorlw	0
  6945  0014EE  B4D8               	btfsc	status,2,c
  6946  0014F0  D049               	goto	l1454
  6947  0014F2  0E57               	movlw	low _t_fim_fase2
  6948  0014F4  0100               	movlb	0	; () banked
  6949  0014F6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6950  0014F8  0E00               	movlw	high _t_fim_fase2
  6951  0014FA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6952  0014FC  0E00               	movlw	0
  6953  0014FE  6F67               	movwf	setRangeValor@_min& (0+255),b
  6954  001500  0E1E               	movlw	30
  6955  001502  6F68               	movwf	setRangeValor@_max& (0+255),b
  6956  001504  0E09               	movlw	9
  6957  001506  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6958  001508  0E2D               	movlw	45
  6959  00150A  EC5B  F027         	call	_setRangeValor
  6960                           
  6961                           ;main.c: 502: break;
  6962  00150E  D03A               	goto	l1454
  6963  001510                     
  6964                           ;main.c: 504: line3[0] = '>';
  6965  001510  0E3E               	movlw	62
  6966  001512  0101               	movlb	1	; () banked
  6967  001514  6F7B               	movwf	_line3& (0+255),b
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;main.c: 505: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  6971  001516  0E40               	movlw	64
  6972  001518  EC5C  F02D         	call	_btPress
  6973  00151C  0900               	iorlw	0
  6974  00151E  B4D8               	btfsc	status,2,c
  6975  001520  D00E               	goto	l1459
  6976  001522  0E56               	movlw	low _t_fim_fase3
  6977  001524  0100               	movlb	0	; () banked
  6978  001526  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6979  001528  0E00               	movlw	high _t_fim_fase3
  6980  00152A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6981  00152C  0E00               	movlw	0
  6982  00152E  6F67               	movwf	setRangeValor@_min& (0+255),b
  6983  001530  0E1E               	movlw	30
  6984  001532  6F68               	movwf	setRangeValor@_max& (0+255),b
  6985  001534  0E0A               	movlw	10
  6986  001536  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6987  001538  0E2B               	movlw	43
  6988  00153A  EC5B  F027         	call	_setRangeValor
  6989  00153E                     l1459:
  6990                           
  6991                           ;main.c: 506: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  6992  00153E  0E20               	movlw	32
  6993  001540  EC5C  F02D         	call	_btPress
  6994  001544  0900               	iorlw	0
  6995  001546  B4D8               	btfsc	status,2,c
  6996  001548  D01D               	goto	l1454
  6997  00154A  0E56               	movlw	low _t_fim_fase3
  6998  00154C  0100               	movlb	0	; () banked
  6999  00154E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7000  001550  0E00               	movlw	high _t_fim_fase3
  7001  001552  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7002  001554  0E00               	movlw	0
  7003  001556  6F67               	movwf	setRangeValor@_min& (0+255),b
  7004  001558  0E1E               	movlw	30
  7005  00155A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7006  00155C  0E0A               	movlw	10
  7007  00155E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7008  001560  0E2D               	movlw	45
  7009  001562  EC5B  F027         	call	_setRangeValor
  7010                           
  7011                           ;main.c: 507: break;
  7012  001566  D00E               	goto	l1454
  7013  001568  0E01               	movlw	1
  7014  00156A  6E45               	movwf	_opcaomenu,c
  7015                           
  7016                           ;main.c: 509: }
  7017  00156C  D00B               	goto	l1454
  7018  00156E                     l1450:
  7019  00156E  5045               	movf	_opcaomenu,w,c
  7020                           
  7021                           ; Switch size 1, requested type "space"
  7022                           ; Number of cases is 3, Range of values is 1 to 3
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte           10     6 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027  001570  0A01               	xorlw	1	; case 1
  7028  001572  B4D8               	btfsc	status,2,c
  7029  001574  D775               	goto	l1451
  7030  001576  0A03               	xorlw	3	; case 2
  7031  001578  B4D8               	btfsc	status,2,c
  7032  00157A  D79E               	goto	l1455
  7033  00157C  0A01               	xorlw	1	; case 3
  7034  00157E  B4D8               	btfsc	status,2,c
  7035  001580  D7C7               	goto	l1458
  7036  001582  D7F2               	goto	l1461
  7037  001584                     l1454:
  7038                           
  7039                           ;main.c: 510: if (btPress(16)) opcaomenu++;
  7040  001584  0E10               	movlw	16
  7041  001586  EC5C  F02D         	call	_btPress
  7042  00158A  0900               	iorlw	0
  7043  00158C  A4D8               	btfss	status,2,c
  7044  00158E  2A45               	incf	_opcaomenu,f,c
  7045                           
  7046                           ;main.c: 511: if (btPress(1)) opcaomenu--;
  7047  001590  0E01               	movlw	1
  7048  001592  EC5C  F02D         	call	_btPress
  7049  001596  0900               	iorlw	0
  7050  001598  A4D8               	btfss	status,2,c
  7051  00159A  0645               	decf	_opcaomenu,f,c
  7052                           
  7053                           ;main.c: 512: if (btPress(8)) {
  7054  00159C  0E08               	movlw	8
  7055  00159E  EC5C  F02D         	call	_btPress
  7056  0015A2  0900               	iorlw	0
  7057  0015A4  B4D8               	btfsc	status,2,c
  7058  0015A6  D003               	goto	l1464
  7059                           
  7060                           ;main.c: 513: menu = 2;
  7061  0015A8  0E02               	movlw	2
  7062  0015AA                     L11:
  7063  0015AA  0100               	movlb	0	; () banked
  7064  0015AC  6FFD               	movwf	_menu& (0+255),b
  7065  0015AE                     l1464:
  7066                           
  7067                           ;main.c: 514: }
  7068                           ;main.c: 515: }
  7069                           ;main.c: 516: updateLeds();
  7070                           
  7071                           ; BSR set to: 0
  7072                           
  7073                           ; BSR set to: 0
  7074                           
  7075                           ; BSR set to: 0
  7076                           
  7077                           ; BSR set to: 0
  7078                           
  7079                           ; BSR set to: 0
  7080  0015AE  EC3D  F02C         	call	_updateLeds	;wreg free
  7081                           
  7082                           ;main.c: 517: atualizaLCD(line1, line2, line3, line4);
  7083  0015B2  0EA5               	movlw	low _line1
  7084  0015B4  0100               	movlb	0	; () banked
  7085  0015B6  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7086  0015B8  0E01               	movlw	high _line1
  7087  0015BA  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7088  0015BC  0E90               	movlw	low _line2
  7089  0015BE  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7090  0015C0  0E01               	movlw	high _line2
  7091  0015C2  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7092  0015C4  0E7B               	movlw	low _line3
  7093  0015C6  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7094  0015C8  0E01               	movlw	high _line3
  7095  0015CA  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7096  0015CC  0E66               	movlw	low _line4
  7097  0015CE  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7098  0015D0  0E01               	movlw	high _line4
  7099  0015D2  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7100  0015D4  EC32  F025         	call	_atualizaLCD	;wreg free
  7101  0015D8  EF73  F001         	goto	l1273
  7102  0015DC                     __end_of_main:
  7103                           	opt stack 0
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           intcon2	equ	0xFF1
  7112                           intcon3	equ	0xFF0
  7113                           postinc0	equ	0xFEE
  7114                           wreg	equ	0xFE8
  7115                           postdec1	equ	0xFE5
  7116                           fsr1l	equ	0xFE1
  7117                           indf2	equ	0xFDF
  7118                           fsr2h	equ	0xFDA
  7119                           fsr2l	equ	0xFD9
  7120                           status	equ	0xFD8
  7121                           
  7122 ;; *************** function _updateLeds *****************
  7123 ;; Defined at:
  7124 ;;		line 27 in file "src/Led_display.h"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    8
  7145 ;; This function calls:
  7146 ;;		_I2C_Start
  7147 ;;		_I2C_Stop
  7148 ;;		_I2C_Write
  7149 ;; This function is called by:
  7150 ;;		_main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text1
  7155  00587A                     __ptext1:
  7156                           	opt stack 0
  7157  00587A                     _updateLeds:
  7158                           	opt stack 22
  7159                           
  7160                           ;Led_display.h: 29: if (_led != leds) {
  7161                           
  7162                           ;incstack = 0
  7163  00587A  5043               	movf	_leds,w,c
  7164  00587C  185C               	xorwf	__led,w,c
  7165  00587E  B4D8               	btfsc	status,2,c
  7166  005880  0012               	return	
  7167                           
  7168                           ;Led_display.h: 30: I2C_Start();
  7169  005882  ECB1  F02D         	call	_I2C_Start	;wreg free
  7170                           
  7171                           ;Led_display.h: 31: I2C_Write(0x46);
  7172  005886  0E00               	movlw	0
  7173  005888  0100               	movlb	0	; () banked
  7174  00588A  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7175  00588C  0E46               	movlw	70
  7176  00588E  6F61               	movwf	I2C_Write@d& (0+255),b
  7177  005890  EC9F  F02D         	call	_I2C_Write	;wreg free
  7178                           
  7179                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7180  005894  C043  F061         	movff	_leds,I2C_Write@d
  7181  005898  0100               	movlb	0	; () banked
  7182  00589A  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7183  00589C  EC9F  F02D         	call	_I2C_Write	;wreg free
  7184                           
  7185                           ;Led_display.h: 33: I2C_Stop();
  7186  0058A0  ECAD  F02D         	call	_I2C_Stop	;wreg free
  7187                           
  7188                           ;Led_display.h: 34: _led = leds;
  7189  0058A4  C043  F05C         	movff	_leds,__led
  7190  0058A8  0012               	return	
  7191  0058AA                     __end_of_updateLeds:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           intcon	equ	0xFF2
  7200                           intcon2	equ	0xFF1
  7201                           intcon3	equ	0xFF0
  7202                           postinc0	equ	0xFEE
  7203                           wreg	equ	0xFE8
  7204                           postdec1	equ	0xFE5
  7205                           fsr1l	equ	0xFE1
  7206                           indf2	equ	0xFDF
  7207                           fsr2h	equ	0xFDA
  7208                           fsr2l	equ	0xFD9
  7209                           status	equ	0xFD8
  7210                           
  7211 ;; *************** function _setUmidade *****************
  7212 ;; Defined at:
  7213 ;;		line 44 in file "src/FuncoesControlador.h"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  tp              1    wreg     unsigned char 
  7216 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7217 ;;		 -> umidajt(1), 
  7218 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7219 ;;		 -> tempajt(1), 
  7220 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7221 ;;		 -> clima(1), 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  tp              1   14[BANK0 ] unsigned char 
  7224 ;;  _umd            1   25[BANK0 ] unsigned char 
  7225 ;;  _clim           1   24[BANK0 ] unsigned char 
  7226 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7236 ;;      Params:         0       6       0       0       0       0       0       0       0
  7237 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7239 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7240 ;;Total ram usage:       18 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    9
  7243 ;; This function calls:
  7244 ;;		_tabelaUmidade
  7245 ;;		_writeEEPROM_ext
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text2
  7252  0044B6                     __ptext2:
  7253                           	opt stack 0
  7254  0044B6                     _setUmidade:
  7255                           	opt stack 21
  7256                           
  7257                           ;incstack = 0
  7258                           ;setUmidade@tp stored from wreg
  7259  0044B6  0100               	movlb	0	; () banked
  7260  0044B8  6F6E               	movwf	setUmidade@tp& (0+255),b
  7261                           
  7262                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7263  0044BA  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7264  0044BE  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7265  0044C2  50DF               	movf	indf2,w,c
  7266  0044C4  0100               	movlb	0	; () banked
  7267  0044C6  6F79               	movwf	setUmidade@_umd& (0+255),b
  7268                           
  7269                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7270  0044C8  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7271  0044CC  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7272  0044D0  50DF               	movf	indf2,w,c
  7273  0044D2  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7274                           
  7275                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7276  0044D4  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7277  0044D8  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7278  0044DC  50DF               	movf	indf2,w,c
  7279  0044DE  6F78               	movwf	setUmidade@_clim& (0+255),b
  7280                           
  7281                           ;FuncoesControlador.h: 49: switch (tp) {
  7282  0044E0  D05C               	goto	l910
  7283  0044E2                     
  7284                           ; BSR set to: 0
  7285                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7286                           
  7287                           ; BSR set to: 0
  7288  0044E2  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7289  0044E4  A4D8               	btfss	status,2,c
  7290  0044E6  D00F               	goto	l912
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7294  0044E8  0E64               	movlw	100
  7295  0044EA  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7296  0044EC  D005               	goto	l914
  7297                           
  7298                           ; BSR set to: 0
  7299  0044EE  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7300  0044F0  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1295
  7301  0044F4  6B70               	clrf	(_setUmidade$1295+1)& (0+255),b
  7302  0044F6  D004               	goto	l916
  7303  0044F8                     l914:
  7304                           
  7305                           ; BSR set to: 0
  7306                           
  7307                           ; BSR set to: 0
  7308  0044F8  0E00               	movlw	0
  7309  0044FA  6F70               	movwf	(_setUmidade$1295+1)& (0+255),b
  7310  0044FC  0E0A               	movlw	10
  7311  0044FE  6F6F               	movwf	_setUmidade$1295& (0+255),b
  7312  004500                     l916:
  7313                           
  7314                           ; BSR set to: 0
  7315                           
  7316                           ; BSR set to: 0
  7317  004500  C06F  F079         	movff	_setUmidade$1295,setUmidade@_umd
  7318                           
  7319                           ;FuncoesControlador.h: 53: } else {
  7320  004504  D00E               	goto	l917
  7321  004506                     l912:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 60 : ++_umd;
  7325                           
  7326                           ; BSR set to: 0
  7327  004506  0E78               	movlw	120
  7328  004508  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7329  00450A  D005               	goto	l919
  7330                           
  7331                           ; BSR set to: 0
  7332  00450C  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7333  00450E  C079  F071         	movff	setUmidade@_umd,_setUmidade$1296
  7334  004512  6B72               	clrf	(_setUmidade$1296+1)& (0+255),b
  7335  004514  D004               	goto	l921
  7336  004516                     l919:
  7337                           
  7338                           ; BSR set to: 0
  7339                           
  7340                           ; BSR set to: 0
  7341  004516  0E00               	movlw	0
  7342  004518  6F72               	movwf	(_setUmidade$1296+1)& (0+255),b
  7343  00451A  0E3C               	movlw	60
  7344  00451C  6F71               	movwf	_setUmidade$1296& (0+255),b
  7345  00451E                     l921:
  7346                           
  7347                           ; BSR set to: 0
  7348                           
  7349                           ; BSR set to: 0
  7350  00451E  C071  F079         	movff	_setUmidade$1296,setUmidade@_umd
  7351  004522                     l917:
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;FuncoesControlador.h: 55: }
  7355                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7356                           
  7357                           ; BSR set to: 0
  7358  004522  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7359  004526  0E02               	movlw	2
  7360  004528  EC93  F02B         	call	_writeEEPROM_ext
  7361                           
  7362                           ;FuncoesControlador.h: 58: break;
  7363  00452C  D040               	goto	l922
  7364  00452E                     
  7365                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7366  00452E  0100               	movlb	0	; () banked
  7367  004530  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7368  004532  A4D8               	btfss	status,2,c
  7369  004534  D00F               	goto	l924
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7373  004536  0E0A               	movlw	10
  7374  004538  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7375  00453A  D005               	goto	l926
  7376                           
  7377                           ; BSR set to: 0
  7378  00453C  0779               	decf	setUmidade@_umd& (0+255),f,b
  7379  00453E  C079  F073         	movff	setUmidade@_umd,_setUmidade$1297
  7380  004542  6B74               	clrf	(_setUmidade$1297+1)& (0+255),b
  7381  004544  D004               	goto	l928
  7382  004546                     l926:
  7383                           
  7384                           ; BSR set to: 0
  7385                           
  7386                           ; BSR set to: 0
  7387  004546  0E00               	movlw	0
  7388  004548  6F74               	movwf	(_setUmidade$1297+1)& (0+255),b
  7389  00454A  0E64               	movlw	100
  7390  00454C  6F73               	movwf	_setUmidade$1297& (0+255),b
  7391  00454E                     l928:
  7392                           
  7393                           ; BSR set to: 0
  7394                           
  7395                           ; BSR set to: 0
  7396  00454E  C073  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7397                           
  7398                           ;FuncoesControlador.h: 62: } else {
  7399  004552  D00E               	goto	l929
  7400  004554                     l924:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;FuncoesControlador.h: 63: _umd = (_umd <= 60) ? 120 : --_umd;
  7404                           
  7405                           ; BSR set to: 0
  7406  004554  0E3C               	movlw	60
  7407  004556  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7408  004558  D005               	goto	l931
  7409                           
  7410                           ; BSR set to: 0
  7411  00455A  0779               	decf	setUmidade@_umd& (0+255),f,b
  7412  00455C  C079  F075         	movff	setUmidade@_umd,_setUmidade$1298
  7413  004560  6B76               	clrf	(_setUmidade$1298+1)& (0+255),b
  7414  004562  D004               	goto	l933
  7415  004564                     l931:
  7416                           
  7417                           ; BSR set to: 0
  7418                           
  7419                           ; BSR set to: 0
  7420  004564  0E00               	movlw	0
  7421  004566  6F76               	movwf	(_setUmidade$1298+1)& (0+255),b
  7422  004568  0E78               	movlw	120
  7423  00456A  6F75               	movwf	_setUmidade$1298& (0+255),b
  7424  00456C                     l933:
  7425                           
  7426                           ; BSR set to: 0
  7427                           
  7428                           ; BSR set to: 0
  7429  00456C  C075  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7430  004570                     l929:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;FuncoesControlador.h: 64: }
  7434                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7435                           
  7436                           ; BSR set to: 0
  7437  004570  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7438  004574  0E02               	movlw	2
  7439  004576  EC93  F02B         	call	_writeEEPROM_ext
  7440                           
  7441                           ;FuncoesControlador.h: 67: break;
  7442  00457A  D019               	goto	l922
  7443  00457C                     
  7444                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7445  00457C  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7446  004580  0100               	movlb	0	; () banked
  7447  004582  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7448  004584  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7449  004588  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7450  00458A  C0FA  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7451  00458E  ECEE  F00A         	call	_tabelaUmidade	;wreg free
  7452  004592  0100               	movlb	0	; () banked
  7453  004594  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7454  004596  6F79               	movwf	setUmidade@_umd& (0+255),b
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;FuncoesControlador.h: 71: }
  7458                           
  7459                           ;FuncoesControlador.h: 70: break;
  7460  004598  D00A               	goto	l922
  7461  00459A                     l910:
  7462                           
  7463                           ; BSR set to: 0
  7464                           
  7465                           ; BSR set to: 0
  7466  00459A  516E               	movf	setUmidade@tp& (0+255),w,b
  7467                           
  7468                           ; Switch size 1, requested type "space"
  7469                           ; Number of cases is 3, Range of values is 43 to 65
  7470                           ; switch strategies available:
  7471                           ; Name         Instructions Cycles
  7472                           ; simple_byte           10     6 (average)
  7473                           ;	Chosen strategy is simple_byte
  7474  00459C  0A2B               	xorlw	43	; case 43
  7475  00459E  B4D8               	btfsc	status,2,c
  7476  0045A0  D7A0               	goto	l911
  7477  0045A2  0A06               	xorlw	6	; case 45
  7478  0045A4  B4D8               	btfsc	status,2,c
  7479  0045A6  D7C3               	goto	l923
  7480  0045A8  0A6C               	xorlw	108	; case 65
  7481  0045AA  B4D8               	btfsc	status,2,c
  7482  0045AC  D7E7               	goto	l934
  7483  0045AE                     l922:
  7484                           
  7485                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7486                           
  7487                           ; BSR set to: 0
  7488  0045AE  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7489  0045B2  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7490  0045B6  C079  FFDF         	movff	setUmidade@_umd,indf2
  7491  0045BA  0012               	return		;funcret
  7492  0045BC                     __end_of_setUmidade:
  7493                           	opt stack 0
  7494                           tblptru	equ	0xFF8
  7495                           tblptrh	equ	0xFF7
  7496                           tblptrl	equ	0xFF6
  7497                           tablat	equ	0xFF5
  7498                           prodh	equ	0xFF4
  7499                           prodl	equ	0xFF3
  7500                           intcon	equ	0xFF2
  7501                           intcon2	equ	0xFF1
  7502                           intcon3	equ	0xFF0
  7503                           postinc0	equ	0xFEE
  7504                           wreg	equ	0xFE8
  7505                           postdec1	equ	0xFE5
  7506                           fsr1l	equ	0xFE1
  7507                           indf2	equ	0xFDF
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function _tabelaUmidade *****************
  7513 ;; Defined at:
  7514 ;;		line 4 in file "src/TabelasUmidade.h"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  _tmp            2    0[BANK0 ] int 
  7517 ;;  _clima          2    2[BANK0 ] int 
  7518 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  _umd            1    7[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2    0[BANK0 ] unsigned int 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7530 ;;      Params:         0       5       0       0       0       0       0       0       0
  7531 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7532 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7533 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7534 ;;Total ram usage:        8 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    6
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_setUmidade
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text3
  7545  0015DC                     __ptext3:
  7546                           	opt stack 0
  7547  0015DC                     _tabelaUmidade:
  7548                           	opt stack 23
  7549                           
  7550                           ;TabelasUmidade.h: 5: char _umd = 0;
  7551                           
  7552                           ;incstack = 0
  7553  0015DC  0E00               	movlw	0
  7554  0015DE  0100               	movlb	0	; () banked
  7555  0015E0  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7556                           
  7557                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7558  0015E2  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7559  0015E4  B4D8               	btfsc	status,2,c
  7560  0015E6  D306               	goto	l301
  7561  0015E8  D31A               	goto	l300
  7562  0015EA                     
  7563                           ; BSR set to: 0
  7564                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7565                           
  7566                           ; BSR set to: 0
  7567  0015EA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7568  0015EC  D006               	goto	u8540
  7569  0015EE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7570  0015F0  E106               	bnz	l6709
  7571  0015F2  0E5B               	movlw	91
  7572  0015F4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7573  0015F6  B0D8               	btfsc	status,0,c
  7574  0015F8  D002               	goto	l303
  7575  0015FA                     u8540:
  7576                           
  7577                           ; BSR set to: 0
  7578  0015FA  0E55               	movlw	85
  7579  0015FC  D04B               	goto	L22
  7580  0015FE                     l303:
  7581  0015FE                     l6709:
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;TabelasUmidade.h: 10: else
  7585                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7586  0015FE  0E5B               	movlw	91
  7587  001600  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7588  001602  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7589  001604  A4D8               	btfss	status,2,c
  7590  001606  D002               	goto	l305
  7591  001608                     u8550:
  7592                           
  7593                           ; BSR set to: 0
  7594  001608  0E56               	movlw	86
  7595  00160A  D044               	goto	L22
  7596  00160C                     l305:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;TabelasUmidade.h: 12: else
  7600                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7601                           
  7602                           ; BSR set to: 0
  7603  00160C  0E5C               	movlw	92
  7604  00160E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7605  001610  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7606  001612  A4D8               	btfss	status,2,c
  7607  001614  D002               	goto	l307
  7608                           
  7609                           ; BSR set to: 0
  7610  001616  0E57               	movlw	87
  7611  001618  D03D               	goto	L22
  7612  00161A                     l307:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;TabelasUmidade.h: 14: else
  7616                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7617                           
  7618                           ; BSR set to: 0
  7619  00161A  0E5D               	movlw	93
  7620  00161C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7621  00161E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7622  001620  A4D8               	btfss	status,2,c
  7623  001622  D002               	goto	l309
  7624  001624                     u8570:
  7625                           
  7626                           ; BSR set to: 0
  7627  001624  0E58               	movlw	88
  7628  001626  D036               	goto	L22
  7629  001628                     l309:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;TabelasUmidade.h: 16: else
  7633                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  7634                           
  7635                           ; BSR set to: 0
  7636  001628  0E5E               	movlw	94
  7637  00162A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7638  00162C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7639  00162E  A4D8               	btfss	status,2,c
  7640  001630  D002               	goto	l311
  7641  001632                     u8580:
  7642                           
  7643                           ; BSR set to: 0
  7644  001632  0E59               	movlw	89
  7645  001634  D02F               	goto	L22
  7646  001636                     l311:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;TabelasUmidade.h: 18: else
  7650                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  7651                           
  7652                           ; BSR set to: 0
  7653  001636  0E5F               	movlw	95
  7654  001638  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7655  00163A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7656  00163C  A4D8               	btfss	status,2,c
  7657  00163E  D002               	goto	l313
  7658  001640                     u8590:
  7659                           
  7660                           ; BSR set to: 0
  7661  001640  0E5A               	movlw	90
  7662  001642  D028               	goto	L22
  7663  001644                     l313:
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;TabelasUmidade.h: 20: else
  7667                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  7668                           
  7669                           ; BSR set to: 0
  7670  001644  0E60               	movlw	96
  7671  001646  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7672  001648  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7673  00164A  A4D8               	btfss	status,2,c
  7674  00164C  D002               	goto	l315
  7675  00164E                     u8600:
  7676                           
  7677                           ; BSR set to: 0
  7678  00164E  0E5B               	movlw	91
  7679  001650  D021               	goto	L22
  7680  001652                     l315:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;TabelasUmidade.h: 22: else
  7684                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  7685                           
  7686                           ; BSR set to: 0
  7687  001652  0E61               	movlw	97
  7688  001654  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7689  001656  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7690  001658  A4D8               	btfss	status,2,c
  7691  00165A  D002               	goto	l317
  7692  00165C                     u8610:
  7693                           
  7694                           ; BSR set to: 0
  7695  00165C  0E5C               	movlw	92
  7696  00165E  D01A               	goto	L22
  7697  001660                     l317:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;TabelasUmidade.h: 24: else
  7701                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  7702                           
  7703                           ; BSR set to: 0
  7704  001660  0E62               	movlw	98
  7705  001662  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7706  001664  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7707  001666  A4D8               	btfss	status,2,c
  7708  001668  D002               	goto	l319
  7709  00166A                     u8620:
  7710                           
  7711                           ; BSR set to: 0
  7712  00166A  0E5D               	movlw	93
  7713  00166C  D013               	goto	L22
  7714  00166E                     l319:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;TabelasUmidade.h: 26: else
  7718                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  7719                           
  7720                           ; BSR set to: 0
  7721  00166E  0E63               	movlw	99
  7722  001670  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7723  001672  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7724  001674  A4D8               	btfss	status,2,c
  7725  001676  D002               	goto	l321
  7726  001678                     u8630:
  7727                           
  7728                           ; BSR set to: 0
  7729  001678  0E5E               	movlw	94
  7730  00167A  D00C               	goto	L22
  7731  00167C                     l321:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;TabelasUmidade.h: 28: else
  7735                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  7736                           
  7737                           ; BSR set to: 0
  7738  00167C  0E64               	movlw	100
  7739  00167E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7740  001680  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7741  001682  B4D8               	btfsc	status,2,c
  7742  001684  EF82  F00F         	goto	u10390
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;TabelasUmidade.h: 30: else
  7746                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  7747                           
  7748                           ; BSR set to: 0
  7749                           
  7750                           ; BSR set to: 0
  7751  001688  0E65               	movlw	101
  7752  00168A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7753  00168C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7754  00168E  A4D8               	btfss	status,2,c
  7755  001690  D004               	goto	l325
  7756  001692  D7F2               	goto	u8630
  7757  001694                     L22:
  7758  001694  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7759  001696  EFD3  F012         	goto	l634
  7760  00169A                     l325:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;TabelasUmidade.h: 32: else
  7764                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  7765                           
  7766                           ; BSR set to: 0
  7767  00169A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7768  00169C  D00E               	goto	l327
  7769  00169E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7770  0016A0  E104               	bnz	u8660
  7771  0016A2  0E66               	movlw	102
  7772  0016A4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7773  0016A6  A0D8               	btfss	status,0,c
  7774  0016A8  D008               	goto	l327
  7775  0016AA                     u8660:
  7776                           
  7777                           ; BSR set to: 0
  7778  0016AA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7779  0016AC  D7E5               	goto	u8630
  7780  0016AE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7781  0016B0  E104               	bnz	l6759
  7782  0016B2  0E6C               	movlw	108
  7783  0016B4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7784  0016B6  A0D8               	btfss	status,0,c
  7785  0016B8  D7DF               	goto	u8630
  7786  0016BA                     l327:
  7787  0016BA                     l6759:
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;TabelasUmidade.h: 34: else
  7791                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  7792  0016BA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7793  0016BC  D010               	goto	l329
  7794  0016BE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7795  0016C0  E104               	bnz	u8680
  7796  0016C2  0E6C               	movlw	108
  7797  0016C4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7798  0016C6  A0D8               	btfss	status,0,c
  7799  0016C8  D00A               	goto	l329
  7800  0016CA                     u8680:
  7801                           
  7802                           ; BSR set to: 0
  7803  0016CA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7804  0016CC  EF82  F00F         	goto	u10390
  7805  0016D0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7806  0016D2  E105               	bnz	l6765
  7807  0016D4  0E77               	movlw	119
  7808  0016D6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7809  0016D8  A0D8               	btfss	status,0,c
  7810  0016DA  EF82  F00F         	goto	u10390
  7811  0016DE                     l329:
  7812  0016DE                     l6765:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;TabelasUmidade.h: 36: else
  7816                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  7817  0016DE  0E77               	movlw	119
  7818  0016E0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7819  0016E2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7820  0016E4  B4D8               	btfsc	status,2,c
  7821  0016E6  EF75  F00F         	goto	u10370
  7822                           
  7823                           ; BSR set to: 0
  7824  0016EA  0E78               	movlw	120
  7825  0016EC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7826  0016EE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7827  0016F0  B4D8               	btfsc	status,2,c
  7828                           
  7829                           ; BSR set to: 0
  7830  0016F2  D3FB               	goto	u10370
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;TabelasUmidade.h: 38: else
  7834                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  7835                           
  7836                           ; BSR set to: 0
  7837                           
  7838                           ; BSR set to: 0
  7839  0016F4  0E79               	movlw	121
  7840  0016F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7841  0016F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7842  0016FA  B4D8               	btfsc	status,2,c
  7843  0016FC  D3EE               	goto	u10360
  7844                           
  7845                           ; BSR set to: 0
  7846  0016FE  0E7A               	movlw	122
  7847  001700  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7848  001702  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7849  001704  B4D8               	btfsc	status,2,c
  7850                           
  7851                           ; BSR set to: 0
  7852  001706  D3E9               	goto	u10360
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;TabelasUmidade.h: 40: else
  7856                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  7857                           
  7858                           ; BSR set to: 0
  7859                           
  7860                           ; BSR set to: 0
  7861  001708  0E7B               	movlw	123
  7862  00170A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7863  00170C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7864  00170E  B4D8               	btfsc	status,2,c
  7865  001710  EF0E  F011         	goto	u11000
  7866                           
  7867                           ; BSR set to: 0
  7868  001714  0E7C               	movlw	124
  7869  001716  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7870  001718  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7871  00171A  B4D8               	btfsc	status,2,c
  7872                           
  7873                           ; BSR set to: 0
  7874  00171C  EF0E  F011         	goto	u11000
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;TabelasUmidade.h: 42: else
  7878                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  7879                           
  7880                           ; BSR set to: 0
  7881                           
  7882                           ; BSR set to: 0
  7883  001720  0E7D               	movlw	125
  7884  001722  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7885  001724  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7886  001726  B4D8               	btfsc	status,2,c
  7887  001728  EFFB  F010         	goto	u10980
  7888                           
  7889                           ; BSR set to: 0
  7890  00172C  0E7E               	movlw	126
  7891  00172E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7892  001730  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7893  001732  B4D8               	btfsc	status,2,c
  7894                           
  7895                           ; BSR set to: 0
  7896  001734  EFFB  F010         	goto	u10980
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;TabelasUmidade.h: 44: else
  7900                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  7901                           
  7902                           ; BSR set to: 0
  7903                           
  7904                           ; BSR set to: 0
  7905  001738  0E7F               	movlw	127
  7906  00173A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7907  00173C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7908  00173E  B4D8               	btfsc	status,2,c
  7909  001740  EFF3  F010         	goto	u10970
  7910                           
  7911                           ; BSR set to: 0
  7912  001744  0E80               	movlw	128
  7913  001746  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7914  001748  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7915  00174A  B4D8               	btfsc	status,2,c
  7916                           
  7917                           ; BSR set to: 0
  7918  00174C  EFF3  F010         	goto	u10970
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;TabelasUmidade.h: 46: else
  7922                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  7923                           
  7924                           ; BSR set to: 0
  7925                           
  7926                           ; BSR set to: 0
  7927  001750  0E81               	movlw	129
  7928  001752  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7929  001754  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7930  001756  B4D8               	btfsc	status,2,c
  7931  001758  D1BB               	goto	u9530
  7932                           
  7933                           ; BSR set to: 0
  7934  00175A  0E82               	movlw	130
  7935  00175C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7936  00175E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7937  001760  B4D8               	btfsc	status,2,c
  7938                           
  7939                           ; BSR set to: 0
  7940  001762  D1B6               	goto	u9530
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;TabelasUmidade.h: 48: else
  7944                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  7945                           
  7946                           ; BSR set to: 0
  7947                           
  7948                           ; BSR set to: 0
  7949  001764  0E83               	movlw	131
  7950  001766  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7951  001768  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7952  00176A  B4D8               	btfsc	status,2,c
  7953  00176C  D1BD               	goto	u9550
  7954                           
  7955                           ; BSR set to: 0
  7956  00176E  0E84               	movlw	132
  7957  001770  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7958  001772  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7959  001774  B4D8               	btfsc	status,2,c
  7960                           
  7961                           ; BSR set to: 0
  7962  001776  D1B8               	goto	u9550
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;TabelasUmidade.h: 50: else
  7966                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  7967                           
  7968                           ; BSR set to: 0
  7969                           
  7970                           ; BSR set to: 0
  7971  001778  0E85               	movlw	133
  7972  00177A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7973  00177C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7974  00177E  B4D8               	btfsc	status,2,c
  7975  001780  D1BF               	goto	u9570
  7976                           
  7977                           ; BSR set to: 0
  7978  001782  0E86               	movlw	134
  7979  001784  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7980  001786  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7981  001788  B4D8               	btfsc	status,2,c
  7982                           
  7983                           ; BSR set to: 0
  7984  00178A  D1BA               	goto	u9570
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;TabelasUmidade.h: 52: else
  7988                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  7989                           
  7990                           ; BSR set to: 0
  7991                           
  7992                           ; BSR set to: 0
  7993  00178C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7994  00178E  D00E               	goto	l363
  7995  001790  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7996  001792  E104               	bnz	u8860
  7997  001794  0E87               	movlw	135
  7998  001796  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7999  001798  A0D8               	btfss	status,0,c
  8000  00179A  D008               	goto	l363
  8001  00179C                     u8860:
  8002                           
  8003                           ; BSR set to: 0
  8004  00179C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8005  00179E  D0ED               	goto	u9250
  8006  0017A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8007  0017A2  E104               	bnz	l6819
  8008  0017A4  0E93               	movlw	147
  8009  0017A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8010  0017A8  A0D8               	btfss	status,0,c
  8011  0017AA  D0E7               	goto	u9250
  8012  0017AC                     l363:
  8013  0017AC                     l6819:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;TabelasUmidade.h: 54: else
  8017                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8018  0017AC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8019  0017AE  D00E               	goto	l365
  8020  0017B0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8021  0017B2  E104               	bnz	u8880
  8022  0017B4  0E93               	movlw	147
  8023  0017B6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8024  0017B8  A0D8               	btfss	status,0,c
  8025  0017BA  D008               	goto	l365
  8026  0017BC                     u8880:
  8027                           
  8028                           ; BSR set to: 0
  8029  0017BC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8030  0017BE  D1B2               	goto	u9590
  8031  0017C0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8032  0017C2  E104               	bnz	l6825
  8033  0017C4  0E97               	movlw	151
  8034  0017C6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8035  0017C8  A0D8               	btfss	status,0,c
  8036  0017CA  D1AC               	goto	u9590
  8037  0017CC                     l365:
  8038  0017CC                     l6825:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;TabelasUmidade.h: 56: else
  8042                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8043  0017CC  0E97               	movlw	151
  8044  0017CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8045  0017D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8046  0017D2  B4D8               	btfsc	status,2,c
  8047  0017D4  D1B3               	goto	u9610
  8048                           
  8049                           ; BSR set to: 0
  8050  0017D6  0E98               	movlw	152
  8051  0017D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8052  0017DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8053  0017DC  B4D8               	btfsc	status,2,c
  8054                           
  8055                           ; BSR set to: 0
  8056  0017DE  D1AE               	goto	u9610
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;TabelasUmidade.h: 58: else
  8060                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8061                           
  8062                           ; BSR set to: 0
  8063                           
  8064                           ; BSR set to: 0
  8065  0017E0  0E99               	movlw	153
  8066  0017E2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8067  0017E4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8068  0017E6  B4D8               	btfsc	status,2,c
  8069  0017E8  D1B5               	goto	u9630
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;TabelasUmidade.h: 60: else
  8073                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8074                           
  8075                           ; BSR set to: 0
  8076                           
  8077                           ; BSR set to: 0
  8078  0017EA  0E9A               	movlw	154
  8079  0017EC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8080  0017EE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8081  0017F0  B4D8               	btfsc	status,2,c
  8082  0017F2  D1C2               	goto	u9650
  8083                           
  8084                           ; BSR set to: 0
  8085  0017F4  0E9B               	movlw	155
  8086  0017F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8087  0017F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8088  0017FA  B4D8               	btfsc	status,2,c
  8089                           
  8090                           ; BSR set to: 0
  8091  0017FC  D1BD               	goto	u9650
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;TabelasUmidade.h: 62: else
  8095                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8096                           
  8097                           ; BSR set to: 0
  8098                           
  8099                           ; BSR set to: 0
  8100  0017FE  0E9C               	movlw	156
  8101  001800  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8102  001802  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8103  001804  B4D8               	btfsc	status,2,c
  8104  001806  D1C4               	goto	u9670
  8105                           
  8106                           ; BSR set to: 0
  8107  001808  0E9D               	movlw	157
  8108  00180A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8109  00180C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8110  00180E  B4D8               	btfsc	status,2,c
  8111                           
  8112                           ; BSR set to: 0
  8113  001810  D1BF               	goto	u9670
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;TabelasUmidade.h: 64: else
  8117                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8118                           
  8119                           ; BSR set to: 0
  8120                           
  8121                           ; BSR set to: 0
  8122  001812  0E9E               	movlw	158
  8123  001814  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8124  001816  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8125  001818  B4D8               	btfsc	status,2,c
  8126  00181A  D0E4               	goto	u9340
  8127                           
  8128                           ; BSR set to: 0
  8129  00181C  0E9F               	movlw	159
  8130  00181E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8131  001820  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8132  001822  B4D8               	btfsc	status,2,c
  8133                           
  8134                           ; BSR set to: 0
  8135  001824  D0DF               	goto	u9340
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;TabelasUmidade.h: 66: else
  8139                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8140                           
  8141                           ; BSR set to: 0
  8142                           
  8143                           ; BSR set to: 0
  8144  001826  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8145  001828  EFD3  F012         	goto	l634
  8146  00182C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8147  00182E  E101               	bnz	u8990
  8148  001830  D0E0               	goto	L23
  8149  001832                     u8990:
  8150  001832  D1C6               	goto	u9710
  8151  001834                     
  8152                           ; BSR set to: 0
  8153                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8154                           
  8155                           ; BSR set to: 0
  8156  001834  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8157  001836  D6F6               	goto	u8570
  8158  001838  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8159  00183A  E104               	bnz	l6861
  8160  00183C  0E5B               	movlw	91
  8161  00183E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8162  001840  A0D8               	btfss	status,0,c
  8163  001842  D6F0               	goto	u8570
  8164  001844                     l6861:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;TabelasUmidade.h: 72: else
  8168                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8169  001844  0E5B               	movlw	91
  8170  001846  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8171  001848  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8172  00184A  B4D8               	btfsc	status,2,c
  8173  00184C  D6F2               	goto	u8580
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;TabelasUmidade.h: 74: else
  8177                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8178                           
  8179                           ; BSR set to: 0
  8180                           
  8181                           ; BSR set to: 0
  8182  00184E  0E5C               	movlw	92
  8183  001850  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8184  001852  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8185  001854  B4D8               	btfsc	status,2,c
  8186  001856  D6F4               	goto	u8590
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;TabelasUmidade.h: 76: else
  8190                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8191                           
  8192                           ; BSR set to: 0
  8193                           
  8194                           ; BSR set to: 0
  8195  001858  0E5D               	movlw	93
  8196  00185A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8197  00185C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8198  00185E  B4D8               	btfsc	status,2,c
  8199  001860  D6F6               	goto	u8600
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;TabelasUmidade.h: 78: else
  8203                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8204                           
  8205                           ; BSR set to: 0
  8206                           
  8207                           ; BSR set to: 0
  8208  001862  0E5E               	movlw	94
  8209  001864  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8210  001866  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8211  001868  B4D8               	btfsc	status,2,c
  8212  00186A  D6F8               	goto	u8610
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;TabelasUmidade.h: 80: else
  8216                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8217                           
  8218                           ; BSR set to: 0
  8219                           
  8220                           ; BSR set to: 0
  8221  00186C  0E5F               	movlw	95
  8222  00186E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8223  001870  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8224  001872  B4D8               	btfsc	status,2,c
  8225  001874  D6FA               	goto	u8620
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;TabelasUmidade.h: 82: else
  8229                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8230                           
  8231                           ; BSR set to: 0
  8232                           
  8233                           ; BSR set to: 0
  8234  001876  0E60               	movlw	96
  8235  001878  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8236  00187A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8237  00187C  B4D8               	btfsc	status,2,c
  8238  00187E  D6FC               	goto	u8630
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;TabelasUmidade.h: 84: else
  8242                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8243                           
  8244                           ; BSR set to: 0
  8245                           
  8246                           ; BSR set to: 0
  8247  001880  0E61               	movlw	97
  8248  001882  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8249  001884  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8250  001886  B4D8               	btfsc	status,2,c
  8251  001888  D33D               	goto	u10390
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;TabelasUmidade.h: 86: else
  8255                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8256                           
  8257                           ; BSR set to: 0
  8258                           
  8259                           ; BSR set to: 0
  8260  00188A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8261  00188C  D00E               	goto	l404
  8262  00188E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8263  001890  E104               	bnz	u9080
  8264  001892  0E62               	movlw	98
  8265  001894  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8266  001896  A0D8               	btfss	status,0,c
  8267  001898  D008               	goto	l404
  8268  00189A                     u9080:
  8269                           
  8270                           ; BSR set to: 0
  8271  00189A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8272  00189C  D326               	goto	u10370
  8273  00189E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8274  0018A0  E104               	bnz	l6895
  8275  0018A2  0E65               	movlw	101
  8276  0018A4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8277  0018A6  A0D8               	btfss	status,0,c
  8278  0018A8  D320               	goto	u10370
  8279  0018AA                     l404:
  8280  0018AA                     l6895:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;TabelasUmidade.h: 88: else
  8284                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8285  0018AA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8286  0018AC  D00E               	goto	l406
  8287  0018AE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8288  0018B0  E104               	bnz	u9100
  8289  0018B2  0E65               	movlw	101
  8290  0018B4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8291  0018B6  A0D8               	btfss	status,0,c
  8292  0018B8  D008               	goto	l406
  8293  0018BA                     u9100:
  8294                           
  8295                           ; BSR set to: 0
  8296  0018BA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8297  0018BC  D30E               	goto	u10360
  8298  0018BE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8299  0018C0  E104               	bnz	l6901
  8300  0018C2  0E78               	movlw	120
  8301  0018C4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8302  0018C6  A0D8               	btfss	status,0,c
  8303  0018C8  D308               	goto	u10360
  8304  0018CA                     l406:
  8305  0018CA                     l6901:
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;TabelasUmidade.h: 90: else
  8309                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8310  0018CA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8311  0018CC  D010               	goto	l408
  8312  0018CE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8313  0018D0  E104               	bnz	u9120
  8314  0018D2  0E78               	movlw	120
  8315  0018D4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8316  0018D6  A0D8               	btfss	status,0,c
  8317  0018D8  D00A               	goto	l408
  8318  0018DA                     u9120:
  8319                           
  8320                           ; BSR set to: 0
  8321  0018DA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8322  0018DC  EF0E  F011         	goto	u11000
  8323  0018E0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8324  0018E2  E105               	bnz	l6907
  8325  0018E4  0E7B               	movlw	123
  8326  0018E6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8327  0018E8  A0D8               	btfss	status,0,c
  8328  0018EA  EF0E  F011         	goto	u11000
  8329  0018EE                     l408:
  8330  0018EE                     l6907:
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;TabelasUmidade.h: 92: else
  8334                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8335  0018EE  0E7B               	movlw	123
  8336  0018F0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8337  0018F2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8338  0018F4  B4D8               	btfsc	status,2,c
  8339  0018F6  EFFB  F010         	goto	u10980
  8340                           
  8341                           ; BSR set to: 0
  8342  0018FA  0E7C               	movlw	124
  8343  0018FC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8344  0018FE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8345  001900  B4D8               	btfsc	status,2,c
  8346                           
  8347                           ; BSR set to: 0
  8348  001902  EFFB  F010         	goto	u10980
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;TabelasUmidade.h: 94: else
  8352                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8353                           
  8354                           ; BSR set to: 0
  8355                           
  8356                           ; BSR set to: 0
  8357  001906  0E7D               	movlw	125
  8358  001908  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8359  00190A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8360  00190C  B4D8               	btfsc	status,2,c
  8361  00190E  EFF3  F010         	goto	u10970
  8362                           
  8363                           ; BSR set to: 0
  8364  001912  0E7E               	movlw	126
  8365  001914  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8366  001916  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8367  001918  B4D8               	btfsc	status,2,c
  8368                           
  8369                           ; BSR set to: 0
  8370  00191A  EFF3  F010         	goto	u10970
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;TabelasUmidade.h: 96: else
  8374                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8375                           
  8376                           ; BSR set to: 0
  8377                           
  8378                           ; BSR set to: 0
  8379  00191E  0E7F               	movlw	127
  8380  001920  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8381  001922  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8382  001924  B4D8               	btfsc	status,2,c
  8383  001926  D0D4               	goto	u9530
  8384                           
  8385                           ; BSR set to: 0
  8386  001928  0E80               	movlw	128
  8387  00192A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8388  00192C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8389  00192E  B4D8               	btfsc	status,2,c
  8390                           
  8391                           ; BSR set to: 0
  8392  001930  D0CF               	goto	u9530
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;TabelasUmidade.h: 98: else
  8396                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8397                           
  8398                           ; BSR set to: 0
  8399                           
  8400                           ; BSR set to: 0
  8401  001932  0E81               	movlw	129
  8402  001934  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8403  001936  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8404  001938  B4D8               	btfsc	status,2,c
  8405  00193A  D0D6               	goto	u9550
  8406                           
  8407                           ; BSR set to: 0
  8408  00193C  0E82               	movlw	130
  8409  00193E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8410  001940  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8411  001942  B4D8               	btfsc	status,2,c
  8412                           
  8413                           ; BSR set to: 0
  8414  001944  D0D1               	goto	u9550
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;TabelasUmidade.h: 100: else
  8418                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8419                           
  8420                           ; BSR set to: 0
  8421                           
  8422                           ; BSR set to: 0
  8423  001946  0E83               	movlw	131
  8424  001948  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8425  00194A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8426  00194C  B4D8               	btfsc	status,2,c
  8427  00194E  D0D8               	goto	u9570
  8428                           
  8429                           ; BSR set to: 0
  8430  001950  0E84               	movlw	132
  8431  001952  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8432  001954  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8433  001956  B4D8               	btfsc	status,2,c
  8434                           
  8435                           ; BSR set to: 0
  8436  001958  D0D3               	goto	u9570
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;TabelasUmidade.h: 102: else
  8440                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8441                           
  8442                           ; BSR set to: 0
  8443                           
  8444                           ; BSR set to: 0
  8445  00195A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8446  00195C  D010               	goto	l430
  8447  00195E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8448  001960  E104               	bnz	u9240
  8449  001962  0E85               	movlw	133
  8450  001964  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8451  001966  A0D8               	btfss	status,0,c
  8452  001968  D00A               	goto	l430
  8453  00196A                     u9240:
  8454                           
  8455                           ; BSR set to: 0
  8456  00196A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8457  00196C  D006               	goto	u9250
  8458  00196E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8459  001970  E106               	bnz	l6943
  8460  001972  0E95               	movlw	149
  8461  001974  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8462  001976  B0D8               	btfsc	status,0,c
  8463  001978  D002               	goto	l430
  8464  00197A                     u9250:
  8465                           
  8466                           ; BSR set to: 0
  8467  00197A  0E68               	movlw	104
  8468  00197C  D68B               	goto	L22
  8469  00197E                     l430:
  8470  00197E                     l6943:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;TabelasUmidade.h: 104: else
  8474                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8475  00197E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8476  001980  D00E               	goto	l432
  8477  001982  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8478  001984  E104               	bnz	u9260
  8479  001986  0E95               	movlw	149
  8480  001988  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8481  00198A  A0D8               	btfss	status,0,c
  8482  00198C  D008               	goto	l432
  8483  00198E                     u9260:
  8484                           
  8485                           ; BSR set to: 0
  8486  00198E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8487  001990  D0C9               	goto	u9590
  8488  001992  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8489  001994  E104               	bnz	l6949
  8490  001996  0E99               	movlw	153
  8491  001998  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8492  00199A  A0D8               	btfss	status,0,c
  8493  00199C  D0C3               	goto	u9590
  8494  00199E                     l432:
  8495  00199E                     l6949:
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;TabelasUmidade.h: 106: else
  8499                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8500  00199E  0E99               	movlw	153
  8501  0019A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8502  0019A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8503  0019A4  B4D8               	btfsc	status,2,c
  8504  0019A6  D0CA               	goto	u9610
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;TabelasUmidade.h: 108: else
  8508                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8509                           
  8510                           ; BSR set to: 0
  8511                           
  8512                           ; BSR set to: 0
  8513  0019A8  0E9A               	movlw	154
  8514  0019AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8515  0019AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8516  0019AE  B4D8               	btfsc	status,2,c
  8517  0019B0  D0D1               	goto	u9630
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;TabelasUmidade.h: 110: else
  8521                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8522                           
  8523                           ; BSR set to: 0
  8524                           
  8525                           ; BSR set to: 0
  8526  0019B2  0E9B               	movlw	155
  8527  0019B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8528  0019B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8529  0019B8  B4D8               	btfsc	status,2,c
  8530  0019BA  D0DE               	goto	u9650
  8531                           
  8532                           ; BSR set to: 0
  8533  0019BC  0E9C               	movlw	156
  8534  0019BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8535  0019C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8536  0019C2  B4D8               	btfsc	status,2,c
  8537                           
  8538                           ; BSR set to: 0
  8539  0019C4  D0D9               	goto	u9650
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;TabelasUmidade.h: 112: else
  8543                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8544                           
  8545                           ; BSR set to: 0
  8546                           
  8547                           ; BSR set to: 0
  8548  0019C6  0E9D               	movlw	157
  8549  0019C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8550  0019CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8551  0019CC  B4D8               	btfsc	status,2,c
  8552  0019CE  D0E0               	goto	u9670
  8553                           
  8554                           ; BSR set to: 0
  8555  0019D0  0E9E               	movlw	158
  8556  0019D2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8557  0019D4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8558  0019D6  B4D8               	btfsc	status,2,c
  8559                           
  8560                           ; BSR set to: 0
  8561  0019D8  D0DB               	goto	u9670
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;TabelasUmidade.h: 114: else
  8565                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8566                           
  8567                           ; BSR set to: 0
  8568                           
  8569                           ; BSR set to: 0
  8570  0019DA  0E9F               	movlw	159
  8571  0019DC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8572  0019DE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8573  0019E0  A4D8               	btfss	status,2,c
  8574  0019E2  D002               	goto	l446
  8575  0019E4                     u9340:
  8576                           
  8577                           ; BSR set to: 0
  8578  0019E4  0E6E               	movlw	110
  8579  0019E6  D656               	goto	L22
  8580  0019E8                     l446:
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;TabelasUmidade.h: 116: else
  8584                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8585                           
  8586                           ; BSR set to: 0
  8587  0019E8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8588  0019EA  EFD3  F012         	goto	l634
  8589  0019EE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8590  0019F0  E105               	bnz	u9350
  8591  0019F2                     L23:
  8592  0019F2  0EA0               	movlw	160
  8593  0019F4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8594  0019F6  A0D8               	btfss	status,0,c
  8595  0019F8  EFD3  F012         	goto	l634
  8596  0019FC                     u9350:
  8597  0019FC  D0E1               	goto	u9710
  8598  0019FE                     
  8599                           ; BSR set to: 0
  8600                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8601                           
  8602                           ; BSR set to: 0
  8603  0019FE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8604  001A00  D61F               	goto	u8590
  8605  001A02  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8606  001A04  E104               	bnz	l6981
  8607  001A06  0E5B               	movlw	91
  8608  001A08  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8609  001A0A  A0D8               	btfss	status,0,c
  8610  001A0C  D619               	goto	u8590
  8611  001A0E                     l6981:
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;TabelasUmidade.h: 122: else
  8615                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8616  001A0E  0E5B               	movlw	91
  8617  001A10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8618  001A12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8619  001A14  B4D8               	btfsc	status,2,c
  8620  001A16  D61B               	goto	u8600
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;TabelasUmidade.h: 124: else
  8624                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  8625                           
  8626                           ; BSR set to: 0
  8627                           
  8628                           ; BSR set to: 0
  8629  001A18  0E5C               	movlw	92
  8630  001A1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8631  001A1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8632  001A1E  B4D8               	btfsc	status,2,c
  8633  001A20  D61D               	goto	u8610
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;TabelasUmidade.h: 126: else
  8637                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  8638                           
  8639                           ; BSR set to: 0
  8640                           
  8641                           ; BSR set to: 0
  8642  001A22  0E5D               	movlw	93
  8643  001A24  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8644  001A26  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8645  001A28  B4D8               	btfsc	status,2,c
  8646  001A2A  D61F               	goto	u8620
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;TabelasUmidade.h: 128: else
  8650                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  8651                           
  8652                           ; BSR set to: 0
  8653                           
  8654                           ; BSR set to: 0
  8655  001A2C  0E5E               	movlw	94
  8656  001A2E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8657  001A30  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8658  001A32  B4D8               	btfsc	status,2,c
  8659  001A34  D621               	goto	u8630
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;TabelasUmidade.h: 130: else
  8663                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  8664                           
  8665                           ; BSR set to: 0
  8666                           
  8667                           ; BSR set to: 0
  8668  001A36  0E5F               	movlw	95
  8669  001A38  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8670  001A3A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8671  001A3C  B4D8               	btfsc	status,2,c
  8672  001A3E  D262               	goto	u10390
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;TabelasUmidade.h: 132: else
  8676                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  8677                           
  8678                           ; BSR set to: 0
  8679                           
  8680                           ; BSR set to: 0
  8681  001A40  0E60               	movlw	96
  8682  001A42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8683  001A44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8684  001A46  B4D8               	btfsc	status,2,c
  8685  001A48  D25D               	goto	u10390
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;TabelasUmidade.h: 134: else
  8689                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  8690                           
  8691                           ; BSR set to: 0
  8692                           
  8693                           ; BSR set to: 0
  8694  001A4A  0E61               	movlw	97
  8695  001A4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8696  001A4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8697  001A50  B4D8               	btfsc	status,2,c
  8698  001A52  D24B               	goto	u10370
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;TabelasUmidade.h: 136: else
  8702                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  8703                           
  8704                           ; BSR set to: 0
  8705                           
  8706                           ; BSR set to: 0
  8707  001A54  0E62               	movlw	98
  8708  001A56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8709  001A58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8710  001A5A  B4D8               	btfsc	status,2,c
  8711  001A5C  D246               	goto	u10370
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;TabelasUmidade.h: 138: else
  8715                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  8716                           
  8717                           ; BSR set to: 0
  8718                           
  8719                           ; BSR set to: 0
  8720  001A5E  0E63               	movlw	99
  8721  001A60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8722  001A62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8723  001A64  B4D8               	btfsc	status,2,c
  8724  001A66  D239               	goto	u10360
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;TabelasUmidade.h: 140: else
  8728                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  8729                           
  8730                           ; BSR set to: 0
  8731                           
  8732                           ; BSR set to: 0
  8733  001A68  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8734  001A6A  D00E               	goto	l470
  8735  001A6C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8736  001A6E  E104               	bnz	u9460
  8737  001A70  0E64               	movlw	100
  8738  001A72  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8739  001A74  A0D8               	btfss	status,0,c
  8740  001A76  D008               	goto	l470
  8741  001A78                     u9460:
  8742                           
  8743                           ; BSR set to: 0
  8744  001A78  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8745  001A7A  D3D0               	goto	u11000
  8746  001A7C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8747  001A7E  E104               	bnz	l7023
  8748  001A80  0E68               	movlw	104
  8749  001A82  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8750  001A84  A0D8               	btfss	status,0,c
  8751  001A86  D3CA               	goto	u11000
  8752  001A88                     l470:
  8753  001A88                     l7023:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;TabelasUmidade.h: 142: else
  8757                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  8758  001A88  0E68               	movlw	104
  8759  001A8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8760  001A8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8761  001A8E  B4D8               	btfsc	status,2,c
  8762  001A90  D3B2               	goto	u10980
  8763                           
  8764                           ; BSR set to: 0
  8765  001A92  0E69               	movlw	105
  8766  001A94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8767  001A96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8768  001A98  B4D8               	btfsc	status,2,c
  8769                           
  8770                           ; BSR set to: 0
  8771  001A9A  D3AD               	goto	u10980
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;TabelasUmidade.h: 144: else
  8775                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  8776                           
  8777                           ; BSR set to: 0
  8778                           
  8779                           ; BSR set to: 0
  8780  001A9C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8781  001A9E  D00E               	goto	l476
  8782  001AA0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8783  001AA2  E104               	bnz	u9500
  8784  001AA4  0E6A               	movlw	106
  8785  001AA6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8786  001AA8  A0D8               	btfss	status,0,c
  8787  001AAA  D008               	goto	l476
  8788  001AAC                     u9500:
  8789                           
  8790                           ; BSR set to: 0
  8791  001AAC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8792  001AAE  D39B               	goto	u10970
  8793  001AB0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8794  001AB2  E104               	bnz	l7035
  8795  001AB4  0E7B               	movlw	123
  8796  001AB6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8797  001AB8  A0D8               	btfss	status,0,c
  8798  001ABA  D395               	goto	u10970
  8799  001ABC                     l476:
  8800  001ABC                     l7035:
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;TabelasUmidade.h: 146: else
  8804                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  8805  001ABC  0E7B               	movlw	123
  8806  001ABE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8807  001AC0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8808  001AC2  B4D8               	btfsc	status,2,c
  8809  001AC4  D005               	goto	u9530
  8810                           
  8811                           ; BSR set to: 0
  8812  001AC6  0E7C               	movlw	124
  8813  001AC8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8814  001ACA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8815  001ACC  A4D8               	btfss	status,2,c
  8816  001ACE  D002               	goto	l478
  8817  001AD0                     u9530:
  8818                           
  8819                           ; BSR set to: 0
  8820                           
  8821                           ; BSR set to: 0
  8822  001AD0  0E65               	movlw	101
  8823  001AD2  D5E0               	goto	L22
  8824  001AD4                     l478:
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;TabelasUmidade.h: 148: else
  8828                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  8829                           
  8830                           ; BSR set to: 0
  8831  001AD4  0E7D               	movlw	125
  8832  001AD6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8833  001AD8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8834  001ADA  B4D8               	btfsc	status,2,c
  8835  001ADC  D005               	goto	u9550
  8836                           
  8837                           ; BSR set to: 0
  8838  001ADE  0E7E               	movlw	126
  8839  001AE0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8840  001AE2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8841  001AE4  A4D8               	btfss	status,2,c
  8842  001AE6  D002               	goto	l482
  8843  001AE8                     u9550:
  8844                           
  8845                           ; BSR set to: 0
  8846                           
  8847                           ; BSR set to: 0
  8848  001AE8  0E66               	movlw	102
  8849  001AEA  D5D4               	goto	L22
  8850  001AEC                     l482:
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;TabelasUmidade.h: 150: else
  8854                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  8855                           
  8856                           ; BSR set to: 0
  8857  001AEC  0E7F               	movlw	127
  8858  001AEE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8859  001AF0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8860  001AF2  B4D8               	btfsc	status,2,c
  8861  001AF4  D005               	goto	u9570
  8862                           
  8863                           ; BSR set to: 0
  8864  001AF6  0E80               	movlw	128
  8865  001AF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8866  001AFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8867  001AFC  A4D8               	btfss	status,2,c
  8868  001AFE  D002               	goto	l486
  8869  001B00                     u9570:
  8870                           
  8871                           ; BSR set to: 0
  8872                           
  8873                           ; BSR set to: 0
  8874  001B00  0E67               	movlw	103
  8875  001B02  D5C8               	goto	L22
  8876  001B04                     l486:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;TabelasUmidade.h: 152: else
  8880                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  8881                           
  8882                           ; BSR set to: 0
  8883  001B04  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8884  001B06  D010               	goto	l490
  8885  001B08  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8886  001B0A  E104               	bnz	u9580
  8887  001B0C  0E81               	movlw	129
  8888  001B0E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8889  001B10  A0D8               	btfss	status,0,c
  8890  001B12  D00A               	goto	l490
  8891  001B14                     u9580:
  8892                           
  8893                           ; BSR set to: 0
  8894  001B14  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8895  001B16  D006               	goto	u9590
  8896  001B18  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8897  001B1A  E106               	bnz	l7059
  8898  001B1C  0E8B               	movlw	139
  8899  001B1E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8900  001B20  B0D8               	btfsc	status,0,c
  8901  001B22  D002               	goto	l490
  8902  001B24                     u9590:
  8903                           
  8904                           ; BSR set to: 0
  8905  001B24  0E69               	movlw	105
  8906  001B26  D5B6               	goto	L22
  8907  001B28                     l490:
  8908  001B28                     l7059:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;TabelasUmidade.h: 154: else
  8912                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  8913  001B28  0E8B               	movlw	139
  8914  001B2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8915  001B2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8916  001B2E  B4D8               	btfsc	status,2,c
  8917  001B30  D005               	goto	u9610
  8918                           
  8919                           ; BSR set to: 0
  8920  001B32  0E8C               	movlw	140
  8921  001B34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8922  001B36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8923  001B38  A4D8               	btfss	status,2,c
  8924  001B3A  D002               	goto	l492
  8925  001B3C                     u9610:
  8926                           
  8927                           ; BSR set to: 0
  8928                           
  8929                           ; BSR set to: 0
  8930  001B3C  0E6A               	movlw	106
  8931  001B3E  D5AA               	goto	L22
  8932  001B40                     l492:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;TabelasUmidade.h: 156: else
  8936                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  8937                           
  8938                           ; BSR set to: 0
  8939  001B40  0E8D               	movlw	141
  8940  001B42  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8941  001B44  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8942  001B46  B4D8               	btfsc	status,2,c
  8943  001B48  D005               	goto	u9630
  8944                           
  8945                           ; BSR set to: 0
  8946  001B4A  0E92               	movlw	146
  8947  001B4C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8948  001B4E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8949  001B50  A4D8               	btfss	status,2,c
  8950  001B52  D002               	goto	l496
  8951  001B54                     u9630:
  8952                           
  8953                           ; BSR set to: 0
  8954                           
  8955                           ; BSR set to: 0
  8956  001B54  0E6B               	movlw	107
  8957  001B56  D59E               	goto	L22
  8958  001B58                     l496:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;TabelasUmidade.h: 158: else
  8962                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  8963                           
  8964                           ; BSR set to: 0
  8965  001B58  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8966  001B5A  D010               	goto	l500
  8967  001B5C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8968  001B5E  E104               	bnz	u9640
  8969  001B60  0E93               	movlw	147
  8970  001B62  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8971  001B64  A0D8               	btfss	status,0,c
  8972  001B66  D00A               	goto	l500
  8973  001B68                     u9640:
  8974                           
  8975                           ; BSR set to: 0
  8976  001B68  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8977  001B6A  D006               	goto	u9650
  8978  001B6C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8979  001B6E  E106               	bnz	l7077
  8980  001B70  0E98               	movlw	152
  8981  001B72  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8982  001B74  B0D8               	btfsc	status,0,c
  8983  001B76  D002               	goto	l500
  8984  001B78                     u9650:
  8985                           
  8986                           ; BSR set to: 0
  8987  001B78  0E6C               	movlw	108
  8988  001B7A  D58C               	goto	L22
  8989  001B7C                     l500:
  8990  001B7C                     l7077:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;TabelasUmidade.h: 160: else
  8994                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  8995  001B7C  0E99               	movlw	153
  8996  001B7E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8997  001B80  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8998  001B82  B4D8               	btfsc	status,2,c
  8999  001B84  D005               	goto	u9670
  9000                           
  9001                           ; BSR set to: 0
  9002  001B86  0E98               	movlw	152
  9003  001B88  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9004  001B8A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9005  001B8C  A4D8               	btfss	status,2,c
  9006  001B8E  D002               	goto	l502
  9007  001B90                     u9670:
  9008                           
  9009                           ; BSR set to: 0
  9010                           
  9011                           ; BSR set to: 0
  9012  001B90  0E6D               	movlw	109
  9013  001B92  D580               	goto	L22
  9014  001B94                     l502:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;TabelasUmidade.h: 162: else
  9018                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9019                           
  9020                           ; BSR set to: 0
  9021  001B94  0E9B               	movlw	155
  9022  001B96  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9023  001B98  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9024  001B9A  B4D8               	btfsc	status,2,c
  9025  001B9C  D005               	goto	u9690
  9026                           
  9027                           ; BSR set to: 0
  9028  001B9E  0E9A               	movlw	154
  9029  001BA0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9030  001BA2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9031  001BA4  A4D8               	btfss	status,2,c
  9032  001BA6  D002               	goto	l506
  9033  001BA8                     u9690:
  9034                           
  9035                           ; BSR set to: 0
  9036                           
  9037                           ; BSR set to: 0
  9038  001BA8  0E6F               	movlw	111
  9039  001BAA  D574               	goto	L22
  9040  001BAC                     l506:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;TabelasUmidade.h: 164: else
  9044                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9045                           
  9046                           ; BSR set to: 0
  9047  001BAC  0E9D               	movlw	157
  9048  001BAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9049  001BB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9050  001BB2  B4D8               	btfsc	status,2,c
  9051  001BB4  D005               	goto	u9710
  9052                           
  9053                           ; BSR set to: 0
  9054  001BB6  0E9C               	movlw	156
  9055  001BB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9056  001BBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9057  001BBC  A4D8               	btfss	status,2,c
  9058  001BBE  D002               	goto	l510
  9059  001BC0                     u9710:
  9060                           
  9061                           ; BSR set to: 0
  9062                           
  9063                           ; BSR set to: 0
  9064  001BC0  0E70               	movlw	112
  9065  001BC2  D568               	goto	L22
  9066  001BC4                     l510:
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;TabelasUmidade.h: 166: else
  9070                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9071                           
  9072                           ; BSR set to: 0
  9073  001BC4  0E9F               	movlw	159
  9074  001BC6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9075  001BC8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9076  001BCA  B4D8               	btfsc	status,2,c
  9077  001BCC  D005               	goto	u9730
  9078                           
  9079                           ; BSR set to: 0
  9080  001BCE  0E9E               	movlw	158
  9081  001BD0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9082  001BD2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9083  001BD4  A4D8               	btfss	status,2,c
  9084  001BD6  D002               	goto	l514
  9085  001BD8                     u9730:
  9086                           
  9087                           ; BSR set to: 0
  9088                           
  9089                           ; BSR set to: 0
  9090  001BD8  0E71               	movlw	113
  9091  001BDA  D55C               	goto	L22
  9092  001BDC                     l514:
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;TabelasUmidade.h: 168: else
  9096                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9097                           
  9098                           ; BSR set to: 0
  9099  001BDC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9100  001BDE  EFD3  F012         	goto	l634
  9101  001BE2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9102  001BE4  E105               	bnz	u9740
  9103  001BE6  0EA0               	movlw	160
  9104  001BE8  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9105  001BEA  A0D8               	btfss	status,0,c
  9106  001BEC  EFD3  F012         	goto	l634
  9107  001BF0                     u9740:
  9108                           
  9109                           ; BSR set to: 0
  9110  001BF0  0E73               	movlw	115
  9111  001BF2  D550               	goto	L22
  9112  001BF4                     l301:
  9113                           
  9114                           ; BSR set to: 0
  9115                           
  9116                           ; BSR set to: 0
  9117  001BF4  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9118  001BF8  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9119                           
  9120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9121                           ; Switch size 1, requested type "space"
  9122                           ; Number of cases is 1, Range of values is 0 to 0
  9123                           ; switch strategies available:
  9124                           ; Name         Instructions Cycles
  9125                           ; simple_byte            4     3 (average)
  9126                           ;	Chosen strategy is simple_byte
  9127  001BFC  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9128  001BFE  0A00               	xorlw	0	; case 0
  9129  001C00  A4D8               	btfss	status,2,c
  9130  001C02  EFD3  F012         	goto	l634
  9131                           
  9132                           ; BSR set to: 0
  9133                           ; Switch size 1, requested type "space"
  9134                           ; Number of cases is 3, Range of values is 1 to 3
  9135                           ; switch strategies available:
  9136                           ; Name         Instructions Cycles
  9137                           ; simple_byte           10     6 (average)
  9138                           ;	Chosen strategy is simple_byte
  9139  001C06  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9140  001C08  0A01               	xorlw	1	; case 1
  9141  001C0A  B4D8               	btfsc	status,2,c
  9142  001C0C  D4EE               	goto	l302
  9143  001C0E  0A03               	xorlw	3	; case 2
  9144  001C10  B4D8               	btfsc	status,2,c
  9145  001C12  D610               	goto	l387
  9146  001C14  0A01               	xorlw	1	; case 3
  9147  001C16  B4D8               	btfsc	status,2,c
  9148  001C18  D6F2               	goto	l449
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9152  001C1A  EFD3  F012         	goto	l634
  9153  001C1E                     l300:
  9154                           
  9155                           ; BSR set to: 0
  9156                           
  9157                           ; BSR set to: 0
  9158  001C1E  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9159  001C20  B4D8               	btfsc	status,2,c
  9160  001C22  EFC8  F012         	goto	l521
  9161  001C26  EFD3  F012         	goto	l634
  9162  001C2A                     
  9163                           ; BSR set to: 0
  9164                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9165                           
  9166                           ; BSR set to: 0
  9167  001C2A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9168  001C2C  D517               	goto	u8610
  9169  001C2E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9170  001C30  E104               	bnz	l7117
  9171  001C32  0E5B               	movlw	91
  9172  001C34  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9173  001C36  A0D8               	btfss	status,0,c
  9174  001C38  D511               	goto	u8610
  9175  001C3A                     l7117:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;TabelasUmidade.h: 176: else
  9179                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9180  001C3A  0E5B               	movlw	91
  9181  001C3C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9182  001C3E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9183  001C40  B4D8               	btfsc	status,2,c
  9184  001C42  D50C               	goto	u8610
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;TabelasUmidade.h: 178: else
  9188                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9189                           
  9190                           ; BSR set to: 0
  9191                           
  9192                           ; BSR set to: 0
  9193  001C44  0E5C               	movlw	92
  9194  001C46  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9195  001C48  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9196  001C4A  B4D8               	btfsc	status,2,c
  9197  001C4C  D4F9               	goto	u8590
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;TabelasUmidade.h: 180: else
  9201                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9202                           
  9203                           ; BSR set to: 0
  9204                           
  9205                           ; BSR set to: 0
  9206  001C4E  0E5D               	movlw	93
  9207  001C50  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9208  001C52  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9209  001C54  B4D8               	btfsc	status,2,c
  9210  001C56  D4ED               	goto	u8580
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;TabelasUmidade.h: 182: else
  9214                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9215                           
  9216                           ; BSR set to: 0
  9217                           
  9218                           ; BSR set to: 0
  9219  001C58  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9220  001C5A  D00E               	goto	l531
  9221  001C5C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9222  001C5E  E104               	bnz	u9800
  9223  001C60  0E5E               	movlw	94
  9224  001C62  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9225  001C64  A0D8               	btfss	status,0,c
  9226  001C66  D008               	goto	l531
  9227  001C68                     u9800:
  9228                           
  9229                           ; BSR set to: 0
  9230  001C68  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9231  001C6A  D4DC               	goto	u8570
  9232  001C6C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9233  001C6E  E104               	bnz	l7135
  9234  001C70  0E65               	movlw	101
  9235  001C72  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9236  001C74  A0D8               	btfss	status,0,c
  9237  001C76  D4D6               	goto	u8570
  9238  001C78                     l531:
  9239  001C78                     l7135:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;TabelasUmidade.h: 184: else
  9243                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9244  001C78  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9245  001C7A  D00E               	goto	l533
  9246  001C7C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9247  001C7E  E104               	bnz	u9820
  9248  001C80  0E65               	movlw	101
  9249  001C82  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9250  001C84  A0D8               	btfss	status,0,c
  9251  001C86  D008               	goto	l533
  9252  001C88                     u9820:
  9253                           
  9254                           ; BSR set to: 0
  9255  001C88  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9256  001C8A  D2FE               	goto	u11070
  9257  001C8C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9258  001C8E  E104               	bnz	l7141
  9259  001C90  0E67               	movlw	103
  9260  001C92  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9261  001C94  A0D8               	btfss	status,0,c
  9262  001C96  D2F8               	goto	u11070
  9263  001C98                     l533:
  9264  001C98                     l7141:
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;TabelasUmidade.h: 186: else
  9268                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9269  001C98  0E67               	movlw	103
  9270  001C9A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9271  001C9C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9272  001C9E  B4D8               	btfsc	status,2,c
  9273  001CA0  D303               	goto	u11090
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;TabelasUmidade.h: 188: else
  9277                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9278                           
  9279                           ; BSR set to: 0
  9280                           
  9281                           ; BSR set to: 0
  9282  001CA2  0E68               	movlw	104
  9283  001CA4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9284  001CA6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9285  001CA8  B4D8               	btfsc	status,2,c
  9286  001CAA  D306               	goto	u11100
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;TabelasUmidade.h: 190: else
  9290                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9291                           
  9292                           ; BSR set to: 0
  9293                           
  9294                           ; BSR set to: 0
  9295  001CAC  0E69               	movlw	105
  9296  001CAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9297  001CB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9298  001CB2  B4D8               	btfsc	status,2,c
  9299  001CB4  D179               	goto	u10500
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;TabelasUmidade.h: 192: else
  9303                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9304                           
  9305                           ; BSR set to: 0
  9306                           
  9307                           ; BSR set to: 0
  9308  001CB6  0E6A               	movlw	106
  9309  001CB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9310  001CBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9311  001CBC  B4D8               	btfsc	status,2,c
  9312  001CBE  D30F               	goto	u11120
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;TabelasUmidade.h: 194: else
  9316                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9317                           
  9318                           ; BSR set to: 0
  9319                           
  9320                           ; BSR set to: 0
  9321  001CC0  0E6B               	movlw	107
  9322  001CC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9323  001CC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9324  001CC6  B4D8               	btfsc	status,2,c
  9325  001CC8  D312               	goto	u11130
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;TabelasUmidade.h: 196: else
  9329                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9330                           
  9331                           ; BSR set to: 0
  9332                           
  9333                           ; BSR set to: 0
  9334  001CCA  0E6C               	movlw	108
  9335  001CCC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9336  001CCE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9337  001CD0  A4D8               	btfss	status,2,c
  9338  001CD2  D002               	goto	l545
  9339                           
  9340                           ; BSR set to: 0
  9341  001CD4  0E43               	movlw	67
  9342  001CD6  D4DE               	goto	L22
  9343  001CD8                     l545:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;TabelasUmidade.h: 198: else
  9347                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9348                           
  9349                           ; BSR set to: 0
  9350  001CD8  0E6D               	movlw	109
  9351  001CDA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9352  001CDC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9353  001CDE  B4D8               	btfsc	status,2,c
  9354  001CE0  D30E               	goto	u11140
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;TabelasUmidade.h: 200: else
  9358                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9359                           
  9360                           ; BSR set to: 0
  9361                           
  9362                           ; BSR set to: 0
  9363  001CE2  0E6E               	movlw	110
  9364  001CE4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9365  001CE6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9366  001CE8  B4D8               	btfsc	status,2,c
  9367  001CEA  D17E               	goto	u10540
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;TabelasUmidade.h: 202: else
  9371                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9372                           
  9373                           ; BSR set to: 0
  9374                           
  9375                           ; BSR set to: 0
  9376  001CEC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9377  001CEE  D00E               	goto	l551
  9378  001CF0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9379  001CF2  E104               	bnz	u9920
  9380  001CF4  0E6F               	movlw	111
  9381  001CF6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9382  001CF8  A0D8               	btfss	status,0,c
  9383  001CFA  D008               	goto	l551
  9384  001CFC                     u9920:
  9385                           
  9386                           ; BSR set to: 0
  9387  001CFC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9388  001CFE  D317               	goto	u11170
  9389  001D00  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9390  001D02  E104               	bnz	l7179
  9391  001D04  0E73               	movlw	115
  9392  001D06  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9393  001D08  A0D8               	btfss	status,0,c
  9394  001D0A  D311               	goto	u11170
  9395  001D0C                     l551:
  9396  001D0C                     l7179:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;TabelasUmidade.h: 204: else
  9400                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9401  001D0C  0E73               	movlw	115
  9402  001D0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9403  001D10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9404  001D12  B4D8               	btfsc	status,2,c
  9405  001D14  D314               	goto	u11180
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;TabelasUmidade.h: 206: else
  9409                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9410                           
  9411                           ; BSR set to: 0
  9412                           
  9413                           ; BSR set to: 0
  9414  001D16  0E74               	movlw	116
  9415  001D18  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9416  001D1A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9417  001D1C  B4D8               	btfsc	status,2,c
  9418  001D1E  D317               	goto	u11190
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;TabelasUmidade.h: 208: else
  9422                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9423                           
  9424                           ; BSR set to: 0
  9425                           
  9426                           ; BSR set to: 0
  9427  001D20  0E75               	movlw	117
  9428  001D22  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9429  001D24  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9430  001D26  A4D8               	btfss	status,2,c
  9431  001D28  D002               	goto	l557
  9432                           
  9433                           ; BSR set to: 0
  9434  001D2A  0E36               	movlw	54
  9435  001D2C  D4B3               	goto	L22
  9436  001D2E                     l557:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;TabelasUmidade.h: 210: else
  9440                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9441                           
  9442                           ; BSR set to: 0
  9443  001D2E  0E76               	movlw	118
  9444  001D30  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9445  001D32  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9446  001D34  B4D8               	btfsc	status,2,c
  9447  001D36  D323               	goto	u11220
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;TabelasUmidade.h: 212: else
  9451                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9452                           
  9453                           ; BSR set to: 0
  9454                           
  9455                           ; BSR set to: 0
  9456  001D38  0E77               	movlw	119
  9457  001D3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9458  001D3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9459  001D3E  B4D8               	btfsc	status,2,c
  9460  001D40  D326               	goto	u11230
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;TabelasUmidade.h: 214: else
  9464                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9465                           
  9466                           ; BSR set to: 0
  9467                           
  9468                           ; BSR set to: 0
  9469  001D42  0E78               	movlw	120
  9470  001D44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9471  001D46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9472  001D48  B4D8               	btfsc	status,2,c
  9473  001D4A  D18D               	goto	u10630
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;TabelasUmidade.h: 216: else
  9477                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9478                           
  9479                           ; BSR set to: 0
  9480                           
  9481                           ; BSR set to: 0
  9482  001D4C  0E79               	movlw	121
  9483  001D4E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9484  001D50  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9485  001D52  B4D8               	btfsc	status,2,c
  9486  001D54  D32C               	goto	u11250
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;TabelasUmidade.h: 218: else
  9490                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9491                           
  9492                           ; BSR set to: 0
  9493                           
  9494                           ; BSR set to: 0
  9495  001D56  0E7A               	movlw	122
  9496  001D58  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9497  001D5A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9498  001D5C  A4D8               	btfss	status,2,c
  9499  001D5E  D002               	goto	l567
  9500                           
  9501                           ; BSR set to: 0
  9502  001D60  0E2E               	movlw	46
  9503  001D62  D498               	goto	L22
  9504  001D64                     l567:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;TabelasUmidade.h: 220: else
  9508                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9509                           
  9510                           ; BSR set to: 0
  9511  001D64  0E7B               	movlw	123
  9512  001D66  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9513  001D68  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9514  001D6A  B4D8               	btfsc	status,2,c
  9515  001D6C  D328               	goto	u11260
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;TabelasUmidade.h: 222: else
  9519                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9520                           
  9521                           ; BSR set to: 0
  9522                           
  9523                           ; BSR set to: 0
  9524  001D6E  0E7C               	movlw	124
  9525  001D70  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9526  001D72  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9527  001D74  B4D8               	btfsc	status,2,c
  9528  001D76  D189               	goto	u10660
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;TabelasUmidade.h: 224: else
  9532                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9533                           
  9534                           ; BSR set to: 0
  9535                           
  9536                           ; BSR set to: 0
  9537  001D78  0E7D               	movlw	125
  9538  001D7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9539  001D7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9540  001D7E  B4D8               	btfsc	status,2,c
  9541  001D80  D326               	goto	u11270
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;TabelasUmidade.h: 226: else
  9545                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9546                           
  9547                           ; BSR set to: 0
  9548                           
  9549                           ; BSR set to: 0
  9550  001D82  0E7E               	movlw	126
  9551  001D84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9552  001D86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9553  001D88  B4D8               	btfsc	status,2,c
  9554  001D8A  D187               	goto	u10670
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;TabelasUmidade.h: 228: else
  9558                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9559                           
  9560                           ; BSR set to: 0
  9561                           
  9562                           ; BSR set to: 0
  9563  001D8C  0E7F               	movlw	127
  9564  001D8E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9565  001D90  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9566  001D92  B4D8               	btfsc	status,2,c
  9567  001D94  D32C               	goto	u11290
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;TabelasUmidade.h: 230: else
  9571                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9572                           
  9573                           ; BSR set to: 0
  9574                           
  9575                           ; BSR set to: 0
  9576  001D96  0E80               	movlw	128
  9577  001D98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9578  001D9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9579  001D9C  B4D8               	btfsc	status,2,c
  9580  001D9E  D327               	goto	u11290
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;TabelasUmidade.h: 232: else
  9584                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9585                           
  9586                           ; BSR set to: 0
  9587                           
  9588                           ; BSR set to: 0
  9589  001DA0  0E81               	movlw	129
  9590  001DA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9591  001DA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9592  001DA6  B4D8               	btfsc	status,2,c
  9593  001DA8  D32A               	goto	u11300
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;TabelasUmidade.h: 234: else
  9597                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9598                           
  9599                           ; BSR set to: 0
  9600                           
  9601                           ; BSR set to: 0
  9602  001DAA  0E82               	movlw	130
  9603  001DAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9604  001DAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9605  001DB0  A4D8               	btfss	status,2,c
  9606  001DB2  D002               	goto	l583
  9607                           
  9608                           ; BSR set to: 0
  9609  001DB4  0E26               	movlw	38
  9610  001DB6  D46E               	goto	L22
  9611  001DB8                     l583:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;TabelasUmidade.h: 236: else
  9615                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9616                           
  9617                           ; BSR set to: 0
  9618  001DB8  0E83               	movlw	131
  9619  001DBA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9620  001DBC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9621  001DBE  B4D8               	btfsc	status,2,c
  9622  001DC0  D326               	goto	u11310
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;TabelasUmidade.h: 238: else
  9626                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
  9627                           
  9628                           ; BSR set to: 0
  9629                           
  9630                           ; BSR set to: 0
  9631  001DC2  0E84               	movlw	132
  9632  001DC4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9633  001DC6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9634  001DC8  B4D8               	btfsc	status,2,c
  9635  001DCA  D329               	goto	u11320
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;TabelasUmidade.h: 240: else
  9639                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
  9640                           
  9641                           ; BSR set to: 0
  9642                           
  9643                           ; BSR set to: 0
  9644  001DCC  0E85               	movlw	133
  9645  001DCE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9646  001DD0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9647  001DD2  B4D8               	btfsc	status,2,c
  9648  001DD4  D324               	goto	u11320
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;TabelasUmidade.h: 242: else
  9652                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
  9653                           
  9654                           ; BSR set to: 0
  9655                           
  9656                           ; BSR set to: 0
  9657  001DD6  0E86               	movlw	134
  9658  001DD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9659  001DDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9660  001DDC  B4D8               	btfsc	status,2,c
  9661  001DDE  D31F               	goto	u11320
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;TabelasUmidade.h: 244: else
  9665                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
  9666                           
  9667                           ; BSR set to: 0
  9668                           
  9669                           ; BSR set to: 0
  9670  001DE0  0E87               	movlw	135
  9671  001DE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9672  001DE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9673  001DE6  B4D8               	btfsc	status,2,c
  9674  001DE8  D322               	goto	u11330
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;TabelasUmidade.h: 246: else
  9678                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
  9679                           
  9680                           ; BSR set to: 0
  9681                           
  9682                           ; BSR set to: 0
  9683  001DEA  0E88               	movlw	136
  9684  001DEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9685  001DEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9686  001DF0  B4D8               	btfsc	status,2,c
  9687  001DF2  D325               	goto	u11340
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;TabelasUmidade.h: 248: else
  9691                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
  9692                           
  9693                           ; BSR set to: 0
  9694                           
  9695                           ; BSR set to: 0
  9696  001DF4  0E89               	movlw	137
  9697  001DF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9698  001DF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9699  001DFA  B4D8               	btfsc	status,2,c
  9700  001DFC  D328               	goto	u11350
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;TabelasUmidade.h: 250: else
  9704                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
  9705                           
  9706                           ; BSR set to: 0
  9707                           
  9708                           ; BSR set to: 0
  9709  001DFE  0E8A               	movlw	138
  9710  001E00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9711  001E02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9712  001E04  B4D8               	btfsc	status,2,c
  9713  001E06  D32B               	goto	u11360
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;TabelasUmidade.h: 252: else
  9717                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
  9718                           
  9719                           ; BSR set to: 0
  9720                           
  9721                           ; BSR set to: 0
  9722  001E08  0E8B               	movlw	139
  9723  001E0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9724  001E0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9725  001E0E  B4D8               	btfsc	status,2,c
  9726  001E10  D32E               	goto	u11370
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;TabelasUmidade.h: 254: else
  9730                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
  9731                           
  9732                           ; BSR set to: 0
  9733                           
  9734                           ; BSR set to: 0
  9735  001E12  0E8C               	movlw	140
  9736  001E14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9737  001E16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9738  001E18  B4D8               	btfsc	status,2,c
  9739  001E1A  D331               	goto	u11380
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;TabelasUmidade.h: 256: else
  9743                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
  9744                           
  9745                           ; BSR set to: 0
  9746                           
  9747                           ; BSR set to: 0
  9748  001E1C  0E8D               	movlw	141
  9749  001E1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9750  001E20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9751  001E22  B4D8               	btfsc	status,2,c
  9752  001E24  D334               	goto	u11390
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;TabelasUmidade.h: 258: else
  9756                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
  9757                           
  9758                           ; BSR set to: 0
  9759                           
  9760                           ; BSR set to: 0
  9761  001E26  0E8E               	movlw	142
  9762  001E28  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9763  001E2A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9764  001E2C  B4D8               	btfsc	status,2,c
  9765  001E2E  D337               	goto	u11400
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;TabelasUmidade.h: 260: else
  9769                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
  9770                           
  9771                           ; BSR set to: 0
  9772                           
  9773                           ; BSR set to: 0
  9774  001E30  0E8F               	movlw	143
  9775  001E32  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9776  001E34  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9777  001E36  B4D8               	btfsc	status,2,c
  9778  001E38  D33A               	goto	u11410
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;TabelasUmidade.h: 262: else
  9782                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
  9783                           
  9784                           ; BSR set to: 0
  9785                           
  9786                           ; BSR set to: 0
  9787  001E3A  0E90               	movlw	144
  9788  001E3C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9789  001E3E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9790  001E40  B4D8               	btfsc	status,2,c
  9791  001E42  D33D               	goto	u11420
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;TabelasUmidade.h: 264: else
  9795                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
  9796                           
  9797                           ; BSR set to: 0
  9798                           
  9799                           ; BSR set to: 0
  9800  001E44  0E91               	movlw	145
  9801  001E46  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9802  001E48  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9803  001E4A  B4D8               	btfsc	status,2,c
  9804  001E4C  D340               	goto	u11430
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;TabelasUmidade.h: 266: else
  9808                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
  9809                           
  9810                           ; BSR set to: 0
  9811                           
  9812                           ; BSR set to: 0
  9813  001E4E  0E92               	movlw	146
  9814  001E50  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9815  001E52  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9816  001E54  B4D8               	btfsc	status,2,c
  9817  001E56  D343               	goto	u11440
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;TabelasUmidade.h: 268: else
  9821                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
  9822                           
  9823                           ; BSR set to: 0
  9824                           
  9825                           ; BSR set to: 0
  9826  001E58  0E93               	movlw	147
  9827  001E5A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9828  001E5C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9829  001E5E  B4D8               	btfsc	status,2,c
  9830  001E60  D346               	goto	u11450
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;TabelasUmidade.h: 270: else
  9834                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
  9835                           
  9836                           ; BSR set to: 0
  9837                           
  9838                           ; BSR set to: 0
  9839  001E62  0E94               	movlw	148
  9840  001E64  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9841  001E66  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9842  001E68  B4D8               	btfsc	status,2,c
  9843  001E6A  D349               	goto	u11460
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;TabelasUmidade.h: 272: else
  9847                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
  9848                           
  9849                           ; BSR set to: 0
  9850                           
  9851                           ; BSR set to: 0
  9852  001E6C  0E95               	movlw	149
  9853  001E6E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9854  001E70  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9855  001E72  B4D8               	btfsc	status,2,c
  9856  001E74  D34C               	goto	u11470
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;TabelasUmidade.h: 274: else
  9860                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
  9861                           
  9862                           ; BSR set to: 0
  9863                           
  9864                           ; BSR set to: 0
  9865  001E76  0E96               	movlw	150
  9866  001E78  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9867  001E7A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9868  001E7C  B4D8               	btfsc	status,2,c
  9869  001E7E  D34F               	goto	u11480
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;TabelasUmidade.h: 276: else
  9873                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
  9874                           
  9875                           ; BSR set to: 0
  9876                           
  9877                           ; BSR set to: 0
  9878  001E80  0E97               	movlw	151
  9879  001E82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9880  001E84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9881  001E86  B4D8               	btfsc	status,2,c
  9882  001E88  D352               	goto	u11490
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;TabelasUmidade.h: 278: else
  9886                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
  9887                           
  9888                           ; BSR set to: 0
  9889                           
  9890                           ; BSR set to: 0
  9891  001E8A  0E98               	movlw	152
  9892  001E8C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9893  001E8E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9894  001E90  B4D8               	btfsc	status,2,c
  9895  001E92  D355               	goto	u11500
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;TabelasUmidade.h: 280: else
  9899                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
  9900                           
  9901                           ; BSR set to: 0
  9902                           
  9903                           ; BSR set to: 0
  9904  001E94  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9905  001E96  D00E               	goto	l629
  9906  001E98  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9907  001E9A  E104               	bnz	u10320
  9908  001E9C  0E99               	movlw	153
  9909  001E9E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9910  001EA0  A0D8               	btfss	status,0,c
  9911  001EA2  D008               	goto	l629
  9912  001EA4                     u10320:
  9913                           
  9914                           ; BSR set to: 0
  9915  001EA4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9916  001EA6  D35E               	goto	u11520
  9917  001EA8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9918  001EAA  E104               	bnz	l7337
  9919  001EAC  0E9D               	movlw	157
  9920  001EAE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9921  001EB0  A0D8               	btfss	status,0,c
  9922  001EB2  D358               	goto	u11520
  9923  001EB4                     l629:
  9924  001EB4                     l7337:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;TabelasUmidade.h: 282: else
  9928                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
  9929  001EB4  0E9D               	movlw	157
  9930  001EB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9931  001EB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9932  001EBA  B4D8               	btfsc	status,2,c
  9933  001EBC  D35B               	goto	u11530
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;TabelasUmidade.h: 284: else
  9937                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
  9938                           
  9939                           ; BSR set to: 0
  9940                           
  9941                           ; BSR set to: 0
  9942  001EBE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9943  001EC0  D372               	goto	l634
  9944  001EC2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9945  001EC4  E101               	bnz	u10350
  9946  001EC6  D182               	goto	L24
  9947  001EC8                     u10350:
  9948  001EC8  D360               	goto	u11540
  9949  001ECA                     
  9950                           ; BSR set to: 0
  9951                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
  9952                           
  9953                           ; BSR set to: 0
  9954  001ECA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9955  001ECC  D006               	goto	u10360
  9956  001ECE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9957  001ED0  E107               	bnz	l7349
  9958  001ED2  0E5B               	movlw	91
  9959  001ED4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9960  001ED6  B0D8               	btfsc	status,0,c
  9961  001ED8  D003               	goto	l636
  9962  001EDA                     u10360:
  9963                           
  9964                           ; BSR set to: 0
  9965  001EDA  0E61               	movlw	97
  9966  001EDC  EF4A  F00B         	goto	L22
  9967  001EE0                     l636:
  9968  001EE0                     l7349:
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;TabelasUmidade.h: 289: else
  9972                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
  9973  001EE0  0E5B               	movlw	91
  9974  001EE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9975  001EE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9976  001EE6  A4D8               	btfss	status,2,c
  9977  001EE8  D003               	goto	l638
  9978  001EEA                     u10370:
  9979                           
  9980                           ; BSR set to: 0
  9981  001EEA  0E60               	movlw	96
  9982  001EEC  EF4A  F00B         	goto	L22
  9983  001EF0                     l638:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;TabelasUmidade.h: 291: else
  9987                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
  9988                           
  9989                           ; BSR set to: 0
  9990  001EF0  0E5C               	movlw	92
  9991  001EF2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9992  001EF4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9993  001EF6  B4D8               	btfsc	status,2,c
  9994  001EF8  D005               	goto	u10390
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;TabelasUmidade.h: 293: else
  9998                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
  9999                           
 10000                           ; BSR set to: 0
 10001                           
 10002                           ; BSR set to: 0
 10003  001EFA  0E5C               	movlw	92
 10004  001EFC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10005  001EFE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10006  001F00  A4D8               	btfss	status,2,c
 10007  001F02  D003               	goto	l642
 10008  001F04                     u10390:
 10009                           
 10010                           ; BSR set to: 0
 10011  001F04  0E5F               	movlw	95
 10012  001F06  EF4A  F00B         	goto	L22
 10013  001F0A                     l642:
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;TabelasUmidade.h: 295: else
 10017                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10018                           
 10019                           ; BSR set to: 0
 10020  001F0A  0E5D               	movlw	93
 10021  001F0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10022  001F0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10023  001F10  B4D8               	btfsc	status,2,c
 10024  001F12  EF3C  F00B         	goto	u8630
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;TabelasUmidade.h: 297: else
 10028                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10029                           
 10030                           ; BSR set to: 0
 10031                           
 10032                           ; BSR set to: 0
 10033  001F16  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10034  001F18  D010               	goto	l646
 10035  001F1A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10036  001F1C  E104               	bnz	u10410
 10037  001F1E  0E5E               	movlw	94
 10038  001F20  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10039  001F22  A0D8               	btfss	status,0,c
 10040  001F24  D00A               	goto	l646
 10041  001F26                     u10410:
 10042                           
 10043                           ; BSR set to: 0
 10044  001F26  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10045  001F28  EF35  F00B         	goto	u8620
 10046  001F2C  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10047  001F2E  E105               	bnz	l7371
 10048  001F30  0E65               	movlw	101
 10049  001F32  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10050  001F34  A0D8               	btfss	status,0,c
 10051  001F36  EF35  F00B         	goto	u8620
 10052  001F3A                     l646:
 10053  001F3A                     l7371:
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;TabelasUmidade.h: 299: else
 10057                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10058  001F3A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10059  001F3C  D011               	goto	l648
 10060  001F3E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10061  001F40  E104               	bnz	u10430
 10062  001F42  0E65               	movlw	101
 10063  001F44  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10064  001F46  A0D8               	btfss	status,0,c
 10065  001F48  D00B               	goto	l648
 10066  001F4A                     u10430:
 10067                           
 10068                           ; BSR set to: 0
 10069  001F4A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10070  001F4C  D006               	goto	u10440
 10071  001F4E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10072  001F50  E107               	bnz	l7377
 10073  001F52  0E67               	movlw	103
 10074  001F54  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10075  001F56  B0D8               	btfsc	status,0,c
 10076  001F58  D003               	goto	l648
 10077  001F5A                     u10440:
 10078                           
 10079                           ; BSR set to: 0
 10080  001F5A  0E53               	movlw	83
 10081  001F5C  EF4A  F00B         	goto	L22
 10082  001F60                     l648:
 10083  001F60                     l7377:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;TabelasUmidade.h: 301: else
 10087                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10088  001F60  0E67               	movlw	103
 10089  001F62  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10090  001F64  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10091  001F66  A4D8               	btfss	status,2,c
 10092  001F68  D003               	goto	l650
 10093                           
 10094                           ; BSR set to: 0
 10095  001F6A  0E51               	movlw	81
 10096  001F6C  EF4A  F00B         	goto	L22
 10097  001F70                     l650:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;TabelasUmidade.h: 303: else
 10101                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10102                           
 10103                           ; BSR set to: 0
 10104  001F70  0E68               	movlw	104
 10105  001F72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10106  001F74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10107  001F76  B4D8               	btfsc	status,2,c
 10108  001F78  D17F               	goto	u11060
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;TabelasUmidade.h: 305: else
 10112                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10113                           
 10114                           ; BSR set to: 0
 10115                           
 10116                           ; BSR set to: 0
 10117  001F7A  0E69               	movlw	105
 10118  001F7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10119  001F7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10120  001F80  B4D8               	btfsc	status,2,c
 10121  001F82  D18A               	goto	u11080
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;TabelasUmidade.h: 307: else
 10125                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10126                           
 10127                           ; BSR set to: 0
 10128                           
 10129                           ; BSR set to: 0
 10130  001F84  0E6A               	movlw	106
 10131  001F86  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10132  001F88  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10133  001F8A  B4D8               	btfsc	status,2,c
 10134  001F8C  D195               	goto	u11100
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;TabelasUmidade.h: 309: else
 10138                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10139                           
 10140                           ; BSR set to: 0
 10141                           
 10142                           ; BSR set to: 0
 10143  001F8E  0E6B               	movlw	107
 10144  001F90  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10145  001F92  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10146  001F94  A4D8               	btfss	status,2,c
 10147  001F96  D003               	goto	l658
 10148                           
 10149                           ; BSR set to: 0
 10150  001F98  0E49               	movlw	73
 10151  001F9A  EF4A  F00B         	goto	L22
 10152  001F9E                     l658:
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;TabelasUmidade.h: 311: else
 10156                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10157                           
 10158                           ; BSR set to: 0
 10159  001F9E  0E6C               	movlw	108
 10160  001FA0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10161  001FA2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10162  001FA4  A4D8               	btfss	status,2,c
 10163  001FA6  D003               	goto	l660
 10164  001FA8                     u10500:
 10165                           
 10166                           ; BSR set to: 0
 10167  001FA8  0E48               	movlw	72
 10168  001FAA  EF4A  F00B         	goto	L22
 10169  001FAE                     l660:
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;TabelasUmidade.h: 313: else
 10173                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10174                           
 10175                           ; BSR set to: 0
 10176  001FAE  0E6D               	movlw	109
 10177  001FB0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10178  001FB2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10179  001FB4  A4D8               	btfss	status,2,c
 10180  001FB6  D003               	goto	l662
 10181                           
 10182                           ; BSR set to: 0
 10183  001FB8  0E47               	movlw	71
 10184  001FBA  EF4A  F00B         	goto	L22
 10185  001FBE                     l662:
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;TabelasUmidade.h: 315: else
 10189                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10190                           
 10191                           ; BSR set to: 0
 10192  001FBE  0E6E               	movlw	110
 10193  001FC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10194  001FC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10195  001FC4  B4D8               	btfsc	status,2,c
 10196  001FC6  D18B               	goto	u11120
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;TabelasUmidade.h: 317: else
 10200                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10201                           
 10202                           ; BSR set to: 0
 10203                           
 10204                           ; BSR set to: 0
 10205  001FC8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10206  001FCA  D011               	goto	l666
 10207  001FCC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10208  001FCE  E104               	bnz	u10530
 10209  001FD0  0E6F               	movlw	111
 10210  001FD2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10211  001FD4  A0D8               	btfss	status,0,c
 10212  001FD6  D00B               	goto	l666
 10213  001FD8                     u10530:
 10214                           
 10215                           ; BSR set to: 0
 10216  001FD8  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10217  001FDA  D006               	goto	u10540
 10218  001FDC  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10219  001FDE  E107               	bnz	l7415
 10220  001FE0  0E73               	movlw	115
 10221  001FE2  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10222  001FE4  B0D8               	btfsc	status,0,c
 10223  001FE6  D003               	goto	l666
 10224  001FE8                     u10540:
 10225                           
 10226                           ; BSR set to: 0
 10227  001FE8  0E41               	movlw	65
 10228  001FEA  EF4A  F00B         	goto	L22
 10229  001FEE                     l666:
 10230  001FEE                     l7415:
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;TabelasUmidade.h: 319: else
 10234                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10235  001FEE  0E73               	movlw	115
 10236  001FF0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10237  001FF2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10238  001FF4  A4D8               	btfss	status,2,c
 10239  001FF6  D003               	goto	l668
 10240                           
 10241                           ; BSR set to: 0
 10242  001FF8  0E3F               	movlw	63
 10243  001FFA  EF4A  F00B         	goto	L22
 10244  001FFE                     l668:
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;TabelasUmidade.h: 321: else
 10248                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10249                           
 10250                           ; BSR set to: 0
 10251  001FFE  0E74               	movlw	116
 10252  002000  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10253  002002  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10254  002004  A4D8               	btfss	status,2,c
 10255  002006  D003               	goto	l670
 10256                           
 10257                           ; BSR set to: 0
 10258  002008  0E3D               	movlw	61
 10259  00200A  EF4A  F00B         	goto	L22
 10260  00200E                     l670:
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;TabelasUmidade.h: 323: else
 10264                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10265                           
 10266                           ; BSR set to: 0
 10267  00200E  0E75               	movlw	117
 10268  002010  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10269  002012  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10270  002014  A4D8               	btfss	status,2,c
 10271  002016  D003               	goto	l672
 10272                           
 10273                           ; BSR set to: 0
 10274  002018  0E3B               	movlw	59
 10275  00201A  EF4A  F00B         	goto	L22
 10276  00201E                     l672:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;TabelasUmidade.h: 325: else
 10280                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10281                           
 10282                           ; BSR set to: 0
 10283  00201E  0E76               	movlw	118
 10284  002020  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10285  002022  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10286  002024  A4D8               	btfss	status,2,c
 10287  002026  D003               	goto	l674
 10288                           
 10289                           ; BSR set to: 0
 10290  002028  0E39               	movlw	57
 10291  00202A  EF4A  F00B         	goto	L22
 10292  00202E                     l674:
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;TabelasUmidade.h: 327: else
 10296                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10297                           
 10298                           ; BSR set to: 0
 10299  00202E  0E77               	movlw	119
 10300  002030  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10301  002032  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10302  002034  B4D8               	btfsc	status,2,c
 10303  002036  D193               	goto	u11200
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;TabelasUmidade.h: 329: else
 10307                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10308                           
 10309                           ; BSR set to: 0
 10310                           
 10311                           ; BSR set to: 0
 10312  002038  0E78               	movlw	120
 10313  00203A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10314  00203C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10315  00203E  B4D8               	btfsc	status,2,c
 10316  002040  D196               	goto	u11210
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;TabelasUmidade.h: 331: else
 10320                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10321                           
 10322                           ; BSR set to: 0
 10323                           
 10324                           ; BSR set to: 0
 10325  002042  0E79               	movlw	121
 10326  002044  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10327  002046  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10328  002048  A4D8               	btfss	status,2,c
 10329  00204A  D003               	goto	l680
 10330                           
 10331                           ; BSR set to: 0
 10332  00204C  0E33               	movlw	51
 10333  00204E  EF4A  F00B         	goto	L22
 10334  002052                     l680:
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;TabelasUmidade.h: 333: else
 10338                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10339                           
 10340                           ; BSR set to: 0
 10341  002052  0E7A               	movlw	122
 10342  002054  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10343  002056  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10344  002058  B4D8               	btfsc	status,2,c
 10345  00205A  D199               	goto	u11230
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;TabelasUmidade.h: 335: else
 10349                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10350                           
 10351                           ; BSR set to: 0
 10352                           
 10353                           ; BSR set to: 0
 10354  00205C  0E7B               	movlw	123
 10355  00205E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10356  002060  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10357  002062  A4D8               	btfss	status,2,c
 10358  002064  D003               	goto	l684
 10359  002066                     u10630:
 10360                           
 10361                           ; BSR set to: 0
 10362  002066  0E30               	movlw	48
 10363  002068  EF4A  F00B         	goto	L22
 10364  00206C                     l684:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;TabelasUmidade.h: 337: else
 10368                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10369                           
 10370                           ; BSR set to: 0
 10371  00206C  0E7C               	movlw	124
 10372  00206E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10373  002070  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10374  002072  B4D8               	btfsc	status,2,c
 10375  002074  D19C               	goto	u11250
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;TabelasUmidade.h: 339: else
 10379                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10380                           
 10381                           ; BSR set to: 0
 10382                           
 10383                           ; BSR set to: 0
 10384  002076  0E7D               	movlw	125
 10385  002078  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10386  00207A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10387  00207C  B4D8               	btfsc	status,2,c
 10388  00207E  D19F               	goto	u11260
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;TabelasUmidade.h: 341: else
 10392                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10393                           
 10394                           ; BSR set to: 0
 10395                           
 10396                           ; BSR set to: 0
 10397  002080  0E7E               	movlw	126
 10398  002082  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10399  002084  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10400  002086  A4D8               	btfss	status,2,c
 10401  002088  D003               	goto	l690
 10402  00208A                     u10660:
 10403                           
 10404                           ; BSR set to: 0
 10405  00208A  0E2C               	movlw	44
 10406  00208C  EF4A  F00B         	goto	L22
 10407  002090                     l690:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;TabelasUmidade.h: 343: else
 10411                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10412                           
 10413                           ; BSR set to: 0
 10414  002090  0E7F               	movlw	127
 10415  002092  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10416  002094  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10417  002096  A4D8               	btfss	status,2,c
 10418  002098  D003               	goto	l692
 10419  00209A                     u10670:
 10420                           
 10421                           ; BSR set to: 0
 10422  00209A  0E2A               	movlw	42
 10423  00209C  EF4A  F00B         	goto	L22
 10424  0020A0                     l692:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;TabelasUmidade.h: 345: else
 10428                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10429                           
 10430                           ; BSR set to: 0
 10431  0020A0  0E80               	movlw	128
 10432  0020A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10433  0020A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10434  0020A6  B4D8               	btfsc	status,2,c
 10435  0020A8  D19A               	goto	u11280
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;TabelasUmidade.h: 347: else
 10439                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10440                           
 10441                           ; BSR set to: 0
 10442                           
 10443                           ; BSR set to: 0
 10444  0020AA  0E81               	movlw	129
 10445  0020AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10446  0020AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10447  0020B0  B4D8               	btfsc	status,2,c
 10448  0020B2  D195               	goto	u11280
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;TabelasUmidade.h: 349: else
 10452                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10453                           
 10454                           ; BSR set to: 0
 10455                           
 10456                           ; BSR set to: 0
 10457  0020B4  0E82               	movlw	130
 10458  0020B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10459  0020B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10460  0020BA  B4D8               	btfsc	status,2,c
 10461  0020BC  D198               	goto	u11290
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;TabelasUmidade.h: 351: else
 10465                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10466                           
 10467                           ; BSR set to: 0
 10468                           
 10469                           ; BSR set to: 0
 10470  0020BE  0E83               	movlw	131
 10471  0020C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10472  0020C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10473  0020C4  B4D8               	btfsc	status,2,c
 10474  0020C6  D193               	goto	u11290
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;TabelasUmidade.h: 353: else
 10478                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10479                           
 10480                           ; BSR set to: 0
 10481                           
 10482                           ; BSR set to: 0
 10483  0020C8  0E84               	movlw	132
 10484  0020CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10485  0020CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10486  0020CE  B4D8               	btfsc	status,2,c
 10487  0020D0  D196               	goto	u11300
 10488                           
 10489                           ; BSR set to: 0
 10490                           ;TabelasUmidade.h: 355: else
 10491                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10492                           
 10493                           ; BSR set to: 0
 10494                           
 10495                           ; BSR set to: 0
 10496  0020D2  0E85               	movlw	133
 10497  0020D4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10498  0020D6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10499  0020D8  B4D8               	btfsc	status,2,c
 10500  0020DA  D191               	goto	u11300
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;TabelasUmidade.h: 357: else
 10504                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10505                           
 10506                           ; BSR set to: 0
 10507                           
 10508                           ; BSR set to: 0
 10509  0020DC  0E86               	movlw	134
 10510  0020DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10511  0020E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10512  0020E2  B4D8               	btfsc	status,2,c
 10513  0020E4  D19C               	goto	u11320
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;TabelasUmidade.h: 359: else
 10517                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10518                           
 10519                           ; BSR set to: 0
 10520                           
 10521                           ; BSR set to: 0
 10522  0020E6  0E87               	movlw	135
 10523  0020E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10524  0020EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10525  0020EC  B4D8               	btfsc	status,2,c
 10526  0020EE  D19F               	goto	u11330
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;TabelasUmidade.h: 361: else
 10530                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10531                           
 10532                           ; BSR set to: 0
 10533                           
 10534                           ; BSR set to: 0
 10535  0020F0  0E88               	movlw	136
 10536  0020F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10537  0020F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10538  0020F6  B4D8               	btfsc	status,2,c
 10539  0020F8  D1A2               	goto	u11340
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;TabelasUmidade.h: 363: else
 10543                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10544                           
 10545                           ; BSR set to: 0
 10546                           
 10547                           ; BSR set to: 0
 10548  0020FA  0E89               	movlw	137
 10549  0020FC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10550  0020FE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10551  002100  B4D8               	btfsc	status,2,c
 10552  002102  D1A5               	goto	u11350
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;TabelasUmidade.h: 365: else
 10556                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10557                           
 10558                           ; BSR set to: 0
 10559                           
 10560                           ; BSR set to: 0
 10561  002104  0E8A               	movlw	138
 10562  002106  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10563  002108  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10564  00210A  B4D8               	btfsc	status,2,c
 10565  00210C  D1A8               	goto	u11360
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;TabelasUmidade.h: 367: else
 10569                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10570                           
 10571                           ; BSR set to: 0
 10572                           
 10573                           ; BSR set to: 0
 10574  00210E  0E8B               	movlw	139
 10575  002110  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10576  002112  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10577  002114  B4D8               	btfsc	status,2,c
 10578  002116  D1AB               	goto	u11370
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;TabelasUmidade.h: 369: else
 10582                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10583                           
 10584                           ; BSR set to: 0
 10585                           
 10586                           ; BSR set to: 0
 10587  002118  0E8C               	movlw	140
 10588  00211A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10589  00211C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10590  00211E  B4D8               	btfsc	status,2,c
 10591  002120  D1AE               	goto	u11380
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;TabelasUmidade.h: 371: else
 10595                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10596                           
 10597                           ; BSR set to: 0
 10598                           
 10599                           ; BSR set to: 0
 10600  002122  0E8D               	movlw	141
 10601  002124  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10602  002126  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10603  002128  B4D8               	btfsc	status,2,c
 10604  00212A  D1B1               	goto	u11390
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;TabelasUmidade.h: 373: else
 10608                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10609                           
 10610                           ; BSR set to: 0
 10611                           
 10612                           ; BSR set to: 0
 10613  00212C  0E8E               	movlw	142
 10614  00212E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10615  002130  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10616  002132  B4D8               	btfsc	status,2,c
 10617  002134  D1B4               	goto	u11400
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;TabelasUmidade.h: 375: else
 10621                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 10622                           
 10623                           ; BSR set to: 0
 10624                           
 10625                           ; BSR set to: 0
 10626  002136  0E8F               	movlw	143
 10627  002138  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10628  00213A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10629  00213C  B4D8               	btfsc	status,2,c
 10630  00213E  D1B7               	goto	u11410
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;TabelasUmidade.h: 377: else
 10634                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 10635                           
 10636                           ; BSR set to: 0
 10637                           
 10638                           ; BSR set to: 0
 10639  002140  0E90               	movlw	144
 10640  002142  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10641  002144  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10642  002146  B4D8               	btfsc	status,2,c
 10643  002148  D1BA               	goto	u11420
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;TabelasUmidade.h: 379: else
 10647                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 10648                           
 10649                           ; BSR set to: 0
 10650                           
 10651                           ; BSR set to: 0
 10652  00214A  0E91               	movlw	145
 10653  00214C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10654  00214E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10655  002150  B4D8               	btfsc	status,2,c
 10656  002152  D1BD               	goto	u11430
 10657                           
 10658                           ; BSR set to: 0
 10659                           ;TabelasUmidade.h: 381: else
 10660                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 10661                           
 10662                           ; BSR set to: 0
 10663                           
 10664                           ; BSR set to: 0
 10665  002154  0E92               	movlw	146
 10666  002156  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10667  002158  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10668  00215A  B4D8               	btfsc	status,2,c
 10669  00215C  D1C0               	goto	u11440
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;TabelasUmidade.h: 383: else
 10673                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 10674                           
 10675                           ; BSR set to: 0
 10676                           
 10677                           ; BSR set to: 0
 10678  00215E  0E93               	movlw	147
 10679  002160  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10680  002162  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10681  002164  B4D8               	btfsc	status,2,c
 10682  002166  D1C3               	goto	u11450
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;TabelasUmidade.h: 385: else
 10686                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 10687                           
 10688                           ; BSR set to: 0
 10689                           
 10690                           ; BSR set to: 0
 10691  002168  0E94               	movlw	148
 10692  00216A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10693  00216C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10694  00216E  B4D8               	btfsc	status,2,c
 10695  002170  D1C6               	goto	u11460
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;TabelasUmidade.h: 387: else
 10699                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 10700                           
 10701                           ; BSR set to: 0
 10702                           
 10703                           ; BSR set to: 0
 10704  002172  0E95               	movlw	149
 10705  002174  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10706  002176  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10707  002178  B4D8               	btfsc	status,2,c
 10708  00217A  D1C9               	goto	u11470
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;TabelasUmidade.h: 389: else
 10712                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 10713                           
 10714                           ; BSR set to: 0
 10715                           
 10716                           ; BSR set to: 0
 10717  00217C  0E96               	movlw	150
 10718  00217E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10719  002180  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10720  002182  B4D8               	btfsc	status,2,c
 10721  002184  D1CC               	goto	u11480
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;TabelasUmidade.h: 391: else
 10725                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 10726                           
 10727                           ; BSR set to: 0
 10728                           
 10729                           ; BSR set to: 0
 10730  002186  0E97               	movlw	151
 10731  002188  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10732  00218A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10733  00218C  B4D8               	btfsc	status,2,c
 10734  00218E  D1CF               	goto	u11490
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;TabelasUmidade.h: 393: else
 10738                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 10739                           
 10740                           ; BSR set to: 0
 10741                           
 10742                           ; BSR set to: 0
 10743  002190  0E98               	movlw	152
 10744  002192  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10745  002194  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10746  002196  B4D8               	btfsc	status,2,c
 10747  002198  D1D2               	goto	u11500
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;TabelasUmidade.h: 395: else
 10751                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10752                           
 10753                           ; BSR set to: 0
 10754                           
 10755                           ; BSR set to: 0
 10756  00219A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10757  00219C  D00E               	goto	l744
 10758  00219E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10759  0021A0  E104               	bnz	u10930
 10760  0021A2  0E99               	movlw	153
 10761  0021A4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10762  0021A6  A0D8               	btfss	status,0,c
 10763  0021A8  D008               	goto	l744
 10764  0021AA                     u10930:
 10765                           
 10766                           ; BSR set to: 0
 10767  0021AA  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10768  0021AC  D1DB               	goto	u11520
 10769  0021AE  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10770  0021B0  E104               	bnz	l7573
 10771  0021B2  0E9D               	movlw	157
 10772  0021B4  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10773  0021B6  A0D8               	btfss	status,0,c
 10774  0021B8  D1D5               	goto	u11520
 10775  0021BA                     l744:
 10776  0021BA                     l7573:
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;TabelasUmidade.h: 397: else
 10780                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 10781  0021BA  0E9D               	movlw	157
 10782  0021BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10783  0021BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10784  0021C0  B4D8               	btfsc	status,2,c
 10785  0021C2  D1D8               	goto	u11530
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;TabelasUmidade.h: 399: else
 10789                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 10790                           
 10791                           ; BSR set to: 0
 10792                           
 10793                           ; BSR set to: 0
 10794  0021C4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10795  0021C6  D1EF               	goto	l634
 10796  0021C8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10797  0021CA  E104               	bnz	u10960
 10798  0021CC                     L24:
 10799  0021CC  0E9E               	movlw	158
 10800  0021CE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10801  0021D0  A0D8               	btfss	status,0,c
 10802  0021D2  D1E9               	goto	l634
 10803  0021D4                     u10960:
 10804  0021D4  D1DA               	goto	u11540
 10805  0021D6                     
 10806                           ; BSR set to: 0
 10807                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 10808                           
 10809                           ; BSR set to: 0
 10810  0021D6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10811  0021D8  D006               	goto	u10970
 10812  0021DA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10813  0021DC  E107               	bnz	l7585
 10814  0021DE  0E5D               	movlw	93
 10815  0021E0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10816  0021E2  B0D8               	btfsc	status,0,c
 10817  0021E4  D003               	goto	l750
 10818  0021E6                     u10970:
 10819                           
 10820                           ; BSR set to: 0
 10821  0021E6  0E64               	movlw	100
 10822  0021E8  EF4A  F00B         	goto	L22
 10823  0021EC                     l750:
 10824  0021EC                     l7585:
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;TabelasUmidade.h: 404: else
 10828                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 10829  0021EC  0E5D               	movlw	93
 10830  0021EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10831  0021F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10832  0021F2  A4D8               	btfss	status,2,c
 10833  0021F4  D003               	goto	l752
 10834  0021F6                     u10980:
 10835                           
 10836                           ; BSR set to: 0
 10837  0021F6  0E63               	movlw	99
 10838  0021F8  EF4A  F00B         	goto	L22
 10839  0021FC                     l752:
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;TabelasUmidade.h: 406: else
 10843                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 10844                           
 10845                           ; BSR set to: 0
 10846  0021FC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10847  0021FE  D011               	goto	l754
 10848  002200  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10849  002202  E104               	bnz	u10990
 10850  002204  0E5E               	movlw	94
 10851  002206  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10852  002208  A0D8               	btfss	status,0,c
 10853  00220A  D00B               	goto	l754
 10854  00220C                     u10990:
 10855                           
 10856                           ; BSR set to: 0
 10857  00220C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10858  00220E  D006               	goto	u11000
 10859  002210  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10860  002212  E107               	bnz	l7595
 10861  002214  0E65               	movlw	101
 10862  002216  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10863  002218  B0D8               	btfsc	status,0,c
 10864  00221A  D003               	goto	l754
 10865  00221C                     u11000:
 10866                           
 10867                           ; BSR set to: 0
 10868  00221C  0E62               	movlw	98
 10869  00221E  EF4A  F00B         	goto	L22
 10870  002222                     l754:
 10871  002222                     l7595:
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;TabelasUmidade.h: 408: else
 10875                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 10876  002222  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10877  002224  D010               	goto	l756
 10878  002226  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10879  002228  E104               	bnz	u11010
 10880  00222A  0E65               	movlw	101
 10881  00222C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10882  00222E  A0D8               	btfss	status,0,c
 10883  002230  D00A               	goto	l756
 10884  002232                     u11010:
 10885                           
 10886                           ; BSR set to: 0
 10887  002232  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10888  002234  EF12  F00B         	goto	u8570
 10889  002238  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10890  00223A  E105               	bnz	l7601
 10891  00223C  0E67               	movlw	103
 10892  00223E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10893  002240  A0D8               	btfss	status,0,c
 10894  002242  EF12  F00B         	goto	u8570
 10895  002246                     l756:
 10896  002246                     l7601:
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;TabelasUmidade.h: 410: else
 10900                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 10901  002246  0E67               	movlw	103
 10902  002248  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10903  00224A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10904  00224C  B4D8               	btfsc	status,2,c
 10905  00224E  EF04  F00B         	goto	u8550
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;TabelasUmidade.h: 412: else
 10909                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 10910                           
 10911                           ; BSR set to: 0
 10912                           
 10913                           ; BSR set to: 0
 10914  002252  0E68               	movlw	104
 10915  002254  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10916  002256  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10917  002258  B4D8               	btfsc	status,2,c
 10918  00225A  EFFD  F00A         	goto	u8540
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;TabelasUmidade.h: 414: else
 10922                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 10923                           
 10924                           ; BSR set to: 0
 10925                           
 10926                           ; BSR set to: 0
 10927  00225E  0E69               	movlw	105
 10928  002260  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10929  002262  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10930  002264  A4D8               	btfss	status,2,c
 10931  002266  D003               	goto	l762
 10932                           
 10933                           ; BSR set to: 0
 10934  002268  0E52               	movlw	82
 10935  00226A  EF4A  F00B         	goto	L22
 10936  00226E                     l762:
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;TabelasUmidade.h: 416: else
 10940                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 10941                           
 10942                           ; BSR set to: 0
 10943  00226E  0E6A               	movlw	106
 10944  002270  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10945  002272  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10946  002274  A4D8               	btfss	status,2,c
 10947  002276  D003               	goto	l764
 10948  002278                     u11060:
 10949                           
 10950                           ; BSR set to: 0
 10951  002278  0E50               	movlw	80
 10952  00227A  EF4A  F00B         	goto	L22
 10953  00227E                     l764:
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;TabelasUmidade.h: 418: else
 10957                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 10958                           
 10959                           ; BSR set to: 0
 10960  00227E  0E6B               	movlw	107
 10961  002280  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10962  002282  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10963  002284  A4D8               	btfss	status,2,c
 10964  002286  D003               	goto	l766
 10965  002288                     u11070:
 10966                           
 10967                           ; BSR set to: 0
 10968  002288  0E4E               	movlw	78
 10969  00228A  EF4A  F00B         	goto	L22
 10970  00228E                     l766:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;TabelasUmidade.h: 420: else
 10974                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 10975                           
 10976                           ; BSR set to: 0
 10977  00228E  0E6C               	movlw	108
 10978  002290  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10979  002292  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10980  002294  A4D8               	btfss	status,2,c
 10981  002296  D003               	goto	l768
 10982  002298                     u11080:
 10983                           
 10984                           ; BSR set to: 0
 10985  002298  0E4D               	movlw	77
 10986  00229A  EF4A  F00B         	goto	L22
 10987  00229E                     l768:
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;TabelasUmidade.h: 422: else
 10991                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 10992                           
 10993                           ; BSR set to: 0
 10994  00229E  0E6D               	movlw	109
 10995  0022A0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10996  0022A2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10997  0022A4  A4D8               	btfss	status,2,c
 10998  0022A6  D003               	goto	l770
 10999  0022A8                     u11090:
 11000                           
 11001                           ; BSR set to: 0
 11002  0022A8  0E4C               	movlw	76
 11003  0022AA  EF4A  F00B         	goto	L22
 11004  0022AE                     l770:
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;TabelasUmidade.h: 424: else
 11008                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11009                           
 11010                           ; BSR set to: 0
 11011  0022AE  0E6E               	movlw	110
 11012  0022B0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11013  0022B2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11014  0022B4  A4D8               	btfss	status,2,c
 11015  0022B6  D003               	goto	l772
 11016  0022B8                     u11100:
 11017                           
 11018                           ; BSR set to: 0
 11019  0022B8  0E4B               	movlw	75
 11020  0022BA  EF4A  F00B         	goto	L22
 11021  0022BE                     l772:
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;TabelasUmidade.h: 426: else
 11025                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11026                           
 11027                           ; BSR set to: 0
 11028  0022BE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11029  0022C0  D011               	goto	l774
 11030  0022C2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11031  0022C4  E104               	bnz	u11110
 11032  0022C6  0E6F               	movlw	111
 11033  0022C8  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11034  0022CA  A0D8               	btfss	status,0,c
 11035  0022CC  D00B               	goto	l774
 11036  0022CE                     u11110:
 11037                           
 11038                           ; BSR set to: 0
 11039  0022CE  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11040  0022D0  D006               	goto	u11120
 11041  0022D2  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11042  0022D4  E107               	bnz	l7639
 11043  0022D6  0E73               	movlw	115
 11044  0022D8  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11045  0022DA  B0D8               	btfsc	status,0,c
 11046  0022DC  D003               	goto	l774
 11047  0022DE                     u11120:
 11048                           
 11049                           ; BSR set to: 0
 11050  0022DE  0E46               	movlw	70
 11051  0022E0  EF4A  F00B         	goto	L22
 11052  0022E4                     l774:
 11053  0022E4                     l7639:
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;TabelasUmidade.h: 428: else
 11057                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11058  0022E4  0E73               	movlw	115
 11059  0022E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11060  0022E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11061  0022EA  A4D8               	btfss	status,2,c
 11062  0022EC  D003               	goto	l776
 11063  0022EE                     u11130:
 11064                           
 11065                           ; BSR set to: 0
 11066  0022EE  0E44               	movlw	68
 11067  0022F0  EF4A  F00B         	goto	L22
 11068  0022F4                     l776:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;TabelasUmidade.h: 430: else
 11072                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11073                           
 11074                           ; BSR set to: 0
 11075  0022F4  0E74               	movlw	116
 11076  0022F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11077  0022F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11078  0022FA  A4D8               	btfss	status,2,c
 11079  0022FC  D003               	goto	l778
 11080  0022FE                     u11140:
 11081                           
 11082                           ; BSR set to: 0
 11083  0022FE  0E42               	movlw	66
 11084  002300  EF4A  F00B         	goto	L22
 11085  002304                     l778:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;TabelasUmidade.h: 432: else
 11089                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11090                           
 11091                           ; BSR set to: 0
 11092  002304  0E75               	movlw	117
 11093  002306  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11094  002308  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11095  00230A  A4D8               	btfss	status,2,c
 11096  00230C  D003               	goto	l780
 11097                           
 11098                           ; BSR set to: 0
 11099  00230E  0E40               	movlw	64
 11100  002310  EF4A  F00B         	goto	L22
 11101  002314                     l780:
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;TabelasUmidade.h: 434: else
 11105                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11106                           
 11107                           ; BSR set to: 0
 11108  002314  0E76               	movlw	118
 11109  002316  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11110  002318  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11111  00231A  A4D8               	btfss	status,2,c
 11112  00231C  D003               	goto	l782
 11113                           
 11114                           ; BSR set to: 0
 11115  00231E  0E3E               	movlw	62
 11116  002320  EF4A  F00B         	goto	L22
 11117  002324                     l782:
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;TabelasUmidade.h: 436: else
 11121                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11122                           
 11123                           ; BSR set to: 0
 11124  002324  0E77               	movlw	119
 11125  002326  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11126  002328  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11127  00232A  A4D8               	btfss	status,2,c
 11128  00232C  D003               	goto	l784
 11129  00232E                     u11170:
 11130                           
 11131                           ; BSR set to: 0
 11132  00232E  0E3C               	movlw	60
 11133  002330  EF4A  F00B         	goto	L22
 11134  002334                     l784:
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;TabelasUmidade.h: 438: else
 11138                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11139                           
 11140                           ; BSR set to: 0
 11141  002334  0E78               	movlw	120
 11142  002336  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11143  002338  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11144  00233A  A4D8               	btfss	status,2,c
 11145  00233C  D003               	goto	l786
 11146  00233E                     u11180:
 11147                           
 11148                           ; BSR set to: 0
 11149  00233E  0E3A               	movlw	58
 11150  002340  EF4A  F00B         	goto	L22
 11151  002344                     l786:
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;TabelasUmidade.h: 440: else
 11155                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11156                           
 11157                           ; BSR set to: 0
 11158  002344  0E79               	movlw	121
 11159  002346  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11160  002348  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11161  00234A  A4D8               	btfss	status,2,c
 11162  00234C  D003               	goto	l788
 11163  00234E                     u11190:
 11164                           
 11165                           ; BSR set to: 0
 11166  00234E  0E38               	movlw	56
 11167  002350  EF4A  F00B         	goto	L22
 11168  002354                     l788:
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;TabelasUmidade.h: 442: else
 11172                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11173                           
 11174                           ; BSR set to: 0
 11175  002354  0E7A               	movlw	122
 11176  002356  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11177  002358  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11178  00235A  A4D8               	btfss	status,2,c
 11179  00235C  D003               	goto	l790
 11180  00235E                     u11200:
 11181                           
 11182                           ; BSR set to: 0
 11183  00235E  0E37               	movlw	55
 11184  002360  EF4A  F00B         	goto	L22
 11185  002364                     l790:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;TabelasUmidade.h: 444: else
 11189                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11190                           
 11191                           ; BSR set to: 0
 11192  002364  0E7B               	movlw	123
 11193  002366  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11194  002368  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11195  00236A  A4D8               	btfss	status,2,c
 11196  00236C  D003               	goto	l792
 11197  00236E                     u11210:
 11198                           
 11199                           ; BSR set to: 0
 11200  00236E  0E35               	movlw	53
 11201  002370  EF4A  F00B         	goto	L22
 11202  002374                     l792:
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;TabelasUmidade.h: 446: else
 11206                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11207                           
 11208                           ; BSR set to: 0
 11209  002374  0E7C               	movlw	124
 11210  002376  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11211  002378  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11212  00237A  A4D8               	btfss	status,2,c
 11213  00237C  D003               	goto	l794
 11214  00237E                     u11220:
 11215                           
 11216                           ; BSR set to: 0
 11217  00237E  0E34               	movlw	52
 11218  002380  EF4A  F00B         	goto	L22
 11219  002384                     l794:
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;TabelasUmidade.h: 448: else
 11223                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11224                           
 11225                           ; BSR set to: 0
 11226  002384  0E7D               	movlw	125
 11227  002386  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11228  002388  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11229  00238A  A4D8               	btfss	status,2,c
 11230  00238C  D003               	goto	l796
 11231  00238E                     u11230:
 11232                           
 11233                           ; BSR set to: 0
 11234  00238E  0E32               	movlw	50
 11235  002390  EF4A  F00B         	goto	L22
 11236  002394                     l796:
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;TabelasUmidade.h: 450: else
 11240                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11241                           
 11242                           ; BSR set to: 0
 11243  002394  0E7E               	movlw	126
 11244  002396  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11245  002398  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11246  00239A  A4D8               	btfss	status,2,c
 11247  00239C  D003               	goto	l798
 11248                           
 11249                           ; BSR set to: 0
 11250  00239E  0E31               	movlw	49
 11251  0023A0  EF4A  F00B         	goto	L22
 11252  0023A4                     l798:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;TabelasUmidade.h: 452: else
 11256                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11257                           
 11258                           ; BSR set to: 0
 11259  0023A4  0E7F               	movlw	127
 11260  0023A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11261  0023A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11262  0023AA  A4D8               	btfss	status,2,c
 11263  0023AC  D003               	goto	l800
 11264  0023AE                     u11250:
 11265                           
 11266                           ; BSR set to: 0
 11267  0023AE  0E2F               	movlw	47
 11268  0023B0  EF4A  F00B         	goto	L22
 11269  0023B4                     l800:
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;TabelasUmidade.h: 454: else
 11273                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11274                           
 11275                           ; BSR set to: 0
 11276  0023B4  0E80               	movlw	128
 11277  0023B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11278  0023B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11279  0023BA  A4D8               	btfss	status,2,c
 11280  0023BC  D003               	goto	l802
 11281  0023BE                     u11260:
 11282                           
 11283                           ; BSR set to: 0
 11284  0023BE  0E2D               	movlw	45
 11285  0023C0  EF4A  F00B         	goto	L22
 11286  0023C4                     l802:
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;TabelasUmidade.h: 456: else
 11290                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11291                           
 11292                           ; BSR set to: 0
 11293  0023C4  0E81               	movlw	129
 11294  0023C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11295  0023C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11296  0023CA  A4D8               	btfss	status,2,c
 11297  0023CC  D003               	goto	l804
 11298  0023CE                     u11270:
 11299                           
 11300                           ; BSR set to: 0
 11301  0023CE  0E2B               	movlw	43
 11302  0023D0  EF4A  F00B         	goto	L22
 11303  0023D4                     l804:
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;TabelasUmidade.h: 458: else
 11307                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11308                           
 11309                           ; BSR set to: 0
 11310  0023D4  0E82               	movlw	130
 11311  0023D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11312  0023D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11313  0023DA  A4D8               	btfss	status,2,c
 11314  0023DC  D003               	goto	l806
 11315  0023DE                     u11280:
 11316                           
 11317                           ; BSR set to: 0
 11318  0023DE  0E29               	movlw	41
 11319  0023E0  EF4A  F00B         	goto	L22
 11320  0023E4                     l806:
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;TabelasUmidade.h: 460: else
 11324                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11325                           
 11326                           ; BSR set to: 0
 11327  0023E4  0E83               	movlw	131
 11328  0023E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11329  0023E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11330  0023EA  A4D8               	btfss	status,2,c
 11331  0023EC  D003               	goto	l808
 11332  0023EE                     u11290:
 11333                           
 11334                           ; BSR set to: 0
 11335  0023EE  0E28               	movlw	40
 11336  0023F0  EF4A  F00B         	goto	L22
 11337  0023F4                     l808:
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;TabelasUmidade.h: 462: else
 11341                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11342                           
 11343                           ; BSR set to: 0
 11344  0023F4  0E84               	movlw	132
 11345  0023F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11346  0023F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11347  0023FA  A4D8               	btfss	status,2,c
 11348  0023FC  D003               	goto	l810
 11349  0023FE                     u11300:
 11350                           
 11351                           ; BSR set to: 0
 11352  0023FE  0E27               	movlw	39
 11353  002400  EF4A  F00B         	goto	L22
 11354  002404                     l810:
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;TabelasUmidade.h: 464: else
 11358                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11359                           
 11360                           ; BSR set to: 0
 11361  002404  0E85               	movlw	133
 11362  002406  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11363  002408  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11364  00240A  A4D8               	btfss	status,2,c
 11365  00240C  D003               	goto	l812
 11366  00240E                     u11310:
 11367                           
 11368                           ; BSR set to: 0
 11369  00240E  0E25               	movlw	37
 11370  002410  EF4A  F00B         	goto	L22
 11371  002414                     l812:
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;TabelasUmidade.h: 466: else
 11375                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11376                           
 11377                           ; BSR set to: 0
 11378  002414  0E86               	movlw	134
 11379  002416  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11380  002418  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11381  00241A  A4D8               	btfss	status,2,c
 11382  00241C  D003               	goto	l814
 11383  00241E                     u11320:
 11384                           
 11385                           ; BSR set to: 0
 11386  00241E  0E24               	movlw	36
 11387  002420  EF4A  F00B         	goto	L22
 11388  002424                     l814:
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;TabelasUmidade.h: 468: else
 11392                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11393                           
 11394                           ; BSR set to: 0
 11395  002424  0E87               	movlw	135
 11396  002426  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11397  002428  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11398  00242A  A4D8               	btfss	status,2,c
 11399  00242C  D003               	goto	l816
 11400  00242E                     u11330:
 11401                           
 11402                           ; BSR set to: 0
 11403  00242E  0E23               	movlw	35
 11404  002430  EF4A  F00B         	goto	L22
 11405  002434                     l816:
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;TabelasUmidade.h: 470: else
 11409                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11410                           
 11411                           ; BSR set to: 0
 11412  002434  0E88               	movlw	136
 11413  002436  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11414  002438  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11415  00243A  A4D8               	btfss	status,2,c
 11416  00243C  D003               	goto	l818
 11417  00243E                     u11340:
 11418                           
 11419                           ; BSR set to: 0
 11420  00243E  0E22               	movlw	34
 11421  002440  EF4A  F00B         	goto	L22
 11422  002444                     l818:
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;TabelasUmidade.h: 472: else
 11426                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11427                           
 11428                           ; BSR set to: 0
 11429  002444  0E89               	movlw	137
 11430  002446  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11431  002448  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11432  00244A  A4D8               	btfss	status,2,c
 11433  00244C  D003               	goto	l820
 11434  00244E                     u11350:
 11435                           
 11436                           ; BSR set to: 0
 11437  00244E  0E21               	movlw	33
 11438  002450  EF4A  F00B         	goto	L22
 11439  002454                     l820:
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;TabelasUmidade.h: 474: else
 11443                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11444                           
 11445                           ; BSR set to: 0
 11446  002454  0E8A               	movlw	138
 11447  002456  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11448  002458  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11449  00245A  A4D8               	btfss	status,2,c
 11450  00245C  D003               	goto	l822
 11451  00245E                     u11360:
 11452                           
 11453                           ; BSR set to: 0
 11454  00245E  0E20               	movlw	32
 11455  002460  EF4A  F00B         	goto	L22
 11456  002464                     l822:
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;TabelasUmidade.h: 476: else
 11460                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11461                           
 11462                           ; BSR set to: 0
 11463  002464  0E8B               	movlw	139
 11464  002466  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11465  002468  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11466  00246A  A4D8               	btfss	status,2,c
 11467  00246C  D003               	goto	l824
 11468  00246E                     u11370:
 11469                           
 11470                           ; BSR set to: 0
 11471  00246E  0E1F               	movlw	31
 11472  002470  EF4A  F00B         	goto	L22
 11473  002474                     l824:
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;TabelasUmidade.h: 478: else
 11477                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11478                           
 11479                           ; BSR set to: 0
 11480  002474  0E8C               	movlw	140
 11481  002476  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11482  002478  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11483  00247A  A4D8               	btfss	status,2,c
 11484  00247C  D003               	goto	l826
 11485  00247E                     u11380:
 11486                           
 11487                           ; BSR set to: 0
 11488  00247E  0E1E               	movlw	30
 11489  002480  EF4A  F00B         	goto	L22
 11490  002484                     l826:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;TabelasUmidade.h: 480: else
 11494                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11495                           
 11496                           ; BSR set to: 0
 11497  002484  0E8D               	movlw	141
 11498  002486  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11499  002488  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11500  00248A  A4D8               	btfss	status,2,c
 11501  00248C  D003               	goto	l828
 11502  00248E                     u11390:
 11503                           
 11504                           ; BSR set to: 0
 11505  00248E  0E1D               	movlw	29
 11506  002490  EF4A  F00B         	goto	L22
 11507  002494                     l828:
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;TabelasUmidade.h: 482: else
 11511                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11512                           
 11513                           ; BSR set to: 0
 11514  002494  0E8E               	movlw	142
 11515  002496  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11516  002498  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11517  00249A  A4D8               	btfss	status,2,c
 11518  00249C  D003               	goto	l830
 11519  00249E                     u11400:
 11520                           
 11521                           ; BSR set to: 0
 11522  00249E  0E1C               	movlw	28
 11523  0024A0  EF4A  F00B         	goto	L22
 11524  0024A4                     l830:
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;TabelasUmidade.h: 484: else
 11528                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11529                           
 11530                           ; BSR set to: 0
 11531  0024A4  0E8F               	movlw	143
 11532  0024A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11533  0024A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11534  0024AA  A4D8               	btfss	status,2,c
 11535  0024AC  D003               	goto	l832
 11536  0024AE                     u11410:
 11537                           
 11538                           ; BSR set to: 0
 11539  0024AE  0E1B               	movlw	27
 11540  0024B0  EF4A  F00B         	goto	L22
 11541  0024B4                     l832:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;TabelasUmidade.h: 486: else
 11545                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11546                           
 11547                           ; BSR set to: 0
 11548  0024B4  0E90               	movlw	144
 11549  0024B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11550  0024B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11551  0024BA  A4D8               	btfss	status,2,c
 11552  0024BC  D003               	goto	l834
 11553  0024BE                     u11420:
 11554                           
 11555                           ; BSR set to: 0
 11556  0024BE  0E1A               	movlw	26
 11557  0024C0  EF4A  F00B         	goto	L22
 11558  0024C4                     l834:
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;TabelasUmidade.h: 488: else
 11562                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11563                           
 11564                           ; BSR set to: 0
 11565  0024C4  0E91               	movlw	145
 11566  0024C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11567  0024C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11568  0024CA  A4D8               	btfss	status,2,c
 11569  0024CC  D003               	goto	l836
 11570  0024CE                     u11430:
 11571                           
 11572                           ; BSR set to: 0
 11573  0024CE  0E19               	movlw	25
 11574  0024D0  EF4A  F00B         	goto	L22
 11575  0024D4                     l836:
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;TabelasUmidade.h: 490: else
 11579                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11580                           
 11581                           ; BSR set to: 0
 11582  0024D4  0E92               	movlw	146
 11583  0024D6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11584  0024D8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11585  0024DA  A4D8               	btfss	status,2,c
 11586  0024DC  D003               	goto	l838
 11587  0024DE                     u11440:
 11588                           
 11589                           ; BSR set to: 0
 11590  0024DE  0E18               	movlw	24
 11591  0024E0  EF4A  F00B         	goto	L22
 11592  0024E4                     l838:
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;TabelasUmidade.h: 492: else
 11596                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11597                           
 11598                           ; BSR set to: 0
 11599  0024E4  0E93               	movlw	147
 11600  0024E6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11601  0024E8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11602  0024EA  A4D8               	btfss	status,2,c
 11603  0024EC  D003               	goto	l840
 11604  0024EE                     u11450:
 11605                           
 11606                           ; BSR set to: 0
 11607  0024EE  0E17               	movlw	23
 11608  0024F0  EF4A  F00B         	goto	L22
 11609  0024F4                     l840:
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;TabelasUmidade.h: 494: else
 11613                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11614                           
 11615                           ; BSR set to: 0
 11616  0024F4  0E94               	movlw	148
 11617  0024F6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11618  0024F8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11619  0024FA  A4D8               	btfss	status,2,c
 11620  0024FC  D003               	goto	l842
 11621  0024FE                     u11460:
 11622                           
 11623                           ; BSR set to: 0
 11624  0024FE  0E16               	movlw	22
 11625  002500  EF4A  F00B         	goto	L22
 11626  002504                     l842:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;TabelasUmidade.h: 496: else
 11630                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 11631                           
 11632                           ; BSR set to: 0
 11633  002504  0E95               	movlw	149
 11634  002506  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11635  002508  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11636  00250A  A4D8               	btfss	status,2,c
 11637  00250C  D003               	goto	l844
 11638  00250E                     u11470:
 11639                           
 11640                           ; BSR set to: 0
 11641  00250E  0E15               	movlw	21
 11642  002510  EF4A  F00B         	goto	L22
 11643  002514                     l844:
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;TabelasUmidade.h: 498: else
 11647                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 11648                           
 11649                           ; BSR set to: 0
 11650  002514  0E96               	movlw	150
 11651  002516  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11652  002518  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11653  00251A  A4D8               	btfss	status,2,c
 11654  00251C  D003               	goto	l846
 11655  00251E                     u11480:
 11656                           
 11657                           ; BSR set to: 0
 11658  00251E  0E14               	movlw	20
 11659  002520  EF4A  F00B         	goto	L22
 11660  002524                     l846:
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;TabelasUmidade.h: 500: else
 11664                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 11665                           
 11666                           ; BSR set to: 0
 11667  002524  0E97               	movlw	151
 11668  002526  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11669  002528  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11670  00252A  A4D8               	btfss	status,2,c
 11671  00252C  D003               	goto	l848
 11672  00252E                     u11490:
 11673                           
 11674                           ; BSR set to: 0
 11675  00252E  0E13               	movlw	19
 11676  002530  EF4A  F00B         	goto	L22
 11677  002534                     l848:
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;TabelasUmidade.h: 502: else
 11681                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 11682                           
 11683                           ; BSR set to: 0
 11684  002534  0E98               	movlw	152
 11685  002536  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11686  002538  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11687  00253A  A4D8               	btfss	status,2,c
 11688  00253C  D003               	goto	l850
 11689  00253E                     u11500:
 11690                           
 11691                           ; BSR set to: 0
 11692  00253E  0E12               	movlw	18
 11693  002540  EF4A  F00B         	goto	L22
 11694  002544                     l850:
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;TabelasUmidade.h: 504: else
 11698                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11699                           
 11700                           ; BSR set to: 0
 11701  002544  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11702  002546  D011               	goto	l852
 11703  002548  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11704  00254A  E104               	bnz	u11510
 11705  00254C  0E99               	movlw	153
 11706  00254E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11707  002550  A0D8               	btfss	status,0,c
 11708  002552  D00B               	goto	l852
 11709  002554                     u11510:
 11710                           
 11711                           ; BSR set to: 0
 11712  002554  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11713  002556  D006               	goto	u11520
 11714  002558  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11715  00255A  E107               	bnz	l7797
 11716  00255C  0E9D               	movlw	157
 11717  00255E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11718  002560  B0D8               	btfsc	status,0,c
 11719  002562  D003               	goto	l852
 11720  002564                     u11520:
 11721                           
 11722                           ; BSR set to: 0
 11723  002564  0E11               	movlw	17
 11724  002566  EF4A  F00B         	goto	L22
 11725  00256A                     l852:
 11726  00256A                     l7797:
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;TabelasUmidade.h: 506: else
 11730                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 11731  00256A  0E9D               	movlw	157
 11732  00256C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11733  00256E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11734  002570  A4D8               	btfss	status,2,c
 11735  002572  D003               	goto	l854
 11736  002574                     u11530:
 11737                           
 11738                           ; BSR set to: 0
 11739  002574  0E10               	movlw	16
 11740  002576  EF4A  F00B         	goto	L22
 11741  00257A                     l854:
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;TabelasUmidade.h: 508: else
 11745                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 11746                           
 11747                           ; BSR set to: 0
 11748  00257A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11749  00257C  D014               	goto	l634
 11750  00257E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11751  002580  E104               	bnz	u11540
 11752  002582  0E9E               	movlw	158
 11753  002584  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11754  002586  A0D8               	btfss	status,0,c
 11755  002588  D00E               	goto	l634
 11756  00258A                     u11540:
 11757                           
 11758                           ; BSR set to: 0
 11759  00258A  0E0F               	movlw	15
 11760  00258C  EF4A  F00B         	goto	L22
 11761  002590                     l521:
 11762                           
 11763                           ; BSR set to: 0
 11764                           
 11765                           ; BSR set to: 0
 11766  002590  51F5               	movf	_clima& (0+255),w,b
 11767                           
 11768                           ; Switch size 1, requested type "space"
 11769                           ; Number of cases is 3, Range of values is 1 to 3
 11770                           ; switch strategies available:
 11771                           ; Name         Instructions Cycles
 11772                           ; simple_byte           10     6 (average)
 11773                           ;	Chosen strategy is simple_byte
 11774  002592  0A01               	xorlw	1	; case 1
 11775  002594  B4D8               	btfsc	status,2,c
 11776  002596  EF15  F00E         	goto	l522
 11777  00259A  0A03               	xorlw	3	; case 2
 11778  00259C  B4D8               	btfsc	status,2,c
 11779  00259E  D495               	goto	l635
 11780  0025A0  0A01               	xorlw	1	; case 3
 11781  0025A2  B4D8               	btfsc	status,2,c
 11782  0025A4  D618               	goto	l749
 11783  0025A6                     l634:
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;TabelasUmidade.h: 512: }
 11787                           ;TabelasUmidade.h: 513: return _umd;
 11788                           
 11789                           ; BSR set to: 0
 11790                           
 11791                           ; BSR set to: 0
 11792  0025A6  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 11793  0025AA  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 11794                           
 11795                           ; BSR set to: 0
 11796  0025AC  0012               	return		;funcret
 11797  0025AE                     __end_of_tabelaUmidade:
 11798                           	opt stack 0
 11799                           tblptru	equ	0xFF8
 11800                           tblptrh	equ	0xFF7
 11801                           tblptrl	equ	0xFF6
 11802                           tablat	equ	0xFF5
 11803                           prodh	equ	0xFF4
 11804                           prodl	equ	0xFF3
 11805                           intcon	equ	0xFF2
 11806                           intcon2	equ	0xFF1
 11807                           intcon3	equ	0xFF0
 11808                           postinc0	equ	0xFEE
 11809                           wreg	equ	0xFE8
 11810                           postdec1	equ	0xFE5
 11811                           fsr1l	equ	0xFE1
 11812                           indf2	equ	0xFDF
 11813                           fsr2h	equ	0xFDA
 11814                           fsr2l	equ	0xFD9
 11815                           status	equ	0xFD8
 11816                           
 11817 ;; *************** function _setRangeValor *****************
 11818 ;; Defined at:
 11819 ;;		line 76 in file "src/FuncoesControlador.h"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  _acao           1    wreg     unsigned char 
 11822 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 11823 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 11824 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 11825 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 11826 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 11827 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 11828 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 11829 ;;		 -> clima(1), 
 11830 ;;  _min            1    7[BANK0 ] unsigned char 
 11831 ;;  _max            1    8[BANK0 ] unsigned char 
 11832 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  _acao           1   13[BANK0 ] unsigned char 
 11835 ;;  _aux            2   14[BANK0 ] int 
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11845 ;;      Params:         0       5       0       0       0       0       0       0       0
 11846 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11847 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11848 ;;      Totals:         0      11       0       0       0       0       0       0       0
 11849 ;;Total ram usage:       11 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    9
 11852 ;; This function calls:
 11853 ;;		_writeEEPROM_ext
 11854 ;; This function is called by:
 11855 ;;		_main
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           	psect	text4
 11860  004EB6                     __ptext4:
 11861                           	opt stack 0
 11862  004EB6                     _setRangeValor:
 11863                           	opt stack 21
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;incstack = 0
 11867                           ;setRangeValor@_acao stored from wreg
 11868  004EB6  0100               	movlb	0	; () banked
 11869  004EB8  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 11870                           
 11871                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 11872  004EBA  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 11873  004EBE  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 11874  004EC2  50DF               	movf	indf2,w,c
 11875  004EC4  0100               	movlb	0	; () banked
 11876  004EC6  6F6A               	movwf	??_setRangeValor& (0+255),b
 11877  004EC8  516A               	movf	??_setRangeValor& (0+255),w,b
 11878  004ECA  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 11879  004ECC  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 11880                           
 11881                           ;FuncoesControlador.h: 78: switch (_acao) {
 11882  004ECE  D02C               	goto	l938
 11883  004ED0                     
 11884                           ; BSR set to: 0
 11885                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 11886                           
 11887                           ; BSR set to: 0
 11888  004ED0  5168               	movf	setRangeValor@_max& (0+255),w,b
 11889  004ED2  6F6A               	movwf	??_setRangeValor& (0+255),b
 11890  004ED4  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 11891  004ED6  516A               	movf	??_setRangeValor& (0+255),w,b
 11892  004ED8  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 11893  004EDA  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 11894  004EDC  0A80               	xorlw	128
 11895  004EDE  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 11896  004EE0  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 11897  004EE2  0A80               	xorlw	128
 11898  004EE4  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 11899  004EE6  B0D8               	btfsc	status,0,c
 11900  004EE8  D003               	goto	l941
 11901                           
 11902                           ; BSR set to: 0
 11903  004EEA  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 11904  004EEC  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 11905  004EEE  D013               	goto	L25
 11906  004EF0                     l941:
 11907                           
 11908                           ; BSR set to: 0
 11909  004EF0  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 11910  004EF4  D017               	goto	L26
 11911  004EF6                     
 11912                           ; BSR set to: 0
 11913                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 11914                           
 11915                           ; BSR set to: 0
 11916  004EF6  5167               	movf	setRangeValor@_min& (0+255),w,b
 11917  004EF8  6F6A               	movwf	??_setRangeValor& (0+255),b
 11918  004EFA  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 11919  004EFC  516E               	movf	setRangeValor@_aux& (0+255),w,b
 11920  004EFE  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 11921  004F00  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 11922  004F02  0A80               	xorlw	128
 11923  004F04  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 11924  004F06  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 11925  004F08  0A80               	xorlw	128
 11926  004F0A  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 11927  004F0C  B0D8               	btfsc	status,0,c
 11928  004F0E  D008               	goto	l947
 11929                           
 11930                           ; BSR set to: 0
 11931  004F10  076E               	decf	setRangeValor@_aux& (0+255),f,b
 11932  004F12  A0D8               	btfss	status,0,c
 11933  004F14  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 11934  004F16                     L25:
 11935  004F16  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 11936  004F1A  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 11937  004F1E  D00B               	goto	l944
 11938  004F20                     l947:
 11939                           
 11940                           ; BSR set to: 0
 11941  004F20  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 11942  004F24                     L26:
 11943  004F24  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;FuncoesControlador.h: 85: }
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;FuncoesControlador.h: 84: break;
 11950  004F26  D007               	goto	l944
 11951  004F28                     l938:
 11952                           
 11953                           ; BSR set to: 0
 11954                           
 11955                           ; BSR set to: 0
 11956  004F28  516D               	movf	setRangeValor@_acao& (0+255),w,b
 11957                           
 11958                           ; Switch size 1, requested type "space"
 11959                           ; Number of cases is 2, Range of values is 43 to 45
 11960                           ; switch strategies available:
 11961                           ; Name         Instructions Cycles
 11962                           ; simple_byte            7     4 (average)
 11963                           ;	Chosen strategy is simple_byte
 11964  004F2A  0A2B               	xorlw	43	; case 43
 11965  004F2C  B4D8               	btfsc	status,2,c
 11966  004F2E  D7D0               	goto	l939
 11967  004F30  0A06               	xorlw	6	; case 45
 11968  004F32  B4D8               	btfsc	status,2,c
 11969  004F34  D7E0               	goto	l945
 11970  004F36                     l944:
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 11974                           
 11975                           ; BSR set to: 0
 11976  004F36  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 11977  004F38  B4D8               	btfsc	status,2,c
 11978  004F3A  D005               	goto	l950
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 11982  004F3C  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 11983  004F40  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 11984  004F42  EC93  F02B         	call	_writeEEPROM_ext
 11985  004F46                     l950:
 11986                           
 11987                           ;FuncoesControlador.h: 88: }
 11988                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 11989  004F46  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 11990  004F4A  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 11991  004F4E  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 11992  004F52  0012               	return		;funcret
 11993  004F54                     __end_of_setRangeValor:
 11994                           	opt stack 0
 11995                           tblptru	equ	0xFF8
 11996                           tblptrh	equ	0xFF7
 11997                           tblptrl	equ	0xFF6
 11998                           tablat	equ	0xFF5
 11999                           prodh	equ	0xFF4
 12000                           prodl	equ	0xFF3
 12001                           intcon	equ	0xFF2
 12002                           intcon2	equ	0xFF1
 12003                           intcon3	equ	0xFF0
 12004                           postinc0	equ	0xFEE
 12005                           wreg	equ	0xFE8
 12006                           postdec1	equ	0xFE5
 12007                           fsr1l	equ	0xFE1
 12008                           indf2	equ	0xFDF
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013 ;; *************** function _readEEPROM_ext *****************
 12014 ;; Defined at:
 12015 ;;		line 26 in file "src/Eeprom_ext.h"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  adress          1    wreg     unsigned char 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  adress          1    5[BANK0 ] unsigned char 
 12020 ;;  data            1    6[BANK0 ] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      unsigned char 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0
 12031 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12033 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        2 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    8
 12037 ;; This function calls:
 12038 ;;		_I2C_Read
 12039 ;;		_I2C_Restart
 12040 ;;		_I2C_Start
 12041 ;;		_I2C_Stop
 12042 ;;		_I2C_Write
 12043 ;; This function is called by:
 12044 ;;		_main
 12045 ;;		_readEEPROM16_ext
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           	psect	text5
 12050  0055B2                     __ptext5:
 12051                           	opt stack 0
 12052  0055B2                     _readEEPROM_ext:
 12053                           	opt stack 22
 12054                           
 12055                           ;incstack = 0
 12056                           ;readEEPROM_ext@adress stored from wreg
 12057  0055B2  0100               	movlb	0	; () banked
 12058  0055B4  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12059                           
 12060                           ;Eeprom_ext.h: 27: I2C_Start();
 12061  0055B6  ECB1  F02D         	call	_I2C_Start	;wreg free
 12062                           
 12063                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12064  0055BA  0E00               	movlw	0
 12065  0055BC  0100               	movlb	0	; () banked
 12066  0055BE  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12067  0055C0  0EA0               	movlw	160
 12068  0055C2  6F61               	movwf	I2C_Write@d& (0+255),b
 12069  0055C4  EC9F  F02D         	call	_I2C_Write	;wreg free
 12070                           
 12071                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12072  0055C8  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12073  0055CC  0100               	movlb	0	; () banked
 12074  0055CE  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12075  0055D0  EC9F  F02D         	call	_I2C_Write	;wreg free
 12076                           
 12077                           ;Eeprom_ext.h: 31: I2C_Restart();
 12078  0055D4  ECA9  F02D         	call	_I2C_Restart	;wreg free
 12079                           
 12080                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12081  0055D8  0E00               	movlw	0
 12082  0055DA  0100               	movlb	0	; () banked
 12083  0055DC  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12084  0055DE  0EA1               	movlw	161
 12085  0055E0  6F61               	movwf	I2C_Write@d& (0+255),b
 12086  0055E2  EC9F  F02D         	call	_I2C_Write	;wreg free
 12087                           
 12088                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12089  0055E6  0E00               	movlw	0
 12090  0055E8  0100               	movlb	0	; () banked
 12091  0055EA  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12092  0055EC  0E00               	movlw	0
 12093  0055EE  6F61               	movwf	I2C_Read@a& (0+255),b
 12094  0055F0  EC0B  F02C         	call	_I2C_Read	;wreg free
 12095  0055F4  0100               	movlb	0	; () banked
 12096  0055F6  5161               	movf	?_I2C_Read& (0+255),w,b
 12097  0055F8  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12098                           
 12099                           ;Eeprom_ext.h: 34: I2C_Stop();
 12100  0055FA  ECAD  F02D         	call	_I2C_Stop	;wreg free
 12101                           
 12102                           ;Eeprom_ext.h: 35: return data;
 12103  0055FE  0100               	movlb	0	; () banked
 12104  005600  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12105  005602  0012               	return	
 12106  005604                     __end_of_readEEPROM_ext:
 12107                           	opt stack 0
 12108                           tblptru	equ	0xFF8
 12109                           tblptrh	equ	0xFF7
 12110                           tblptrl	equ	0xFF6
 12111                           tablat	equ	0xFF5
 12112                           prodh	equ	0xFF4
 12113                           prodl	equ	0xFF3
 12114                           intcon	equ	0xFF2
 12115                           intcon2	equ	0xFF1
 12116                           intcon3	equ	0xFF0
 12117                           postinc0	equ	0xFEE
 12118                           wreg	equ	0xFE8
 12119                           postdec1	equ	0xFE5
 12120                           fsr1l	equ	0xFE1
 12121                           indf2	equ	0xFDF
 12122                           fsr2h	equ	0xFDA
 12123                           fsr2l	equ	0xFD9
 12124                           status	equ	0xFD8
 12125                           
 12126 ;; *************** function _I2C_Restart *****************
 12127 ;; Defined at:
 12128 ;;		line 30 in file "src/I2C.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, cstack
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used:    1
 12148 ;; Hardware stack levels required when called:    7
 12149 ;; This function calls:
 12150 ;;		_I2C_Wait
 12151 ;; This function is called by:
 12152 ;;		_readEEPROM_ext
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           	psect	text6
 12157  005B52                     __ptext6:
 12158                           	opt stack 0
 12159  005B52                     _I2C_Restart:
 12160                           	opt stack 22
 12161                           
 12162                           ;I2C.c: 31: I2C_Wait();
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;incstack = 0
 12166  005B52  EC78  F02D         	call	_I2C_Wait	;wreg free
 12167                           
 12168                           ;I2C.c: 32: RSEN = 1;
 12169  005B56  82C5               	bsf	4037,1,c	;volatile
 12170  005B58  0012               	return		;funcret
 12171  005B5A                     __end_of_I2C_Restart:
 12172                           	opt stack 0
 12173                           tblptru	equ	0xFF8
 12174                           tblptrh	equ	0xFF7
 12175                           tblptrl	equ	0xFF6
 12176                           tablat	equ	0xFF5
 12177                           prodh	equ	0xFF4
 12178                           prodl	equ	0xFF3
 12179                           intcon	equ	0xFF2
 12180                           intcon2	equ	0xFF1
 12181                           intcon3	equ	0xFF0
 12182                           postinc0	equ	0xFEE
 12183                           wreg	equ	0xFE8
 12184                           postdec1	equ	0xFE5
 12185                           fsr1l	equ	0xFE1
 12186                           indf2	equ	0xFDF
 12187                           fsr2h	equ	0xFDA
 12188                           fsr2l	equ	0xFD9
 12189                           status	equ	0xFD8
 12190                           
 12191 ;; *************** function _I2C_Read *****************
 12192 ;; Defined at:
 12193 ;;		line 46 in file "src/I2C.c"
 12194 ;; Parameters:    Size  Location     Type
 12195 ;;  a               2    1[BANK0 ] unsigned short 
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;  temp            2    3[BANK0 ] unsigned short 
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  2    1[BANK0 ] unsigned short 
 12200 ;; Registers used:
 12201 ;;		wreg, status,2, status,0, cstack
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12207 ;;      Params:         0       2       0       0       0       0       0       0       0
 12208 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12209 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12210 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12211 ;;Total ram usage:        4 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:    7
 12214 ;; This function calls:
 12215 ;;		_I2C_Wait
 12216 ;; This function is called by:
 12217 ;;		_readEEPROM_ext
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text7
 12222  005816                     __ptext7:
 12223                           	opt stack 0
 12224  005816                     _I2C_Read:
 12225                           	opt stack 22
 12226                           
 12227                           ;I2C.c: 47: unsigned short temp;
 12228                           ;I2C.c: 48: I2C_Wait();
 12229                           
 12230                           ;incstack = 0
 12231  005816  EC78  F02D         	call	_I2C_Wait	;wreg free
 12232                           
 12233                           ;I2C.c: 49: RCEN = 1;
 12234  00581A  86C5               	bsf	4037,3,c	;volatile
 12235                           
 12236                           ;I2C.c: 50: I2C_Wait();
 12237  00581C  EC78  F02D         	call	_I2C_Wait	;wreg free
 12238                           
 12239                           ;I2C.c: 51: temp = SSPBUF;
 12240  005820  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12241  005824  0100               	movlb	0	; () banked
 12242  005826  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12243                           
 12244                           ;I2C.c: 52: I2C_Wait();
 12245  005828  EC78  F02D         	call	_I2C_Wait	;wreg free
 12246                           
 12247                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12248  00582C  0100               	movlb	0	; () banked
 12249  00582E  5161               	movf	I2C_Read@a& (0+255),w,b
 12250  005830  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12251  005832  A4D8               	btfss	status,2,c
 12252  005834  D002               	goto	u8510
 12253  005836  8AC5               	bsf	4037,5,c	;volatile
 12254  005838  D001               	goto	u8525
 12255  00583A                     u8510:
 12256  00583A  9AC5               	bcf	4037,5,c	;volatile
 12257  00583C                     u8525:
 12258                           
 12259                           ;I2C.c: 54: ACKEN = 1;
 12260  00583C  88C5               	bsf	4037,4,c	;volatile
 12261                           
 12262                           ;I2C.c: 55: return temp;
 12263  00583E  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12264  005842  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12265  005846  0012               	return	
 12266  005848                     __end_of_I2C_Read:
 12267                           	opt stack 0
 12268                           tblptru	equ	0xFF8
 12269                           tblptrh	equ	0xFF7
 12270                           tblptrl	equ	0xFF6
 12271                           tablat	equ	0xFF5
 12272                           prodh	equ	0xFF4
 12273                           prodl	equ	0xFF3
 12274                           intcon	equ	0xFF2
 12275                           intcon2	equ	0xFF1
 12276                           intcon3	equ	0xFF0
 12277                           postinc0	equ	0xFEE
 12278                           wreg	equ	0xFE8
 12279                           postdec1	equ	0xFE5
 12280                           fsr1l	equ	0xFE1
 12281                           indf2	equ	0xFDF
 12282                           fsr2h	equ	0xFDA
 12283                           fsr2l	equ	0xFD9
 12284                           status	equ	0xFD8
 12285                           
 12286 ;; *************** function _getSensors *****************
 12287 ;; Defined at:
 12288 ;;		line 22 in file "src/ADC.h"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;		None
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  auxx            3   77[BANK0 ] float 
 12293 ;;  aux             3   84[BANK0 ] float 
 12294 ;;  i               1   83[BANK0 ] unsigned char 
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  2  1220[None  ] int 
 12297 ;; Registers used:
 12298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0
 12305 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12307 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12308 ;;Total ram usage:       18 bytes
 12309 ;; Hardware stack levels used:    1
 12310 ;; Hardware stack levels required when called:    8
 12311 ;; This function calls:
 12312 ;;		___ftadd
 12313 ;;		___ftdiv
 12314 ;;		___ftge
 12315 ;;		___ftmul
 12316 ;;		___fttol
 12317 ;;		___lwtoft
 12318 ;;		_readADC
 12319 ;; This function is called by:
 12320 ;;		_main
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text8
 12325  002B6E                     __ptext8:
 12326                           	opt stack 0
 12327  002B6E                     _getSensors:
 12328                           	opt stack 22
 12329                           
 12330                           ;ADC.h: 23: unsigned char i = 0;
 12331                           
 12332                           ;incstack = 0
 12333  002B6E  0E00               	movlw	0
 12334  002B70  0100               	movlb	0	; () banked
 12335  002B72  6FB3               	movwf	getSensors@i& (0+255),b
 12336                           
 12337                           ;ADC.h: 24: float aux = 0;
 12338  002B74  0E00               	movlw	0
 12339  002B76  6FB4               	movwf	getSensors@aux& (0+255),b
 12340  002B78  0E00               	movlw	0
 12341  002B7A  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12342  002B7C  0E00               	movlw	0
 12343  002B7E  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12344                           
 12345                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12346  002B80  5036               	movf	_t_leitura_adc,w,c
 12347  002B82  A4D8               	btfss	status,2,c
 12348  002B84  D1F3               	goto	l1221
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;ADC.h: 27: t_leitura_adc = 10;
 12352  002B86  0E0A               	movlw	10
 12353  002B88  6E36               	movwf	_t_leitura_adc,c
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12357  002B8A  0E0A               	movlw	10
 12358  002B8C  6035               	cpfslt	_media_adc,c
 12359  002B8E  D005               	goto	l1223
 12360                           
 12361                           ; BSR set to: 0
 12362  002B90  2A35               	incf	_media_adc,f,c
 12363  002B92  C035  F0AB         	movff	_media_adc,_getSensors$1513
 12364  002B96  6BAC               	clrf	(_getSensors$1513+1)& (0+255),b
 12365  002B98  D004               	goto	l1225
 12366  002B9A                     l1223:
 12367                           
 12368                           ; BSR set to: 0
 12369                           
 12370                           ; BSR set to: 0
 12371  002B9A  0E00               	movlw	0
 12372  002B9C  6FAC               	movwf	(_getSensors$1513+1)& (0+255),b
 12373  002B9E  0E00               	movlw	0
 12374  002BA0  6FAB               	movwf	_getSensors$1513& (0+255),b
 12375  002BA2                     l1225:
 12376                           
 12377                           ; BSR set to: 0
 12378                           
 12379                           ; BSR set to: 0
 12380  002BA2  C0AB  F035         	movff	_getSensors$1513,_media_adc
 12381                           
 12382                           ;ADC.h: 31: aux = 0;
 12383  002BA6  0E00               	movlw	0
 12384  002BA8  6FB4               	movwf	getSensors@aux& (0+255),b
 12385  002BAA  0E00               	movlw	0
 12386  002BAC  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12387  002BAE  0E00               	movlw	0
 12388  002BB0  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12389                           
 12390                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12391  002BB2  0E00               	movlw	0
 12392  002BB4  6FB3               	movwf	getSensors@i& (0+255),b
 12393  002BB6                     l9089:
 12394                           
 12395                           ; BSR set to: 0
 12396  002BB6  0E0B               	movlw	11
 12397  002BB8  65B3               	cpfsgt	getSensors@i& (0+255),b
 12398  002BBA  D001               	goto	l1226
 12399  002BBC  D042               	goto	u13880
 12400  002BBE                     l1226:
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12404                           
 12405                           ; BSR set to: 0
 12406  002BBE  0E00               	movlw	0
 12407  002BC0  6F7E               	movwf	___ftadd@f2& (0+255),b
 12408  002BC2  0E00               	movlw	0
 12409  002BC4  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12410  002BC6  0E42               	movlw	66
 12411  002BC8  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12412  002BCA  0E00               	movlw	0
 12413  002BCC  6F6F               	movwf	___ftmul@f2& (0+255),b
 12414  002BCE  0E61               	movlw	97
 12415  002BD0  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12416  002BD2  0E3F               	movlw	63
 12417  002BD4  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12418  002BD6  0E00               	movlw	0
 12419  002BD8  ECF8  F027         	call	_readADC
 12420  002BDC  C060  F069         	movff	?_readADC,___lwtoft@c
 12421  002BE0  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12422  002BE4  EC04  F02D         	call	___lwtoft	;wreg free
 12423  002BE8  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12424  002BEC  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12425  002BF0  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12426  002BF4  ECD6  F023         	call	___ftmul	;wreg free
 12427  002BF8  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12428  002BFC  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12429  002C00  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12430  002C04  ECE5  F020         	call	___ftadd	;wreg free
 12431  002C08  C07B  F0B0         	movff	?___ftadd,_getSensors$2518
 12432  002C0C  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2518+1
 12433  002C10  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2518+2
 12434                           
 12435                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12436  002C14  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12437  002C18  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12438  002C1C  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12439  002C20  C0B0  F07E         	movff	_getSensors$2518,___ftadd@f2
 12440  002C24  C0B1  F07F         	movff	_getSensors$2518+1,___ftadd@f2+1
 12441  002C28  C0B2  F080         	movff	_getSensors$2518+2,___ftadd@f2+2
 12442  002C2C  ECE5  F020         	call	___ftadd	;wreg free
 12443  002C30  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12444  002C34  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12445  002C38  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12446  002C3C  0100               	movlb	0	; () banked
 12447  002C3E  2BB3               	incf	getSensors@i& (0+255),f,b
 12448  002C40  D7BA               	goto	l9089
 12449  002C42                     u13880:
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;ADC.h: 34: }
 12453                           ;ADC.h: 35: aux = (aux / 12);
 12454                           
 12455                           ; BSR set to: 0
 12456  002C42  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12457  002C46  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12458  002C4A  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12459  002C4E  0E00               	movlw	0
 12460  002C50  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12461  002C52  0E40               	movlw	64
 12462  002C54  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12463  002C56  0E41               	movlw	65
 12464  002C58  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12465  002C5A  EC51  F024         	call	___ftdiv	;wreg free
 12466  002C5E  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12467  002C62  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12468  002C66  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12469                           
 12470                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12471  002C6A  0E00               	movlw	0
 12472  002C6C  0100               	movlb	0	; () banked
 12473  002C6E  6F60               	movwf	___ftge@ff1& (0+255),b
 12474  002C70  0E14               	movlw	20
 12475  002C72  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12476  002C74  0E42               	movlw	66
 12477  002C76  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12478  002C78  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12479  002C7C  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12480  002C80  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12481  002C84  EC92  F028         	call	___ftge	;wreg free
 12482  002C88  0100               	movlb	0	; () banked
 12483  002C8A  B0D8               	btfsc	status,0,c
 12484  002C8C  D015               	goto	l1229
 12485                           
 12486                           ; BSR set to: 0
 12487  002C8E  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12488  002C92  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12489  002C96  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12490  002C9A  0E00               	movlw	0
 12491  002C9C  6F7E               	movwf	___ftadd@f2& (0+255),b
 12492  002C9E  0E80               	movlw	128
 12493  002CA0  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12494  002CA2  0E3F               	movlw	63
 12495  002CA4  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12496  002CA6  ECE5  F020         	call	___ftadd	;wreg free
 12497  002CAA  C07B  F0A5         	movff	?___ftadd,_getSensors$1515
 12498  002CAE  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1515+1
 12499  002CB2  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1515+2
 12500  002CB6  D007               	goto	l1231
 12501  002CB8                     l1229:
 12502  002CB8  0E00               	movlw	0
 12503  002CBA  0100               	movlb	0	; () banked
 12504  002CBC  6FA5               	movwf	_getSensors$1515& (0+255),b
 12505  002CBE  0E00               	movlw	0
 12506  002CC0  6FA6               	movwf	(_getSensors$1515+1)& (0+255),b
 12507  002CC2  0E00               	movlw	0
 12508  002CC4  6FA7               	movwf	(_getSensors$1515+2)& (0+255),b
 12509  002CC6                     l1231:
 12510                           
 12511                           ; BSR set to: 0
 12512  002CC6  5035               	movf	_media_adc,w,c
 12513  002CC8  0D03               	mullw	3
 12514  002CCA  0E21               	movlw	low __temp
 12515  002CCC  24F3               	addwf	prodl,w,c
 12516  002CCE  6ED9               	movwf	fsr2l,c
 12517  002CD0  0E01               	movlw	high __temp
 12518  002CD2  20F4               	addwfc	prodh,w,c
 12519  002CD4  6EDA               	movwf	fsr2h,c
 12520  002CD6  C0A5  FFDE         	movff	_getSensors$1515,postinc2
 12521  002CDA  C0A6  FFDE         	movff	_getSensors$1515+1,postinc2
 12522  002CDE  C0A7  FFDE         	movff	_getSensors$1515+2,postinc2
 12523                           
 12524                           ;ADC.h: 40: aux = 0;
 12525  002CE2  0E00               	movlw	0
 12526  002CE4  0100               	movlb	0	; () banked
 12527  002CE6  6FB4               	movwf	getSensors@aux& (0+255),b
 12528  002CE8  0E00               	movlw	0
 12529  002CEA  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12530  002CEC  0E00               	movlw	0
 12531  002CEE  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12535  002CF0  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12536  002CF2  A4D8               	btfss	status,2,c
 12537  002CF4  D07E               	goto	l1232
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;ADC.h: 42: float auxx = 0;
 12541  002CF6  0E00               	movlw	0
 12542  002CF8  6FAD               	movwf	getSensors@auxx& (0+255),b
 12543  002CFA  0E00               	movlw	0
 12544  002CFC  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12545  002CFE  0E00               	movlw	0
 12546  002D00  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12547                           
 12548                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12549  002D02  0E00               	movlw	0
 12550  002D04  6FB3               	movwf	getSensors@i& (0+255),b
 12551  002D06                     l9113:
 12552                           
 12553                           ; BSR set to: 0
 12554  002D06  0E0B               	movlw	11
 12555  002D08  65B3               	cpfsgt	getSensors@i& (0+255),b
 12556  002D0A  D001               	goto	l1233
 12557  002D0C  D0BA               	goto	u13950
 12558  002D0E                     l1233:
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12562                           
 12563                           ; BSR set to: 0
 12564  002D0E  0E75               	movlw	117
 12565  002D10  6F7E               	movwf	___ftadd@f2& (0+255),b
 12566  002D12  0E53               	movlw	83
 12567  002D14  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12568  002D16  0EBF               	movlw	191
 12569  002D18  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12570  002D1A  0E00               	movlw	0
 12571  002D1C  6F6F               	movwf	___ftmul@f2& (0+255),b
 12572  002D1E  0EA0               	movlw	160
 12573  002D20  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12574  002D22  0E3B               	movlw	59
 12575  002D24  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12576  002D26  0E01               	movlw	1
 12577  002D28  ECF8  F027         	call	_readADC
 12578  002D2C  C060  F069         	movff	?_readADC,___lwtoft@c
 12579  002D30  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12580  002D34  EC04  F02D         	call	___lwtoft	;wreg free
 12581  002D38  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12582  002D3C  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12583  002D40  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12584  002D44  ECD6  F023         	call	___ftmul	;wreg free
 12585  002D48  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12586  002D4C  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12587  002D50  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12588  002D54  ECE5  F020         	call	___ftadd	;wreg free
 12589  002D58  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12590  002D5C  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12591  002D60  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12592  002D64  0E06               	movlw	6
 12593  002D66  0100               	movlb	0	; () banked
 12594  002D68  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12595  002D6A  0E01               	movlw	1
 12596  002D6C  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12597  002D6E  0E3D               	movlw	61
 12598  002D70  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12599  002D72  EC51  F024         	call	___ftdiv	;wreg free
 12600  002D76  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12601  002D7A  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12602  002D7E  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12603                           
 12604                           ;ADC.h: 45: if (auxx < 10) {
 12605  002D82  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12606  002D86  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12607  002D8A  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12608  002D8E  0E00               	movlw	0
 12609  002D90  0100               	movlb	0	; () banked
 12610  002D92  6F63               	movwf	___ftge@ff2& (0+255),b
 12611  002D94  0E20               	movlw	32
 12612  002D96  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12613  002D98  0E41               	movlw	65
 12614  002D9A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12615  002D9C  EC92  F028         	call	___ftge	;wreg free
 12616  002DA0  0100               	movlb	0	; () banked
 12617  002DA2  B0D8               	btfsc	status,0,c
 12618  002DA4  D00F               	goto	l1235
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;ADC.h: 46: aux += 0;
 12622  002DA6  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12623  002DAA  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12624  002DAE  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12625  002DB2  0E00               	movlw	0
 12626  002DB4  6F7E               	movwf	___ftadd@f2& (0+255),b
 12627  002DB6  0E00               	movlw	0
 12628  002DB8  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12629  002DBA  0E00               	movlw	0
 12630  002DBC  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12631  002DBE  ECE5  F020         	call	___ftadd	;wreg free
 12632  002DC2  D00E               	goto	L27
 12633  002DC4                     l1235:
 12634                           
 12635                           ;ADC.h: 48: aux += auxx;
 12636  002DC4  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12637  002DC8  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12638  002DCC  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12639  002DD0  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 12640  002DD4  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 12641  002DD8  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 12642  002DDC  ECE5  F020         	call	___ftadd	;wreg free
 12643  002DE0                     L27:
 12644  002DE0  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12645  002DE4  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12646  002DE8  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12647  002DEC  0100               	movlb	0	; () banked
 12648  002DEE  2BB3               	incf	getSensors@i& (0+255),f,b
 12649  002DF0  D78A               	goto	l9113
 12650  002DF2                     l1232:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 12654                           
 12655                           ; BSR set to: 0
 12656  002DF2  0E00               	movlw	0
 12657  002DF4  6FB3               	movwf	getSensors@i& (0+255),b
 12658  002DF6                     l9129:
 12659                           
 12660                           ; BSR set to: 0
 12661  002DF6  0E0B               	movlw	11
 12662  002DF8  65B3               	cpfsgt	getSensors@i& (0+255),b
 12663  002DFA  D001               	goto	l1238
 12664  002DFC  D042               	goto	u13950
 12665  002DFE                     l1238:
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12669                           
 12670                           ; BSR set to: 0
 12671  002DFE  0E00               	movlw	0
 12672  002E00  6F7E               	movwf	___ftadd@f2& (0+255),b
 12673  002E02  0E00               	movlw	0
 12674  002E04  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12675  002E06  0E42               	movlw	66
 12676  002E08  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12677  002E0A  0E00               	movlw	0
 12678  002E0C  6F6F               	movwf	___ftmul@f2& (0+255),b
 12679  002E0E  0E61               	movlw	97
 12680  002E10  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12681  002E12  0E3F               	movlw	63
 12682  002E14  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12683  002E16  0E02               	movlw	2
 12684  002E18  ECF8  F027         	call	_readADC
 12685  002E1C  C060  F069         	movff	?_readADC,___lwtoft@c
 12686  002E20  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12687  002E24  EC04  F02D         	call	___lwtoft	;wreg free
 12688  002E28  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12689  002E2C  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12690  002E30  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12691  002E34  ECD6  F023         	call	___ftmul	;wreg free
 12692  002E38  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12693  002E3C  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12694  002E40  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12695  002E44  ECE5  F020         	call	___ftadd	;wreg free
 12696  002E48  C07B  F0B0         	movff	?___ftadd,_getSensors$2518
 12697  002E4C  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2518+1
 12698  002E50  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2518+2
 12699                           
 12700                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12701  002E54  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12702  002E58  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12703  002E5C  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12704  002E60  C0B0  F07E         	movff	_getSensors$2518,___ftadd@f2
 12705  002E64  C0B1  F07F         	movff	_getSensors$2518+1,___ftadd@f2+1
 12706  002E68  C0B2  F080         	movff	_getSensors$2518+2,___ftadd@f2+2
 12707  002E6C  ECE5  F020         	call	___ftadd	;wreg free
 12708  002E70  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12709  002E74  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12710  002E78  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12711  002E7C  0100               	movlb	0	; () banked
 12712  002E7E  2BB3               	incf	getSensors@i& (0+255),f,b
 12713  002E80  D7BA               	goto	l9129
 12714  002E82                     u13950:
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;ADC.h: 54: }
 12718                           ;ADC.h: 55: }
 12719                           ;ADC.h: 57: aux = (aux / 12);
 12720                           
 12721                           ; BSR set to: 0
 12722                           
 12723                           ; BSR set to: 0
 12724  002E82  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12725  002E86  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12726  002E8A  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12727  002E8E  0E00               	movlw	0
 12728  002E90  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12729  002E92  0E40               	movlw	64
 12730  002E94  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12731  002E96  0E41               	movlw	65
 12732  002E98  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12733  002E9A  EC51  F024         	call	___ftdiv	;wreg free
 12734  002E9E  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12735  002EA2  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12736  002EA6  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12737                           
 12738                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 12739  002EAA  0100               	movlb	0	; () banked
 12740  002EAC  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12741  002EAE  A4D8               	btfss	status,2,c
 12742  002EB0  D02E               	goto	l1242
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;ADC.h: 59: if (aux > 100) aux = 100;
 12746  002EB2  0E00               	movlw	0
 12747  002EB4  6F60               	movwf	___ftge@ff1& (0+255),b
 12748  002EB6  0EC8               	movlw	200
 12749  002EB8  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12750  002EBA  0E42               	movlw	66
 12751  002EBC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12752  002EBE  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12753  002EC2  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12754  002EC6  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12755  002ECA  EC92  F028         	call	___ftge	;wreg free
 12756  002ECE  0100               	movlb	0	; () banked
 12757  002ED0  B0D8               	btfsc	status,0,c
 12758  002ED2  D006               	goto	l1241
 12759                           
 12760                           ; BSR set to: 0
 12761  002ED4  0E00               	movlw	0
 12762  002ED6  6FB4               	movwf	getSensors@aux& (0+255),b
 12763  002ED8  0EC8               	movlw	200
 12764  002EDA  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12765  002EDC  0E42               	movlw	66
 12766  002EDE  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12767  002EE0                     l1241:
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;ADC.h: 60: if (aux < 10) aux = 0;
 12771                           
 12772                           ; BSR set to: 0
 12773  002EE0  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12774  002EE4  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12775  002EE8  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12776  002EEC  0E00               	movlw	0
 12777  002EEE  6F63               	movwf	___ftge@ff2& (0+255),b
 12778  002EF0  0E20               	movlw	32
 12779  002EF2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12780  002EF4  0E41               	movlw	65
 12781  002EF6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12782  002EF8  EC92  F028         	call	___ftge	;wreg free
 12783  002EFC  0100               	movlb	0	; () banked
 12784  002EFE  B0D8               	btfsc	status,0,c
 12785  002F00  D006               	goto	l1242
 12786                           
 12787                           ; BSR set to: 0
 12788  002F02  0E00               	movlw	0
 12789  002F04  6FB4               	movwf	getSensors@aux& (0+255),b
 12790  002F06  0E00               	movlw	0
 12791  002F08  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12792  002F0A  0E00               	movlw	0
 12793  002F0C  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12794  002F0E                     l1242:
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;ADC.h: 61: }
 12798                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 12799                           
 12800                           ; BSR set to: 0
 12801                           
 12802                           ; BSR set to: 0
 12803  002F0E  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12804  002F12  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12805  002F16  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12806  002F1A  0E00               	movlw	0
 12807  002F1C  6F63               	movwf	___ftge@ff2& (0+255),b
 12808  002F1E  0E20               	movlw	32
 12809  002F20  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12810  002F22  0E42               	movlw	66
 12811  002F24  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12812  002F26  EC92  F028         	call	___ftge	;wreg free
 12813  002F2A  0100               	movlb	0	; () banked
 12814  002F2C  B0D8               	btfsc	status,0,c
 12815  002F2E  D003               	goto	u14000
 12816                           
 12817                           ; BSR set to: 0
 12818  002F30  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
 12819  002F32  B4D8               	btfsc	status,2,c
 12820  002F34  D007               	goto	l1244
 12821  002F36                     u14000:
 12822                           
 12823                           ; BSR set to: 0
 12824  002F36  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1517
 12825  002F3A  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1517+1
 12826  002F3E  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1517+2
 12827  002F42  D006               	goto	l1246
 12828  002F44                     l1244:
 12829                           
 12830                           ; BSR set to: 0
 12831                           
 12832                           ; BSR set to: 0
 12833  002F44  0E00               	movlw	0
 12834  002F46  6FA8               	movwf	_getSensors$1517& (0+255),b
 12835  002F48  0E00               	movlw	0
 12836  002F4A  6FA9               	movwf	(_getSensors$1517+1)& (0+255),b
 12837  002F4C  0E00               	movlw	0
 12838  002F4E  6FAA               	movwf	(_getSensors$1517+2)& (0+255),b
 12839  002F50                     l1246:
 12840                           
 12841                           ; BSR set to: 0
 12842                           
 12843                           ; BSR set to: 0
 12844  002F50  5035               	movf	_media_adc,w,c
 12845  002F52  0D03               	mullw	3
 12846  002F54  0E00               	movlw	low __umid
 12847  002F56  24F3               	addwf	prodl,w,c
 12848  002F58  6ED9               	movwf	fsr2l,c
 12849  002F5A  0E01               	movlw	high __umid
 12850  002F5C  20F4               	addwfc	prodh,w,c
 12851  002F5E  6EDA               	movwf	fsr2h,c
 12852  002F60  C0A8  FFDE         	movff	_getSensors$1517,postinc2
 12853  002F64  C0A9  FFDE         	movff	_getSensors$1517+1,postinc2
 12854  002F68  C0AA  FFDE         	movff	_getSensors$1517+2,postinc2
 12855  002F6C                     l1221:
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;ADC.h: 63: }
 12859                           ;ADC.h: 67: i = 0;
 12860                           
 12861                           ; BSR set to: 0
 12862  002F6C  0E00               	movlw	0
 12863  002F6E  6FB3               	movwf	getSensors@i& (0+255),b
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;ADC.h: 68: aux = 0;
 12867  002F70  0E00               	movlw	0
 12868  002F72  6FB4               	movwf	getSensors@aux& (0+255),b
 12869  002F74  0E00               	movlw	0
 12870  002F76  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12871  002F78  0E00               	movlw	0
 12872  002F7A  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 12876  002F7C  0E00               	movlw	0
 12877  002F7E  6FB3               	movwf	getSensors@i& (0+255),b
 12878  002F80                     l9165:
 12879                           
 12880                           ; BSR set to: 0
 12881  002F80  0E09               	movlw	9
 12882  002F82  65B3               	cpfsgt	getSensors@i& (0+255),b
 12883  002F84  D001               	goto	l1249
 12884  002F86  D01F               	goto	u14020
 12885  002F88                     l1249:
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;ADC.h: 70: aux += _temp[i];
 12889                           
 12890                           ; BSR set to: 0
 12891  002F88  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12892  002F8C  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12893  002F90  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12894  002F94  51B3               	movf	getSensors@i& (0+255),w,b
 12895  002F96  0D03               	mullw	3
 12896  002F98  0E21               	movlw	low __temp
 12897  002F9A  24F3               	addwf	prodl,w,c
 12898  002F9C  6ED9               	movwf	fsr2l,c
 12899  002F9E  0E01               	movlw	high __temp
 12900  002FA0  20F4               	addwfc	prodh,w,c
 12901  002FA2  6EDA               	movwf	fsr2h,c
 12902  002FA4  CFDE F07E          	movff	postinc2,___ftadd@f2
 12903  002FA8  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 12904  002FAC  CFDD F080          	movff	postdec2,___ftadd@f2+2
 12905  002FB0  ECE5  F020         	call	___ftadd	;wreg free
 12906  002FB4  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12907  002FB8  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12908  002FBC  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12909  002FC0  0100               	movlb	0	; () banked
 12910  002FC2  2BB3               	incf	getSensors@i& (0+255),f,b
 12911  002FC4  D7DD               	goto	l9165
 12912  002FC6                     u14020:
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;ADC.h: 71: }
 12916                           ;ADC.h: 72: temp = (aux / 10);
 12917                           
 12918                           ; BSR set to: 0
 12919  002FC6  0E00               	movlw	0
 12920  002FC8  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12921  002FCA  0E20               	movlw	32
 12922  002FCC  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12923  002FCE  0E41               	movlw	65
 12924  002FD0  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12925  002FD2  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12926  002FD6  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12927  002FDA  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12928  002FDE  EC51  F024         	call	___ftdiv	;wreg free
 12929  002FE2  C087  F096         	movff	?___ftdiv,___fttol@f1
 12930  002FE6  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 12931  002FEA  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 12932  002FEE  ECDE  F022         	call	___fttol	;wreg free
 12933  002FF2  0100               	movlb	0	; () banked
 12934  002FF4  5196               	movf	?___fttol& (0+255),w,b
 12935  002FF6  6FFE               	movwf	_temp& (0+255),b
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;ADC.h: 76: i = 0;
 12939  002FF8  0E00               	movlw	0
 12940  002FFA  6FB3               	movwf	getSensors@i& (0+255),b
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;ADC.h: 77: aux = 0;
 12944  002FFC  0E00               	movlw	0
 12945  002FFE  6FB4               	movwf	getSensors@aux& (0+255),b
 12946  003000  0E00               	movlw	0
 12947  003002  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12948  003004  0E00               	movlw	0
 12949  003006  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 12953  003008  0E00               	movlw	0
 12954  00300A  6FB3               	movwf	getSensors@i& (0+255),b
 12955  00300C                     l9183:
 12956                           
 12957                           ; BSR set to: 0
 12958  00300C  0E09               	movlw	9
 12959  00300E  65B3               	cpfsgt	getSensors@i& (0+255),b
 12960  003010  D001               	goto	l1251
 12961  003012  D01F               	goto	u14040
 12962  003014                     l1251:
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;ADC.h: 79: aux += _umid[i];
 12966                           
 12967                           ; BSR set to: 0
 12968  003014  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12969  003018  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12970  00301C  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12971  003020  51B3               	movf	getSensors@i& (0+255),w,b
 12972  003022  0D03               	mullw	3
 12973  003024  0E00               	movlw	low __umid
 12974  003026  24F3               	addwf	prodl,w,c
 12975  003028  6ED9               	movwf	fsr2l,c
 12976  00302A  0E01               	movlw	high __umid
 12977  00302C  20F4               	addwfc	prodh,w,c
 12978  00302E  6EDA               	movwf	fsr2h,c
 12979  003030  CFDE F07E          	movff	postinc2,___ftadd@f2
 12980  003034  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 12981  003038  CFDD F080          	movff	postdec2,___ftadd@f2+2
 12982  00303C  ECE5  F020         	call	___ftadd	;wreg free
 12983  003040  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12984  003044  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12985  003048  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12986  00304C  0100               	movlb	0	; () banked
 12987  00304E  2BB3               	incf	getSensors@i& (0+255),f,b
 12988  003050  D7DD               	goto	l9183
 12989  003052                     u14040:
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;ADC.h: 80: }
 12993                           ;ADC.h: 81: umid = (aux / 10);
 12994                           
 12995                           ; BSR set to: 0
 12996  003052  0E00               	movlw	0
 12997  003054  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12998  003056  0E20               	movlw	32
 12999  003058  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13000  00305A  0E41               	movlw	65
 13001  00305C  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13002  00305E  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13003  003062  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13004  003066  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13005  00306A  EC51  F024         	call	___ftdiv	;wreg free
 13006  00306E  C087  F096         	movff	?___ftdiv,___fttol@f1
 13007  003072  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13008  003076  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13009  00307A  ECDE  F022         	call	___fttol	;wreg free
 13010  00307E  0100               	movlb	0	; () banked
 13011  003080  5196               	movf	?___fttol& (0+255),w,b
 13012  003082  6E5D               	movwf	_umid,c
 13013                           
 13014                           ; BSR set to: 0
 13015  003084  0012               	return		;funcret
 13016  003086                     __end_of_getSensors:
 13017                           	opt stack 0
 13018                           tblptru	equ	0xFF8
 13019                           tblptrh	equ	0xFF7
 13020                           tblptrl	equ	0xFF6
 13021                           tablat	equ	0xFF5
 13022                           prodh	equ	0xFF4
 13023                           prodl	equ	0xFF3
 13024                           intcon	equ	0xFF2
 13025                           intcon2	equ	0xFF1
 13026                           intcon3	equ	0xFF0
 13027                           postinc0	equ	0xFEE
 13028                           wreg	equ	0xFE8
 13029                           postdec1	equ	0xFE5
 13030                           fsr1l	equ	0xFE1
 13031                           indf2	equ	0xFDF
 13032                           postinc2	equ	0xFDE
 13033                           postdec2	equ	0xFDD
 13034                           fsr2h	equ	0xFDA
 13035                           fsr2l	equ	0xFD9
 13036                           status	equ	0xFD8
 13037                           
 13038 ;; *************** function _readADC *****************
 13039 ;; Defined at:
 13040 ;;		line 10 in file "src/ADC.h"
 13041 ;; Parameters:    Size  Location     Type
 13042 ;;  canal           1    wreg     unsigned char 
 13043 ;; Auto vars:     Size  Location     Type
 13044 ;;  canal           1    8[BANK0 ] unsigned char 
 13045 ;;  digital         2    6[BANK0 ] int 
 13046 ;; Return value:  Size  Location     Type
 13047 ;;                  2    0[BANK0 ] unsigned int 
 13048 ;; Registers used:
 13049 ;;		wreg, status,2, status,0
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13055 ;;      Params:         0       2       0       0       0       0       0       0       0
 13056 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13057 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13058 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13059 ;;Total ram usage:        9 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    6
 13062 ;; This function calls:
 13063 ;;		Nothing
 13064 ;; This function is called by:
 13065 ;;		_getSensors
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           	psect	text9
 13070  004FF0                     __ptext9:
 13071                           	opt stack 0
 13072  004FF0                     _readADC:
 13073                           	opt stack 23
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;incstack = 0
 13077                           ;readADC@canal stored from wreg
 13078  004FF0  0100               	movlb	0	; () banked
 13079  004FF2  6F68               	movwf	readADC@canal& (0+255),b
 13080                           
 13081                           ;ADC.h: 11: ADRESH = 0;
 13082  004FF4  0E00               	movlw	0
 13083  004FF6  6EC4               	movwf	4036,c	;volatile
 13084                           
 13085                           ;ADC.h: 12: ADRESL = 0;
 13086  004FF8  0E00               	movlw	0
 13087  004FFA  6EC3               	movwf	4035,c	;volatile
 13088                           
 13089                           ;ADC.h: 13: int digital;
 13090                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13091  004FFC  C068  F062         	movff	readADC@canal,??_readADC
 13092  005000  0100               	movlb	0	; () banked
 13093  005002  90D8               	bcf	status,0,c
 13094  005004  3762               	rlcf	??_readADC& (0+255),f,b
 13095  005006  90D8               	bcf	status,0,c
 13096  005008  3762               	rlcf	??_readADC& (0+255),f,b
 13097  00500A  0E3C               	movlw	60
 13098  00500C  1762               	andwf	??_readADC& (0+255),f,b
 13099  00500E  50C2               	movf	4034,w,c	;volatile
 13100  005010  0BC3               	andlw	195
 13101  005012  1162               	iorwf	??_readADC& (0+255),w,b
 13102  005014  6EC2               	movwf	4034,c	;volatile
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13106  005016  0E14               	movlw	20
 13107  005018                     u15357:
 13108  005018  2EE8               	decfsz	wreg,f,c
 13109  00501A  D7FE               	bra	u15357
 13110                           
 13111                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13112  00501C  A2C2               	btfss	4034,1,c	;volatile
 13113  00501E  D004               	goto	u11830
 13114  005020  0100               	movlb	0	; () banked
 13115  005022  6B62               	clrf	??_readADC& (0+255),b
 13116  005024  2B62               	incf	??_readADC& (0+255),f,b
 13117  005026  D002               	goto	u11848
 13118  005028                     u11830:
 13119  005028  0100               	movlb	0	; () banked
 13120  00502A  6B62               	clrf	??_readADC& (0+255),b
 13121  00502C                     u11848:
 13122  00502C  0E01               	movlw	1
 13123  00502E  6F63               	movwf	(??_readADC+1)& (0+255),b
 13124  005030  2B62               	incf	??_readADC& (0+255),f,b
 13125  005032  D002               	goto	u11854
 13126  005034                     u11855:
 13127  005034  90D8               	bcf	status,0,c
 13128  005036  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13129  005038                     u11854:
 13130  005038  2F62               	decfsz	??_readADC& (0+255),f,b
 13131  00503A  D7FC               	goto	u11855
 13132  00503C  A0C2               	btfss	4034,0,c	;volatile
 13133  00503E  D004               	goto	u11860
 13134  005040  0100               	movlb	0	; () banked
 13135  005042  6B64               	clrf	(??_readADC+2)& (0+255),b
 13136  005044  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13137  005046  D002               	goto	u11878
 13138  005048                     u11860:
 13139  005048  0100               	movlb	0	; () banked
 13140  00504A  6B64               	clrf	(??_readADC+2)& (0+255),b
 13141  00504C                     u11878:
 13142  00504C  0E01               	movlw	1
 13143  00504E  6F65               	movwf	(??_readADC+3)& (0+255),b
 13144  005050  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13145  005052  D002               	goto	u11884
 13146  005054                     u11885:
 13147  005054  90D8               	bcf	status,0,c
 13148  005056  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13149  005058                     u11884:
 13150  005058  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13151  00505A  D7FC               	goto	u11885
 13152  00505C  0100               	movlb	0	; () banked
 13153  00505E  5165               	movf	(??_readADC+3)& (0+255),w,b
 13154  005060  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13155  005062  12C2               	iorwf	4034,f,c	;volatile
 13156  005064                     
 13157                           ; BSR set to: 0
 13158  005064  B2C2               	btfsc	4034,1,c	;volatile
 13159  005066  D7FE               	goto	l1216
 13160                           
 13161                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13162  005068  50C3               	movf	4035,w,c	;volatile
 13163  00506A  CFC4 F062          	movff	4036,??_readADC	;volatile
 13164  00506E  0100               	movlb	0	; () banked
 13165  005070  6B63               	clrf	(??_readADC+1)& (0+255),b
 13166  005072  C062  F063         	movff	??_readADC,??_readADC+1
 13167  005076  6B62               	clrf	??_readADC& (0+255),b
 13168  005078  1162               	iorwf	??_readADC& (0+255),w,b
 13169  00507A  6F66               	movwf	readADC@digital& (0+255),b
 13170  00507C  5163               	movf	(??_readADC+1)& (0+255),w,b
 13171  00507E  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;ADC.h: 19: return (digital);
 13175  005080  C066  F060         	movff	readADC@digital,?_readADC
 13176  005084  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13177  005088  0012               	return	
 13178  00508A                     __end_of_readADC:
 13179                           	opt stack 0
 13180                           tblptru	equ	0xFF8
 13181                           tblptrh	equ	0xFF7
 13182                           tblptrl	equ	0xFF6
 13183                           tablat	equ	0xFF5
 13184                           prodh	equ	0xFF4
 13185                           prodl	equ	0xFF3
 13186                           intcon	equ	0xFF2
 13187                           intcon2	equ	0xFF1
 13188                           intcon3	equ	0xFF0
 13189                           postinc0	equ	0xFEE
 13190                           wreg	equ	0xFE8
 13191                           postdec1	equ	0xFE5
 13192                           fsr1l	equ	0xFE1
 13193                           indf2	equ	0xFDF
 13194                           postinc2	equ	0xFDE
 13195                           postdec2	equ	0xFDD
 13196                           fsr2h	equ	0xFDA
 13197                           fsr2l	equ	0xFD9
 13198                           status	equ	0xFD8
 13199                           
 13200 ;; *************** function ___lwtoft *****************
 13201 ;; Defined at:
 13202 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;  c               2    9[BANK0 ] unsigned int 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;		None
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  3    9[BANK0 ] float 
 13209 ;; Registers used:
 13210 ;;		wreg, status,2, status,0, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/0
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13216 ;;      Params:         0       3       0       0       0       0       0       0       0
 13217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13219 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13220 ;;Total ram usage:        3 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:    7
 13223 ;; This function calls:
 13224 ;;		___ftpack
 13225 ;; This function is called by:
 13226 ;;		_getSensors
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text10
 13231  005A08                     __ptext10:
 13232                           	opt stack 0
 13233  005A08                     ___lwtoft:
 13234                           	opt stack 22
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;incstack = 0
 13238  005A08  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13239  005A0C  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13240  005A10  0100               	movlb	0	; () banked
 13241  005A12  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13242  005A14  0E8E               	movlw	142
 13243  005A16  6F63               	movwf	___ftpack@exp& (0+255),b
 13244  005A18  0E00               	movlw	0
 13245  005A1A  6F64               	movwf	___ftpack@sign& (0+255),b
 13246  005A1C  ECAD  F026         	call	___ftpack	;wreg free
 13247  005A20  C060  F069         	movff	?___ftpack,?___lwtoft
 13248  005A24  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13249  005A28  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13250  005A2C  0012               	return	
 13251  005A2E                     __end_of___lwtoft:
 13252                           	opt stack 0
 13253                           tblptru	equ	0xFF8
 13254                           tblptrh	equ	0xFF7
 13255                           tblptrl	equ	0xFF6
 13256                           tablat	equ	0xFF5
 13257                           prodh	equ	0xFF4
 13258                           prodl	equ	0xFF3
 13259                           intcon	equ	0xFF2
 13260                           intcon2	equ	0xFF1
 13261                           intcon3	equ	0xFF0
 13262                           postinc0	equ	0xFEE
 13263                           wreg	equ	0xFE8
 13264                           postdec1	equ	0xFE5
 13265                           fsr1l	equ	0xFE1
 13266                           indf2	equ	0xFDF
 13267                           postinc2	equ	0xFDE
 13268                           postdec2	equ	0xFDD
 13269                           fsr2h	equ	0xFDA
 13270                           fsr2l	equ	0xFD9
 13271                           status	equ	0xFD8
 13272                           
 13273 ;; *************** function ___fttol *****************
 13274 ;; Defined at:
 13275 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  f1              3   54[BANK0 ] float 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  lval            4   64[BANK0 ] unsigned long 
 13280 ;;  exp1            1   68[BANK0 ] unsigned char 
 13281 ;;  sign1           1   63[BANK0 ] unsigned char 
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  4   54[BANK0 ] long 
 13284 ;; Registers used:
 13285 ;;		wreg, status,2, status,0
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13291 ;;      Params:         0       4       0       0       0       0       0       0       0
 13292 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13293 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13294 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13295 ;;Total ram usage:       15 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    6
 13298 ;; This function calls:
 13299 ;;		Nothing
 13300 ;; This function is called by:
 13301 ;;		_getSensors
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text11
 13306  0045BC                     __ptext11:
 13307                           	opt stack 0
 13308  0045BC                     ___fttol:
 13309                           	opt stack 23
 13310                           
 13311                           ;incstack = 0
 13312  0045BC  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13313  0045C0  0100               	movlb	0	; () banked
 13314  0045C2  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13315  0045C4  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13316  0045C6  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13317  0045C8  379A               	rlcf	??___fttol& (0+255),f,b
 13318  0045CA  E301               	bnc	u12251
 13319  0045CC  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13320  0045CE                     u12251:
 13321  0045CE  519A               	movf	??___fttol& (0+255),w,b
 13322  0045D0  6FA4               	movwf	___fttol@exp1& (0+255),b
 13323  0045D2  51A4               	movf	___fttol@exp1& (0+255),w,b
 13324  0045D4  A4D8               	btfss	status,2,c
 13325  0045D6  D009               	goto	l2005
 13326                           
 13327                           ; BSR set to: 0
 13328  0045D8  0E00               	movlw	0
 13329  0045DA  6F96               	movwf	?___fttol& (0+255),b
 13330  0045DC  0E00               	movlw	0
 13331  0045DE  6F97               	movwf	(?___fttol+1)& (0+255),b
 13332  0045E0  0E00               	movlw	0
 13333  0045E2  6F98               	movwf	(?___fttol+2)& (0+255),b
 13334  0045E4  0E00               	movlw	0
 13335  0045E6  6F99               	movwf	(?___fttol+3)& (0+255),b
 13336                           
 13337                           ; BSR set to: 0
 13338  0045E8  0012               	return	
 13339  0045EA                     l2005:
 13340                           
 13341                           ; BSR set to: 0
 13342                           
 13343                           ; BSR set to: 0
 13344  0045EA  0E17               	movlw	23
 13345  0045EC  6F9A               	movwf	??___fttol& (0+255),b
 13346  0045EE  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13347  0045F2  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13348  0045F6  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13349  0045FA  299A               	incf	??___fttol& (0+255),w,b
 13350  0045FC  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13351  0045FE  D004               	goto	u12270
 13352  004600                     u12275:
 13353  004600  90D8               	bcf	status,0,c
 13354  004602  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13355  004604  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13356  004606  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13357  004608                     u12270:
 13358  004608  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13359  00460A  D7FA               	goto	u12275
 13360  00460C  0100               	movlb	0	; () banked
 13361  00460E  519B               	movf	(??___fttol+1)& (0+255),w,b
 13362  004610  6F9F               	movwf	___fttol@sign1& (0+255),b
 13363                           
 13364                           ; BSR set to: 0
 13365  004612  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13366                           
 13367                           ; BSR set to: 0
 13368  004614  0EFF               	movlw	255
 13369  004616  1796               	andwf	___fttol@f1& (0+255),f,b
 13370  004618  0EFF               	movlw	255
 13371  00461A  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13372  00461C  0E00               	movlw	0
 13373  00461E  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13374                           
 13375                           ; BSR set to: 0
 13376  004620  5196               	movf	___fttol@f1& (0+255),w,b
 13377  004622  6FA0               	movwf	___fttol@lval& (0+255),b
 13378  004624  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13379  004626  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13380  004628  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13381  00462A  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13382  00462C  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13383                           
 13384                           ; BSR set to: 0
 13385  00462E  0E8E               	movlw	142
 13386  004630  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13387                           
 13388                           ; BSR set to: 0
 13389  004632  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13390  004634  D016               	goto	l2007
 13391                           
 13392                           ; BSR set to: 0
 13393  004636  51A4               	movf	___fttol@exp1& (0+255),w,b
 13394  004638  0A80               	xorlw	128
 13395  00463A  0F8F               	addlw	143
 13396  00463C  B0D8               	btfsc	status,0,c
 13397  00463E  D009               	goto	l2008
 13398                           
 13399                           ; BSR set to: 0
 13400  004640  0E00               	movlw	0
 13401  004642  6F96               	movwf	?___fttol& (0+255),b
 13402  004644  0E00               	movlw	0
 13403  004646  6F97               	movwf	(?___fttol+1)& (0+255),b
 13404  004648  0E00               	movlw	0
 13405  00464A  6F98               	movwf	(?___fttol+2)& (0+255),b
 13406  00464C  0E00               	movlw	0
 13407  00464E  6F99               	movwf	(?___fttol+3)& (0+255),b
 13408                           
 13409                           ; BSR set to: 0
 13410  004650  0012               	return	
 13411  004652                     l2008:
 13412                           
 13413                           ; BSR set to: 0
 13414                           
 13415                           ; BSR set to: 0
 13416                           
 13417                           ; BSR set to: 0
 13418  004652  90D8               	bcf	status,0,c
 13419  004654  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13420  004656  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13421  004658  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13422  00465A  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13423                           
 13424                           ; BSR set to: 0
 13425  00465C  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13426  00465E  D7F9               	goto	l2008
 13427                           
 13428                           ; BSR set to: 0
 13429  004660  D015               	goto	u12310
 13430  004662                     l2007:
 13431                           
 13432                           ; BSR set to: 0
 13433                           
 13434                           ; BSR set to: 0
 13435  004662  0E17               	movlw	23
 13436  004664  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13437  004666  D00F               	goto	l2013
 13438                           
 13439                           ; BSR set to: 0
 13440  004668  0E00               	movlw	0
 13441  00466A  6F96               	movwf	?___fttol& (0+255),b
 13442  00466C  0E00               	movlw	0
 13443  00466E  6F97               	movwf	(?___fttol+1)& (0+255),b
 13444  004670  0E00               	movlw	0
 13445  004672  6F98               	movwf	(?___fttol+2)& (0+255),b
 13446  004674  0E00               	movlw	0
 13447  004676  6F99               	movwf	(?___fttol+3)& (0+255),b
 13448                           
 13449                           ; BSR set to: 0
 13450  004678  0012               	return	
 13451  00467A                     
 13452                           ; BSR set to: 0
 13453                           
 13454                           ; BSR set to: 0
 13455  00467A  90D8               	bcf	status,0,c
 13456  00467C  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13457  00467E  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13458  004680  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13459  004682  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13460  004684  07A4               	decf	___fttol@exp1& (0+255),f,b
 13461  004686                     l2013:
 13462                           
 13463                           ; BSR set to: 0
 13464                           
 13465                           ; BSR set to: 0
 13466  004686  51A4               	movf	___fttol@exp1& (0+255),w,b
 13467  004688  A4D8               	btfss	status,2,c
 13468  00468A  D7F7               	goto	l2014
 13469  00468C                     u12310:
 13470                           
 13471                           ; BSR set to: 0
 13472                           
 13473                           ; BSR set to: 0
 13474                           
 13475                           ; BSR set to: 0
 13476  00468C  519F               	movf	___fttol@sign1& (0+255),w,b
 13477  00468E  B4D8               	btfsc	status,2,c
 13478  004690  D008               	goto	l2016
 13479                           
 13480                           ; BSR set to: 0
 13481  004692  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13482  004694  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13483  004696  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13484  004698  6DA0               	negf	___fttol@lval& (0+255),b
 13485  00469A  0E00               	movlw	0
 13486  00469C  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13487  00469E  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13488  0046A0  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13489  0046A2                     l2016:
 13490                           
 13491                           ; BSR set to: 0
 13492                           
 13493                           ; BSR set to: 0
 13494  0046A2  C0A0  F096         	movff	___fttol@lval,?___fttol
 13495  0046A6  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13496  0046AA  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13497  0046AE  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13498  0046B2  0012               	return	
 13499  0046B4                     __end_of___fttol:
 13500                           	opt stack 0
 13501                           tblptru	equ	0xFF8
 13502                           tblptrh	equ	0xFF7
 13503                           tblptrl	equ	0xFF6
 13504                           tablat	equ	0xFF5
 13505                           prodh	equ	0xFF4
 13506                           prodl	equ	0xFF3
 13507                           intcon	equ	0xFF2
 13508                           intcon2	equ	0xFF1
 13509                           intcon3	equ	0xFF0
 13510                           postinc0	equ	0xFEE
 13511                           wreg	equ	0xFE8
 13512                           postdec1	equ	0xFE5
 13513                           fsr1l	equ	0xFE1
 13514                           indf2	equ	0xFDF
 13515                           postinc2	equ	0xFDE
 13516                           postdec2	equ	0xFDD
 13517                           fsr2h	equ	0xFDA
 13518                           fsr2l	equ	0xFD9
 13519                           status	equ	0xFD8
 13520                           
 13521 ;; *************** function ___ftmul *****************
 13522 ;; Defined at:
 13523 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  f1              3   12[BANK0 ] float 
 13526 ;;  f2              3   15[BANK0 ] float 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13529 ;;  sign            1   26[BANK0 ] unsigned char 
 13530 ;;  cntr            1   25[BANK0 ] unsigned char 
 13531 ;;  exp             1   21[BANK0 ] unsigned char 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  3   12[BANK0 ] float 
 13534 ;; Registers used:
 13535 ;;		wreg, status,2, status,0, cstack
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13541 ;;      Params:         0       6       0       0       0       0       0       0       0
 13542 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13543 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13544 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13545 ;;Total ram usage:       15 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:    7
 13548 ;; This function calls:
 13549 ;;		___ftpack
 13550 ;; This function is called by:
 13551 ;;		_getSensors
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text12
 13556  0047AC                     __ptext12:
 13557                           	opt stack 0
 13558  0047AC                     ___ftmul:
 13559                           	opt stack 22
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;incstack = 0
 13563  0047AC  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13564  0047B0  0100               	movlb	0	; () banked
 13565  0047B2  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13566  0047B4  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13567  0047B6  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13568  0047B8  3772               	rlcf	??___ftmul& (0+255),f,b
 13569  0047BA  E301               	bnc	u12161
 13570  0047BC  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13571  0047BE                     u12161:
 13572  0047BE  5172               	movf	??___ftmul& (0+255),w,b
 13573  0047C0  6F75               	movwf	___ftmul@exp& (0+255),b
 13574  0047C2  5175               	movf	___ftmul@exp& (0+255),w,b
 13575  0047C4  A4D8               	btfss	status,2,c
 13576  0047C6  D007               	goto	l1984
 13577                           
 13578                           ; BSR set to: 0
 13579  0047C8  0E00               	movlw	0
 13580  0047CA  6F6C               	movwf	?___ftmul& (0+255),b
 13581  0047CC  0E00               	movlw	0
 13582  0047CE  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13583  0047D0  0E00               	movlw	0
 13584  0047D2  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13585                           
 13586                           ; BSR set to: 0
 13587  0047D4  0012               	return	
 13588  0047D6                     l1984:
 13589                           
 13590                           ; BSR set to: 0
 13591                           
 13592                           ; BSR set to: 0
 13593  0047D6  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13594  0047DA  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13595  0047DC  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13596  0047DE  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13597  0047E0  3772               	rlcf	??___ftmul& (0+255),f,b
 13598  0047E2  E301               	bnc	u12181
 13599  0047E4  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13600  0047E6                     u12181:
 13601  0047E6  5172               	movf	??___ftmul& (0+255),w,b
 13602  0047E8  6F7A               	movwf	___ftmul@sign& (0+255),b
 13603  0047EA  517A               	movf	___ftmul@sign& (0+255),w,b
 13604  0047EC  A4D8               	btfss	status,2,c
 13605  0047EE  D007               	goto	l1986
 13606                           
 13607                           ; BSR set to: 0
 13608  0047F0  0E00               	movlw	0
 13609  0047F2  6F6C               	movwf	?___ftmul& (0+255),b
 13610  0047F4  0E00               	movlw	0
 13611  0047F6  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13612  0047F8  0E00               	movlw	0
 13613  0047FA  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13614                           
 13615                           ; BSR set to: 0
 13616  0047FC  0012               	return	
 13617  0047FE                     l1986:
 13618                           
 13619                           ; BSR set to: 0
 13620                           
 13621                           ; BSR set to: 0
 13622  0047FE  517A               	movf	___ftmul@sign& (0+255),w,b
 13623  004800  0F7B               	addlw	123
 13624  004802  2775               	addwf	___ftmul@exp& (0+255),f,b
 13625                           
 13626                           ; BSR set to: 0
 13627  004804  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 13628  004808  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13629  00480A  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 13630  00480C  0E80               	movlw	128
 13631  00480E  177A               	andwf	___ftmul@sign& (0+255),f,b
 13632                           
 13633                           ; BSR set to: 0
 13634  004810  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13635                           
 13636                           ; BSR set to: 0
 13637  004812  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13638                           
 13639                           ; BSR set to: 0
 13640  004814  0EFF               	movlw	255
 13641  004816  176F               	andwf	___ftmul@f2& (0+255),f,b
 13642  004818  0EFF               	movlw	255
 13643  00481A  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13644  00481C  0E00               	movlw	0
 13645  00481E  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 0
 13648  004820  0E00               	movlw	0
 13649  004822  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 13650  004824  0E00               	movlw	0
 13651  004826  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13652  004828  0E00               	movlw	0
 13653  00482A  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13654                           
 13655                           ; BSR set to: 0
 13656  00482C  0E07               	movlw	7
 13657  00482E  6F79               	movwf	___ftmul@cntr& (0+255),b
 13658  004830                     
 13659                           ; BSR set to: 0
 13660                           
 13661                           ; BSR set to: 0
 13662  004830  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13663  004832  D006               	goto	l1988
 13664                           
 13665                           ; BSR set to: 0
 13666  004834  516F               	movf	___ftmul@f2& (0+255),w,b
 13667  004836  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13668  004838  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13669  00483A  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13670  00483C  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13671  00483E  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13672  004840                     l1988:
 13673                           
 13674                           ; BSR set to: 0
 13675                           
 13676                           ; BSR set to: 0
 13677  004840  90D8               	bcf	status,0,c
 13678  004842  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13679  004844  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13680  004846  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13681  004848  90D8               	bcf	status,0,c
 13682  00484A  376F               	rlcf	___ftmul@f2& (0+255),f,b
 13683  00484C  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13684  00484E  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13685                           
 13686                           ; BSR set to: 0
 13687  004850  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13688  004852  D7EE               	goto	l1987
 13689                           
 13690                           ; BSR set to: 0
 13691                           
 13692                           ; BSR set to: 0
 13693  004854  0E09               	movlw	9
 13694  004856  6F79               	movwf	___ftmul@cntr& (0+255),b
 13695  004858                     
 13696                           ; BSR set to: 0
 13697                           
 13698                           ; BSR set to: 0
 13699  004858  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13700  00485A  D006               	goto	l1991
 13701                           
 13702                           ; BSR set to: 0
 13703  00485C  516F               	movf	___ftmul@f2& (0+255),w,b
 13704  00485E  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13705  004860  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13706  004862  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13707  004864  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13708  004866  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13709  004868                     l1991:
 13710                           
 13711                           ; BSR set to: 0
 13712                           
 13713                           ; BSR set to: 0
 13714  004868  90D8               	bcf	status,0,c
 13715  00486A  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13716  00486C  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13717  00486E  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13718  004870  90D8               	bcf	status,0,c
 13719  004872  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13720  004874  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13721  004876  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13722                           
 13723                           ; BSR set to: 0
 13724  004878  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13725  00487A  D7EE               	goto	l1990
 13726                           
 13727                           ; BSR set to: 0
 13728                           
 13729                           ; BSR set to: 0
 13730  00487C  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13731  004880  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13732  004884  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13733  004888  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 13734  00488C  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 13735  004890  ECAD  F026         	call	___ftpack	;wreg free
 13736  004894  C060  F06C         	movff	?___ftpack,?___ftmul
 13737  004898  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 13738  00489C  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 13739  0048A0  0012               	return	
 13740  0048A2                     __end_of___ftmul:
 13741                           	opt stack 0
 13742                           tblptru	equ	0xFF8
 13743                           tblptrh	equ	0xFF7
 13744                           tblptrl	equ	0xFF6
 13745                           tablat	equ	0xFF5
 13746                           prodh	equ	0xFF4
 13747                           prodl	equ	0xFF3
 13748                           intcon	equ	0xFF2
 13749                           intcon2	equ	0xFF1
 13750                           intcon3	equ	0xFF0
 13751                           postinc0	equ	0xFEE
 13752                           wreg	equ	0xFE8
 13753                           postdec1	equ	0xFE5
 13754                           fsr1l	equ	0xFE1
 13755                           indf2	equ	0xFDF
 13756                           postinc2	equ	0xFDE
 13757                           postdec2	equ	0xFDD
 13758                           fsr2h	equ	0xFDA
 13759                           fsr2l	equ	0xFD9
 13760                           status	equ	0xFD8
 13761                           
 13762 ;; *************** function ___ftge *****************
 13763 ;; Defined at:
 13764 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;  ff1             3    0[BANK0 ] float 
 13767 ;;  ff2             3    3[BANK0 ] float 
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;		None
 13770 ;; Return value:  Size  Location     Type
 13771 ;;		None               void
 13772 ;; Registers used:
 13773 ;;		wreg, status,2, status,0
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13779 ;;      Params:         0       6       0       0       0       0       0       0       0
 13780 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13781 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13782 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13783 ;;Total ram usage:        9 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    6
 13786 ;; This function calls:
 13787 ;;		Nothing
 13788 ;; This function is called by:
 13789 ;;		_getSensors
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text13
 13794  005124                     __ptext13:
 13795                           	opt stack 0
 13796  005124                     ___ftge:
 13797                           	opt stack 23
 13798                           
 13799                           ;incstack = 0
 13800  005124  0100               	movlb	0	; () banked
 13801  005126  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13802  005128  D016               	goto	l1977
 13803                           
 13804                           ; BSR set to: 0
 13805  00512A  C060  F066         	movff	___ftge@ff1,??___ftge
 13806  00512E  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 13807  005132  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 13808  005136  1F66               	comf	??___ftge& (0+255),f,b
 13809  005138  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13810  00513A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13811  00513C  2B66               	incf	??___ftge& (0+255),f,b
 13812  00513E  0E00               	movlw	0
 13813  005140  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13814  005142  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13815  005144  0E00               	movlw	0
 13816  005146  2566               	addwf	??___ftge& (0+255),w,b
 13817  005148  6F60               	movwf	___ftge@ff1& (0+255),b
 13818  00514A  0E00               	movlw	0
 13819  00514C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13820  00514E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13821  005150  0E80               	movlw	128
 13822  005152  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13823  005154  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13824  005156                     l1977:
 13825                           
 13826                           ; BSR set to: 0
 13827                           
 13828                           ; BSR set to: 0
 13829  005156  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 13830  005158  D016               	goto	l1978
 13831                           
 13832                           ; BSR set to: 0
 13833  00515A  C063  F066         	movff	___ftge@ff2,??___ftge
 13834  00515E  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 13835  005162  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 13836  005166  1F66               	comf	??___ftge& (0+255),f,b
 13837  005168  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13838  00516A  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13839  00516C  2B66               	incf	??___ftge& (0+255),f,b
 13840  00516E  0E00               	movlw	0
 13841  005170  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13842  005172  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13843  005174  0E00               	movlw	0
 13844  005176  2566               	addwf	??___ftge& (0+255),w,b
 13845  005178  6F63               	movwf	___ftge@ff2& (0+255),b
 13846  00517A  0E00               	movlw	0
 13847  00517C  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13848  00517E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13849  005180  0E80               	movlw	128
 13850  005182  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13851  005184  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13852  005186                     l1978:
 13853                           
 13854                           ; BSR set to: 0
 13855                           
 13856                           ; BSR set to: 0
 13857  005186  0E00               	movlw	0
 13858  005188  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 13859  00518A  0E00               	movlw	0
 13860  00518C  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 13861  00518E  0E80               	movlw	128
 13862  005190  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 13863                           
 13864                           ; BSR set to: 0
 13865  005192  0E00               	movlw	0
 13866  005194  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 13867  005196  0E00               	movlw	0
 13868  005198  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 13869  00519A  0E80               	movlw	128
 13870  00519C  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 13871  00519E  5163               	movf	___ftge@ff2& (0+255),w,b
 13872  0051A0  5D60               	subwf	___ftge@ff1& (0+255),w,b
 13873  0051A2  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 13874  0051A4  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 13875  0051A6  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 13876  0051A8  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 13877  0051AA  B0D8               	btfsc	status,0,c
 13878  0051AC  D002               	goto	l6193
 13879                           
 13880                           ; BSR set to: 0
 13881  0051AE  90D8               	bcf	status,0,c
 13882  0051B0  0012               	return	
 13883  0051B2                     l6193:
 13884                           
 13885                           ; BSR set to: 0
 13886                           
 13887                           ; BSR set to: 0
 13888  0051B2  80D8               	bsf	status,0,c
 13889                           
 13890                           ; BSR set to: 0
 13891  0051B4  0012               	return	
 13892  0051B6                     __end_of___ftge:
 13893                           	opt stack 0
 13894                           tblptru	equ	0xFF8
 13895                           tblptrh	equ	0xFF7
 13896                           tblptrl	equ	0xFF6
 13897                           tablat	equ	0xFF5
 13898                           prodh	equ	0xFF4
 13899                           prodl	equ	0xFF3
 13900                           intcon	equ	0xFF2
 13901                           intcon2	equ	0xFF1
 13902                           intcon3	equ	0xFF0
 13903                           postinc0	equ	0xFEE
 13904                           wreg	equ	0xFE8
 13905                           postdec1	equ	0xFE5
 13906                           fsr1l	equ	0xFE1
 13907                           indf2	equ	0xFDF
 13908                           postinc2	equ	0xFDE
 13909                           postdec2	equ	0xFDD
 13910                           fsr2h	equ	0xFDA
 13911                           fsr2l	equ	0xFD9
 13912                           status	equ	0xFD8
 13913                           
 13914 ;; *************** function ___ftdiv *****************
 13915 ;; Defined at:
 13916 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 13917 ;; Parameters:    Size  Location     Type
 13918 ;;  f1              3   39[BANK0 ] float 
 13919 ;;  f2              3   42[BANK0 ] float 
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;  f3              3   49[BANK0 ] float 
 13922 ;;  sign            1   53[BANK0 ] unsigned char 
 13923 ;;  exp             1   52[BANK0 ] unsigned char 
 13924 ;;  cntr            1   48[BANK0 ] unsigned char 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  3   39[BANK0 ] float 
 13927 ;; Registers used:
 13928 ;;		wreg, status,2, status,0, cstack
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13934 ;;      Params:         0       6       0       0       0       0       0       0       0
 13935 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13936 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13937 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13938 ;;Total ram usage:       15 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    7
 13941 ;; This function calls:
 13942 ;;		___ftpack
 13943 ;; This function is called by:
 13944 ;;		_getSensors
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text14
 13949  0048A2                     __ptext14:
 13950                           	opt stack 0
 13951  0048A2                     ___ftdiv:
 13952                           	opt stack 22
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;incstack = 0
 13956  0048A2  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 13957  0048A6  0100               	movlb	0	; () banked
 13958  0048A8  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 13959  0048AA  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 13960  0048AC  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 13961  0048AE  378D               	rlcf	??___ftdiv& (0+255),f,b
 13962  0048B0  E301               	bnc	u12111
 13963  0048B2  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13964  0048B4                     u12111:
 13965  0048B4  518D               	movf	??___ftdiv& (0+255),w,b
 13966  0048B6  6F94               	movwf	___ftdiv@exp& (0+255),b
 13967  0048B8  5194               	movf	___ftdiv@exp& (0+255),w,b
 13968  0048BA  A4D8               	btfss	status,2,c
 13969  0048BC  D007               	goto	l1969
 13970                           
 13971                           ; BSR set to: 0
 13972  0048BE  0E00               	movlw	0
 13973  0048C0  6F87               	movwf	?___ftdiv& (0+255),b
 13974  0048C2  0E00               	movlw	0
 13975  0048C4  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 13976  0048C6  0E00               	movlw	0
 13977  0048C8  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 13978                           
 13979                           ; BSR set to: 0
 13980  0048CA  0012               	return	
 13981  0048CC                     l1969:
 13982                           
 13983                           ; BSR set to: 0
 13984                           
 13985                           ; BSR set to: 0
 13986  0048CC  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 13987  0048D0  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 13988  0048D2  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 13989  0048D4  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 13990  0048D6  378D               	rlcf	??___ftdiv& (0+255),f,b
 13991  0048D8  E301               	bnc	u12131
 13992  0048DA  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13993  0048DC                     u12131:
 13994  0048DC  518D               	movf	??___ftdiv& (0+255),w,b
 13995  0048DE  6F95               	movwf	___ftdiv@sign& (0+255),b
 13996  0048E0  5195               	movf	___ftdiv@sign& (0+255),w,b
 13997  0048E2  A4D8               	btfss	status,2,c
 13998  0048E4  D007               	goto	l1971
 13999                           
 14000                           ; BSR set to: 0
 14001  0048E6  0E00               	movlw	0
 14002  0048E8  6F87               	movwf	?___ftdiv& (0+255),b
 14003  0048EA  0E00               	movlw	0
 14004  0048EC  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14005  0048EE  0E00               	movlw	0
 14006  0048F0  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14007                           
 14008                           ; BSR set to: 0
 14009  0048F2  0012               	return	
 14010  0048F4                     l1971:
 14011                           
 14012                           ; BSR set to: 0
 14013                           
 14014                           ; BSR set to: 0
 14015  0048F4  0E00               	movlw	0
 14016  0048F6  6F91               	movwf	___ftdiv@f3& (0+255),b
 14017  0048F8  0E00               	movlw	0
 14018  0048FA  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14019  0048FC  0E00               	movlw	0
 14020  0048FE  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14021                           
 14022                           ; BSR set to: 0
 14023  004900  5195               	movf	___ftdiv@sign& (0+255),w,b
 14024  004902  0F89               	addlw	137
 14025  004904  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14026                           
 14027                           ; BSR set to: 0
 14028  004906  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14029                           
 14030                           ; BSR set to: 0
 14031  00490A  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14032  00490C  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14033                           
 14034                           ; BSR set to: 0
 14035  00490E  0E80               	movlw	128
 14036  004910  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14037                           
 14038                           ; BSR set to: 0
 14039  004912  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14040                           
 14041                           ; BSR set to: 0
 14042  004914  0EFF               	movlw	255
 14043  004916  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14044  004918  0EFF               	movlw	255
 14045  00491A  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14046  00491C  0E00               	movlw	0
 14047  00491E  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14048                           
 14049                           ; BSR set to: 0
 14050  004920  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14051                           
 14052                           ; BSR set to: 0
 14053  004922  0EFF               	movlw	255
 14054  004924  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14055  004926  0EFF               	movlw	255
 14056  004928  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14057  00492A  0E00               	movlw	0
 14058  00492C  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14059                           
 14060                           ; BSR set to: 0
 14061  00492E  0E18               	movlw	24
 14062  004930  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14063  004932                     
 14064                           ; BSR set to: 0
 14065                           
 14066                           ; BSR set to: 0
 14067  004932  90D8               	bcf	status,0,c
 14068  004934  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14069  004936  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14070  004938  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14071                           
 14072                           ; BSR set to: 0
 14073  00493A  518A               	movf	___ftdiv@f2& (0+255),w,b
 14074  00493C  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14075  00493E  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14076  004940  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14077  004942  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14078  004944  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14079  004946  A0D8               	btfss	status,0,c
 14080  004948  D007               	goto	l1973
 14081                           
 14082                           ; BSR set to: 0
 14083  00494A  518A               	movf	___ftdiv@f2& (0+255),w,b
 14084  00494C  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14085  00494E  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14086  004950  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14087  004952  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14088  004954  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14089                           
 14090                           ; BSR set to: 0
 14091  004956  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14092  004958                     l1973:
 14093                           
 14094                           ; BSR set to: 0
 14095  004958  90D8               	bcf	status,0,c
 14096  00495A  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14097  00495C  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14098  00495E  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14099                           
 14100                           ; BSR set to: 0
 14101  004960  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14102  004962  D7E7               	goto	l1972
 14103                           
 14104                           ; BSR set to: 0
 14105                           
 14106                           ; BSR set to: 0
 14107  004964  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14108  004968  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14109  00496C  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14110  004970  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14111  004974  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14112  004978  ECAD  F026         	call	___ftpack	;wreg free
 14113  00497C  C060  F087         	movff	?___ftpack,?___ftdiv
 14114  004980  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14115  004984  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14116  004988  0012               	return	
 14117  00498A                     __end_of___ftdiv:
 14118                           	opt stack 0
 14119                           tblptru	equ	0xFF8
 14120                           tblptrh	equ	0xFF7
 14121                           tblptrl	equ	0xFF6
 14122                           tablat	equ	0xFF5
 14123                           prodh	equ	0xFF4
 14124                           prodl	equ	0xFF3
 14125                           intcon	equ	0xFF2
 14126                           intcon2	equ	0xFF1
 14127                           intcon3	equ	0xFF0
 14128                           postinc0	equ	0xFEE
 14129                           wreg	equ	0xFE8
 14130                           postdec1	equ	0xFE5
 14131                           fsr1l	equ	0xFE1
 14132                           indf2	equ	0xFDF
 14133                           postinc2	equ	0xFDE
 14134                           postdec2	equ	0xFDD
 14135                           fsr2h	equ	0xFDA
 14136                           fsr2l	equ	0xFD9
 14137                           status	equ	0xFD8
 14138                           
 14139 ;; *************** function ___ftadd *****************
 14140 ;; Defined at:
 14141 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;  f1              3   27[BANK0 ] float 
 14144 ;;  f2              3   30[BANK0 ] float 
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;  exp1            1   38[BANK0 ] unsigned char 
 14147 ;;  exp2            1   37[BANK0 ] unsigned char 
 14148 ;;  sign            1   36[BANK0 ] unsigned char 
 14149 ;; Return value:  Size  Location     Type
 14150 ;;                  3   27[BANK0 ] float 
 14151 ;; Registers used:
 14152 ;;		wreg, status,2, status,0, cstack
 14153 ;; Tracked objects:
 14154 ;;		On entry : 0/0
 14155 ;;		On exit  : 0/0
 14156 ;;		Unchanged: 0/0
 14157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14158 ;;      Params:         0       6       0       0       0       0       0       0       0
 14159 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14160 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14161 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14162 ;;Total ram usage:       12 bytes
 14163 ;; Hardware stack levels used:    1
 14164 ;; Hardware stack levels required when called:    7
 14165 ;; This function calls:
 14166 ;;		___ftpack
 14167 ;; This function is called by:
 14168 ;;		_getSensors
 14169 ;; This function uses a non-reentrant model
 14170 ;;
 14171                           
 14172                           	psect	text15
 14173  0041CA                     __ptext15:
 14174                           	opt stack 0
 14175  0041CA                     ___ftadd:
 14176                           	opt stack 22
 14177                           
 14178                           ;incstack = 0
 14179  0041CA  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14180  0041CE  0100               	movlb	0	; () banked
 14181  0041D0  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14182  0041D2  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14183  0041D4  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14184  0041D6  3781               	rlcf	??___ftadd& (0+255),f,b
 14185  0041D8  E301               	bnc	u11901
 14186  0041DA  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14187  0041DC                     u11901:
 14188  0041DC  5181               	movf	??___ftadd& (0+255),w,b
 14189  0041DE  6F86               	movwf	___ftadd@exp1& (0+255),b
 14190  0041E0  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14191  0041E4  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14192  0041E6  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14193  0041E8  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14194  0041EA  3781               	rlcf	??___ftadd& (0+255),f,b
 14195  0041EC  E301               	bnc	u11911
 14196  0041EE  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14197  0041F0                     u11911:
 14198  0041F0  5181               	movf	??___ftadd& (0+255),w,b
 14199  0041F2  6F85               	movwf	___ftadd@exp2& (0+255),b
 14200                           
 14201                           ; BSR set to: 0
 14202  0041F4  5186               	movf	___ftadd@exp1& (0+255),w,b
 14203  0041F6  B4D8               	btfsc	status,2,c
 14204  0041F8  D00B               	goto	u11940
 14205                           
 14206                           ; BSR set to: 0
 14207  0041FA  5185               	movf	___ftadd@exp2& (0+255),w,b
 14208  0041FC  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14209  0041FE  B0D8               	btfsc	status,0,c
 14210  004200  D00E               	goto	l1936
 14211                           
 14212                           ; BSR set to: 0
 14213  004202  5186               	movf	___ftadd@exp1& (0+255),w,b
 14214  004204  0800               	sublw	0
 14215  004206  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14216  004208  6F81               	movwf	??___ftadd& (0+255),b
 14217  00420A  0E18               	movlw	24
 14218  00420C  6581               	cpfsgt	??___ftadd& (0+255),b
 14219  00420E  D007               	goto	l1936
 14220  004210                     u11940:
 14221                           
 14222                           ; BSR set to: 0
 14223  004210  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14224  004214  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14225  004218  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14226  00421C  0012               	return	
 14227  00421E                     l1936:
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  00421E  5185               	movf	___ftadd@exp2& (0+255),w,b
 14233  004220  B4D8               	btfsc	status,2,c
 14234  004222  D00B               	goto	u11970
 14235                           
 14236                           ; BSR set to: 0
 14237  004224  5186               	movf	___ftadd@exp1& (0+255),w,b
 14238  004226  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14239  004228  B0D8               	btfsc	status,0,c
 14240  00422A  D00E               	goto	l1940
 14241                           
 14242                           ; BSR set to: 0
 14243  00422C  5185               	movf	___ftadd@exp2& (0+255),w,b
 14244  00422E  0800               	sublw	0
 14245  004230  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14246  004232  6F81               	movwf	??___ftadd& (0+255),b
 14247  004234  0E18               	movlw	24
 14248  004236  6581               	cpfsgt	??___ftadd& (0+255),b
 14249  004238  D007               	goto	l1940
 14250  00423A                     u11970:
 14251                           
 14252                           ; BSR set to: 0
 14253  00423A  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14254  00423E  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14255  004242  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14256  004246  0012               	return	
 14257  004248                     l1940:
 14258                           
 14259                           ; BSR set to: 0
 14260                           
 14261                           ; BSR set to: 0
 14262  004248  0E06               	movlw	6
 14263  00424A  6F84               	movwf	___ftadd@sign& (0+255),b
 14264                           
 14265                           ; BSR set to: 0
 14266  00424C  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14267                           
 14268                           ; BSR set to: 0
 14269  00424E  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14270                           
 14271                           ; BSR set to: 0
 14272                           
 14273                           ; BSR set to: 0
 14274  004250  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14275                           
 14276                           ; BSR set to: 0
 14277  004252  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14278                           
 14279                           ; BSR set to: 0
 14280  004254  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14281                           
 14282                           ; BSR set to: 0
 14283  004256  0EFF               	movlw	255
 14284  004258  177B               	andwf	___ftadd@f1& (0+255),f,b
 14285  00425A  0EFF               	movlw	255
 14286  00425C  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14287  00425E  0E00               	movlw	0
 14288  004260  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14289  004262  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14290                           
 14291                           ; BSR set to: 0
 14292  004264  0EFF               	movlw	255
 14293  004266  177E               	andwf	___ftadd@f2& (0+255),f,b
 14294  004268  0EFF               	movlw	255
 14295  00426A  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14296  00426C  0E00               	movlw	0
 14297  00426E  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14298                           
 14299                           ; BSR set to: 0
 14300  004270  5185               	movf	___ftadd@exp2& (0+255),w,b
 14301  004272  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14302  004274  B0D8               	btfsc	status,0,c
 14303  004276  D01B               	goto	l1945
 14304  004278                     u12000:
 14305                           
 14306                           ; BSR set to: 0
 14307                           
 14308                           ; BSR set to: 0
 14309  004278  90D8               	bcf	status,0,c
 14310  00427A  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14311  00427C  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14312  00427E  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14313  004280  0785               	decf	___ftadd@exp2& (0+255),f,b
 14314                           
 14315                           ; BSR set to: 0
 14316  004282  5186               	movf	___ftadd@exp1& (0+255),w,b
 14317  004284  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14318  004286  B4D8               	btfsc	status,2,c
 14319  004288  D00D               	goto	l1950
 14320                           
 14321                           ; BSR set to: 0
 14322  00428A  0784               	decf	___ftadd@sign& (0+255),f,b
 14323  00428C  C084  F081         	movff	___ftadd@sign,??___ftadd
 14324  004290  0E07               	movlw	7
 14325  004292  1781               	andwf	??___ftadd& (0+255),f,b
 14326  004294  B4D8               	btfsc	status,2,c
 14327  004296  D006               	goto	l1950
 14328  004298  D7EF               	goto	u12000
 14329  00429A                     
 14330                           ; BSR set to: 0
 14331                           
 14332                           ; BSR set to: 0
 14333  00429A  90D8               	bcf	status,0,c
 14334  00429C  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14335  00429E  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14336  0042A0  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14337  0042A2  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14338  0042A4                     l1950:
 14339                           
 14340                           ; BSR set to: 0
 14341                           
 14342                           ; BSR set to: 0
 14343  0042A4  5185               	movf	___ftadd@exp2& (0+255),w,b
 14344  0042A6  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14345  0042A8  B4D8               	btfsc	status,2,c
 14346  0042AA  D01F               	goto	u12070
 14347  0042AC  D7F6               	goto	l1951
 14348  0042AE                     l1945:
 14349                           
 14350                           ; BSR set to: 0
 14351                           
 14352                           ; BSR set to: 0
 14353  0042AE  5186               	movf	___ftadd@exp1& (0+255),w,b
 14354  0042B0  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14355  0042B2  B0D8               	btfsc	status,0,c
 14356  0042B4  D01A               	goto	u12070
 14357  0042B6                     u12040:
 14358                           
 14359                           ; BSR set to: 0
 14360                           
 14361                           ; BSR set to: 0
 14362  0042B6  90D8               	bcf	status,0,c
 14363  0042B8  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14364  0042BA  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14365  0042BC  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14366  0042BE  0786               	decf	___ftadd@exp1& (0+255),f,b
 14367                           
 14368                           ; BSR set to: 0
 14369  0042C0  5186               	movf	___ftadd@exp1& (0+255),w,b
 14370  0042C2  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14371  0042C4  B4D8               	btfsc	status,2,c
 14372  0042C6  D00D               	goto	l1959
 14373                           
 14374                           ; BSR set to: 0
 14375  0042C8  0784               	decf	___ftadd@sign& (0+255),f,b
 14376  0042CA  C084  F081         	movff	___ftadd@sign,??___ftadd
 14377  0042CE  0E07               	movlw	7
 14378  0042D0  1781               	andwf	??___ftadd& (0+255),f,b
 14379  0042D2  B4D8               	btfsc	status,2,c
 14380  0042D4  D006               	goto	l1959
 14381  0042D6  D7EF               	goto	u12040
 14382  0042D8                     
 14383                           ; BSR set to: 0
 14384                           
 14385                           ; BSR set to: 0
 14386  0042D8  90D8               	bcf	status,0,c
 14387  0042DA  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14388  0042DC  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14389  0042DE  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14390  0042E0  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14391  0042E2                     l1959:
 14392                           
 14393                           ; BSR set to: 0
 14394                           
 14395                           ; BSR set to: 0
 14396  0042E2  5185               	movf	___ftadd@exp2& (0+255),w,b
 14397  0042E4  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14398  0042E6  A4D8               	btfss	status,2,c
 14399  0042E8  D7F7               	goto	l1960
 14400  0042EA                     u12070:
 14401                           
 14402                           ; BSR set to: 0
 14403                           
 14404                           ; BSR set to: 0
 14405                           
 14406                           ; BSR set to: 0
 14407  0042EA  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14408  0042EC  D00C               	goto	l1962
 14409                           
 14410                           ; BSR set to: 0
 14411  0042EE  0EFF               	movlw	255
 14412  0042F0  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14413  0042F2  0EFF               	movlw	255
 14414  0042F4  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14415  0042F6  0EFF               	movlw	255
 14416  0042F8  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14417  0042FA  0E01               	movlw	1
 14418  0042FC  277B               	addwf	___ftadd@f1& (0+255),f,b
 14419  0042FE  0E00               	movlw	0
 14420  004300  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14421  004302  0E00               	movlw	0
 14422  004304  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14423  004306                     l1962:
 14424                           
 14425                           ; BSR set to: 0
 14426  004306  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14427  004308  D00C               	goto	l1963
 14428                           
 14429                           ; BSR set to: 0
 14430  00430A  0EFF               	movlw	255
 14431  00430C  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14432  00430E  0EFF               	movlw	255
 14433  004310  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14434  004312  0EFF               	movlw	255
 14435  004314  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14436  004316  0E01               	movlw	1
 14437  004318  277E               	addwf	___ftadd@f2& (0+255),f,b
 14438  00431A  0E00               	movlw	0
 14439  00431C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14440  00431E  0E00               	movlw	0
 14441  004320  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14442  004322                     l1963:
 14443                           
 14444                           ; BSR set to: 0
 14445                           
 14446                           ; BSR set to: 0
 14447  004322  0E00               	movlw	0
 14448  004324  6F84               	movwf	___ftadd@sign& (0+255),b
 14449                           
 14450                           ; BSR set to: 0
 14451  004326  517B               	movf	___ftadd@f1& (0+255),w,b
 14452  004328  277E               	addwf	___ftadd@f2& (0+255),f,b
 14453  00432A  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14454  00432C  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14455  00432E  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14456  004330  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14457                           
 14458                           ; BSR set to: 0
 14459  004332  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14460  004334  D00E               	goto	l1964
 14461                           
 14462                           ; BSR set to: 0
 14463  004336  0EFF               	movlw	255
 14464  004338  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14465  00433A  0EFF               	movlw	255
 14466  00433C  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14467  00433E  0EFF               	movlw	255
 14468  004340  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14469  004342  0E01               	movlw	1
 14470  004344  277E               	addwf	___ftadd@f2& (0+255),f,b
 14471  004346  0E00               	movlw	0
 14472  004348  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14473  00434A  0E00               	movlw	0
 14474  00434C  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14475                           
 14476                           ; BSR set to: 0
 14477  00434E  0E01               	movlw	1
 14478  004350  6F84               	movwf	___ftadd@sign& (0+255),b
 14479  004352                     l1964:
 14480                           
 14481                           ; BSR set to: 0
 14482                           
 14483                           ; BSR set to: 0
 14484  004352  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14485  004356  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14486  00435A  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14487  00435E  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14488  004362  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14489  004366  ECAD  F026         	call	___ftpack	;wreg free
 14490  00436A  C060  F07B         	movff	?___ftpack,?___ftadd
 14491  00436E  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14492  004372  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14493  004376  0012               	return	
 14494  004378                     __end_of___ftadd:
 14495                           	opt stack 0
 14496                           tblptru	equ	0xFF8
 14497                           tblptrh	equ	0xFF7
 14498                           tblptrl	equ	0xFF6
 14499                           tablat	equ	0xFF5
 14500                           prodh	equ	0xFF4
 14501                           prodl	equ	0xFF3
 14502                           intcon	equ	0xFF2
 14503                           intcon2	equ	0xFF1
 14504                           intcon3	equ	0xFF0
 14505                           postinc0	equ	0xFEE
 14506                           wreg	equ	0xFE8
 14507                           postdec1	equ	0xFE5
 14508                           fsr1l	equ	0xFE1
 14509                           indf2	equ	0xFDF
 14510                           postinc2	equ	0xFDE
 14511                           postdec2	equ	0xFDD
 14512                           fsr2h	equ	0xFDA
 14513                           fsr2l	equ	0xFD9
 14514                           status	equ	0xFD8
 14515                           
 14516 ;; *************** function ___ftpack *****************
 14517 ;; Defined at:
 14518 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14519 ;; Parameters:    Size  Location     Type
 14520 ;;  arg             3    0[BANK0 ] unsigned um
 14521 ;;  exp             1    3[BANK0 ] unsigned char 
 14522 ;;  sign            1    4[BANK0 ] unsigned char 
 14523 ;; Auto vars:     Size  Location     Type
 14524 ;;		None
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  3    0[BANK0 ] float 
 14527 ;; Registers used:
 14528 ;;		wreg, status,2, status,0
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14534 ;;      Params:         0       5       0       0       0       0       0       0       0
 14535 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14536 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14537 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14538 ;;Total ram usage:        8 bytes
 14539 ;; Hardware stack levels used:    1
 14540 ;; Hardware stack levels required when called:    6
 14541 ;; This function calls:
 14542 ;;		Nothing
 14543 ;; This function is called by:
 14544 ;;		___ftadd
 14545 ;;		___ftdiv
 14546 ;;		___ftmul
 14547 ;;		___lwtoft
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text16
 14552  004D5A                     __ptext16:
 14553                           	opt stack 0
 14554  004D5A                     ___ftpack:
 14555                           	opt stack 22
 14556                           
 14557                           ;incstack = 0
 14558  004D5A  0100               	movlb	0	; () banked
 14559  004D5C  5163               	movf	___ftpack@exp& (0+255),w,b
 14560  004D5E  B4D8               	btfsc	status,2,c
 14561  004D60  D005               	goto	u8420
 14562                           
 14563                           ; BSR set to: 0
 14564  004D62  5160               	movf	___ftpack@arg& (0+255),w,b
 14565  004D64  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14566  004D66  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14567  004D68  A4D8               	btfss	status,2,c
 14568  004D6A  D00C               	goto	l1905
 14569  004D6C                     u8420:
 14570                           
 14571                           ; BSR set to: 0
 14572                           
 14573                           ; BSR set to: 0
 14574  004D6C  0E00               	movlw	0
 14575  004D6E  6F60               	movwf	?___ftpack& (0+255),b
 14576  004D70  0E00               	movlw	0
 14577  004D72  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14578  004D74  0E00               	movlw	0
 14579  004D76  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14580                           
 14581                           ; BSR set to: 0
 14582  004D78  0012               	return	
 14583  004D7A                     
 14584                           ; BSR set to: 0
 14585                           
 14586                           ; BSR set to: 0
 14587  004D7A  2B63               	incf	___ftpack@exp& (0+255),f,b
 14588  004D7C  90D8               	bcf	status,0,c
 14589  004D7E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14590  004D80  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14591  004D82  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14592  004D84                     l1905:
 14593                           
 14594                           ; BSR set to: 0
 14595                           
 14596                           ; BSR set to: 0
 14597  004D84  0E00               	movlw	0
 14598  004D86  1560               	andwf	___ftpack@arg& (0+255),w,b
 14599  004D88  6F65               	movwf	??___ftpack& (0+255),b
 14600  004D8A  0E00               	movlw	0
 14601  004D8C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14602  004D8E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14603  004D90  0EFE               	movlw	254
 14604  004D92  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14605  004D94  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14606  004D96  5165               	movf	??___ftpack& (0+255),w,b
 14607  004D98  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14608  004D9A  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14609  004D9C  B4D8               	btfsc	status,2,c
 14610  004D9E  D00C               	goto	l1908
 14611  004DA0  D7EC               	goto	l1906
 14612  004DA2                     
 14613                           ; BSR set to: 0
 14614                           
 14615                           ; BSR set to: 0
 14616  004DA2  2B63               	incf	___ftpack@exp& (0+255),f,b
 14617                           
 14618                           ; BSR set to: 0
 14619  004DA4  0E01               	movlw	1
 14620  004DA6  2760               	addwf	___ftpack@arg& (0+255),f,b
 14621  004DA8  0E00               	movlw	0
 14622  004DAA  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14623  004DAC  0E00               	movlw	0
 14624  004DAE  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14625  004DB0  90D8               	bcf	status,0,c
 14626  004DB2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14627  004DB4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14628  004DB6  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14629  004DB8                     l1908:
 14630                           
 14631                           ; BSR set to: 0
 14632                           
 14633                           ; BSR set to: 0
 14634  004DB8  0E00               	movlw	0
 14635  004DBA  1560               	andwf	___ftpack@arg& (0+255),w,b
 14636  004DBC  6F65               	movwf	??___ftpack& (0+255),b
 14637  004DBE  0E00               	movlw	0
 14638  004DC0  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14639  004DC2  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14640  004DC4  0EFF               	movlw	255
 14641  004DC6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14642  004DC8  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14643  004DCA  5165               	movf	??___ftpack& (0+255),w,b
 14644  004DCC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14645  004DCE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14646  004DD0  B4D8               	btfsc	status,2,c
 14647  004DD2  D006               	goto	l1911
 14648  004DD4  D7E6               	goto	l1909
 14649  004DD6                     
 14650                           ; BSR set to: 0
 14651                           
 14652                           ; BSR set to: 0
 14653  004DD6  0763               	decf	___ftpack@exp& (0+255),f,b
 14654  004DD8  90D8               	bcf	status,0,c
 14655  004DDA  3760               	rlcf	___ftpack@arg& (0+255),f,b
 14656  004DDC  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14657  004DDE  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14658  004DE0                     l1911:
 14659                           
 14660                           ; BSR set to: 0
 14661                           
 14662                           ; BSR set to: 0
 14663  004DE0  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14664  004DE2  D003               	goto	u8460
 14665                           
 14666                           ; BSR set to: 0
 14667  004DE4  0E02               	movlw	2
 14668  004DE6  6163               	cpfslt	___ftpack@exp& (0+255),b
 14669  004DE8  D7F6               	goto	l1912
 14670  004DEA                     u8460:
 14671                           
 14672                           ; BSR set to: 0
 14673                           
 14674                           ; BSR set to: 0
 14675  004DEA  A163               	btfss	___ftpack@exp& (0+255),0,b
 14676                           
 14677                           ; BSR set to: 0
 14678  004DEC  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14679                           
 14680                           ; BSR set to: 0
 14681                           
 14682                           ; BSR set to: 0
 14683  004DEE  90D8               	bcf	status,0,c
 14684  004DF0  3363               	rrcf	___ftpack@exp& (0+255),f,b
 14685  004DF2  5163               	movf	___ftpack@exp& (0+255),w,b
 14686  004DF4  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14687                           
 14688                           ; BSR set to: 0
 14689  004DF6  5164               	movf	___ftpack@sign& (0+255),w,b
 14690  004DF8  A4D8               	btfss	status,2,c
 14691                           
 14692                           ; BSR set to: 0
 14693  004DFA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14694                           
 14695                           ; BSR set to: 0
 14696                           
 14697                           ; BSR set to: 0
 14698  004DFC  C060  F060         	movff	___ftpack@arg,?___ftpack
 14699  004E00  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 14700  004E04  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 14701  004E08  0012               	return	
 14702  004E0A                     __end_of___ftpack:
 14703                           	opt stack 0
 14704                           tblptru	equ	0xFF8
 14705                           tblptrh	equ	0xFF7
 14706                           tblptrl	equ	0xFF6
 14707                           tablat	equ	0xFF5
 14708                           prodh	equ	0xFF4
 14709                           prodl	equ	0xFF3
 14710                           intcon	equ	0xFF2
 14711                           intcon2	equ	0xFF1
 14712                           intcon3	equ	0xFF0
 14713                           postinc0	equ	0xFEE
 14714                           wreg	equ	0xFE8
 14715                           postdec1	equ	0xFE5
 14716                           fsr1l	equ	0xFE1
 14717                           indf2	equ	0xFDF
 14718                           postinc2	equ	0xFDE
 14719                           postdec2	equ	0xFDD
 14720                           fsr2h	equ	0xFDA
 14721                           fsr2l	equ	0xFD9
 14722                           status	equ	0xFD8
 14723                           
 14724 ;; *************** function _faseAtual *****************
 14725 ;; Defined at:
 14726 ;;		line 8 in file "src/FuncoesControlador.h"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  tp              1    wreg     unsigned char 
 14729 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 14730 ;;		 -> fase(1), 
 14731 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 14732 ;;		 -> tempajt(1), 
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;  tp              1    5[BANK0 ] unsigned char 
 14735 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 14736 ;;  _fasee          1    4[BANK0 ] unsigned char 
 14737 ;; Return value:  Size  Location     Type
 14738 ;;                  2    0[BANK0 ] PTR unsigned char 
 14739 ;; Registers used:
 14740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14741 ;; Tracked objects:
 14742 ;;		On entry : 0/0
 14743 ;;		On exit  : 0/0
 14744 ;;		Unchanged: 0/0
 14745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14746 ;;      Params:         0       4       0       0       0       0       0       0       0
 14747 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14749 ;;      Totals:         0       7       0       0       0       0       0       0       0
 14750 ;;Total ram usage:        7 bytes
 14751 ;; Hardware stack levels used:    1
 14752 ;; Hardware stack levels required when called:    6
 14753 ;; This function calls:
 14754 ;;		Nothing
 14755 ;; This function is called by:
 14756 ;;		_main
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text17
 14761  004378                     __ptext17:
 14762                           	opt stack 0
 14763  004378                     _faseAtual:
 14764                           	opt stack 24
 14765                           
 14766                           ; BSR set to: 0
 14767                           ;incstack = 0
 14768                           ;faseAtual@tp stored from wreg
 14769  004378  0100               	movlb	0	; () banked
 14770  00437A  6F65               	movwf	faseAtual@tp& (0+255),b
 14771                           
 14772                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 14773  00437C  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14774  004380  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14775  004384  50DF               	movf	indf2,w,c
 14776  004386  0100               	movlb	0	; () banked
 14777  004388  6F64               	movwf	faseAtual@_fasee& (0+255),b
 14778                           
 14779                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 14780  00438A  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 14781  00438E  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 14782  004392  50DF               	movf	indf2,w,c
 14783  004394  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;FuncoesControlador.h: 11: if (tp == '?') {
 14787  004396  0E3F               	movlw	63
 14788  004398  1965               	xorwf	faseAtual@tp& (0+255),w,b
 14789  00439A  B4D8               	btfsc	status,2,c
 14790  00439C  D01A               	goto	l873
 14791  00439E  D027               	goto	l872
 14792  0043A0                     
 14793                           ; BSR set to: 0
 14794                           
 14795                           ; BSR set to: 0
 14796  0043A0  0ED8               	movlw	low STR_1
 14797  0043A2  6F60               	movwf	?_faseAtual& (0+255),b
 14798  0043A4  0E7E               	movlw	high STR_1
 14799  0043A6  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14800                           
 14801                           ; BSR set to: 0
 14802  0043A8  0012               	return	
 14803  0043AA                     
 14804                           ; BSR set to: 0
 14805                           
 14806                           ; BSR set to: 0
 14807  0043AA  0EB6               	movlw	low STR_2
 14808  0043AC  6F60               	movwf	?_faseAtual& (0+255),b
 14809  0043AE  0E7E               	movlw	high STR_2
 14810  0043B0  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14811                           
 14812                           ; BSR set to: 0
 14813  0043B2  0012               	return	
 14814  0043B4                     
 14815                           ; BSR set to: 0
 14816                           
 14817                           ; BSR set to: 0
 14818  0043B4  0ECD               	movlw	low STR_3
 14819  0043B6  6F60               	movwf	?_faseAtual& (0+255),b
 14820  0043B8  0E7E               	movlw	high STR_3
 14821  0043BA  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14822                           
 14823                           ; BSR set to: 0
 14824  0043BC  0012               	return	
 14825  0043BE                     
 14826                           ; BSR set to: 0
 14827                           
 14828                           ; BSR set to: 0
 14829  0043BE  0E0E               	movlw	low STR_4
 14830  0043C0  6F60               	movwf	?_faseAtual& (0+255),b
 14831  0043C2  0E7F               	movlw	high STR_4
 14832  0043C4  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14833                           
 14834                           ; BSR set to: 0
 14835  0043C6  0012               	return	
 14836  0043C8                     
 14837                           ; BSR set to: 0
 14838                           
 14839                           ; BSR set to: 0
 14840  0043C8  0ED5               	movlw	low STR_5
 14841  0043CA  6F60               	movwf	?_faseAtual& (0+255),b
 14842  0043CC  0E7F               	movlw	high STR_5
 14843  0043CE  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;FuncoesControlador.h: 18: }
 14847                           
 14848                           ; BSR set to: 0
 14849  0043D0  0012               	return	
 14850  0043D2                     l873:
 14851                           
 14852                           ; BSR set to: 0
 14853                           
 14854                           ; BSR set to: 0
 14855  0043D2  5164               	movf	faseAtual@_fasee& (0+255),w,b
 14856                           
 14857                           ; Switch size 1, requested type "space"
 14858                           ; Number of cases is 4, Range of values is 1 to 4
 14859                           ; switch strategies available:
 14860                           ; Name         Instructions Cycles
 14861                           ; simple_byte           13     7 (average)
 14862                           ;	Chosen strategy is simple_byte
 14863  0043D4  0A01               	xorlw	1	; case 1
 14864  0043D6  B4D8               	btfsc	status,2,c
 14865  0043D8  D7E3               	goto	l874
 14866  0043DA  0A03               	xorlw	3	; case 2
 14867  0043DC  B4D8               	btfsc	status,2,c
 14868  0043DE  D7E5               	goto	l876
 14869  0043E0  0A01               	xorlw	1	; case 3
 14870  0043E2  B4D8               	btfsc	status,2,c
 14871  0043E4  D7E7               	goto	l877
 14872  0043E6  0A07               	xorlw	7	; case 4
 14873  0043E8  B4D8               	btfsc	status,2,c
 14874  0043EA  D7E9               	goto	l878
 14875  0043EC  D7ED               	goto	l879
 14876  0043EE                     l872:
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 14880                           
 14881                           ; BSR set to: 0
 14882  0043EE  0E46               	movlw	70
 14883  0043F0  1965               	xorwf	faseAtual@tp& (0+255),w,b
 14884  0043F2  A4D8               	btfss	status,2,c
 14885  0043F4  D031               	goto	l882
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 14889  0043F6  0E65               	movlw	101
 14890  0043F8  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 14891  0043FA  D007               	goto	l883
 14892                           
 14893                           ; BSR set to: 0
 14894  0043FC  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14895  004400  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14896  004404  0E01               	movlw	1
 14897  004406  6EDF               	movwf	indf2,c
 14898  004408  0012               	return	
 14899  00440A                     l883:
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 14903                           
 14904                           ; BSR set to: 0
 14905  00440A  0E64               	movlw	100
 14906  00440C  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 14907  00440E  D00A               	goto	l885
 14908                           
 14909                           ; BSR set to: 0
 14910  004410  0E6F               	movlw	111
 14911  004412  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 14912  004414  D007               	goto	l885
 14913                           
 14914                           ; BSR set to: 0
 14915  004416  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14916  00441A  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14917  00441E  0E02               	movlw	2
 14918  004420  6EDF               	movwf	indf2,c
 14919  004422  0012               	return	
 14920  004424                     l885:
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 14924                           
 14925                           ; BSR set to: 0
 14926  004424  0E6E               	movlw	110
 14927  004426  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 14928  004428  D00A               	goto	l887
 14929                           
 14930                           ; BSR set to: 0
 14931  00442A  0E86               	movlw	134
 14932  00442C  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 14933  00442E  D007               	goto	l887
 14934                           
 14935                           ; BSR set to: 0
 14936  004430  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14937  004434  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14938  004438  0E03               	movlw	3
 14939  00443A  6EDF               	movwf	indf2,c
 14940  00443C  0012               	return	
 14941  00443E                     l887:
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 14945                           
 14946                           ; BSR set to: 0
 14947  00443E  0E85               	movlw	133
 14948  004440  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 14949  004442  0012               	return	
 14950                           
 14951                           ; BSR set to: 0
 14952  004444  0EA1               	movlw	161
 14953  004446  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 14954  004448  0012               	return	
 14955                           
 14956                           ; BSR set to: 0
 14957  00444A  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14958  00444E  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14959  004452  0E04               	movlw	4
 14960  004454  6EDF               	movwf	indf2,c
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;FuncoesControlador.h: 25: } else
 14964                           
 14965                           ; BSR set to: 0
 14966                           
 14967                           ; BSR set to: 0
 14968                           
 14969                           ; BSR set to: 0
 14970  004456  0012               	return	
 14971  004458                     l882:
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 14975                           
 14976                           ; BSR set to: 0
 14977  004458  0E41               	movlw	65
 14978  00445A  1965               	xorwf	faseAtual@tp& (0+255),w,b
 14979  00445C  A4D8               	btfss	status,2,c
 14980  00445E  0012               	return	
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 14984  004460  05F6               	decf	_fase& (0+255),w,b
 14985  004462  A4D8               	btfss	status,2,c
 14986  004464  D007               	goto	l892
 14987                           
 14988                           ; BSR set to: 0
 14989  004466  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 14990  00446A  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 14991  00446E  0E55               	movlw	85
 14992  004470  6EDF               	movwf	indf2,c
 14993  004472  0012               	return	
 14994  004474                     l892:
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 14998                           
 14999                           ; BSR set to: 0
 15000  004474  0E02               	movlw	2
 15001  004476  19F6               	xorwf	_fase& (0+255),w,b
 15002  004478  A4D8               	btfss	status,2,c
 15003  00447A  D007               	goto	l894
 15004                           
 15005                           ; BSR set to: 0
 15006  00447C  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15007  004480  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15008  004484  0E65               	movlw	101
 15009  004486  6EDF               	movwf	indf2,c
 15010  004488  0012               	return	
 15011  00448A                     l894:
 15012                           
 15013                           ; BSR set to: 0
 15014                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15015                           
 15016                           ; BSR set to: 0
 15017  00448A  0E03               	movlw	3
 15018  00448C  19F6               	xorwf	_fase& (0+255),w,b
 15019  00448E  A4D8               	btfss	status,2,c
 15020  004490  D007               	goto	l896
 15021                           
 15022                           ; BSR set to: 0
 15023  004492  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15024  004496  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15025  00449A  0E6F               	movlw	111
 15026  00449C  6EDF               	movwf	indf2,c
 15027  00449E  0012               	return	
 15028  0044A0                     l896:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15032                           
 15033                           ; BSR set to: 0
 15034  0044A0  0E04               	movlw	4
 15035  0044A2  19F6               	xorwf	_fase& (0+255),w,b
 15036  0044A4  A4D8               	btfss	status,2,c
 15037  0044A6  0012               	return	
 15038                           
 15039                           ; BSR set to: 0
 15040  0044A8  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15041  0044AC  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15042  0044B0  0E86               	movlw	134
 15043  0044B2  6EDF               	movwf	indf2,c
 15044                           
 15045                           ; BSR set to: 0
 15046                           
 15047                           ; BSR set to: 0
 15048                           
 15049                           ; BSR set to: 0
 15050                           
 15051                           ; BSR set to: 0
 15052                           
 15053                           ; BSR set to: 0
 15054                           
 15055                           ; BSR set to: 0
 15056  0044B4  0012               	return	
 15057  0044B6                     __end_of_faseAtual:
 15058                           	opt stack 0
 15059                           tblptru	equ	0xFF8
 15060                           tblptrh	equ	0xFF7
 15061                           tblptrl	equ	0xFF6
 15062                           tablat	equ	0xFF5
 15063                           prodh	equ	0xFF4
 15064                           prodl	equ	0xFF3
 15065                           intcon	equ	0xFF2
 15066                           intcon2	equ	0xFF1
 15067                           intcon3	equ	0xFF0
 15068                           postinc0	equ	0xFEE
 15069                           wreg	equ	0xFE8
 15070                           postdec1	equ	0xFE5
 15071                           fsr1l	equ	0xFE1
 15072                           indf2	equ	0xFDF
 15073                           postinc2	equ	0xFDE
 15074                           postdec2	equ	0xFDD
 15075                           fsr2h	equ	0xFDA
 15076                           fsr2l	equ	0xFD9
 15077                           status	equ	0xFD8
 15078                           
 15079 ;; *************** function _enviaDadosWifi *****************
 15080 ;; Defined at:
 15081 ;;		line 156 in file "src/conexaoWifi.h"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15086 ;;  i               1  118[BANK0 ] unsigned char 
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      void 
 15089 ;; Registers used:
 15090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15096 ;;      Params:         0       0       0       0       0       0       0       0       0
 15097 ;;      Locals:         0      18       0       0       0       0       0       0       0
 15098 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15099 ;;      Totals:         0      20       0       0       0       0       0       0       0
 15100 ;;Total ram usage:       20 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:   10
 15103 ;; This function calls:
 15104 ;;		___wmul
 15105 ;;		_delay
 15106 ;;		_findBufferSerial
 15107 ;;		_getMacAdress
 15108 ;;		_printf
 15109 ;;		_setKeyStartReceiveSerial
 15110 ;;		_sprintf
 15111 ;;		_strlen
 15112 ;; This function is called by:
 15113 ;;		_main
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           	psect	text18
 15118  003086                     __ptext18:
 15119                           	opt stack 0
 15120  003086                     _enviaDadosWifi:
 15121                           	opt stack 20
 15122                           
 15123                           ;conexaoWifi.h: 157: if (t_wifi_restart == 0) {
 15124                           
 15125                           ; BSR set to: 0
 15126                           ;incstack = 0
 15127  003086  503E               	movf	_t_wifi_restart,w,c
 15128  003088  A4D8               	btfss	status,2,c
 15129  00308A  D005               	goto	l1018
 15130                           
 15131                           ;conexaoWifi.h: 158: f_wifi_processo = 0;
 15132  00308C  0E00               	movlw	0
 15133  00308E  6E3D               	movwf	_f_wifi_processo,c
 15134                           
 15135                           ;conexaoWifi.h: 159: t_wifi_restart = 10;
 15136  003090  0E0A               	movlw	10
 15137  003092  6E3E               	movwf	_t_wifi_restart,c
 15138                           
 15139                           ;conexaoWifi.h: 160: } else if (strlen(wifi_MAC) == 12) {
 15140  003094  0012               	return	
 15141  003096                     l1018:
 15142  003096  0EE2               	movlw	low _wifi_MAC
 15143  003098  0100               	movlb	0	; () banked
 15144  00309A  6F60               	movwf	strlen@s& (0+255),b
 15145  00309C  0E01               	movlw	high _wifi_MAC
 15146  00309E  6F61               	movwf	(strlen@s+1)& (0+255),b
 15147  0030A0  EC84  F02A         	call	_strlen	;wreg free
 15148  0030A4  0E0C               	movlw	12
 15149  0030A6  0100               	movlb	0	; () banked
 15150  0030A8  1960               	xorwf	?_strlen& (0+255),w,b
 15151  0030AA  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15152  0030AC  B4D8               	btfsc	status,2,c
 15153  0030AE  D1B8               	goto	l1021
 15154  0030B0  D212               	goto	l1059
 15155  0030B2                     
 15156                           ;conexaoWifi.h: 163: setKeyStartReceiveSerial("ALL");
 15157                           
 15158                           ; BSR set to: 0
 15159  0030B2  0EDD               	movlw	low STR_10
 15160  0030B4  0100               	movlb	0	; () banked
 15161  0030B6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15162  0030B8  0E7F               	movlw	high STR_10
 15163  0030BA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15164  0030BC  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15165                           
 15166                           ;conexaoWifi.h: 164: printf("AT+CWMODE=1\r\n");
 15167  0030C0  0E4A               	movlw	low STR_47
 15168  0030C2  0100               	movlb	0	; () banked
 15169  0030C4  6F81               	movwf	printf@f& (0+255),b
 15170  0030C6  0E7E               	movlw	high STR_47
 15171  0030C8  6F82               	movwf	(printf@f+1)& (0+255),b
 15172  0030CA  ECD3  F02B         	call	_printf	;wreg free
 15173                           
 15174                           ;conexaoWifi.h: 165: wifi_conectado = 0;
 15175  0030CE  0E00               	movlw	0
 15176  0030D0  6E49               	movwf	_wifi_conectado,c
 15177                           
 15178                           ;conexaoWifi.h: 166: f_wifi_processo++;
 15179  0030D2  2A3D               	incf	_f_wifi_processo,f,c
 15180                           
 15181                           ;conexaoWifi.h: 167: break;
 15182  0030D4  0012               	return	
 15183  0030D6                     
 15184                           ;conexaoWifi.h: 169: if (findBufferSerial("OK")) {
 15185  0030D6  0EF1               	movlw	low STR_12
 15186  0030D8  0100               	movlb	0	; () banked
 15187  0030DA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15188  0030DC  0E7F               	movlw	high STR_12
 15189  0030DE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15190  0030E0  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15191  0030E4  0900               	iorlw	0
 15192  0030E6  B4D8               	btfsc	status,2,c
 15193  0030E8  0012               	return	
 15194                           
 15195                           ;conexaoWifi.h: 170: f_wifi_processo++;
 15196  0030EA  2A3D               	incf	_f_wifi_processo,f,c
 15197                           
 15198                           ;conexaoWifi.h: 171: }
 15199                           ;conexaoWifi.h: 172: break;
 15200  0030EC  0012               	return	
 15201  0030EE                     
 15202                           ;conexaoWifi.h: 174: setKeyStartReceiveSerial("ALL");
 15203  0030EE  0EDD               	movlw	low STR_10
 15204  0030F0  0100               	movlb	0	; () banked
 15205  0030F2  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15206  0030F4  0E7F               	movlw	high STR_10
 15207  0030F6  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15208  0030F8  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15209                           
 15210                           ;conexaoWifi.h: 175: printf("AT+CIPMUX=0\r\n");
 15211  0030FC  0E3C               	movlw	low STR_50
 15212  0030FE  0100               	movlb	0	; () banked
 15213  003100  6F81               	movwf	printf@f& (0+255),b
 15214  003102  0E7E               	movlw	high STR_50
 15215  003104  6F82               	movwf	(printf@f+1)& (0+255),b
 15216  003106  ECD3  F02B         	call	_printf	;wreg free
 15217                           
 15218                           ;conexaoWifi.h: 176: f_wifi_processo++;
 15219  00310A  2A3D               	incf	_f_wifi_processo,f,c
 15220                           
 15221                           ;conexaoWifi.h: 177: break;
 15222  00310C  0012               	return	
 15223  00310E                     
 15224                           ;conexaoWifi.h: 179: if (findBufferSerial("OK") || findBufferSerial("link")) {
 15225  00310E  0EF1               	movlw	low STR_12
 15226  003110  0100               	movlb	0	; () banked
 15227  003112  6F74               	movwf	findBufferSerial@key& (0+255),b
 15228  003114  0E7F               	movlw	high STR_12
 15229  003116  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15230  003118  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15231  00311C  0900               	iorlw	0
 15232  00311E  A4D8               	btfss	status,2,c
 15233  003120  D00A               	goto	u12960
 15234  003122  0ECB               	movlw	low STR_52
 15235  003124  0100               	movlb	0	; () banked
 15236  003126  6F74               	movwf	findBufferSerial@key& (0+255),b
 15237  003128  0E7F               	movlw	high STR_52
 15238  00312A  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15239  00312C  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15240  003130  0900               	iorlw	0
 15241  003132  B4D8               	btfsc	status,2,c
 15242  003134  0012               	return	
 15243  003136                     u12960:
 15244                           
 15245                           ;conexaoWifi.h: 180: f_wifi_processo++;
 15246  003136  2A3D               	incf	_f_wifi_processo,f,c
 15247                           
 15248                           ;conexaoWifi.h: 181: }
 15249                           ;conexaoWifi.h: 182: break;
 15250  003138  0012               	return	
 15251  00313A                     
 15252                           ;conexaoWifi.h: 184: setKeyStartReceiveSerial("ALL");
 15253  00313A  0EDD               	movlw	low STR_10
 15254  00313C  0100               	movlb	0	; () banked
 15255  00313E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15256  003140  0E7F               	movlw	high STR_10
 15257  003142  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15258  003144  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15259                           
 15260                           ;conexaoWifi.h: 185: delay(10);
 15261  003148  0E00               	movlw	0
 15262  00314A  0100               	movlb	0	; () banked
 15263  00314C  6F61               	movwf	(delay@x+1)& (0+255),b
 15264  00314E  0E0A               	movlw	10
 15265  003150  6F60               	movwf	delay@x& (0+255),b
 15266  003152  ECB3  F02C         	call	_delay	;wreg free
 15267                           
 15268                           ;conexaoWifi.h: 186: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15269  003156  0EED               	movlw	low STR_54
 15270  003158  0100               	movlb	0	; () banked
 15271  00315A  6F81               	movwf	printf@f& (0+255),b
 15272  00315C  0E7B               	movlw	high STR_54
 15273  00315E  6F82               	movwf	(printf@f+1)& (0+255),b
 15274  003160  0EC9               	movlw	low _ssid
 15275  003162  6F83               	movwf	(?_printf+2)& (0+255),b
 15276  003164  0E01               	movlw	high _ssid
 15277  003166  6F84               	movwf	(?_printf+3)& (0+255),b
 15278  003168  0EBA               	movlw	low _senha
 15279  00316A  6F85               	movwf	(?_printf+4)& (0+255),b
 15280  00316C  0E01               	movlw	high _senha
 15281  00316E  6F86               	movwf	(?_printf+5)& (0+255),b
 15282  003170  ECD3  F02B         	call	_printf	;wreg free
 15283                           
 15284                           ;conexaoWifi.h: 187: f_wifi_processo++;
 15285  003174  2A3D               	incf	_f_wifi_processo,f,c
 15286                           
 15287                           ;conexaoWifi.h: 188: t_wifi_restart = 35;
 15288  003176  0E23               	movlw	35
 15289  003178  6E3E               	movwf	_t_wifi_restart,c
 15290                           
 15291                           ;conexaoWifi.h: 189: break;
 15292  00317A  0012               	return	
 15293  00317C                     
 15294                           ;conexaoWifi.h: 192: f_wifi_processo++;
 15295  00317C  2A3D               	incf	_f_wifi_processo,f,c
 15296                           
 15297                           ;conexaoWifi.h: 194: break;
 15298  00317E  0012               	return	
 15299  003180                     
 15300                           ;conexaoWifi.h: 196: setKeyStartReceiveSerial("ALL");
 15301  003180  0EDD               	movlw	low STR_10
 15302  003182  0100               	movlb	0	; () banked
 15303  003184  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15304  003186  0E7F               	movlw	high STR_10
 15305  003188  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15306  00318A  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15307                           
 15308                           ;conexaoWifi.h: 197: if (t_wifi_restart <= 15) {
 15309  00318E  0E10               	movlw	16
 15310  003190  603E               	cpfslt	_t_wifi_restart,c
 15311  003192  0012               	return	
 15312                           
 15313                           ;conexaoWifi.h: 198: printf("AT+CIPSTATUS\r\n");
 15314  003194  0E0F               	movlw	low STR_56
 15315  003196  0100               	movlb	0	; () banked
 15316  003198  6F81               	movwf	printf@f& (0+255),b
 15317  00319A  0E7E               	movlw	high STR_56
 15318  00319C  6F82               	movwf	(printf@f+1)& (0+255),b
 15319  00319E  ECD3  F02B         	call	_printf	;wreg free
 15320                           
 15321                           ;conexaoWifi.h: 199: f_wifi_processo++;
 15322  0031A2  2A3D               	incf	_f_wifi_processo,f,c
 15323                           
 15324                           ;conexaoWifi.h: 200: }
 15325                           ;conexaoWifi.h: 201: break;
 15326  0031A4  0012               	return	
 15327  0031A6                     
 15328                           ;conexaoWifi.h: 203: if (findBufferSerial("2") || findBufferSerial("4")) {
 15329  0031A6  0EFA               	movlw	low STR_57
 15330  0031A8  0100               	movlb	0	; () banked
 15331  0031AA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15332  0031AC  0E7F               	movlw	high STR_57
 15333  0031AE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15334  0031B0  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15335  0031B4  0900               	iorlw	0
 15336  0031B6  A4D8               	btfss	status,2,c
 15337  0031B8  D00A               	goto	u12990
 15338  0031BA  0EFC               	movlw	low STR_58
 15339  0031BC  0100               	movlb	0	; () banked
 15340  0031BE  6F74               	movwf	findBufferSerial@key& (0+255),b
 15341  0031C0  0E7F               	movlw	high STR_58
 15342  0031C2  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15343  0031C4  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15344  0031C8  0900               	iorlw	0
 15345  0031CA  B4D8               	btfsc	status,2,c
 15346  0031CC  0012               	return	
 15347  0031CE                     u12990:
 15348                           
 15349                           ;conexaoWifi.h: 204: wifi_conectado = 1;
 15350  0031CE  0E01               	movlw	1
 15351  0031D0  6E49               	movwf	_wifi_conectado,c
 15352                           
 15353                           ;conexaoWifi.h: 205: f_wifi_processo++;
 15354  0031D2  2A3D               	incf	_f_wifi_processo,f,c
 15355                           
 15356                           ;conexaoWifi.h: 206: }
 15357                           ;conexaoWifi.h: 207: break;
 15358  0031D4  0012               	return	
 15359  0031D6                     
 15360                           ;conexaoWifi.h: 209: setKeyStartReceiveSerial("ALL");
 15361  0031D6  0EDD               	movlw	low STR_10
 15362  0031D8  0100               	movlb	0	; () banked
 15363  0031DA  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15364  0031DC  0E7F               	movlw	high STR_10
 15365  0031DE  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15366  0031E0  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15367                           
 15368                           ;conexaoWifi.h: 211: printf("AT+CIPSTART=\"TCP\",\"18.228.154.248\",80\r\n");
 15369  0031E4  0E76               	movlw	low STR_60
 15370  0031E6  0100               	movlb	0	; () banked
 15371  0031E8  6F81               	movwf	printf@f& (0+255),b
 15372  0031EA  0E7B               	movlw	high STR_60
 15373  0031EC  6F82               	movwf	(printf@f+1)& (0+255),b
 15374  0031EE  ECD3  F02B         	call	_printf	;wreg free
 15375                           
 15376                           ;conexaoWifi.h: 212: f_wifi_processo++;
 15377  0031F2  2A3D               	incf	_f_wifi_processo,f,c
 15378                           
 15379                           ;conexaoWifi.h: 213: break;
 15380  0031F4  0012               	return	
 15381  0031F6                     
 15382                           ;conexaoWifi.h: 215: if (findBufferSerial("OK") != (0)) {
 15383  0031F6  0EF1               	movlw	low STR_12
 15384  0031F8  0100               	movlb	0	; () banked
 15385  0031FA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15386  0031FC  0E7F               	movlw	high STR_12
 15387  0031FE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15388  003200  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15389  003204  0900               	iorlw	0
 15390  003206  B4D8               	btfsc	status,2,c
 15391  003208  0012               	return	
 15392                           
 15393                           ;conexaoWifi.h: 216: f_wifi_processo++;
 15394  00320A  2A3D               	incf	_f_wifi_processo,f,c
 15395                           
 15396                           ;conexaoWifi.h: 217: }
 15397                           ;conexaoWifi.h: 218: break;
 15398  00320C  0012               	return	
 15399  00320E                     
 15400                           ;conexaoWifi.h: 220: setKeyStartReceiveSerial("ALL");
 15401  00320E  0EDD               	movlw	low STR_10
 15402  003210  0100               	movlb	0	; () banked
 15403  003212  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15404  003214  0E7F               	movlw	high STR_10
 15405  003216  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15406  003218  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15407                           
 15408                           ;conexaoWifi.h: 221: printf("AT+CIPSENDEX=260\r\n");
 15409  00321C  0EE1               	movlw	low STR_63
 15410  00321E  0100               	movlb	0	; () banked
 15411  003220  6F81               	movwf	printf@f& (0+255),b
 15412  003222  0E7C               	movlw	high STR_63
 15413  003224  6F82               	movwf	(printf@f+1)& (0+255),b
 15414  003226  ECD3  F02B         	call	_printf	;wreg free
 15415                           
 15416                           ;conexaoWifi.h: 222: f_wifi_processo++;
 15417  00322A  2A3D               	incf	_f_wifi_processo,f,c
 15418                           
 15419                           ;conexaoWifi.h: 223: break;
 15420  00322C  0012               	return	
 15421  00322E                     
 15422                           ;conexaoWifi.h: 225: if (findBufferSerial(">")) {
 15423  00322E  0E7B               	movlw	low (STR_116+18)
 15424  003230  0100               	movlb	0	; () banked
 15425  003232  6F74               	movwf	findBufferSerial@key& (0+255),b
 15426  003234  0E7C               	movlw	high (STR_116+18)
 15427  003236  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15428  003238  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15429  00323C  0900               	iorlw	0
 15430  00323E  B4D8               	btfsc	status,2,c
 15431  003240  0012               	return	
 15432                           
 15433                           ;conexaoWifi.h: 226: f_wifi_processo++;
 15434  003242  2A3D               	incf	_f_wifi_processo,f,c
 15435                           
 15436                           ;conexaoWifi.h: 227: }
 15437                           ;conexaoWifi.h: 228: break;
 15438  003244  0012               	return	
 15439  003246                     
 15440                           ;conexaoWifi.h: 230: setKeyStartReceiveSerial("200");
 15441  003246  0ED9               	movlw	low STR_65
 15442  003248  0100               	movlb	0	; () banked
 15443  00324A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15444  00324C  0E7F               	movlw	high STR_65
 15445  00324E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15446  003250  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15447                           
 15448                           ;conexaoWifi.h: 231: char i = 0;
 15449  003254  0E00               	movlw	0
 15450  003256  0100               	movlb	0	; () banked
 15451  003258  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;conexaoWifi.h: 232: char AUX[15];
 15455                           ;conexaoWifi.h: 233: sprintf(AUX, "%s", "Jul 14 2020");
 15456  00325A  0EC5               	movlw	low enviaDadosWifi@AUX
 15457  00325C  6F81               	movwf	sprintf@wh& (0+255),b
 15458  00325E  0E00               	movlw	high enviaDadosWifi@AUX
 15459  003260  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15460  003262  0E1F               	movlw	low (STR_91+7)
 15461  003264  6F83               	movwf	sprintf@f& (0+255),b
 15462  003266  0E7F               	movlw	high (STR_91+7)
 15463  003268  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15464  00326A  0E9E               	movlw	low STR_67
 15465  00326C  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15466  00326E  0E7E               	movlw	high STR_67
 15467  003270  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15468  003272  EC4F  F02B         	call	_sprintf	;wreg free
 15469                           
 15470                           ;conexaoWifi.h: 234: for (i = 0; i < strlen(AUX); i++) {
 15471  003276  0E00               	movlw	0
 15472  003278  0100               	movlb	0	; () banked
 15473  00327A  6FD6               	movwf	enviaDadosWifi@i& (0+255),b
 15474  00327C  D017               	goto	l1046
 15475  00327E                     
 15476                           ; BSR set to: 0
 15477                           ;conexaoWifi.h: 235: if (AUX[i] == ' ') AUX[i] = '-';
 15478                           
 15479                           ; BSR set to: 0
 15480  00327E  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 15481  003280  0D01               	mullw	1
 15482  003282  0EC5               	movlw	low enviaDadosWifi@AUX
 15483  003284  24F3               	addwf	prodl,w,c
 15484  003286  6ED9               	movwf	fsr2l,c
 15485  003288  0E00               	movlw	high enviaDadosWifi@AUX
 15486  00328A  20F4               	addwfc	prodh,w,c
 15487  00328C  6EDA               	movwf	fsr2h,c
 15488  00328E  0E20               	movlw	32
 15489  003290  18DE               	xorwf	postinc2,w,c
 15490  003292  A4D8               	btfss	status,2,c
 15491  003294  D00A               	goto	l1048
 15492                           
 15493                           ; BSR set to: 0
 15494  003296  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 15495  003298  0D01               	mullw	1
 15496  00329A  0EC5               	movlw	low enviaDadosWifi@AUX
 15497  00329C  24F3               	addwf	prodl,w,c
 15498  00329E  6ED9               	movwf	fsr2l,c
 15499  0032A0  0E00               	movlw	high enviaDadosWifi@AUX
 15500  0032A2  20F4               	addwfc	prodh,w,c
 15501  0032A4  6EDA               	movwf	fsr2h,c
 15502  0032A6  0E2D               	movlw	45
 15503  0032A8  6EDF               	movwf	indf2,c
 15504  0032AA                     l1048:
 15505                           
 15506                           ; BSR set to: 0
 15507                           
 15508                           ; BSR set to: 0
 15509  0032AA  2BD6               	incf	enviaDadosWifi@i& (0+255),f,b
 15510  0032AC                     l1046:
 15511                           
 15512                           ; BSR set to: 0
 15513                           
 15514                           ; BSR set to: 0
 15515  0032AC  0EC5               	movlw	low enviaDadosWifi@AUX
 15516  0032AE  6F60               	movwf	strlen@s& (0+255),b
 15517  0032B0  0E00               	movlw	high enviaDadosWifi@AUX
 15518  0032B2  6F61               	movwf	(strlen@s+1)& (0+255),b
 15519  0032B4  EC84  F02A         	call	_strlen	;wreg free
 15520  0032B8  0100               	movlb	0	; () banked
 15521  0032BA  51D6               	movf	enviaDadosWifi@i& (0+255),w,b
 15522  0032BC  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15523  0032BE  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 15524  0032C0  5160               	movf	?_strlen& (0+255),w,b
 15525  0032C2  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 15526  0032C4  5161               	movf	(?_strlen+1)& (0+255),w,b
 15527  0032C6  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 15528  0032C8  A0D8               	btfss	status,0,c
 15529  0032CA  D7D9               	goto	l1047
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;conexaoWifi.h: 236: }
 15533                           ;conexaoWifi.h: 238: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15534                           
 15535                           ; BSR set to: 0
 15536  0032CC  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
 15537  0032D0  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 15538  0032D4  0E00               	movlw	0
 15539  0032D6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15540  0032D8  0E27               	movlw	39
 15541  0032DA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15542  0032DC  ECC8  F02C         	call	___wmul	;wreg free
 15543  0032E0  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2517
 15544  0032E4  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2517+1
 15545                           
 15546                           ;conexaoWifi.h: 236: }
 15547                           ;conexaoWifi.h: 238: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15548  0032E8  0EA1               	movlw	low STR_68
 15549  0032EA  0100               	movlb	0	; () banked
 15550  0032EC  6F81               	movwf	printf@f& (0+255),b
 15551  0032EE  0E7A               	movlw	high STR_68
 15552  0032F0  6F82               	movwf	(printf@f+1)& (0+255),b
 15553  0032F2  C0FE  F083         	movff	_temp,?_printf+2
 15554  0032F6  6B84               	clrf	(?_printf+3)& (0+255),b
 15555  0032F8  C0F4  F085         	movff	_tempajt,?_printf+4
 15556  0032FC  6B86               	clrf	(?_printf+5)& (0+255),b
 15557  0032FE  C05D  F087         	movff	_umid,?_printf+6
 15558  003302  6B88               	clrf	(?_printf+7)& (0+255),b
 15559  003304  C0F3  F089         	movff	_umidajt,?_printf+8
 15560  003308  6B8A               	clrf	(?_printf+9)& (0+255),b
 15561  00330A  C05A  F08B         	movff	_fornalha,?_printf+10
 15562  00330E  6B8C               	clrf	(?_printf+11)& (0+255),b
 15563  003310  C0FC  F08D         	movff	_buzzer,?_printf+12
 15564  003314  6B8E               	clrf	(?_printf+13)& (0+255),b
 15565  003316  C059  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 15566  00331A  6B90               	clrf	(?_printf+15)& (0+255),b
 15567  00331C  C0FB  F091         	movff	_trava_fase,?_printf+16
 15568  003320  6B92               	clrf	(?_printf+17)& (0+255),b
 15569  003322  C0F6  F093         	movff	_fase,?_printf+18
 15570  003326  6B94               	clrf	(?_printf+19)& (0+255),b
 15571  003328  C0F5  F095         	movff	_clima,?_printf+20
 15572  00332C  6B96               	clrf	(?_printf+21)& (0+255),b
 15573  00332E  C0FA  F097         	movff	_tipo_sensor_umidade,?_printf+22
 15574  003332  6B98               	clrf	(?_printf+23)& (0+255),b
 15575  003334  0EE2               	movlw	low _wifi_MAC
 15576  003336  6F99               	movwf	(?_printf+24)& (0+255),b
 15577  003338  0E01               	movlw	high _wifi_MAC
 15578  00333A  6F9A               	movwf	(?_printf+25)& (0+255),b
 15579  00333C  C0D4  F09B         	movff	_enviaDadosWifi$2517,?_printf+26
 15580  003340  C0D5  F09C         	movff	_enviaDadosWifi$2517+1,?_printf+27
 15581  003344  0EC5               	movlw	low enviaDadosWifi@AUX
 15582  003346  6F9D               	movwf	(?_printf+28)& (0+255),b
 15583  003348  0E00               	movlw	high enviaDadosWifi@AUX
 15584  00334A  6F9E               	movwf	(?_printf+29)& (0+255),b
 15585  00334C  C05E  F09F         	movff	_f_falta_energia,?_printf+30
 15586  003350  6BA0               	clrf	(?_printf+31)& (0+255),b
 15587  003352  C0FA  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 15588  003356  6BA2               	clrf	(?_printf+33)& (0+255),b
 15589  003358  C052  F0A3         	movff	_h_abafador,?_printf+34
 15590  00335C  6BA4               	clrf	(?_printf+35)& (0+255),b
 15591  00335E  C051  F0A5         	movff	_h_flap,?_printf+36
 15592  003362  6BA6               	clrf	(?_printf+37)& (0+255),b
 15593  003364  C053  F0A7         	movff	_h_venotinha,?_printf+38
 15594  003368  6BA8               	clrf	(?_printf+39)& (0+255),b
 15595  00336A  C0F7  F0A9         	movff	_h_modo_seguranca,?_printf+40
 15596  00336E  6BAA               	clrf	(?_printf+41)& (0+255),b
 15597  003370  C050  F0AB         	movff	_h_buzzer,?_printf+42
 15598  003374  6BAC               	clrf	(?_printf+43)& (0+255),b
 15599  003376  C055  F0AD         	movff	_t_flap_ligado,?_printf+44
 15600  00337A  6BAE               	clrf	(?_printf+45)& (0+255),b
 15601  00337C  C054  F0AF         	movff	_t_flap_intervalo,?_printf+46
 15602  003380  6BB0               	clrf	(?_printf+47)& (0+255),b
 15603  003382  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 15604  003386  6BB2               	clrf	(?_printf+49)& (0+255),b
 15605  003388  C0F9  F0B3         	movff	_t_temp_automatica,?_printf+50
 15606  00338C  6BB4               	clrf	(?_printf+51)& (0+255),b
 15607  00338E  C04E  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 15608  003392  6BB6               	clrf	(?_printf+53)& (0+255),b
 15609  003394  C04B  F0B7         	movff	_wifi_SENHA,?_printf+54
 15610  003398  C04C  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 15611  00339C  C04F  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 15612  0033A0  6BBA               	clrf	(?_printf+57)& (0+255),b
 15613  0033A2  C0F8  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 15614  0033A6  6BBC               	clrf	(?_printf+59)& (0+255),b
 15615  0033A8  ECD3  F02B         	call	_printf	;wreg free
 15616                           
 15617                           ;conexaoWifi.h: 239: f_wifi_processo++;
 15618  0033AC  2A3D               	incf	_f_wifi_processo,f,c
 15619                           
 15620                           ;conexaoWifi.h: 240: break;
 15621  0033AE  0012               	return	
 15622  0033B0                     
 15623                           ;conexaoWifi.h: 242: if (findBufferSerial("save")) {
 15624  0033B0  0EC6               	movlw	low STR_69
 15625  0033B2  0100               	movlb	0	; () banked
 15626  0033B4  6F74               	movwf	findBufferSerial@key& (0+255),b
 15627  0033B6  0E7F               	movlw	high STR_69
 15628  0033B8  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15629  0033BA  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15630  0033BE  0900               	iorlw	0
 15631  0033C0  B4D8               	btfsc	status,2,c
 15632  0033C2  0012               	return	
 15633                           
 15634                           ;conexaoWifi.h: 243: f_wifi_processo++;
 15635  0033C4  2A3D               	incf	_f_wifi_processo,f,c
 15636                           
 15637                           ;conexaoWifi.h: 244: }
 15638                           ;conexaoWifi.h: 245: break;
 15639  0033C6  0012               	return	
 15640  0033C8                     
 15641                           ;conexaoWifi.h: 247: setKeyStartReceiveSerial("ALL");
 15642  0033C8  0EDD               	movlw	low STR_10
 15643  0033CA  0100               	movlb	0	; () banked
 15644  0033CC  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15645  0033CE  0E7F               	movlw	high STR_10
 15646  0033D0  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15647  0033D2  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15648                           
 15649                           ;conexaoWifi.h: 248: printf("AT+CIPCLOSE\r\n");
 15650  0033D6  0E74               	movlw	low STR_71
 15651  0033D8  0100               	movlb	0	; () banked
 15652  0033DA  6F81               	movwf	printf@f& (0+255),b
 15653  0033DC  0E7E               	movlw	high STR_71
 15654  0033DE  6F82               	movwf	(printf@f+1)& (0+255),b
 15655  0033E0  ECD3  F02B         	call	_printf	;wreg free
 15656                           
 15657                           ;conexaoWifi.h: 249: f_wifi_processo++;
 15658  0033E4  2A3D               	incf	_f_wifi_processo,f,c
 15659                           
 15660                           ;conexaoWifi.h: 250: break;
 15661  0033E6  0012               	return	
 15662  0033E8                     
 15663                           ;conexaoWifi.h: 252: if (findBufferSerial("OK") || findBufferSerial("CLOSED")) {
 15664  0033E8  0EF1               	movlw	low STR_12
 15665  0033EA  0100               	movlb	0	; () banked
 15666  0033EC  6F74               	movwf	findBufferSerial@key& (0+255),b
 15667  0033EE  0E7F               	movlw	high STR_12
 15668  0033F0  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15669  0033F2  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15670  0033F6  0900               	iorlw	0
 15671  0033F8  A4D8               	btfss	status,2,c
 15672  0033FA  D00A               	goto	u13060
 15673  0033FC  0E8B               	movlw	low STR_73
 15674  0033FE  0100               	movlb	0	; () banked
 15675  003400  6F74               	movwf	findBufferSerial@key& (0+255),b
 15676  003402  0E7F               	movlw	high STR_73
 15677  003404  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15678  003406  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15679  00340A  0900               	iorlw	0
 15680  00340C  B4D8               	btfsc	status,2,c
 15681  00340E  0012               	return	
 15682  003410                     u13060:
 15683                           
 15684                           ;conexaoWifi.h: 253: f_wifi_processo = 6;
 15685  003410  0E06               	movlw	6
 15686  003412  6E3D               	movwf	_f_wifi_processo,c
 15687                           
 15688                           ;conexaoWifi.h: 254: t_wifi_restart = 25;
 15689  003414  0E19               	movlw	25
 15690  003416  6E3E               	movwf	_t_wifi_restart,c
 15691                           
 15692                           ;conexaoWifi.h: 255: }
 15693                           ;conexaoWifi.h: 256: break;
 15694  003418  0012               	return	
 15695  00341A                     
 15696                           ;conexaoWifi.h: 258: f_wifi_processo = 0;
 15697  00341A  0E00               	movlw	0
 15698  00341C  6E3D               	movwf	_f_wifi_processo,c
 15699                           
 15700                           ;conexaoWifi.h: 259: }
 15701  00341E  0012               	return	
 15702  003420                     l1021:
 15703  003420  503D               	movf	_f_wifi_processo,w,c
 15704                           
 15705                           ; Switch size 1, requested type "space"
 15706                           ; Number of cases is 16, Range of values is 0 to 15
 15707                           ; switch strategies available:
 15708                           ; Name         Instructions Cycles
 15709                           ; simple_byte           49    25 (average)
 15710                           ;	Chosen strategy is simple_byte
 15711  003422  0A00               	xorlw	0	; case 0
 15712  003424  B4D8               	btfsc	status,2,c
 15713  003426  D645               	goto	l1022
 15714  003428  0A01               	xorlw	1	; case 1
 15715  00342A  B4D8               	btfsc	status,2,c
 15716  00342C  D654               	goto	l1024
 15717  00342E  0A03               	xorlw	3	; case 2
 15718  003430  B4D8               	btfsc	status,2,c
 15719  003432  D65D               	goto	l1026
 15720  003434  0A01               	xorlw	1	; case 3
 15721  003436  B4D8               	btfsc	status,2,c
 15722  003438  D66A               	goto	l1027
 15723  00343A  0A07               	xorlw	7	; case 4
 15724  00343C  B4D8               	btfsc	status,2,c
 15725  00343E  D67D               	goto	l1031
 15726  003440  0A01               	xorlw	1	; case 5
 15727  003442  B4D8               	btfsc	status,2,c
 15728  003444  D69B               	goto	l1032
 15729  003446  0A03               	xorlw	3	; case 6
 15730  003448  B4D8               	btfsc	status,2,c
 15731  00344A  D69A               	goto	l1033
 15732  00344C  0A01               	xorlw	1	; case 7
 15733  00344E  B4D8               	btfsc	status,2,c
 15734  003450  D6AA               	goto	l1035
 15735  003452  0A0F               	xorlw	15	; case 8
 15736  003454  B4D8               	btfsc	status,2,c
 15737  003456  D6BF               	goto	l1039
 15738  003458  0A01               	xorlw	1	; case 9
 15739  00345A  B4D8               	btfsc	status,2,c
 15740  00345C  D6CC               	goto	l1040
 15741  00345E  0A03               	xorlw	3	; case 10
 15742  003460  B4D8               	btfsc	status,2,c
 15743  003462  D6D5               	goto	l1042
 15744  003464  0A01               	xorlw	1	; case 11
 15745  003466  B4D8               	btfsc	status,2,c
 15746  003468  D6E2               	goto	l1043
 15747  00346A  0A07               	xorlw	7	; case 12
 15748  00346C  B4D8               	btfsc	status,2,c
 15749  00346E  D6EB               	goto	l1045
 15750  003470  0A01               	xorlw	1	; case 13
 15751  003472  B4D8               	btfsc	status,2,c
 15752  003474  D79D               	goto	l1050
 15753  003476  0A03               	xorlw	3	; case 14
 15754  003478  B4D8               	btfsc	status,2,c
 15755  00347A  D7A6               	goto	l1052
 15756  00347C  0A01               	xorlw	1	; case 15
 15757  00347E  B4D8               	btfsc	status,2,c
 15758  003480  D7B3               	goto	l1053
 15759  003482  D7CB               	goto	l1057
 15760  003484                     
 15761                           ;conexaoWifi.h: 263: setKeyStartReceiveSerial("APM");
 15762  003484  0EE1               	movlw	low STR_74
 15763  003486  0100               	movlb	0	; () banked
 15764  003488  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15765  00348A  0E7F               	movlw	high STR_74
 15766  00348C  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15767  00348E  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15768                           
 15769                           ;conexaoWifi.h: 264: printf("AT+CIFSR\r\n");
 15770  003492  0EC2               	movlw	low STR_75
 15771  003494  0100               	movlb	0	; () banked
 15772  003496  6F81               	movwf	printf@f& (0+255),b
 15773  003498  0E7E               	movlw	high STR_75
 15774  00349A  6F82               	movwf	(printf@f+1)& (0+255),b
 15775  00349C  ECD3  F02B         	call	_printf	;wreg free
 15776                           
 15777                           ;conexaoWifi.h: 265: f_wifi_processo++;
 15778  0034A0  2A3D               	incf	_f_wifi_processo,f,c
 15779                           
 15780                           ;conexaoWifi.h: 266: break;
 15781  0034A2  0012               	return	
 15782  0034A4                     
 15783                           ;conexaoWifi.h: 268: if (findBufferSerial("C,")) {
 15784  0034A4  0EEB               	movlw	low STR_76
 15785  0034A6  0100               	movlb	0	; () banked
 15786  0034A8  6F74               	movwf	findBufferSerial@key& (0+255),b
 15787  0034AA  0E7F               	movlw	high STR_76
 15788  0034AC  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15789  0034AE  ECDC  F02C         	call	_findBufferSerial	;wreg free
 15790  0034B2  0900               	iorlw	0
 15791  0034B4  B4D8               	btfsc	status,2,c
 15792  0034B6  0012               	return	
 15793                           
 15794                           ;conexaoWifi.h: 269: getMacAdress(bufferSerial, wifi_MAC);
 15795  0034B8  0E55               	movlw	low _bufferSerial
 15796  0034BA  0100               	movlb	0	; () banked
 15797  0034BC  6F66               	movwf	getMacAdress@mac& (0+255),b
 15798  0034BE  0E02               	movlw	high _bufferSerial
 15799  0034C0  6F67               	movwf	(getMacAdress@mac+1)& (0+255),b
 15800  0034C2  0EE2               	movlw	low _wifi_MAC
 15801  0034C4  6F68               	movwf	getMacAdress@var& (0+255),b
 15802  0034C6  0E01               	movlw	high _wifi_MAC
 15803  0034C8  6F69               	movwf	(getMacAdress@var+1)& (0+255),b
 15804  0034CA  ECC5  F024         	call	_getMacAdress	;wreg free
 15805                           
 15806                           ;conexaoWifi.h: 270: }
 15807                           ;conexaoWifi.h: 271: break;
 15808  0034CE  0012               	return	
 15809  0034D0                     
 15810                           ;conexaoWifi.h: 273: f_wifi_processo = 0;
 15811  0034D0  0E00               	movlw	0
 15812  0034D2  6E3D               	movwf	_f_wifi_processo,c
 15813                           
 15814                           ;conexaoWifi.h: 275: }
 15815                           
 15816                           ;conexaoWifi.h: 274: break;
 15817  0034D4  0012               	return	
 15818  0034D6                     l1059:
 15819  0034D6  503D               	movf	_f_wifi_processo,w,c
 15820                           
 15821                           ; Switch size 1, requested type "space"
 15822                           ; Number of cases is 2, Range of values is 0 to 1
 15823                           ; switch strategies available:
 15824                           ; Name         Instructions Cycles
 15825                           ; simple_byte            7     4 (average)
 15826                           ;	Chosen strategy is simple_byte
 15827  0034D8  0A00               	xorlw	0	; case 0
 15828  0034DA  B4D8               	btfsc	status,2,c
 15829  0034DC  D7D3               	goto	l1060
 15830  0034DE  0A01               	xorlw	1	; case 1
 15831  0034E0  B4D8               	btfsc	status,2,c
 15832  0034E2  D7E0               	goto	l1062
 15833  0034E4  D7F5               	goto	l1064
 15834  0034E6                     __end_of_enviaDadosWifi:
 15835                           	opt stack 0
 15836                           tblptru	equ	0xFF8
 15837                           tblptrh	equ	0xFF7
 15838                           tblptrl	equ	0xFF6
 15839                           tablat	equ	0xFF5
 15840                           prodh	equ	0xFF4
 15841                           prodl	equ	0xFF3
 15842                           intcon	equ	0xFF2
 15843                           intcon2	equ	0xFF1
 15844                           intcon3	equ	0xFF0
 15845                           postinc0	equ	0xFEE
 15846                           wreg	equ	0xFE8
 15847                           postdec1	equ	0xFE5
 15848                           fsr1l	equ	0xFE1
 15849                           indf2	equ	0xFDF
 15850                           postinc2	equ	0xFDE
 15851                           postdec2	equ	0xFDD
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function _getMacAdress *****************
 15857 ;; Defined at:
 15858 ;;		line 18 in file "src/conexaoWifi.h"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  mac             2    6[BANK0 ] PTR unsigned char 
 15861 ;;		 -> bufferSerial(100), 
 15862 ;;  var             2    8[BANK0 ] PTR unsigned char 
 15863 ;;		 -> wifi_MAC(12), 
 15864 ;; Auto vars:     Size  Location     Type
 15865 ;;  i               1   14[BANK0 ] unsigned char 
 15866 ;;  men             1   13[BANK0 ] unsigned char 
 15867 ;;  j               1   12[BANK0 ] unsigned char 
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  1    wreg      void 
 15870 ;; Registers used:
 15871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15877 ;;      Params:         0       4       0       0       0       0       0       0       0
 15878 ;;      Locals:         0       3       0       0       0       0       0       0       0
 15879 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15880 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15881 ;;Total ram usage:        9 bytes
 15882 ;; Hardware stack levels used:    1
 15883 ;; Hardware stack levels required when called:    7
 15884 ;; This function calls:
 15885 ;;		_strlen
 15886 ;; This function is called by:
 15887 ;;		_enviaDadosWifi
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           	psect	text19
 15892  00498A                     __ptext19:
 15893                           	opt stack 0
 15894  00498A                     _getMacAdress:
 15895                           	opt stack 22
 15896                           
 15897                           ;conexaoWifi.h: 19: unsigned char i = 0;
 15898                           
 15899                           ;incstack = 0
 15900  00498A  0E00               	movlw	0
 15901  00498C  0100               	movlb	0	; () banked
 15902  00498E  6F6E               	movwf	getMacAdress@i& (0+255),b
 15903                           
 15904                           ;conexaoWifi.h: 20: unsigned char j = 0;
 15905  004990  0E00               	movlw	0
 15906  004992  6F6C               	movwf	getMacAdress@j& (0+255),b
 15907                           
 15908                           ;conexaoWifi.h: 21: unsigned char men = 0;
 15909  004994  0E00               	movlw	0
 15910  004996  6F6D               	movwf	getMacAdress@men& (0+255),b
 15911                           
 15912                           ;conexaoWifi.h: 22: for (i = 0; i < strlen(mac); i++) {
 15913  004998  0E00               	movlw	0
 15914  00499A  6F6E               	movwf	getMacAdress@i& (0+255),b
 15915  00499C  D052               	goto	l968
 15916  00499E                     
 15917                           ; BSR set to: 0
 15918                           ;conexaoWifi.h: 23: if (mac[i] == '"' && men == 0) {
 15919                           
 15920                           ; BSR set to: 0
 15921  00499E  516E               	movf	getMacAdress@i& (0+255),w,b
 15922  0049A0  0D01               	mullw	1
 15923  0049A2  50F3               	movf	prodl,w,c
 15924  0049A4  2566               	addwf	getMacAdress@mac& (0+255),w,b
 15925  0049A6  6ED9               	movwf	fsr2l,c
 15926  0049A8  50F4               	movf	prodh,w,c
 15927  0049AA  2167               	addwfc	(getMacAdress@mac+1)& (0+255),w,b
 15928  0049AC  6EDA               	movwf	fsr2h,c
 15929  0049AE  0E22               	movlw	34
 15930  0049B0  18DE               	xorwf	postinc2,w,c
 15931  0049B2  A4D8               	btfss	status,2,c
 15932  0049B4  D006               	goto	l970
 15933                           
 15934                           ; BSR set to: 0
 15935  0049B6  516D               	movf	getMacAdress@men& (0+255),w,b
 15936  0049B8  A4D8               	btfss	status,2,c
 15937  0049BA  D003               	goto	l970
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;conexaoWifi.h: 24: men = 1;
 15941  0049BC  0E01               	movlw	1
 15942  0049BE  6F6D               	movwf	getMacAdress@men& (0+255),b
 15943                           
 15944                           ;conexaoWifi.h: 25: } else if (mac[i] == '"' && men == 1) {
 15945  0049C0  D03F               	goto	l975
 15946  0049C2                     l970:
 15947                           
 15948                           ; BSR set to: 0
 15949                           
 15950                           ; BSR set to: 0
 15951  0049C2  516E               	movf	getMacAdress@i& (0+255),w,b
 15952  0049C4  0D01               	mullw	1
 15953  0049C6  50F3               	movf	prodl,w,c
 15954  0049C8  2566               	addwf	getMacAdress@mac& (0+255),w,b
 15955  0049CA  6ED9               	movwf	fsr2l,c
 15956  0049CC  50F4               	movf	prodh,w,c
 15957  0049CE  2167               	addwfc	(getMacAdress@mac+1)& (0+255),w,b
 15958  0049D0  6EDA               	movwf	fsr2h,c
 15959  0049D2  0E22               	movlw	34
 15960  0049D4  18DE               	xorwf	postinc2,w,c
 15961  0049D6  A4D8               	btfss	status,2,c
 15962  0049D8  D00E               	goto	l972
 15963                           
 15964                           ; BSR set to: 0
 15965  0049DA  056D               	decf	getMacAdress@men& (0+255),w,b
 15966  0049DC  A4D8               	btfss	status,2,c
 15967  0049DE  D00B               	goto	l972
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;conexaoWifi.h: 26: var[j] = '\0';
 15971  0049E0  516C               	movf	getMacAdress@j& (0+255),w,b
 15972  0049E2  0D01               	mullw	1
 15973  0049E4  50F3               	movf	prodl,w,c
 15974  0049E6  2568               	addwf	getMacAdress@var& (0+255),w,b
 15975  0049E8  6ED9               	movwf	fsr2l,c
 15976  0049EA  50F4               	movf	prodh,w,c
 15977  0049EC  2169               	addwfc	(getMacAdress@var+1)& (0+255),w,b
 15978  0049EE  6EDA               	movwf	fsr2h,c
 15979  0049F0  0E00               	movlw	0
 15980  0049F2  6EDF               	movwf	indf2,c
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;conexaoWifi.h: 27: return;
 15984  0049F4  0012               	return	
 15985  0049F6                     l972:
 15986                           
 15987                           ; BSR set to: 0
 15988                           
 15989                           ; BSR set to: 0
 15990  0049F6  516D               	movf	getMacAdress@men& (0+255),w,b
 15991  0049F8  B4D8               	btfsc	status,2,c
 15992  0049FA  D022               	goto	l975
 15993                           
 15994                           ; BSR set to: 0
 15995  0049FC  516E               	movf	getMacAdress@i& (0+255),w,b
 15996  0049FE  0D01               	mullw	1
 15997  004A00  50F3               	movf	prodl,w,c
 15998  004A02  2566               	addwf	getMacAdress@mac& (0+255),w,b
 15999  004A04  6ED9               	movwf	fsr2l,c
 16000  004A06  50F4               	movf	prodh,w,c
 16001  004A08  2167               	addwfc	(getMacAdress@mac+1)& (0+255),w,b
 16002  004A0A  6EDA               	movwf	fsr2h,c
 16003  004A0C  0E3A               	movlw	58
 16004  004A0E  18DE               	xorwf	postinc2,w,c
 16005  004A10  B4D8               	btfsc	status,2,c
 16006  004A12  D016               	goto	l975
 16007                           
 16008                           ; BSR set to: 0
 16009  004A14  0E0C               	movlw	12
 16010  004A16  616C               	cpfslt	getMacAdress@j& (0+255),b
 16011  004A18  D013               	goto	l975
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;conexaoWifi.h: 29: var[j++] = mac[i];
 16015  004A1A  516E               	movf	getMacAdress@i& (0+255),w,b
 16016  004A1C  0D01               	mullw	1
 16017  004A1E  50F3               	movf	prodl,w,c
 16018  004A20  2566               	addwf	getMacAdress@mac& (0+255),w,b
 16019  004A22  6ED9               	movwf	fsr2l,c
 16020  004A24  50F4               	movf	prodh,w,c
 16021  004A26  2167               	addwfc	(getMacAdress@mac+1)& (0+255),w,b
 16022  004A28  6EDA               	movwf	fsr2h,c
 16023  004A2A  516C               	movf	getMacAdress@j& (0+255),w,b
 16024  004A2C  0D01               	mullw	1
 16025  004A2E  50F3               	movf	prodl,w,c
 16026  004A30  2568               	addwf	getMacAdress@var& (0+255),w,b
 16027  004A32  6EE1               	movwf	fsr1l,c
 16028  004A34  50F4               	movf	prodh,w,c
 16029  004A36  2169               	addwfc	(getMacAdress@var+1)& (0+255),w,b
 16030  004A38  6EE2               	movwf	fsr1h,c
 16031  004A3A  CFDF FFE7          	movff	indf2,indf1
 16032                           
 16033                           ; BSR set to: 0
 16034  004A3E  2B6C               	incf	getMacAdress@j& (0+255),f,b
 16035  004A40                     l975:
 16036                           
 16037                           ; BSR set to: 0
 16038                           
 16039                           ; BSR set to: 0
 16040                           
 16041                           ; BSR set to: 0
 16042                           
 16043                           ; BSR set to: 0
 16044  004A40  2B6E               	incf	getMacAdress@i& (0+255),f,b
 16045  004A42                     l968:
 16046                           
 16047                           ; BSR set to: 0
 16048                           
 16049                           ; BSR set to: 0
 16050  004A42  C066  F060         	movff	getMacAdress@mac,strlen@s
 16051  004A46  C067  F061         	movff	getMacAdress@mac+1,strlen@s+1
 16052  004A4A  EC84  F02A         	call	_strlen	;wreg free
 16053  004A4E  0100               	movlb	0	; () banked
 16054  004A50  516E               	movf	getMacAdress@i& (0+255),w,b
 16055  004A52  6F6A               	movwf	??_getMacAdress& (0+255),b
 16056  004A54  6B6B               	clrf	(??_getMacAdress+1)& (0+255),b
 16057  004A56  5160               	movf	?_strlen& (0+255),w,b
 16058  004A58  5D6A               	subwf	??_getMacAdress& (0+255),w,b
 16059  004A5A  5161               	movf	(?_strlen+1)& (0+255),w,b
 16060  004A5C  596B               	subwfb	(??_getMacAdress+1)& (0+255),w,b
 16061  004A5E  B0D8               	btfsc	status,0,c
 16062  004A60  0012               	return	
 16063  004A62  D79D               	goto	l969
 16064  004A64                     __end_of_getMacAdress:
 16065                           	opt stack 0
 16066                           tblptru	equ	0xFF8
 16067                           tblptrh	equ	0xFF7
 16068                           tblptrl	equ	0xFF6
 16069                           tablat	equ	0xFF5
 16070                           prodh	equ	0xFF4
 16071                           prodl	equ	0xFF3
 16072                           intcon	equ	0xFF2
 16073                           intcon2	equ	0xFF1
 16074                           intcon3	equ	0xFF0
 16075                           postinc0	equ	0xFEE
 16076                           wreg	equ	0xFE8
 16077                           indf1	equ	0xFE7
 16078                           postdec1	equ	0xFE5
 16079                           fsr1h	equ	0xFE2
 16080                           fsr1l	equ	0xFE1
 16081                           indf2	equ	0xFDF
 16082                           postinc2	equ	0xFDE
 16083                           postdec2	equ	0xFDD
 16084                           fsr2h	equ	0xFDA
 16085                           fsr2l	equ	0xFD9
 16086                           status	equ	0xFD8
 16087                           
 16088 ;; *************** function _criaCaracteresCGRAM *****************
 16089 ;; Defined at:
 16090 ;;		line 180 in file "src/lcd.h"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16095 ;;  i               1   67[BANK0 ] unsigned char 
 16096 ;;  j               1   66[BANK0 ] unsigned char 
 16097 ;;  k               1   65[BANK0 ] unsigned char 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  1    wreg      void 
 16100 ;; Registers used:
 16101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16107 ;;      Params:         0       0       0       0       0       0       0       0       0
 16108 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16109 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16110 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16111 ;;Total ram usage:       64 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:    8
 16114 ;; This function calls:
 16115 ;;		_Lcd_Cmd
 16116 ;;		_Lcd_Write_Char
 16117 ;; This function is called by:
 16118 ;;		_main
 16119 ;; This function uses a non-reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text20
 16123  004E0A                     __ptext20:
 16124                           	opt stack 0
 16125  004E0A                     _criaCaracteresCGRAM:
 16126                           	opt stack 22
 16127                           
 16128                           ;lcd.h: 187: const char character[7][8] = {
 16129                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16130                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16131                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16132                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16133                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16134                           ;lcd.h: 196: };
 16135                           
 16136                           ; BSR set to: 0
 16137                           ;incstack = 0
 16138  004E0A  0E7F               	movlw	low criaCaracteresCGRAM@F3898
 16139  004E0C  6EF6               	movwf	tblptrl,c
 16140  004E0E                     	if	1	;There is more than 1 active tblptr byte
 16141  004E0E  0E78               	movlw	high criaCaracteresCGRAM@F3898
 16142  004E10  6EF7               	movwf	tblptrh,c
 16143  004E12                     	endif
 16144  004E12                     	if	0	;There are less than 3 active tblptr bytes
 16145  004E12                     	endif
 16146  004E12  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16147  004E16  0E37               	movlw	55
 16148  004E18                     u12440:
 16149  004E18  0009               	tblrd		*+
 16150  004E1A  CFF5 FFDE          	movff	tablat,postinc2
 16151  004E1E  06E8               	decf	wreg,f,c
 16152  004E20  E2FB               	bc	u12440
 16153                           
 16154                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16155  004E22  0E04               	movlw	4
 16156  004E24  EC17  F02D         	call	_Lcd_Cmd
 16157                           
 16158                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16159  004E28  0E00               	movlw	0
 16160  004E2A  EC17  F02D         	call	_Lcd_Cmd
 16161                           
 16162                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16163  004E2E  0E21               	movlw	33
 16164  004E30                     u15367:
 16165  004E30  2EE8               	decfsz	wreg,f,c
 16166  004E32  D7FE               	bra	u15367
 16167  004E34  F000               	nop	
 16168                           
 16169                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16170  004E36  0E00               	movlw	0
 16171  004E38  0100               	movlb	0	; () banked
 16172  004E3A  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16173                           
 16174                           ; BSR set to: 0
 16175  004E3C  0E00               	movlw	0
 16176  004E3E  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16177                           
 16178                           ; BSR set to: 0
 16179  004E40  0E00               	movlw	0
 16180  004E42  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16184  004E44  0E00               	movlw	0
 16185  004E46  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16186  004E48                     l8307:
 16187                           
 16188                           ; BSR set to: 0
 16189  004E48  0E04               	movlw	4
 16190  004E4A  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16191  004E4C  D001               	goto	l271
 16192  004E4E  0012               	return	
 16193  004E50                     l271:
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;lcd.h: 202: if (k == 1) i = 0;
 16197                           
 16198                           ; BSR set to: 0
 16199  004E50  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16200  004E52  A4D8               	btfss	status,2,c
 16201  004E54  D002               	goto	l273
 16202                           
 16203                           ; BSR set to: 0
 16204  004E56  0E00               	movlw	0
 16205  004E58  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16206  004E5A                     l273:
 16207                           
 16208                           ; BSR set to: 0
 16209                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16210  004E5A  0E00               	movlw	0
 16211  004E5C  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16212  004E5E                     l8315:
 16213                           
 16214                           ; BSR set to: 0
 16215  004E5E  0E07               	movlw	7
 16216  004E60  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16217  004E62  D001               	goto	l274
 16218  004E64  D025               	goto	u12490
 16219  004E66                     l274:
 16220                           
 16221                           ; BSR set to: 0
 16222                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16223                           
 16224                           ; BSR set to: 0
 16225  004E66  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16226  004E68  A4D8               	btfss	status,2,c
 16227  004E6A  D005               	goto	l277
 16228                           
 16229                           ; BSR set to: 0
 16230  004E6C  0E00               	movlw	0
 16231  004E6E  6FA0               	movwf	(_criaCaracteresCGRAM$1227+1)& (0+255),b
 16232  004E70  0E00               	movlw	0
 16233  004E72  6F9F               	movwf	_criaCaracteresCGRAM$1227& (0+255),b
 16234  004E74  D017               	goto	l279
 16235  004E76                     l277:
 16236                           
 16237                           ; BSR set to: 0
 16238                           
 16239                           ; BSR set to: 0
 16240  004E76  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16241  004E78  0D08               	mullw	8
 16242  004E7A  0E67               	movlw	low criaCaracteresCGRAM@character
 16243  004E7C  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16244  004E7E  0E00               	movlw	high criaCaracteresCGRAM@character
 16245  004E80  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16246  004E82  50F3               	movf	prodl,w,c
 16247  004E84  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16248  004E86  50F4               	movf	prodh,w,c
 16249  004E88  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16250  004E8A  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16251  004E8C  0D01               	mullw	1
 16252  004E8E  50F3               	movf	prodl,w,c
 16253  004E90  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16254  004E92  6ED9               	movwf	fsr2l,c
 16255  004E94  50F4               	movf	prodh,w,c
 16256  004E96  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16257  004E98  6EDA               	movwf	fsr2h,c
 16258  004E9A  50DF               	movf	indf2,w,c
 16259  004E9C  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16260  004E9E  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16261  004EA0  6F9F               	movwf	_criaCaracteresCGRAM$1227& (0+255),b
 16262  004EA2  6BA0               	clrf	(_criaCaracteresCGRAM$1227+1)& (0+255),b
 16263  004EA4                     l279:
 16264                           
 16265                           ; BSR set to: 0
 16266                           
 16267                           ; BSR set to: 0
 16268  004EA4  519F               	movf	_criaCaracteresCGRAM$1227& (0+255),w,b
 16269  004EA6  ECB4  F02B         	call	_Lcd_Write_Char
 16270  004EAA  0100               	movlb	0	; () banked
 16271  004EAC  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16272  004EAE  D7D7               	goto	l8315
 16273  004EB0                     u12490:
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;lcd.h: 205: }
 16277                           ;lcd.h: 206: k++;
 16278                           
 16279                           ; BSR set to: 0
 16280  004EB0  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16281  004EB2  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16282  004EB4  D7C9               	goto	l8307
 16283  004EB6                     __end_of_criaCaracteresCGRAM:
 16284                           	opt stack 0
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           prodh	equ	0xFF4
 16290                           prodl	equ	0xFF3
 16291                           intcon	equ	0xFF2
 16292                           intcon2	equ	0xFF1
 16293                           intcon3	equ	0xFF0
 16294                           postinc0	equ	0xFEE
 16295                           wreg	equ	0xFE8
 16296                           indf1	equ	0xFE7
 16297                           postdec1	equ	0xFE5
 16298                           fsr1h	equ	0xFE2
 16299                           fsr1l	equ	0xFE1
 16300                           indf2	equ	0xFDF
 16301                           postinc2	equ	0xFDE
 16302                           postdec2	equ	0xFDD
 16303                           fsr2h	equ	0xFDA
 16304                           fsr2l	equ	0xFD9
 16305                           status	equ	0xFD8
 16306                           
 16307 ;; *************** function _controle *****************
 16308 ;; Defined at:
 16309 ;;		line 148 in file "src/controle.h"
 16310 ;; Parameters:    Size  Location     Type
 16311 ;;		None
 16312 ;; Auto vars:     Size  Location     Type
 16313 ;;		None
 16314 ;; Return value:  Size  Location     Type
 16315 ;;                  1    wreg      void 
 16316 ;; Registers used:
 16317 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16318 ;; Tracked objects:
 16319 ;;		On entry : 0/0
 16320 ;;		On exit  : 0/0
 16321 ;;		Unchanged: 0/0
 16322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16323 ;;      Params:         0       0       0       0       0       0       0       0       0
 16324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16325 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16326 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16327 ;;Total ram usage:        7 bytes
 16328 ;; Hardware stack levels used:    1
 16329 ;; Hardware stack levels required when called:    8
 16330 ;; This function calls:
 16331 ;;		_acaoFlap
 16332 ;;		_setLed
 16333 ;; This function is called by:
 16334 ;;		_main
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text21
 16339  003930                     __ptext21:
 16340                           	opt stack 0
 16341  003930                     _controle:
 16342                           	opt stack 22
 16343                           
 16344                           ;controle.h: 150: if (f_falta_energia == 0) {
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;incstack = 0
 16348  003930  505E               	movf	_f_falta_energia,w,c
 16349  003932  A4D8               	btfss	status,2,c
 16350  003934  D02B               	goto	l1153
 16351                           
 16352                           ;controle.h: 151: LATBbits.LATB5 = blinkk;
 16353  003936  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16354  003938  D002               	bra	u13485
 16355  00393A  8A8A               	bsf	3978,5,c	;volatile
 16356  00393C  D001               	bra	u13487
 16357  00393E                     u13485:
 16358  00393E  9A8A               	bcf	3978,5,c	;volatile
 16359  003940                     u13487:
 16360                           
 16361                           ;controle.h: 152: LATEbits.LE0 = 0;
 16362  003940  908D               	bcf	3981,0,c	;volatile
 16363                           
 16364                           ;controle.h: 153: LATDbits.LD0 = 1;
 16365  003942  808C               	bsf	3980,0,c	;volatile
 16366                           
 16367                           ;controle.h: 154: LATDbits.LD1 = 0;
 16368  003944  928C               	bcf	3980,1,c	;volatile
 16369                           
 16370                           ;controle.h: 155: acaoFlap(1, 10, 0);
 16371  003946  0E00               	movlw	0
 16372  003948  0100               	movlb	0	; () banked
 16373  00394A  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16374  00394C  0E0A               	movlw	10
 16375  00394E  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16376  003950  0E00               	movlw	0
 16377  003952  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16378  003954  0E00               	movlw	0
 16379  003956  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16380  003958  0E01               	movlw	1
 16381  00395A  ECDB  F028         	call	_acaoFlap
 16382                           
 16383                           ;controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 16384  00395E  043B               	decf	_f_buzzer_falta_energia,w,c
 16385  003960  A4D8               	btfss	status,2,c
 16386  003962  D008               	goto	l1154
 16387  003964  0100               	movlb	0	; () banked
 16388  003966  51FC               	movf	_buzzer& (0+255),w,b
 16389  003968  A4D8               	btfss	status,2,c
 16390  00396A  D004               	goto	l1154
 16391                           
 16392                           ; BSR set to: 0
 16393                           ;controle.h: 157: buzzer = 1;
 16394  00396C  0E01               	movlw	1
 16395  00396E  6FFC               	movwf	_buzzer& (0+255),b
 16396                           
 16397                           ;controle.h: 158: f_buzzer_falta_energia = 0;
 16398  003970  0E00               	movlw	0
 16399  003972  6E3B               	movwf	_f_buzzer_falta_energia,c
 16400  003974                     l1154:
 16401                           
 16402                           ;controle.h: 159: }
 16403                           ;controle.h: 160: if (buzzer) {
 16404  003974  0100               	movlb	0	; () banked
 16405  003976  51FC               	movf	_buzzer& (0+255),w,b
 16406  003978  B4D8               	btfsc	status,2,c
 16407  00397A  D006               	goto	l1155
 16408                           
 16409                           ; BSR set to: 0
 16410                           ;controle.h: 161: LATCbits.LC1 = blinkk;
 16411  00397C  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16412  00397E  D002               	bra	u13525
 16413  003980  828B               	bsf	3979,1,c	;volatile
 16414  003982  D001               	bra	u13527
 16415  003984                     u13525:
 16416  003984  928B               	bcf	3979,1,c	;volatile
 16417  003986                     u13527:
 16418                           
 16419                           ;controle.h: 162: } else {
 16420  003986  0012               	return	
 16421  003988                     l1155:
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;controle.h: 163: LATCbits.LC1 = 0;
 16425  003988  928B               	bcf	3979,1,c	;volatile
 16426                           
 16427                           ; BSR set to: 0
 16428                           ;controle.h: 164: }
 16429                           ;controle.h: 165: return;
 16430  00398A  0012               	return	
 16431  00398C                     l1153:
 16432                           
 16433                           ;controle.h: 167: f_buzzer_falta_energia = 1;
 16434                           
 16435                           ; BSR set to: 0
 16436  00398C  0E01               	movlw	1
 16437  00398E  6E3B               	movwf	_f_buzzer_falta_energia,c
 16438                           
 16439                           ;controle.h: 168: }
 16440                           ;controle.h: 172: LATBbits.LATB5 = 1;
 16441  003990  8A8A               	bsf	3978,5,c	;volatile
 16442                           
 16443                           ;controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 16444  003992  0100               	movlb	0	; () banked
 16445  003994  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16446  003996  C0FE  F068         	movff	_temp,??_controle
 16447  00399A  6B69               	clrf	(??_controle+1)& (0+255),b
 16448  00399C  2768               	addwf	??_controle& (0+255),f,b
 16449  00399E  0E00               	movlw	0
 16450  0039A0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16451  0039A2  51F4               	movf	_tempajt& (0+255),w,b
 16452  0039A4  6F6A               	movwf	(??_controle+2)& (0+255),b
 16453  0039A6  6B6B               	clrf	(??_controle+3)& (0+255),b
 16454  0039A8  5168               	movf	??_controle& (0+255),w,b
 16455  0039AA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16456  0039AC  516B               	movf	(??_controle+3)& (0+255),w,b
 16457  0039AE  0A80               	xorlw	128
 16458  0039B0  6F6C               	movwf	(??_controle+4)& (0+255),b
 16459  0039B2  5169               	movf	(??_controle+1)& (0+255),w,b
 16460  0039B4  0A80               	xorlw	128
 16461  0039B6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16462  0039B8  B0D8               	btfsc	status,0,c
 16463  0039BA  D01B               	goto	u13540
 16464                           
 16465                           ; BSR set to: 0
 16466  0039BC  51F4               	movf	_tempajt& (0+255),w,b
 16467  0039BE  6F68               	movwf	??_controle& (0+255),b
 16468  0039C0  6B69               	clrf	(??_controle+1)& (0+255),b
 16469  0039C2  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16470  0039C4  6F6A               	movwf	(??_controle+2)& (0+255),b
 16471  0039C6  6B6B               	clrf	(??_controle+3)& (0+255),b
 16472  0039C8  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16473  0039CA  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16474  0039CC  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16475  0039CE  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16476  0039D0  51FE               	movf	_temp& (0+255),w,b
 16477  0039D2  6F6C               	movwf	(??_controle+4)& (0+255),b
 16478  0039D4  6B6D               	clrf	(??_controle+5)& (0+255),b
 16479  0039D6  516A               	movf	(??_controle+2)& (0+255),w,b
 16480  0039D8  276C               	addwf	(??_controle+4)& (0+255),f,b
 16481  0039DA  516B               	movf	(??_controle+3)& (0+255),w,b
 16482  0039DC  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16483  0039DE  5168               	movf	??_controle& (0+255),w,b
 16484  0039E0  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16485  0039E2  516D               	movf	(??_controle+5)& (0+255),w,b
 16486  0039E4  0A80               	xorlw	128
 16487  0039E6  6F6E               	movwf	(??_controle+6)& (0+255),b
 16488  0039E8  5169               	movf	(??_controle+1)& (0+255),w,b
 16489  0039EA  0A80               	xorlw	128
 16490  0039EC  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16491  0039EE  A0D8               	btfss	status,0,c
 16492  0039F0  D025               	goto	l1159
 16493  0039F2                     u13540:
 16494                           
 16495                           ; BSR set to: 0
 16496                           
 16497                           ; BSR set to: 0
 16498  0039F2  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16499  0039F4  B4D8               	btfsc	status,2,c
 16500  0039F6  D022               	goto	l1159
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;controle.h: 175: setLed(8, 1);
 16504  0039F8  0E01               	movlw	1
 16505  0039FA  6F60               	movwf	setLed@acao& (0+255),b
 16506  0039FC  0E08               	movlw	8
 16507  0039FE  EC4D  F02D         	call	_setLed
 16508                           
 16509                           ;controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 16510  003A02  0E00               	movlw	0
 16511  003A04  0100               	movlb	0	; () banked
 16512  003A06  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16513  003A08  0E0A               	movlw	10
 16514  003A0A  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16515  003A0C  0E00               	movlw	0
 16516  003A0E  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16517  003A10  0E00               	movlw	0
 16518  003A12  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16519  003A14  0E00               	movlw	0
 16520  003A16  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16521  003A18  0E01               	movlw	1
 16522  003A1A  ECDB  F028         	call	_acaoFlap
 16523                           
 16524                           ;controle.h: 177: if (t_controle_modo_seguranca == 0) {
 16525  003A1E  0101               	movlb	1	; () banked
 16526  003A20  5160               	movf	_t_controle_modo_seguranca& (0+255),w,b
 16527  003A22  1161               	iorwf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 16528  003A24  A4D8               	btfss	status,2,c
 16529  003A26  D042               	goto	l1166
 16530                           
 16531                           ; BSR set to: 1
 16532                           ;controle.h: 178: t_controle_modo_seguranca = 1800;
 16533  003A28  0E07               	movlw	7
 16534  003A2A  6F61               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 16535  003A2C  0E08               	movlw	8
 16536  003A2E  6F60               	movwf	_t_controle_modo_seguranca& (0+255),b
 16537                           
 16538                           ; BSR set to: 1
 16539                           ;controle.h: 179: md_seguranca = ~md_seguranca;
 16540  003A30  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16541  003A32  D002               	goto	u13570
 16542  003A34  825B               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16543  003A36  D03A               	goto	l1166
 16544  003A38                     u13570:
 16545  003A38  925B               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16546                           
 16547                           ;controle.h: 180: }
 16548                           ;controle.h: 181: } else {
 16549  003A3A  D038               	goto	l1166
 16550  003A3C                     l1159:
 16551                           
 16552                           ;controle.h: 182: setLed(8, 0);
 16553  003A3C  0E00               	movlw	0
 16554  003A3E  0100               	movlb	0	; () banked
 16555  003A40  6F60               	movwf	setLed@acao& (0+255),b
 16556  003A42  0E08               	movlw	8
 16557  003A44  EC4D  F02D         	call	_setLed
 16558                           
 16559                           ;controle.h: 183: if (umid >= (umidajt + h_flap)) {
 16560  003A48  5051               	movf	_h_flap,w,c
 16561  003A4A  C0F3  F068         	movff	_umidajt,??_controle
 16562  003A4E  0100               	movlb	0	; () banked
 16563  003A50  6B69               	clrf	(??_controle+1)& (0+255),b
 16564  003A52  2768               	addwf	??_controle& (0+255),f,b
 16565  003A54  0E00               	movlw	0
 16566  003A56  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16567  003A58  505D               	movf	_umid,w,c
 16568  003A5A  6F6A               	movwf	(??_controle+2)& (0+255),b
 16569  003A5C  6B6B               	clrf	(??_controle+3)& (0+255),b
 16570  003A5E  5168               	movf	??_controle& (0+255),w,b
 16571  003A60  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16572  003A62  516B               	movf	(??_controle+3)& (0+255),w,b
 16573  003A64  0A80               	xorlw	128
 16574  003A66  6F6C               	movwf	(??_controle+4)& (0+255),b
 16575  003A68  5169               	movf	(??_controle+1)& (0+255),w,b
 16576  003A6A  0A80               	xorlw	128
 16577  003A6C  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16578  003A6E  A0D8               	btfss	status,0,c
 16579  003A70  D00D               	goto	l1164
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 16583  003A72  C055  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 16584  003A76  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16585  003A78  5054               	movf	_t_flap_intervalo,w,c
 16586  003A7A  0D0A               	mullw	10
 16587  003A7C  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 16588  003A80  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 16589  003A84  0E01               	movlw	1
 16590  003A86  ECDB  F028         	call	_acaoFlap
 16591                           
 16592                           ;controle.h: 185: } else if (umid <= umidajt) {
 16593  003A8A  D010               	goto	l1166
 16594  003A8C                     l1164:
 16595  003A8C  505D               	movf	_umid,w,c
 16596  003A8E  0100               	movlb	0	; () banked
 16597  003A90  5DF3               	subwf	_umidajt& (0+255),w,b
 16598  003A92  A0D8               	btfss	status,0,c
 16599  003A94  D00B               	goto	l1166
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;controle.h: 186: acaoFlap(0, 200, 600);
 16603  003A96  0E00               	movlw	0
 16604  003A98  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16605  003A9A  0EC8               	movlw	200
 16606  003A9C  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16607  003A9E  0E02               	movlw	2
 16608  003AA0  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16609  003AA2  0E58               	movlw	88
 16610  003AA4  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16611  003AA6  0E00               	movlw	0
 16612  003AA8  ECDB  F028         	call	_acaoFlap
 16613  003AAC                     l1166:
 16614                           
 16615                           ;controle.h: 187: }
 16616                           ;controle.h: 188: }
 16617                           ;controle.h: 189: if (temp > 0) {
 16618  003AAC  0100               	movlb	0	; () banked
 16619  003AAE  51FE               	movf	_temp& (0+255),w,b
 16620  003AB0  B4D8               	btfsc	status,2,c
 16621  003AB2  D03D               	goto	l1167
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 16625  003AB4  5052               	movf	_h_abafador,w,c
 16626  003AB6  C0FE  F068         	movff	_temp,??_controle
 16627  003ABA  6B69               	clrf	(??_controle+1)& (0+255),b
 16628  003ABC  2768               	addwf	??_controle& (0+255),f,b
 16629  003ABE  0E00               	movlw	0
 16630  003AC0  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16631  003AC2  51F4               	movf	_tempajt& (0+255),w,b
 16632  003AC4  6F6A               	movwf	(??_controle+2)& (0+255),b
 16633  003AC6  6B6B               	clrf	(??_controle+3)& (0+255),b
 16634  003AC8  5168               	movf	??_controle& (0+255),w,b
 16635  003ACA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16636  003ACC  516B               	movf	(??_controle+3)& (0+255),w,b
 16637  003ACE  0A80               	xorlw	128
 16638  003AD0  6F6C               	movwf	(??_controle+4)& (0+255),b
 16639  003AD2  5169               	movf	(??_controle+1)& (0+255),w,b
 16640  003AD4  0A80               	xorlw	128
 16641  003AD6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16642  003AD8  A0D8               	btfss	status,0,c
 16643  003ADA  D002               	goto	l1168
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;controle.h: 191: LATEbits.LE0 = 1;
 16647  003ADC  808D               	bsf	3981,0,c	;volatile
 16648  003ADE  D008               	goto	L28
 16649  003AE0                     l1168:
 16650                           
 16651                           ; BSR set to: 0
 16652                           
 16653                           ; BSR set to: 0
 16654  003AE0  51F4               	movf	_tempajt& (0+255),w,b
 16655  003AE2  5DFE               	subwf	_temp& (0+255),w,b
 16656  003AE4  A0D8               	btfss	status,0,c
 16657  003AE6  D003               	goto	l1170
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;controle.h: 194: LATEbits.LE0 = 0;
 16661  003AE8  908D               	bcf	3981,0,c	;volatile
 16662                           
 16663                           ;controle.h: 195: LATDbits.LD0 = 1;
 16664  003AEA  808C               	bsf	3980,0,c	;volatile
 16665                           
 16666                           ;controle.h: 196: } else {
 16667  003AEC  D002               	goto	l1171
 16668  003AEE                     l1170:
 16669                           
 16670                           ; BSR set to: 0
 16671                           ;controle.h: 197: LATEbits.LE0 = 0;
 16672  003AEE  908D               	bcf	3981,0,c	;volatile
 16673  003AF0                     L28:
 16674                           
 16675                           ;controle.h: 198: LATDbits.LD0 = 0;
 16676  003AF0  908C               	bcf	3980,0,c	;volatile
 16677  003AF2                     l1171:
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;controle.h: 199: }
 16681                           ;controle.h: 201: if (fornalha == 1) {
 16682                           
 16683                           ; BSR set to: 0
 16684                           
 16685                           ; BSR set to: 0
 16686  003AF2  045A               	decf	_fornalha,w,c
 16687  003AF4  A4D8               	btfss	status,2,c
 16688  003AF6  D01D               	goto	L29
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 16692  003AF8  5053               	movf	_h_venotinha,w,c
 16693  003AFA  C0FE  F068         	movff	_temp,??_controle
 16694  003AFE  6B69               	clrf	(??_controle+1)& (0+255),b
 16695  003B00  2768               	addwf	??_controle& (0+255),f,b
 16696  003B02  0E00               	movlw	0
 16697  003B04  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16698  003B06  51F4               	movf	_tempajt& (0+255),w,b
 16699  003B08  6F6A               	movwf	(??_controle+2)& (0+255),b
 16700  003B0A  6B6B               	clrf	(??_controle+3)& (0+255),b
 16701  003B0C  5168               	movf	??_controle& (0+255),w,b
 16702  003B0E  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16703  003B10  516B               	movf	(??_controle+3)& (0+255),w,b
 16704  003B12  0A80               	xorlw	128
 16705  003B14  6F6C               	movwf	(??_controle+4)& (0+255),b
 16706  003B16  5169               	movf	(??_controle+1)& (0+255),w,b
 16707  003B18  0A80               	xorlw	128
 16708  003B1A  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16709  003B1C  A0D8               	btfss	status,0,c
 16710  003B1E  D002               	goto	l1173
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;controle.h: 203: LATDbits.LD1 = 1;
 16714  003B20  828C               	bsf	3980,1,c	;volatile
 16715                           
 16716                           ;controle.h: 205: } else if (temp >= tempajt) {
 16717  003B22  D008               	goto	l1177
 16718  003B24                     l1173:
 16719                           
 16720                           ; BSR set to: 0
 16721                           
 16722                           ; BSR set to: 0
 16723  003B24  51F4               	movf	_tempajt& (0+255),w,b
 16724  003B26  5DFE               	subwf	_temp& (0+255),w,b
 16725  003B28  A0D8               	btfss	status,0,c
 16726  003B2A  D004               	goto	l1177
 16727  003B2C  D002               	goto	L29
 16728  003B2E                     l1167:
 16729                           
 16730                           ; BSR set to: 0
 16731                           ;controle.h: 213: LATEbits.LE0 = 0;
 16732  003B2E  908D               	bcf	3981,0,c	;volatile
 16733                           
 16734                           ;controle.h: 214: LATDbits.LD0 = 1;
 16735  003B30  808C               	bsf	3980,0,c	;volatile
 16736  003B32                     L29:
 16737                           
 16738                           ;controle.h: 215: LATDbits.LD1 = 0;
 16739  003B32  928C               	bcf	3980,1,c	;volatile
 16740  003B34                     l1177:
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;controle.h: 216: }
 16744                           ;controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 16745                           
 16746                           ; BSR set to: 0
 16747  003B34  045A               	decf	_fornalha,w,c
 16748  003B36  A4D8               	btfss	status,2,c
 16749  003B38  D008               	goto	l1178
 16750                           
 16751                           ; BSR set to: 0
 16752  003B3A  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16753  003B3C  B4D8               	btfsc	status,2,c
 16754  003B3E  D005               	goto	l1178
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 16758  003B40  C0F8  F162         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 16759  003B44  0101               	movlb	1	; () banked
 16760  003B46  6B63               	clrf	(_t_controle_religar_ventoinha+1)& (0+255),b
 16761                           
 16762                           ;controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 16763  003B48  D00B               	goto	l1180
 16764  003B4A                     l1178:
 16765                           
 16766                           ; BSR set to: 1
 16767  003B4A  0101               	movlb	1	; () banked
 16768  003B4C  5162               	movf	_t_controle_religar_ventoinha& (0+255),w,b
 16769  003B4E  1163               	iorwf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 16770  003B50  A4D8               	btfss	status,2,c
 16771  003B52  D006               	goto	l1180
 16772                           
 16773                           ; BSR set to: 1
 16774  003B54  0100               	movlb	0	; () banked
 16775  003B56  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16776  003B58  B4D8               	btfsc	status,2,c
 16777  003B5A  D002               	goto	l1180
 16778                           
 16779                           ; BSR set to: 0
 16780                           ;controle.h: 222: fornalha = 1;
 16781  003B5C  0E01               	movlw	1
 16782  003B5E  6E5A               	movwf	_fornalha,c
 16783  003B60                     l1180:
 16784                           
 16785                           ;controle.h: 223: }
 16786                           ;controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 16787                           
 16788                           ; BSR set to: 0
 16789                           
 16790                           ; BSR set to: 0
 16791  003B60  0100               	movlb	0	; () banked
 16792  003B62  05FC               	decf	_buzzer& (0+255),w,b
 16793  003B64  A4D8               	btfss	status,2,c
 16794  003B66  D043               	goto	l1185
 16795                           
 16796                           ; BSR set to: 0
 16797  003B68  5039               	movf	_t_controle_buzzer,w,c
 16798  003B6A  A4D8               	btfss	status,2,c
 16799  003B6C  D040               	goto	l1185
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 16803  003B6E  5050               	movf	_h_buzzer,w,c
 16804  003B70  C0FE  F068         	movff	_temp,??_controle
 16805  003B74  6B69               	clrf	(??_controle+1)& (0+255),b
 16806  003B76  2768               	addwf	??_controle& (0+255),f,b
 16807  003B78  0E00               	movlw	0
 16808  003B7A  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16809  003B7C  51F4               	movf	_tempajt& (0+255),w,b
 16810  003B7E  6F6A               	movwf	(??_controle+2)& (0+255),b
 16811  003B80  6B6B               	clrf	(??_controle+3)& (0+255),b
 16812  003B82  5168               	movf	??_controle& (0+255),w,b
 16813  003B84  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16814  003B86  516B               	movf	(??_controle+3)& (0+255),w,b
 16815  003B88  0A80               	xorlw	128
 16816  003B8A  6F6C               	movwf	(??_controle+4)& (0+255),b
 16817  003B8C  5169               	movf	(??_controle+1)& (0+255),w,b
 16818  003B8E  0A80               	xorlw	128
 16819  003B90  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16820  003B92  B0D8               	btfsc	status,0,c
 16821  003B94  D01B               	goto	u13740
 16822                           
 16823                           ; BSR set to: 0
 16824  003B96  51F4               	movf	_tempajt& (0+255),w,b
 16825  003B98  6F68               	movwf	??_controle& (0+255),b
 16826  003B9A  6B69               	clrf	(??_controle+1)& (0+255),b
 16827  003B9C  5050               	movf	_h_buzzer,w,c
 16828  003B9E  6F6A               	movwf	(??_controle+2)& (0+255),b
 16829  003BA0  6B6B               	clrf	(??_controle+3)& (0+255),b
 16830  003BA2  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16831  003BA4  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16832  003BA6  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16833  003BA8  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16834  003BAA  51FE               	movf	_temp& (0+255),w,b
 16835  003BAC  6F6C               	movwf	(??_controle+4)& (0+255),b
 16836  003BAE  6B6D               	clrf	(??_controle+5)& (0+255),b
 16837  003BB0  516A               	movf	(??_controle+2)& (0+255),w,b
 16838  003BB2  276C               	addwf	(??_controle+4)& (0+255),f,b
 16839  003BB4  516B               	movf	(??_controle+3)& (0+255),w,b
 16840  003BB6  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16841  003BB8  5168               	movf	??_controle& (0+255),w,b
 16842  003BBA  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16843  003BBC  516D               	movf	(??_controle+5)& (0+255),w,b
 16844  003BBE  0A80               	xorlw	128
 16845  003BC0  6F6E               	movwf	(??_controle+6)& (0+255),b
 16846  003BC2  5169               	movf	(??_controle+1)& (0+255),w,b
 16847  003BC4  0A80               	xorlw	128
 16848  003BC6  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16849  003BC8  A0D8               	btfss	status,0,c
 16850  003BCA  D010               	goto	l1182
 16851  003BCC                     u13740:
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;controle.h: 228: t_controle_buzzer = 10;
 16855                           
 16856                           ; BSR set to: 0
 16857  003BCC  0E0A               	movlw	10
 16858  003BCE  6E39               	movwf	_t_controle_buzzer,c
 16859                           
 16860                           ; BSR set to: 0
 16861                           ;controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 16862  003BD0  A28B               	btfss	3979,1,c	;volatile
 16863  003BD2  D002               	goto	u13750
 16864  003BD4  0E01               	movlw	1
 16865  003BD6  D001               	goto	u13756
 16866  003BD8                     u13750:
 16867  003BD8  0E00               	movlw	0
 16868  003BDA                     u13756:
 16869  003BDA  0AFF               	xorlw	255
 16870  003BDC  6F68               	movwf	??_controle& (0+255),b
 16871  003BDE  4768               	rlncf	??_controle& (0+255),f,b
 16872  003BE0  508B               	movf	3979,w,c	;volatile
 16873  003BE2  1968               	xorwf	??_controle& (0+255),w,b
 16874  003BE4  0BFD               	andlw	-3
 16875  003BE6  1968               	xorwf	??_controle& (0+255),w,b
 16876  003BE8  6E8B               	movwf	3979,c	;volatile
 16877                           
 16878                           ;controle.h: 230: } else {
 16879  003BEA  D001               	goto	l1185
 16880  003BEC                     l1182:
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;controle.h: 231: LATCbits.LC1 = 0;
 16884  003BEC  928B               	bcf	3979,1,c	;volatile
 16885  003BEE                     l1185:
 16886                           
 16887                           ; BSR set to: 0
 16888                           ;controle.h: 232: }
 16889                           ;controle.h: 233: }
 16890                           ;controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 16891                           
 16892                           ; BSR set to: 0
 16893                           
 16894                           ; BSR set to: 0
 16895  003BEE  05FC               	decf	_buzzer& (0+255),w,b
 16896  003BF0  A4D8               	btfss	status,2,c
 16897  003BF2  D007               	goto	l1186
 16898                           
 16899                           ; BSR set to: 0
 16900  003BF4  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 16901  003BF6  B4D8               	btfsc	status,2,c
 16902  003BF8  D004               	goto	l1186
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 16906  003BFA  C0FF  F031         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 16907  003BFE  6A32               	clrf	_t_controle_religar_buzzer+1,c
 16908                           
 16909                           ;controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 16910  003C00  D009               	goto	l1188
 16911  003C02                     l1186:
 16912                           
 16913                           ; BSR set to: 0
 16914                           
 16915                           ; BSR set to: 0
 16916  003C02  5031               	movf	_t_controle_religar_buzzer,w,c
 16917  003C04  1032               	iorwf	_t_controle_religar_buzzer+1,w,c
 16918  003C06  A4D8               	btfss	status,2,c
 16919  003C08  D005               	goto	l1188
 16920                           
 16921                           ; BSR set to: 0
 16922  003C0A  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 16923  003C0C  B4D8               	btfsc	status,2,c
 16924  003C0E  D002               	goto	l1188
 16925                           
 16926                           ; BSR set to: 0
 16927                           ;controle.h: 237: buzzer = 1;
 16928  003C10  0E01               	movlw	1
 16929  003C12  6FFC               	movwf	_buzzer& (0+255),b
 16930  003C14                     l1188:
 16931                           
 16932                           ; BSR set to: 0
 16933                           ;controle.h: 238: }
 16934                           ;controle.h: 239: if (!buzzer) {
 16935                           
 16936                           ; BSR set to: 0
 16937  003C14  51FC               	movf	_buzzer& (0+255),w,b
 16938  003C16  B4D8               	btfsc	status,2,c
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;controle.h: 240: LATCbits.LC1 = 0;
 16942  003C18  928B               	bcf	3979,1,c	;volatile
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;controle.h: 241: }
 16946                           ;controle.h: 245: if (temp + 3 < tempajt) {
 16947                           
 16948                           ; BSR set to: 0
 16949  003C1A  51F4               	movf	_tempajt& (0+255),w,b
 16950  003C1C  6F68               	movwf	??_controle& (0+255),b
 16951  003C1E  6B69               	clrf	(??_controle+1)& (0+255),b
 16952  003C20  51FE               	movf	_temp& (0+255),w,b
 16953  003C22  6F6A               	movwf	(??_controle+2)& (0+255),b
 16954  003C24  6B6B               	clrf	(??_controle+3)& (0+255),b
 16955  003C26  0E03               	movlw	3
 16956  003C28  276A               	addwf	(??_controle+2)& (0+255),f,b
 16957  003C2A  0E00               	movlw	0
 16958  003C2C  236B               	addwfc	(??_controle+3)& (0+255),f,b
 16959  003C2E  5168               	movf	??_controle& (0+255),w,b
 16960  003C30  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16961  003C32  516B               	movf	(??_controle+3)& (0+255),w,b
 16962  003C34  0A80               	xorlw	128
 16963  003C36  6F6C               	movwf	(??_controle+4)& (0+255),b
 16964  003C38  5169               	movf	(??_controle+1)& (0+255),w,b
 16965  003C3A  0A80               	xorlw	128
 16966  003C3C  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16967  003C3E  B0D8               	btfsc	status,0,c
 16968  003C40  D00C               	goto	l1190
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;controle.h: 246: setLed(16, 1);
 16972  003C42  0E01               	movlw	1
 16973  003C44  6F60               	movwf	setLed@acao& (0+255),b
 16974  003C46  0E10               	movlw	16
 16975  003C48  EC4D  F02D         	call	_setLed
 16976                           
 16977                           ;controle.h: 247: setLed(32, 0);
 16978  003C4C  0E00               	movlw	0
 16979  003C4E  0100               	movlb	0	; () banked
 16980  003C50  6F60               	movwf	setLed@acao& (0+255),b
 16981  003C52  0E20               	movlw	32
 16982  003C54  EC4D  F02D         	call	_setLed
 16983                           
 16984                           ;controle.h: 248: } else if (temp - 3 > tempajt) {
 16985  003C58  D031               	goto	l1193
 16986  003C5A                     l1190:
 16987  003C5A  0EFD               	movlw	253
 16988  003C5C  0100               	movlb	0	; () banked
 16989  003C5E  6F68               	movwf	??_controle& (0+255),b
 16990  003C60  0EFF               	movlw	255
 16991  003C62  6F69               	movwf	(??_controle+1)& (0+255),b
 16992  003C64  51FE               	movf	_temp& (0+255),w,b
 16993  003C66  6F6A               	movwf	(??_controle+2)& (0+255),b
 16994  003C68  6B6B               	clrf	(??_controle+3)& (0+255),b
 16995  003C6A  5168               	movf	??_controle& (0+255),w,b
 16996  003C6C  276A               	addwf	(??_controle+2)& (0+255),f,b
 16997  003C6E  5169               	movf	(??_controle+1)& (0+255),w,b
 16998  003C70  236B               	addwfc	(??_controle+3)& (0+255),f,b
 16999  003C72  51F4               	movf	_tempajt& (0+255),w,b
 17000  003C74  6F6C               	movwf	(??_controle+4)& (0+255),b
 17001  003C76  6B6D               	clrf	(??_controle+5)& (0+255),b
 17002  003C78  516A               	movf	(??_controle+2)& (0+255),w,b
 17003  003C7A  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17004  003C7C  516D               	movf	(??_controle+5)& (0+255),w,b
 17005  003C7E  0A80               	xorlw	128
 17006  003C80  6F6E               	movwf	(??_controle+6)& (0+255),b
 17007  003C82  516B               	movf	(??_controle+3)& (0+255),w,b
 17008  003C84  0A80               	xorlw	128
 17009  003C86  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17010  003C88  B0D8               	btfsc	status,0,c
 17011  003C8A  D00C               	goto	l1192
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;controle.h: 249: setLed(32, 1);
 17015  003C8C  0E01               	movlw	1
 17016  003C8E  6F60               	movwf	setLed@acao& (0+255),b
 17017  003C90  0E20               	movlw	32
 17018  003C92  EC4D  F02D         	call	_setLed
 17019                           
 17020                           ;controle.h: 250: setLed(16, 0);
 17021  003C96  0E00               	movlw	0
 17022  003C98  0100               	movlb	0	; () banked
 17023  003C9A  6F60               	movwf	setLed@acao& (0+255),b
 17024  003C9C  0E10               	movlw	16
 17025  003C9E  EC4D  F02D         	call	_setLed
 17026                           
 17027                           ;controle.h: 251: } else {
 17028  003CA2  D00C               	goto	l1193
 17029  003CA4                     l1192:
 17030                           
 17031                           ;controle.h: 252: setLed(32, 0);
 17032  003CA4  0E00               	movlw	0
 17033  003CA6  0100               	movlb	0	; () banked
 17034  003CA8  6F60               	movwf	setLed@acao& (0+255),b
 17035  003CAA  0E20               	movlw	32
 17036  003CAC  EC4D  F02D         	call	_setLed
 17037                           
 17038                           ;controle.h: 253: setLed(16, 0);
 17039  003CB0  0E00               	movlw	0
 17040  003CB2  0100               	movlb	0	; () banked
 17041  003CB4  6F60               	movwf	setLed@acao& (0+255),b
 17042  003CB6  0E10               	movlw	16
 17043  003CB8  EC4D  F02D         	call	_setLed
 17044  003CBC                     l1193:
 17045                           
 17046                           ;controle.h: 254: }
 17047                           ;controle.h: 256: if (umid + 3 < umidajt) {
 17048  003CBC  0100               	movlb	0	; () banked
 17049  003CBE  51F3               	movf	_umidajt& (0+255),w,b
 17050  003CC0  6F68               	movwf	??_controle& (0+255),b
 17051  003CC2  6B69               	clrf	(??_controle+1)& (0+255),b
 17052  003CC4  505D               	movf	_umid,w,c
 17053  003CC6  6F6A               	movwf	(??_controle+2)& (0+255),b
 17054  003CC8  6B6B               	clrf	(??_controle+3)& (0+255),b
 17055  003CCA  0E03               	movlw	3
 17056  003CCC  276A               	addwf	(??_controle+2)& (0+255),f,b
 17057  003CCE  0E00               	movlw	0
 17058  003CD0  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17059  003CD2  5168               	movf	??_controle& (0+255),w,b
 17060  003CD4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17061  003CD6  516B               	movf	(??_controle+3)& (0+255),w,b
 17062  003CD8  0A80               	xorlw	128
 17063  003CDA  6F6C               	movwf	(??_controle+4)& (0+255),b
 17064  003CDC  5169               	movf	(??_controle+1)& (0+255),w,b
 17065  003CDE  0A80               	xorlw	128
 17066  003CE0  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17067  003CE2  B0D8               	btfsc	status,0,c
 17068  003CE4  D00C               	goto	l1194
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;controle.h: 257: setLed(1, 0);
 17072  003CE6  0E00               	movlw	0
 17073  003CE8  6F60               	movwf	setLed@acao& (0+255),b
 17074  003CEA  0E01               	movlw	1
 17075  003CEC  EC4D  F02D         	call	_setLed
 17076                           
 17077                           ;controle.h: 258: setLed(2, 1);
 17078  003CF0  0E01               	movlw	1
 17079  003CF2  0100               	movlb	0	; () banked
 17080  003CF4  6F60               	movwf	setLed@acao& (0+255),b
 17081  003CF6  0E02               	movlw	2
 17082  003CF8  EC4D  F02D         	call	_setLed
 17083                           
 17084                           ;controle.h: 259: } else if (umid - 3 > umidajt) {
 17085  003CFC  0012               	return	
 17086  003CFE                     l1194:
 17087  003CFE  0EFD               	movlw	253
 17088  003D00  0100               	movlb	0	; () banked
 17089  003D02  6F68               	movwf	??_controle& (0+255),b
 17090  003D04  0EFF               	movlw	255
 17091  003D06  6F69               	movwf	(??_controle+1)& (0+255),b
 17092  003D08  505D               	movf	_umid,w,c
 17093  003D0A  6F6A               	movwf	(??_controle+2)& (0+255),b
 17094  003D0C  6B6B               	clrf	(??_controle+3)& (0+255),b
 17095  003D0E  5168               	movf	??_controle& (0+255),w,b
 17096  003D10  276A               	addwf	(??_controle+2)& (0+255),f,b
 17097  003D12  5169               	movf	(??_controle+1)& (0+255),w,b
 17098  003D14  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17099  003D16  51F3               	movf	_umidajt& (0+255),w,b
 17100  003D18  6F6C               	movwf	(??_controle+4)& (0+255),b
 17101  003D1A  6B6D               	clrf	(??_controle+5)& (0+255),b
 17102  003D1C  516A               	movf	(??_controle+2)& (0+255),w,b
 17103  003D1E  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17104  003D20  516D               	movf	(??_controle+5)& (0+255),w,b
 17105  003D22  0A80               	xorlw	128
 17106  003D24  6F6E               	movwf	(??_controle+6)& (0+255),b
 17107  003D26  516B               	movf	(??_controle+3)& (0+255),w,b
 17108  003D28  0A80               	xorlw	128
 17109  003D2A  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17110  003D2C  B0D8               	btfsc	status,0,c
 17111  003D2E  D00C               	goto	l1196
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;controle.h: 260: setLed(1, 1);
 17115  003D30  0E01               	movlw	1
 17116  003D32  6F60               	movwf	setLed@acao& (0+255),b
 17117  003D34  0E01               	movlw	1
 17118  003D36  EC4D  F02D         	call	_setLed
 17119                           
 17120                           ;controle.h: 261: setLed(2, 0);
 17121  003D3A  0E00               	movlw	0
 17122  003D3C  0100               	movlb	0	; () banked
 17123  003D3E  6F60               	movwf	setLed@acao& (0+255),b
 17124  003D40  0E02               	movlw	2
 17125  003D42  EC4D  F02D         	call	_setLed
 17126                           
 17127                           ;controle.h: 262: } else {
 17128  003D46  0012               	return	
 17129  003D48                     l1196:
 17130                           
 17131                           ;controle.h: 263: setLed(1, 0);
 17132  003D48  0E00               	movlw	0
 17133  003D4A  0100               	movlb	0	; () banked
 17134  003D4C  6F60               	movwf	setLed@acao& (0+255),b
 17135  003D4E  0E01               	movlw	1
 17136  003D50  EC4D  F02D         	call	_setLed
 17137                           
 17138                           ;controle.h: 264: setLed(2, 0);
 17139  003D54  0E00               	movlw	0
 17140  003D56  0100               	movlb	0	; () banked
 17141  003D58  6F60               	movwf	setLed@acao& (0+255),b
 17142  003D5A  0E02               	movlw	2
 17143  003D5C  EC4D  F02D         	call	_setLed
 17144  003D60  0012               	return	
 17145  003D62                     __end_of_controle:
 17146                           	opt stack 0
 17147                           tblptru	equ	0xFF8
 17148                           tblptrh	equ	0xFF7
 17149                           tblptrl	equ	0xFF6
 17150                           tablat	equ	0xFF5
 17151                           prodh	equ	0xFF4
 17152                           prodl	equ	0xFF3
 17153                           intcon	equ	0xFF2
 17154                           intcon2	equ	0xFF1
 17155                           intcon3	equ	0xFF0
 17156                           postinc0	equ	0xFEE
 17157                           wreg	equ	0xFE8
 17158                           indf1	equ	0xFE7
 17159                           postdec1	equ	0xFE5
 17160                           fsr1h	equ	0xFE2
 17161                           fsr1l	equ	0xFE1
 17162                           indf2	equ	0xFDF
 17163                           postinc2	equ	0xFDE
 17164                           postdec2	equ	0xFDD
 17165                           fsr2h	equ	0xFDA
 17166                           fsr2l	equ	0xFD9
 17167                           status	equ	0xFD8
 17168                           
 17169 ;; *************** function _acaoFlap *****************
 17170 ;; Defined at:
 17171 ;;		line 123 in file "src/controle.h"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;  acao            1    wreg     unsigned char 
 17174 ;;  tempo_ativad    2    2[BANK0 ] int 
 17175 ;;  tempo_aguard    2    4[BANK0 ] int 
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;  acao            1    7[BANK0 ] unsigned char 
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  1    wreg      void 
 17180 ;; Registers used:
 17181 ;;		wreg, status,2, status,0, cstack
 17182 ;; Tracked objects:
 17183 ;;		On entry : 0/0
 17184 ;;		On exit  : 0/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17187 ;;      Params:         0       4       0       0       0       0       0       0       0
 17188 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17189 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17190 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17191 ;;Total ram usage:        6 bytes
 17192 ;; Hardware stack levels used:    1
 17193 ;; Hardware stack levels required when called:    7
 17194 ;; This function calls:
 17195 ;;		_setLed
 17196 ;; This function is called by:
 17197 ;;		_controle
 17198 ;; This function uses a non-reentrant model
 17199 ;;
 17200                           
 17201                           	psect	text22
 17202  0051B6                     __ptext22:
 17203                           	opt stack 0
 17204  0051B6                     _acaoFlap:
 17205                           	opt stack 22
 17206                           
 17207                           ;incstack = 0
 17208                           ;acaoFlap@acao stored from wreg
 17209  0051B6  0100               	movlb	0	; () banked
 17210  0051B8  6F67               	movwf	acaoFlap@acao& (0+255),b
 17211                           
 17212                           ;controle.h: 124: if (acao != _acao_flap) {
 17213  0051BA  503C               	movf	__acao_flap,w,c
 17214  0051BC  0100               	movlb	0	; () banked
 17215  0051BE  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17216  0051C0  B4D8               	btfsc	status,2,c
 17217  0051C2  D007               	goto	l1144
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;controle.h: 125: t_controle_flap = 0;
 17221  0051C4  0E00               	movlw	0
 17222  0051C6  6E34               	movwf	_t_controle_flap+1,c
 17223  0051C8  0E00               	movlw	0
 17224  0051CA  6E33               	movwf	_t_controle_flap,c
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;controle.h: 126: _acao_flap = acao;
 17228  0051CC  C067  F03C         	movff	acaoFlap@acao,__acao_flap
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;controle.h: 127: return;
 17232  0051D0  0012               	return	
 17233  0051D2                     l1144:
 17234                           
 17235                           ; BSR set to: 0
 17236                           ;controle.h: 128: }
 17237                           ;controle.h: 129: if (acao) {
 17238                           
 17239                           ; BSR set to: 0
 17240  0051D2  5167               	movf	acaoFlap@acao& (0+255),w,b
 17241  0051D4  B4D8               	btfsc	status,2,c
 17242  0051D6  D006               	goto	l1146
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;controle.h: 130: setLed(4, 1);
 17246  0051D8  0E01               	movlw	1
 17247  0051DA  6F60               	movwf	setLed@acao& (0+255),b
 17248  0051DC  0E04               	movlw	4
 17249  0051DE  EC4D  F02D         	call	_setLed
 17250                           
 17251                           ;controle.h: 131: } else {
 17252  0051E2  D006               	goto	l1147
 17253  0051E4                     l1146:
 17254                           
 17255                           ;controle.h: 132: setLed(4, 0);
 17256  0051E4  0E00               	movlw	0
 17257  0051E6  0100               	movlb	0	; () banked
 17258  0051E8  6F60               	movwf	setLed@acao& (0+255),b
 17259  0051EA  0E04               	movlw	4
 17260  0051EC  EC4D  F02D         	call	_setLed
 17261  0051F0                     l1147:
 17262                           
 17263                           ;controle.h: 133: }
 17264                           ;controle.h: 135: if (!t_controle_flap) {
 17265  0051F0  5033               	movf	_t_controle_flap,w,c
 17266  0051F2  1034               	iorwf	_t_controle_flap+1,w,c
 17267  0051F4  A4D8               	btfss	status,2,c
 17268  0051F6  D007               	goto	l1148
 17269                           
 17270                           ;controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17271  0051F8  0100               	movlb	0	; () banked
 17272  0051FA  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17273  0051FC  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17274  0051FE  6E33               	movwf	_t_controle_flap,c
 17275  005200  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17276  005202  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17277  005204  6E34               	movwf	_t_controle_flap+1,c
 17278  005206                     l1148:
 17279                           
 17280                           ;controle.h: 137: }
 17281                           ;controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17282  005206  5033               	movf	_t_controle_flap,w,c
 17283  005208  0100               	movlb	0	; () banked
 17284  00520A  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17285  00520C  5034               	movf	_t_controle_flap+1,w,c
 17286  00520E  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17287  005210  B0D8               	btfsc	status,0,c
 17288  005212  D015               	goto	l1149
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;controle.h: 140: LATAbits.LA5 = !acao;
 17292  005214  5167               	movf	acaoFlap@acao& (0+255),w,b
 17293  005216  A4D8               	btfss	status,2,c
 17294  005218  D003               	goto	u11800
 17295  00521A  6B66               	clrf	??_acaoFlap& (0+255),b
 17296  00521C  2B66               	incf	??_acaoFlap& (0+255),f,b
 17297  00521E  D002               	goto	u11818
 17298  005220                     u11800:
 17299  005220  0100               	movlb	0	; () banked
 17300  005222  6B66               	clrf	??_acaoFlap& (0+255),b
 17301  005224                     u11818:
 17302  005224  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17303  005226  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17304  005228  5089               	movf	3977,w,c	;volatile
 17305  00522A  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17306  00522C  0BDF               	andlw	-33
 17307  00522E  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17308  005230  6E89               	movwf	3977,c	;volatile
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;controle.h: 141: LATCbits.LC2 = acao;
 17312  005232  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17313  005234  D002               	bra	u11825
 17314  005236  948B               	bcf	3979,2,c	;volatile
 17315  005238  D001               	bra	u11826
 17316  00523A                     u11825:
 17317  00523A  848B               	bsf	3979,2,c	;volatile
 17318  00523C                     u11826:
 17319                           
 17320                           ;controle.h: 142: } else {
 17321  00523C  0012               	return	
 17322  00523E                     l1149:
 17323                           
 17324                           ; BSR set to: 0
 17325                           ;controle.h: 143: LATAbits.LA5 = 0;
 17326  00523E  9A89               	bcf	3977,5,c	;volatile
 17327                           
 17328                           ;controle.h: 144: LATCbits.LC2 = 0;
 17329  005240  948B               	bcf	3979,2,c	;volatile
 17330  005242  0012               	return	
 17331  005244                     __end_of_acaoFlap:
 17332                           	opt stack 0
 17333                           tblptru	equ	0xFF8
 17334                           tblptrh	equ	0xFF7
 17335                           tblptrl	equ	0xFF6
 17336                           tablat	equ	0xFF5
 17337                           prodh	equ	0xFF4
 17338                           prodl	equ	0xFF3
 17339                           intcon	equ	0xFF2
 17340                           intcon2	equ	0xFF1
 17341                           intcon3	equ	0xFF0
 17342                           postinc0	equ	0xFEE
 17343                           wreg	equ	0xFE8
 17344                           indf1	equ	0xFE7
 17345                           postdec1	equ	0xFE5
 17346                           fsr1h	equ	0xFE2
 17347                           fsr1l	equ	0xFE1
 17348                           indf2	equ	0xFDF
 17349                           postinc2	equ	0xFDE
 17350                           postdec2	equ	0xFDD
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _setLed *****************
 17356 ;; Defined at:
 17357 ;;		line 18 in file "src/Led_display.h"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  led             1    wreg     unsigned char 
 17360 ;;  acao            1    0[BANK0 ] unsigned char 
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;  led             1    1[BANK0 ] unsigned char 
 17363 ;; Return value:  Size  Location     Type
 17364 ;;                  1    wreg      void 
 17365 ;; Registers used:
 17366 ;;		wreg, status,2, status,0
 17367 ;; Tracked objects:
 17368 ;;		On entry : 0/0
 17369 ;;		On exit  : 0/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17372 ;;      Params:         0       1       0       0       0       0       0       0       0
 17373 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17375 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17376 ;;Total ram usage:        2 bytes
 17377 ;; Hardware stack levels used:    1
 17378 ;; Hardware stack levels required when called:    6
 17379 ;; This function calls:
 17380 ;;		Nothing
 17381 ;; This function is called by:
 17382 ;;		_acaoFlap
 17383 ;;		_controle
 17384 ;; This function uses a non-reentrant model
 17385 ;;
 17386                           
 17387                           	psect	text23
 17388  005A9A                     __ptext23:
 17389                           	opt stack 0
 17390  005A9A                     _setLed:
 17391                           	opt stack 23
 17392                           
 17393                           ;incstack = 0
 17394                           ;setLed@led stored from wreg
 17395  005A9A  0100               	movlb	0	; () banked
 17396  005A9C  6F61               	movwf	setLed@led& (0+255),b
 17397                           
 17398                           ;Led_display.h: 19: if (acao) {
 17399  005A9E  0100               	movlb	0	; () banked
 17400  005AA0  5160               	movf	setLed@acao& (0+255),w,b
 17401  005AA2  B4D8               	btfsc	status,2,c
 17402  005AA4  D004               	goto	l217
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;Led_display.h: 20: leds = leds | led;
 17406  005AA6  5043               	movf	_leds,w,c
 17407  005AA8  1161               	iorwf	setLed@led& (0+255),w,b
 17408  005AAA  6E43               	movwf	_leds,c
 17409                           
 17410                           ;Led_display.h: 22: } else {
 17411  005AAC  0012               	return	
 17412  005AAE                     l217:
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;Led_display.h: 23: leds = leds&~led;
 17416                           
 17417                           ; BSR set to: 0
 17418  005AAE  5161               	movf	setLed@led& (0+255),w,b
 17419  005AB0  0AFF               	xorlw	255
 17420  005AB2  1443               	andwf	_leds,w,c
 17421  005AB4  6E43               	movwf	_leds,c
 17422  005AB6  0012               	return	
 17423  005AB8                     __end_of_setLed:
 17424                           	opt stack 0
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon	equ	0xFF2
 17432                           intcon2	equ	0xFF1
 17433                           intcon3	equ	0xFF0
 17434                           postinc0	equ	0xFEE
 17435                           wreg	equ	0xFE8
 17436                           indf1	equ	0xFE7
 17437                           postdec1	equ	0xFE5
 17438                           fsr1h	equ	0xFE2
 17439                           fsr1l	equ	0xFE1
 17440                           indf2	equ	0xFDF
 17441                           postinc2	equ	0xFDE
 17442                           postdec2	equ	0xFDD
 17443                           fsr2h	equ	0xFDA
 17444                           fsr2l	equ	0xFD9
 17445                           status	equ	0xFD8
 17446                           
 17447 ;; *************** function _climaAtual *****************
 17448 ;; Defined at:
 17449 ;;		line 34 in file "src/FuncoesControlador.h"
 17450 ;; Parameters:    Size  Location     Type
 17451 ;;  c               1    wreg     unsigned char 
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;  c               1    2[BANK0 ] unsigned char 
 17454 ;; Return value:  Size  Location     Type
 17455 ;;                  2    0[BANK0 ] PTR unsigned char 
 17456 ;; Registers used:
 17457 ;;		wreg, status,2, status,0
 17458 ;; Tracked objects:
 17459 ;;		On entry : 0/0
 17460 ;;		On exit  : 0/0
 17461 ;;		Unchanged: 0/0
 17462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17463 ;;      Params:         0       2       0       0       0       0       0       0       0
 17464 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17466 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17467 ;;Total ram usage:        3 bytes
 17468 ;; Hardware stack levels used:    1
 17469 ;; Hardware stack levels required when called:    6
 17470 ;; This function calls:
 17471 ;;		Nothing
 17472 ;; This function is called by:
 17473 ;;		_main
 17474 ;; This function uses a non-reentrant model
 17475 ;;
 17476                           
 17477                           	psect	text24
 17478  005656                     __ptext24:
 17479                           	opt stack 0
 17480  005656                     _climaAtual:
 17481                           	opt stack 24
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;incstack = 0
 17485                           ;climaAtual@c stored from wreg
 17486  005656  0100               	movlb	0	; () banked
 17487  005658  6F62               	movwf	climaAtual@c& (0+255),b
 17488                           
 17489                           ;FuncoesControlador.h: 35: switch (c) {
 17490  00565A  D015               	goto	l901
 17491  00565C  0EBB               	movlw	low STR_6
 17492  00565E  0100               	movlb	0	; () banked
 17493  005660  6F60               	movwf	?_climaAtual& (0+255),b
 17494  005662  0E7F               	movlw	high STR_6
 17495  005664  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17496                           
 17497                           ; BSR set to: 0
 17498  005666  0012               	return	
 17499  005668                     
 17500                           ; BSR set to: 0
 17501                           
 17502                           ; BSR set to: 0
 17503  005668  0E92               	movlw	low STR_7
 17504  00566A  6F60               	movwf	?_climaAtual& (0+255),b
 17505  00566C  0E7F               	movlw	high STR_7
 17506  00566E  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17507                           
 17508                           ; BSR set to: 0
 17509  005670  0012               	return	
 17510  005672                     
 17511                           ; BSR set to: 0
 17512                           
 17513                           ; BSR set to: 0
 17514  005672  0ED0               	movlw	low STR_8
 17515  005674  6F60               	movwf	?_climaAtual& (0+255),b
 17516  005676  0E7F               	movlw	high STR_8
 17517  005678  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17518                           
 17519                           ; BSR set to: 0
 17520  00567A  0012               	return	
 17521  00567C                     
 17522                           ; BSR set to: 0
 17523                           
 17524                           ; BSR set to: 0
 17525  00567C  0EEE               	movlw	low STR_9
 17526  00567E  6F60               	movwf	?_climaAtual& (0+255),b
 17527  005680  0E7F               	movlw	high STR_9
 17528  005682  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;FuncoesControlador.h: 41: }
 17532                           
 17533                           ; BSR set to: 0
 17534  005684  0012               	return	
 17535  005686                     l901:
 17536                           
 17537                           ; BSR set to: 0
 17538  005686  0100               	movlb	0	; () banked
 17539  005688  5162               	movf	climaAtual@c& (0+255),w,b
 17540                           
 17541                           ; Switch size 1, requested type "space"
 17542                           ; Number of cases is 3, Range of values is 1 to 3
 17543                           ; switch strategies available:
 17544                           ; Name         Instructions Cycles
 17545                           ; simple_byte           10     6 (average)
 17546                           ;	Chosen strategy is simple_byte
 17547  00568A  0A01               	xorlw	1	; case 1
 17548  00568C  B4D8               	btfsc	status,2,c
 17549  00568E  D7E6               	goto	l902
 17550  005690  0A03               	xorlw	3	; case 2
 17551  005692  B4D8               	btfsc	status,2,c
 17552  005694  D7E9               	goto	l904
 17553  005696  0A01               	xorlw	1	; case 3
 17554  005698  B4D8               	btfsc	status,2,c
 17555  00569A  D7EB               	goto	l905
 17556  00569C  D7EF               	goto	l906
 17557  00569E                     __end_of_climaAtual:
 17558                           	opt stack 0
 17559                           tblptru	equ	0xFF8
 17560                           tblptrh	equ	0xFF7
 17561                           tblptrl	equ	0xFF6
 17562                           tablat	equ	0xFF5
 17563                           prodh	equ	0xFF4
 17564                           prodl	equ	0xFF3
 17565                           intcon	equ	0xFF2
 17566                           intcon2	equ	0xFF1
 17567                           intcon3	equ	0xFF0
 17568                           postinc0	equ	0xFEE
 17569                           wreg	equ	0xFE8
 17570                           indf1	equ	0xFE7
 17571                           postdec1	equ	0xFE5
 17572                           fsr1h	equ	0xFE2
 17573                           fsr1l	equ	0xFE1
 17574                           indf2	equ	0xFDF
 17575                           postinc2	equ	0xFDE
 17576                           postdec2	equ	0xFDD
 17577                           fsr2h	equ	0xFDA
 17578                           fsr2l	equ	0xFD9
 17579                           status	equ	0xFD8
 17580                           
 17581 ;; *************** function _btPress *****************
 17582 ;; Defined at:
 17583 ;;		line 26 in file "src/Teclado.h"
 17584 ;; Parameters:    Size  Location     Type
 17585 ;;  bt              1    wreg     unsigned char 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  bt              1    0[BANK0 ] unsigned char 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      unsigned char 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2, status,0
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17597 ;;      Params:         0       0       0       0       0       0       0       0       0
 17598 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17600 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17601 ;;Total ram usage:        1 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; Hardware stack levels required when called:    6
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_main
 17608 ;; This function uses a non-reentrant model
 17609 ;;
 17610                           
 17611                           	psect	text25
 17612  005AB8                     __ptext25:
 17613                           	opt stack 0
 17614  005AB8                     _btPress:
 17615                           	opt stack 24
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;incstack = 0
 17619                           ;btPress@bt stored from wreg
 17620  005AB8  0100               	movlb	0	; () banked
 17621  005ABA  6F60               	movwf	btPress@bt& (0+255),b
 17622                           
 17623                           ;Teclado.h: 27: if (bt_flag == bt) {
 17624  005ABC  0100               	movlb	0	; () banked
 17625  005ABE  5160               	movf	btPress@bt& (0+255),w,b
 17626  005AC0  1842               	xorwf	_bt_flag,w,c
 17627  005AC2  B4D8               	btfsc	status,2,c
 17628                           
 17629                           ; BSR set to: 0
 17630                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 17631  005AC4  A481               	btfss	3969,2,c	;volatile
 17632  005AC6  D004               	goto	l296
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;Teclado.h: 29: bt_flag = 0;
 17636  005AC8  0E00               	movlw	0
 17637  005ACA  6E42               	movwf	_bt_flag,c
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;Teclado.h: 30: return 1;
 17641  005ACC  0E01               	movlw	1
 17642                           
 17643                           ; BSR set to: 0
 17644  005ACE  0012               	return	
 17645  005AD0                     l296:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;Teclado.h: 31: }
 17649                           ;Teclado.h: 32: }
 17650                           ;Teclado.h: 33: return 0;
 17651                           
 17652                           ; BSR set to: 0
 17653                           
 17654                           ; BSR set to: 0
 17655  005AD0  0E00               	movlw	0
 17656  005AD2  0012               	return	
 17657  005AD4                     __end_of_btPress:
 17658                           	opt stack 0
 17659                           tblptru	equ	0xFF8
 17660                           tblptrh	equ	0xFF7
 17661                           tblptrl	equ	0xFF6
 17662                           tablat	equ	0xFF5
 17663                           prodh	equ	0xFF4
 17664                           prodl	equ	0xFF3
 17665                           intcon	equ	0xFF2
 17666                           intcon2	equ	0xFF1
 17667                           intcon3	equ	0xFF0
 17668                           postinc0	equ	0xFEE
 17669                           wreg	equ	0xFE8
 17670                           indf1	equ	0xFE7
 17671                           postdec1	equ	0xFE5
 17672                           fsr1h	equ	0xFE2
 17673                           fsr1l	equ	0xFE1
 17674                           indf2	equ	0xFDF
 17675                           postinc2	equ	0xFDE
 17676                           postdec2	equ	0xFDD
 17677                           fsr2h	equ	0xFDA
 17678                           fsr2l	equ	0xFD9
 17679                           status	equ	0xFD8
 17680                           
 17681 ;; *************** function _blink *****************
 17682 ;; Defined at:
 17683 ;;		line 212 in file "src/lcd.h"
 17684 ;; Parameters:    Size  Location     Type
 17685 ;;  line            2    0[BANK0 ] PTR unsigned char 
 17686 ;;		 -> line3(21), line2(21), line1(21), 
 17687 ;;  start           1    2[BANK0 ] unsigned char 
 17688 ;;  end             1    3[BANK0 ] unsigned char 
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;  i               1    4[BANK0 ] unsigned char 
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  1    wreg      void 
 17693 ;; Registers used:
 17694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17700 ;;      Params:         0       4       0       0       0       0       0       0       0
 17701 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17703 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17704 ;;Total ram usage:        5 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; Hardware stack levels required when called:    6
 17707 ;; This function calls:
 17708 ;;		Nothing
 17709 ;; This function is called by:
 17710 ;;		_main
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           	psect	text26
 17715  005848                     __ptext26:
 17716                           	opt stack 0
 17717  005848                     _blink:
 17718                           	opt stack 24
 17719                           
 17720                           ;lcd.h: 213: if (blinkk) {
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;incstack = 0
 17724  005848  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17725  00584A  0012               	return	
 17726                           
 17727                           ;lcd.h: 214: char i = 0;
 17728  00584C  0E00               	movlw	0
 17729  00584E  0100               	movlb	0	; () banked
 17730  005850  6F64               	movwf	blink@i& (0+255),b
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 17734  005852  0762               	decf	blink@start& (0+255),f,b
 17735  005854  C062  F064         	movff	blink@start,blink@i
 17736  005858  D00B               	goto	l284
 17737  00585A                     
 17738                           ; BSR set to: 0
 17739                           ;lcd.h: 216: line[i] = ' ';
 17740                           
 17741                           ; BSR set to: 0
 17742  00585A  5164               	movf	blink@i& (0+255),w,b
 17743  00585C  0D01               	mullw	1
 17744  00585E  50F3               	movf	prodl,w,c
 17745  005860  2560               	addwf	blink@line& (0+255),w,b
 17746  005862  6ED9               	movwf	fsr2l,c
 17747  005864  50F4               	movf	prodh,w,c
 17748  005866  2161               	addwfc	(blink@line+1)& (0+255),w,b
 17749  005868  6EDA               	movwf	fsr2h,c
 17750  00586A  0E20               	movlw	32
 17751  00586C  6EDF               	movwf	indf2,c
 17752                           
 17753                           ; BSR set to: 0
 17754  00586E  2B64               	incf	blink@i& (0+255),f,b
 17755  005870                     l284:
 17756                           
 17757                           ; BSR set to: 0
 17758                           
 17759                           ; BSR set to: 0
 17760  005870  5163               	movf	blink@end& (0+255),w,b
 17761  005872  5D64               	subwf	blink@i& (0+255),w,b
 17762  005874  B0D8               	btfsc	status,0,c
 17763  005876  0012               	return	
 17764  005878  D7F0               	goto	l285
 17765  00587A                     __end_of_blink:
 17766                           	opt stack 0
 17767                           tblptru	equ	0xFF8
 17768                           tblptrh	equ	0xFF7
 17769                           tblptrl	equ	0xFF6
 17770                           tablat	equ	0xFF5
 17771                           prodh	equ	0xFF4
 17772                           prodl	equ	0xFF3
 17773                           intcon	equ	0xFF2
 17774                           intcon2	equ	0xFF1
 17775                           intcon3	equ	0xFF0
 17776                           postinc0	equ	0xFEE
 17777                           wreg	equ	0xFE8
 17778                           indf1	equ	0xFE7
 17779                           postdec1	equ	0xFE5
 17780                           fsr1h	equ	0xFE2
 17781                           fsr1l	equ	0xFE1
 17782                           indf2	equ	0xFDF
 17783                           postinc2	equ	0xFDE
 17784                           postdec2	equ	0xFDD
 17785                           fsr2h	equ	0xFDA
 17786                           fsr2l	equ	0xFD9
 17787                           status	equ	0xFD8
 17788                           
 17789 ;; *************** function _alterarDadosConexaoConfigWifi *****************
 17790 ;; Defined at:
 17791 ;;		line 34 in file "src/conexaoWifi.h"
 17792 ;; Parameters:    Size  Location     Type
 17793 ;;		None
 17794 ;; Auto vars:     Size  Location     Type
 17795 ;;  i               1  128[BANK0 ] unsigned char 
 17796 ;; Return value:  Size  Location     Type
 17797 ;;                  1    wreg      void 
 17798 ;; Registers used:
 17799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17800 ;; Tracked objects:
 17801 ;;		On entry : 0/0
 17802 ;;		On exit  : 0/0
 17803 ;;		Unchanged: 0/0
 17804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17805 ;;      Params:         0       0       0       0       0       0       0       0       0
 17806 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17808 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17809 ;;Total ram usage:        1 bytes
 17810 ;; Hardware stack levels used:    1
 17811 ;; Hardware stack levels required when called:   10
 17812 ;; This function calls:
 17813 ;;		_atualizaLCD
 17814 ;;		_delay
 17815 ;;		_findBufferSerial
 17816 ;;		_getStringJSON
 17817 ;;		_printf
 17818 ;;		_setKeyStartReceiveSerial
 17819 ;;		_sprintf
 17820 ;;		_strlen
 17821 ;;		_strstr
 17822 ;;		_writeEEPROM_ext
 17823 ;; This function is called by:
 17824 ;;		_main
 17825 ;; This function uses a non-reentrant model
 17826 ;;
 17827                           
 17828                           	psect	text27
 17829  0034E6                     __ptext27:
 17830                           	opt stack 0
 17831  0034E6                     _alterarDadosConexaoConfigWifi:
 17832                           	opt stack 20
 17833                           
 17834                           ;conexaoWifi.h: 35: if (t_wifi_restart == 0) {
 17835                           
 17836                           ;incstack = 0
 17837  0034E6  503E               	movf	_t_wifi_restart,w,c
 17838  0034E8  A4D8               	btfss	status,2,c
 17839  0034EA  D006               	goto	l979
 17840                           
 17841                           ;conexaoWifi.h: 36: menu = 8;
 17842  0034EC  0E08               	movlw	8
 17843  0034EE  0100               	movlb	0	; () banked
 17844  0034F0  6FFD               	movwf	_menu& (0+255),b
 17845                           
 17846                           ;conexaoWifi.h: 37: opcaomenu = 1;
 17847  0034F2  0E01               	movlw	1
 17848  0034F4  6E45               	movwf	_opcaomenu,c
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;conexaoWifi.h: 39: } else {
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;conexaoWifi.h: 38: return;
 17855  0034F6  0012               	return	
 17856  0034F8                     l979:
 17857                           
 17858                           ;conexaoWifi.h: 40: delay(10);
 17859                           
 17860                           ; BSR set to: 0
 17861  0034F8  0E00               	movlw	0
 17862  0034FA  0100               	movlb	0	; () banked
 17863  0034FC  6F61               	movwf	(delay@x+1)& (0+255),b
 17864  0034FE  0E0A               	movlw	10
 17865  003500  6F60               	movwf	delay@x& (0+255),b
 17866  003502  ECB3  F02C         	call	_delay	;wreg free
 17867                           
 17868                           ;conexaoWifi.h: 41: switch (f_wifi_processo) {
 17869  003506  D1E5               	goto	l982
 17870  003508                     
 17871                           ;conexaoWifi.h: 43: setKeyStartReceiveSerial("ALL");
 17872  003508  0EDD               	movlw	low STR_10
 17873  00350A  0100               	movlb	0	; () banked
 17874  00350C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17875  00350E  0E7F               	movlw	high STR_10
 17876  003510  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 17877  003512  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 17878                           
 17879                           ;conexaoWifi.h: 44: printf("AT+CWMODE=2\r\n");
 17880  003516  0E66               	movlw	low STR_11
 17881  003518  0100               	movlb	0	; () banked
 17882  00351A  6F81               	movwf	printf@f& (0+255),b
 17883  00351C  0E7E               	movlw	high STR_11
 17884  00351E  6F82               	movwf	(printf@f+1)& (0+255),b
 17885  003520  ECD3  F02B         	call	_printf	;wreg free
 17886                           
 17887                           ;conexaoWifi.h: 45: wifi_conectado = 0;
 17888  003524  0E00               	movlw	0
 17889  003526  6E49               	movwf	_wifi_conectado,c
 17890                           
 17891                           ;conexaoWifi.h: 46: f_wifi_processo++;
 17892  003528  2A3D               	incf	_f_wifi_processo,f,c
 17893                           
 17894                           ;conexaoWifi.h: 47: break;
 17895  00352A  0012               	return	
 17896  00352C                     
 17897                           ;conexaoWifi.h: 49: if (findBufferSerial("OK")) {
 17898  00352C  0EF1               	movlw	low STR_12
 17899  00352E  0100               	movlb	0	; () banked
 17900  003530  6F74               	movwf	findBufferSerial@key& (0+255),b
 17901  003532  0E7F               	movlw	high STR_12
 17902  003534  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 17903  003536  ECDC  F02C         	call	_findBufferSerial	;wreg free
 17904  00353A  0900               	iorlw	0
 17905  00353C  B4D8               	btfsc	status,2,c
 17906  00353E  0012               	return	
 17907                           
 17908                           ;conexaoWifi.h: 50: f_wifi_processo++;
 17909  003540  2A3D               	incf	_f_wifi_processo,f,c
 17910                           
 17911                           ;conexaoWifi.h: 51: }
 17912                           ;conexaoWifi.h: 52: break;
 17913  003542  0012               	return	
 17914  003544                     
 17915                           ;conexaoWifi.h: 54: setKeyStartReceiveSerial("ALL");
 17916  003544  0EDD               	movlw	low STR_10
 17917  003546  0100               	movlb	0	; () banked
 17918  003548  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17919  00354A  0E7F               	movlw	high STR_10
 17920  00354C  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 17921  00354E  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 17922                           
 17923                           ;conexaoWifi.h: 55: printf("AT+CIPMUX=1\r\n");
 17924  003552  0E58               	movlw	low STR_14
 17925  003554  0100               	movlb	0	; () banked
 17926  003556  6F81               	movwf	printf@f& (0+255),b
 17927  003558  0E7E               	movlw	high STR_14
 17928  00355A  6F82               	movwf	(printf@f+1)& (0+255),b
 17929  00355C  ECD3  F02B         	call	_printf	;wreg free
 17930                           
 17931                           ;conexaoWifi.h: 56: f_wifi_processo++;
 17932  003560  2A3D               	incf	_f_wifi_processo,f,c
 17933                           
 17934                           ;conexaoWifi.h: 57: break;
 17935  003562  0012               	return	
 17936  003564                     
 17937                           ;conexaoWifi.h: 59: if (findBufferSerial("OK")) {
 17938  003564  0EF1               	movlw	low STR_12
 17939  003566  0100               	movlb	0	; () banked
 17940  003568  6F74               	movwf	findBufferSerial@key& (0+255),b
 17941  00356A  0E7F               	movlw	high STR_12
 17942  00356C  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 17943  00356E  ECDC  F02C         	call	_findBufferSerial	;wreg free
 17944  003572  0900               	iorlw	0
 17945  003574  B4D8               	btfsc	status,2,c
 17946  003576  0012               	return	
 17947                           
 17948                           ;conexaoWifi.h: 60: f_wifi_processo++;
 17949  003578  2A3D               	incf	_f_wifi_processo,f,c
 17950                           
 17951                           ;conexaoWifi.h: 61: }
 17952                           ;conexaoWifi.h: 62: break;
 17953  00357A  0012               	return	
 17954  00357C                     
 17955                           ;conexaoWifi.h: 64: setKeyStartReceiveSerial("ALL");
 17956  00357C  0EDD               	movlw	low STR_10
 17957  00357E  0100               	movlb	0	; () banked
 17958  003580  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17959  003582  0E7F               	movlw	high STR_10
 17960  003584  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 17961  003586  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 17962                           
 17963                           ;conexaoWifi.h: 65: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 17964  00358A  0E9E               	movlw	low STR_17
 17965  00358C  0100               	movlb	0	; () banked
 17966  00358E  6F81               	movwf	printf@f& (0+255),b
 17967  003590  0E7B               	movlw	high STR_17
 17968  003592  6F82               	movwf	(printf@f+1)& (0+255),b
 17969  003594  ECD3  F02B         	call	_printf	;wreg free
 17970                           
 17971                           ;conexaoWifi.h: 66: f_wifi_processo++;
 17972  003598  2A3D               	incf	_f_wifi_processo,f,c
 17973                           
 17974                           ;conexaoWifi.h: 67: break;
 17975  00359A  0012               	return	
 17976  00359C                     
 17977                           ;conexaoWifi.h: 69: if (findBufferSerial("OK")) {
 17978  00359C  0EF1               	movlw	low STR_12
 17979  00359E  0100               	movlb	0	; () banked
 17980  0035A0  6F74               	movwf	findBufferSerial@key& (0+255),b
 17981  0035A2  0E7F               	movlw	high STR_12
 17982  0035A4  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 17983  0035A6  ECDC  F02C         	call	_findBufferSerial	;wreg free
 17984  0035AA  0900               	iorlw	0
 17985  0035AC  B4D8               	btfsc	status,2,c
 17986  0035AE  0012               	return	
 17987                           
 17988                           ;conexaoWifi.h: 70: f_wifi_processo++;
 17989  0035B0  2A3D               	incf	_f_wifi_processo,f,c
 17990                           
 17991                           ;conexaoWifi.h: 71: }
 17992                           ;conexaoWifi.h: 72: break;
 17993  0035B2  0012               	return	
 17994  0035B4                     
 17995                           ;conexaoWifi.h: 74: setKeyStartReceiveSerial("ALL");
 17996  0035B4  0EDD               	movlw	low STR_10
 17997  0035B6  0100               	movlb	0	; () banked
 17998  0035B8  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17999  0035BA  0E7F               	movlw	high STR_10
 18000  0035BC  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18001  0035BE  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18002                           
 18003                           ;conexaoWifi.h: 75: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18004  0035C2  0EC1               	movlw	low STR_20
 18005  0035C4  0100               	movlb	0	; () banked
 18006  0035C6  6F81               	movwf	printf@f& (0+255),b
 18007  0035C8  0E7B               	movlw	high STR_20
 18008  0035CA  6F82               	movwf	(printf@f+1)& (0+255),b
 18009  0035CC  ECD3  F02B         	call	_printf	;wreg free
 18010                           
 18011                           ;conexaoWifi.h: 76: f_wifi_processo++;
 18012  0035D0  2A3D               	incf	_f_wifi_processo,f,c
 18013                           
 18014                           ;conexaoWifi.h: 77: break;
 18015  0035D2  0012               	return	
 18016  0035D4                     
 18017                           ;conexaoWifi.h: 79: if (findBufferSerial("OK")) {
 18018  0035D4  0EF1               	movlw	low STR_12
 18019  0035D6  0100               	movlb	0	; () banked
 18020  0035D8  6F74               	movwf	findBufferSerial@key& (0+255),b
 18021  0035DA  0E7F               	movlw	high STR_12
 18022  0035DC  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18023  0035DE  ECDC  F02C         	call	_findBufferSerial	;wreg free
 18024  0035E2  0900               	iorlw	0
 18025  0035E4  B4D8               	btfsc	status,2,c
 18026  0035E6  0012               	return	
 18027                           
 18028                           ;conexaoWifi.h: 80: f_wifi_processo++;
 18029  0035E8  2A3D               	incf	_f_wifi_processo,f,c
 18030                           
 18031                           ;conexaoWifi.h: 81: }
 18032                           ;conexaoWifi.h: 82: break;
 18033  0035EA  0012               	return	
 18034  0035EC                     
 18035                           ;conexaoWifi.h: 84: setKeyStartReceiveSerial("ALL");
 18036  0035EC  0EDD               	movlw	low STR_10
 18037  0035EE  0100               	movlb	0	; () banked
 18038  0035F0  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18039  0035F2  0E7F               	movlw	high STR_10
 18040  0035F4  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18041  0035F6  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18042                           
 18043                           ;conexaoWifi.h: 85: printf("AT+CIPSERVER=1,80\r\n");
 18044  0035FA  0E41               	movlw	low STR_23
 18045  0035FC  0100               	movlb	0	; () banked
 18046  0035FE  6F81               	movwf	printf@f& (0+255),b
 18047  003600  0E7C               	movlw	high STR_23
 18048  003602  6F82               	movwf	(printf@f+1)& (0+255),b
 18049  003604  ECD3  F02B         	call	_printf	;wreg free
 18050                           
 18051                           ;conexaoWifi.h: 86: f_wifi_processo++;
 18052  003608  2A3D               	incf	_f_wifi_processo,f,c
 18053                           
 18054                           ;conexaoWifi.h: 87: break;
 18055  00360A  0012               	return	
 18056  00360C                     
 18057                           ;conexaoWifi.h: 89: if (findBufferSerial("OK")) {
 18058  00360C  0EF1               	movlw	low STR_12
 18059  00360E  0100               	movlb	0	; () banked
 18060  003610  6F74               	movwf	findBufferSerial@key& (0+255),b
 18061  003612  0E7F               	movlw	high STR_12
 18062  003614  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18063  003616  ECDC  F02C         	call	_findBufferSerial	;wreg free
 18064  00361A  0900               	iorlw	0
 18065  00361C  B4D8               	btfsc	status,2,c
 18066  00361E  0012               	return	
 18067                           
 18068                           ;conexaoWifi.h: 90: setKeyStartReceiveSerial("Accept");
 18069  003620  0EAE               	movlw	low STR_25
 18070  003622  0100               	movlb	0	; () banked
 18071  003624  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18072  003626  0E7F               	movlw	high STR_25
 18073  003628  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18074  00362A  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18075                           
 18076                           ;conexaoWifi.h: 91: f_wifi_processo++;
 18077  00362E  2A3D               	incf	_f_wifi_processo,f,c
 18078                           
 18079                           ;conexaoWifi.h: 92: t_wifi_restart = 180;
 18080  003630  0EB4               	movlw	180
 18081  003632  6E3E               	movwf	_t_wifi_restart,c
 18082                           
 18083                           ;conexaoWifi.h: 93: }
 18084                           ;conexaoWifi.h: 94: break;
 18085  003634  0012               	return	
 18086  003636                     
 18087                           ;conexaoWifi.h: 96: sprintf(line1, "Conecte-se a rede e");
 18088  003636  0EA5               	movlw	low _line1
 18089  003638  0100               	movlb	0	; () banked
 18090  00363A  6F81               	movwf	sprintf@wh& (0+255),b
 18091  00363C  0E01               	movlw	high _line1
 18092  00363E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18093  003640  0ECD               	movlw	low STR_26
 18094  003642  6F83               	movwf	sprintf@f& (0+255),b
 18095  003644  0E7C               	movlw	high STR_26
 18096  003646  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18097  003648  EC4F  F02B         	call	_sprintf	;wreg free
 18098                           
 18099                           ;conexaoWifi.h: 97: sprintf(line2, "acesse o IP para");
 18100  00364C  0E90               	movlw	low _line2
 18101  00364E  0100               	movlb	0	; () banked
 18102  003650  6F81               	movwf	sprintf@wh& (0+255),b
 18103  003652  0E01               	movlw	high _line2
 18104  003654  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18105  003656  0E99               	movlw	low STR_27
 18106  003658  6F83               	movwf	sprintf@f& (0+255),b
 18107  00365A  0E7D               	movlw	high STR_27
 18108  00365C  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18109  00365E  EC4F  F02B         	call	_sprintf	;wreg free
 18110                           
 18111                           ;conexaoWifi.h: 98: sprintf(line3, "configurar o WIFI...");
 18112  003662  0E7B               	movlw	low _line3
 18113  003664  0100               	movlb	0	; () banked
 18114  003666  6F81               	movwf	sprintf@wh& (0+255),b
 18115  003668  0E01               	movlw	high _line3
 18116  00366A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18117  00366C  0E17               	movlw	low STR_28
 18118  00366E  6F83               	movwf	sprintf@f& (0+255),b
 18119  003670  0E7C               	movlw	high STR_28
 18120  003672  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18121  003674  EC4F  F02B         	call	_sprintf	;wreg free
 18122                           
 18123                           ;conexaoWifi.h: 99: sprintf(line4, "10.1.1.1");
 18124  003678  0E66               	movlw	low _line4
 18125  00367A  0100               	movlb	0	; () banked
 18126  00367C  6F81               	movwf	sprintf@wh& (0+255),b
 18127  00367E  0E01               	movlw	high _line4
 18128  003680  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18129  003682  0E49               	movlw	low STR_29
 18130  003684  6F83               	movwf	sprintf@f& (0+255),b
 18131  003686  0E7F               	movlw	high STR_29
 18132  003688  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18133  00368A  EC4F  F02B         	call	_sprintf	;wreg free
 18134                           
 18135                           ;conexaoWifi.h: 100: if (findBufferSerial("Accept")) {
 18136  00368E  0EAE               	movlw	low STR_25
 18137  003690  0100               	movlb	0	; () banked
 18138  003692  6F74               	movwf	findBufferSerial@key& (0+255),b
 18139  003694  0E7F               	movlw	high STR_25
 18140  003696  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18141  003698  ECDC  F02C         	call	_findBufferSerial	;wreg free
 18142  00369C  0900               	iorlw	0
 18143  00369E  B4D8               	btfsc	status,2,c
 18144  0036A0  0012               	return	
 18145                           
 18146                           ;conexaoWifi.h: 101: delay(400);
 18147  0036A2  0E01               	movlw	1
 18148  0036A4  0100               	movlb	0	; () banked
 18149  0036A6  6F61               	movwf	(delay@x+1)& (0+255),b
 18150  0036A8  0E90               	movlw	144
 18151  0036AA  6F60               	movwf	delay@x& (0+255),b
 18152  0036AC  ECB3  F02C         	call	_delay	;wreg free
 18153                           
 18154                           ;conexaoWifi.h: 102: f_wifi_processo++;
 18155  0036B0  2A3D               	incf	_f_wifi_processo,f,c
 18156                           
 18157                           ;conexaoWifi.h: 103: }
 18158                           ;conexaoWifi.h: 104: break;
 18159  0036B2  0012               	return	
 18160  0036B4                     
 18161                           ;conexaoWifi.h: 106: setKeyStartReceiveSerial("ALL");
 18162  0036B4  0EDD               	movlw	low STR_10
 18163  0036B6  0100               	movlb	0	; () banked
 18164  0036B8  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18165  0036BA  0E7F               	movlw	high STR_10
 18166  0036BC  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18167  0036BE  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18168                           
 18169                           ;conexaoWifi.h: 107: printf("AT+CIPSENDEX=0,800\r\n");
 18170  0036C2  0E02               	movlw	low STR_32
 18171  0036C4  0100               	movlb	0	; () banked
 18172  0036C6  6F81               	movwf	printf@f& (0+255),b
 18173  0036C8  0E7C               	movlw	high STR_32
 18174  0036CA  6F82               	movwf	(printf@f+1)& (0+255),b
 18175  0036CC  ECD3  F02B         	call	_printf	;wreg free
 18176                           
 18177                           ;conexaoWifi.h: 108: f_wifi_processo++;
 18178  0036D0  2A3D               	incf	_f_wifi_processo,f,c
 18179                           
 18180                           ;conexaoWifi.h: 109: break;
 18181  0036D2  0012               	return	
 18182  0036D4                     
 18183                           ;conexaoWifi.h: 111: if (strstr(bufferSerial, ">") != (0)) {
 18184  0036D4  0E55               	movlw	low _bufferSerial
 18185  0036D6  0100               	movlb	0	; () banked
 18186  0036D8  6F6F               	movwf	strstr@s1& (0+255),b
 18187  0036DA  0E02               	movlw	high _bufferSerial
 18188  0036DC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18189  0036DE  0E7B               	movlw	low (STR_116+18)
 18190  0036E0  6F71               	movwf	strstr@s2& (0+255),b
 18191  0036E2  0E7C               	movlw	high (STR_116+18)
 18192  0036E4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18193  0036E6  ECF5  F025         	call	_strstr	;wreg free
 18194  0036EA  0100               	movlb	0	; () banked
 18195  0036EC  516F               	movf	?_strstr& (0+255),w,b
 18196  0036EE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18197  0036F0  B4D8               	btfsc	status,2,c
 18198  0036F2  0012               	return	
 18199                           
 18200                           ; BSR set to: 0
 18201                           ;conexaoWifi.h: 112: f_wifi_processo++;
 18202  0036F4  2A3D               	incf	_f_wifi_processo,f,c
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;conexaoWifi.h: 113: }
 18206                           ;conexaoWifi.h: 114: break;
 18207  0036F6  0012               	return	
 18208  0036F8                     
 18209                           ;conexaoWifi.h: 116: setKeyStartReceiveSerial("ALL");
 18210                           
 18211                           ; BSR set to: 0
 18212  0036F8  0EDD               	movlw	low STR_10
 18213  0036FA  0100               	movlb	0	; () banked
 18214  0036FC  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18215  0036FE  0E7F               	movlw	high STR_10
 18216  003700  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18217  003702  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18218                           
 18219                           ;conexaoWifi.h: 117: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18220  003706  0E49               	movlw	low STR_35
 18221  003708  0100               	movlb	0	; () banked
 18222  00370A  6F81               	movwf	printf@f& (0+255),b
 18223  00370C  0E7B               	movlw	high STR_35
 18224  00370E  6F82               	movwf	(printf@f+1)& (0+255),b
 18225  003710  ECD3  F02B         	call	_printf	;wreg free
 18226                           
 18227                           ;conexaoWifi.h: 118: delay(100);
 18228  003714  0E00               	movlw	0
 18229  003716  0100               	movlb	0	; () banked
 18230  003718  6F61               	movwf	(delay@x+1)& (0+255),b
 18231  00371A  0E64               	movlw	100
 18232  00371C  6F60               	movwf	delay@x& (0+255),b
 18233  00371E  ECB3  F02C         	call	_delay	;wreg free
 18234                           
 18235                           ;conexaoWifi.h: 119: printf("<html><style>div{margin:25px auto;max-width:350px;display:f
      +                          lex;flex-direction:column;}input,button{padding:7px;margin-bottom:25px;border:1px solid 
      +                          #777;}</style><body><div> <h2>Configuração Wifi</h2> SSID: <input id='s'>Senha: <input i
      +                          d='p'><
 18236  003722  0EC1               	movlw	low STR_36
 18237  003724  0100               	movlb	0	; () banked
 18238  003726  6F81               	movwf	printf@f& (0+255),b
 18239  003728  0E78               	movlw	high STR_36
 18240  00372A  6F82               	movwf	(printf@f+1)& (0+255),b
 18241  00372C  ECD3  F02B         	call	_printf	;wreg free
 18242                           
 18243                           ;conexaoWifi.h: 120: delay(800);
 18244  003730  0E03               	movlw	3
 18245  003732  0100               	movlb	0	; () banked
 18246  003734  6F61               	movwf	(delay@x+1)& (0+255),b
 18247  003736  0E20               	movlw	32
 18248  003738  6F60               	movwf	delay@x& (0+255),b
 18249  00373A  ECB3  F02C         	call	_delay	;wreg free
 18250                           
 18251                           ;conexaoWifi.h: 121: printf("AT+CIPCLOSE=0\r\n");
 18252  00373E  0EFF               	movlw	low STR_37
 18253  003740  0100               	movlb	0	; () banked
 18254  003742  6F81               	movwf	printf@f& (0+255),b
 18255  003744  0E7D               	movlw	high STR_37
 18256  003746  6F82               	movwf	(printf@f+1)& (0+255),b
 18257  003748  ECD3  F02B         	call	_printf	;wreg free
 18258                           
 18259                           ;conexaoWifi.h: 122: delay(300);
 18260  00374C  0E01               	movlw	1
 18261  00374E  0100               	movlb	0	; () banked
 18262  003750  6F61               	movwf	(delay@x+1)& (0+255),b
 18263  003752  0E2C               	movlw	44
 18264  003754  6F60               	movwf	delay@x& (0+255),b
 18265  003756  ECB3  F02C         	call	_delay	;wreg free
 18266                           
 18267                           ;conexaoWifi.h: 123: t_wifi_restart = 180;
 18268  00375A  0EB4               	movlw	180
 18269  00375C  6E3E               	movwf	_t_wifi_restart,c
 18270                           
 18271                           ;conexaoWifi.h: 124: setKeyStartReceiveSerial("$#");
 18272  00375E  0EE5               	movlw	low STR_38
 18273  003760  0100               	movlb	0	; () banked
 18274  003762  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18275  003764  0E7F               	movlw	high STR_38
 18276  003766  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18277  003768  EC16  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18278                           
 18279                           ;conexaoWifi.h: 125: f_wifi_processo++;
 18280  00376C  2A3D               	incf	_f_wifi_processo,f,c
 18281                           
 18282                           ;conexaoWifi.h: 126: break;
 18283  00376E  0012               	return	
 18284  003770                     
 18285                           ;conexaoWifi.h: 128: sprintf(line4, "Aguardando...");
 18286  003770  0E66               	movlw	low _line4
 18287  003772  0100               	movlb	0	; () banked
 18288  003774  6F81               	movwf	sprintf@wh& (0+255),b
 18289  003776  0E01               	movlw	high _line4
 18290  003778  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18291  00377A  0E82               	movlw	low STR_39
 18292  00377C  6F83               	movwf	sprintf@f& (0+255),b
 18293  00377E  0E7E               	movlw	high STR_39
 18294  003780  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18295  003782  EC4F  F02B         	call	_sprintf	;wreg free
 18296                           
 18297                           ;conexaoWifi.h: 129: if (findBufferSerial("#$")) {
 18298  003786  0EE8               	movlw	low STR_40
 18299  003788  0100               	movlb	0	; () banked
 18300  00378A  6F74               	movwf	findBufferSerial@key& (0+255),b
 18301  00378C  0E7F               	movlw	high STR_40
 18302  00378E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18303  003790  ECDC  F02C         	call	_findBufferSerial	;wreg free
 18304  003794  0900               	iorlw	0
 18305  003796  B4D8               	btfsc	status,2,c
 18306  003798  0012               	return	
 18307                           
 18308                           ;conexaoWifi.h: 130: getStringJSON(bufferSerial, "ss", ssid);
 18309  00379A  0E55               	movlw	low _bufferSerial
 18310  00379C  0100               	movlb	0	; () banked
 18311  00379E  6F91               	movwf	getStringJSON@buff& (0+255),b
 18312  0037A0  0E02               	movlw	high _bufferSerial
 18313  0037A2  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18314  0037A4  0EF4               	movlw	low STR_41
 18315  0037A6  6F93               	movwf	getStringJSON@key& (0+255),b
 18316  0037A8  0E7F               	movlw	high STR_41
 18317  0037AA  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18318  0037AC  0EC9               	movlw	low _ssid
 18319  0037AE  6F95               	movwf	getStringJSON@ret& (0+255),b
 18320  0037B0  0E01               	movlw	high _ssid
 18321  0037B2  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18322  0037B4  EC0C  F020         	call	_getStringJSON	;wreg free
 18323                           
 18324                           ;conexaoWifi.h: 131: getStringJSON(bufferSerial, "pw", senha);
 18325  0037B8  0E55               	movlw	low _bufferSerial
 18326  0037BA  0100               	movlb	0	; () banked
 18327  0037BC  6F91               	movwf	getStringJSON@buff& (0+255),b
 18328  0037BE  0E02               	movlw	high _bufferSerial
 18329  0037C0  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18330  0037C2  0EF7               	movlw	low STR_42
 18331  0037C4  6F93               	movwf	getStringJSON@key& (0+255),b
 18332  0037C6  0E7F               	movlw	high STR_42
 18333  0037C8  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18334  0037CA  0EBA               	movlw	low _senha
 18335  0037CC  6F95               	movwf	getStringJSON@ret& (0+255),b
 18336  0037CE  0E01               	movlw	high _senha
 18337  0037D0  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18338  0037D2  EC0C  F020         	call	_getStringJSON	;wreg free
 18339                           
 18340                           ;conexaoWifi.h: 133: sprintf(line1, "%s", ssid);
 18341  0037D6  0EA5               	movlw	low _line1
 18342  0037D8  0100               	movlb	0	; () banked
 18343  0037DA  6F81               	movwf	sprintf@wh& (0+255),b
 18344  0037DC  0E01               	movlw	high _line1
 18345  0037DE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18346  0037E0  0E1F               	movlw	low (STR_91+7)
 18347  0037E2  6F83               	movwf	sprintf@f& (0+255),b
 18348  0037E4  0E7F               	movlw	high (STR_91+7)
 18349  0037E6  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18350  0037E8  0EC9               	movlw	low _ssid
 18351  0037EA  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18352  0037EC  0E01               	movlw	high _ssid
 18353  0037EE  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18354  0037F0  EC4F  F02B         	call	_sprintf	;wreg free
 18355                           
 18356                           ;conexaoWifi.h: 134: sprintf(line2, "%s", senha);
 18357  0037F4  0E90               	movlw	low _line2
 18358  0037F6  0100               	movlb	0	; () banked
 18359  0037F8  6F81               	movwf	sprintf@wh& (0+255),b
 18360  0037FA  0E01               	movlw	high _line2
 18361  0037FC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18362  0037FE  0E1F               	movlw	low (STR_91+7)
 18363  003800  6F83               	movwf	sprintf@f& (0+255),b
 18364  003802  0E7F               	movlw	high (STR_91+7)
 18365  003804  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18366  003806  0EBA               	movlw	low _senha
 18367  003808  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18368  00380A  0E01               	movlw	high _senha
 18369  00380C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18370  00380E  EC4F  F02B         	call	_sprintf	;wreg free
 18371                           
 18372                           ;conexaoWifi.h: 135: sprintf(line4, "OK reiniciando...");
 18373  003812  0E66               	movlw	low _line4
 18374  003814  0100               	movlb	0	; () banked
 18375  003816  6F81               	movwf	sprintf@wh& (0+255),b
 18376  003818  0E01               	movlw	high _line4
 18377  00381A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18378  00381C  0E2D               	movlw	low STR_45
 18379  00381E  6F83               	movwf	sprintf@f& (0+255),b
 18380  003820  0E7D               	movlw	high STR_45
 18381  003822  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18382  003824  EC4F  F02B         	call	_sprintf	;wreg free
 18383                           
 18384                           ;conexaoWifi.h: 136: atualizaLCD(line1, line2, line3, line4);
 18385  003828  0EA5               	movlw	low _line1
 18386  00382A  0100               	movlb	0	; () banked
 18387  00382C  6F68               	movwf	atualizaLCD@line1& (0+255),b
 18388  00382E  0E01               	movlw	high _line1
 18389  003830  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 18390  003832  0E90               	movlw	low _line2
 18391  003834  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 18392  003836  0E01               	movlw	high _line2
 18393  003838  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 18394  00383A  0E7B               	movlw	low _line3
 18395  00383C  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 18396  00383E  0E01               	movlw	high _line3
 18397  003840  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 18398  003842  0E66               	movlw	low _line4
 18399  003844  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 18400  003846  0E01               	movlw	high _line4
 18401  003848  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 18402  00384A  EC32  F025         	call	_atualizaLCD	;wreg free
 18403                           
 18404                           ;conexaoWifi.h: 138: if (strlen(ssid) > 3) {
 18405  00384E  0EC9               	movlw	low _ssid
 18406  003850  0100               	movlb	0	; () banked
 18407  003852  6F60               	movwf	strlen@s& (0+255),b
 18408  003854  0E01               	movlw	high _ssid
 18409  003856  6F61               	movwf	(strlen@s+1)& (0+255),b
 18410  003858  EC84  F02A         	call	_strlen	;wreg free
 18411  00385C  0100               	movlb	0	; () banked
 18412  00385E  5161               	movf	(?_strlen+1)& (0+255),w,b
 18413  003860  E104               	bnz	u12870
 18414  003862  0E04               	movlw	4
 18415  003864  5D60               	subwf	?_strlen& (0+255),w,b
 18416  003866  A0D8               	btfss	status,0,c
 18417  003868  D030               	goto	u12910
 18418  00386A                     u12870:
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;conexaoWifi.h: 139: unsigned char i = 0;
 18422  00386A  0E00               	movlw	0
 18423  00386C  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18424                           
 18425                           ;conexaoWifi.h: 140: for (i = 0; i < 15; i++) {
 18426  00386E  0E00               	movlw	0
 18427  003870  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18428  003872                     l8639:
 18429                           
 18430                           ; BSR set to: 0
 18431  003872  0E0E               	movlw	14
 18432  003874  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18433  003876  D001               	goto	l1008
 18434  003878  D011               	goto	u12890
 18435  00387A                     l1008:
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;conexaoWifi.h: 141: writeEEPROM_ext((40 + i), ssid[i]);
 18439                           
 18440                           ; BSR set to: 0
 18441  00387A  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18442  00387C  0D01               	mullw	1
 18443  00387E  0EC9               	movlw	low _ssid
 18444  003880  24F3               	addwf	prodl,w,c
 18445  003882  6ED9               	movwf	fsr2l,c
 18446  003884  0E01               	movlw	high _ssid
 18447  003886  20F4               	addwfc	prodh,w,c
 18448  003888  6EDA               	movwf	fsr2h,c
 18449  00388A  50DF               	movf	indf2,w,c
 18450  00388C  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18451  00388E  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18452  003890  0F28               	addlw	40
 18453  003892  EC93  F02B         	call	_writeEEPROM_ext
 18454  003896  0100               	movlb	0	; () banked
 18455  003898  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18456  00389A  D7EB               	goto	l8639
 18457  00389C                     u12890:
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;conexaoWifi.h: 142: }
 18461                           ;conexaoWifi.h: 143: for (i = 0; i < 15; i++) {
 18462                           
 18463                           ; BSR set to: 0
 18464  00389C  0E00               	movlw	0
 18465  00389E  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18466  0038A0                     l8651:
 18467                           
 18468                           ; BSR set to: 0
 18469  0038A0  0E0E               	movlw	14
 18470  0038A2  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18471  0038A4  D001               	goto	l1010
 18472  0038A6  D011               	goto	u12910
 18473  0038A8                     l1010:
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;conexaoWifi.h: 144: writeEEPROM_ext((60 + i), senha[i]);
 18477                           
 18478                           ; BSR set to: 0
 18479  0038A8  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18480  0038AA  0D01               	mullw	1
 18481  0038AC  0EBA               	movlw	low _senha
 18482  0038AE  24F3               	addwf	prodl,w,c
 18483  0038B0  6ED9               	movwf	fsr2l,c
 18484  0038B2  0E01               	movlw	high _senha
 18485  0038B4  20F4               	addwfc	prodh,w,c
 18486  0038B6  6EDA               	movwf	fsr2h,c
 18487  0038B8  50DF               	movf	indf2,w,c
 18488  0038BA  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18489  0038BC  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18490  0038BE  0F3C               	addlw	60
 18491  0038C0  EC93  F02B         	call	_writeEEPROM_ext
 18492  0038C4  0100               	movlb	0	; () banked
 18493  0038C6  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18494  0038C8  D7EB               	goto	l8651
 18495  0038CA                     u12910:
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;conexaoWifi.h: 145: }
 18499                           ;conexaoWifi.h: 146: }
 18500                           ;conexaoWifi.h: 147: while (1) {
 18501                           
 18502                           ; BSR set to: 0
 18503  0038CA  D7FF               	goto	u12910
 18504  0038CC  0E00               	movlw	0
 18505  0038CE  6E3D               	movwf	_f_wifi_processo,c
 18506                           
 18507                           ;conexaoWifi.h: 152: }
 18508  0038D0  0012               	return	
 18509  0038D2                     l982:
 18510  0038D2  503D               	movf	_f_wifi_processo,w,c
 18511                           
 18512                           ; Switch size 1, requested type "space"
 18513                           ; Number of cases is 15, Range of values is 0 to 14
 18514                           ; switch strategies available:
 18515                           ; Name         Instructions Cycles
 18516                           ; simple_byte           46    24 (average)
 18517                           ;	Chosen strategy is simple_byte
 18518  0038D4  0A00               	xorlw	0	; case 0
 18519  0038D6  B4D8               	btfsc	status,2,c
 18520  0038D8  D617               	goto	l983
 18521  0038DA  0A01               	xorlw	1	; case 1
 18522  0038DC  B4D8               	btfsc	status,2,c
 18523  0038DE  D626               	goto	l985
 18524  0038E0  0A03               	xorlw	3	; case 2
 18525  0038E2  B4D8               	btfsc	status,2,c
 18526  0038E4  D62F               	goto	l987
 18527  0038E6  0A01               	xorlw	1	; case 3
 18528  0038E8  B4D8               	btfsc	status,2,c
 18529  0038EA  D63C               	goto	l988
 18530  0038EC  0A07               	xorlw	7	; case 4
 18531  0038EE  B4D8               	btfsc	status,2,c
 18532  0038F0  D645               	goto	l990
 18533  0038F2  0A01               	xorlw	1	; case 5
 18534  0038F4  B4D8               	btfsc	status,2,c
 18535  0038F6  D652               	goto	l991
 18536  0038F8  0A03               	xorlw	3	; case 6
 18537  0038FA  B4D8               	btfsc	status,2,c
 18538  0038FC  D65B               	goto	l993
 18539  0038FE  0A01               	xorlw	1	; case 7
 18540  003900  B4D8               	btfsc	status,2,c
 18541  003902  D668               	goto	l994
 18542  003904  0A0F               	xorlw	15	; case 8
 18543  003906  B4D8               	btfsc	status,2,c
 18544  003908  D671               	goto	l996
 18545  00390A  0A01               	xorlw	1	; case 9
 18546  00390C  B4D8               	btfsc	status,2,c
 18547  00390E  D67E               	goto	l997
 18548  003910  0A03               	xorlw	3	; case 10
 18549  003912  B4D8               	btfsc	status,2,c
 18550  003914  D690               	goto	l999
 18551  003916  0A01               	xorlw	1	; case 11
 18552  003918  B4D8               	btfsc	status,2,c
 18553  00391A  D6CC               	goto	l1001
 18554  00391C  0A07               	xorlw	7	; case 12
 18555  00391E  B4D8               	btfsc	status,2,c
 18556  003920  D6D9               	goto	l1002
 18557  003922  0A01               	xorlw	1	; case 13
 18558  003924  B4D8               	btfsc	status,2,c
 18559  003926  D6E8               	goto	l1004
 18560  003928  0A03               	xorlw	3	; case 14
 18561  00392A  B4D8               	btfsc	status,2,c
 18562  00392C  D721               	goto	l1005
 18563  00392E  D7CE               	goto	l1015
 18564  003930                     __end_of_alterarDadosConexaoConfigWifi:
 18565                           	opt stack 0
 18566                           tblptru	equ	0xFF8
 18567                           tblptrh	equ	0xFF7
 18568                           tblptrl	equ	0xFF6
 18569                           tablat	equ	0xFF5
 18570                           prodh	equ	0xFF4
 18571                           prodl	equ	0xFF3
 18572                           intcon	equ	0xFF2
 18573                           intcon2	equ	0xFF1
 18574                           intcon3	equ	0xFF0
 18575                           postinc0	equ	0xFEE
 18576                           wreg	equ	0xFE8
 18577                           indf1	equ	0xFE7
 18578                           postdec1	equ	0xFE5
 18579                           fsr1h	equ	0xFE2
 18580                           fsr1l	equ	0xFE1
 18581                           indf2	equ	0xFDF
 18582                           postinc2	equ	0xFDE
 18583                           postdec2	equ	0xFDD
 18584                           fsr2h	equ	0xFDA
 18585                           fsr2l	equ	0xFD9
 18586                           status	equ	0xFD8
 18587                           
 18588 ;; *************** function _writeEEPROM_ext *****************
 18589 ;; Defined at:
 18590 ;;		line 14 in file "src/Eeprom_ext.h"
 18591 ;; Parameters:    Size  Location     Type
 18592 ;;  adress          1    wreg     unsigned char 
 18593 ;;  data            1    3[BANK0 ] unsigned char 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;  adress          1    4[BANK0 ] unsigned char 
 18596 ;; Return value:  Size  Location     Type
 18597 ;;                  1    wreg      void 
 18598 ;; Registers used:
 18599 ;;		wreg, status,2, status,0, cstack
 18600 ;; Tracked objects:
 18601 ;;		On entry : 0/0
 18602 ;;		On exit  : 0/0
 18603 ;;		Unchanged: 0/0
 18604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18605 ;;      Params:         0       1       0       0       0       0       0       0       0
 18606 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18608 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18609 ;;Total ram usage:        2 bytes
 18610 ;; Hardware stack levels used:    1
 18611 ;; Hardware stack levels required when called:    8
 18612 ;; This function calls:
 18613 ;;		_I2C_Start
 18614 ;;		_I2C_Stop
 18615 ;;		_I2C_Write
 18616 ;;		_delay
 18617 ;; This function is called by:
 18618 ;;		_setUmidade
 18619 ;;		_setRangeValor
 18620 ;;		_alterarDadosConexaoConfigWifi
 18621 ;;		_main
 18622 ;;		_writeEEPROM16_ext
 18623 ;; This function uses a non-reentrant model
 18624 ;;
 18625                           
 18626                           	psect	text28
 18627  005726                     __ptext28:
 18628                           	opt stack 0
 18629  005726                     _writeEEPROM_ext:
 18630                           	opt stack 22
 18631                           
 18632                           ;incstack = 0
 18633                           ;writeEEPROM_ext@adress stored from wreg
 18634  005726  0100               	movlb	0	; () banked
 18635  005728  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 18636                           
 18637                           ;Eeprom_ext.h: 16: I2C_Start();
 18638  00572A  ECB1  F02D         	call	_I2C_Start	;wreg free
 18639                           
 18640                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 18641  00572E  0E00               	movlw	0
 18642  005730  0100               	movlb	0	; () banked
 18643  005732  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 18644  005734  0EA0               	movlw	160
 18645  005736  6F61               	movwf	I2C_Write@d& (0+255),b
 18646  005738  EC9F  F02D         	call	_I2C_Write	;wreg free
 18647                           
 18648                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 18649  00573C  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 18650  005740  0100               	movlb	0	; () banked
 18651  005742  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18652  005744  EC9F  F02D         	call	_I2C_Write	;wreg free
 18653                           
 18654                           ;Eeprom_ext.h: 20: I2C_Write(data);
 18655  005748  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 18656  00574C  0100               	movlb	0	; () banked
 18657  00574E  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18658  005750  EC9F  F02D         	call	_I2C_Write	;wreg free
 18659                           
 18660                           ;Eeprom_ext.h: 21: I2C_Stop();
 18661  005754  ECAD  F02D         	call	_I2C_Stop	;wreg free
 18662                           
 18663                           ;Eeprom_ext.h: 22: delay(105);
 18664  005758  0E00               	movlw	0
 18665  00575A  0100               	movlb	0	; () banked
 18666  00575C  6F61               	movwf	(delay@x+1)& (0+255),b
 18667  00575E  0E69               	movlw	105
 18668  005760  6F60               	movwf	delay@x& (0+255),b
 18669  005762  ECB3  F02C         	call	_delay	;wreg free
 18670  005766  0012               	return		;funcret
 18671  005768                     __end_of_writeEEPROM_ext:
 18672                           	opt stack 0
 18673                           tblptru	equ	0xFF8
 18674                           tblptrh	equ	0xFF7
 18675                           tblptrl	equ	0xFF6
 18676                           tablat	equ	0xFF5
 18677                           prodh	equ	0xFF4
 18678                           prodl	equ	0xFF3
 18679                           intcon	equ	0xFF2
 18680                           intcon2	equ	0xFF1
 18681                           intcon3	equ	0xFF0
 18682                           postinc0	equ	0xFEE
 18683                           wreg	equ	0xFE8
 18684                           indf1	equ	0xFE7
 18685                           postdec1	equ	0xFE5
 18686                           fsr1h	equ	0xFE2
 18687                           fsr1l	equ	0xFE1
 18688                           indf2	equ	0xFDF
 18689                           postinc2	equ	0xFDE
 18690                           postdec2	equ	0xFDD
 18691                           fsr2h	equ	0xFDA
 18692                           fsr2l	equ	0xFD9
 18693                           status	equ	0xFD8
 18694                           
 18695 ;; *************** function _delay *****************
 18696 ;; Defined at:
 18697 ;;		line 18 in file "src/function.c"
 18698 ;; Parameters:    Size  Location     Type
 18699 ;;  x               2    0[BANK0 ] int 
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;		None
 18702 ;; Return value:  Size  Location     Type
 18703 ;;                  1    wreg      void 
 18704 ;; Registers used:
 18705 ;;		wreg, status,2, status,0
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18711 ;;      Params:         0       2       0       0       0       0       0       0       0
 18712 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18713 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18714 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18715 ;;Total ram usage:        3 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; Hardware stack levels required when called:    6
 18718 ;; This function calls:
 18719 ;;		Nothing
 18720 ;; This function is called by:
 18721 ;;		_writeEEPROM_ext
 18722 ;;		_alterarDadosConexaoConfigWifi
 18723 ;;		_enviaDadosWifi
 18724 ;;		_main
 18725 ;; This function uses a non-reentrant model
 18726 ;;
 18727                           
 18728                           	psect	text29
 18729  005966                     __ptext29:
 18730                           	opt stack 0
 18731  005966                     _delay:
 18732                           	opt stack 23
 18733                           
 18734                           ;function.c: 19: while (x--) {
 18735                           
 18736                           ;incstack = 0
 18737  005966  D00A               	goto	l1472
 18738  005968                     l6585:
 18739                           
 18740                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 18741  005968  0E03               	movlw	3
 18742  00596A  0100               	movlb	0	; () banked
 18743  00596C  6F62               	movwf	??_delay& (0+255),b
 18744  00596E  0E97               	movlw	151
 18745  005970                     u15377:
 18746  005970  2EE8               	decfsz	wreg,f,c
 18747  005972  D7FE               	bra	u15377
 18748  005974  2F62               	decfsz	??_delay& (0+255),f,b
 18749  005976  D7FC               	bra	u15377
 18750  005978  D000               	nop2	
 18751  00597A  0004               	clrwdt		;# 
 18752  00597C                     l1472:
 18753  00597C  0100               	movlb	0	; () banked
 18754  00597E  0760               	decf	delay@x& (0+255),f,b
 18755  005980  A0D8               	btfss	status,0,c
 18756  005982  0761               	decf	(delay@x+1)& (0+255),f,b
 18757  005984  2960               	incf	delay@x& (0+255),w,b
 18758  005986  E1F0               	bnz	l6585
 18759  005988  2961               	incf	(delay@x+1)& (0+255),w,b
 18760  00598A  B4D8               	btfsc	status,2,c
 18761  00598C  0012               	return	
 18762  00598E  D7EC               	goto	l1473
 18763  005990                     __end_of_delay:
 18764                           	opt stack 0
 18765                           tblptru	equ	0xFF8
 18766                           tblptrh	equ	0xFF7
 18767                           tblptrl	equ	0xFF6
 18768                           tablat	equ	0xFF5
 18769                           prodh	equ	0xFF4
 18770                           prodl	equ	0xFF3
 18771                           intcon	equ	0xFF2
 18772                           intcon2	equ	0xFF1
 18773                           intcon3	equ	0xFF0
 18774                           postinc0	equ	0xFEE
 18775                           wreg	equ	0xFE8
 18776                           indf1	equ	0xFE7
 18777                           postdec1	equ	0xFE5
 18778                           fsr1h	equ	0xFE2
 18779                           fsr1l	equ	0xFE1
 18780                           indf2	equ	0xFDF
 18781                           postinc2	equ	0xFDE
 18782                           postdec2	equ	0xFDD
 18783                           fsr2h	equ	0xFDA
 18784                           fsr2l	equ	0xFD9
 18785                           status	equ	0xFD8
 18786                           
 18787 ;; *************** function _I2C_Write *****************
 18788 ;; Defined at:
 18789 ;;		line 41 in file "src/I2C.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;  d               2    1[BANK0 ] unsigned int 
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;		None
 18794 ;; Return value:  Size  Location     Type
 18795 ;;                  1    wreg      void 
 18796 ;; Registers used:
 18797 ;;		wreg, status,2, status,0, cstack
 18798 ;; Tracked objects:
 18799 ;;		On entry : 0/0
 18800 ;;		On exit  : 0/0
 18801 ;;		Unchanged: 0/0
 18802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18803 ;;      Params:         0       2       0       0       0       0       0       0       0
 18804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18806 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18807 ;;Total ram usage:        2 bytes
 18808 ;; Hardware stack levels used:    1
 18809 ;; Hardware stack levels required when called:    7
 18810 ;; This function calls:
 18811 ;;		_I2C_Wait
 18812 ;; This function is called by:
 18813 ;;		_updateLeds
 18814 ;;		_writeEEPROM_ext
 18815 ;;		_readEEPROM_ext
 18816 ;; This function uses a non-reentrant model
 18817 ;;
 18818                           
 18819                           	psect	text30
 18820  005B3E                     __ptext30:
 18821                           	opt stack 0
 18822  005B3E                     _I2C_Write:
 18823                           	opt stack 22
 18824                           
 18825                           ;I2C.c: 42: I2C_Wait();
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;incstack = 0
 18829  005B3E  EC78  F02D         	call	_I2C_Wait	;wreg free
 18830                           
 18831                           ;I2C.c: 43: SSPBUF = d;
 18832  005B42  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 18833  005B46  0012               	return		;funcret
 18834  005B48                     __end_of_I2C_Write:
 18835                           	opt stack 0
 18836                           tblptru	equ	0xFF8
 18837                           tblptrh	equ	0xFF7
 18838                           tblptrl	equ	0xFF6
 18839                           tablat	equ	0xFF5
 18840                           prodh	equ	0xFF4
 18841                           prodl	equ	0xFF3
 18842                           intcon	equ	0xFF2
 18843                           intcon2	equ	0xFF1
 18844                           intcon3	equ	0xFF0
 18845                           postinc0	equ	0xFEE
 18846                           wreg	equ	0xFE8
 18847                           indf1	equ	0xFE7
 18848                           postdec1	equ	0xFE5
 18849                           fsr1h	equ	0xFE2
 18850                           fsr1l	equ	0xFE1
 18851                           indf2	equ	0xFDF
 18852                           postinc2	equ	0xFDE
 18853                           postdec2	equ	0xFDD
 18854                           fsr2h	equ	0xFDA
 18855                           fsr2l	equ	0xFD9
 18856                           status	equ	0xFD8
 18857                           
 18858 ;; *************** function _I2C_Stop *****************
 18859 ;; Defined at:
 18860 ;;		line 35 in file "src/I2C.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;		None
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;		None
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  1    wreg      void 
 18867 ;; Registers used:
 18868 ;;		wreg, status,2, status,0, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18874 ;;      Params:         0       0       0       0       0       0       0       0       0
 18875 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18877 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18878 ;;Total ram usage:        0 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:    7
 18881 ;; This function calls:
 18882 ;;		_I2C_Wait
 18883 ;; This function is called by:
 18884 ;;		_updateLeds
 18885 ;;		_writeEEPROM_ext
 18886 ;;		_readEEPROM_ext
 18887 ;; This function uses a non-reentrant model
 18888 ;;
 18889                           
 18890                           	psect	text31
 18891  005B5A                     __ptext31:
 18892                           	opt stack 0
 18893  005B5A                     _I2C_Stop:
 18894                           	opt stack 22
 18895                           
 18896                           ;I2C.c: 36: I2C_Wait();
 18897                           
 18898                           ;incstack = 0
 18899  005B5A  EC78  F02D         	call	_I2C_Wait	;wreg free
 18900                           
 18901                           ;I2C.c: 37: PEN = 1;
 18902  005B5E  84C5               	bsf	4037,2,c	;volatile
 18903  005B60  0012               	return		;funcret
 18904  005B62                     __end_of_I2C_Stop:
 18905                           	opt stack 0
 18906                           tblptru	equ	0xFF8
 18907                           tblptrh	equ	0xFF7
 18908                           tblptrl	equ	0xFF6
 18909                           tablat	equ	0xFF5
 18910                           prodh	equ	0xFF4
 18911                           prodl	equ	0xFF3
 18912                           intcon	equ	0xFF2
 18913                           intcon2	equ	0xFF1
 18914                           intcon3	equ	0xFF0
 18915                           postinc0	equ	0xFEE
 18916                           wreg	equ	0xFE8
 18917                           indf1	equ	0xFE7
 18918                           postdec1	equ	0xFE5
 18919                           fsr1h	equ	0xFE2
 18920                           fsr1l	equ	0xFE1
 18921                           indf2	equ	0xFDF
 18922                           postinc2	equ	0xFDE
 18923                           postdec2	equ	0xFDD
 18924                           fsr2h	equ	0xFDA
 18925                           fsr2l	equ	0xFD9
 18926                           status	equ	0xFD8
 18927                           
 18928 ;; *************** function _I2C_Start *****************
 18929 ;; Defined at:
 18930 ;;		line 25 in file "src/I2C.c"
 18931 ;; Parameters:    Size  Location     Type
 18932 ;;		None
 18933 ;; Auto vars:     Size  Location     Type
 18934 ;;		None
 18935 ;; Return value:  Size  Location     Type
 18936 ;;                  1    wreg      void 
 18937 ;; Registers used:
 18938 ;;		wreg, status,2, status,0, cstack
 18939 ;; Tracked objects:
 18940 ;;		On entry : 0/0
 18941 ;;		On exit  : 0/0
 18942 ;;		Unchanged: 0/0
 18943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18944 ;;      Params:         0       0       0       0       0       0       0       0       0
 18945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18947 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18948 ;;Total ram usage:        0 bytes
 18949 ;; Hardware stack levels used:    1
 18950 ;; Hardware stack levels required when called:    7
 18951 ;; This function calls:
 18952 ;;		_I2C_Wait
 18953 ;; This function is called by:
 18954 ;;		_updateLeds
 18955 ;;		_writeEEPROM_ext
 18956 ;;		_readEEPROM_ext
 18957 ;; This function uses a non-reentrant model
 18958 ;;
 18959                           
 18960                           	psect	text32
 18961  005B62                     __ptext32:
 18962                           	opt stack 0
 18963  005B62                     _I2C_Start:
 18964                           	opt stack 22
 18965                           
 18966                           ;I2C.c: 26: I2C_Wait();
 18967                           
 18968                           ;incstack = 0
 18969  005B62  EC78  F02D         	call	_I2C_Wait	;wreg free
 18970                           
 18971                           ;I2C.c: 27: SEN = 1;
 18972  005B66  80C5               	bsf	4037,0,c	;volatile
 18973  005B68  0012               	return		;funcret
 18974  005B6A                     __end_of_I2C_Start:
 18975                           	opt stack 0
 18976                           tblptru	equ	0xFF8
 18977                           tblptrh	equ	0xFF7
 18978                           tblptrl	equ	0xFF6
 18979                           tablat	equ	0xFF5
 18980                           prodh	equ	0xFF4
 18981                           prodl	equ	0xFF3
 18982                           intcon	equ	0xFF2
 18983                           intcon2	equ	0xFF1
 18984                           intcon3	equ	0xFF0
 18985                           postinc0	equ	0xFEE
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postdec1	equ	0xFE5
 18989                           fsr1h	equ	0xFE2
 18990                           fsr1l	equ	0xFE1
 18991                           indf2	equ	0xFDF
 18992                           postinc2	equ	0xFDE
 18993                           postdec2	equ	0xFDD
 18994                           fsr2h	equ	0xFDA
 18995                           fsr2l	equ	0xFD9
 18996                           status	equ	0xFD8
 18997                           
 18998 ;; *************** function _I2C_Wait *****************
 18999 ;; Defined at:
 19000 ;;		line 21 in file "src/I2C.c"
 19001 ;; Parameters:    Size  Location     Type
 19002 ;;		None
 19003 ;; Auto vars:     Size  Location     Type
 19004 ;;		None
 19005 ;; Return value:  Size  Location     Type
 19006 ;;                  1    wreg      void 
 19007 ;; Registers used:
 19008 ;;		wreg, status,2, status,0
 19009 ;; Tracked objects:
 19010 ;;		On entry : 0/0
 19011 ;;		On exit  : 0/0
 19012 ;;		Unchanged: 0/0
 19013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19014 ;;      Params:         0       0       0       0       0       0       0       0       0
 19015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19016 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19017 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19018 ;;Total ram usage:        1 bytes
 19019 ;; Hardware stack levels used:    1
 19020 ;; Hardware stack levels required when called:    6
 19021 ;; This function calls:
 19022 ;;		Nothing
 19023 ;; This function is called by:
 19024 ;;		_I2C_Start
 19025 ;;		_I2C_Restart
 19026 ;;		_I2C_Stop
 19027 ;;		_I2C_Write
 19028 ;;		_I2C_Read
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text33
 19033  005AF0                     __ptext33:
 19034                           	opt stack 0
 19035  005AF0                     _I2C_Wait:
 19036                           	opt stack 22
 19037                           
 19038                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19039                           
 19040                           ;incstack = 0
 19041  005AF0  B4C7               	btfsc	4039,2,c	;volatile
 19042  005AF2  D7FE               	goto	_I2C_Wait
 19043  005AF4  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19044  005AF8  0E1F               	movlw	31
 19045  005AFA  0100               	movlb	0	; () banked
 19046  005AFC  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19047  005AFE  B4D8               	btfsc	status,2,c
 19048  005B00  0012               	return	
 19049  005B02  D7F6               	goto	_I2C_Wait
 19050  005B04                     __end_of_I2C_Wait:
 19051                           	opt stack 0
 19052                           tblptru	equ	0xFF8
 19053                           tblptrh	equ	0xFF7
 19054                           tblptrl	equ	0xFF6
 19055                           tablat	equ	0xFF5
 19056                           prodh	equ	0xFF4
 19057                           prodl	equ	0xFF3
 19058                           intcon	equ	0xFF2
 19059                           intcon2	equ	0xFF1
 19060                           intcon3	equ	0xFF0
 19061                           postinc0	equ	0xFEE
 19062                           wreg	equ	0xFE8
 19063                           indf1	equ	0xFE7
 19064                           postdec1	equ	0xFE5
 19065                           fsr1h	equ	0xFE2
 19066                           fsr1l	equ	0xFE1
 19067                           indf2	equ	0xFDF
 19068                           postinc2	equ	0xFDE
 19069                           postdec2	equ	0xFDD
 19070                           fsr2h	equ	0xFDA
 19071                           fsr2l	equ	0xFD9
 19072                           status	equ	0xFD8
 19073                           
 19074 ;; *************** function _setKeyStartReceiveSerial *****************
 19075 ;; Defined at:
 19076 ;;		line 6 in file "src/serial.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;  start           2   49[BANK0 ] PTR unsigned char 
 19079 ;;		 -> STR_74(4), STR_70(4), STR_65(4), STR_62(4), 
 19080 ;;		 -> STR_59(4), STR_55(4), STR_53(4), STR_49(4), 
 19081 ;;		 -> STR_46(4), STR_38(3), STR_34(4), STR_31(4), 
 19082 ;;		 -> STR_25(7), STR_22(4), STR_19(4), STR_16(4), 
 19083 ;;		 -> STR_13(4), STR_10(4), 
 19084 ;; Auto vars:     Size  Location     Type
 19085 ;;		None
 19086 ;; Return value:  Size  Location     Type
 19087 ;;                  1    wreg      void 
 19088 ;; Registers used:
 19089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19090 ;; Tracked objects:
 19091 ;;		On entry : 0/0
 19092 ;;		On exit  : 0/0
 19093 ;;		Unchanged: 0/0
 19094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19095 ;;      Params:         0       2       0       0       0       0       0       0       0
 19096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19098 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19099 ;;Total ram usage:        2 bytes
 19100 ;; Hardware stack levels used:    1
 19101 ;; Hardware stack levels required when called:    9
 19102 ;; This function calls:
 19103 ;;		_memset
 19104 ;;		_sprintf
 19105 ;;		_strstr
 19106 ;; This function is called by:
 19107 ;;		_alterarDadosConexaoConfigWifi
 19108 ;;		_enviaDadosWifi
 19109 ;; This function uses a non-reentrant model
 19110 ;;
 19111                           
 19112                           	psect	text34
 19113  00542C                     __ptext34:
 19114                           	opt stack 0
 19115  00542C                     _setKeyStartReceiveSerial:
 19116                           	opt stack 20
 19117                           
 19118                           ;serial.c: 7: _BF_enable_receive = 0;
 19119                           
 19120                           ; BSR set to: 0
 19121                           ;incstack = 0
 19122  00542C  0E00               	movlw	0
 19123  00542E  6E41               	movwf	__BF_enable_receive,c
 19124                           
 19125                           ;serial.c: 8: _BF_i_count = 0;
 19126  005430  0E00               	movlw	0
 19127  005432  6E40               	movwf	__BF_i_count,c
 19128                           
 19129                           ;serial.c: 9: _BF_current = 0;
 19130  005434  0E00               	movlw	0
 19131  005436  6E3F               	movwf	__BF_current,c
 19132                           
 19133                           ;serial.c: 10: memset(bufferSerial, 0, sizeof (bufferSerial));
 19134  005438  0E55               	movlw	low _bufferSerial
 19135  00543A  0100               	movlb	0	; () banked
 19136  00543C  6F60               	movwf	memset@p1& (0+255),b
 19137  00543E  0E02               	movlw	high _bufferSerial
 19138  005440  6F61               	movwf	(memset@p1+1)& (0+255),b
 19139  005442  0E00               	movlw	0
 19140  005444  6F63               	movwf	(memset@c+1)& (0+255),b
 19141  005446  0E00               	movlw	0
 19142  005448  6F62               	movwf	memset@c& (0+255),b
 19143  00544A  0E00               	movlw	0
 19144  00544C  6F65               	movwf	(memset@n+1)& (0+255),b
 19145  00544E  0E64               	movlw	100
 19146  005450  6F64               	movwf	memset@n& (0+255),b
 19147  005452  EC55  F02C         	call	_memset	;wreg free
 19148                           
 19149                           ;serial.c: 11: sprintf(_BF_start, "%s", start);
 19150  005456  0ED8               	movlw	low __BF_start
 19151  005458  0100               	movlb	0	; () banked
 19152  00545A  6F81               	movwf	sprintf@wh& (0+255),b
 19153  00545C  0E01               	movlw	high __BF_start
 19154  00545E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19155  005460  0E1F               	movlw	low (STR_91+7)
 19156  005462  6F83               	movwf	sprintf@f& (0+255),b
 19157  005464  0E7F               	movlw	high (STR_91+7)
 19158  005466  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19159  005468  C091  F085         	movff	setKeyStartReceiveSerial@start,?_sprintf+4
 19160  00546C  C092  F086         	movff	setKeyStartReceiveSerial@start+1,?_sprintf+5
 19161  005470  EC4F  F02B         	call	_sprintf	;wreg free
 19162                           
 19163                           ;serial.c: 12: if(strstr("ALL", start)){
 19164  005474  0EDD               	movlw	low STR_10
 19165  005476  0100               	movlb	0	; () banked
 19166  005478  6F6F               	movwf	strstr@s1& (0+255),b
 19167  00547A  0E7F               	movlw	high STR_10
 19168  00547C  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19169  00547E  C091  F071         	movff	setKeyStartReceiveSerial@start,strstr@s2
 19170  005482  C092  F072         	movff	setKeyStartReceiveSerial@start+1,strstr@s2+1
 19171  005486  ECF5  F025         	call	_strstr	;wreg free
 19172  00548A  0100               	movlb	0	; () banked
 19173  00548C  516F               	movf	?_strstr& (0+255),w,b
 19174  00548E  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19175  005490  B4D8               	btfsc	status,2,c
 19176  005492  0012               	return	
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;serial.c: 13: _BF_enable_receive = 1;
 19180  005494  0E01               	movlw	1
 19181  005496  6E41               	movwf	__BF_enable_receive,c
 19182  005498  0012               	return	
 19183  00549A                     __end_of_setKeyStartReceiveSerial:
 19184                           	opt stack 0
 19185                           tblptru	equ	0xFF8
 19186                           tblptrh	equ	0xFF7
 19187                           tblptrl	equ	0xFF6
 19188                           tablat	equ	0xFF5
 19189                           prodh	equ	0xFF4
 19190                           prodl	equ	0xFF3
 19191                           intcon	equ	0xFF2
 19192                           intcon2	equ	0xFF1
 19193                           intcon3	equ	0xFF0
 19194                           postinc0	equ	0xFEE
 19195                           wreg	equ	0xFE8
 19196                           indf1	equ	0xFE7
 19197                           postdec1	equ	0xFE5
 19198                           fsr1h	equ	0xFE2
 19199                           fsr1l	equ	0xFE1
 19200                           indf2	equ	0xFDF
 19201                           postinc2	equ	0xFDE
 19202                           postdec2	equ	0xFDD
 19203                           fsr2h	equ	0xFDA
 19204                           fsr2l	equ	0xFD9
 19205                           status	equ	0xFD8
 19206                           
 19207 ;; *************** function _memset *****************
 19208 ;; Defined at:
 19209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;  p1              2    0[BANK0 ] PTR void 
 19212 ;;		 -> bufferSerial(100), 
 19213 ;;  c               2    2[BANK0 ] int 
 19214 ;;  n               2    4[BANK0 ] unsigned int 
 19215 ;; Auto vars:     Size  Location     Type
 19216 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19217 ;;		 -> bufferSerial(100), 
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  2    0[BANK0 ] PTR void 
 19220 ;; Registers used:
 19221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19227 ;;      Params:         0       6       0       0       0       0       0       0       0
 19228 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19230 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19231 ;;Total ram usage:        8 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:    6
 19234 ;; This function calls:
 19235 ;;		Nothing
 19236 ;; This function is called by:
 19237 ;;		_setKeyStartReceiveSerial
 19238 ;; This function uses a non-reentrant model
 19239 ;;
 19240                           
 19241                           	psect	text35
 19242  0058AA                     __ptext35:
 19243                           	opt stack 0
 19244  0058AA                     _memset:
 19245                           	opt stack 22
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;incstack = 0
 19249  0058AA  C060  F066         	movff	memset@p1,memset@p
 19250  0058AE  C061  F067         	movff	memset@p1+1,memset@p+1
 19251  0058B2  D009               	goto	l2123
 19252  0058B4                     l6617:
 19253  0058B4  C066  FFD9         	movff	memset@p,fsr2l
 19254  0058B8  C067  FFDA         	movff	memset@p+1,fsr2h
 19255  0058BC  C062  FFDF         	movff	memset@c,indf2
 19256  0058C0  0100               	movlb	0	; () banked
 19257  0058C2  4B66               	infsnz	memset@p& (0+255),f,b
 19258  0058C4  2B67               	incf	(memset@p+1)& (0+255),f,b
 19259  0058C6                     l2123:
 19260                           
 19261                           ; BSR set to: 0
 19262  0058C6  0100               	movlb	0	; () banked
 19263  0058C8  0764               	decf	memset@n& (0+255),f,b
 19264  0058CA  A0D8               	btfss	status,0,c
 19265  0058CC  0765               	decf	(memset@n+1)& (0+255),f,b
 19266  0058CE  2964               	incf	memset@n& (0+255),w,b
 19267  0058D0  E1F1               	bnz	l6617
 19268  0058D2  2965               	incf	(memset@n+1)& (0+255),w,b
 19269  0058D4  B4D8               	btfsc	status,2,c
 19270  0058D6  0012               	return	
 19271  0058D8  D7ED               	goto	l2124
 19272  0058DA                     __end_of_memset:
 19273                           	opt stack 0
 19274                           tblptru	equ	0xFF8
 19275                           tblptrh	equ	0xFF7
 19276                           tblptrl	equ	0xFF6
 19277                           tablat	equ	0xFF5
 19278                           prodh	equ	0xFF4
 19279                           prodl	equ	0xFF3
 19280                           intcon	equ	0xFF2
 19281                           intcon2	equ	0xFF1
 19282                           intcon3	equ	0xFF0
 19283                           postinc0	equ	0xFEE
 19284                           wreg	equ	0xFE8
 19285                           indf1	equ	0xFE7
 19286                           postdec1	equ	0xFE5
 19287                           fsr1h	equ	0xFE2
 19288                           fsr1l	equ	0xFE1
 19289                           indf2	equ	0xFDF
 19290                           postinc2	equ	0xFDE
 19291                           postdec2	equ	0xFDD
 19292                           fsr2h	equ	0xFDA
 19293                           fsr2l	equ	0xFD9
 19294                           status	equ	0xFD8
 19295                           
 19296 ;; *************** function _printf *****************
 19297 ;; Defined at:
 19298 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19301 ;;		 -> STR_77(9), STR_75(11), STR_71(14), STR_68(168), 
 19302 ;;		 -> STR_63(19), STR_60(40), STR_56(15), STR_54(21), 
 19303 ;;		 -> STR_50(14), STR_47(14), STR_37(16), STR_36(480), 
 19304 ;;		 -> STR_35(45), STR_32(21), STR_23(20), STR_20(22), 
 19305 ;;		 -> STR_17(35), STR_14(14), STR_11(14), 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  pb              4   95[BANK0 ] struct __prbuf
 19308 ;;  ap              2   93[BANK0 ] PTR void [1]
 19309 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  2   33[BANK0 ] int 
 19312 ;; Registers used:
 19313 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19319 ;;      Params:         0      60       0       0       0       0       0       0       0
 19320 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19322 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19323 ;;Total ram usage:       66 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:    8
 19326 ;; This function calls:
 19327 ;;		__doprnt
 19328 ;; This function is called by:
 19329 ;;		_alterarDadosConexaoConfigWifi
 19330 ;;		_enviaDadosWifi
 19331 ;;		_main
 19332 ;; This function uses a non-reentrant model
 19333 ;;
 19334                           
 19335                           	psect	text36
 19336  0057A6                     __ptext36:
 19337                           	opt stack 0
 19338  0057A6                     _printf:
 19339                           	opt stack 22
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;incstack = 0
 19343  0057A6  0E00               	movlw	0
 19344  0057A8  0100               	movlb	0	; () banked
 19345  0057AA  6FBF               	movwf	printf@pb& (0+255),b
 19346  0057AC  0E00               	movlw	0
 19347  0057AE  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19348  0057B0  0E16               	movlw	low _putch
 19349  0057B2  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19350  0057B4  0E5B               	movlw	high _putch
 19351  0057B6  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19352  0057B8  0E83               	movlw	low (?_printf+2)
 19353  0057BA  6FBD               	movwf	printf@ap& (0+255),b
 19354  0057BC  0E00               	movlw	high (?_printf+2)
 19355  0057BE  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;	Return value of _printf is never used
 19359  0057C0  0EBF               	movlw	low printf@pb
 19360  0057C2  6F6C               	movwf	__doprnt@pb& (0+255),b
 19361  0057C4  0E00               	movlw	high printf@pb
 19362  0057C6  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19363  0057C8  C081  F06E         	movff	printf@f,__doprnt@f
 19364  0057CC  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19365  0057D0  0EBD               	movlw	low printf@ap
 19366  0057D2  6F70               	movwf	__doprnt@ap& (0+255),b
 19367  0057D4  0E00               	movlw	high printf@ap
 19368  0057D6  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19369  0057D8  ECD7  F012         	call	__doprnt	;wreg free
 19370  0057DC  0012               	return	
 19371  0057DE                     __end_of_printf:
 19372                           	opt stack 0
 19373                           tblptru	equ	0xFF8
 19374                           tblptrh	equ	0xFF7
 19375                           tblptrl	equ	0xFF6
 19376                           tablat	equ	0xFF5
 19377                           prodh	equ	0xFF4
 19378                           prodl	equ	0xFF3
 19379                           intcon	equ	0xFF2
 19380                           intcon2	equ	0xFF1
 19381                           intcon3	equ	0xFF0
 19382                           postinc0	equ	0xFEE
 19383                           wreg	equ	0xFE8
 19384                           indf1	equ	0xFE7
 19385                           postdec1	equ	0xFE5
 19386                           fsr1h	equ	0xFE2
 19387                           fsr1l	equ	0xFE1
 19388                           indf2	equ	0xFDF
 19389                           postinc2	equ	0xFDE
 19390                           postdec2	equ	0xFDD
 19391                           fsr2h	equ	0xFDA
 19392                           fsr2l	equ	0xFD9
 19393                           status	equ	0xFD8
 19394                           
 19395 ;; *************** function _getStringJSON *****************
 19396 ;; Defined at:
 19397 ;;		line 48 in file "src/json.c"
 19398 ;; Parameters:    Size  Location     Type
 19399 ;;  buff            2   49[BANK0 ] PTR unsigned char 
 19400 ;;		 -> bufferSerial(100), 
 19401 ;;  key             2   51[BANK0 ] PTR unsigned char 
 19402 ;;		 -> STR_42(3), STR_41(3), 
 19403 ;;  ret             2   53[BANK0 ] PTR unsigned char 
 19404 ;;		 -> senha(15), ssid(15), 
 19405 ;; Auto vars:     Size  Location     Type
 19406 ;;  res            25   57[BANK0 ] unsigned char [25]
 19407 ;;  attr           20  102[BANK0 ] unsigned char [20]
 19408 ;;  expected       20   82[BANK0 ] unsigned char [20]
 19409 ;;  i               2  126[BANK0 ] unsigned int 
 19410 ;;  j               2  123[BANK0 ] unsigned int 
 19411 ;;  find            1  125[BANK0 ] unsigned char 
 19412 ;;  isValid         1  122[BANK0 ] unsigned char 
 19413 ;; Return value:  Size  Location     Type
 19414 ;;                  1    wreg      void 
 19415 ;; Registers used:
 19416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19417 ;; Tracked objects:
 19418 ;;		On entry : 0/0
 19419 ;;		On exit  : 0/0
 19420 ;;		Unchanged: 0/0
 19421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19422 ;;      Params:         0       6       0       0       0       0       0       0       0
 19423 ;;      Locals:         0      71       0       0       0       0       0       0       0
 19424 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19425 ;;      Totals:         0      79       0       0       0       0       0       0       0
 19426 ;;Total ram usage:       79 bytes
 19427 ;; Hardware stack levels used:    1
 19428 ;; Hardware stack levels required when called:    9
 19429 ;; This function calls:
 19430 ;;		_sprintf
 19431 ;;		_strlen
 19432 ;;		_strstr
 19433 ;; This function is called by:
 19434 ;;		_alterarDadosConexaoConfigWifi
 19435 ;; This function uses a non-reentrant model
 19436 ;;
 19437                           
 19438                           	psect	text37
 19439  004018                     __ptext37:
 19440                           	opt stack 0
 19441  004018                     _getStringJSON:
 19442                           	opt stack 20
 19443                           
 19444                           ;json.c: 50: unsigned int i, j = 0;
 19445                           
 19446                           ;incstack = 0
 19447  004018  0E00               	movlw	0
 19448  00401A  0100               	movlb	0	; () banked
 19449  00401C  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19450  00401E  0E00               	movlw	0
 19451  004020  6FDB               	movwf	getStringJSON@j& (0+255),b
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;json.c: 51: char res[25] = "";
 19455  004022  EE22  F000         	lfsr	2,getStringJSON@F288
 19456  004026  EE10  F099         	lfsr	1,getStringJSON@res
 19457  00402A  0E18               	movlw	24
 19458  00402C                     u11661:
 19459  00402C  CFDB FFE3          	movff	plusw2,plusw1
 19460  004030  06E8               	decf	wreg,f,c
 19461  004032  E2FC               	bc	u11661
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;json.c: 52: char attr[20] = "";
 19465  004034  EE22  F02D         	lfsr	2,getStringJSON@F290
 19466  004038  EE10  F0C6         	lfsr	1,getStringJSON@attr
 19467  00403C  0E13               	movlw	19
 19468  00403E                     u11671:
 19469  00403E  CFDB FFE3          	movff	plusw2,plusw1
 19470  004042  06E8               	decf	wreg,f,c
 19471  004044  E2FC               	bc	u11671
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;json.c: 53: char expected[20] = "";
 19475  004046  EE22  F019         	lfsr	2,getStringJSON@F292
 19476  00404A  EE10  F0B2         	lfsr	1,getStringJSON@expected
 19477  00404E  0E13               	movlw	19
 19478  004050                     u11681:
 19479  004050  CFDB FFE3          	movff	plusw2,plusw1
 19480  004054  06E8               	decf	wreg,f,c
 19481  004056  E2FC               	bc	u11681
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;json.c: 54: char find = 0;
 19485  004058  0E00               	movlw	0
 19486  00405A  6FDD               	movwf	getStringJSON@find& (0+255),b
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;json.c: 55: char isValid = 0;
 19490  00405C  0E00               	movlw	0
 19491  00405E  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19492                           
 19493                           ; BSR set to: 0
 19494                           ;json.c: 57: sprintf(expected, "\"%s\":\"", key);
 19495  004060  0EB2               	movlw	low getStringJSON@expected
 19496  004062  6F81               	movwf	sprintf@wh& (0+255),b
 19497  004064  0E00               	movlw	high getStringJSON@expected
 19498  004066  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19499  004068  0E84               	movlw	low STR_124
 19500  00406A  6F83               	movwf	sprintf@f& (0+255),b
 19501  00406C  0E7F               	movlw	high STR_124
 19502  00406E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19503  004070  C093  F085         	movff	getStringJSON@key,?_sprintf+4
 19504  004074  C094  F086         	movff	getStringJSON@key+1,?_sprintf+5
 19505  004078  EC4F  F02B         	call	_sprintf	;wreg free
 19506                           
 19507                           ;json.c: 59: for (i = 0; i < strlen(buff) && isValid == 0; i++)
 19508  00407C  0E00               	movlw	0
 19509  00407E  0100               	movlb	0	; () banked
 19510  004080  6FDF               	movwf	(getStringJSON@i+1)& (0+255),b
 19511  004082  0E00               	movlw	0
 19512  004084  6FDE               	movwf	getStringJSON@i& (0+255),b
 19513  004086  D090               	goto	l1565
 19514  004088                     
 19515                           ; BSR set to: 0
 19516                           ;json.c: 60: {
 19517                           ;json.c: 61: if (buff[i] == expected[j] && !find)
 19518                           
 19519                           ; BSR set to: 0
 19520  004088  0EB2               	movlw	low getStringJSON@expected
 19521  00408A  25DB               	addwf	getStringJSON@j& (0+255),w,b
 19522  00408C  6ED9               	movwf	fsr2l,c
 19523  00408E  0E00               	movlw	high getStringJSON@expected
 19524  004090  21DC               	addwfc	(getStringJSON@j+1)& (0+255),w,b
 19525  004092  6EDA               	movwf	fsr2h,c
 19526  004094  51DE               	movf	getStringJSON@i& (0+255),w,b
 19527  004096  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19528  004098  6EE1               	movwf	fsr1l,c
 19529  00409A  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19530  00409C  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19531  00409E  6EE2               	movwf	fsr1h,c
 19532  0040A0  50DE               	movf	postinc2,w,c
 19533  0040A2  18E6               	xorwf	postinc1,w,c
 19534  0040A4  A4D8               	btfss	status,2,c
 19535  0040A6  D035               	goto	l1567
 19536                           
 19537                           ; BSR set to: 0
 19538  0040A8  51DD               	movf	getStringJSON@find& (0+255),w,b
 19539  0040AA  A4D8               	btfss	status,2,c
 19540  0040AC  D032               	goto	l1567
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;json.c: 62: {
 19544                           ;json.c: 63: sprintf(attr, "%s%c", attr, buff[i]);
 19545  0040AE  0EC6               	movlw	low getStringJSON@attr
 19546  0040B0  6F81               	movwf	sprintf@wh& (0+255),b
 19547  0040B2  0E00               	movlw	high getStringJSON@attr
 19548  0040B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19549  0040B6  0EC1               	movlw	low STR_122
 19550  0040B8  6F83               	movwf	sprintf@f& (0+255),b
 19551  0040BA  0E7F               	movlw	high STR_122
 19552  0040BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19553  0040BE  0EC6               	movlw	low getStringJSON@attr
 19554  0040C0  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19555  0040C2  0E00               	movlw	high getStringJSON@attr
 19556  0040C4  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19557  0040C6  51DE               	movf	getStringJSON@i& (0+255),w,b
 19558  0040C8  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19559  0040CA  6ED9               	movwf	fsr2l,c
 19560  0040CC  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19561  0040CE  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19562  0040D0  6EDA               	movwf	fsr2h,c
 19563  0040D2  50DF               	movf	indf2,w,c
 19564  0040D4  6F97               	movwf	??_getStringJSON& (0+255),b
 19565  0040D6  5197               	movf	??_getStringJSON& (0+255),w,b
 19566  0040D8  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19567  0040DA  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19568  0040DC  EC4F  F02B         	call	_sprintf	;wreg free
 19569                           
 19570                           ;json.c: 64: j++;
 19571  0040E0  0100               	movlb	0	; () banked
 19572  0040E2  4BDB               	infsnz	getStringJSON@j& (0+255),f,b
 19573  0040E4  2BDC               	incf	(getStringJSON@j+1)& (0+255),f,b
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;json.c: 65: if (strstr(attr, expected))
 19577  0040E6  0EC6               	movlw	low getStringJSON@attr
 19578  0040E8  6F6F               	movwf	strstr@s1& (0+255),b
 19579  0040EA  0E00               	movlw	high getStringJSON@attr
 19580  0040EC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19581  0040EE  0EB2               	movlw	low getStringJSON@expected
 19582  0040F0  6F71               	movwf	strstr@s2& (0+255),b
 19583  0040F2  0E00               	movlw	high getStringJSON@expected
 19584  0040F4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19585  0040F6  ECF5  F025         	call	_strstr	;wreg free
 19586  0040FA  0100               	movlb	0	; () banked
 19587  0040FC  516F               	movf	?_strstr& (0+255),w,b
 19588  0040FE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19589  004100  B4D8               	btfsc	status,2,c
 19590  004102  D04F               	goto	l1573
 19591                           
 19592                           ; BSR set to: 0
 19593                           ;json.c: 66: {
 19594                           ;json.c: 67: j = 0;
 19595  004104  0E00               	movlw	0
 19596  004106  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19597  004108  0E00               	movlw	0
 19598  00410A  6FDB               	movwf	getStringJSON@j& (0+255),b
 19599                           
 19600                           ;json.c: 68: find = 1;
 19601  00410C  0E01               	movlw	1
 19602  00410E  6FDD               	movwf	getStringJSON@find& (0+255),b
 19603                           
 19604                           ; BSR set to: 0
 19605                           ;json.c: 69: }
 19606                           ;json.c: 70: }
 19607  004110  D048               	goto	l1573
 19608  004112                     l1567:
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;json.c: 71: else if (!find)
 19612                           
 19613                           ; BSR set to: 0
 19614  004112  51DD               	movf	getStringJSON@find& (0+255),w,b
 19615  004114  A4D8               	btfss	status,2,c
 19616  004116  D00F               	goto	l1570
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;json.c: 72: {
 19620                           ;json.c: 73: j = 0;
 19621  004118  0E00               	movlw	0
 19622  00411A  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19623  00411C  0E00               	movlw	0
 19624  00411E  6FDB               	movwf	getStringJSON@j& (0+255),b
 19625                           
 19626                           ; BSR set to: 0
 19627                           ;json.c: 74: sprintf(attr, "");
 19628  004120  0EC6               	movlw	low getStringJSON@attr
 19629  004122  6F81               	movwf	sprintf@wh& (0+255),b
 19630  004124  0E00               	movlw	high getStringJSON@attr
 19631  004126  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19632  004128  0E75               	movlw	low (STR_35+44)
 19633  00412A  6F83               	movwf	sprintf@f& (0+255),b
 19634  00412C  0E7B               	movlw	high (STR_35+44)
 19635  00412E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19636  004130  EC4F  F02B         	call	_sprintf	;wreg free
 19637                           
 19638                           ;json.c: 75: }
 19639  004134  D036               	goto	l1573
 19640  004136                     l1570:
 19641                           
 19642                           ;json.c: 76: else
 19643                           ;json.c: 77: {
 19644                           ;json.c: 78: if (buff[i] == '"')
 19645  004136  0100               	movlb	0	; () banked
 19646  004138  51DE               	movf	getStringJSON@i& (0+255),w,b
 19647  00413A  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19648  00413C  6ED9               	movwf	fsr2l,c
 19649  00413E  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19650  004140  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19651  004142  6EDA               	movwf	fsr2h,c
 19652  004144  0E22               	movlw	34
 19653  004146  18DE               	xorwf	postinc2,w,c
 19654  004148  A4D8               	btfss	status,2,c
 19655  00414A  D011               	goto	l1572
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;json.c: 79: {
 19659                           ;json.c: 80: isValid = 1;
 19660  00414C  0E01               	movlw	1
 19661  00414E  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19662                           
 19663                           ; BSR set to: 0
 19664                           ;json.c: 81: sprintf(ret, "%s", res);
 19665  004150  C095  F081         	movff	getStringJSON@ret,sprintf@wh
 19666  004154  C096  F082         	movff	getStringJSON@ret+1,sprintf@wh+1
 19667  004158  0E1F               	movlw	low (STR_91+7)
 19668  00415A  6F83               	movwf	sprintf@f& (0+255),b
 19669  00415C  0E7F               	movlw	high (STR_91+7)
 19670  00415E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19671  004160  0E99               	movlw	low getStringJSON@res
 19672  004162  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19673  004164  0E00               	movlw	high getStringJSON@res
 19674  004166  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19675  004168  EC4F  F02B         	call	_sprintf	;wreg free
 19676                           
 19677                           ;json.c: 82: }
 19678  00416C  D01A               	goto	l1573
 19679  00416E                     l1572:
 19680                           
 19681                           ;json.c: 83: else
 19682                           ;json.c: 84: {
 19683                           ;json.c: 85: sprintf(res, "%s%c", res, buff[i]);
 19684  00416E  0E99               	movlw	low getStringJSON@res
 19685  004170  0100               	movlb	0	; () banked
 19686  004172  6F81               	movwf	sprintf@wh& (0+255),b
 19687  004174  0E00               	movlw	high getStringJSON@res
 19688  004176  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19689  004178  0EC1               	movlw	low STR_122
 19690  00417A  6F83               	movwf	sprintf@f& (0+255),b
 19691  00417C  0E7F               	movlw	high STR_122
 19692  00417E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19693  004180  0E99               	movlw	low getStringJSON@res
 19694  004182  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19695  004184  0E00               	movlw	high getStringJSON@res
 19696  004186  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19697  004188  51DE               	movf	getStringJSON@i& (0+255),w,b
 19698  00418A  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19699  00418C  6ED9               	movwf	fsr2l,c
 19700  00418E  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19701  004190  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19702  004192  6EDA               	movwf	fsr2h,c
 19703  004194  50DF               	movf	indf2,w,c
 19704  004196  6F97               	movwf	??_getStringJSON& (0+255),b
 19705  004198  5197               	movf	??_getStringJSON& (0+255),w,b
 19706  00419A  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19707  00419C  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19708  00419E  EC4F  F02B         	call	_sprintf	;wreg free
 19709  0041A2                     l1573:
 19710  0041A2  0100               	movlb	0	; () banked
 19711  0041A4  4BDE               	infsnz	getStringJSON@i& (0+255),f,b
 19712  0041A6  2BDF               	incf	(getStringJSON@i+1)& (0+255),f,b
 19713  0041A8                     l1565:
 19714                           
 19715                           ; BSR set to: 0
 19716                           
 19717                           ; BSR set to: 0
 19718  0041A8  C091  F060         	movff	getStringJSON@buff,strlen@s
 19719  0041AC  C092  F061         	movff	getStringJSON@buff+1,strlen@s+1
 19720  0041B0  EC84  F02A         	call	_strlen	;wreg free
 19721  0041B4  0100               	movlb	0	; () banked
 19722  0041B6  5160               	movf	?_strlen& (0+255),w,b
 19723  0041B8  5DDE               	subwf	getStringJSON@i& (0+255),w,b
 19724  0041BA  5161               	movf	(?_strlen+1)& (0+255),w,b
 19725  0041BC  59DF               	subwfb	(getStringJSON@i+1)& (0+255),w,b
 19726  0041BE  B0D8               	btfsc	status,0,c
 19727  0041C0  0012               	return	
 19728                           
 19729                           ; BSR set to: 0
 19730  0041C2  51DA               	movf	getStringJSON@isValid& (0+255),w,b
 19731  0041C4  A4D8               	btfss	status,2,c
 19732  0041C6  0012               	return	
 19733  0041C8  D75F               	goto	l1566
 19734  0041CA                     __end_of_getStringJSON:
 19735                           	opt stack 0
 19736                           tblptru	equ	0xFF8
 19737                           tblptrh	equ	0xFF7
 19738                           tblptrl	equ	0xFF6
 19739                           tablat	equ	0xFF5
 19740                           prodh	equ	0xFF4
 19741                           prodl	equ	0xFF3
 19742                           intcon	equ	0xFF2
 19743                           intcon2	equ	0xFF1
 19744                           intcon3	equ	0xFF0
 19745                           postinc0	equ	0xFEE
 19746                           wreg	equ	0xFE8
 19747                           indf1	equ	0xFE7
 19748                           postinc1	equ	0xFE6
 19749                           postdec1	equ	0xFE5
 19750                           plusw1	equ	0xFE3
 19751                           fsr1h	equ	0xFE2
 19752                           fsr1l	equ	0xFE1
 19753                           indf2	equ	0xFDF
 19754                           postinc2	equ	0xFDE
 19755                           postdec2	equ	0xFDD
 19756                           plusw2	equ	0xFDB
 19757                           fsr2h	equ	0xFDA
 19758                           fsr2l	equ	0xFD9
 19759                           status	equ	0xFD8
 19760                           
 19761 ;; *************** function _sprintf *****************
 19762 ;; Defined at:
 19763 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 19766 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 19767 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), enviaDadosWifi@AUX(15), senha(15), 
 19768 ;;		 -> ssid(15), line4(21), line3(21), line2(21), 
 19769 ;;		 -> line1(21), 
 19770 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 19771 ;;		 -> STR_129(3), STR_128(5), STR_127(3), STR_126(1), 
 19772 ;;		 -> STR_125(5), STR_124(7), STR_123(1), STR_122(5), 
 19773 ;;		 -> STR_121(6), STR_120(18), STR_119(19), STR_118(19), 
 19774 ;;		 -> STR_117(19), STR_116(20), STR_115(17), STR_114(7), 
 19775 ;;		 -> STR_113(9), STR_112(8), STR_111(10), STR_110(18), 
 19776 ;;		 -> STR_109(18), STR_108(18), STR_107(17), STR_106(17), 
 19777 ;;		 -> STR_105(17), STR_104(17), STR_103(20), STR_102(20), 
 19778 ;;		 -> STR_101(20), STR_98(11), STR_95(10), STR_92(9), 
 19779 ;;		 -> STR_91(10), STR_90(9), STR_89(15), STR_88(18), 
 19780 ;;		 -> STR_87(20), STR_86(10), STR_85(22), STR_84(21), 
 19781 ;;		 -> STR_83(15), STR_82(12), STR_80(3), STR_79(14), 
 19782 ;;		 -> STR_78(20), STR_66(3), STR_45(18), STR_44(3), 
 19783 ;;		 -> STR_43(3), STR_39(14), STR_29(9), STR_28(21), 
 19784 ;;		 -> STR_27(17), STR_26(20), 
 19785 ;; Auto vars:     Size  Location     Type
 19786 ;;  pb              4   45[BANK0 ] struct __prbuf
 19787 ;;  ap              2   43[BANK0 ] PTR void [1]
 19788 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19789 ;; Return value:  Size  Location     Type
 19790 ;;                  2   33[BANK0 ] int 
 19791 ;; Registers used:
 19792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19793 ;; Tracked objects:
 19794 ;;		On entry : 0/0
 19795 ;;		On exit  : 0/0
 19796 ;;		Unchanged: 0/0
 19797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19798 ;;      Params:         0      10       0       0       0       0       0       0       0
 19799 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19800 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19801 ;;      Totals:         0      16       0       0       0       0       0       0       0
 19802 ;;Total ram usage:       16 bytes
 19803 ;; Hardware stack levels used:    1
 19804 ;; Hardware stack levels required when called:    8
 19805 ;; This function calls:
 19806 ;;		__doprnt
 19807 ;; This function is called by:
 19808 ;;		_alterarDadosConexaoConfigWifi
 19809 ;;		_enviaDadosWifi
 19810 ;;		_main
 19811 ;;		_getStringJSON
 19812 ;;		_setKeyStartReceiveSerial
 19813 ;;		_getIntJSON
 19814 ;; This function uses a non-reentrant model
 19815 ;;
 19816                           
 19817                           	psect	text38
 19818  00569E                     __ptext38:
 19819                           	opt stack 0
 19820  00569E                     _sprintf:
 19821                           	opt stack 22
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;incstack = 0
 19825  00569E  C081  F08D         	movff	sprintf@wh,sprintf@pb
 19826  0056A2  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 19827  0056A6  0E00               	movlw	0
 19828  0056A8  0100               	movlb	0	; () banked
 19829  0056AA  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 19830  0056AC  0E00               	movlw	0
 19831  0056AE  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 19832  0056B0  0E85               	movlw	low (?_sprintf+4)
 19833  0056B2  6F8B               	movwf	sprintf@ap& (0+255),b
 19834  0056B4  0E00               	movlw	high (?_sprintf+4)
 19835  0056B6  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 19836                           
 19837                           ; BSR set to: 0
 19838  0056B8  0E8D               	movlw	low sprintf@pb
 19839  0056BA  6F6C               	movwf	__doprnt@pb& (0+255),b
 19840  0056BC  0E00               	movlw	high sprintf@pb
 19841  0056BE  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19842  0056C0  C083  F06E         	movff	sprintf@f,__doprnt@f
 19843  0056C4  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 19844  0056C8  0E8B               	movlw	low sprintf@ap
 19845  0056CA  6F70               	movwf	__doprnt@ap& (0+255),b
 19846  0056CC  0E00               	movlw	high sprintf@ap
 19847  0056CE  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19848  0056D0  ECD7  F012         	call	__doprnt	;wreg free
 19849  0056D4  C08D  FFD9         	movff	sprintf@pb,fsr2l
 19850  0056D8  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 19851  0056DC  0E00               	movlw	0
 19852  0056DE  6EDF               	movwf	indf2,c
 19853  0056E0  0012               	return	
 19854  0056E2                     __end_of_sprintf:
 19855                           	opt stack 0
 19856                           tblptru	equ	0xFF8
 19857                           tblptrh	equ	0xFF7
 19858                           tblptrl	equ	0xFF6
 19859                           tablat	equ	0xFF5
 19860                           prodh	equ	0xFF4
 19861                           prodl	equ	0xFF3
 19862                           intcon	equ	0xFF2
 19863                           intcon2	equ	0xFF1
 19864                           intcon3	equ	0xFF0
 19865                           postinc0	equ	0xFEE
 19866                           wreg	equ	0xFE8
 19867                           indf1	equ	0xFE7
 19868                           postinc1	equ	0xFE6
 19869                           postdec1	equ	0xFE5
 19870                           plusw1	equ	0xFE3
 19871                           fsr1h	equ	0xFE2
 19872                           fsr1l	equ	0xFE1
 19873                           indf2	equ	0xFDF
 19874                           postinc2	equ	0xFDE
 19875                           postdec2	equ	0xFDD
 19876                           plusw2	equ	0xFDB
 19877                           fsr2h	equ	0xFDA
 19878                           fsr2l	equ	0xFD9
 19879                           status	equ	0xFD8
 19880                           
 19881 ;; *************** function __doprnt *****************
 19882 ;; Defined at:
 19883 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 19884 ;; Parameters:    Size  Location     Type
 19885 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 19886 ;;		 -> sprintf@pb(4), printf@pb(4), 
 19887 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 19888 ;;		 -> STR_129(3), STR_128(5), STR_127(3), STR_126(1), 
 19889 ;;		 -> STR_125(5), STR_124(7), STR_123(1), STR_122(5), 
 19890 ;;		 -> STR_121(6), STR_120(18), STR_119(19), STR_118(19), 
 19891 ;;		 -> STR_117(19), STR_116(20), STR_115(17), STR_114(7), 
 19892 ;;		 -> STR_113(9), STR_112(8), STR_111(10), STR_110(18), 
 19893 ;;		 -> STR_109(18), STR_108(18), STR_107(17), STR_106(17), 
 19894 ;;		 -> STR_105(17), STR_104(17), STR_103(20), STR_102(20), 
 19895 ;;		 -> STR_101(20), STR_98(11), STR_95(10), STR_92(9), 
 19896 ;;		 -> STR_91(10), STR_90(9), STR_89(15), STR_88(18), 
 19897 ;;		 -> STR_87(20), STR_86(10), STR_85(22), STR_84(21), 
 19898 ;;		 -> STR_83(15), STR_82(12), STR_80(3), STR_79(14), 
 19899 ;;		 -> STR_78(20), STR_77(9), STR_75(11), STR_71(14), 
 19900 ;;		 -> STR_68(168), STR_66(3), STR_63(19), STR_60(40), 
 19901 ;;		 -> STR_56(15), STR_54(21), STR_50(14), STR_47(14), 
 19902 ;;		 -> STR_45(18), STR_44(3), STR_43(3), STR_39(14), 
 19903 ;;		 -> STR_37(16), STR_36(480), STR_35(45), STR_32(21), 
 19904 ;;		 -> STR_29(9), STR_28(21), STR_27(17), STR_26(20), 
 19905 ;;		 -> STR_23(20), STR_20(22), STR_17(35), STR_14(14), 
 19906 ;;		 -> STR_11(14), 
 19907 ;;  ap              2   16[BANK0 ] PTR PTR void 
 19908 ;;		 -> sprintf@ap(2), printf@ap(2), 
 19909 ;; Auto vars:     Size  Location     Type
 19910 ;;  tmpval          4    0        struct .
 19911 ;;  width           2   30[BANK0 ] int 
 19912 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 19913 ;;		 -> ?_sprintf(2), ?_printf(2), STR_131(7), _doprnt@c(1), 
 19914 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 19915 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), STR_100(10), STR_99(7), 
 19916 ;;		 -> STR_97(11), STR_96(8), STR_94(11), STR_93(7), 
 19917 ;;		 -> STR_81(12), STR_74(4), STR_70(4), STR_67(12), 
 19918 ;;		 -> enviaDadosWifi@AUX(15), STR_65(4), STR_62(4), STR_59(4), 
 19919 ;;		 -> STR_55(4), STR_53(4), STR_49(4), STR_46(4), 
 19920 ;;		 -> wifi_MAC(12), STR_42(3), senha(15), STR_41(3), 
 19921 ;;		 -> ssid(15), STR_38(3), STR_34(4), NULL(0), 
 19922 ;;		 -> STR_31(4), line4(21), line3(21), line2(21), 
 19923 ;;		 -> line1(21), STR_25(7), STR_22(4), STR_19(4), 
 19924 ;;		 -> STR_16(4), STR_13(4), STR_10(4), STR_9(3), 
 19925 ;;		 -> STR_8(5), STR_7(7), STR_6(6), STR_5(4), 
 19926 ;;		 -> STR_4(10), STR_3(11), STR_2(12), STR_1(11), 
 19927 ;;  len             2   26[BANK0 ] unsigned int 
 19928 ;;  val             2   24[BANK0 ] unsigned int 
 19929 ;;  c               1   32[BANK0 ] char 
 19930 ;;  flag            1   23[BANK0 ] unsigned char 
 19931 ;;  prec            1   22[BANK0 ] char 
 19932 ;; Return value:  Size  Location     Type
 19933 ;;                  2   12[BANK0 ] int 
 19934 ;; Registers used:
 19935 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19936 ;; Tracked objects:
 19937 ;;		On entry : 0/0
 19938 ;;		On exit  : 0/0
 19939 ;;		Unchanged: 0/0
 19940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19941 ;;      Params:         0       6       0       0       0       0       0       0       0
 19942 ;;      Locals:         0      11       0       0       0       0       0       0       0
 19943 ;;      Temps:          0       4       0       0       0       0       0       0       0
 19944 ;;      Totals:         0      21       0       0       0       0       0       0       0
 19945 ;;Total ram usage:       21 bytes
 19946 ;; Hardware stack levels used:    1
 19947 ;; Hardware stack levels required when called:    7
 19948 ;; This function calls:
 19949 ;;		Absolute function
 19950 ;;		___lwdiv
 19951 ;;		___lwmod
 19952 ;;		___wmul
 19953 ;;		_isdigit
 19954 ;;		_putch
 19955 ;; This function is called by:
 19956 ;;		_printf
 19957 ;;		_sprintf
 19958 ;; This function uses a non-reentrant model
 19959 ;;
 19960                           
 19961                           	psect	text39
 19962  0025AE                     __ptext39:
 19963                           	opt stack 0
 19964  0025AE                     __doprnt:
 19965                           	opt stack 22
 19966                           
 19967                           ;doprnt.c: 499: signed char c;
 19968                           ;doprnt.c: 501: int width;
 19969                           ;doprnt.c: 506: signed char prec;
 19970                           ;doprnt.c: 508: unsigned char flag;
 19971                           ;doprnt.c: 523: union {
 19972                           ;doprnt.c: 524: unsigned long vd;
 19973                           ;doprnt.c: 525: double integ;
 19974                           ;doprnt.c: 526: } tmpval;
 19975                           ;doprnt.c: 528: unsigned int val;
 19976                           ;doprnt.c: 529: unsigned len;
 19977                           ;doprnt.c: 530: const char * cp;
 19978                           ;doprnt.c: 536: while(c = *f++) {
 19979                           
 19980                           ;incstack = 0
 19981  0025AE  D2CC               	goto	u8170
 19982  0025B0                     
 19983                           ;doprnt.c: 538: if(c != '%')
 19984  0025B0  0E25               	movlw	37
 19985  0025B2  0100               	movlb	0	; () banked
 19986  0025B4  1980               	xorwf	__doprnt@c& (0+255),w,b
 19987  0025B6  B4D8               	btfsc	status,2,c
 19988  0025B8  D033               	goto	l1622
 19989                           
 19990                           ; BSR set to: 0
 19991                           ;doprnt.c: 540: {
 19992                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 19993  0025BA  EE20 F002          	lfsr	2,2
 19994  0025BE  516C               	movf	__doprnt@pb& (0+255),w,b
 19995  0025C0  26D9               	addwf	fsr2l,f,c
 19996  0025C2  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 19997  0025C4  22DA               	addwfc	fsr2h,f,c
 19998  0025C6  50DE               	movf	postinc2,w,c
 19999  0025C8  10DE               	iorwf	postinc2,w,c
 20000  0025CA  B4D8               	btfsc	status,2,c
 20001  0025CC  D013               	goto	l1623
 20002                           
 20003                           ; BSR set to: 0
 20004  0025CE  EE20 F002          	lfsr	2,2
 20005  0025D2  516C               	movf	__doprnt@pb& (0+255),w,b
 20006  0025D4  26D9               	addwf	fsr2l,f,c
 20007  0025D6  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20008  0025D8  22DA               	addwfc	fsr2h,f,c
 20009  0025DA  D801               	call	u7868
 20010  0025DC  D2B5               	goto	u8170
 20011  0025DE                     u7868:
 20012  0025DE  0005               	push	
 20013  0025E0  6EFA               	movwf	pclath,c
 20014  0025E2  50DE               	movf	postinc2,w,c
 20015  0025E4  6EFD               	movwf	tosl,c
 20016  0025E6  50DE               	movf	postinc2,w,c
 20017  0025E8  6EFE               	movwf	tosh,c
 20018  0025EA  50F8               	movf	tblptru,w,c
 20019  0025EC  6EFF               	movwf	tosu,c
 20020  0025EE  50FA               	movf	pclath,w,c
 20021  0025F0  5180               	movf	__doprnt@c& (0+255),w,b
 20022  0025F2  0012               	return		;indir
 20023  0025F4                     l1623:
 20024  0025F4  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20025  0025F8  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20026  0025FC  CFDE F072          	movff	postinc2,??__doprnt
 20027  002600  CFDD F073          	movff	postdec2,??__doprnt+1
 20028  002604  C072  FFD9         	movff	??__doprnt,fsr2l
 20029  002608  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20030  00260C  C080  FFDF         	movff	__doprnt@c,indf2
 20031  002610  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20032  002614  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20033  002618  2ADE               	incf	postinc2,f,c
 20034  00261A  0E00               	movlw	0
 20035  00261C  22DD               	addwfc	postdec2,f,c
 20036                           
 20037                           ;doprnt.c: 542: continue;
 20038  00261E  D294               	goto	u8170
 20039  002620                     l1622:
 20040                           
 20041                           ;doprnt.c: 543: }
 20042                           ;doprnt.c: 546: width = 0;
 20043  002620  0E00               	movlw	0
 20044  002622  0100               	movlb	0	; () banked
 20045  002624  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20046  002626  0E00               	movlw	0
 20047  002628  6F7E               	movwf	__doprnt@width& (0+255),b
 20048                           
 20049                           ;doprnt.c: 548: flag = 0;
 20050  00262A  0E00               	movlw	0
 20051  00262C  6F77               	movwf	__doprnt@flag& (0+255),b
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20055  00262E  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20056  002632  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20057  002636                     	if	0	;tblptru may be non-zero
 20058  002636                     	endif
 20059  002636                     	if	0	;tblptru may be non-zero
 20060  002636                     	endif
 20061  002636  0008               	tblrd		*
 20062  002638  50F5               	movf	tablat,w,c
 20063  00263A  EC3C  F02D         	call	_isdigit
 20064  00263E  A0D8               	btfss	status,0,c
 20065  002640  D13C               	goto	l1628
 20066                           
 20067                           ;doprnt.c: 598: width = 0;
 20068  002642  0E00               	movlw	0
 20069  002644  0100               	movlb	0	; () banked
 20070  002646  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20071  002648  0E00               	movlw	0
 20072  00264A  6F7E               	movwf	__doprnt@width& (0+255),b
 20073  00264C                     
 20074                           ;doprnt.c: 600: width *= 10;
 20075                           
 20076                           ; BSR set to: 0
 20077  00264C  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 20078  002650  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 20079  002654  0E00               	movlw	0
 20080  002656  0100               	movlb	0	; () banked
 20081  002658  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20082  00265A  0E0A               	movlw	10
 20083  00265C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 20084  00265E  ECC8  F02C         	call	___wmul	;wreg free
 20085  002662  C060  F07E         	movff	?___wmul,__doprnt@width
 20086  002666  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 20087                           
 20088                           ;doprnt.c: 601: width += *f++ - '0';
 20089  00266A  0ED0               	movlw	208
 20090  00266C  0100               	movlb	0	; () banked
 20091  00266E  6F72               	movwf	??__doprnt& (0+255),b
 20092  002670  0EFF               	movlw	255
 20093  002672  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20094  002674  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20095  002678  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20096  00267C                     	if	0	;tblptru may be non-zero
 20097  00267C                     	endif
 20098  00267C                     	if	0	;tblptru may be non-zero
 20099  00267C                     	endif
 20100  00267C  0008               	tblrd		*
 20101  00267E  50F5               	movf	tablat,w,c
 20102  002680  6F74               	movwf	(??__doprnt+2)& (0+255),b
 20103  002682  6B75               	clrf	(??__doprnt+3)& (0+255),b
 20104  002684  5172               	movf	??__doprnt& (0+255),w,b
 20105  002686  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 20106  002688  5173               	movf	(??__doprnt+1)& (0+255),w,b
 20107  00268A  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 20108  00268C  5174               	movf	(??__doprnt+2)& (0+255),w,b
 20109  00268E  277E               	addwf	__doprnt@width& (0+255),f,b
 20110  002690  5175               	movf	(??__doprnt+3)& (0+255),w,b
 20111  002692  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 20112                           
 20113                           ; BSR set to: 0
 20114  002694  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20115  002696  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20119  002698  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20120  00269C  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20121  0026A0                     	if	0	;tblptru may be non-zero
 20122  0026A0                     	endif
 20123  0026A0                     	if	0	;tblptru may be non-zero
 20124  0026A0                     	endif
 20125  0026A0  0008               	tblrd		*
 20126  0026A2  50F5               	movf	tablat,w,c
 20127  0026A4  EC3C  F02D         	call	_isdigit
 20128  0026A8  A0D8               	btfss	status,0,c
 20129  0026AA  D107               	goto	l1628
 20130  0026AC  D7CF               	goto	l1626
 20131  0026AE                     
 20132                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20133  0026AE  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20134  0026B2  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20135  0026B6  CFDF F072          	movff	indf2,??__doprnt
 20136  0026BA  0E02               	movlw	2
 20137  0026BC  26DE               	addwf	postinc2,f,c
 20138  0026BE  CFDF F073          	movff	indf2,??__doprnt+1
 20139  0026C2  0E00               	movlw	0
 20140  0026C4  22DD               	addwfc	postdec2,f,c
 20141  0026C6  C072  FFD9         	movff	??__doprnt,fsr2l
 20142  0026CA  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20143  0026CE  CFDE F07C          	movff	postinc2,__doprnt@cp
 20144  0026D2  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 20145                           
 20146                           ;doprnt.c: 740: if(!cp)
 20147  0026D6  0100               	movlb	0	; () banked
 20148  0026D8  517C               	movf	__doprnt@cp& (0+255),w,b
 20149  0026DA  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 20150  0026DC  A4D8               	btfss	status,2,c
 20151  0026DE  D004               	goto	l1635
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;doprnt.c: 741: cp = "(null)";
 20155  0026E0  0E7D               	movlw	low STR_131
 20156  0026E2  6F7C               	movwf	__doprnt@cp& (0+255),b
 20157  0026E4  0E7F               	movlw	high STR_131
 20158  0026E6  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20159  0026E8                     l1635:
 20160                           
 20161                           ; BSR set to: 0
 20162                           ;doprnt.c: 745: len = 0;
 20163                           
 20164                           ; BSR set to: 0
 20165  0026E8  0E00               	movlw	0
 20166  0026EA  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20167  0026EC  0E00               	movlw	0
 20168  0026EE  6F7A               	movwf	__doprnt@len& (0+255),b
 20169                           
 20170                           ;doprnt.c: 746: while(cp[len])
 20171  0026F0  D003               	goto	l1636
 20172  0026F2                     
 20173                           ;doprnt.c: 747: len++;
 20174                           
 20175                           ; BSR set to: 0
 20176  0026F2  0100               	movlb	0	; () banked
 20177  0026F4  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 20178  0026F6  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 20179  0026F8                     l1636:
 20180                           
 20181                           ; BSR set to: 0
 20182                           
 20183                           ; BSR set to: 0
 20184  0026F8  517A               	movf	__doprnt@len& (0+255),w,b
 20185  0026FA  257C               	addwf	__doprnt@cp& (0+255),w,b
 20186  0026FC  6F72               	movwf	??__doprnt& (0+255),b
 20187  0026FE  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20188  002700  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 20189  002702  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20190  002704  C072  FFF6         	movff	??__doprnt,tblptrl
 20191  002708  C073  FFF7         	movff	??__doprnt+1,tblptrh
 20192  00270C  6AF8               	clrf	tblptru,c
 20193  00270E  0E07               	movlw	(high __ramtop+-1)
 20194  002710  64F7               	cpfsgt	tblptrh,c
 20195  002712  D003               	bra	u7907
 20196  002714  0008               	tblrd		*
 20197  002716  50F5               	movf	tablat,w,c
 20198  002718  D005               	bra	u7900
 20199  00271A                     u7907:
 20200  00271A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20201  00271E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20202  002722  50EF               	movf	indf0,w,c
 20203  002724                     u7900:
 20204  002724  0900               	iorlw	0
 20205  002726  A4D8               	btfss	status,2,c
 20206  002728  D7E4               	goto	l1637
 20207  00272A                     u7910:
 20208                           
 20209                           ;doprnt.c: 757: if(width > len)
 20210                           
 20211                           ;doprnt.c: 750: dostring:
 20212  00272A  0100               	movlb	0	; () banked
 20213  00272C  517E               	movf	__doprnt@width& (0+255),w,b
 20214  00272E  5D7A               	subwf	__doprnt@len& (0+255),w,b
 20215  002730  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20216  002732  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 20217  002734  B0D8               	btfsc	status,0,c
 20218  002736  D005               	goto	l1640
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;doprnt.c: 758: width -= len;
 20222  002738  517A               	movf	__doprnt@len& (0+255),w,b
 20223  00273A  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20224  00273C  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20225  00273E  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20226  002740  D037               	goto	l1645
 20227  002742                     l1640:
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;doprnt.c: 759: else
 20231                           ;doprnt.c: 760: width = 0;
 20232                           
 20233                           ; BSR set to: 0
 20234  002742  0E00               	movlw	0
 20235  002744  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20236  002746  0E00               	movlw	0
 20237  002748  6F7E               	movwf	__doprnt@width& (0+255),b
 20238                           
 20239                           ; BSR set to: 0
 20240                           ;doprnt.c: 764: while(width--)
 20241  00274A  D032               	goto	l1645
 20242  00274C                     l6365:
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20246  00274C  EE20 F002          	lfsr	2,2
 20247  002750  516C               	movf	__doprnt@pb& (0+255),w,b
 20248  002752  26D9               	addwf	fsr2l,f,c
 20249  002754  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20250  002756  22DA               	addwfc	fsr2h,f,c
 20251  002758  50DE               	movf	postinc2,w,c
 20252  00275A  10DE               	iorwf	postinc2,w,c
 20253  00275C  B4D8               	btfsc	status,2,c
 20254  00275E  D013               	goto	l1644
 20255                           
 20256                           ; BSR set to: 0
 20257  002760  EE20 F002          	lfsr	2,2
 20258  002764  516C               	movf	__doprnt@pb& (0+255),w,b
 20259  002766  26D9               	addwf	fsr2l,f,c
 20260  002768  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20261  00276A  22DA               	addwfc	fsr2h,f,c
 20262  00276C  D801               	call	u7948
 20263  00276E  D020               	goto	l1645
 20264  002770                     u7948:
 20265  002770  0005               	push	
 20266  002772  6EFA               	movwf	pclath,c
 20267  002774  50DE               	movf	postinc2,w,c
 20268  002776  6EFD               	movwf	tosl,c
 20269  002778  50DE               	movf	postinc2,w,c
 20270  00277A  6EFE               	movwf	tosh,c
 20271  00277C  50F8               	movf	tblptru,w,c
 20272  00277E  6EFF               	movwf	tosu,c
 20273  002780  50FA               	movf	pclath,w,c
 20274  002782  0E20               	movlw	32
 20275  002784  0012               	return		;indir
 20276  002786                     l1644:
 20277  002786  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20278  00278A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20279  00278E  CFDE F072          	movff	postinc2,??__doprnt
 20280  002792  CFDD F073          	movff	postdec2,??__doprnt+1
 20281  002796  C072  FFD9         	movff	??__doprnt,fsr2l
 20282  00279A  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20283  00279E  0E20               	movlw	32
 20284  0027A0  6EDF               	movwf	indf2,c
 20285  0027A2  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20286  0027A6  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20287  0027AA  2ADE               	incf	postinc2,f,c
 20288  0027AC  0E00               	movlw	0
 20289  0027AE  22DD               	addwfc	postdec2,f,c
 20290  0027B0                     l1645:
 20291  0027B0  0100               	movlb	0	; () banked
 20292  0027B2  077E               	decf	__doprnt@width& (0+255),f,b
 20293  0027B4  A0D8               	btfss	status,0,c
 20294  0027B6  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20295  0027B8  297E               	incf	__doprnt@width& (0+255),w,b
 20296  0027BA  E1C8               	bnz	l6365
 20297  0027BC  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 20298  0027BE  B4D8               	btfsc	status,2,c
 20299  0027C0  D058               	goto	l1650
 20300  0027C2  D7C4               	goto	l1643
 20301  0027C4                     l6375:
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 20305  0027C4  EE20 F002          	lfsr	2,2
 20306  0027C8  516C               	movf	__doprnt@pb& (0+255),w,b
 20307  0027CA  26D9               	addwf	fsr2l,f,c
 20308  0027CC  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20309  0027CE  22DA               	addwfc	fsr2h,f,c
 20310  0027D0  50DE               	movf	postinc2,w,c
 20311  0027D2  10DE               	iorwf	postinc2,w,c
 20312  0027D4  B4D8               	btfsc	status,2,c
 20313  0027D6  D026               	goto	l1649
 20314                           
 20315                           ; BSR set to: 0
 20316  0027D8  EE20 F002          	lfsr	2,2
 20317  0027DC  516C               	movf	__doprnt@pb& (0+255),w,b
 20318  0027DE  26D9               	addwf	fsr2l,f,c
 20319  0027E0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20320  0027E2  22DA               	addwfc	fsr2h,f,c
 20321  0027E4  D801               	call	u7978
 20322  0027E6  D01A               	goto	u7979
 20323  0027E8                     u7978:
 20324  0027E8  0005               	push	
 20325  0027EA  6EFA               	movwf	pclath,c
 20326  0027EC  50DE               	movf	postinc2,w,c
 20327  0027EE  6EFD               	movwf	tosl,c
 20328  0027F0  50DE               	movf	postinc2,w,c
 20329  0027F2  6EFE               	movwf	tosh,c
 20330  0027F4  50F8               	movf	tblptru,w,c
 20331  0027F6  6EFF               	movwf	tosu,c
 20332  0027F8  50FA               	movf	pclath,w,c
 20333  0027FA  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20334  0027FE  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20335  002802  6AF8               	clrf	tblptru,c
 20336  002804  0E07               	movlw	(high __ramtop+-1)
 20337  002806  64F7               	cpfsgt	tblptrh,c
 20338  002808  D003               	bra	u7987
 20339  00280A  0008               	tblrd		*
 20340  00280C  50F5               	movf	tablat,w,c
 20341  00280E  D005               	bra	u7980
 20342  002810                     u7987:
 20343  002810  CFF6 FFE9          	movff	tblptrl,fsr0l
 20344  002814  CFF7 FFEA          	movff	tblptrh,fsr0h
 20345  002818  50EF               	movf	indf0,w,c
 20346  00281A                     u7980:
 20347  00281A  0012               	return		;indir
 20348  00281C                     u7979:
 20349  00281C  0100               	movlb	0	; () banked
 20350  00281E  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20351  002820  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20352  002822  D027               	goto	l1650
 20353  002824                     l1649:
 20354                           
 20355                           ; BSR set to: 0
 20356                           
 20357                           ; BSR set to: 0
 20358  002824  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20359  002828  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20360  00282C  6AF8               	clrf	tblptru,c
 20361  00282E  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20362  002832  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20363  002836  CFDE F072          	movff	postinc2,??__doprnt
 20364  00283A  CFDD F073          	movff	postdec2,??__doprnt+1
 20365  00283E  C072  FFD9         	movff	??__doprnt,fsr2l
 20366  002842  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20367  002846  0E07               	movlw	(high __ramtop+-1)
 20368  002848  64F7               	cpfsgt	tblptrh,c
 20369  00284A  D003               	bra	u7997
 20370  00284C  0008               	tblrd		*
 20371  00284E  50F5               	movf	tablat,w,c
 20372  002850  D005               	bra	u7990
 20373  002852                     u7997:
 20374  002852  CFF6 FFE9          	movff	tblptrl,fsr0l
 20375  002856  CFF7 FFEA          	movff	tblptrh,fsr0h
 20376  00285A  50EF               	movf	indf0,w,c
 20377  00285C                     u7990:
 20378  00285C  6EDF               	movwf	indf2,c
 20379  00285E  0100               	movlb	0	; () banked
 20380  002860  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20381  002862  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20382                           
 20383                           ; BSR set to: 0
 20384  002864  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20385  002868  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20386  00286C  2ADE               	incf	postinc2,f,c
 20387  00286E  0E00               	movlw	0
 20388  002870  22DD               	addwfc	postdec2,f,c
 20389  002872                     l1650:
 20390                           
 20391                           ; BSR set to: 0
 20392                           
 20393                           ; BSR set to: 0
 20394                           
 20395                           ; BSR set to: 0
 20396  002872  077A               	decf	__doprnt@len& (0+255),f,b
 20397  002874  A0D8               	btfss	status,0,c
 20398  002876  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 20399  002878  297A               	incf	__doprnt@len& (0+255),w,b
 20400  00287A  E1A4               	bnz	l6375
 20401  00287C  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 20402  00287E  B4D8               	btfsc	status,2,c
 20403  002880  D163               	goto	u8170
 20404  002882  D7A0               	goto	l1648
 20405  002884                     
 20406                           ; BSR set to: 0
 20407                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20408                           
 20409                           ; BSR set to: 0
 20410  002884  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20411  002888  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20412  00288C  CFDF F072          	movff	indf2,??__doprnt
 20413  002890  0E02               	movlw	2
 20414  002892  26DE               	addwf	postinc2,f,c
 20415  002894  CFDF F073          	movff	indf2,??__doprnt+1
 20416  002898  0E00               	movlw	0
 20417  00289A  22DD               	addwfc	postdec2,f,c
 20418  00289C  C072  FFD9         	movff	??__doprnt,fsr2l
 20419  0028A0  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20420  0028A4  50DF               	movf	indf2,w,c
 20421  0028A6  6F80               	movwf	__doprnt@c& (0+255),b
 20422  0028A8                     
 20423                           ; BSR set to: 0
 20424                           ;doprnt.c: 805: cp = (char *)&c;
 20425                           
 20426                           ; BSR set to: 0
 20427  0028A8  0E80               	movlw	low __doprnt@c
 20428  0028AA  6F7C               	movwf	__doprnt@cp& (0+255),b
 20429  0028AC  0E00               	movlw	high __doprnt@c
 20430  0028AE  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;doprnt.c: 806: len = 1;
 20434  0028B0  0E00               	movlw	0
 20435  0028B2  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20436  0028B4  0E01               	movlw	1
 20437  0028B6  6F7A               	movwf	__doprnt@len& (0+255),b
 20438                           
 20439                           ;doprnt.c: 807: goto dostring;
 20440  0028B8  D738               	goto	u7910
 20441  0028BA                     l1628:
 20442                           
 20443                           ; BSR set to: 0
 20444  0028BA  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20445  0028BE  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20446  0028C2  0100               	movlb	0	; () banked
 20447  0028C4  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20448  0028C6  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20449  0028C8                     	if	0	;tblptru may be non-zero
 20450  0028C8                     	endif
 20451  0028C8                     	if	0	;tblptru may be non-zero
 20452  0028C8                     	endif
 20453  0028C8  0008               	tblrd		*
 20454  0028CA  CFF5 F080          	movff	tablat,__doprnt@c
 20455  0028CE  5180               	movf	__doprnt@c& (0+255),w,b
 20456                           
 20457                           ; Switch size 1, requested type "space"
 20458                           ; Number of cases is 5, Range of values is 0 to 115
 20459                           ; switch strategies available:
 20460                           ; Name         Instructions Cycles
 20461                           ; simple_byte           16     9 (average)
 20462                           ;	Chosen strategy is simple_byte
 20463  0028D0  0A00               	xorlw	0	; case 0
 20464  0028D2  B4D8               	btfsc	status,2,c
 20465  0028D4  D146               	goto	u8180
 20466  0028D6  0A63               	xorlw	99	; case 99
 20467  0028D8  B4D8               	btfsc	status,2,c
 20468  0028DA  D7D4               	goto	l1652
 20469  0028DC  0A07               	xorlw	7	; case 100
 20470  0028DE  B4D8               	btfsc	status,2,c
 20471  0028E0  D007               	goto	l1633
 20472  0028E2  0A0D               	xorlw	13	; case 105
 20473  0028E4  B4D8               	btfsc	status,2,c
 20474  0028E6  D004               	goto	l1633
 20475  0028E8  0A1A               	xorlw	26	; case 115
 20476  0028EA  B4D8               	btfsc	status,2,c
 20477  0028EC  D6E0               	goto	l1634
 20478  0028EE  D7DC               	goto	l1653
 20479  0028F0                     l1633:
 20480                           
 20481                           ;doprnt.c: 1253: {
 20482                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20483                           
 20484                           ; BSR set to: 0
 20485  0028F0  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20486  0028F4  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20487  0028F8  CFDF F072          	movff	indf2,??__doprnt
 20488  0028FC  0E02               	movlw	2
 20489  0028FE  26DE               	addwf	postinc2,f,c
 20490  002900  CFDF F073          	movff	indf2,??__doprnt+1
 20491  002904  0E00               	movlw	0
 20492  002906  22DD               	addwfc	postdec2,f,c
 20493  002908  C072  FFD9         	movff	??__doprnt,fsr2l
 20494  00290C  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20495  002910  CFDE F078          	movff	postinc2,__doprnt@val
 20496  002914  CFDD F079          	movff	postdec2,__doprnt@val+1
 20497                           
 20498                           ;doprnt.c: 1261: if((int)val < 0) {
 20499  002918  0100               	movlb	0	; () banked
 20500  00291A  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 20501  00291C  D006               	goto	l1654
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;doprnt.c: 1262: flag |= 0x03;
 20505  00291E  0E03               	movlw	3
 20506  002920  1377               	iorwf	__doprnt@flag& (0+255),f,b
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;doprnt.c: 1263: val = -val;
 20510  002922  6D78               	negf	__doprnt@val& (0+255),b
 20511  002924  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 20512  002926  B0D8               	btfsc	status,0,c
 20513  002928  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 20514  00292A                     l1654:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;doprnt.c: 1264: }
 20518                           ;doprnt.c: 1266: }
 20519                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20520                           
 20521                           ; BSR set to: 0
 20522  00292A  0E01               	movlw	1
 20523  00292C  6F80               	movwf	__doprnt@c& (0+255),b
 20524  00292E                     l6409:
 20525                           
 20526                           ; BSR set to: 0
 20527  00292E  0E05               	movlw	5
 20528  002930  1980               	xorwf	__doprnt@c& (0+255),w,b
 20529  002932  B4D8               	btfsc	status,2,c
 20530  002934  D012               	goto	u8040
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;doprnt.c: 1306: if(val < dpowers[c])
 20534                           
 20535                           ; BSR set to: 0
 20536                           
 20537                           ; BSR set to: 0
 20538  002936  5180               	movf	__doprnt@c& (0+255),w,b
 20539  002938  0D02               	mullw	2
 20540  00293A  0EB7               	movlw	low _dpowers
 20541  00293C  24F3               	addwf	prodl,w,c
 20542  00293E  6EF6               	movwf	tblptrl,c
 20543  002940  0E78               	movlw	high _dpowers
 20544  002942  20F4               	addwfc	prodh,w,c
 20545  002944  6EF7               	movwf	tblptrh,c
 20546  002946                     	if	0	;There are less than 3 active tblptr bytes
 20547  002946                     	endif
 20548  002946  0009               	tblrd		*+
 20549  002948  50F5               	movf	tablat,w,c
 20550  00294A  5D78               	subwf	__doprnt@val& (0+255),w,b
 20551  00294C  0009               	tblrd		*+
 20552  00294E  50F5               	movf	tablat,w,c
 20553  002950  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 20554  002952  A0D8               	btfss	status,0,c
 20555  002954  D002               	goto	u8040
 20556                           
 20557                           ; BSR set to: 0
 20558                           
 20559                           ; BSR set to: 0
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;doprnt.c: 1307: break;
 20563  002956  2B80               	incf	__doprnt@c& (0+255),f,b
 20564  002958  D7EA               	goto	l6409
 20565  00295A                     u8040:
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20569                           
 20570                           ; BSR set to: 0
 20571  00295A  517E               	movf	__doprnt@width& (0+255),w,b
 20572  00295C  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20573  00295E  B4D8               	btfsc	status,2,c
 20574  002960  D009               	goto	l1658
 20575                           
 20576                           ; BSR set to: 0
 20577  002962  C077  F072         	movff	__doprnt@flag,??__doprnt
 20578  002966  0E03               	movlw	3
 20579  002968  1772               	andwf	??__doprnt& (0+255),f,b
 20580  00296A  B4D8               	btfsc	status,2,c
 20581  00296C  D003               	goto	l1658
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;doprnt.c: 1346: width--;
 20585  00296E  077E               	decf	__doprnt@width& (0+255),f,b
 20586  002970  A0D8               	btfss	status,0,c
 20587  002972  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20588  002974                     l1658:
 20589                           
 20590                           ; BSR set to: 0
 20591                           ;doprnt.c: 1381: if(width > c)
 20592                           
 20593                           ; BSR set to: 0
 20594  002974  0E80               	movlw	128
 20595  002976  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20596  002978  0E7F               	movlw	127
 20597  00297A  6F72               	movwf	??__doprnt& (0+255),b
 20598  00297C  517E               	movf	__doprnt@width& (0+255),w,b
 20599  00297E  5D80               	subwf	__doprnt@c& (0+255),w,b
 20600  002980  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20601  002982  0A80               	xorlw	128
 20602  002984  5972               	subwfb	??__doprnt& (0+255),w,b
 20603  002986  B0D8               	btfsc	status,0,c
 20604  002988  D007               	goto	l1659
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;doprnt.c: 1382: width -= c;
 20608  00298A  5180               	movf	__doprnt@c& (0+255),w,b
 20609  00298C  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20610  00298E  0E00               	movlw	0
 20611  002990  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20612  002992  0EFF               	movlw	255
 20613  002994  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20614  002996  D004               	goto	l1660
 20615  002998                     l1659:
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;doprnt.c: 1383: else
 20619                           ;doprnt.c: 1384: width = 0;
 20620                           
 20621                           ; BSR set to: 0
 20622  002998  0E00               	movlw	0
 20623  00299A  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20624  00299C  0E00               	movlw	0
 20625  00299E  6F7E               	movwf	__doprnt@width& (0+255),b
 20626  0029A0                     l1660:
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;doprnt.c: 1422: {
 20630                           ;doprnt.c: 1424: if(width
 20631                           ;doprnt.c: 1428: )
 20632                           
 20633                           ; BSR set to: 0
 20634  0029A0  517E               	movf	__doprnt@width& (0+255),w,b
 20635  0029A2  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20636  0029A4  B4D8               	btfsc	status,2,c
 20637  0029A6  D03A               	goto	u8110
 20638  0029A8                     u8080:
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20642                           
 20643                           ; BSR set to: 0
 20644                           
 20645                           ;doprnt.c: 1429: do
 20646  0029A8  EE20 F002          	lfsr	2,2
 20647  0029AC  516C               	movf	__doprnt@pb& (0+255),w,b
 20648  0029AE  26D9               	addwf	fsr2l,f,c
 20649  0029B0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20650  0029B2  22DA               	addwfc	fsr2h,f,c
 20651  0029B4  50DE               	movf	postinc2,w,c
 20652  0029B6  10DE               	iorwf	postinc2,w,c
 20653  0029B8  B4D8               	btfsc	status,2,c
 20654  0029BA  D013               	goto	l1663
 20655                           
 20656                           ; BSR set to: 0
 20657  0029BC  EE20 F002          	lfsr	2,2
 20658  0029C0  516C               	movf	__doprnt@pb& (0+255),w,b
 20659  0029C2  26D9               	addwf	fsr2l,f,c
 20660  0029C4  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20661  0029C6  22DA               	addwfc	fsr2h,f,c
 20662  0029C8  D801               	call	u8108
 20663  0029CA  D020               	goto	l1664
 20664  0029CC                     u8108:
 20665  0029CC  0005               	push	
 20666  0029CE  6EFA               	movwf	pclath,c
 20667  0029D0  50DE               	movf	postinc2,w,c
 20668  0029D2  6EFD               	movwf	tosl,c
 20669  0029D4  50DE               	movf	postinc2,w,c
 20670  0029D6  6EFE               	movwf	tosh,c
 20671  0029D8  50F8               	movf	tblptru,w,c
 20672  0029DA  6EFF               	movwf	tosu,c
 20673  0029DC  50FA               	movf	pclath,w,c
 20674  0029DE  0E20               	movlw	32
 20675  0029E0  0012               	return		;indir
 20676  0029E2                     l1663:
 20677  0029E2  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20678  0029E6  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20679  0029EA  CFDE F072          	movff	postinc2,??__doprnt
 20680  0029EE  CFDD F073          	movff	postdec2,??__doprnt+1
 20681  0029F2  C072  FFD9         	movff	??__doprnt,fsr2l
 20682  0029F6  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20683  0029FA  0E20               	movlw	32
 20684  0029FC  6EDF               	movwf	indf2,c
 20685  0029FE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20686  002A02  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20687  002A06  2ADE               	incf	postinc2,f,c
 20688  002A08  0E00               	movlw	0
 20689  002A0A  22DD               	addwfc	postdec2,f,c
 20690  002A0C                     l1664:
 20691                           
 20692                           ;doprnt.c: 1431: while(--width);
 20693  002A0C  0100               	movlb	0	; () banked
 20694  002A0E  077E               	decf	__doprnt@width& (0+255),f,b
 20695  002A10  A0D8               	btfss	status,0,c
 20696  002A12  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20697  002A14  517E               	movf	__doprnt@width& (0+255),w,b
 20698  002A16  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20699  002A18  A4D8               	btfss	status,2,c
 20700  002A1A  D7C6               	goto	u8080
 20701  002A1C                     u8110:
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;doprnt.c: 1438: if(flag & 0x03)
 20705                           
 20706                           ; BSR set to: 0
 20707                           
 20708                           ; BSR set to: 0
 20709  002A1C  C077  F072         	movff	__doprnt@flag,??__doprnt
 20710  002A20  0E03               	movlw	3
 20711  002A22  1772               	andwf	??__doprnt& (0+255),f,b
 20712  002A24  B4D8               	btfsc	status,2,c
 20713  002A26  D032               	goto	l1668
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 20717  002A28  EE20 F002          	lfsr	2,2
 20718  002A2C  516C               	movf	__doprnt@pb& (0+255),w,b
 20719  002A2E  26D9               	addwf	fsr2l,f,c
 20720  002A30  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20721  002A32  22DA               	addwfc	fsr2h,f,c
 20722  002A34  50DE               	movf	postinc2,w,c
 20723  002A36  10DE               	iorwf	postinc2,w,c
 20724  002A38  B4D8               	btfsc	status,2,c
 20725  002A3A  D013               	goto	l1667
 20726                           
 20727                           ; BSR set to: 0
 20728  002A3C  EE20 F002          	lfsr	2,2
 20729  002A40  516C               	movf	__doprnt@pb& (0+255),w,b
 20730  002A42  26D9               	addwf	fsr2l,f,c
 20731  002A44  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20732  002A46  22DA               	addwfc	fsr2h,f,c
 20733  002A48  D801               	call	u8148
 20734  002A4A  D020               	goto	l1668
 20735  002A4C                     u8148:
 20736  002A4C  0005               	push	
 20737  002A4E  6EFA               	movwf	pclath,c
 20738  002A50  50DE               	movf	postinc2,w,c
 20739  002A52  6EFD               	movwf	tosl,c
 20740  002A54  50DE               	movf	postinc2,w,c
 20741  002A56  6EFE               	movwf	tosh,c
 20742  002A58  50F8               	movf	tblptru,w,c
 20743  002A5A  6EFF               	movwf	tosu,c
 20744  002A5C  50FA               	movf	pclath,w,c
 20745  002A5E  0E2D               	movlw	45
 20746  002A60  0012               	return		;indir
 20747  002A62                     l1667:
 20748  002A62  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20749  002A66  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20750  002A6A  CFDE F072          	movff	postinc2,??__doprnt
 20751  002A6E  CFDD F073          	movff	postdec2,??__doprnt+1
 20752  002A72  C072  FFD9         	movff	??__doprnt,fsr2l
 20753  002A76  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20754  002A7A  0E2D               	movlw	45
 20755  002A7C  6EDF               	movwf	indf2,c
 20756  002A7E  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20757  002A82  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20758  002A86  2ADE               	incf	postinc2,f,c
 20759  002A88  0E00               	movlw	0
 20760  002A8A  22DD               	addwfc	postdec2,f,c
 20761  002A8C                     l1668:
 20762                           
 20763                           ;doprnt.c: 1469: }
 20764                           ;doprnt.c: 1472: prec = c;
 20765  002A8C  C080  F076         	movff	__doprnt@c,__doprnt@prec
 20766                           
 20767                           ;doprnt.c: 1474: while(prec--) {
 20768  002A90  D056               	goto	l1672
 20769  002A92                     
 20770                           ;doprnt.c: 1478: {
 20771                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20772  002A92  0100               	movlb	0	; () banked
 20773  002A94  5176               	movf	__doprnt@prec& (0+255),w,b
 20774  002A96  0D02               	mullw	2
 20775  002A98  0EB7               	movlw	low _dpowers
 20776  002A9A  24F3               	addwf	prodl,w,c
 20777  002A9C  6EF6               	movwf	tblptrl,c
 20778  002A9E  0E78               	movlw	high _dpowers
 20779  002AA0  20F4               	addwfc	prodh,w,c
 20780  002AA2  6EF7               	movwf	tblptrh,c
 20781  002AA4                     	if	0	;There are less than 3 active tblptr bytes
 20782  002AA4                     	endif
 20783  002AA4  0009               	tblrd		*+
 20784  002AA6  CFF5 F062          	movff	tablat,___lwdiv@divisor
 20785  002AAA  000A               	tblrd		*-
 20786  002AAC  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 20787  002AB0  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 20788  002AB4  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 20789  002AB8  ECAF  F02A         	call	___lwdiv
 20790  002ABC  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 20791  002AC0  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 20792  002AC4  0E00               	movlw	0
 20793  002AC6  0100               	movlb	0	; () banked
 20794  002AC8  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 20795  002ACA  0E0A               	movlw	10
 20796  002ACC  6F69               	movwf	___lwmod@divisor& (0+255),b
 20797  002ACE  EC71  F02B         	call	___lwmod	;wreg free
 20798  002AD2  0100               	movlb	0	; () banked
 20799  002AD4  5167               	movf	?___lwmod& (0+255),w,b
 20800  002AD6  0F30               	addlw	48
 20801  002AD8  6F80               	movwf	__doprnt@c& (0+255),b
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;doprnt.c: 1523: }
 20805                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 20806  002ADA  EE20 F002          	lfsr	2,2
 20807  002ADE  516C               	movf	__doprnt@pb& (0+255),w,b
 20808  002AE0  26D9               	addwf	fsr2l,f,c
 20809  002AE2  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20810  002AE4  22DA               	addwfc	fsr2h,f,c
 20811  002AE6  50DE               	movf	postinc2,w,c
 20812  002AE8  10DE               	iorwf	postinc2,w,c
 20813  002AEA  B4D8               	btfsc	status,2,c
 20814  002AEC  D013               	goto	l1671
 20815                           
 20816                           ; BSR set to: 0
 20817  002AEE  EE20 F002          	lfsr	2,2
 20818  002AF2  516C               	movf	__doprnt@pb& (0+255),w,b
 20819  002AF4  26D9               	addwf	fsr2l,f,c
 20820  002AF6  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20821  002AF8  22DA               	addwfc	fsr2h,f,c
 20822  002AFA  D801               	call	u8168
 20823  002AFC  D020               	goto	l1672
 20824  002AFE                     u8168:
 20825  002AFE  0005               	push	
 20826  002B00  6EFA               	movwf	pclath,c
 20827  002B02  50DE               	movf	postinc2,w,c
 20828  002B04  6EFD               	movwf	tosl,c
 20829  002B06  50DE               	movf	postinc2,w,c
 20830  002B08  6EFE               	movwf	tosh,c
 20831  002B0A  50F8               	movf	tblptru,w,c
 20832  002B0C  6EFF               	movwf	tosu,c
 20833  002B0E  50FA               	movf	pclath,w,c
 20834  002B10  5180               	movf	__doprnt@c& (0+255),w,b
 20835  002B12  0012               	return		;indir
 20836  002B14                     l1671:
 20837  002B14  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20838  002B18  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20839  002B1C  CFDE F072          	movff	postinc2,??__doprnt
 20840  002B20  CFDD F073          	movff	postdec2,??__doprnt+1
 20841  002B24  C072  FFD9         	movff	??__doprnt,fsr2l
 20842  002B28  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20843  002B2C  C080  FFDF         	movff	__doprnt@c,indf2
 20844  002B30  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20845  002B34  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20846  002B38  2ADE               	incf	postinc2,f,c
 20847  002B3A  0E00               	movlw	0
 20848  002B3C  22DD               	addwfc	postdec2,f,c
 20849  002B3E                     l1672:
 20850  002B3E  0100               	movlb	0	; () banked
 20851  002B40  0776               	decf	__doprnt@prec& (0+255),f,b
 20852  002B42  2976               	incf	__doprnt@prec& (0+255),w,b
 20853  002B44  A4D8               	btfss	status,2,c
 20854  002B46  D7A5               	goto	l1670
 20855  002B48                     u8170:
 20856                           
 20857                           ; BSR set to: 0
 20858                           
 20859                           ; BSR set to: 0
 20860  002B48  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20861  002B4C  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20862  002B50  0100               	movlb	0	; () banked
 20863  002B52  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20864  002B54  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20865  002B56                     	if	0	;tblptru may be non-zero
 20866  002B56                     	endif
 20867  002B56                     	if	0	;tblptru may be non-zero
 20868  002B56                     	endif
 20869  002B56  0008               	tblrd		*
 20870  002B58  CFF5 F080          	movff	tablat,__doprnt@c
 20871  002B5C  5180               	movf	__doprnt@c& (0+255),w,b
 20872  002B5E  A4D8               	btfss	status,2,c
 20873  002B60  D527               	goto	l1621
 20874  002B62                     u8180:
 20875                           
 20876                           ;doprnt.c: 1540: return 0;
 20877                           
 20878                           ; BSR set to: 0
 20879                           
 20880                           ;doprnt.c: 1525: }
 20881                           ;doprnt.c: 1533: }
 20882                           ;doprnt.c: 1535: alldone:
 20883                           
 20884                           ; BSR set to: 0
 20885  002B62  0E00               	movlw	0
 20886  002B64  0100               	movlb	0	; () banked
 20887  002B66  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 20888  002B68  0E00               	movlw	0
 20889  002B6A  6F6C               	movwf	?__doprnt& (0+255),b
 20890  002B6C  0012               	return	
 20891  002B6E                     __end_of__doprnt:
 20892                           	opt stack 0
 20893                           tosu	equ	0xFFF
 20894                           tosh	equ	0xFFE
 20895                           tosl	equ	0xFFD
 20896                           pclath	equ	0xFFA
 20897                           tblptru	equ	0xFF8
 20898                           tblptrh	equ	0xFF7
 20899                           tblptrl	equ	0xFF6
 20900                           tablat	equ	0xFF5
 20901                           prodh	equ	0xFF4
 20902                           prodl	equ	0xFF3
 20903                           intcon	equ	0xFF2
 20904                           intcon2	equ	0xFF1
 20905                           intcon3	equ	0xFF0
 20906                           indf0	equ	0xFEF
 20907                           postinc0	equ	0xFEE
 20908                           fsr0h	equ	0xFEA
 20909                           fsr0l	equ	0xFE9
 20910                           wreg	equ	0xFE8
 20911                           indf1	equ	0xFE7
 20912                           postinc1	equ	0xFE6
 20913                           postdec1	equ	0xFE5
 20914                           plusw1	equ	0xFE3
 20915                           fsr1h	equ	0xFE2
 20916                           fsr1l	equ	0xFE1
 20917                           indf2	equ	0xFDF
 20918                           postinc2	equ	0xFDE
 20919                           postdec2	equ	0xFDD
 20920                           plusw2	equ	0xFDB
 20921                           fsr2h	equ	0xFDA
 20922                           fsr2l	equ	0xFD9
 20923                           status	equ	0xFD8
 20924                           
 20925 ;; *************** function _putch *****************
 20926 ;; Defined at:
 20927 ;;		line 35 in file "src/USART.h"
 20928 ;; Parameters:    Size  Location     Type
 20929 ;;  c               1    wreg     unsigned char 
 20930 ;; Auto vars:     Size  Location     Type
 20931 ;;  c               1    0[BANK0 ] unsigned char 
 20932 ;; Return value:  Size  Location     Type
 20933 ;;                  1    wreg      void 
 20934 ;; Registers used:
 20935 ;;		wreg
 20936 ;; Tracked objects:
 20937 ;;		On entry : 0/0
 20938 ;;		On exit  : 0/0
 20939 ;;		Unchanged: 0/0
 20940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20941 ;;      Params:         0       0       0       0       0       0       0       0       0
 20942 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20944 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20945 ;;Total ram usage:        1 bytes
 20946 ;; Hardware stack levels used:    1
 20947 ;; Hardware stack levels required when called:    6
 20948 ;; This function calls:
 20949 ;;		Nothing
 20950 ;; This function is called by:
 20951 ;;		_printf
 20952 ;;		__doprnt
 20953 ;; This function uses a non-reentrant model
 20954 ;;
 20955                           
 20956                           	psect	text40
 20957  005B16                     __ptext40:
 20958                           	opt stack 0
 20959  005B16                     _putch:
 20960                           	opt stack 22
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;incstack = 0
 20964                           ;putch@c stored from wreg
 20965  005B16  0100               	movlb	0	; () banked
 20966  005B18  6F60               	movwf	putch@c& (0+255),b
 20967  005B1A                     
 20968                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 20969  005B1A  A2AC               	btfss	4012,1,c	;volatile
 20970  005B1C  D7FE               	goto	l6213
 20971                           
 20972                           ;USART.h: 38: TXREG = c;
 20973  005B1E  C060  FFAD         	movff	putch@c,4013	;volatile
 20974  005B22  0012               	return		;funcret
 20975  005B24                     __end_of_putch:
 20976                           	opt stack 0
 20977                           tosu	equ	0xFFF
 20978                           tosh	equ	0xFFE
 20979                           tosl	equ	0xFFD
 20980                           pclath	equ	0xFFA
 20981                           tblptru	equ	0xFF8
 20982                           tblptrh	equ	0xFF7
 20983                           tblptrl	equ	0xFF6
 20984                           tablat	equ	0xFF5
 20985                           prodh	equ	0xFF4
 20986                           prodl	equ	0xFF3
 20987                           intcon	equ	0xFF2
 20988                           intcon2	equ	0xFF1
 20989                           intcon3	equ	0xFF0
 20990                           indf0	equ	0xFEF
 20991                           postinc0	equ	0xFEE
 20992                           fsr0h	equ	0xFEA
 20993                           fsr0l	equ	0xFE9
 20994                           wreg	equ	0xFE8
 20995                           indf1	equ	0xFE7
 20996                           postinc1	equ	0xFE6
 20997                           postdec1	equ	0xFE5
 20998                           plusw1	equ	0xFE3
 20999                           fsr1h	equ	0xFE2
 21000                           fsr1l	equ	0xFE1
 21001                           indf2	equ	0xFDF
 21002                           postinc2	equ	0xFDE
 21003                           postdec2	equ	0xFDD
 21004                           plusw2	equ	0xFDB
 21005                           fsr2h	equ	0xFDA
 21006                           fsr2l	equ	0xFD9
 21007                           status	equ	0xFD8
 21008                           
 21009 ;; *************** function _isdigit *****************
 21010 ;; Defined at:
 21011 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 21012 ;; Parameters:    Size  Location     Type
 21013 ;;  c               1    wreg     unsigned char 
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;  c               1    2[BANK0 ] unsigned char 
 21016 ;; Return value:  Size  Location     Type
 21017 ;;		None               void
 21018 ;; Registers used:
 21019 ;;		wreg, status,2, status,0
 21020 ;; Tracked objects:
 21021 ;;		On entry : 0/0
 21022 ;;		On exit  : 0/0
 21023 ;;		Unchanged: 0/0
 21024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21025 ;;      Params:         0       0       0       0       0       0       0       0       0
 21026 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21027 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21028 ;;      Totals:         0       3       0       0       0       0       0       0       0
 21029 ;;Total ram usage:        3 bytes
 21030 ;; Hardware stack levels used:    1
 21031 ;; Hardware stack levels required when called:    6
 21032 ;; This function calls:
 21033 ;;		Nothing
 21034 ;; This function is called by:
 21035 ;;		__doprnt
 21036 ;;		_atoi
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           	psect	text41
 21041  005A78                     __ptext41:
 21042                           	opt stack 0
 21043  005A78                     _isdigit:
 21044                           	opt stack 22
 21045                           
 21046                           ;incstack = 0
 21047                           ;isdigit@c stored from wreg
 21048  005A78  0100               	movlb	0	; () banked
 21049  005A7A  6F62               	movwf	isdigit@c& (0+255),b
 21050  005A7C  0E00               	movlw	0
 21051  005A7E  0100               	movlb	0	; () banked
 21052  005A80  6F61               	movwf	_isdigit$2054& (0+255),b
 21053                           
 21054                           ; BSR set to: 0
 21055  005A82  0E3A               	movlw	58
 21056  005A84  6162               	cpfslt	isdigit@c& (0+255),b
 21057  005A86  D005               	goto	l2020
 21058                           
 21059                           ; BSR set to: 0
 21060  005A88  0E2F               	movlw	47
 21061  005A8A  6562               	cpfsgt	isdigit@c& (0+255),b
 21062  005A8C  D002               	goto	l2020
 21063                           
 21064                           ; BSR set to: 0
 21065  005A8E  0E01               	movlw	1
 21066  005A90  6F61               	movwf	_isdigit$2054& (0+255),b
 21067  005A92                     l2020:
 21068                           
 21069                           ; BSR set to: 0
 21070                           
 21071                           ; BSR set to: 0
 21072  005A92  C061  F060         	movff	_isdigit$2054,??_isdigit
 21073  005A96  3160               	rrcf	??_isdigit& (0+255),w,b
 21074  005A98  0012               	return	
 21075  005A9A                     __end_of_isdigit:
 21076                           	opt stack 0
 21077                           tosu	equ	0xFFF
 21078                           tosh	equ	0xFFE
 21079                           tosl	equ	0xFFD
 21080                           pclath	equ	0xFFA
 21081                           tblptru	equ	0xFF8
 21082                           tblptrh	equ	0xFF7
 21083                           tblptrl	equ	0xFF6
 21084                           tablat	equ	0xFF5
 21085                           prodh	equ	0xFF4
 21086                           prodl	equ	0xFF3
 21087                           intcon	equ	0xFF2
 21088                           intcon2	equ	0xFF1
 21089                           intcon3	equ	0xFF0
 21090                           indf0	equ	0xFEF
 21091                           postinc0	equ	0xFEE
 21092                           fsr0h	equ	0xFEA
 21093                           fsr0l	equ	0xFE9
 21094                           wreg	equ	0xFE8
 21095                           indf1	equ	0xFE7
 21096                           postinc1	equ	0xFE6
 21097                           postdec1	equ	0xFE5
 21098                           plusw1	equ	0xFE3
 21099                           fsr1h	equ	0xFE2
 21100                           fsr1l	equ	0xFE1
 21101                           indf2	equ	0xFDF
 21102                           postinc2	equ	0xFDE
 21103                           postdec2	equ	0xFDD
 21104                           plusw2	equ	0xFDB
 21105                           fsr2h	equ	0xFDA
 21106                           fsr2l	equ	0xFD9
 21107                           status	equ	0xFD8
 21108                           
 21109 ;; *************** function ___wmul *****************
 21110 ;; Defined at:
 21111 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 21112 ;; Parameters:    Size  Location     Type
 21113 ;;  multiplier      2    0[BANK0 ] unsigned int 
 21114 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 21115 ;; Auto vars:     Size  Location     Type
 21116 ;;  product         2    4[BANK0 ] unsigned int 
 21117 ;; Return value:  Size  Location     Type
 21118 ;;                  2    0[BANK0 ] unsigned int 
 21119 ;; Registers used:
 21120 ;;		wreg, status,2, status,0, prodl, prodh
 21121 ;; Tracked objects:
 21122 ;;		On entry : 0/0
 21123 ;;		On exit  : 0/0
 21124 ;;		Unchanged: 0/0
 21125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21126 ;;      Params:         0       4       0       0       0       0       0       0       0
 21127 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21129 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21130 ;;Total ram usage:        6 bytes
 21131 ;; Hardware stack levels used:    1
 21132 ;; Hardware stack levels required when called:    6
 21133 ;; This function calls:
 21134 ;;		Nothing
 21135 ;; This function is called by:
 21136 ;;		_enviaDadosWifi
 21137 ;;		_main
 21138 ;;		__doprnt
 21139 ;;		_atoi
 21140 ;; This function uses a non-reentrant model
 21141 ;;
 21142                           
 21143                           	psect	text42
 21144  005990                     __ptext42:
 21145                           	opt stack 0
 21146  005990                     ___wmul:
 21147                           	opt stack 22
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;incstack = 0
 21151  005990  0100               	movlb	0	; () banked
 21152  005992  5160               	movf	___wmul@multiplier& (0+255),w,b
 21153  005994  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21154  005996  CFF3 F064          	movff	prodl,___wmul@product
 21155  00599A  CFF4 F065          	movff	prodh,___wmul@product+1
 21156  00599E  5160               	movf	___wmul@multiplier& (0+255),w,b
 21157  0059A0  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21158  0059A2  50F3               	movf	prodl,w,c
 21159  0059A4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21160  0059A6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21161  0059A8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21162  0059AA  50F3               	movf	prodl,w,c
 21163  0059AC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21164                           
 21165                           ; BSR set to: 0
 21166  0059AE  C064  F060         	movff	___wmul@product,?___wmul
 21167  0059B2  C065  F061         	movff	___wmul@product+1,?___wmul+1
 21168  0059B6  0012               	return	
 21169  0059B8                     __end_of___wmul:
 21170                           	opt stack 0
 21171                           tosu	equ	0xFFF
 21172                           tosh	equ	0xFFE
 21173                           tosl	equ	0xFFD
 21174                           pclath	equ	0xFFA
 21175                           tblptru	equ	0xFF8
 21176                           tblptrh	equ	0xFF7
 21177                           tblptrl	equ	0xFF6
 21178                           tablat	equ	0xFF5
 21179                           prodh	equ	0xFF4
 21180                           prodl	equ	0xFF3
 21181                           intcon	equ	0xFF2
 21182                           intcon2	equ	0xFF1
 21183                           intcon3	equ	0xFF0
 21184                           indf0	equ	0xFEF
 21185                           postinc0	equ	0xFEE
 21186                           fsr0h	equ	0xFEA
 21187                           fsr0l	equ	0xFE9
 21188                           wreg	equ	0xFE8
 21189                           indf1	equ	0xFE7
 21190                           postinc1	equ	0xFE6
 21191                           postdec1	equ	0xFE5
 21192                           plusw1	equ	0xFE3
 21193                           fsr1h	equ	0xFE2
 21194                           fsr1l	equ	0xFE1
 21195                           indf2	equ	0xFDF
 21196                           postinc2	equ	0xFDE
 21197                           postdec2	equ	0xFDD
 21198                           plusw2	equ	0xFDB
 21199                           fsr2h	equ	0xFDA
 21200                           fsr2l	equ	0xFD9
 21201                           status	equ	0xFD8
 21202                           
 21203 ;; *************** function ___lwmod *****************
 21204 ;; Defined at:
 21205 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 21206 ;; Parameters:    Size  Location     Type
 21207 ;;  dividend        2    7[BANK0 ] unsigned int 
 21208 ;;  divisor         2    9[BANK0 ] unsigned int 
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;  counter         1   11[BANK0 ] unsigned char 
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  2    7[BANK0 ] unsigned int 
 21213 ;; Registers used:
 21214 ;;		wreg, status,2, status,0
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/0
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21220 ;;      Params:         0       4       0       0       0       0       0       0       0
 21221 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21223 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21224 ;;Total ram usage:        5 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:    6
 21227 ;; This function calls:
 21228 ;;		Nothing
 21229 ;; This function is called by:
 21230 ;;		__doprnt
 21231 ;; This function uses a non-reentrant model
 21232 ;;
 21233                           
 21234                           	psect	text43
 21235  0056E2                     __ptext43:
 21236                           	opt stack 0
 21237  0056E2                     ___lwmod:
 21238                           	opt stack 22
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;incstack = 0
 21242  0056E2  0100               	movlb	0	; () banked
 21243  0056E4  5169               	movf	___lwmod@divisor& (0+255),w,b
 21244  0056E6  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21245  0056E8  B4D8               	btfsc	status,2,c
 21246  0056EA  D018               	goto	l2114
 21247                           
 21248                           ; BSR set to: 0
 21249  0056EC  0E01               	movlw	1
 21250  0056EE  6F6B               	movwf	___lwmod@counter& (0+255),b
 21251  0056F0  D004               	goto	l2109
 21252  0056F2                     
 21253                           ; BSR set to: 0
 21254                           
 21255                           ; BSR set to: 0
 21256  0056F2  90D8               	bcf	status,0,c
 21257  0056F4  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 21258  0056F6  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21259  0056F8  2B6B               	incf	___lwmod@counter& (0+255),f,b
 21260  0056FA                     l2109:
 21261                           
 21262                           ; BSR set to: 0
 21263                           
 21264                           ; BSR set to: 0
 21265  0056FA  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21266  0056FC  D7FA               	goto	l2110
 21267  0056FE                     u7760:
 21268                           
 21269                           ; BSR set to: 0
 21270                           
 21271                           ; BSR set to: 0
 21272                           
 21273                           ; BSR set to: 0
 21274  0056FE  5169               	movf	___lwmod@divisor& (0+255),w,b
 21275  005700  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 21276  005702  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21277  005704  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21278  005706  A0D8               	btfss	status,0,c
 21279  005708  D004               	goto	l2113
 21280                           
 21281                           ; BSR set to: 0
 21282  00570A  5169               	movf	___lwmod@divisor& (0+255),w,b
 21283  00570C  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 21284  00570E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21285  005710  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21286  005712                     l2113:
 21287                           
 21288                           ; BSR set to: 0
 21289                           
 21290                           ; BSR set to: 0
 21291  005712  90D8               	bcf	status,0,c
 21292  005714  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21293  005716  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 21294                           
 21295                           ; BSR set to: 0
 21296  005718  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 21297  00571A  D7F1               	goto	u7760
 21298  00571C                     l2114:
 21299                           
 21300                           ; BSR set to: 0
 21301                           
 21302                           ; BSR set to: 0
 21303  00571C  C067  F067         	movff	___lwmod@dividend,?___lwmod
 21304  005720  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 21305                           
 21306                           ; BSR set to: 0
 21307  005724  0012               	return		;funcret
 21308  005726                     __end_of___lwmod:
 21309                           	opt stack 0
 21310                           tosu	equ	0xFFF
 21311                           tosh	equ	0xFFE
 21312                           tosl	equ	0xFFD
 21313                           pclath	equ	0xFFA
 21314                           tblptru	equ	0xFF8
 21315                           tblptrh	equ	0xFF7
 21316                           tblptrl	equ	0xFF6
 21317                           tablat	equ	0xFF5
 21318                           prodh	equ	0xFF4
 21319                           prodl	equ	0xFF3
 21320                           intcon	equ	0xFF2
 21321                           intcon2	equ	0xFF1
 21322                           intcon3	equ	0xFF0
 21323                           indf0	equ	0xFEF
 21324                           postinc0	equ	0xFEE
 21325                           fsr0h	equ	0xFEA
 21326                           fsr0l	equ	0xFE9
 21327                           wreg	equ	0xFE8
 21328                           indf1	equ	0xFE7
 21329                           postinc1	equ	0xFE6
 21330                           postdec1	equ	0xFE5
 21331                           plusw1	equ	0xFE3
 21332                           fsr1h	equ	0xFE2
 21333                           fsr1l	equ	0xFE1
 21334                           indf2	equ	0xFDF
 21335                           postinc2	equ	0xFDE
 21336                           postdec2	equ	0xFDD
 21337                           plusw2	equ	0xFDB
 21338                           fsr2h	equ	0xFDA
 21339                           fsr2l	equ	0xFD9
 21340                           status	equ	0xFD8
 21341                           
 21342 ;; *************** function ___lwdiv *****************
 21343 ;; Defined at:
 21344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 21345 ;; Parameters:    Size  Location     Type
 21346 ;;  dividend        2    0[BANK0 ] unsigned int 
 21347 ;;  divisor         2    2[BANK0 ] unsigned int 
 21348 ;; Auto vars:     Size  Location     Type
 21349 ;;  quotient        2    4[BANK0 ] unsigned int 
 21350 ;;  counter         1    6[BANK0 ] unsigned char 
 21351 ;; Return value:  Size  Location     Type
 21352 ;;                  2    0[BANK0 ] unsigned int 
 21353 ;; Registers used:
 21354 ;;		wreg, status,2, status,0
 21355 ;; Tracked objects:
 21356 ;;		On entry : 0/0
 21357 ;;		On exit  : 0/0
 21358 ;;		Unchanged: 0/0
 21359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21360 ;;      Params:         0       4       0       0       0       0       0       0       0
 21361 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21362 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21363 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21364 ;;Total ram usage:        7 bytes
 21365 ;; Hardware stack levels used:    1
 21366 ;; Hardware stack levels required when called:    6
 21367 ;; This function calls:
 21368 ;;		Nothing
 21369 ;; This function is called by:
 21370 ;;		__doprnt
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           	psect	text44
 21375  00555E                     __ptext44:
 21376                           	opt stack 0
 21377  00555E                     ___lwdiv:
 21378                           	opt stack 22
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;incstack = 0
 21382  00555E  0E00               	movlw	0
 21383  005560  0100               	movlb	0	; () banked
 21384  005562  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21385  005564  0E00               	movlw	0
 21386  005566  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21387                           
 21388                           ; BSR set to: 0
 21389  005568  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21390  00556A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21391  00556C  B4D8               	btfsc	status,2,c
 21392  00556E  D01C               	goto	l2104
 21393                           
 21394                           ; BSR set to: 0
 21395  005570  0E01               	movlw	1
 21396  005572  6F66               	movwf	___lwdiv@counter& (0+255),b
 21397  005574  D004               	goto	l2099
 21398  005576                     
 21399                           ; BSR set to: 0
 21400                           
 21401                           ; BSR set to: 0
 21402  005576  90D8               	bcf	status,0,c
 21403  005578  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21404  00557A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21405  00557C  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21406  00557E                     l2099:
 21407                           
 21408                           ; BSR set to: 0
 21409                           
 21410                           ; BSR set to: 0
 21411  00557E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21412  005580  D7FA               	goto	l2100
 21413  005582                     u7730:
 21414                           
 21415                           ; BSR set to: 0
 21416                           
 21417                           ; BSR set to: 0
 21418                           
 21419                           ; BSR set to: 0
 21420  005582  90D8               	bcf	status,0,c
 21421  005584  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21422  005586  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21423                           
 21424                           ; BSR set to: 0
 21425  005588  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21426  00558A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21427  00558C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21428  00558E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21429  005590  A0D8               	btfss	status,0,c
 21430  005592  D005               	goto	l2103
 21431                           
 21432                           ; BSR set to: 0
 21433  005594  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21434  005596  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21435  005598  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21436  00559A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21437                           
 21438                           ; BSR set to: 0
 21439  00559C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21440  00559E                     l2103:
 21441                           
 21442                           ; BSR set to: 0
 21443                           
 21444                           ; BSR set to: 0
 21445  00559E  90D8               	bcf	status,0,c
 21446  0055A0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21447  0055A2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21448                           
 21449                           ; BSR set to: 0
 21450  0055A4  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21451  0055A6  D7ED               	goto	u7730
 21452  0055A8                     l2104:
 21453                           
 21454                           ; BSR set to: 0
 21455                           
 21456                           ; BSR set to: 0
 21457  0055A8  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21458  0055AC  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21459                           
 21460                           ; BSR set to: 0
 21461  0055B0  0012               	return		;funcret
 21462  0055B2                     __end_of___lwdiv:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           intcon2	equ	0xFF1
 21476                           intcon3	equ	0xFF0
 21477                           indf0	equ	0xFEF
 21478                           postinc0	equ	0xFEE
 21479                           fsr0h	equ	0xFEA
 21480                           fsr0l	equ	0xFE9
 21481                           wreg	equ	0xFE8
 21482                           indf1	equ	0xFE7
 21483                           postinc1	equ	0xFE6
 21484                           postdec1	equ	0xFE5
 21485                           plusw1	equ	0xFE3
 21486                           fsr1h	equ	0xFE2
 21487                           fsr1l	equ	0xFE1
 21488                           indf2	equ	0xFDF
 21489                           postinc2	equ	0xFDE
 21490                           postdec2	equ	0xFDD
 21491                           plusw2	equ	0xFDB
 21492                           fsr2h	equ	0xFDA
 21493                           fsr2l	equ	0xFD9
 21494                           status	equ	0xFD8
 21495                           
 21496 ;; *************** function _findBufferSerial *****************
 21497 ;; Defined at:
 21498 ;;		line 33 in file "src/serial.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;  key             2   20[BANK0 ] PTR unsigned char 
 21501 ;;		 -> STR_76(3), STR_73(7), STR_72(3), STR_69(5), 
 21502 ;;		 -> STR_64(2), STR_61(3), STR_58(2), STR_57(2), 
 21503 ;;		 -> STR_52(5), STR_51(3), STR_48(3), STR_40(3), 
 21504 ;;		 -> STR_30(7), STR_24(3), STR_21(3), STR_18(3), 
 21505 ;;		 -> STR_15(3), STR_12(3), 
 21506 ;; Auto vars:     Size  Location     Type
 21507 ;;		None
 21508 ;; Return value:  Size  Location     Type
 21509 ;;                  1    wreg      unsigned char 
 21510 ;; Registers used:
 21511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21512 ;; Tracked objects:
 21513 ;;		On entry : 0/0
 21514 ;;		On exit  : 0/0
 21515 ;;		Unchanged: 0/0
 21516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21517 ;;      Params:         0       2       0       0       0       0       0       0       0
 21518 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21520 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21521 ;;Total ram usage:        2 bytes
 21522 ;; Hardware stack levels used:    1
 21523 ;; Hardware stack levels required when called:    8
 21524 ;; This function calls:
 21525 ;;		_strstr
 21526 ;; This function is called by:
 21527 ;;		_alterarDadosConexaoConfigWifi
 21528 ;;		_enviaDadosWifi
 21529 ;; This function uses a non-reentrant model
 21530 ;;
 21531                           
 21532                           	psect	text45
 21533  0059B8                     __ptext45:
 21534                           	opt stack 0
 21535  0059B8                     _findBufferSerial:
 21536                           	opt stack 21
 21537                           
 21538                           ;serial.c: 34: return strstr(bufferSerial, key) != (0);
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;incstack = 0
 21542  0059B8  0E55               	movlw	low _bufferSerial
 21543  0059BA  0100               	movlb	0	; () banked
 21544  0059BC  6F6F               	movwf	strstr@s1& (0+255),b
 21545  0059BE  0E02               	movlw	high _bufferSerial
 21546  0059C0  6F70               	movwf	(strstr@s1+1)& (0+255),b
 21547  0059C2  C074  F071         	movff	findBufferSerial@key,strstr@s2
 21548  0059C6  C075  F072         	movff	findBufferSerial@key+1,strstr@s2+1
 21549  0059CA  ECF5  F025         	call	_strstr
 21550  0059CE  0100               	movlb	0	; () banked
 21551  0059D0  516F               	movf	?_strstr& (0+255),w,b
 21552  0059D2  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 21553  0059D4  B4D8               	btfsc	status,2,c
 21554  0059D6  D002               	goto	u11640
 21555  0059D8  0E01               	movlw	1
 21556  0059DA  0012               	return	
 21557  0059DC                     u11640:
 21558  0059DC  0E00               	movlw	0
 21559  0059DE  0012               	return	
 21560  0059E0                     __end_of_findBufferSerial:
 21561                           	opt stack 0
 21562                           tosu	equ	0xFFF
 21563                           tosh	equ	0xFFE
 21564                           tosl	equ	0xFFD
 21565                           pclath	equ	0xFFA
 21566                           tblptru	equ	0xFF8
 21567                           tblptrh	equ	0xFF7
 21568                           tblptrl	equ	0xFF6
 21569                           tablat	equ	0xFF5
 21570                           prodh	equ	0xFF4
 21571                           prodl	equ	0xFF3
 21572                           intcon	equ	0xFF2
 21573                           intcon2	equ	0xFF1
 21574                           intcon3	equ	0xFF0
 21575                           indf0	equ	0xFEF
 21576                           postinc0	equ	0xFEE
 21577                           fsr0h	equ	0xFEA
 21578                           fsr0l	equ	0xFE9
 21579                           wreg	equ	0xFE8
 21580                           indf1	equ	0xFE7
 21581                           postinc1	equ	0xFE6
 21582                           postdec1	equ	0xFE5
 21583                           plusw1	equ	0xFE3
 21584                           fsr1h	equ	0xFE2
 21585                           fsr1l	equ	0xFE1
 21586                           indf2	equ	0xFDF
 21587                           postinc2	equ	0xFDE
 21588                           postdec2	equ	0xFDD
 21589                           plusw2	equ	0xFDB
 21590                           fsr2h	equ	0xFDA
 21591                           fsr2l	equ	0xFD9
 21592                           status	equ	0xFD8
 21593                           
 21594 ;; *************** function _strstr *****************
 21595 ;; Defined at:
 21596 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 21597 ;; Parameters:    Size  Location     Type
 21598 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21599 ;;		 -> STR_130(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 21600 ;;		 -> bufferSerial(100), 
 21601 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21602 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), STR_74(4), 
 21603 ;;		 -> STR_73(7), STR_72(3), STR_70(4), STR_69(5), 
 21604 ;;		 -> STR_65(4), STR_64(2), STR_62(4), STR_61(3), 
 21605 ;;		 -> STR_59(4), STR_58(2), STR_57(2), STR_55(4), 
 21606 ;;		 -> STR_53(4), STR_52(5), STR_51(3), STR_49(4), 
 21607 ;;		 -> STR_48(3), STR_46(4), STR_40(3), STR_38(3), 
 21608 ;;		 -> STR_34(4), STR_33(2), STR_31(4), STR_30(7), 
 21609 ;;		 -> STR_25(7), STR_24(3), STR_22(4), STR_21(3), 
 21610 ;;		 -> STR_19(4), STR_18(3), STR_16(4), STR_15(3), 
 21611 ;;		 -> STR_13(4), STR_12(3), STR_10(4), 
 21612 ;; Auto vars:     Size  Location     Type
 21613 ;;		None
 21614 ;; Return value:  Size  Location     Type
 21615 ;;                  2   15[BANK0 ] PTR unsigned char 
 21616 ;; Registers used:
 21617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21618 ;; Tracked objects:
 21619 ;;		On entry : 0/0
 21620 ;;		On exit  : 0/0
 21621 ;;		Unchanged: 0/0
 21622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21623 ;;      Params:         0       4       0       0       0       0       0       0       0
 21624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21625 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21626 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21627 ;;Total ram usage:        5 bytes
 21628 ;; Hardware stack levels used:    1
 21629 ;; Hardware stack levels required when called:    7
 21630 ;; This function calls:
 21631 ;;		_strchr
 21632 ;;		_strlen
 21633 ;;		_strncmp
 21634 ;; This function is called by:
 21635 ;;		_alterarDadosConexaoConfigWifi
 21636 ;;		_getStringJSON
 21637 ;;		_setKeyStartReceiveSerial
 21638 ;;		_findBufferSerial
 21639 ;;		_getIntJSON
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           	psect	text46
 21644  004BEA                     __ptext46:
 21645                           	opt stack 0
 21646  004BEA                     _strstr:
 21647                           	opt stack 21
 21648                           
 21649                           ; BSR set to: 0
 21650                           ;incstack = 0
 21651  004BEA  D03F               	goto	l2277
 21652  004BEC  C06F  F066         	movff	strstr@s1,strncmp@s1
 21653  004BF0  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21654  004BF4  C071  F068         	movff	strstr@s2,strncmp@s2
 21655  004BF8  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21656  004BFC  C071  F060         	movff	strstr@s2,strlen@s
 21657  004C00  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21658  004C04  EC84  F02A         	call	_strlen	;wreg free
 21659  004C08  C060  F06A         	movff	?_strlen,strncmp@len
 21660  004C0C  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21661  004C10  EC5A  F023         	call	_strncmp	;wreg free
 21662  004C14  0100               	movlb	0	; () banked
 21663  004C16  5166               	movf	?_strncmp& (0+255),w,b
 21664  004C18  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21665  004C1A  A4D8               	btfss	status,2,c
 21666  004C1C  D005               	goto	l2279
 21667                           
 21668                           ; BSR set to: 0
 21669  004C1E  C06F  F06F         	movff	strstr@s1,?_strstr
 21670  004C22  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21671                           
 21672                           ; BSR set to: 0
 21673  004C26  0012               	return	
 21674  004C28                     l2279:
 21675                           
 21676                           ; BSR set to: 0
 21677                           
 21678                           ; BSR set to: 0
 21679  004C28  0E01               	movlw	1
 21680  004C2A  256F               	addwf	strstr@s1& (0+255),w,b
 21681  004C2C  6F60               	movwf	strchr@ptr& (0+255),b
 21682  004C2E  0E00               	movlw	0
 21683  004C30  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21684  004C32  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21685  004C34  C071  FFF6         	movff	strstr@s2,tblptrl
 21686  004C38  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21687  004C3C  6AF8               	clrf	tblptru,c
 21688  004C3E  0E07               	movlw	(high __ramtop+-1)
 21689  004C40  64F7               	cpfsgt	tblptrh,c
 21690  004C42  D003               	bra	u8367
 21691  004C44  0008               	tblrd		*
 21692  004C46  50F5               	movf	tablat,w,c
 21693  004C48  D005               	bra	u8360
 21694  004C4A                     u8367:
 21695  004C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21696  004C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21697  004C52  50EF               	movf	indf0,w,c
 21698  004C54                     u8360:
 21699  004C54  0100               	movlb	0	; () banked
 21700  004C56  6F73               	movwf	??_strstr& (0+255),b
 21701  004C58  5173               	movf	??_strstr& (0+255),w,b
 21702  004C5A  6F62               	movwf	strchr@chr& (0+255),b
 21703  004C5C  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21704  004C5E  ECA6  F029         	call	_strchr	;wreg free
 21705  004C62  C060  F06F         	movff	?_strchr,strstr@s1
 21706  004C66  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21707  004C6A                     l2277:
 21708  004C6A  0100               	movlb	0	; () banked
 21709  004C6C  516F               	movf	strstr@s1& (0+255),w,b
 21710  004C6E  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21711  004C70  B4D8               	btfsc	status,2,c
 21712  004C72  D013               	goto	u8390
 21713                           
 21714                           ; BSR set to: 0
 21715  004C74  C06F  FFF6         	movff	strstr@s1,tblptrl
 21716  004C78  C070  FFF7         	movff	strstr@s1+1,tblptrh
 21717  004C7C  6AF8               	clrf	tblptru,c
 21718  004C7E  0E07               	movlw	(high __ramtop+-1)
 21719  004C80  64F7               	cpfsgt	tblptrh,c
 21720  004C82  D003               	bra	u8387
 21721  004C84  0008               	tblrd		*
 21722  004C86  50F5               	movf	tablat,w,c
 21723  004C88  D005               	bra	u8380
 21724  004C8A                     u8387:
 21725  004C8A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21726  004C8E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21727  004C92  50EF               	movf	indf0,w,c
 21728  004C94                     u8380:
 21729  004C94  0900               	iorlw	0
 21730  004C96  A4D8               	btfss	status,2,c
 21731  004C98  D7A9               	goto	l2278
 21732  004C9A                     u8390:
 21733  004C9A  0E00               	movlw	0
 21734  004C9C  0100               	movlb	0	; () banked
 21735  004C9E  6F6F               	movwf	?_strstr& (0+255),b
 21736  004CA0  0E00               	movlw	0
 21737  004CA2  6F70               	movwf	(?_strstr+1)& (0+255),b
 21738  004CA4  0012               	return	
 21739  004CA6                     __end_of_strstr:
 21740                           	opt stack 0
 21741                           tosu	equ	0xFFF
 21742                           tosh	equ	0xFFE
 21743                           tosl	equ	0xFFD
 21744                           pclath	equ	0xFFA
 21745                           tblptru	equ	0xFF8
 21746                           tblptrh	equ	0xFF7
 21747                           tblptrl	equ	0xFF6
 21748                           tablat	equ	0xFF5
 21749                           prodh	equ	0xFF4
 21750                           prodl	equ	0xFF3
 21751                           intcon	equ	0xFF2
 21752                           intcon2	equ	0xFF1
 21753                           intcon3	equ	0xFF0
 21754                           indf0	equ	0xFEF
 21755                           postinc0	equ	0xFEE
 21756                           fsr0h	equ	0xFEA
 21757                           fsr0l	equ	0xFE9
 21758                           wreg	equ	0xFE8
 21759                           indf1	equ	0xFE7
 21760                           postinc1	equ	0xFE6
 21761                           postdec1	equ	0xFE5
 21762                           plusw1	equ	0xFE3
 21763                           fsr1h	equ	0xFE2
 21764                           fsr1l	equ	0xFE1
 21765                           indf2	equ	0xFDF
 21766                           postinc2	equ	0xFDE
 21767                           postdec2	equ	0xFDD
 21768                           plusw2	equ	0xFDB
 21769                           fsr2h	equ	0xFDA
 21770                           fsr2l	equ	0xFD9
 21771                           status	equ	0xFD8
 21772                           
 21773 ;; *************** function _strncmp *****************
 21774 ;; Defined at:
 21775 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 21776 ;; Parameters:    Size  Location     Type
 21777 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21778 ;;		 -> STR_130(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 21779 ;;		 -> bufferSerial(100), 
 21780 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21781 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), STR_74(4), 
 21782 ;;		 -> STR_73(7), STR_72(3), STR_70(4), STR_69(5), 
 21783 ;;		 -> STR_65(4), STR_64(2), STR_62(4), STR_61(3), 
 21784 ;;		 -> STR_59(4), STR_58(2), STR_57(2), STR_55(4), 
 21785 ;;		 -> STR_53(4), STR_52(5), STR_51(3), STR_49(4), 
 21786 ;;		 -> STR_48(3), STR_46(4), STR_40(3), STR_38(3), 
 21787 ;;		 -> STR_34(4), STR_33(2), STR_31(4), STR_30(7), 
 21788 ;;		 -> STR_25(7), STR_24(3), STR_22(4), STR_21(3), 
 21789 ;;		 -> STR_19(4), STR_18(3), STR_16(4), STR_15(3), 
 21790 ;;		 -> STR_13(4), STR_12(3), STR_10(4), 
 21791 ;;  len             2   10[BANK0 ] unsigned int 
 21792 ;; Auto vars:     Size  Location     Type
 21793 ;;		None
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  2    6[BANK0 ] int 
 21796 ;; Registers used:
 21797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 0/0
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21803 ;;      Params:         0       6       0       0       0       0       0       0       0
 21804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21805 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21806 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21807 ;;Total ram usage:        9 bytes
 21808 ;; Hardware stack levels used:    1
 21809 ;; Hardware stack levels required when called:    6
 21810 ;; This function calls:
 21811 ;;		Nothing
 21812 ;; This function is called by:
 21813 ;;		_strstr
 21814 ;; This function uses a non-reentrant model
 21815 ;;
 21816                           
 21817                           	psect	text47
 21818  0046B4                     __ptext47:
 21819                           	opt stack 0
 21820  0046B4                     _strncmp:
 21821                           	opt stack 21
 21822                           
 21823                           ; BSR set to: 0
 21824                           ;incstack = 0
 21825  0046B4  D06D               	goto	l2311
 21826  0046B6                     l6477:
 21827  0046B6  C066  FFF6         	movff	strncmp@s1,tblptrl
 21828  0046BA  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21829  0046BE  6AF8               	clrf	tblptru,c
 21830  0046C0  0E07               	movlw	(high __ramtop+-1)
 21831  0046C2  64F7               	cpfsgt	tblptrh,c
 21832  0046C4  D003               	bra	u8197
 21833  0046C6  0008               	tblrd		*
 21834  0046C8  50F5               	movf	tablat,w,c
 21835  0046CA  D005               	bra	u8190
 21836  0046CC                     u8197:
 21837  0046CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 21838  0046D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 21839  0046D4  50EF               	movf	indf0,w,c
 21840  0046D6                     u8190:
 21841  0046D6  0900               	iorlw	0
 21842  0046D8  B4D8               	btfsc	status,2,c
 21843  0046DA  D025               	goto	u8220
 21844  0046DC  C068  FFF6         	movff	strncmp@s2,tblptrl
 21845  0046E0  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21846  0046E4  6AF8               	clrf	tblptru,c
 21847  0046E6  0E07               	movlw	(high __ramtop+-1)
 21848  0046E8  64F7               	cpfsgt	tblptrh,c
 21849  0046EA  D003               	bra	u8217
 21850  0046EC  0008               	tblrd		*
 21851  0046EE  50F5               	movf	tablat,w,c
 21852  0046F0  D005               	bra	u8210
 21853  0046F2                     u8217:
 21854  0046F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 21855  0046F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 21856  0046FA  50EF               	movf	indf0,w,c
 21857  0046FC                     u8210:
 21858  0046FC  0100               	movlb	0	; () banked
 21859  0046FE  6F6C               	movwf	??_strncmp& (0+255),b
 21860  004700  C066  FFF6         	movff	strncmp@s1,tblptrl
 21861  004704  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21862  004708  6AF8               	clrf	tblptru,c
 21863  00470A  0E07               	movlw	(high __ramtop+-1)
 21864  00470C  64F7               	cpfsgt	tblptrh,c
 21865  00470E  D003               	bra	u8227
 21866  004710  0008               	tblrd		*
 21867  004712  50F5               	movf	tablat,w,c
 21868  004714  D005               	bra	u8225
 21869  004716                     u8227:
 21870  004716  CFF6 FFE9          	movff	tblptrl,fsr0l
 21871  00471A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21872  00471E  50EF               	movf	indf0,w,c
 21873  004720                     u8225:
 21874  004720  196C               	xorwf	??_strncmp& (0+255),w,b
 21875  004722  B4D8               	btfsc	status,2,c
 21876  004724  D030               	goto	l2313
 21877  004726                     u8220:
 21878  004726  C068  FFF6         	movff	strncmp@s2,tblptrl
 21879  00472A  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21880  00472E  6AF8               	clrf	tblptru,c
 21881  004730  0E07               	movlw	(high __ramtop+-1)
 21882  004732  64F7               	cpfsgt	tblptrh,c
 21883  004734  D003               	bra	u8237
 21884  004736  0008               	tblrd		*
 21885  004738  50F5               	movf	tablat,w,c
 21886  00473A  D005               	bra	u8230
 21887  00473C                     u8237:
 21888  00473C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21889  004740  CFF7 FFEA          	movff	tblptrh,fsr0h
 21890  004744  50EF               	movf	indf0,w,c
 21891  004746                     u8230:
 21892  004746  0100               	movlb	0	; () banked
 21893  004748  6F6C               	movwf	??_strncmp& (0+255),b
 21894  00474A  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21895  00474C  1F6C               	comf	??_strncmp& (0+255),f,b
 21896  00474E  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21897  004750  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21898  004752  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21899  004754  C066  FFF6         	movff	strncmp@s1,tblptrl
 21900  004758  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 21901  00475C  6AF8               	clrf	tblptru,c
 21902  00475E  0E07               	movlw	(high __ramtop+-1)
 21903  004760  64F7               	cpfsgt	tblptrh,c
 21904  004762  D003               	bra	u8247
 21905  004764  0008               	tblrd		*
 21906  004766  50F5               	movf	tablat,w,c
 21907  004768  D005               	bra	u8240
 21908  00476A                     u8247:
 21909  00476A  CFF6 FFE9          	movff	tblptrl,fsr0l
 21910  00476E  CFF7 FFEA          	movff	tblptrh,fsr0h
 21911  004772  50EF               	movf	indf0,w,c
 21912  004774                     u8240:
 21913  004774  0100               	movlb	0	; () banked
 21914  004776  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21915  004778  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21916  00477A  256C               	addwf	??_strncmp& (0+255),w,b
 21917  00477C  6F66               	movwf	?_strncmp& (0+255),b
 21918  00477E  0E00               	movlw	0
 21919  004780  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21920  004782  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21921                           
 21922                           ; BSR set to: 0
 21923  004784  0012               	return	
 21924  004786                     l2313:
 21925                           
 21926                           ; BSR set to: 0
 21927  004786  0100               	movlb	0	; () banked
 21928  004788  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21929  00478A  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21930  00478C  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21931  00478E  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21932  004790                     l2311:
 21933                           
 21934                           ; BSR set to: 0
 21935  004790  0100               	movlb	0	; () banked
 21936  004792  076A               	decf	strncmp@len& (0+255),f,b
 21937  004794  A0D8               	btfss	status,0,c
 21938  004796  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21939  004798  296A               	incf	strncmp@len& (0+255),w,b
 21940  00479A  E18D               	bnz	l6477
 21941  00479C  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21942  00479E  A4D8               	btfss	status,2,c
 21943  0047A0  D78A               	goto	l2312
 21944                           
 21945                           ; BSR set to: 0
 21946                           
 21947                           ; BSR set to: 0
 21948  0047A2  0E00               	movlw	0
 21949  0047A4  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21950  0047A6  0E00               	movlw	0
 21951  0047A8  6F66               	movwf	?_strncmp& (0+255),b
 21952  0047AA  0012               	return	
 21953  0047AC                     __end_of_strncmp:
 21954                           	opt stack 0
 21955                           tosu	equ	0xFFF
 21956                           tosh	equ	0xFFE
 21957                           tosl	equ	0xFFD
 21958                           pclath	equ	0xFFA
 21959                           tblptru	equ	0xFF8
 21960                           tblptrh	equ	0xFF7
 21961                           tblptrl	equ	0xFF6
 21962                           tablat	equ	0xFF5
 21963                           prodh	equ	0xFF4
 21964                           prodl	equ	0xFF3
 21965                           intcon	equ	0xFF2
 21966                           intcon2	equ	0xFF1
 21967                           intcon3	equ	0xFF0
 21968                           indf0	equ	0xFEF
 21969                           postinc0	equ	0xFEE
 21970                           fsr0h	equ	0xFEA
 21971                           fsr0l	equ	0xFE9
 21972                           wreg	equ	0xFE8
 21973                           indf1	equ	0xFE7
 21974                           postinc1	equ	0xFE6
 21975                           postdec1	equ	0xFE5
 21976                           plusw1	equ	0xFE3
 21977                           fsr1h	equ	0xFE2
 21978                           fsr1l	equ	0xFE1
 21979                           indf2	equ	0xFDF
 21980                           postinc2	equ	0xFDE
 21981                           postdec2	equ	0xFDD
 21982                           plusw2	equ	0xFDB
 21983                           fsr2h	equ	0xFDA
 21984                           fsr2l	equ	0xFD9
 21985                           status	equ	0xFD8
 21986                           
 21987 ;; *************** function _strlen *****************
 21988 ;; Defined at:
 21989 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 21990 ;; Parameters:    Size  Location     Type
 21991 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21992 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), 
 21993 ;;		 -> STR_74(4), STR_73(7), STR_72(3), STR_70(4), 
 21994 ;;		 -> STR_69(5), enviaDadosWifi@AUX(15), STR_65(4), STR_64(2), 
 21995 ;;		 -> STR_62(4), STR_61(3), STR_59(4), STR_58(2), 
 21996 ;;		 -> STR_57(2), STR_55(4), STR_53(4), STR_52(5), 
 21997 ;;		 -> STR_51(3), STR_49(4), STR_48(3), STR_46(4), 
 21998 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 21999 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 22000 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 22001 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 22002 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 22003 ;; Auto vars:     Size  Location     Type
 22004 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 22005 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), 
 22006 ;;		 -> STR_74(4), STR_73(7), STR_72(3), STR_70(4), 
 22007 ;;		 -> STR_69(5), enviaDadosWifi@AUX(15), STR_65(4), STR_64(2), 
 22008 ;;		 -> STR_62(4), STR_61(3), STR_59(4), STR_58(2), 
 22009 ;;		 -> STR_57(2), STR_55(4), STR_53(4), STR_52(5), 
 22010 ;;		 -> STR_51(3), STR_49(4), STR_48(3), STR_46(4), 
 22011 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 22012 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 22013 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 22014 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 22015 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 22016 ;; Return value:  Size  Location     Type
 22017 ;;                  2    0[BANK0 ] unsigned int 
 22018 ;; Registers used:
 22019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22020 ;; Tracked objects:
 22021 ;;		On entry : 0/0
 22022 ;;		On exit  : 0/0
 22023 ;;		Unchanged: 0/0
 22024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22025 ;;      Params:         0       2       0       0       0       0       0       0       0
 22026 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22027 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22028 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22029 ;;Total ram usage:        6 bytes
 22030 ;; Hardware stack levels used:    1
 22031 ;; Hardware stack levels required when called:    6
 22032 ;; This function calls:
 22033 ;;		Nothing
 22034 ;; This function is called by:
 22035 ;;		_getMacAdress
 22036 ;;		_alterarDadosConexaoConfigWifi
 22037 ;;		_enviaDadosWifi
 22038 ;;		_getStringJSON
 22039 ;;		_strstr
 22040 ;;		_getIntJSON
 22041 ;; This function uses a non-reentrant model
 22042 ;;
 22043                           
 22044                           	psect	text48
 22045  005508                     __ptext48:
 22046                           	opt stack 0
 22047  005508                     _strlen:
 22048                           	opt stack 23
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;incstack = 0
 22052  005508  C060  F064         	movff	strlen@s,strlen@cp
 22053  00550C  C061  F065         	movff	strlen@s+1,strlen@cp+1
 22054  005510  D003               	goto	l2265
 22055  005512  0100               	movlb	0	; () banked
 22056  005514  4B64               	infsnz	strlen@cp& (0+255),f,b
 22057  005516  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 22058  005518                     l2265:
 22059                           
 22060                           ; BSR set to: 0
 22061  005518  C064  FFF6         	movff	strlen@cp,tblptrl
 22062  00551C  C065  FFF7         	movff	strlen@cp+1,tblptrh
 22063  005520  6AF8               	clrf	tblptru,c
 22064  005522  0E07               	movlw	(high __ramtop+-1)
 22065  005524  64F7               	cpfsgt	tblptrh,c
 22066  005526  D003               	bra	u7807
 22067  005528  0008               	tblrd		*
 22068  00552A  50F5               	movf	tablat,w,c
 22069  00552C  D005               	bra	u7800
 22070  00552E                     u7807:
 22071  00552E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22072  005532  CFF7 FFEA          	movff	tblptrh,fsr0h
 22073  005536  50EF               	movf	indf0,w,c
 22074  005538                     u7800:
 22075  005538  0900               	iorlw	0
 22076  00553A  A4D8               	btfss	status,2,c
 22077  00553C  D7EA               	goto	l2266
 22078  00553E  C060  F062         	movff	strlen@s,??_strlen
 22079  005542  C061  F063         	movff	strlen@s+1,??_strlen+1
 22080  005546  0100               	movlb	0	; () banked
 22081  005548  1F62               	comf	??_strlen& (0+255),f,b
 22082  00554A  1F63               	comf	(??_strlen+1)& (0+255),f,b
 22083  00554C  4B62               	infsnz	??_strlen& (0+255),f,b
 22084  00554E  2B63               	incf	(??_strlen+1)& (0+255),f,b
 22085  005550  5164               	movf	strlen@cp& (0+255),w,b
 22086  005552  2562               	addwf	??_strlen& (0+255),w,b
 22087  005554  6F60               	movwf	?_strlen& (0+255),b
 22088  005556  5165               	movf	(strlen@cp+1)& (0+255),w,b
 22089  005558  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 22090  00555A  6F61               	movwf	(?_strlen+1)& (0+255),b
 22091  00555C  0012               	return	
 22092  00555E                     __end_of_strlen:
 22093                           	opt stack 0
 22094                           tosu	equ	0xFFF
 22095                           tosh	equ	0xFFE
 22096                           tosl	equ	0xFFD
 22097                           pclath	equ	0xFFA
 22098                           tblptru	equ	0xFF8
 22099                           tblptrh	equ	0xFF7
 22100                           tblptrl	equ	0xFF6
 22101                           tablat	equ	0xFF5
 22102                           prodh	equ	0xFF4
 22103                           prodl	equ	0xFF3
 22104                           intcon	equ	0xFF2
 22105                           intcon2	equ	0xFF1
 22106                           intcon3	equ	0xFF0
 22107                           indf0	equ	0xFEF
 22108                           postinc0	equ	0xFEE
 22109                           fsr0h	equ	0xFEA
 22110                           fsr0l	equ	0xFE9
 22111                           wreg	equ	0xFE8
 22112                           indf1	equ	0xFE7
 22113                           postinc1	equ	0xFE6
 22114                           postdec1	equ	0xFE5
 22115                           plusw1	equ	0xFE3
 22116                           fsr1h	equ	0xFE2
 22117                           fsr1l	equ	0xFE1
 22118                           indf2	equ	0xFDF
 22119                           postinc2	equ	0xFDE
 22120                           postdec2	equ	0xFDD
 22121                           plusw2	equ	0xFDB
 22122                           fsr2h	equ	0xFDA
 22123                           fsr2l	equ	0xFD9
 22124                           status	equ	0xFD8
 22125                           
 22126 ;; *************** function _strchr *****************
 22127 ;; Defined at:
 22128 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 22129 ;; Parameters:    Size  Location     Type
 22130 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 22131 ;;		 -> STR_130(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 22132 ;;		 -> bufferSerial(100), 
 22133 ;;  chr             2    2[BANK0 ] int 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;		None
 22136 ;; Return value:  Size  Location     Type
 22137 ;;                  2    0[BANK0 ] PTR unsigned char 
 22138 ;; Registers used:
 22139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22140 ;; Tracked objects:
 22141 ;;		On entry : 0/0
 22142 ;;		On exit  : 0/0
 22143 ;;		Unchanged: 0/0
 22144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22145 ;;      Params:         0       4       0       0       0       0       0       0       0
 22146 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22147 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22148 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22149 ;;Total ram usage:        6 bytes
 22150 ;; Hardware stack levels used:    1
 22151 ;; Hardware stack levels required when called:    6
 22152 ;; This function calls:
 22153 ;;		Nothing
 22154 ;; This function is called by:
 22155 ;;		_strstr
 22156 ;; This function uses a non-reentrant model
 22157 ;;
 22158                           
 22159                           	psect	text49
 22160  00534C                     __ptext49:
 22161                           	opt stack 0
 22162  00534C                     _strchr:
 22163                           	opt stack 21
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;incstack = 0
 22167  00534C  C060  FFF6         	movff	strchr@ptr,tblptrl
 22168  005350  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 22169  005354  6AF8               	clrf	tblptru,c
 22170  005356  0E07               	movlw	(high __ramtop+-1)
 22171  005358  64F7               	cpfsgt	tblptrh,c
 22172  00535A  D003               	bra	u8267
 22173  00535C  0008               	tblrd		*
 22174  00535E  50F5               	movf	tablat,w,c
 22175  005360  D005               	bra	u8260
 22176  005362                     u8267:
 22177  005362  CFF6 FFE9          	movff	tblptrl,fsr0l
 22178  005366  CFF7 FFEA          	movff	tblptrh,fsr0h
 22179  00536A  50EF               	movf	indf0,w,c
 22180  00536C                     u8260:
 22181  00536C  0100               	movlb	0	; () banked
 22182  00536E  1962               	xorwf	strchr@chr& (0+255),w,b
 22183  005370  A4D8               	btfss	status,2,c
 22184  005372  D005               	goto	l2306
 22185                           
 22186                           ; BSR set to: 0
 22187  005374  C060  F060         	movff	strchr@ptr,?_strchr
 22188  005378  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 22189                           
 22190                           ; BSR set to: 0
 22191  00537C  0012               	return	
 22192  00537E                     l2306:
 22193                           
 22194                           ; BSR set to: 0
 22195                           
 22196                           ; BSR set to: 0
 22197  00537E  5160               	movf	strchr@ptr& (0+255),w,b
 22198  005380  6F64               	movwf	??_strchr& (0+255),b
 22199  005382  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 22200  005384  6F65               	movwf	(??_strchr+1)& (0+255),b
 22201  005386  4B60               	infsnz	strchr@ptr& (0+255),f,b
 22202  005388  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 22203  00538A  C064  FFF6         	movff	??_strchr,tblptrl
 22204  00538E  C065  FFF7         	movff	??_strchr+1,tblptrh
 22205  005392  6AF8               	clrf	tblptru,c
 22206  005394  0E07               	movlw	(high __ramtop+-1)
 22207  005396  64F7               	cpfsgt	tblptrh,c
 22208  005398  D003               	bra	u8287
 22209  00539A  0008               	tblrd		*
 22210  00539C  50F5               	movf	tablat,w,c
 22211  00539E  D005               	bra	u8280
 22212  0053A0                     u8287:
 22213  0053A0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22214  0053A4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22215  0053A8  50EF               	movf	indf0,w,c
 22216  0053AA                     u8280:
 22217  0053AA  0900               	iorlw	0
 22218  0053AC  A4D8               	btfss	status,2,c
 22219  0053AE  D7CE               	goto	_strchr
 22220  0053B0  0E00               	movlw	0
 22221  0053B2  0100               	movlb	0	; () banked
 22222  0053B4  6F60               	movwf	?_strchr& (0+255),b
 22223  0053B6  0E00               	movlw	0
 22224  0053B8  6F61               	movwf	(?_strchr+1)& (0+255),b
 22225  0053BA  0012               	return	
 22226  0053BC                     __end_of_strchr:
 22227                           	opt stack 0
 22228                           tosu	equ	0xFFF
 22229                           tosh	equ	0xFFE
 22230                           tosl	equ	0xFFD
 22231                           pclath	equ	0xFFA
 22232                           tblptru	equ	0xFF8
 22233                           tblptrh	equ	0xFF7
 22234                           tblptrl	equ	0xFF6
 22235                           tablat	equ	0xFF5
 22236                           prodh	equ	0xFF4
 22237                           prodl	equ	0xFF3
 22238                           intcon	equ	0xFF2
 22239                           intcon2	equ	0xFF1
 22240                           intcon3	equ	0xFF0
 22241                           indf0	equ	0xFEF
 22242                           postinc0	equ	0xFEE
 22243                           fsr0h	equ	0xFEA
 22244                           fsr0l	equ	0xFE9
 22245                           wreg	equ	0xFE8
 22246                           indf1	equ	0xFE7
 22247                           postinc1	equ	0xFE6
 22248                           postdec1	equ	0xFE5
 22249                           plusw1	equ	0xFE3
 22250                           fsr1h	equ	0xFE2
 22251                           fsr1l	equ	0xFE1
 22252                           indf2	equ	0xFDF
 22253                           postinc2	equ	0xFDE
 22254                           postdec2	equ	0xFDD
 22255                           plusw2	equ	0xFDB
 22256                           fsr2h	equ	0xFDA
 22257                           fsr2l	equ	0xFD9
 22258                           status	equ	0xFD8
 22259                           
 22260 ;; *************** function _atualizaLCD *****************
 22261 ;; Defined at:
 22262 ;;		line 159 in file "src/lcd.h"
 22263 ;; Parameters:    Size  Location     Type
 22264 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 22265 ;;		 -> line1(21), 
 22266 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 22267 ;;		 -> line2(21), 
 22268 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 22269 ;;		 -> line3(21), 
 22270 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 22271 ;;		 -> line4(21), 
 22272 ;; Auto vars:     Size  Location     Type
 22273 ;;  i               1   16[BANK0 ] unsigned char 
 22274 ;; Return value:  Size  Location     Type
 22275 ;;                  1    wreg      void 
 22276 ;; Registers used:
 22277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22278 ;; Tracked objects:
 22279 ;;		On entry : 0/0
 22280 ;;		On exit  : 0/0
 22281 ;;		Unchanged: 0/0
 22282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22283 ;;      Params:         0       8       0       0       0       0       0       0       0
 22284 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22285 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22286 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22287 ;;Total ram usage:        9 bytes
 22288 ;; Hardware stack levels used:    1
 22289 ;; Hardware stack levels required when called:    9
 22290 ;; This function calls:
 22291 ;;		_Lcd_Set_Cursor
 22292 ;;		_Lcd_Write_String
 22293 ;; This function is called by:
 22294 ;;		_alterarDadosConexaoConfigWifi
 22295 ;;		_main
 22296 ;; This function uses a non-reentrant model
 22297 ;;
 22298                           
 22299                           	psect	text50
 22300  004A64                     __ptext50:
 22301                           	opt stack 0
 22302  004A64                     _atualizaLCD:
 22303                           	opt stack 21
 22304                           
 22305                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;incstack = 0
 22309  004A64  0E01               	movlw	1
 22310  004A66  0100               	movlb	0	; () banked
 22311  004A68  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22312  004A6A  0E01               	movlw	1
 22313  004A6C  EC53  F026         	call	_Lcd_Set_Cursor
 22314                           
 22315                           ;lcd.h: 163: Lcd_Write_String(line1);
 22316  004A70  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 22317  004A74  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 22318  004A78  EC85  F02C         	call	_Lcd_Write_String	;wreg free
 22319                           
 22320                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 22321  004A7C  0E01               	movlw	1
 22322  004A7E  0100               	movlb	0	; () banked
 22323  004A80  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22324  004A82  0E02               	movlw	2
 22325  004A84  EC53  F026         	call	_Lcd_Set_Cursor
 22326                           
 22327                           ;lcd.h: 165: Lcd_Write_String(line2);
 22328  004A88  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 22329  004A8C  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 22330  004A90  EC85  F02C         	call	_Lcd_Write_String	;wreg free
 22331                           
 22332                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 22333  004A94  0E00               	movlw	0
 22334  004A96  0100               	movlb	0	; () banked
 22335  004A98  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22336  004A9A  0E03               	movlw	3
 22337  004A9C  EC53  F026         	call	_Lcd_Set_Cursor
 22338                           
 22339                           ;lcd.h: 167: Lcd_Write_String(line3);
 22340  004AA0  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 22341  004AA4  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 22342  004AA8  EC85  F02C         	call	_Lcd_Write_String	;wreg free
 22343                           
 22344                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 22345  004AAC  0E00               	movlw	0
 22346  004AAE  0100               	movlb	0	; () banked
 22347  004AB0  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22348  004AB2  0E04               	movlw	4
 22349  004AB4  EC53  F026         	call	_Lcd_Set_Cursor
 22350                           
 22351                           ;lcd.h: 169: Lcd_Write_String(line4);
 22352  004AB8  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 22353  004ABC  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 22354  004AC0  EC85  F02C         	call	_Lcd_Write_String	;wreg free
 22355                           
 22356                           ;lcd.h: 171: char i = 0;
 22357  004AC4  0E00               	movlw	0
 22358  004AC6  0100               	movlb	0	; () banked
 22359  004AC8  6F70               	movwf	atualizaLCD@i& (0+255),b
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 22363  004ACA  0E00               	movlw	0
 22364  004ACC  6F70               	movwf	atualizaLCD@i& (0+255),b
 22365  004ACE                     l6677:
 22366                           
 22367                           ; BSR set to: 0
 22368  004ACE  0E13               	movlw	19
 22369  004AD0  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 22370  004AD2  D001               	goto	l264
 22371  004AD4  0012               	return	
 22372  004AD6                     l264:
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;lcd.h: 173: line1[i] = ' ';
 22376                           
 22377                           ; BSR set to: 0
 22378  004AD6  5170               	movf	atualizaLCD@i& (0+255),w,b
 22379  004AD8  0D01               	mullw	1
 22380  004ADA  50F3               	movf	prodl,w,c
 22381  004ADC  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 22382  004ADE  6ED9               	movwf	fsr2l,c
 22383  004AE0  50F4               	movf	prodh,w,c
 22384  004AE2  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 22385  004AE4  6EDA               	movwf	fsr2h,c
 22386  004AE6  0E20               	movlw	32
 22387  004AE8  6EDF               	movwf	indf2,c
 22388                           
 22389                           ;lcd.h: 174: line2[i] = ' ';
 22390  004AEA  5170               	movf	atualizaLCD@i& (0+255),w,b
 22391  004AEC  0D01               	mullw	1
 22392  004AEE  50F3               	movf	prodl,w,c
 22393  004AF0  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 22394  004AF2  6ED9               	movwf	fsr2l,c
 22395  004AF4  50F4               	movf	prodh,w,c
 22396  004AF6  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 22397  004AF8  6EDA               	movwf	fsr2h,c
 22398  004AFA  0E20               	movlw	32
 22399  004AFC  6EDF               	movwf	indf2,c
 22400                           
 22401                           ;lcd.h: 175: line3[i] = ' ';
 22402  004AFE  5170               	movf	atualizaLCD@i& (0+255),w,b
 22403  004B00  0D01               	mullw	1
 22404  004B02  50F3               	movf	prodl,w,c
 22405  004B04  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 22406  004B06  6ED9               	movwf	fsr2l,c
 22407  004B08  50F4               	movf	prodh,w,c
 22408  004B0A  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 22409  004B0C  6EDA               	movwf	fsr2h,c
 22410  004B0E  0E20               	movlw	32
 22411  004B10  6EDF               	movwf	indf2,c
 22412                           
 22413                           ;lcd.h: 176: line4[i] = ' ';
 22414  004B12  5170               	movf	atualizaLCD@i& (0+255),w,b
 22415  004B14  0D01               	mullw	1
 22416  004B16  50F3               	movf	prodl,w,c
 22417  004B18  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 22418  004B1A  6ED9               	movwf	fsr2l,c
 22419  004B1C  50F4               	movf	prodh,w,c
 22420  004B1E  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 22421  004B20  6EDA               	movwf	fsr2h,c
 22422  004B22  0E20               	movlw	32
 22423  004B24  6EDF               	movwf	indf2,c
 22424                           
 22425                           ; BSR set to: 0
 22426  004B26  2B70               	incf	atualizaLCD@i& (0+255),f,b
 22427  004B28  D7D2               	goto	l6677
 22428  004B2A                     __end_of_atualizaLCD:
 22429                           	opt stack 0
 22430                           tosu	equ	0xFFF
 22431                           tosh	equ	0xFFE
 22432                           tosl	equ	0xFFD
 22433                           pclath	equ	0xFFA
 22434                           tblptru	equ	0xFF8
 22435                           tblptrh	equ	0xFF7
 22436                           tblptrl	equ	0xFF6
 22437                           tablat	equ	0xFF5
 22438                           prodh	equ	0xFF4
 22439                           prodl	equ	0xFF3
 22440                           intcon	equ	0xFF2
 22441                           intcon2	equ	0xFF1
 22442                           intcon3	equ	0xFF0
 22443                           indf0	equ	0xFEF
 22444                           postinc0	equ	0xFEE
 22445                           fsr0h	equ	0xFEA
 22446                           fsr0l	equ	0xFE9
 22447                           wreg	equ	0xFE8
 22448                           indf1	equ	0xFE7
 22449                           postinc1	equ	0xFE6
 22450                           postdec1	equ	0xFE5
 22451                           plusw1	equ	0xFE3
 22452                           fsr1h	equ	0xFE2
 22453                           fsr1l	equ	0xFE1
 22454                           indf2	equ	0xFDF
 22455                           postinc2	equ	0xFDE
 22456                           postdec2	equ	0xFDD
 22457                           plusw2	equ	0xFDB
 22458                           fsr2h	equ	0xFDA
 22459                           fsr2l	equ	0xFD9
 22460                           status	equ	0xFD8
 22461                           
 22462 ;; *************** function _Lcd_Write_String *****************
 22463 ;; Defined at:
 22464 ;;		line 137 in file "src/lcd.h"
 22465 ;; Parameters:    Size  Location     Type
 22466 ;;  a               2    4[BANK0 ] PTR unsigned char 
 22467 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 22468 ;; Auto vars:     Size  Location     Type
 22469 ;;  i               1    6[BANK0 ] unsigned char 
 22470 ;; Return value:  Size  Location     Type
 22471 ;;                  1    wreg      void 
 22472 ;; Registers used:
 22473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22474 ;; Tracked objects:
 22475 ;;		On entry : 0/0
 22476 ;;		On exit  : 0/0
 22477 ;;		Unchanged: 0/0
 22478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22479 ;;      Params:         0       2       0       0       0       0       0       0       0
 22480 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22481 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22482 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22483 ;;Total ram usage:        3 bytes
 22484 ;; Hardware stack levels used:    1
 22485 ;; Hardware stack levels required when called:    8
 22486 ;; This function calls:
 22487 ;;		_Lcd_Write_Char
 22488 ;; This function is called by:
 22489 ;;		_atualizaLCD
 22490 ;; This function uses a non-reentrant model
 22491 ;;
 22492                           
 22493                           	psect	text51
 22494  00590A                     __ptext51:
 22495                           	opt stack 0
 22496  00590A                     _Lcd_Write_String:
 22497                           	opt stack 21
 22498                           
 22499                           ;lcd.h: 138: unsigned char i = 0;
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;incstack = 0
 22503  00590A  0E00               	movlw	0
 22504  00590C  0100               	movlb	0	; () banked
 22505  00590E  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22506                           
 22507                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 22508  005910  0E00               	movlw	0
 22509  005912  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22510  005914                     l6573:
 22511                           
 22512                           ; BSR set to: 0
 22513  005914  0E13               	movlw	19
 22514  005916  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 22515  005918  D001               	goto	l259
 22516  00591A  0012               	return	
 22517  00591C                     l259:
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 22521                           
 22522                           ; BSR set to: 0
 22523  00591C  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 22524  00591E  0D01               	mullw	1
 22525  005920  50F3               	movf	prodl,w,c
 22526  005922  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 22527  005924  6ED9               	movwf	fsr2l,c
 22528  005926  50F4               	movf	prodh,w,c
 22529  005928  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 22530  00592A  6EDA               	movwf	fsr2h,c
 22531  00592C  50DF               	movf	indf2,w,c
 22532  00592E  ECB4  F02B         	call	_Lcd_Write_Char
 22533  005932  0100               	movlb	0	; () banked
 22534  005934  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 22535  005936  D7EE               	goto	l6573
 22536  005938                     __end_of_Lcd_Write_String:
 22537                           	opt stack 0
 22538                           tosu	equ	0xFFF
 22539                           tosh	equ	0xFFE
 22540                           tosl	equ	0xFFD
 22541                           pclath	equ	0xFFA
 22542                           tblptru	equ	0xFF8
 22543                           tblptrh	equ	0xFF7
 22544                           tblptrl	equ	0xFF6
 22545                           tablat	equ	0xFF5
 22546                           prodh	equ	0xFF4
 22547                           prodl	equ	0xFF3
 22548                           intcon	equ	0xFF2
 22549                           intcon2	equ	0xFF1
 22550                           intcon3	equ	0xFF0
 22551                           indf0	equ	0xFEF
 22552                           postinc0	equ	0xFEE
 22553                           fsr0h	equ	0xFEA
 22554                           fsr0l	equ	0xFE9
 22555                           wreg	equ	0xFE8
 22556                           indf1	equ	0xFE7
 22557                           postinc1	equ	0xFE6
 22558                           postdec1	equ	0xFE5
 22559                           plusw1	equ	0xFE3
 22560                           fsr1h	equ	0xFE2
 22561                           fsr1l	equ	0xFE1
 22562                           indf2	equ	0xFDF
 22563                           postinc2	equ	0xFDE
 22564                           postdec2	equ	0xFDD
 22565                           plusw2	equ	0xFDB
 22566                           fsr2h	equ	0xFDA
 22567                           fsr2l	equ	0xFD9
 22568                           status	equ	0xFD8
 22569                           
 22570 ;; *************** function _Lcd_Write_Char *****************
 22571 ;; Defined at:
 22572 ;;		line 122 in file "src/lcd.h"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;  a               1    wreg     unsigned char 
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;  a               1    3[BANK0 ] unsigned char 
 22577 ;;  y               1    2[BANK0 ] unsigned char 
 22578 ;;  tempp           1    1[BANK0 ] unsigned char 
 22579 ;; Return value:  Size  Location     Type
 22580 ;;                  1    wreg      void 
 22581 ;; Registers used:
 22582 ;;		wreg, status,2, status,0, cstack
 22583 ;; Tracked objects:
 22584 ;;		On entry : 0/0
 22585 ;;		On exit  : 0/0
 22586 ;;		Unchanged: 0/0
 22587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22588 ;;      Params:         0       0       0       0       0       0       0       0       0
 22589 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22591 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22592 ;;Total ram usage:        3 bytes
 22593 ;; Hardware stack levels used:    1
 22594 ;; Hardware stack levels required when called:    7
 22595 ;; This function calls:
 22596 ;;		_Lcd_Port
 22597 ;; This function is called by:
 22598 ;;		_Lcd_Write_String
 22599 ;;		_criaCaracteresCGRAM
 22600 ;; This function uses a non-reentrant model
 22601 ;;
 22602                           
 22603                           	psect	text52
 22604  005768                     __ptext52:
 22605                           	opt stack 0
 22606  005768                     _Lcd_Write_Char:
 22607                           	opt stack 22
 22608                           
 22609                           ; BSR set to: 0
 22610                           ;incstack = 0
 22611                           ;Lcd_Write_Char@a stored from wreg
 22612  005768  0100               	movlb	0	; () banked
 22613  00576A  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 22614                           
 22615                           ;lcd.h: 123: char tempp, y;
 22616                           ;lcd.h: 124: tempp = a & 0x0F;
 22617  00576C  0100               	movlb	0	; () banked
 22618  00576E  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22619  005770  0B0F               	andlw	15
 22620  005772  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 22621                           
 22622                           ;lcd.h: 125: y = a & 0xF0;
 22623  005774  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22624  005776  0BF0               	andlw	240
 22625  005778  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 22629  00577A  8483               	bsf	3971,2,c	;volatile
 22630                           
 22631                           ; BSR set to: 0
 22632                           ;lcd.h: 127: Lcd_Port(y >> 4);
 22633  00577C  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 22634  00577E  0B0F               	andlw	15
 22635  005780  EC6D  F02C         	call	_Lcd_Port
 22636                           
 22637                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 22638  005784  8683               	bsf	3971,3,c	;volatile
 22639                           
 22640                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22641  005786  0E1A               	movlw	26
 22642  005788                     u15387:
 22643  005788  2EE8               	decfsz	wreg,f,c
 22644  00578A  D7FE               	bra	u15387
 22645  00578C  D000               	nop2	
 22646                           
 22647                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 22648  00578E  9683               	bcf	3971,3,c	;volatile
 22649                           
 22650                           ;lcd.h: 131: Lcd_Port(tempp);
 22651  005790  0100               	movlb	0	; () banked
 22652  005792  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 22653  005794  EC6D  F02C         	call	_Lcd_Port
 22654                           
 22655                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 22656  005798  8683               	bsf	3971,3,c	;volatile
 22657                           
 22658                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22659  00579A  0E1A               	movlw	26
 22660  00579C                     u15397:
 22661  00579C  2EE8               	decfsz	wreg,f,c
 22662  00579E  D7FE               	bra	u15397
 22663  0057A0  D000               	nop2	
 22664                           
 22665                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 22666  0057A2  9683               	bcf	3971,3,c	;volatile
 22667  0057A4  0012               	return		;funcret
 22668  0057A6                     __end_of_Lcd_Write_Char:
 22669                           	opt stack 0
 22670                           tosu	equ	0xFFF
 22671                           tosh	equ	0xFFE
 22672                           tosl	equ	0xFFD
 22673                           pclath	equ	0xFFA
 22674                           tblptru	equ	0xFF8
 22675                           tblptrh	equ	0xFF7
 22676                           tblptrl	equ	0xFF6
 22677                           tablat	equ	0xFF5
 22678                           prodh	equ	0xFF4
 22679                           prodl	equ	0xFF3
 22680                           intcon	equ	0xFF2
 22681                           intcon2	equ	0xFF1
 22682                           intcon3	equ	0xFF0
 22683                           indf0	equ	0xFEF
 22684                           postinc0	equ	0xFEE
 22685                           fsr0h	equ	0xFEA
 22686                           fsr0l	equ	0xFE9
 22687                           wreg	equ	0xFE8
 22688                           indf1	equ	0xFE7
 22689                           postinc1	equ	0xFE6
 22690                           postdec1	equ	0xFE5
 22691                           plusw1	equ	0xFE3
 22692                           fsr1h	equ	0xFE2
 22693                           fsr1l	equ	0xFE1
 22694                           indf2	equ	0xFDF
 22695                           postinc2	equ	0xFDE
 22696                           postdec2	equ	0xFDD
 22697                           plusw2	equ	0xFDB
 22698                           fsr2h	equ	0xFDA
 22699                           fsr2l	equ	0xFD9
 22700                           status	equ	0xFD8
 22701                           
 22702 ;; *************** function _Lcd_Set_Cursor *****************
 22703 ;; Defined at:
 22704 ;;		line 87 in file "src/lcd.h"
 22705 ;; Parameters:    Size  Location     Type
 22706 ;;  a               1    wreg     unsigned char 
 22707 ;;  b               1    3[BANK0 ] unsigned char 
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  a               1    4[BANK0 ] unsigned char 
 22710 ;;  temp            1    7[BANK0 ] unsigned char 
 22711 ;;  y               1    6[BANK0 ] unsigned char 
 22712 ;;  z               1    5[BANK0 ] unsigned char 
 22713 ;; Return value:  Size  Location     Type
 22714 ;;                  1    wreg      void 
 22715 ;; Registers used:
 22716 ;;		wreg, status,2, status,0, cstack
 22717 ;; Tracked objects:
 22718 ;;		On entry : 0/0
 22719 ;;		On exit  : 0/0
 22720 ;;		Unchanged: 0/0
 22721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22722 ;;      Params:         0       1       0       0       0       0       0       0       0
 22723 ;;      Locals:         0       4       0       0       0       0       0       0       0
 22724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22725 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22726 ;;Total ram usage:        5 bytes
 22727 ;; Hardware stack levels used:    1
 22728 ;; Hardware stack levels required when called:    8
 22729 ;; This function calls:
 22730 ;;		_Lcd_Cmd
 22731 ;; This function is called by:
 22732 ;;		_atualizaLCD
 22733 ;; This function uses a non-reentrant model
 22734 ;;
 22735                           
 22736                           	psect	text53
 22737  004CA6                     __ptext53:
 22738                           	opt stack 0
 22739  004CA6                     _Lcd_Set_Cursor:
 22740                           	opt stack 21
 22741                           
 22742                           ;incstack = 0
 22743                           ;Lcd_Set_Cursor@a stored from wreg
 22744  004CA6  0100               	movlb	0	; () banked
 22745  004CA8  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 22746                           
 22747                           ;lcd.h: 88: char temp, z, y;
 22748                           ;lcd.h: 89: switch (a) {
 22749  004CAA  D048               	goto	l246
 22750  004CAC                     
 22751                           ;lcd.h: 91: temp = 0x80 + b - 1;
 22752  004CAC  0100               	movlb	0	; () banked
 22753  004CAE  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22754  004CB0  0F7F               	addlw	127
 22755  004CB2  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22756                           
 22757                           ;lcd.h: 92: z = temp >> 4;
 22758  004CB4  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22759  004CB6  0B0F               	andlw	15
 22760  004CB8  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22761                           
 22762                           ;lcd.h: 93: y = temp & 0x0F;
 22763  004CBA  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22764  004CBC  0B0F               	andlw	15
 22765  004CBE  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;lcd.h: 94: Lcd_Cmd(z);
 22769  004CC0  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22770  004CC2  EC17  F02D         	call	_Lcd_Cmd
 22771                           
 22772                           ;lcd.h: 95: Lcd_Cmd(y);
 22773  004CC6  0100               	movlb	0	; () banked
 22774  004CC8  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22775  004CCA  EC17  F02D         	call	_Lcd_Cmd
 22776                           
 22777                           ;lcd.h: 96: break;
 22778  004CCE  0012               	return	
 22779  004CD0                     
 22780                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 22781  004CD0  0100               	movlb	0	; () banked
 22782  004CD2  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22783  004CD4  0FBF               	addlw	191
 22784  004CD6  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22785                           
 22786                           ;lcd.h: 99: z = temp >> 4;
 22787  004CD8  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22788  004CDA  0B0F               	andlw	15
 22789  004CDC  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22790                           
 22791                           ;lcd.h: 100: y = temp & 0x0F;
 22792  004CDE  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22793  004CE0  0B0F               	andlw	15
 22794  004CE2  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22795                           
 22796                           ; BSR set to: 0
 22797                           ;lcd.h: 101: Lcd_Cmd(z);
 22798  004CE4  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22799  004CE6  EC17  F02D         	call	_Lcd_Cmd
 22800                           
 22801                           ;lcd.h: 102: Lcd_Cmd(y);
 22802  004CEA  0100               	movlb	0	; () banked
 22803  004CEC  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22804  004CEE  EC17  F02D         	call	_Lcd_Cmd
 22805                           
 22806                           ;lcd.h: 103: break;
 22807  004CF2  0012               	return	
 22808  004CF4                     
 22809                           ;lcd.h: 105: temp = 0x94 + b;
 22810  004CF4  0100               	movlb	0	; () banked
 22811  004CF6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22812  004CF8  0F94               	addlw	148
 22813  004CFA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22814                           
 22815                           ;lcd.h: 106: z = temp >> 4;
 22816  004CFC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22817  004CFE  0B0F               	andlw	15
 22818  004D00  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22819                           
 22820                           ;lcd.h: 107: y = temp & 0x0F;
 22821  004D02  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22822  004D04  0B0F               	andlw	15
 22823  004D06  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22824                           
 22825                           ; BSR set to: 0
 22826                           ;lcd.h: 108: Lcd_Cmd(z);
 22827  004D08  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22828  004D0A  EC17  F02D         	call	_Lcd_Cmd
 22829                           
 22830                           ;lcd.h: 109: Lcd_Cmd(y);
 22831  004D0E  0100               	movlb	0	; () banked
 22832  004D10  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22833  004D12  EC17  F02D         	call	_Lcd_Cmd
 22834                           
 22835                           ;lcd.h: 110: break;
 22836  004D16  0012               	return	
 22837  004D18                     
 22838                           ;lcd.h: 112: temp = 0xD4 + b;
 22839  004D18  0100               	movlb	0	; () banked
 22840  004D1A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22841  004D1C  0FD4               	addlw	212
 22842  004D1E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22843                           
 22844                           ;lcd.h: 113: z = temp >> 4;
 22845  004D20  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22846  004D22  0B0F               	andlw	15
 22847  004D24  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22848                           
 22849                           ;lcd.h: 114: y = temp & 0x0F;
 22850  004D26  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22851  004D28  0B0F               	andlw	15
 22852  004D2A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22853                           
 22854                           ; BSR set to: 0
 22855                           ;lcd.h: 115: Lcd_Cmd(z);
 22856  004D2C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22857  004D2E  EC17  F02D         	call	_Lcd_Cmd
 22858                           
 22859                           ;lcd.h: 116: Lcd_Cmd(y);
 22860  004D32  0100               	movlb	0	; () banked
 22861  004D34  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22862  004D36  EC17  F02D         	call	_Lcd_Cmd
 22863                           
 22864                           ;lcd.h: 119: }
 22865                           
 22866                           ;lcd.h: 118: default:return;
 22867                           
 22868                           ;lcd.h: 117: break;
 22869  004D3A  0012               	return	
 22870  004D3C                     l246:
 22871  004D3C  0100               	movlb	0	; () banked
 22872  004D3E  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 22873                           
 22874                           ; Switch size 1, requested type "space"
 22875                           ; Number of cases is 4, Range of values is 1 to 4
 22876                           ; switch strategies available:
 22877                           ; Name         Instructions Cycles
 22878                           ; simple_byte           13     7 (average)
 22879                           ;	Chosen strategy is simple_byte
 22880  004D40  0A01               	xorlw	1	; case 1
 22881  004D42  B4D8               	btfsc	status,2,c
 22882  004D44  D7B3               	goto	l247
 22883  004D46  0A03               	xorlw	3	; case 2
 22884  004D48  B4D8               	btfsc	status,2,c
 22885  004D4A  D7C2               	goto	l249
 22886  004D4C  0A01               	xorlw	1	; case 3
 22887  004D4E  B4D8               	btfsc	status,2,c
 22888  004D50  D7D1               	goto	l250
 22889  004D52  0A07               	xorlw	7	; case 4
 22890  004D54  A4D8               	btfss	status,2,c
 22891  004D56  0012               	return	
 22892  004D58  D7DF               	goto	l251
 22893  004D5A                     __end_of_Lcd_Set_Cursor:
 22894                           	opt stack 0
 22895                           tosu	equ	0xFFF
 22896                           tosh	equ	0xFFE
 22897                           tosl	equ	0xFFD
 22898                           pclath	equ	0xFFA
 22899                           tblptru	equ	0xFF8
 22900                           tblptrh	equ	0xFF7
 22901                           tblptrl	equ	0xFF6
 22902                           tablat	equ	0xFF5
 22903                           prodh	equ	0xFF4
 22904                           prodl	equ	0xFF3
 22905                           intcon	equ	0xFF2
 22906                           intcon2	equ	0xFF1
 22907                           intcon3	equ	0xFF0
 22908                           indf0	equ	0xFEF
 22909                           postinc0	equ	0xFEE
 22910                           fsr0h	equ	0xFEA
 22911                           fsr0l	equ	0xFE9
 22912                           wreg	equ	0xFE8
 22913                           indf1	equ	0xFE7
 22914                           postinc1	equ	0xFE6
 22915                           postdec1	equ	0xFE5
 22916                           plusw1	equ	0xFE3
 22917                           fsr1h	equ	0xFE2
 22918                           fsr1l	equ	0xFE1
 22919                           indf2	equ	0xFDF
 22920                           postinc2	equ	0xFDE
 22921                           postdec2	equ	0xFDD
 22922                           plusw2	equ	0xFDB
 22923                           fsr2h	equ	0xFDA
 22924                           fsr2l	equ	0xFD9
 22925                           status	equ	0xFD8
 22926                           
 22927 ;; *************** function _UART_Init *****************
 22928 ;; Defined at:
 22929 ;;		line 9 in file "src/USART.h"
 22930 ;; Parameters:    Size  Location     Type
 22931 ;;		None
 22932 ;; Auto vars:     Size  Location     Type
 22933 ;;		None
 22934 ;; Return value:  Size  Location     Type
 22935 ;;                  1    wreg      void 
 22936 ;; Registers used:
 22937 ;;		wreg, status,2
 22938 ;; Tracked objects:
 22939 ;;		On entry : 0/0
 22940 ;;		On exit  : 0/0
 22941 ;;		Unchanged: 0/0
 22942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22943 ;;      Params:         0       0       0       0       0       0       0       0       0
 22944 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22946 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22947 ;;Total ram usage:        0 bytes
 22948 ;; Hardware stack levels used:    1
 22949 ;; Hardware stack levels required when called:    6
 22950 ;; This function calls:
 22951 ;;		Nothing
 22952 ;; This function is called by:
 22953 ;;		_main
 22954 ;; This function uses a non-reentrant model
 22955 ;;
 22956                           
 22957                           	psect	text54
 22958  005AD4                     __ptext54:
 22959                           	opt stack 0
 22960  005AD4                     _UART_Init:
 22961                           	opt stack 24
 22962                           
 22963                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 22964                           
 22965                           ;incstack = 0
 22966  005AD4  9C94               	bcf	3988,6,c	;volatile
 22967                           
 22968                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 22969  005AD6  8E94               	bsf	3988,7,c	;volatile
 22970                           
 22971                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 22972  005AD8  8AAC               	bsf	4012,5,c	;volatile
 22973                           
 22974                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 22975  005ADA  84AC               	bsf	4012,2,c	;volatile
 22976                           
 22977                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 22978  005ADC  98AC               	bcf	4012,4,c	;volatile
 22979                           
 22980                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 22981  005ADE  8EAB               	bsf	4011,7,c	;volatile
 22982                           
 22983                           ;USART.h: 20: RCSTAbits.CREN = 1;
 22984  005AE0  88AB               	bsf	4011,4,c	;volatile
 22985                           
 22986                           ;USART.h: 25: SPBRG = 25;
 22987  005AE2  0E19               	movlw	25
 22988  005AE4  6EAF               	movwf	4015,c	;volatile
 22989                           
 22990                           ;USART.h: 28: INTCONbits.GIE = 1;
 22991  005AE6  8EF2               	bsf	intcon,7,c	;volatile
 22992                           
 22993                           ;USART.h: 29: INTCONbits.PEIE = 1;
 22994  005AE8  8CF2               	bsf	intcon,6,c	;volatile
 22995                           
 22996                           ;USART.h: 31: PIR1bits.RCIF = 0;
 22997  005AEA  9A9E               	bcf	3998,5,c	;volatile
 22998                           
 22999                           ;USART.h: 32: PIE1bits.RCIE = 1;
 23000  005AEC  8A9D               	bsf	3997,5,c	;volatile
 23001  005AEE  0012               	return		;funcret
 23002  005AF0                     __end_of_UART_Init:
 23003                           	opt stack 0
 23004                           tosu	equ	0xFFF
 23005                           tosh	equ	0xFFE
 23006                           tosl	equ	0xFFD
 23007                           pclath	equ	0xFFA
 23008                           tblptru	equ	0xFF8
 23009                           tblptrh	equ	0xFF7
 23010                           tblptrl	equ	0xFF6
 23011                           tablat	equ	0xFF5
 23012                           prodh	equ	0xFF4
 23013                           prodl	equ	0xFF3
 23014                           intcon	equ	0xFF2
 23015                           intcon2	equ	0xFF1
 23016                           intcon3	equ	0xFF0
 23017                           indf0	equ	0xFEF
 23018                           postinc0	equ	0xFEE
 23019                           fsr0h	equ	0xFEA
 23020                           fsr0l	equ	0xFE9
 23021                           wreg	equ	0xFE8
 23022                           indf1	equ	0xFE7
 23023                           postinc1	equ	0xFE6
 23024                           postdec1	equ	0xFE5
 23025                           plusw1	equ	0xFE3
 23026                           fsr1h	equ	0xFE2
 23027                           fsr1l	equ	0xFE1
 23028                           indf2	equ	0xFDF
 23029                           postinc2	equ	0xFDE
 23030                           postdec2	equ	0xFDD
 23031                           plusw2	equ	0xFDB
 23032                           fsr2h	equ	0xFDA
 23033                           fsr2l	equ	0xFD9
 23034                           status	equ	0xFD8
 23035                           
 23036 ;; *************** function _Lcd_Init *****************
 23037 ;; Defined at:
 23038 ;;		line 17 in file "src/lcd.h"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;		None
 23041 ;; Auto vars:     Size  Location     Type
 23042 ;;		None
 23043 ;; Return value:  Size  Location     Type
 23044 ;;                  1    wreg      void 
 23045 ;; Registers used:
 23046 ;;		wreg, status,2, cstack
 23047 ;; Tracked objects:
 23048 ;;		On entry : 0/0
 23049 ;;		On exit  : 0/0
 23050 ;;		Unchanged: 0/0
 23051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23052 ;;      Params:         0       0       0       0       0       0       0       0       0
 23053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23054 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23055 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23056 ;;Total ram usage:        1 bytes
 23057 ;; Hardware stack levels used:    1
 23058 ;; Hardware stack levels required when called:    8
 23059 ;; This function calls:
 23060 ;;		_Lcd_Cmd
 23061 ;;		_Lcd_Port
 23062 ;; This function is called by:
 23063 ;;		_main
 23064 ;; This function uses a non-reentrant model
 23065 ;;
 23066                           
 23067                           	psect	text55
 23068  005244                     __ptext55:
 23069                           	opt stack 0
 23070  005244                     _Lcd_Init:
 23071                           	opt stack 22
 23072                           
 23073                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 23074                           
 23075                           ;incstack = 0
 23076  005244  9E95               	bcf	3989,7,c	;volatile
 23077                           
 23078                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 23079  005246  9C95               	bcf	3989,6,c	;volatile
 23080                           
 23081                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 23082  005248  9A95               	bcf	3989,5,c	;volatile
 23083                           
 23084                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 23085  00524A  9895               	bcf	3989,4,c	;volatile
 23086                           
 23087                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 23088  00524C  9695               	bcf	3989,3,c	;volatile
 23089                           
 23090                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 23091  00524E  9495               	bcf	3989,2,c	;volatile
 23092                           
 23093                           ;lcd.h: 35: Lcd_Port(0x00);
 23094  005250  0E00               	movlw	0
 23095  005252  EC6D  F02C         	call	_Lcd_Port
 23096                           
 23097                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 23098  005256  0E34               	movlw	52
 23099  005258  0100               	movlb	0	; () banked
 23100  00525A  6F63               	movwf	??_Lcd_Init& (0+255),b
 23101  00525C  0EF1               	movlw	241
 23102  00525E                     u15407:
 23103  00525E  2EE8               	decfsz	wreg,f,c
 23104  005260  D7FE               	bra	u15407
 23105  005262  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23106  005264  D7FC               	bra	u15407
 23107  005266  D000               	nop2	
 23108                           
 23109                           ;lcd.h: 37: Lcd_Cmd(0x03);
 23110  005268  0E03               	movlw	3
 23111  00526A  EC17  F02D         	call	_Lcd_Cmd
 23112                           
 23113                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 23114  00526E  0E0D               	movlw	13
 23115  005270  0100               	movlb	0	; () banked
 23116  005272  6F63               	movwf	??_Lcd_Init& (0+255),b
 23117  005274  0EFB               	movlw	251
 23118  005276                     u15417:
 23119  005276  2EE8               	decfsz	wreg,f,c
 23120  005278  D7FE               	bra	u15417
 23121  00527A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23122  00527C  D7FC               	bra	u15417
 23123  00527E  D000               	nop2	
 23124                           
 23125                           ;lcd.h: 39: Lcd_Cmd(0x03);
 23126  005280  0E03               	movlw	3
 23127  005282  EC17  F02D         	call	_Lcd_Cmd
 23128                           
 23129                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 23130  005286  0E1D               	movlw	29
 23131  005288  0100               	movlb	0	; () banked
 23132  00528A  6F63               	movwf	??_Lcd_Init& (0+255),b
 23133  00528C  0E91               	movlw	145
 23134  00528E                     u15427:
 23135  00528E  2EE8               	decfsz	wreg,f,c
 23136  005290  D7FE               	bra	u15427
 23137  005292  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23138  005294  D7FC               	bra	u15427
 23139                           
 23140                           ;lcd.h: 41: Lcd_Cmd(0x03);
 23141  005296  0E03               	movlw	3
 23142  005298  EC17  F02D         	call	_Lcd_Cmd
 23143                           
 23144                           ;lcd.h: 43: Lcd_Cmd(0x02);
 23145  00529C  0E02               	movlw	2
 23146  00529E  EC17  F02D         	call	_Lcd_Cmd
 23147                           
 23148                           ;lcd.h: 44: Lcd_Cmd(0x02);
 23149  0052A2  0E02               	movlw	2
 23150  0052A4  EC17  F02D         	call	_Lcd_Cmd
 23151                           
 23152                           ;lcd.h: 45: Lcd_Cmd(0x08);
 23153  0052A8  0E08               	movlw	8
 23154  0052AA  EC17  F02D         	call	_Lcd_Cmd
 23155                           
 23156                           ;lcd.h: 46: Lcd_Cmd(0x00);
 23157  0052AE  0E00               	movlw	0
 23158  0052B0  EC17  F02D         	call	_Lcd_Cmd
 23159                           
 23160                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 23161  0052B4  0E0C               	movlw	12
 23162  0052B6  EC17  F02D         	call	_Lcd_Cmd
 23163                           
 23164                           ;lcd.h: 48: Lcd_Cmd(0x00);
 23165  0052BA  0E00               	movlw	0
 23166  0052BC  EC17  F02D         	call	_Lcd_Cmd
 23167                           
 23168                           ;lcd.h: 49: Lcd_Cmd(0x06);
 23169  0052C0  0E06               	movlw	6
 23170  0052C2  EC17  F02D         	call	_Lcd_Cmd
 23171  0052C6  0012               	return		;funcret
 23172  0052C8                     __end_of_Lcd_Init:
 23173                           	opt stack 0
 23174                           tosu	equ	0xFFF
 23175                           tosh	equ	0xFFE
 23176                           tosl	equ	0xFFD
 23177                           pclath	equ	0xFFA
 23178                           tblptru	equ	0xFF8
 23179                           tblptrh	equ	0xFF7
 23180                           tblptrl	equ	0xFF6
 23181                           tablat	equ	0xFF5
 23182                           prodh	equ	0xFF4
 23183                           prodl	equ	0xFF3
 23184                           intcon	equ	0xFF2
 23185                           intcon2	equ	0xFF1
 23186                           intcon3	equ	0xFF0
 23187                           indf0	equ	0xFEF
 23188                           postinc0	equ	0xFEE
 23189                           fsr0h	equ	0xFEA
 23190                           fsr0l	equ	0xFE9
 23191                           wreg	equ	0xFE8
 23192                           indf1	equ	0xFE7
 23193                           postinc1	equ	0xFE6
 23194                           postdec1	equ	0xFE5
 23195                           plusw1	equ	0xFE3
 23196                           fsr1h	equ	0xFE2
 23197                           fsr1l	equ	0xFE1
 23198                           indf2	equ	0xFDF
 23199                           postinc2	equ	0xFDE
 23200                           postdec2	equ	0xFDD
 23201                           plusw2	equ	0xFDB
 23202                           fsr2h	equ	0xFDA
 23203                           fsr2l	equ	0xFD9
 23204                           status	equ	0xFD8
 23205                           
 23206 ;; *************** function _Lcd_Clear *****************
 23207 ;; Defined at:
 23208 ;;		line 82 in file "src/lcd.h"
 23209 ;; Parameters:    Size  Location     Type
 23210 ;;		None
 23211 ;; Auto vars:     Size  Location     Type
 23212 ;;		None
 23213 ;; Return value:  Size  Location     Type
 23214 ;;                  1    wreg      void 
 23215 ;; Registers used:
 23216 ;;		wreg, status,2, cstack
 23217 ;; Tracked objects:
 23218 ;;		On entry : 0/0
 23219 ;;		On exit  : 0/0
 23220 ;;		Unchanged: 0/0
 23221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23222 ;;      Params:         0       0       0       0       0       0       0       0       0
 23223 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23225 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23226 ;;Total ram usage:        0 bytes
 23227 ;; Hardware stack levels used:    1
 23228 ;; Hardware stack levels required when called:    8
 23229 ;; This function calls:
 23230 ;;		_Lcd_Cmd
 23231 ;; This function is called by:
 23232 ;;		_main
 23233 ;; This function uses a non-reentrant model
 23234 ;;
 23235                           
 23236                           	psect	text56
 23237  005B24                     __ptext56:
 23238                           	opt stack 0
 23239  005B24                     _Lcd_Clear:
 23240                           	opt stack 22
 23241                           
 23242                           ;lcd.h: 83: Lcd_Cmd(0);
 23243                           
 23244                           ;incstack = 0
 23245  005B24  0E00               	movlw	0
 23246  005B26  EC17  F02D         	call	_Lcd_Cmd
 23247                           
 23248                           ;lcd.h: 84: Lcd_Cmd(1);
 23249  005B2A  0E01               	movlw	1
 23250  005B2C  EC17  F02D         	call	_Lcd_Cmd
 23251  005B30  0012               	return		;funcret
 23252  005B32                     __end_of_Lcd_Clear:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclath	equ	0xFFA
 23258                           tblptru	equ	0xFF8
 23259                           tblptrh	equ	0xFF7
 23260                           tblptrl	equ	0xFF6
 23261                           tablat	equ	0xFF5
 23262                           prodh	equ	0xFF4
 23263                           prodl	equ	0xFF3
 23264                           intcon	equ	0xFF2
 23265                           intcon2	equ	0xFF1
 23266                           intcon3	equ	0xFF0
 23267                           indf0	equ	0xFEF
 23268                           postinc0	equ	0xFEE
 23269                           fsr0h	equ	0xFEA
 23270                           fsr0l	equ	0xFE9
 23271                           wreg	equ	0xFE8
 23272                           indf1	equ	0xFE7
 23273                           postinc1	equ	0xFE6
 23274                           postdec1	equ	0xFE5
 23275                           plusw1	equ	0xFE3
 23276                           fsr1h	equ	0xFE2
 23277                           fsr1l	equ	0xFE1
 23278                           indf2	equ	0xFDF
 23279                           postinc2	equ	0xFDE
 23280                           postdec2	equ	0xFDD
 23281                           plusw2	equ	0xFDB
 23282                           fsr2h	equ	0xFDA
 23283                           fsr2l	equ	0xFD9
 23284                           status	equ	0xFD8
 23285                           
 23286 ;; *************** function _Lcd_Cmd *****************
 23287 ;; Defined at:
 23288 ;;		line 74 in file "src/lcd.h"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  a               1    wreg     unsigned char 
 23291 ;; Auto vars:     Size  Location     Type
 23292 ;;  a               1    2[BANK0 ] unsigned char 
 23293 ;; Return value:  Size  Location     Type
 23294 ;;                  1    wreg      void 
 23295 ;; Registers used:
 23296 ;;		wreg, status,2, cstack
 23297 ;; Tracked objects:
 23298 ;;		On entry : 0/0
 23299 ;;		On exit  : 0/0
 23300 ;;		Unchanged: 0/0
 23301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23302 ;;      Params:         0       0       0       0       0       0       0       0       0
 23303 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23304 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23305 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23306 ;;Total ram usage:        2 bytes
 23307 ;; Hardware stack levels used:    1
 23308 ;; Hardware stack levels required when called:    7
 23309 ;; This function calls:
 23310 ;;		_Lcd_Port
 23311 ;; This function is called by:
 23312 ;;		_Lcd_Init
 23313 ;;		_Lcd_Clear
 23314 ;;		_Lcd_Set_Cursor
 23315 ;;		_criaCaracteresCGRAM
 23316 ;; This function uses a non-reentrant model
 23317 ;;
 23318                           
 23319                           	psect	text57
 23320  005A2E                     __ptext57:
 23321                           	opt stack 0
 23322  005A2E                     _Lcd_Cmd:
 23323                           	opt stack 22
 23324                           
 23325                           ;incstack = 0
 23326                           ;Lcd_Cmd@a stored from wreg
 23327  005A2E  0100               	movlb	0	; () banked
 23328  005A30  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 23329                           
 23330                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 23331  005A32  9483               	bcf	3971,2,c	;volatile
 23332                           
 23333                           ;lcd.h: 76: Lcd_Port(a);
 23334  005A34  0100               	movlb	0	; () banked
 23335  005A36  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 23336  005A38  EC6D  F02C         	call	_Lcd_Port
 23337                           
 23338                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 23339  005A3C  8683               	bsf	3971,3,c	;volatile
 23340                           
 23341                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 23342  005A3E  0E0B               	movlw	11
 23343  005A40  0100               	movlb	0	; () banked
 23344  005A42  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 23345  005A44  0E62               	movlw	98
 23346  005A46                     u15437:
 23347  005A46  2EE8               	decfsz	wreg,f,c
 23348  005A48  D7FE               	bra	u15437
 23349  005A4A  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 23350  005A4C  D7FC               	bra	u15437
 23351  005A4E  F000               	nop	
 23352                           
 23353                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 23354  005A50  9683               	bcf	3971,3,c	;volatile
 23355  005A52  0012               	return		;funcret
 23356  005A54                     __end_of_Lcd_Cmd:
 23357                           	opt stack 0
 23358                           tosu	equ	0xFFF
 23359                           tosh	equ	0xFFE
 23360                           tosl	equ	0xFFD
 23361                           pclath	equ	0xFFA
 23362                           tblptru	equ	0xFF8
 23363                           tblptrh	equ	0xFF7
 23364                           tblptrl	equ	0xFF6
 23365                           tablat	equ	0xFF5
 23366                           prodh	equ	0xFF4
 23367                           prodl	equ	0xFF3
 23368                           intcon	equ	0xFF2
 23369                           intcon2	equ	0xFF1
 23370                           intcon3	equ	0xFF0
 23371                           indf0	equ	0xFEF
 23372                           postinc0	equ	0xFEE
 23373                           fsr0h	equ	0xFEA
 23374                           fsr0l	equ	0xFE9
 23375                           wreg	equ	0xFE8
 23376                           indf1	equ	0xFE7
 23377                           postinc1	equ	0xFE6
 23378                           postdec1	equ	0xFE5
 23379                           plusw1	equ	0xFE3
 23380                           fsr1h	equ	0xFE2
 23381                           fsr1l	equ	0xFE1
 23382                           indf2	equ	0xFDF
 23383                           postinc2	equ	0xFDE
 23384                           postdec2	equ	0xFDD
 23385                           plusw2	equ	0xFDB
 23386                           fsr2h	equ	0xFDA
 23387                           fsr2l	equ	0xFD9
 23388                           status	equ	0xFD8
 23389                           
 23390 ;; *************** function _Lcd_Port *****************
 23391 ;; Defined at:
 23392 ;;		line 52 in file "src/lcd.h"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;  a               1    wreg     unsigned char 
 23395 ;; Auto vars:     Size  Location     Type
 23396 ;;  a               1    0[BANK0 ] unsigned char 
 23397 ;; Return value:  Size  Location     Type
 23398 ;;                  1    wreg      void 
 23399 ;; Registers used:
 23400 ;;		wreg
 23401 ;; Tracked objects:
 23402 ;;		On entry : 0/0
 23403 ;;		On exit  : 0/0
 23404 ;;		Unchanged: 0/0
 23405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23406 ;;      Params:         0       0       0       0       0       0       0       0       0
 23407 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23409 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23410 ;;Total ram usage:        1 bytes
 23411 ;; Hardware stack levels used:    1
 23412 ;; Hardware stack levels required when called:    6
 23413 ;; This function calls:
 23414 ;;		Nothing
 23415 ;; This function is called by:
 23416 ;;		_Lcd_Init
 23417 ;;		_Lcd_Cmd
 23418 ;;		_Lcd_Write_Char
 23419 ;; This function uses a non-reentrant model
 23420 ;;
 23421                           
 23422                           	psect	text58
 23423  0058DA                     __ptext58:
 23424                           	opt stack 0
 23425  0058DA                     _Lcd_Port:
 23426                           	opt stack 22
 23427                           
 23428                           ;incstack = 0
 23429                           ;Lcd_Port@a stored from wreg
 23430  0058DA  0100               	movlb	0	; () banked
 23431  0058DC  6F60               	movwf	Lcd_Port@a& (0+255),b
 23432                           
 23433                           ;lcd.h: 53: if (a & 1)
 23434  0058DE  0100               	movlb	0	; () banked
 23435  0058E0  A160               	btfss	Lcd_Port@a& (0+255),0,b
 23436  0058E2  D002               	goto	l229
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 23440  0058E4  8883               	bsf	3971,4,c	;volatile
 23441  0058E6  D001               	goto	l230
 23442  0058E8                     l229:
 23443                           
 23444                           ; BSR set to: 0
 23445                           ;lcd.h: 55: else
 23446                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 23447  0058E8  9883               	bcf	3971,4,c	;volatile
 23448  0058EA                     l230:
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;lcd.h: 58: if (a & 2)
 23452                           
 23453                           ; BSR set to: 0
 23454  0058EA  A360               	btfss	Lcd_Port@a& (0+255),1,b
 23455  0058EC  D002               	goto	l231
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 23459  0058EE  8A83               	bsf	3971,5,c	;volatile
 23460  0058F0  D001               	goto	l232
 23461  0058F2                     l231:
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;lcd.h: 60: else
 23465                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 23466  0058F2  9A83               	bcf	3971,5,c	;volatile
 23467  0058F4                     l232:
 23468                           
 23469                           ; BSR set to: 0
 23470                           ;lcd.h: 63: if (a & 4)
 23471                           
 23472                           ; BSR set to: 0
 23473  0058F4  A560               	btfss	Lcd_Port@a& (0+255),2,b
 23474  0058F6  D002               	goto	l233
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 23478  0058F8  8C83               	bsf	3971,6,c	;volatile
 23479  0058FA  D001               	goto	l234
 23480  0058FC                     l233:
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;lcd.h: 65: else
 23484                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 23485  0058FC  9C83               	bcf	3971,6,c	;volatile
 23486  0058FE                     l234:
 23487                           
 23488                           ; BSR set to: 0
 23489                           ;lcd.h: 68: if (a & 8)
 23490                           
 23491                           ; BSR set to: 0
 23492  0058FE  A760               	btfss	Lcd_Port@a& (0+255),3,b
 23493  005900  D002               	goto	l235
 23494                           
 23495                           ; BSR set to: 0
 23496                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 23497  005902  8E83               	bsf	3971,7,c	;volatile
 23498  005904  0012               	return	
 23499  005906                     l235:
 23500                           
 23501                           ; BSR set to: 0
 23502                           ;lcd.h: 70: else
 23503                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 23504  005906  9E83               	bcf	3971,7,c	;volatile
 23505  005908  0012               	return	
 23506  00590A                     __end_of_Lcd_Port:
 23507                           	opt stack 0
 23508                           tosu	equ	0xFFF
 23509                           tosh	equ	0xFFE
 23510                           tosl	equ	0xFFD
 23511                           pclath	equ	0xFFA
 23512                           tblptru	equ	0xFF8
 23513                           tblptrh	equ	0xFF7
 23514                           tblptrl	equ	0xFF6
 23515                           tablat	equ	0xFF5
 23516                           prodh	equ	0xFF4
 23517                           prodl	equ	0xFF3
 23518                           intcon	equ	0xFF2
 23519                           intcon2	equ	0xFF1
 23520                           intcon3	equ	0xFF0
 23521                           indf0	equ	0xFEF
 23522                           postinc0	equ	0xFEE
 23523                           fsr0h	equ	0xFEA
 23524                           fsr0l	equ	0xFE9
 23525                           wreg	equ	0xFE8
 23526                           indf1	equ	0xFE7
 23527                           postinc1	equ	0xFE6
 23528                           postdec1	equ	0xFE5
 23529                           plusw1	equ	0xFE3
 23530                           fsr1h	equ	0xFE2
 23531                           fsr1l	equ	0xFE1
 23532                           indf2	equ	0xFDF
 23533                           postinc2	equ	0xFDE
 23534                           postdec2	equ	0xFDD
 23535                           plusw2	equ	0xFDB
 23536                           fsr2h	equ	0xFDA
 23537                           fsr2l	equ	0xFD9
 23538                           status	equ	0xFD8
 23539                           
 23540 ;; *************** function _I2C_Master_Init *****************
 23541 ;; Defined at:
 23542 ;;		line 11 in file "src/I2C.c"
 23543 ;; Parameters:    Size  Location     Type
 23544 ;;  c               4   13[BANK0 ] const unsigned long 
 23545 ;; Auto vars:     Size  Location     Type
 23546 ;;		None
 23547 ;; Return value:  Size  Location     Type
 23548 ;;                  1    wreg      void 
 23549 ;; Registers used:
 23550 ;;		wreg, status,2, status,0, cstack
 23551 ;; Tracked objects:
 23552 ;;		On entry : 0/0
 23553 ;;		On exit  : 0/0
 23554 ;;		Unchanged: 0/0
 23555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23556 ;;      Params:         0       4       0       0       0       0       0       0       0
 23557 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23558 ;;      Temps:          0       4       0       0       0       0       0       0       0
 23559 ;;      Totals:         0       8       0       0       0       0       0       0       0
 23560 ;;Total ram usage:        8 bytes
 23561 ;; Hardware stack levels used:    1
 23562 ;; Hardware stack levels required when called:    7
 23563 ;; This function calls:
 23564 ;;		___lldiv
 23565 ;; This function is called by:
 23566 ;;		_main
 23567 ;; This function uses a non-reentrant model
 23568 ;;
 23569                           
 23570                           	psect	text59
 23571  0053BC                     __ptext59:
 23572                           	opt stack 0
 23573  0053BC                     _I2C_Master_Init:
 23574                           	opt stack 23
 23575                           
 23576                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;incstack = 0
 23580  0053BC  8093               	bsf	3987,0,c	;volatile
 23581                           
 23582                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 23583  0053BE  8293               	bsf	3987,1,c	;volatile
 23584                           
 23585                           ;I2C.c: 14: SSPCON1 = 0x28;
 23586  0053C0  0E28               	movlw	40
 23587  0053C2  6EC6               	movwf	4038,c	;volatile
 23588                           
 23589                           ;I2C.c: 15: SSPCON2 = 0x0;
 23590  0053C4  0E00               	movlw	0
 23591  0053C6  6EC5               	movwf	4037,c	;volatile
 23592                           
 23593                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 23594  0053C8  0E00               	movlw	0
 23595  0053CA  0100               	movlb	0	; () banked
 23596  0053CC  6F60               	movwf	___lldiv@dividend& (0+255),b
 23597  0053CE  0E12               	movlw	18
 23598  0053D0  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 23599  0053D2  0E7A               	movlw	122
 23600  0053D4  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 23601  0053D6  0E00               	movlw	0
 23602  0053D8  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 23603  0053DA  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 23604  0053DE  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 23605  0053E2  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 23606  0053E6  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 23607  0053EA  0E02               	movlw	2
 23608  0053EC                     u14095:
 23609  0053EC  90D8               	bcf	status,0,c
 23610  0053EE  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 23611  0053F0  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 23612  0053F2  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 23613  0053F4  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 23614  0053F6  2EE8               	decfsz	wreg,f,c
 23615  0053F8  D7F9               	goto	u14095
 23616  0053FA  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 23617  0053FE  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 23618  005402  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 23619  005406  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 23620  00540A  EC64  F029         	call	___lldiv	;wreg free
 23621  00540E  0100               	movlb	0	; () banked
 23622  005410  0560               	decf	?___lldiv& (0+255),w,b
 23623  005412  6EC8               	movwf	4040,c	;volatile
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;I2C.c: 17: SSPSTAT = 0;
 23627  005414  0E00               	movlw	0
 23628  005416  6EC7               	movwf	4039,c	;volatile
 23629                           
 23630                           ; BSR set to: 0
 23631                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 23632  005418  0E82               	movlw	130
 23633  00541A  0100               	movlb	0	; () banked
 23634  00541C  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 23635  00541E  0EDD               	movlw	221
 23636  005420                     u15447:
 23637  005420  2EE8               	decfsz	wreg,f,c
 23638  005422  D7FE               	bra	u15447
 23639  005424  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 23640  005426  D7FC               	bra	u15447
 23641  005428  D000               	nop2	
 23642  00542A  0012               	return		;funcret
 23643  00542C                     __end_of_I2C_Master_Init:
 23644                           	opt stack 0
 23645                           tosu	equ	0xFFF
 23646                           tosh	equ	0xFFE
 23647                           tosl	equ	0xFFD
 23648                           pclath	equ	0xFFA
 23649                           tblptru	equ	0xFF8
 23650                           tblptrh	equ	0xFF7
 23651                           tblptrl	equ	0xFF6
 23652                           tablat	equ	0xFF5
 23653                           prodh	equ	0xFF4
 23654                           prodl	equ	0xFF3
 23655                           intcon	equ	0xFF2
 23656                           intcon2	equ	0xFF1
 23657                           intcon3	equ	0xFF0
 23658                           indf0	equ	0xFEF
 23659                           postinc0	equ	0xFEE
 23660                           fsr0h	equ	0xFEA
 23661                           fsr0l	equ	0xFE9
 23662                           wreg	equ	0xFE8
 23663                           indf1	equ	0xFE7
 23664                           postinc1	equ	0xFE6
 23665                           postdec1	equ	0xFE5
 23666                           plusw1	equ	0xFE3
 23667                           fsr1h	equ	0xFE2
 23668                           fsr1l	equ	0xFE1
 23669                           indf2	equ	0xFDF
 23670                           postinc2	equ	0xFDE
 23671                           postdec2	equ	0xFDD
 23672                           plusw2	equ	0xFDB
 23673                           fsr2h	equ	0xFDA
 23674                           fsr2l	equ	0xFD9
 23675                           status	equ	0xFD8
 23676                           
 23677 ;; *************** function ___lldiv *****************
 23678 ;; Defined at:
 23679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;  dividend        4    0[BANK0 ] unsigned long 
 23682 ;;  divisor         4    4[BANK0 ] unsigned long 
 23683 ;; Auto vars:     Size  Location     Type
 23684 ;;  quotient        4    8[BANK0 ] unsigned long 
 23685 ;;  counter         1   12[BANK0 ] unsigned char 
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  4    0[BANK0 ] unsigned long 
 23688 ;; Registers used:
 23689 ;;		wreg, status,2, status,0
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/0
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23695 ;;      Params:         0       8       0       0       0       0       0       0       0
 23696 ;;      Locals:         0       5       0       0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23698 ;;      Totals:         0      13       0       0       0       0       0       0       0
 23699 ;;Total ram usage:       13 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:    6
 23702 ;; This function calls:
 23703 ;;		Nothing
 23704 ;; This function is called by:
 23705 ;;		_I2C_Master_Init
 23706 ;; This function uses a non-reentrant model
 23707 ;;
 23708                           
 23709                           	psect	text60
 23710  0052C8                     __ptext60:
 23711                           	opt stack 0
 23712  0052C8                     ___lldiv:
 23713                           	opt stack 23
 23714                           
 23715                           ;incstack = 0
 23716  0052C8  0E00               	movlw	0
 23717  0052CA  0100               	movlb	0	; () banked
 23718  0052CC  6F68               	movwf	___lldiv@quotient& (0+255),b
 23719  0052CE  0E00               	movlw	0
 23720  0052D0  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 23721  0052D2  0E00               	movlw	0
 23722  0052D4  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 23723  0052D6  0E00               	movlw	0
 23724  0052D8  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 23725                           
 23726                           ; BSR set to: 0
 23727  0052DA  5164               	movf	___lldiv@divisor& (0+255),w,b
 23728  0052DC  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 23729  0052DE  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 23730  0052E0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 23731  0052E2  B4D8               	btfsc	status,2,c
 23732  0052E4  D02A               	goto	l2051
 23733                           
 23734                           ; BSR set to: 0
 23735  0052E6  0E01               	movlw	1
 23736  0052E8  6F6C               	movwf	___lldiv@counter& (0+255),b
 23737  0052EA  D006               	goto	l2046
 23738  0052EC                     
 23739                           ; BSR set to: 0
 23740                           
 23741                           ; BSR set to: 0
 23742  0052EC  90D8               	bcf	status,0,c
 23743  0052EE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 23744  0052F0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 23745  0052F2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 23746  0052F4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 23747  0052F6  2B6C               	incf	___lldiv@counter& (0+255),f,b
 23748  0052F8                     l2046:
 23749                           
 23750                           ; BSR set to: 0
 23751                           
 23752                           ; BSR set to: 0
 23753  0052F8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 23754  0052FA  D7F8               	goto	l2047
 23755  0052FC                     u12340:
 23756                           
 23757                           ; BSR set to: 0
 23758                           
 23759                           ; BSR set to: 0
 23760                           
 23761                           ; BSR set to: 0
 23762  0052FC  90D8               	bcf	status,0,c
 23763  0052FE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 23764  005300  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 23765  005302  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 23766  005304  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 23767                           
 23768                           ; BSR set to: 0
 23769  005306  5164               	movf	___lldiv@divisor& (0+255),w,b
 23770  005308  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 23771  00530A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23772  00530C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 23773  00530E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23774  005310  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 23775  005312  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23776  005314  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 23777  005316  A0D8               	btfss	status,0,c
 23778  005318  D009               	goto	l2050
 23779                           
 23780                           ; BSR set to: 0
 23781  00531A  5164               	movf	___lldiv@divisor& (0+255),w,b
 23782  00531C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 23783  00531E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23784  005320  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 23785  005322  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23786  005324  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 23787  005326  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23788  005328  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 23789                           
 23790                           ; BSR set to: 0
 23791  00532A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 23792  00532C                     l2050:
 23793                           
 23794                           ; BSR set to: 0
 23795                           
 23796                           ; BSR set to: 0
 23797  00532C  90D8               	bcf	status,0,c
 23798  00532E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 23799  005330  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 23800  005332  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 23801  005334  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 23802                           
 23803                           ; BSR set to: 0
 23804  005336  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 23805  005338  D7E1               	goto	u12340
 23806  00533A                     l2051:
 23807                           
 23808                           ; BSR set to: 0
 23809                           
 23810                           ; BSR set to: 0
 23811  00533A  C068  F060         	movff	___lldiv@quotient,?___lldiv
 23812  00533E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 23813  005342  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 23814  005346  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 23815                           
 23816                           ; BSR set to: 0
 23817  00534A  0012               	return		;funcret
 23818  00534C                     __end_of___lldiv:
 23819                           	opt stack 0
 23820                           tosu	equ	0xFFF
 23821                           tosh	equ	0xFFE
 23822                           tosl	equ	0xFFD
 23823                           pclath	equ	0xFFA
 23824                           tblptru	equ	0xFF8
 23825                           tblptrh	equ	0xFF7
 23826                           tblptrl	equ	0xFF6
 23827                           tablat	equ	0xFF5
 23828                           prodh	equ	0xFF4
 23829                           prodl	equ	0xFF3
 23830                           intcon	equ	0xFF2
 23831                           intcon2	equ	0xFF1
 23832                           intcon3	equ	0xFF0
 23833                           indf0	equ	0xFEF
 23834                           postinc0	equ	0xFEE
 23835                           fsr0h	equ	0xFEA
 23836                           fsr0l	equ	0xFE9
 23837                           wreg	equ	0xFE8
 23838                           indf1	equ	0xFE7
 23839                           postinc1	equ	0xFE6
 23840                           postdec1	equ	0xFE5
 23841                           plusw1	equ	0xFE3
 23842                           fsr1h	equ	0xFE2
 23843                           fsr1l	equ	0xFE1
 23844                           indf2	equ	0xFDF
 23845                           postinc2	equ	0xFDE
 23846                           postdec2	equ	0xFDD
 23847                           plusw2	equ	0xFDB
 23848                           fsr2h	equ	0xFDA
 23849                           fsr2l	equ	0xFD9
 23850                           status	equ	0xFD8
 23851                           
 23852 ;; *************** function _TIMER0 *****************
 23853 ;; Defined at:
 23854 ;;		line 16 in file "src/main.c"
 23855 ;; Parameters:    Size  Location     Type
 23856 ;;		None
 23857 ;; Auto vars:     Size  Location     Type
 23858 ;;  c               1   47[COMRAM] unsigned char 
 23859 ;; Return value:  Size  Location     Type
 23860 ;;                  1    wreg      void 
 23861 ;; Registers used:
 23862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23863 ;; Tracked objects:
 23864 ;;		On entry : 0/0
 23865 ;;		On exit  : 0/0
 23866 ;;		Unchanged: 0/0
 23867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23868 ;;      Params:         0       0       0       0       0       0       0       0       0
 23869 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23870 ;;      Temps:         18       0       0       0       0       0       0       0       0
 23871 ;;      Totals:        19       0       0       0       0       0       0       0       0
 23872 ;;Total ram usage:       19 bytes
 23873 ;; Hardware stack levels used:    1
 23874 ;; Hardware stack levels required when called:    5
 23875 ;; This function calls:
 23876 ;;		_readButtons
 23877 ;;		_receiveByteSerial
 23878 ;;		_timer
 23879 ;; This function is called by:
 23880 ;;		Interrupt level 2
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	intcode
 23885  000008                     __pintcode:
 23886                           	opt stack 0
 23887  000008                     _TIMER0:
 23888                           	opt stack 20
 23889                           
 23890                           ; BSR set to: 0
 23891                           ;incstack = 0
 23892  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23893  00000A  ED95  F025         	call	int_func,f	;refresh shadow registers
 23894                           tosu	equ	0xFFF
 23895                           tosh	equ	0xFFE
 23896                           tosl	equ	0xFFD
 23897                           pclath	equ	0xFFA
 23898                           tblptru	equ	0xFF8
 23899                           tblptrh	equ	0xFF7
 23900                           tblptrl	equ	0xFF6
 23901                           tablat	equ	0xFF5
 23902                           prodh	equ	0xFF4
 23903                           prodl	equ	0xFF3
 23904                           intcon	equ	0xFF2
 23905                           intcon2	equ	0xFF1
 23906                           intcon3	equ	0xFF0
 23907                           indf0	equ	0xFEF
 23908                           postinc0	equ	0xFEE
 23909                           fsr0h	equ	0xFEA
 23910                           fsr0l	equ	0xFE9
 23911                           wreg	equ	0xFE8
 23912                           indf1	equ	0xFE7
 23913                           postinc1	equ	0xFE6
 23914                           postdec1	equ	0xFE5
 23915                           plusw1	equ	0xFE3
 23916                           fsr1h	equ	0xFE2
 23917                           fsr1l	equ	0xFE1
 23918                           indf2	equ	0xFDF
 23919                           postinc2	equ	0xFDE
 23920                           postdec2	equ	0xFDD
 23921                           plusw2	equ	0xFDB
 23922                           fsr2h	equ	0xFDA
 23923                           fsr2l	equ	0xFD9
 23924                           status	equ	0xFD8
 23925                           
 23926                           	psect	intcode_body
 23927  004B2A                     __pintcode_body:
 23928                           	opt stack 20
 23929  004B2A                     int_func:
 23930                           	opt stack 20
 23931  004B2A  0006               	pop		; remove dummy address from shadow register refresh
 23932  004B2C  CFFA F01E          	movff	pclath,??_TIMER0
 23933  004B30  CFFB F01F          	movff	pclatu,??_TIMER0+1
 23934  004B34  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 23935  004B38  CFEA F021          	movff	fsr0h,??_TIMER0+3
 23936  004B3C  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 23937  004B40  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 23938  004B44  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 23939  004B48  CFDA F025          	movff	fsr2h,??_TIMER0+7
 23940  004B4C  CFF3 F026          	movff	prodl,??_TIMER0+8
 23941  004B50  CFF4 F027          	movff	prodh,??_TIMER0+9
 23942  004B54  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 23943  004B58  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 23944  004B5C  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 23945  004B60  CFF5 F02B          	movff	tablat,??_TIMER0+13
 23946  004B64  C05F  F02C         	movff	btemp,??_TIMER0+14
 23947  004B68  C060  F02D         	movff	btemp+1,??_TIMER0+15
 23948  004B6C  C061  F02E         	movff	btemp+2,??_TIMER0+16
 23949  004B70  C062  F02F         	movff	btemp+3,??_TIMER0+17
 23950                           
 23951                           ;main.c: 17: if (TMR0IF) {
 23952  004B74  A4F2               	btfss	intcon,2,c	;volatile
 23953  004B76  D007               	goto	i2l1258
 23954                           
 23955                           ;main.c: 18: TMR0IF = 0x00;
 23956  004B78  94F2               	bcf	intcon,2,c	;volatile
 23957                           
 23958                           ;main.c: 19: TMR0H = 0x3C;
 23959  004B7A  0E3C               	movlw	60
 23960  004B7C  6ED7               	movwf	4055,c	;volatile
 23961                           
 23962                           ;main.c: 20: TMR0L = 0xB0;
 23963  004B7E  0EB0               	movlw	176
 23964  004B80  6ED6               	movwf	4054,c	;volatile
 23965                           
 23966                           ;main.c: 21: timer();
 23967  004B82  ECB1  F01E         	call	_timer	;wreg free
 23968  004B86                     i2l1258:
 23969                           
 23970                           ;main.c: 22: }
 23971                           ;main.c: 23: if (RCIF) {
 23972  004B86  AA9E               	btfss	3998,5,c	;volatile
 23973  004B88  D005               	goto	i2l1259
 23974                           
 23975                           ;main.c: 24: char c = RCREG;
 23976  004B8A  CFAE F030          	movff	4014,TIMER0@c	;volatile
 23977                           
 23978                           ;main.c: 25: receiveByteSerial(c);
 23979  004B8E  5030               	movf	TIMER0@c,w,c
 23980  004B90  EC4D  F02A         	call	_receiveByteSerial
 23981  004B94                     i2l1259:
 23982                           
 23983                           ;main.c: 26: }
 23984                           ;main.c: 27: if (INT2IF) {
 23985  004B94  A2F0               	btfss	intcon3,1,c	;volatile
 23986  004B96  D003               	goto	i2l1260
 23987                           
 23988                           ;main.c: 28: INT2IF = 0;
 23989  004B98  92F0               	bcf	intcon3,1,c	;volatile
 23990                           
 23991                           ;main.c: 29: readButtons();
 23992  004B9A  ECF0  F02C         	call	_readButtons	;wreg free
 23993  004B9E                     i2l1260:
 23994  004B9E  C02F  F062         	movff	??_TIMER0+17,btemp+3
 23995  004BA2  C02E  F061         	movff	??_TIMER0+16,btemp+2
 23996  004BA6  C02D  F060         	movff	??_TIMER0+15,btemp+1
 23997  004BAA  C02C  F05F         	movff	??_TIMER0+14,btemp
 23998  004BAE  C02B  FFF5         	movff	??_TIMER0+13,tablat
 23999  004BB2  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 24000  004BB6  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 24001  004BBA  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 24002  004BBE  C027  FFF4         	movff	??_TIMER0+9,prodh
 24003  004BC2  C026  FFF3         	movff	??_TIMER0+8,prodl
 24004  004BC6  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 24005  004BCA  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 24006  004BCE  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 24007  004BD2  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 24008  004BD6  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 24009  004BDA  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 24010  004BDE  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 24011  004BE2  C01E  FFFA         	movff	??_TIMER0,pclath
 24012  004BE6  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24013  004BE8  0011               	retfie		f
 24014  004BEA                     __end_of_TIMER0:
 24015                           	opt stack 0
 24016                           tosu	equ	0xFFF
 24017                           tosh	equ	0xFFE
 24018                           tosl	equ	0xFFD
 24019                           pclatu	equ	0xFFB
 24020                           pclath	equ	0xFFA
 24021                           tblptru	equ	0xFF8
 24022                           tblptrh	equ	0xFF7
 24023                           tblptrl	equ	0xFF6
 24024                           tablat	equ	0xFF5
 24025                           prodh	equ	0xFF4
 24026                           prodl	equ	0xFF3
 24027                           intcon	equ	0xFF2
 24028                           intcon2	equ	0xFF1
 24029                           intcon3	equ	0xFF0
 24030                           indf0	equ	0xFEF
 24031                           postinc0	equ	0xFEE
 24032                           fsr0h	equ	0xFEA
 24033                           fsr0l	equ	0xFE9
 24034                           wreg	equ	0xFE8
 24035                           indf1	equ	0xFE7
 24036                           postinc1	equ	0xFE6
 24037                           postdec1	equ	0xFE5
 24038                           plusw1	equ	0xFE3
 24039                           fsr1h	equ	0xFE2
 24040                           fsr1l	equ	0xFE1
 24041                           indf2	equ	0xFDF
 24042                           postinc2	equ	0xFDE
 24043                           postdec2	equ	0xFDD
 24044                           plusw2	equ	0xFDB
 24045                           fsr2h	equ	0xFDA
 24046                           fsr2l	equ	0xFD9
 24047                           status	equ	0xFD8
 24048                           
 24049 ;; *************** function _timer *****************
 24050 ;; Defined at:
 24051 ;;		line 39 in file "src/controle.h"
 24052 ;; Parameters:    Size  Location     Type
 24053 ;;		None
 24054 ;; Auto vars:     Size  Location     Type
 24055 ;;		None
 24056 ;; Return value:  Size  Location     Type
 24057 ;;                  1    wreg      void 
 24058 ;; Registers used:
 24059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24060 ;; Tracked objects:
 24061 ;;		On entry : 0/0
 24062 ;;		On exit  : 0/0
 24063 ;;		Unchanged: 0/0
 24064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24065 ;;      Params:         0       0       0       0       0       0       0       0       0
 24066 ;;      Locals:         6       0       0       0       0       0       0       0       0
 24067 ;;      Temps:          7       0       0       0       0       0       0       0       0
 24068 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24069 ;;Total ram usage:       13 bytes
 24070 ;; Hardware stack levels used:    1
 24071 ;; Hardware stack levels required when called:    4
 24072 ;; This function calls:
 24073 ;;		i2_setRangeValor
 24074 ;; This function is called by:
 24075 ;;		_TIMER0
 24076 ;; This function uses a non-reentrant model
 24077 ;;
 24078                           
 24079                           	psect	text62
 24080  003D62                     __ptext62:
 24081                           	opt stack 0
 24082  003D62                     _timer:
 24083                           	opt stack 20
 24084                           
 24085                           ;controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 24086                           
 24087                           ;incstack = 0
 24088  003D62  5034               	movf	_t_controle_flap+1,w,c
 24089  003D64  E109               	bnz	i2l8793
 24090  003D66  0E02               	movlw	2
 24091  003D68  5C33               	subwf	_t_controle_flap,w,c
 24092  003D6A  B0D8               	btfsc	status,0,c
 24093  003D6C  D005               	goto	i2l1095
 24094  003D6E  0E00               	movlw	0
 24095  003D70  6E34               	movwf	_t_controle_flap+1,c
 24096  003D72  0E00               	movlw	0
 24097  003D74  6E33               	movwf	_t_controle_flap,c
 24098  003D76  D007               	goto	i2l1097
 24099  003D78                     i2l1095:
 24100  003D78                     i2l8793:
 24101  003D78  0633               	decf	_t_controle_flap,f,c
 24102  003D7A  A0D8               	btfss	status,0,c
 24103  003D7C  0634               	decf	_t_controle_flap+1,f,c
 24104  003D7E  C033  F033         	movff	_t_controle_flap,_t_controle_flap
 24105  003D82  C034  F034         	movff	_t_controle_flap+1,_t_controle_flap+1
 24106  003D86                     i2l1097:
 24107                           
 24108                           ;controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 24109  003D86  0E02               	movlw	2
 24110  003D88  6039               	cpfslt	_t_controle_buzzer,c
 24111  003D8A  D005               	goto	i2l1099
 24112  003D8C  0E00               	movlw	0
 24113  003D8E  6E19               	movwf	_timer$1409+1,c
 24114  003D90  0E00               	movlw	0
 24115  003D92  6E18               	movwf	_timer$1409,c
 24116  003D94  D004               	goto	i2l1101
 24117  003D96                     i2l1099:
 24118  003D96  0639               	decf	_t_controle_buzzer,f,c
 24119  003D98  C039  F018         	movff	_t_controle_buzzer,_timer$1409
 24120  003D9C  6A19               	clrf	_timer$1409+1,c
 24121  003D9E                     i2l1101:
 24122  003D9E  C018  F039         	movff	_timer$1409,_t_controle_buzzer
 24123                           
 24124                           ;controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 24125  003DA2  0101               	movlb	1	; () banked
 24126  003DA4  5161               	movf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 24127  003DA6  E109               	bnz	i2l8807
 24128  003DA8  0E02               	movlw	2
 24129  003DAA  5D60               	subwf	_t_controle_modo_seguranca& (0+255),w,b
 24130  003DAC  B0D8               	btfsc	status,0,c
 24131  003DAE  D005               	goto	i2l1103
 24132                           
 24133                           ; BSR set to: 1
 24134  003DB0  0E00               	movlw	0
 24135  003DB2  6F61               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 24136  003DB4  0E00               	movlw	0
 24137  003DB6  6F60               	movwf	_t_controle_modo_seguranca& (0+255),b
 24138  003DB8  D007               	goto	i2l1105
 24139  003DBA                     i2l1103:
 24140  003DBA                     i2l8807:
 24141                           
 24142                           ; BSR set to: 1
 24143  003DBA  0760               	decf	_t_controle_modo_seguranca& (0+255),f,b
 24144  003DBC  A0D8               	btfss	status,0,c
 24145  003DBE  0761               	decf	(_t_controle_modo_seguranca+1)& (0+255),f,b
 24146  003DC0  C160  F160         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 24147  003DC4  C161  F161         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 24148  003DC8                     i2l1105:
 24149                           
 24150                           ; BSR set to: 1
 24151                           ;controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 24152                           
 24153                           ; BSR set to: 1
 24154  003DC8  0E02               	movlw	2
 24155  003DCA  6036               	cpfslt	_t_leitura_adc,c
 24156  003DCC  D005               	goto	i2l1107
 24157                           
 24158                           ; BSR set to: 1
 24159  003DCE  0E00               	movlw	0
 24160  003DD0  6E1B               	movwf	_timer$1410+1,c
 24161  003DD2  0E00               	movlw	0
 24162  003DD4  6E1A               	movwf	_timer$1410,c
 24163  003DD6  D004               	goto	i2l1109
 24164  003DD8                     i2l1107:
 24165                           
 24166                           ; BSR set to: 1
 24167                           
 24168                           ; BSR set to: 1
 24169  003DD8  0636               	decf	_t_leitura_adc,f,c
 24170  003DDA  C036  F01A         	movff	_t_leitura_adc,_timer$1410
 24171  003DDE  6A1B               	clrf	_timer$1410+1,c
 24172  003DE0                     i2l1109:
 24173                           
 24174                           ; BSR set to: 1
 24175                           
 24176                           ; BSR set to: 1
 24177  003DE0  C01A  F036         	movff	_timer$1410,_t_leitura_adc
 24178                           
 24179                           ; BSR set to: 1
 24180                           ;controle.h: 47: if (t_controle_blink > 1) {
 24181  003DE4  0E01               	movlw	1
 24182  003DE6  6438               	cpfsgt	_t_controle_blink,c
 24183  003DE8  D002               	goto	i2l1110
 24184                           
 24185                           ; BSR set to: 1
 24186                           ;controle.h: 48: --t_controle_blink;
 24187  003DEA  0638               	decf	_t_controle_blink,f,c
 24188                           
 24189                           ;controle.h: 49: } else {
 24190  003DEC  D007               	goto	i2l1111
 24191  003DEE                     i2l1110:
 24192                           
 24193                           ; BSR set to: 1
 24194                           ;controle.h: 50: blinkk = ~blinkk;
 24195  003DEE  B45B               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 24196  003DF0  D002               	goto	i2u1313_40
 24197  003DF2  845B               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 24198  003DF4  D001               	goto	i2u1314_45
 24199  003DF6                     i2u1313_40:
 24200  003DF6  945B               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 24201  003DF8                     i2u1314_45:
 24202                           
 24203                           ;controle.h: 51: t_controle_blink = 5;
 24204  003DF8  0E05               	movlw	5
 24205  003DFA  6E38               	movwf	_t_controle_blink,c
 24206  003DFC                     i2l1111:
 24207                           
 24208                           ;controle.h: 52: }
 24209                           ;controle.h: 54: base_sec++;
 24210  003DFC  2A4A               	incf	_base_sec,f,c
 24211                           
 24212                           ;controle.h: 55: if (base_sec > 9) {
 24213  003DFE  0E09               	movlw	9
 24214  003E00  644A               	cpfsgt	_base_sec,c
 24215  003E02  0012               	return	
 24216                           
 24217                           ;controle.h: 56: base_sec = 0;
 24218  003E04  0E00               	movlw	0
 24219  003E06  6E4A               	movwf	_base_sec,c
 24220                           
 24221                           ;controle.h: 57: sec++;
 24222  003E08  2A48               	incf	_sec,f,c
 24223                           
 24224                           ;controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 24225  003E0A  0E02               	movlw	2
 24226  003E0C  603E               	cpfslt	_t_wifi_restart,c
 24227  003E0E  D005               	goto	i2l1114
 24228  003E10  0E00               	movlw	0
 24229  003E12  6E1D               	movwf	_timer$1411+1,c
 24230  003E14  0E00               	movlw	0
 24231  003E16  6E1C               	movwf	_timer$1411,c
 24232  003E18  D004               	goto	i2l1116
 24233  003E1A                     i2l1114:
 24234  003E1A  063E               	decf	_t_wifi_restart,f,c
 24235  003E1C  C03E  F01C         	movff	_t_wifi_restart,_timer$1411
 24236  003E20  6A1D               	clrf	_timer$1411+1,c
 24237  003E22                     i2l1116:
 24238  003E22  C01C  F03E         	movff	_timer$1411,_t_wifi_restart
 24239                           
 24240                           ;controle.h: 66: if (sec > 59) {
 24241  003E26  0E3B               	movlw	59
 24242  003E28  6448               	cpfsgt	_sec,c
 24243  003E2A  0012               	return	
 24244                           
 24245                           ;controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 24246  003E2C  5032               	movf	_t_controle_religar_buzzer+1,w,c
 24247  003E2E  E109               	bnz	i2l8845
 24248  003E30  0E02               	movlw	2
 24249  003E32  5C31               	subwf	_t_controle_religar_buzzer,w,c
 24250  003E34  B0D8               	btfsc	status,0,c
 24251  003E36  D005               	goto	i2l1119
 24252  003E38  0E00               	movlw	0
 24253  003E3A  6E32               	movwf	_t_controle_religar_buzzer+1,c
 24254  003E3C  0E00               	movlw	0
 24255  003E3E  6E31               	movwf	_t_controle_religar_buzzer,c
 24256  003E40  D007               	goto	i2l1121
 24257  003E42                     i2l1119:
 24258  003E42                     i2l8845:
 24259  003E42  0631               	decf	_t_controle_religar_buzzer,f,c
 24260  003E44  A0D8               	btfss	status,0,c
 24261  003E46  0632               	decf	_t_controle_religar_buzzer+1,f,c
 24262  003E48  C031  F031         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 24263  003E4C  C032  F032         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 24264  003E50                     i2l1121:
 24265                           
 24266                           ;controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 24267  003E50  0101               	movlb	1	; () banked
 24268  003E52  5163               	movf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 24269  003E54  E109               	bnz	i2l8851
 24270  003E56  0E02               	movlw	2
 24271  003E58  5D62               	subwf	_t_controle_religar_ventoinha& (0+255),w,b
 24272  003E5A  B0D8               	btfsc	status,0,c
 24273  003E5C  D005               	goto	i2l1123
 24274                           
 24275                           ; BSR set to: 1
 24276  003E5E  0E00               	movlw	0
 24277  003E60  6F63               	movwf	(_t_controle_religar_ventoinha+1)& (0+255),b
 24278  003E62  0E00               	movlw	0
 24279  003E64  6F62               	movwf	_t_controle_religar_ventoinha& (0+255),b
 24280  003E66  D007               	goto	i2l1125
 24281  003E68                     i2l1123:
 24282  003E68                     i2l8851:
 24283                           
 24284                           ; BSR set to: 1
 24285  003E68  0762               	decf	_t_controle_religar_ventoinha& (0+255),f,b
 24286  003E6A  A0D8               	btfss	status,0,c
 24287  003E6C  0763               	decf	(_t_controle_religar_ventoinha+1)& (0+255),f,b
 24288  003E6E  C162  F162         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 24289  003E72  C163  F163         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 24290  003E76                     i2l1125:
 24291                           
 24292                           ; BSR set to: 1
 24293                           ;controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 24294                           
 24295                           ; BSR set to: 1
 24296  003E76  0E64               	movlw	100
 24297  003E78  0100               	movlb	0	; () banked
 24298  003E7A  19F4               	xorwf	_tempajt& (0+255),w,b
 24299  003E7C  B4D8               	btfsc	status,2,c
 24300  003E7E  D057               	goto	i2l1128
 24301                           
 24302                           ; BSR set to: 0
 24303  003E80  0E6E               	movlw	110
 24304  003E82  19F4               	xorwf	_tempajt& (0+255),w,b
 24305  003E84  B4D8               	btfsc	status,2,c
 24306  003E86  D053               	goto	i2l1128
 24307                           
 24308                           ; BSR set to: 0
 24309  003E88  0E85               	movlw	133
 24310  003E8A  19F4               	xorwf	_tempajt& (0+255),w,b
 24311  003E8C  B4D8               	btfsc	status,2,c
 24312  003E8E  D04F               	goto	i2l1128
 24313                           
 24314                           ; BSR set to: 0
 24315  003E90  045E               	decf	_f_falta_energia,w,c
 24316  003E92  A4D8               	btfss	status,2,c
 24317  003E94  D04C               	goto	i2l1128
 24318                           
 24319                           ; BSR set to: 0
 24320                           ;controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 24321  003E96  51F4               	movf	_tempajt& (0+255),w,b
 24322  003E98  6E11               	movwf	??_timer& (0+255),c
 24323  003E9A  6A12               	clrf	(??_timer+1)& (0+255),c
 24324  003E9C  504F               	movf	_h_subir_temp_automatica,w,c
 24325  003E9E  C0FE  F013         	movff	_temp,??_timer+2
 24326  003EA2  6A14               	clrf	(??_timer+3)& (0+255),c
 24327  003EA4  2613               	addwf	??_timer+2,f,c
 24328  003EA6  0E00               	movlw	0
 24329  003EA8  2214               	addwfc	??_timer+3,f,c
 24330  003EAA  5011               	movf	??_timer,w,c
 24331  003EAC  5C13               	subwf	??_timer+2,w,c
 24332  003EAE  5014               	movf	??_timer+3,w,c
 24333  003EB0  0A80               	xorlw	128
 24334  003EB2  6E15               	movwf	(??_timer+4)& (0+255),c
 24335  003EB4  5012               	movf	??_timer+1,w,c
 24336  003EB6  0A80               	xorlw	128
 24337  003EB8  5815               	subwfb	(??_timer+4)& (0+255),w,c
 24338  003EBA  A0D8               	btfss	status,0,c
 24339  003EBC  D038               	goto	i2l1128
 24340                           
 24341                           ; BSR set to: 0
 24342  003EBE  504F               	movf	_h_subir_temp_automatica,w,c
 24343  003EC0  6E11               	movwf	??_timer& (0+255),c
 24344  003EC2  6A12               	clrf	(??_timer+1)& (0+255),c
 24345  003EC4  1E11               	comf	??_timer,f,c
 24346  003EC6  1E12               	comf	??_timer+1,f,c
 24347  003EC8  4A11               	infsnz	??_timer,f,c
 24348  003ECA  2A12               	incf	??_timer+1,f,c
 24349  003ECC  51FE               	movf	_temp& (0+255),w,b
 24350  003ECE  6E13               	movwf	(??_timer+2)& (0+255),c
 24351  003ED0  6A14               	clrf	(??_timer+3)& (0+255),c
 24352  003ED2  5011               	movf	??_timer,w,c
 24353  003ED4  2613               	addwf	??_timer+2,f,c
 24354  003ED6  5012               	movf	??_timer+1,w,c
 24355  003ED8  2214               	addwfc	??_timer+3,f,c
 24356  003EDA  51F4               	movf	_tempajt& (0+255),w,b
 24357  003EDC  6E15               	movwf	(??_timer+4)& (0+255),c
 24358  003EDE  6A16               	clrf	(??_timer+5)& (0+255),c
 24359  003EE0  5013               	movf	??_timer+2,w,c
 24360  003EE2  5C15               	subwf	??_timer+4,w,c
 24361  003EE4  5016               	movf	??_timer+5,w,c
 24362  003EE6  0A80               	xorlw	128
 24363  003EE8  6E17               	movwf	(??_timer+6)& (0+255),c
 24364  003EEA  5014               	movf	??_timer+3,w,c
 24365  003EEC  0A80               	xorlw	128
 24366  003EEE  5817               	subwfb	(??_timer+6)& (0+255),w,c
 24367  003EF0  A0D8               	btfss	status,0,c
 24368  003EF2  D01D               	goto	i2l1128
 24369                           
 24370                           ; BSR set to: 0
 24371  003EF4  0E96               	movlw	150
 24372  003EF6  61F4               	cpfslt	_tempajt& (0+255),b
 24373  003EF8  D01A               	goto	i2l1128
 24374                           
 24375                           ; BSR set to: 0
 24376  003EFA  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24377  003EFC  B4D8               	btfsc	status,2,c
 24378  003EFE  D017               	goto	i2l1128
 24379                           
 24380                           ; BSR set to: 0
 24381  003F00  51FB               	movf	_trava_fase& (0+255),w,b
 24382  003F02  A4D8               	btfss	status,2,c
 24383  003F04  D014               	goto	i2l1128
 24384                           
 24385                           ; BSR set to: 0
 24386                           ;controle.h: 75: t_controle_temp_automatica++;
 24387  003F06  2A37               	incf	_t_controle_temp_automatica,f,c
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 24391  003F08  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24392  003F0A  5C37               	subwf	_t_controle_temp_automatica,w,c
 24393  003F0C  A0D8               	btfss	status,0,c
 24394  003F0E  D00F               	goto	i2l1128
 24395                           
 24396                           ; BSR set to: 0
 24397                           ;controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 24398  003F10  0EF4               	movlw	low _tempajt
 24399  003F12  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24400  003F14  0E00               	movlw	high _tempajt
 24401  003F16  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24402  003F18  0E55               	movlw	85
 24403  003F1A  6E08               	movwf	i2setRangeValor@_min,c
 24404  003F1C  0E97               	movlw	151
 24405  003F1E  6E09               	movwf	i2setRangeValor@_max,c
 24406  003F20  0E01               	movlw	1
 24407  003F22  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24408  003F24  0E2B               	movlw	43
 24409  003F26  EC45  F028         	call	i2_setRangeValor
 24410                           
 24411                           ;controle.h: 78: t_controle_temp_automatica = 0;
 24412  003F2A  0E00               	movlw	0
 24413  003F2C  6E37               	movwf	_t_controle_temp_automatica,c
 24414  003F2E                     i2l1128:
 24415                           
 24416                           ;controle.h: 79: }
 24417                           ;controle.h: 80: }
 24418                           ;controle.h: 81: }
 24419                           ;controle.h: 83: sec = 0;
 24420  003F2E  0E00               	movlw	0
 24421  003F30  6E48               	movwf	_sec,c
 24422                           
 24423                           ;controle.h: 84: min++;
 24424  003F32  2A47               	incf	_min,f,c
 24425                           
 24426                           ;controle.h: 85: if (min > 59) {
 24427  003F34  0E3B               	movlw	59
 24428  003F36  6447               	cpfsgt	_min,c
 24429  003F38  0012               	return	
 24430                           
 24431                           ;controle.h: 86: min = 0;
 24432  003F3A  0E00               	movlw	0
 24433  003F3C  6E47               	movwf	_min,c
 24434                           
 24435                           ;controle.h: 87: hor++;
 24436  003F3E  2A46               	incf	_hor,f,c
 24437                           
 24438                           ;controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 24439  003F40  0100               	movlb	0	; () banked
 24440  003F42  51FB               	movf	_trava_fase& (0+255),w,b
 24441  003F44  A4D8               	btfss	status,2,c
 24442  003F46  D062               	goto	i2l1139
 24443                           
 24444                           ; BSR set to: 0
 24445  003F48  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24446  003F4A  B4D8               	btfsc	status,2,c
 24447  003F4C  D05F               	goto	i2l1139
 24448                           
 24449                           ; BSR set to: 0
 24450  003F4E  045E               	decf	_f_falta_energia,w,c
 24451  003F50  A4D8               	btfss	status,2,c
 24452  003F52  D05C               	goto	i2l1139
 24453                           
 24454                           ; BSR set to: 0
 24455                           ;controle.h: 91: if (tempajt == 100 && fase == 1) {
 24456  003F54  0E64               	movlw	100
 24457  003F56  19F4               	xorwf	_tempajt& (0+255),w,b
 24458  003F58  A4D8               	btfss	status,2,c
 24459  003F5A  D019               	goto	i2l1131
 24460                           
 24461                           ; BSR set to: 0
 24462  003F5C  05F6               	decf	_fase& (0+255),w,b
 24463  003F5E  A4D8               	btfss	status,2,c
 24464  003F60  D016               	goto	i2l1131
 24465                           
 24466                           ; BSR set to: 0
 24467                           ;controle.h: 92: t_controle_fim_fases++;
 24468  003F62  2A3A               	incf	_t_controle_fim_fases,f,c
 24469                           
 24470                           ; BSR set to: 0
 24471                           ;controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 24472  003F64  5058               	movf	_t_fim_fase1,w,c
 24473  003F66  5C3A               	subwf	_t_controle_fim_fases,w,c
 24474  003F68  A0D8               	btfss	status,0,c
 24475  003F6A  D050               	goto	i2l1139
 24476                           
 24477                           ; BSR set to: 0
 24478  003F6C  5058               	movf	_t_fim_fase1,w,c
 24479  003F6E  B4D8               	btfsc	status,2,c
 24480  003F70  D04D               	goto	i2l1139
 24481                           
 24482                           ; BSR set to: 0
 24483                           ;controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 24484  003F72  0EF4               	movlw	low _tempajt
 24485  003F74  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24486  003F76  0E00               	movlw	high _tempajt
 24487  003F78  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24488  003F7A  0E55               	movlw	85
 24489  003F7C  6E08               	movwf	i2setRangeValor@_min,c
 24490  003F7E  0E97               	movlw	151
 24491  003F80  6E09               	movwf	i2setRangeValor@_max,c
 24492  003F82  0E01               	movlw	1
 24493  003F84  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24494  003F86  0E2B               	movlw	43
 24495  003F88  EC45  F028         	call	i2_setRangeValor
 24496  003F8C  D03D               	goto	i2l1137
 24497  003F8E                     i2l1131:
 24498  003F8E  0E6E               	movlw	110
 24499  003F90  0100               	movlb	0	; () banked
 24500  003F92  19F4               	xorwf	_tempajt& (0+255),w,b
 24501  003F94  A4D8               	btfss	status,2,c
 24502  003F96  D01A               	goto	i2l1134
 24503                           
 24504                           ; BSR set to: 0
 24505  003F98  0E02               	movlw	2
 24506  003F9A  19F6               	xorwf	_fase& (0+255),w,b
 24507  003F9C  A4D8               	btfss	status,2,c
 24508  003F9E  D016               	goto	i2l1134
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;controle.h: 98: t_controle_fim_fases++;
 24512  003FA0  2A3A               	incf	_t_controle_fim_fases,f,c
 24513                           
 24514                           ; BSR set to: 0
 24515                           ;controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 24516  003FA2  5057               	movf	_t_fim_fase2,w,c
 24517  003FA4  5C3A               	subwf	_t_controle_fim_fases,w,c
 24518  003FA6  A0D8               	btfss	status,0,c
 24519  003FA8  D031               	goto	i2l1139
 24520                           
 24521                           ; BSR set to: 0
 24522  003FAA  5057               	movf	_t_fim_fase2,w,c
 24523  003FAC  B4D8               	btfsc	status,2,c
 24524  003FAE  D02E               	goto	i2l1139
 24525                           
 24526                           ; BSR set to: 0
 24527                           ;controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 24528  003FB0  0EF4               	movlw	low _tempajt
 24529  003FB2  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24530  003FB4  0E00               	movlw	high _tempajt
 24531  003FB6  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24532  003FB8  0E55               	movlw	85
 24533  003FBA  6E08               	movwf	i2setRangeValor@_min,c
 24534  003FBC  0E97               	movlw	151
 24535  003FBE  6E09               	movwf	i2setRangeValor@_max,c
 24536  003FC0  0E01               	movlw	1
 24537  003FC2  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24538  003FC4  0E2B               	movlw	43
 24539  003FC6  EC45  F028         	call	i2_setRangeValor
 24540  003FCA  D01E               	goto	i2l1137
 24541  003FCC                     i2l1134:
 24542  003FCC  0E85               	movlw	133
 24543  003FCE  0100               	movlb	0	; () banked
 24544  003FD0  19F4               	xorwf	_tempajt& (0+255),w,b
 24545  003FD2  A4D8               	btfss	status,2,c
 24546  003FD4  D019               	goto	i2l1137
 24547                           
 24548                           ; BSR set to: 0
 24549  003FD6  0E03               	movlw	3
 24550  003FD8  19F6               	xorwf	_fase& (0+255),w,b
 24551  003FDA  A4D8               	btfss	status,2,c
 24552  003FDC  D015               	goto	i2l1137
 24553                           
 24554                           ; BSR set to: 0
 24555                           ;controle.h: 104: t_controle_fim_fases++;
 24556  003FDE  2A3A               	incf	_t_controle_fim_fases,f,c
 24557                           
 24558                           ; BSR set to: 0
 24559                           ;controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 24560  003FE0  5056               	movf	_t_fim_fase3,w,c
 24561  003FE2  5C3A               	subwf	_t_controle_fim_fases,w,c
 24562  003FE4  A0D8               	btfss	status,0,c
 24563  003FE6  D012               	goto	i2l1139
 24564                           
 24565                           ; BSR set to: 0
 24566  003FE8  5056               	movf	_t_fim_fase3,w,c
 24567  003FEA  B4D8               	btfsc	status,2,c
 24568  003FEC  D00F               	goto	i2l1139
 24569                           
 24570                           ; BSR set to: 0
 24571                           ;controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 24572  003FEE  0EF4               	movlw	low _tempajt
 24573  003FF0  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24574  003FF2  0E00               	movlw	high _tempajt
 24575  003FF4  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24576  003FF6  0E55               	movlw	85
 24577  003FF8  6E08               	movwf	i2setRangeValor@_min,c
 24578  003FFA  0E97               	movlw	151
 24579  003FFC  6E09               	movwf	i2setRangeValor@_max,c
 24580  003FFE  0E01               	movlw	1
 24581  004000  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24582  004002  0E2B               	movlw	43
 24583  004004  EC45  F028         	call	i2_setRangeValor
 24584  004008                     i2l1137:
 24585                           
 24586                           ;controle.h: 110: t_controle_fim_fases = 0;
 24587  004008  0E00               	movlw	0
 24588  00400A  6E3A               	movwf	_t_controle_fim_fases,c
 24589  00400C                     i2l1139:
 24590                           
 24591                           ;controle.h: 111: }
 24592                           ;controle.h: 112: }
 24593                           ;controle.h: 114: if (hor > 23) {
 24594  00400C  0E17               	movlw	23
 24595  00400E  6446               	cpfsgt	_hor,c
 24596  004010  0012               	return	
 24597                           
 24598                           ;controle.h: 115: hor = 0;
 24599  004012  0E00               	movlw	0
 24600  004014  6E46               	movwf	_hor,c
 24601  004016  0012               	return	
 24602  004018                     __end_of_timer:
 24603                           	opt stack 0
 24604                           tosu	equ	0xFFF
 24605                           tosh	equ	0xFFE
 24606                           tosl	equ	0xFFD
 24607                           pclatu	equ	0xFFB
 24608                           pclath	equ	0xFFA
 24609                           tblptru	equ	0xFF8
 24610                           tblptrh	equ	0xFF7
 24611                           tblptrl	equ	0xFF6
 24612                           tablat	equ	0xFF5
 24613                           prodh	equ	0xFF4
 24614                           prodl	equ	0xFF3
 24615                           intcon	equ	0xFF2
 24616                           intcon2	equ	0xFF1
 24617                           intcon3	equ	0xFF0
 24618                           indf0	equ	0xFEF
 24619                           postinc0	equ	0xFEE
 24620                           fsr0h	equ	0xFEA
 24621                           fsr0l	equ	0xFE9
 24622                           wreg	equ	0xFE8
 24623                           indf1	equ	0xFE7
 24624                           postinc1	equ	0xFE6
 24625                           postdec1	equ	0xFE5
 24626                           plusw1	equ	0xFE3
 24627                           fsr1h	equ	0xFE2
 24628                           fsr1l	equ	0xFE1
 24629                           indf2	equ	0xFDF
 24630                           postinc2	equ	0xFDE
 24631                           postdec2	equ	0xFDD
 24632                           plusw2	equ	0xFDB
 24633                           fsr2h	equ	0xFDA
 24634                           fsr2l	equ	0xFD9
 24635                           status	equ	0xFD8
 24636                           
 24637 ;; *************** function i2_setRangeValor *****************
 24638 ;; Defined at:
 24639 ;;		line 76 in file "src/FuncoesControlador.h"
 24640 ;; Parameters:    Size  Location     Type
 24641 ;;  _acao           1    wreg     unsigned char 
 24642 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 24643 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 24644 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 24645 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 24646 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 24647 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 24648 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 24649 ;;		 -> clima(1), 
 24650 ;;  _min            1    7[COMRAM] unsigned char 
 24651 ;;  _max            1    8[COMRAM] unsigned char 
 24652 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 24653 ;; Auto vars:     Size  Location     Type
 24654 ;;  _acao           1   13[COMRAM] unsigned char 
 24655 ;;  setRangeValo    2   14[COMRAM] int 
 24656 ;; Return value:  Size  Location     Type
 24657 ;;                  1    wreg      void 
 24658 ;; Registers used:
 24659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24660 ;; Tracked objects:
 24661 ;;		On entry : 0/0
 24662 ;;		On exit  : 0/0
 24663 ;;		Unchanged: 0/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24665 ;;      Params:         5       0       0       0       0       0       0       0       0
 24666 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24667 ;;      Temps:          3       0       0       0       0       0       0       0       0
 24668 ;;      Totals:        11       0       0       0       0       0       0       0       0
 24669 ;;Total ram usage:       11 bytes
 24670 ;; Hardware stack levels used:    1
 24671 ;; Hardware stack levels required when called:    3
 24672 ;; This function calls:
 24673 ;;		i2_writeEEPROM_ext
 24674 ;; This function is called by:
 24675 ;;		_timer
 24676 ;; This function uses a non-reentrant model
 24677 ;;
 24678                           
 24679                           	psect	text63
 24680  00508A                     __ptext63:
 24681                           	opt stack 0
 24682  00508A                     i2_setRangeValor:
 24683                           	opt stack 20
 24684                           
 24685                           ;incstack = 0
 24686                           ;i2setRangeValor@_acao stored from wreg
 24687  00508A  6E0E               	movwf	i2setRangeValor@_acao,c
 24688                           
 24689                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 24690  00508C  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 24691  005090  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 24692  005094  50DF               	movf	indf2,w,c
 24693  005096  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24694  005098  500B               	movf	??i2_setRangeValor,w,c
 24695  00509A  6E0F               	movwf	i2setRangeValor@_aux,c
 24696  00509C  6A10               	clrf	i2setRangeValor@_aux+1,c
 24697                           
 24698                           ;FuncoesControlador.h: 78: switch (_acao) {
 24699  00509E  D02C               	goto	i2l938
 24700  0050A0                     
 24701                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 24702  0050A0  5009               	movf	i2setRangeValor@_max,w,c
 24703  0050A2  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24704  0050A4  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 24705  0050A6  500B               	movf	??i2_setRangeValor,w,c
 24706  0050A8  5C0F               	subwf	i2setRangeValor@_aux,w,c
 24707  0050AA  5010               	movf	i2setRangeValor@_aux+1,w,c
 24708  0050AC  0A80               	xorlw	128
 24709  0050AE  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 24710  0050B0  500C               	movf	??i2_setRangeValor+1,w,c
 24711  0050B2  0A80               	xorlw	128
 24712  0050B4  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 24713  0050B6  B0D8               	btfsc	status,0,c
 24714  0050B8  D003               	goto	i2l941
 24715  0050BA  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 24716  0050BC  2A10               	incf	i2setRangeValor@_aux+1,f,c
 24717  0050BE  D013               	goto	L30
 24718  0050C0                     i2l941:
 24719  0050C0  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 24720  0050C4  D017               	goto	L31
 24721  0050C6                     
 24722                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 24723  0050C6  5008               	movf	i2setRangeValor@_min,w,c
 24724  0050C8  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24725  0050CA  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 24726  0050CC  500F               	movf	i2setRangeValor@_aux,w,c
 24727  0050CE  5C0B               	subwf	??i2_setRangeValor,w,c
 24728  0050D0  500C               	movf	??i2_setRangeValor+1,w,c
 24729  0050D2  0A80               	xorlw	128
 24730  0050D4  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 24731  0050D6  5010               	movf	i2setRangeValor@_aux+1,w,c
 24732  0050D8  0A80               	xorlw	128
 24733  0050DA  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 24734  0050DC  B0D8               	btfsc	status,0,c
 24735  0050DE  D008               	goto	i2l947
 24736  0050E0  060F               	decf	i2setRangeValor@_aux,f,c
 24737  0050E2  A0D8               	btfss	status,0,c
 24738  0050E4  0610               	decf	i2setRangeValor@_aux+1,f,c
 24739  0050E6                     L30:
 24740  0050E6  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 24741  0050EA  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 24742  0050EE  D00B               	goto	i2l944
 24743  0050F0                     i2l947:
 24744  0050F0  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 24745  0050F4                     L31:
 24746  0050F4  6A10               	clrf	i2setRangeValor@_aux+1,c
 24747                           
 24748                           ;FuncoesControlador.h: 85: }
 24749                           
 24750                           ;FuncoesControlador.h: 84: break;
 24751  0050F6  D007               	goto	i2l944
 24752  0050F8                     i2l938:
 24753  0050F8  500E               	movf	i2setRangeValor@_acao,w,c
 24754                           
 24755                           ; Switch size 1, requested type "space"
 24756                           ; Number of cases is 2, Range of values is 43 to 45
 24757                           ; switch strategies available:
 24758                           ; Name         Instructions Cycles
 24759                           ; simple_byte            7     4 (average)
 24760                           ;	Chosen strategy is simple_byte
 24761  0050FA  0A2B               	xorlw	43	; case 43
 24762  0050FC  B4D8               	btfsc	status,2,c
 24763  0050FE  D7D0               	goto	i2l939
 24764  005100  0A06               	xorlw	6	; case 45
 24765  005102  B4D8               	btfsc	status,2,c
 24766  005104  D7E0               	goto	i2l945
 24767  005106                     i2l944:
 24768                           
 24769                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 24770  005106  500A               	movf	i2setRangeValor@end_eeprom,w,c
 24771  005108  B4D8               	btfsc	status,2,c
 24772  00510A  D005               	goto	i2l950
 24773                           
 24774                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 24775  00510C  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 24776  005110  500A               	movf	i2setRangeValor@end_eeprom,w,c
 24777  005112  ECEF  F02B         	call	i2_writeEEPROM_ext
 24778  005116                     i2l950:
 24779                           
 24780                           ;FuncoesControlador.h: 88: }
 24781                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 24782  005116  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 24783  00511A  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 24784  00511E  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 24785  005122  0012               	return		;funcret
 24786  005124                     __end_ofi2_setRangeValor:
 24787                           	opt stack 0
 24788                           tosu	equ	0xFFF
 24789                           tosh	equ	0xFFE
 24790                           tosl	equ	0xFFD
 24791                           pclatu	equ	0xFFB
 24792                           pclath	equ	0xFFA
 24793                           tblptru	equ	0xFF8
 24794                           tblptrh	equ	0xFF7
 24795                           tblptrl	equ	0xFF6
 24796                           tablat	equ	0xFF5
 24797                           prodh	equ	0xFF4
 24798                           prodl	equ	0xFF3
 24799                           intcon	equ	0xFF2
 24800                           intcon2	equ	0xFF1
 24801                           intcon3	equ	0xFF0
 24802                           indf0	equ	0xFEF
 24803                           postinc0	equ	0xFEE
 24804                           fsr0h	equ	0xFEA
 24805                           fsr0l	equ	0xFE9
 24806                           wreg	equ	0xFE8
 24807                           indf1	equ	0xFE7
 24808                           postinc1	equ	0xFE6
 24809                           postdec1	equ	0xFE5
 24810                           plusw1	equ	0xFE3
 24811                           fsr1h	equ	0xFE2
 24812                           fsr1l	equ	0xFE1
 24813                           indf2	equ	0xFDF
 24814                           postinc2	equ	0xFDE
 24815                           postdec2	equ	0xFDD
 24816                           plusw2	equ	0xFDB
 24817                           fsr2h	equ	0xFDA
 24818                           fsr2l	equ	0xFD9
 24819                           status	equ	0xFD8
 24820                           
 24821 ;; *************** function i2_writeEEPROM_ext *****************
 24822 ;; Defined at:
 24823 ;;		line 14 in file "src/Eeprom_ext.h"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;  adress          1    wreg     unsigned char 
 24826 ;;  data            1    3[COMRAM] unsigned char 
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;  adress          1    4[COMRAM] unsigned char 
 24829 ;; Return value:  Size  Location     Type
 24830 ;;                  1    wreg      void 
 24831 ;; Registers used:
 24832 ;;		wreg, status,2, status,0, cstack
 24833 ;; Tracked objects:
 24834 ;;		On entry : 0/0
 24835 ;;		On exit  : 0/0
 24836 ;;		Unchanged: 0/0
 24837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24838 ;;      Params:         1       0       0       0       0       0       0       0       0
 24839 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24841 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24842 ;;Total ram usage:        2 bytes
 24843 ;; Hardware stack levels used:    1
 24844 ;; Hardware stack levels required when called:    2
 24845 ;; This function calls:
 24846 ;;		i2_I2C_Start
 24847 ;;		i2_I2C_Stop
 24848 ;;		i2_I2C_Write
 24849 ;;		i2_delay
 24850 ;; This function is called by:
 24851 ;;		i2_setRangeValor
 24852 ;; This function uses a non-reentrant model
 24853 ;;
 24854                           
 24855                           	psect	text64
 24856  0057DE                     __ptext64:
 24857                           	opt stack 0
 24858  0057DE                     i2_writeEEPROM_ext:
 24859                           	opt stack 20
 24860                           
 24861                           ;incstack = 0
 24862                           ;i2writeEEPROM_ext@adress stored from wreg
 24863  0057DE  6E05               	movwf	i2writeEEPROM_ext@adress,c
 24864                           
 24865                           ;Eeprom_ext.h: 16: I2C_Start();
 24866  0057E0  ECB9  F02D         	call	i2_I2C_Start	;wreg free
 24867                           
 24868                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 24869  0057E4  0E00               	movlw	0
 24870  0057E6  6E03               	movwf	i2I2C_Write@d+1,c
 24871  0057E8  0EA0               	movlw	160
 24872  0057EA  6E02               	movwf	i2I2C_Write@d,c
 24873  0057EC  ECA4  F02D         	call	i2_I2C_Write	;wreg free
 24874                           
 24875                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 24876  0057F0  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 24877  0057F4  6A03               	clrf	i2I2C_Write@d+1,c
 24878  0057F6  ECA4  F02D         	call	i2_I2C_Write	;wreg free
 24879                           
 24880                           ;Eeprom_ext.h: 20: I2C_Write(data);
 24881  0057FA  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 24882  0057FE  6A03               	clrf	i2I2C_Write@d+1,c
 24883  005800  ECA4  F02D         	call	i2_I2C_Write	;wreg free
 24884                           
 24885                           ;Eeprom_ext.h: 21: I2C_Stop();
 24886  005804  ECB5  F02D         	call	i2_I2C_Stop	;wreg free
 24887                           
 24888                           ;Eeprom_ext.h: 22: delay(105);
 24889  005808  0E00               	movlw	0
 24890  00580A  6E02               	movwf	i2delay@x+1,c
 24891  00580C  0E69               	movlw	105
 24892  00580E  6E01               	movwf	i2delay@x,c
 24893  005810  EC2A  F02D         	call	i2_delay	;wreg free
 24894  005814  0012               	return		;funcret
 24895  005816                     __end_ofi2_writeEEPROM_ext:
 24896                           	opt stack 0
 24897                           tosu	equ	0xFFF
 24898                           tosh	equ	0xFFE
 24899                           tosl	equ	0xFFD
 24900                           pclatu	equ	0xFFB
 24901                           pclath	equ	0xFFA
 24902                           tblptru	equ	0xFF8
 24903                           tblptrh	equ	0xFF7
 24904                           tblptrl	equ	0xFF6
 24905                           tablat	equ	0xFF5
 24906                           prodh	equ	0xFF4
 24907                           prodl	equ	0xFF3
 24908                           intcon	equ	0xFF2
 24909                           intcon2	equ	0xFF1
 24910                           intcon3	equ	0xFF0
 24911                           indf0	equ	0xFEF
 24912                           postinc0	equ	0xFEE
 24913                           fsr0h	equ	0xFEA
 24914                           fsr0l	equ	0xFE9
 24915                           wreg	equ	0xFE8
 24916                           indf1	equ	0xFE7
 24917                           postinc1	equ	0xFE6
 24918                           postdec1	equ	0xFE5
 24919                           plusw1	equ	0xFE3
 24920                           fsr1h	equ	0xFE2
 24921                           fsr1l	equ	0xFE1
 24922                           indf2	equ	0xFDF
 24923                           postinc2	equ	0xFDE
 24924                           postdec2	equ	0xFDD
 24925                           plusw2	equ	0xFDB
 24926                           fsr2h	equ	0xFDA
 24927                           fsr2l	equ	0xFD9
 24928                           status	equ	0xFD8
 24929                           
 24930 ;; *************** function i2_delay *****************
 24931 ;; Defined at:
 24932 ;;		line 18 in file "src/function.c"
 24933 ;; Parameters:    Size  Location     Type
 24934 ;;  x               2    0[COMRAM] int 
 24935 ;; Auto vars:     Size  Location     Type
 24936 ;;		None
 24937 ;; Return value:  Size  Location     Type
 24938 ;;                  1    wreg      void 
 24939 ;; Registers used:
 24940 ;;		wreg, status,2, status,0
 24941 ;; Tracked objects:
 24942 ;;		On entry : 0/0
 24943 ;;		On exit  : 0/0
 24944 ;;		Unchanged: 0/0
 24945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24946 ;;      Params:         2       0       0       0       0       0       0       0       0
 24947 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24948 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24949 ;;      Totals:         3       0       0       0       0       0       0       0       0
 24950 ;;Total ram usage:        3 bytes
 24951 ;; Hardware stack levels used:    1
 24952 ;; This function calls:
 24953 ;;		Nothing
 24954 ;; This function is called by:
 24955 ;;		i2_writeEEPROM_ext
 24956 ;; This function uses a non-reentrant model
 24957 ;;
 24958                           
 24959                           	psect	text65
 24960  005A54                     __ptext65:
 24961                           	opt stack 0
 24962  005A54                     i2_delay:
 24963                           	opt stack 21
 24964                           
 24965                           ;function.c: 19: while (x--) {
 24966                           
 24967                           ;incstack = 0
 24968  005A54  D008               	goto	i2l1472
 24969  005A56                     i2l6507:
 24970                           
 24971                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 24972  005A56  0E03               	movlw	3
 24973  005A58  6E03               	movwf	??i2_delay& (0+255),c
 24974  005A5A  0E98               	movlw	152
 24975  005A5C                     i2u1545_47:
 24976  005A5C  2EE8               	decfsz	wreg,f,c
 24977  005A5E  D7FE               	bra	i2u1545_47
 24978  005A60  2E03               	decfsz	??i2_delay& (0+255),f,c
 24979  005A62  D7FC               	bra	i2u1545_47
 24980  005A64  0004               	clrwdt		;# 
 24981  005A66                     i2l1472:
 24982  005A66  0601               	decf	i2delay@x,f,c
 24983  005A68  A0D8               	btfss	status,0,c
 24984  005A6A  0602               	decf	i2delay@x+1,f,c
 24985  005A6C  2801               	incf	i2delay@x,w,c
 24986  005A6E  E1F3               	bnz	i2l6507
 24987  005A70  2802               	incf	i2delay@x+1,w,c
 24988  005A72  B4D8               	btfsc	status,2,c
 24989  005A74  0012               	return	
 24990  005A76  D7EF               	goto	i2l1473
 24991  005A78                     __end_ofi2_delay:
 24992                           	opt stack 0
 24993                           tosu	equ	0xFFF
 24994                           tosh	equ	0xFFE
 24995                           tosl	equ	0xFFD
 24996                           pclatu	equ	0xFFB
 24997                           pclath	equ	0xFFA
 24998                           tblptru	equ	0xFF8
 24999                           tblptrh	equ	0xFF7
 25000                           tblptrl	equ	0xFF6
 25001                           tablat	equ	0xFF5
 25002                           prodh	equ	0xFF4
 25003                           prodl	equ	0xFF3
 25004                           intcon	equ	0xFF2
 25005                           intcon2	equ	0xFF1
 25006                           intcon3	equ	0xFF0
 25007                           indf0	equ	0xFEF
 25008                           postinc0	equ	0xFEE
 25009                           fsr0h	equ	0xFEA
 25010                           fsr0l	equ	0xFE9
 25011                           wreg	equ	0xFE8
 25012                           indf1	equ	0xFE7
 25013                           postinc1	equ	0xFE6
 25014                           postdec1	equ	0xFE5
 25015                           plusw1	equ	0xFE3
 25016                           fsr1h	equ	0xFE2
 25017                           fsr1l	equ	0xFE1
 25018                           indf2	equ	0xFDF
 25019                           postinc2	equ	0xFDE
 25020                           postdec2	equ	0xFDD
 25021                           plusw2	equ	0xFDB
 25022                           fsr2h	equ	0xFDA
 25023                           fsr2l	equ	0xFD9
 25024                           status	equ	0xFD8
 25025                           
 25026 ;; *************** function _receiveByteSerial *****************
 25027 ;; Defined at:
 25028 ;;		line 17 in file "src/serial.c"
 25029 ;; Parameters:    Size  Location     Type
 25030 ;;  byte            1    wreg     unsigned char 
 25031 ;; Auto vars:     Size  Location     Type
 25032 ;;  byte            1    8[COMRAM] unsigned char 
 25033 ;; Return value:  Size  Location     Type
 25034 ;;                  1    wreg      void 
 25035 ;; Registers used:
 25036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25037 ;; Tracked objects:
 25038 ;;		On entry : 0/0
 25039 ;;		On exit  : 0/0
 25040 ;;		Unchanged: 0/0
 25041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25042 ;;      Params:         0       0       0       0       0       0       0       0       0
 25043 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25044 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25045 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25046 ;;Total ram usage:        3 bytes
 25047 ;; Hardware stack levels used:    1
 25048 ;; Hardware stack levels required when called:    1
 25049 ;; This function calls:
 25050 ;;		i2_strlen
 25051 ;; This function is called by:
 25052 ;;		_TIMER0
 25053 ;; This function uses a non-reentrant model
 25054 ;;
 25055                           
 25056                           	psect	text66
 25057  00549A                     __ptext66:
 25058                           	opt stack 0
 25059  00549A                     _receiveByteSerial:
 25060                           	opt stack 23
 25061                           
 25062                           ;incstack = 0
 25063                           ;receiveByteSerial@byte stored from wreg
 25064  00549A  6E09               	movwf	receiveByteSerial@byte,c
 25065                           
 25066                           ;serial.c: 18: if (_BF_enable_receive) {
 25067  00549C  5041               	movf	__BF_enable_receive,w,c
 25068  00549E  B4D8               	btfsc	status,2,c
 25069  0054A0  D011               	goto	i2l1602
 25070                           
 25071                           ;serial.c: 19: bufferSerial[_BF_current++] = byte;
 25072  0054A2  503F               	movf	__BF_current,w,c
 25073  0054A4  0D01               	mullw	1
 25074  0054A6  0E55               	movlw	low _bufferSerial
 25075  0054A8  24F3               	addwf	prodl,w,c
 25076  0054AA  6ED9               	movwf	fsr2l,c
 25077  0054AC  0E02               	movlw	high _bufferSerial
 25078  0054AE  20F4               	addwfc	prodh,w,c
 25079  0054B0  6EDA               	movwf	fsr2h,c
 25080  0054B2  C009  FFDF         	movff	receiveByteSerial@byte,indf2
 25081  0054B6  2A3F               	incf	__BF_current,f,c
 25082                           
 25083                           ;serial.c: 20: if (_BF_current >= 100) {
 25084  0054B8  0E63               	movlw	99
 25085  0054BA  643F               	cpfsgt	__BF_current,c
 25086  0054BC  0012               	return	
 25087                           
 25088                           ;serial.c: 21: _BF_current = 0;
 25089  0054BE  0E00               	movlw	0
 25090  0054C0  6E3F               	movwf	__BF_current,c
 25091                           
 25092                           ;serial.c: 22: }
 25093                           ;serial.c: 23: } else if (_BF_start[_BF_i_count] == byte) {
 25094  0054C2  0012               	return	
 25095  0054C4                     i2l1602:
 25096  0054C4  5040               	movf	__BF_i_count,w,c
 25097  0054C6  0D01               	mullw	1
 25098  0054C8  0ED8               	movlw	low __BF_start
 25099  0054CA  24F3               	addwf	prodl,w,c
 25100  0054CC  6ED9               	movwf	fsr2l,c
 25101  0054CE  0E01               	movlw	high __BF_start
 25102  0054D0  20F4               	addwfc	prodh,w,c
 25103  0054D2  6EDA               	movwf	fsr2h,c
 25104  0054D4  5009               	movf	receiveByteSerial@byte,w,c
 25105  0054D6  18DE               	xorwf	postinc2,w,c
 25106  0054D8  A4D8               	btfss	status,2,c
 25107  0054DA  D013               	goto	i2l1605
 25108                           
 25109                           ;serial.c: 24: _BF_i_count++;
 25110  0054DC  2A40               	incf	__BF_i_count,f,c
 25111                           
 25112                           ;serial.c: 25: if(_BF_i_count >= strlen(_BF_start)){
 25113  0054DE  0ED8               	movlw	low __BF_start
 25114  0054E0  6E01               	movwf	i2strlen@s,c
 25115  0054E2  0E01               	movlw	high __BF_start
 25116  0054E4  6E02               	movwf	i2strlen@s+1,c
 25117  0054E6  EC02  F02B         	call	i2_strlen	;wreg free
 25118  0054EA  5040               	movf	__BF_i_count,w,c
 25119  0054EC  6E07               	movwf	??_receiveByteSerial& (0+255),c
 25120  0054EE  6A08               	clrf	(??_receiveByteSerial+1)& (0+255),c
 25121  0054F0  5001               	movf	?i2_strlen,w,c
 25122  0054F2  5C07               	subwf	??_receiveByteSerial,w,c
 25123  0054F4  5002               	movf	?i2_strlen+1,w,c
 25124  0054F6  5808               	subwfb	??_receiveByteSerial+1,w,c
 25125  0054F8  A0D8               	btfss	status,0,c
 25126  0054FA  0012               	return	
 25127                           
 25128                           ;serial.c: 26: _BF_enable_receive = 1;
 25129  0054FC  0E01               	movlw	1
 25130  0054FE  6E41               	movwf	__BF_enable_receive,c
 25131                           
 25132                           ;serial.c: 27: }
 25133                           ;serial.c: 28: } else {
 25134  005500  0012               	return	
 25135  005502                     i2l1605:
 25136                           
 25137                           ;serial.c: 29: _BF_i_count = 0;
 25138  005502  0E00               	movlw	0
 25139  005504  6E40               	movwf	__BF_i_count,c
 25140  005506  0012               	return	
 25141  005508                     __end_of_receiveByteSerial:
 25142                           	opt stack 0
 25143                           tosu	equ	0xFFF
 25144                           tosh	equ	0xFFE
 25145                           tosl	equ	0xFFD
 25146                           pclatu	equ	0xFFB
 25147                           pclath	equ	0xFFA
 25148                           tblptru	equ	0xFF8
 25149                           tblptrh	equ	0xFF7
 25150                           tblptrl	equ	0xFF6
 25151                           tablat	equ	0xFF5
 25152                           prodh	equ	0xFF4
 25153                           prodl	equ	0xFF3
 25154                           intcon	equ	0xFF2
 25155                           intcon2	equ	0xFF1
 25156                           intcon3	equ	0xFF0
 25157                           indf0	equ	0xFEF
 25158                           postinc0	equ	0xFEE
 25159                           fsr0h	equ	0xFEA
 25160                           fsr0l	equ	0xFE9
 25161                           wreg	equ	0xFE8
 25162                           indf1	equ	0xFE7
 25163                           postinc1	equ	0xFE6
 25164                           postdec1	equ	0xFE5
 25165                           plusw1	equ	0xFE3
 25166                           fsr1h	equ	0xFE2
 25167                           fsr1l	equ	0xFE1
 25168                           indf2	equ	0xFDF
 25169                           postinc2	equ	0xFDE
 25170                           postdec2	equ	0xFDD
 25171                           plusw2	equ	0xFDB
 25172                           fsr2h	equ	0xFDA
 25173                           fsr2l	equ	0xFD9
 25174                           status	equ	0xFD8
 25175                           
 25176 ;; *************** function i2_strlen *****************
 25177 ;; Defined at:
 25178 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;  s               2    0[COMRAM] PTR const unsigned char 
 25181 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), 
 25182 ;;		 -> STR_74(4), STR_73(7), STR_72(3), STR_70(4), 
 25183 ;;		 -> STR_69(5), enviaDadosWifi@AUX(15), STR_65(4), STR_64(2), 
 25184 ;;		 -> STR_62(4), STR_61(3), STR_59(4), STR_58(2), 
 25185 ;;		 -> STR_57(2), STR_55(4), STR_53(4), STR_52(5), 
 25186 ;;		 -> STR_51(3), STR_49(4), STR_48(3), STR_46(4), 
 25187 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 25188 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 25189 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 25190 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 25191 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 25192 ;; Auto vars:     Size  Location     Type
 25193 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 25194 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_76(3), 
 25195 ;;		 -> STR_74(4), STR_73(7), STR_72(3), STR_70(4), 
 25196 ;;		 -> STR_69(5), enviaDadosWifi@AUX(15), STR_65(4), STR_64(2), 
 25197 ;;		 -> STR_62(4), STR_61(3), STR_59(4), STR_58(2), 
 25198 ;;		 -> STR_57(2), STR_55(4), STR_53(4), STR_52(5), 
 25199 ;;		 -> STR_51(3), STR_49(4), STR_48(3), STR_46(4), 
 25200 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 25201 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 25202 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 25203 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 25204 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  2    0[COMRAM] unsigned int 
 25207 ;; Registers used:
 25208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25214 ;;      Params:         2       0       0       0       0       0       0       0       0
 25215 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25216 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25217 ;;      Totals:         6       0       0       0       0       0       0       0       0
 25218 ;;Total ram usage:        6 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; This function calls:
 25221 ;;		Nothing
 25222 ;; This function is called by:
 25223 ;;		_receiveByteSerial
 25224 ;; This function uses a non-reentrant model
 25225 ;;
 25226                           
 25227                           	psect	text67
 25228  005604                     __ptext67:
 25229                           	opt stack 0
 25230  005604                     i2_strlen:
 25231                           	opt stack 23
 25232                           
 25233                           ;incstack = 0
 25234  005604  C001  F005         	movff	i2strlen@s,i2strlen@cp
 25235  005608  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 25236  00560C  D002               	goto	i2l2265
 25237  00560E  4A05               	infsnz	i2strlen@cp,f,c
 25238  005610  2A06               	incf	i2strlen@cp+1,f,c
 25239  005612                     i2l2265:
 25240  005612  C005  FFF6         	movff	i2strlen@cp,tblptrl
 25241  005616  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 25242  00561A  6AF8               	clrf	tblptru,c
 25243  00561C  0E07               	movlw	(high __ramtop+-1)
 25244  00561E  64F7               	cpfsgt	tblptrh,c
 25245  005620  D003               	bra	i2u1241_47
 25246  005622  0008               	tblrd		*
 25247  005624  50F5               	movf	tablat,w,c
 25248  005626  D005               	bra	i2u1241_40
 25249  005628                     i2u1241_47:
 25250  005628  CFF6 FFE9          	movff	tblptrl,fsr0l
 25251  00562C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25252  005630  50EF               	movf	indf0,w,c
 25253  005632                     i2u1241_40:
 25254  005632  0900               	iorlw	0
 25255  005634  A4D8               	btfss	status,2,c
 25256  005636  D7EB               	goto	i2l2266
 25257  005638  C001  F003         	movff	i2strlen@s,??i2_strlen
 25258  00563C  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 25259  005640  1E03               	comf	??i2_strlen,f,c
 25260  005642  1E04               	comf	??i2_strlen+1,f,c
 25261  005644  4A03               	infsnz	??i2_strlen,f,c
 25262  005646  2A04               	incf	??i2_strlen+1,f,c
 25263  005648  5005               	movf	i2strlen@cp,w,c
 25264  00564A  2403               	addwf	??i2_strlen,w,c
 25265  00564C  6E01               	movwf	?i2_strlen,c
 25266  00564E  5006               	movf	i2strlen@cp+1,w,c
 25267  005650  2004               	addwfc	??i2_strlen+1,w,c
 25268  005652  6E02               	movwf	?i2_strlen+1,c
 25269  005654  0012               	return	
 25270  005656                     __end_ofi2_strlen:
 25271                           	opt stack 0
 25272                           tosu	equ	0xFFF
 25273                           tosh	equ	0xFFE
 25274                           tosl	equ	0xFFD
 25275                           pclatu	equ	0xFFB
 25276                           pclath	equ	0xFFA
 25277                           tblptru	equ	0xFF8
 25278                           tblptrh	equ	0xFF7
 25279                           tblptrl	equ	0xFF6
 25280                           tablat	equ	0xFF5
 25281                           prodh	equ	0xFF4
 25282                           prodl	equ	0xFF3
 25283                           intcon	equ	0xFF2
 25284                           intcon2	equ	0xFF1
 25285                           intcon3	equ	0xFF0
 25286                           indf0	equ	0xFEF
 25287                           postinc0	equ	0xFEE
 25288                           fsr0h	equ	0xFEA
 25289                           fsr0l	equ	0xFE9
 25290                           wreg	equ	0xFE8
 25291                           indf1	equ	0xFE7
 25292                           postinc1	equ	0xFE6
 25293                           postdec1	equ	0xFE5
 25294                           plusw1	equ	0xFE3
 25295                           fsr1h	equ	0xFE2
 25296                           fsr1l	equ	0xFE1
 25297                           indf2	equ	0xFDF
 25298                           postinc2	equ	0xFDE
 25299                           postdec2	equ	0xFDD
 25300                           plusw2	equ	0xFDB
 25301                           fsr2h	equ	0xFDA
 25302                           fsr2l	equ	0xFD9
 25303                           status	equ	0xFD8
 25304                           
 25305 ;; *************** function _readButtons *****************
 25306 ;; Defined at:
 25307 ;;		line 19 in file "src/Teclado.h"
 25308 ;; Parameters:    Size  Location     Type
 25309 ;;		None
 25310 ;; Auto vars:     Size  Location     Type
 25311 ;;		None
 25312 ;; Return value:  Size  Location     Type
 25313 ;;                  1    wreg      void 
 25314 ;; Registers used:
 25315 ;;		wreg, status,2, status,0, cstack
 25316 ;; Tracked objects:
 25317 ;;		On entry : 0/0
 25318 ;;		On exit  : 0/0
 25319 ;;		Unchanged: 0/0
 25320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25321 ;;      Params:         0       0       0       0       0       0       0       0       0
 25322 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25323 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25324 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25325 ;;Total ram usage:        0 bytes
 25326 ;; Hardware stack levels used:    1
 25327 ;; Hardware stack levels required when called:    2
 25328 ;; This function calls:
 25329 ;;		i2_I2C_Read
 25330 ;;		i2_I2C_Start
 25331 ;;		i2_I2C_Stop
 25332 ;;		i2_I2C_Write
 25333 ;; This function is called by:
 25334 ;;		_TIMER0
 25335 ;; This function uses a non-reentrant model
 25336 ;;
 25337                           
 25338                           	psect	text68
 25339  0059E0                     __ptext68:
 25340                           	opt stack 0
 25341  0059E0                     _readButtons:
 25342                           	opt stack 22
 25343                           
 25344                           ;Teclado.h: 20: I2C_Start();
 25345                           
 25346                           ;incstack = 0
 25347  0059E0  ECB9  F02D         	call	i2_I2C_Start	;wreg free
 25348                           
 25349                           ;Teclado.h: 21: I2C_Write(0x4F);
 25350  0059E4  0E00               	movlw	0
 25351  0059E6  6E03               	movwf	i2I2C_Write@d+1,c
 25352  0059E8  0E4F               	movlw	79
 25353  0059EA  6E02               	movwf	i2I2C_Write@d,c
 25354  0059EC  ECA4  F02D         	call	i2_I2C_Write	;wreg free
 25355                           
 25356                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 25357  0059F0  0E00               	movlw	0
 25358  0059F2  6E03               	movwf	i2I2C_Read@a+1,c
 25359  0059F4  0E00               	movlw	0
 25360  0059F6  6E02               	movwf	i2I2C_Read@a,c
 25361  0059F8  EC9C  F02C         	call	i2_I2C_Read	;wreg free
 25362  0059FC  5002               	movf	?i2_I2C_Read,w,c
 25363  0059FE  0AFF               	xorlw	255
 25364  005A00  6E42               	movwf	_bt_flag,c
 25365                           
 25366                           ;Teclado.h: 23: I2C_Stop();
 25367  005A02  ECB5  F02D         	call	i2_I2C_Stop	;wreg free
 25368  005A06  0012               	return		;funcret
 25369  005A08                     __end_of_readButtons:
 25370                           	opt stack 0
 25371                           tosu	equ	0xFFF
 25372                           tosh	equ	0xFFE
 25373                           tosl	equ	0xFFD
 25374                           pclatu	equ	0xFFB
 25375                           pclath	equ	0xFFA
 25376                           tblptru	equ	0xFF8
 25377                           tblptrh	equ	0xFF7
 25378                           tblptrl	equ	0xFF6
 25379                           tablat	equ	0xFF5
 25380                           prodh	equ	0xFF4
 25381                           prodl	equ	0xFF3
 25382                           intcon	equ	0xFF2
 25383                           intcon2	equ	0xFF1
 25384                           intcon3	equ	0xFF0
 25385                           indf0	equ	0xFEF
 25386                           postinc0	equ	0xFEE
 25387                           fsr0h	equ	0xFEA
 25388                           fsr0l	equ	0xFE9
 25389                           wreg	equ	0xFE8
 25390                           indf1	equ	0xFE7
 25391                           postinc1	equ	0xFE6
 25392                           postdec1	equ	0xFE5
 25393                           plusw1	equ	0xFE3
 25394                           fsr1h	equ	0xFE2
 25395                           fsr1l	equ	0xFE1
 25396                           indf2	equ	0xFDF
 25397                           postinc2	equ	0xFDE
 25398                           postdec2	equ	0xFDD
 25399                           plusw2	equ	0xFDB
 25400                           fsr2h	equ	0xFDA
 25401                           fsr2l	equ	0xFD9
 25402                           status	equ	0xFD8
 25403                           
 25404 ;; *************** function i2_I2C_Write *****************
 25405 ;; Defined at:
 25406 ;;		line 41 in file "src/I2C.c"
 25407 ;; Parameters:    Size  Location     Type
 25408 ;;  d               2    1[COMRAM] unsigned int 
 25409 ;; Auto vars:     Size  Location     Type
 25410 ;;		None
 25411 ;; Return value:  Size  Location     Type
 25412 ;;                  1    wreg      void 
 25413 ;; Registers used:
 25414 ;;		wreg, status,2, status,0, cstack
 25415 ;; Tracked objects:
 25416 ;;		On entry : 0/0
 25417 ;;		On exit  : 0/0
 25418 ;;		Unchanged: 0/0
 25419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25420 ;;      Params:         2       0       0       0       0       0       0       0       0
 25421 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25422 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25423 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25424 ;;Total ram usage:        2 bytes
 25425 ;; Hardware stack levels used:    1
 25426 ;; Hardware stack levels required when called:    1
 25427 ;; This function calls:
 25428 ;;		i2_I2C_Wait
 25429 ;; This function is called by:
 25430 ;;		_readButtons
 25431 ;;		i2_writeEEPROM_ext
 25432 ;; This function uses a non-reentrant model
 25433 ;;
 25434                           
 25435                           	psect	text69
 25436  005B48                     __ptext69:
 25437                           	opt stack 0
 25438  005B48                     i2_I2C_Write:
 25439                           	opt stack 20
 25440                           
 25441                           ;I2C.c: 42: I2C_Wait();
 25442                           
 25443                           ;incstack = 0
 25444  005B48  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25445                           
 25446                           ;I2C.c: 43: SSPBUF = d;
 25447  005B4C  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 25448  005B50  0012               	return		;funcret
 25449  005B52                     __end_ofi2_I2C_Write:
 25450                           	opt stack 0
 25451                           tosu	equ	0xFFF
 25452                           tosh	equ	0xFFE
 25453                           tosl	equ	0xFFD
 25454                           pclatu	equ	0xFFB
 25455                           pclath	equ	0xFFA
 25456                           tblptru	equ	0xFF8
 25457                           tblptrh	equ	0xFF7
 25458                           tblptrl	equ	0xFF6
 25459                           tablat	equ	0xFF5
 25460                           prodh	equ	0xFF4
 25461                           prodl	equ	0xFF3
 25462                           intcon	equ	0xFF2
 25463                           intcon2	equ	0xFF1
 25464                           intcon3	equ	0xFF0
 25465                           indf0	equ	0xFEF
 25466                           postinc0	equ	0xFEE
 25467                           fsr0h	equ	0xFEA
 25468                           fsr0l	equ	0xFE9
 25469                           wreg	equ	0xFE8
 25470                           indf1	equ	0xFE7
 25471                           postinc1	equ	0xFE6
 25472                           postdec1	equ	0xFE5
 25473                           plusw1	equ	0xFE3
 25474                           fsr1h	equ	0xFE2
 25475                           fsr1l	equ	0xFE1
 25476                           indf2	equ	0xFDF
 25477                           postinc2	equ	0xFDE
 25478                           postdec2	equ	0xFDD
 25479                           plusw2	equ	0xFDB
 25480                           fsr2h	equ	0xFDA
 25481                           fsr2l	equ	0xFD9
 25482                           status	equ	0xFD8
 25483                           
 25484 ;; *************** function i2_I2C_Stop *****************
 25485 ;; Defined at:
 25486 ;;		line 35 in file "src/I2C.c"
 25487 ;; Parameters:    Size  Location     Type
 25488 ;;		None
 25489 ;; Auto vars:     Size  Location     Type
 25490 ;;		None
 25491 ;; Return value:  Size  Location     Type
 25492 ;;                  1    wreg      void 
 25493 ;; Registers used:
 25494 ;;		wreg, status,2, status,0, cstack
 25495 ;; Tracked objects:
 25496 ;;		On entry : 0/0
 25497 ;;		On exit  : 0/0
 25498 ;;		Unchanged: 0/0
 25499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25500 ;;      Params:         0       0       0       0       0       0       0       0       0
 25501 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25503 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25504 ;;Total ram usage:        0 bytes
 25505 ;; Hardware stack levels used:    1
 25506 ;; Hardware stack levels required when called:    1
 25507 ;; This function calls:
 25508 ;;		i2_I2C_Wait
 25509 ;; This function is called by:
 25510 ;;		_readButtons
 25511 ;;		i2_writeEEPROM_ext
 25512 ;; This function uses a non-reentrant model
 25513 ;;
 25514                           
 25515                           	psect	text70
 25516  005B6A                     __ptext70:
 25517                           	opt stack 0
 25518  005B6A                     i2_I2C_Stop:
 25519                           	opt stack 20
 25520                           
 25521                           ;I2C.c: 36: I2C_Wait();
 25522                           
 25523                           ;incstack = 0
 25524  005B6A  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25525                           
 25526                           ;I2C.c: 37: PEN = 1;
 25527  005B6E  84C5               	bsf	4037,2,c	;volatile
 25528  005B70  0012               	return		;funcret
 25529  005B72                     __end_ofi2_I2C_Stop:
 25530                           	opt stack 0
 25531                           tosu	equ	0xFFF
 25532                           tosh	equ	0xFFE
 25533                           tosl	equ	0xFFD
 25534                           pclatu	equ	0xFFB
 25535                           pclath	equ	0xFFA
 25536                           tblptru	equ	0xFF8
 25537                           tblptrh	equ	0xFF7
 25538                           tblptrl	equ	0xFF6
 25539                           tablat	equ	0xFF5
 25540                           prodh	equ	0xFF4
 25541                           prodl	equ	0xFF3
 25542                           intcon	equ	0xFF2
 25543                           intcon2	equ	0xFF1
 25544                           intcon3	equ	0xFF0
 25545                           indf0	equ	0xFEF
 25546                           postinc0	equ	0xFEE
 25547                           fsr0h	equ	0xFEA
 25548                           fsr0l	equ	0xFE9
 25549                           wreg	equ	0xFE8
 25550                           indf1	equ	0xFE7
 25551                           postinc1	equ	0xFE6
 25552                           postdec1	equ	0xFE5
 25553                           plusw1	equ	0xFE3
 25554                           fsr1h	equ	0xFE2
 25555                           fsr1l	equ	0xFE1
 25556                           indf2	equ	0xFDF
 25557                           postinc2	equ	0xFDE
 25558                           postdec2	equ	0xFDD
 25559                           plusw2	equ	0xFDB
 25560                           fsr2h	equ	0xFDA
 25561                           fsr2l	equ	0xFD9
 25562                           status	equ	0xFD8
 25563                           
 25564 ;; *************** function i2_I2C_Start *****************
 25565 ;; Defined at:
 25566 ;;		line 25 in file "src/I2C.c"
 25567 ;; Parameters:    Size  Location     Type
 25568 ;;		None
 25569 ;; Auto vars:     Size  Location     Type
 25570 ;;		None
 25571 ;; Return value:  Size  Location     Type
 25572 ;;                  1    wreg      void 
 25573 ;; Registers used:
 25574 ;;		wreg, status,2, status,0, cstack
 25575 ;; Tracked objects:
 25576 ;;		On entry : 0/0
 25577 ;;		On exit  : 0/0
 25578 ;;		Unchanged: 0/0
 25579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25580 ;;      Params:         0       0       0       0       0       0       0       0       0
 25581 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25582 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25583 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25584 ;;Total ram usage:        0 bytes
 25585 ;; Hardware stack levels used:    1
 25586 ;; Hardware stack levels required when called:    1
 25587 ;; This function calls:
 25588 ;;		i2_I2C_Wait
 25589 ;; This function is called by:
 25590 ;;		_readButtons
 25591 ;;		i2_writeEEPROM_ext
 25592 ;; This function uses a non-reentrant model
 25593 ;;
 25594                           
 25595                           	psect	text71
 25596  005B72                     __ptext71:
 25597                           	opt stack 0
 25598  005B72                     i2_I2C_Start:
 25599                           	opt stack 20
 25600                           
 25601                           ;I2C.c: 26: I2C_Wait();
 25602                           
 25603                           ;incstack = 0
 25604  005B72  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25605                           
 25606                           ;I2C.c: 27: SEN = 1;
 25607  005B76  80C5               	bsf	4037,0,c	;volatile
 25608  005B78  0012               	return		;funcret
 25609  005B7A                     __end_ofi2_I2C_Start:
 25610                           	opt stack 0
 25611                           tosu	equ	0xFFF
 25612                           tosh	equ	0xFFE
 25613                           tosl	equ	0xFFD
 25614                           pclatu	equ	0xFFB
 25615                           pclath	equ	0xFFA
 25616                           tblptru	equ	0xFF8
 25617                           tblptrh	equ	0xFF7
 25618                           tblptrl	equ	0xFF6
 25619                           tablat	equ	0xFF5
 25620                           prodh	equ	0xFF4
 25621                           prodl	equ	0xFF3
 25622                           intcon	equ	0xFF2
 25623                           intcon2	equ	0xFF1
 25624                           intcon3	equ	0xFF0
 25625                           indf0	equ	0xFEF
 25626                           postinc0	equ	0xFEE
 25627                           fsr0h	equ	0xFEA
 25628                           fsr0l	equ	0xFE9
 25629                           wreg	equ	0xFE8
 25630                           indf1	equ	0xFE7
 25631                           postinc1	equ	0xFE6
 25632                           postdec1	equ	0xFE5
 25633                           plusw1	equ	0xFE3
 25634                           fsr1h	equ	0xFE2
 25635                           fsr1l	equ	0xFE1
 25636                           indf2	equ	0xFDF
 25637                           postinc2	equ	0xFDE
 25638                           postdec2	equ	0xFDD
 25639                           plusw2	equ	0xFDB
 25640                           fsr2h	equ	0xFDA
 25641                           fsr2l	equ	0xFD9
 25642                           status	equ	0xFD8
 25643                           
 25644 ;; *************** function i2_I2C_Read *****************
 25645 ;; Defined at:
 25646 ;;		line 46 in file "src/I2C.c"
 25647 ;; Parameters:    Size  Location     Type
 25648 ;;  a               2    1[COMRAM] unsigned short 
 25649 ;; Auto vars:     Size  Location     Type
 25650 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 25651 ;; Return value:  Size  Location     Type
 25652 ;;                  2    1[COMRAM] unsigned short 
 25653 ;; Registers used:
 25654 ;;		wreg, status,2, status,0, cstack
 25655 ;; Tracked objects:
 25656 ;;		On entry : 0/0
 25657 ;;		On exit  : 0/0
 25658 ;;		Unchanged: 0/0
 25659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25660 ;;      Params:         2       0       0       0       0       0       0       0       0
 25661 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25662 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25663 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25664 ;;Total ram usage:        4 bytes
 25665 ;; Hardware stack levels used:    1
 25666 ;; Hardware stack levels required when called:    1
 25667 ;; This function calls:
 25668 ;;		i2_I2C_Wait
 25669 ;; This function is called by:
 25670 ;;		_readButtons
 25671 ;; This function uses a non-reentrant model
 25672 ;;
 25673                           
 25674                           	psect	text72
 25675  005938                     __ptext72:
 25676                           	opt stack 0
 25677  005938                     i2_I2C_Read:
 25678                           	opt stack 22
 25679                           
 25680                           ;I2C.c: 47: unsigned short temp;
 25681                           ;I2C.c: 48: I2C_Wait();
 25682                           
 25683                           ;incstack = 0
 25684  005938  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25685                           
 25686                           ;I2C.c: 49: RCEN = 1;
 25687  00593C  86C5               	bsf	4037,3,c	;volatile
 25688                           
 25689                           ;I2C.c: 50: I2C_Wait();
 25690  00593E  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25691                           
 25692                           ;I2C.c: 51: temp = SSPBUF;
 25693  005942  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 25694  005946  6A05               	clrf	i2I2C_Read@temp+1,c
 25695                           
 25696                           ;I2C.c: 52: I2C_Wait();
 25697  005948  EC82  F02D         	call	i2_I2C_Wait	;wreg free
 25698                           
 25699                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 25700  00594C  5002               	movf	i2I2C_Read@a,w,c
 25701  00594E  1003               	iorwf	i2I2C_Read@a+1,w,c
 25702  005950  A4D8               	btfss	status,2,c
 25703  005952  D002               	goto	i2u1239_40
 25704  005954  8AC5               	bsf	4037,5,c	;volatile
 25705  005956  D001               	goto	i2u1240_45
 25706  005958                     i2u1239_40:
 25707  005958  9AC5               	bcf	4037,5,c	;volatile
 25708  00595A                     i2u1240_45:
 25709                           
 25710                           ;I2C.c: 54: ACKEN = 1;
 25711  00595A  88C5               	bsf	4037,4,c	;volatile
 25712                           
 25713                           ;I2C.c: 55: return temp;
 25714  00595C  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 25715  005960  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 25716  005964  0012               	return	
 25717  005966                     __end_ofi2_I2C_Read:
 25718                           	opt stack 0
 25719                           tosu	equ	0xFFF
 25720                           tosh	equ	0xFFE
 25721                           tosl	equ	0xFFD
 25722                           pclatu	equ	0xFFB
 25723                           pclath	equ	0xFFA
 25724                           tblptru	equ	0xFF8
 25725                           tblptrh	equ	0xFF7
 25726                           tblptrl	equ	0xFF6
 25727                           tablat	equ	0xFF5
 25728                           prodh	equ	0xFF4
 25729                           prodl	equ	0xFF3
 25730                           intcon	equ	0xFF2
 25731                           intcon2	equ	0xFF1
 25732                           intcon3	equ	0xFF0
 25733                           indf0	equ	0xFEF
 25734                           postinc0	equ	0xFEE
 25735                           fsr0h	equ	0xFEA
 25736                           fsr0l	equ	0xFE9
 25737                           wreg	equ	0xFE8
 25738                           indf1	equ	0xFE7
 25739                           postinc1	equ	0xFE6
 25740                           postdec1	equ	0xFE5
 25741                           plusw1	equ	0xFE3
 25742                           fsr1h	equ	0xFE2
 25743                           fsr1l	equ	0xFE1
 25744                           indf2	equ	0xFDF
 25745                           postinc2	equ	0xFDE
 25746                           postdec2	equ	0xFDD
 25747                           plusw2	equ	0xFDB
 25748                           fsr2h	equ	0xFDA
 25749                           fsr2l	equ	0xFD9
 25750                           status	equ	0xFD8
 25751                           
 25752 ;; *************** function i2_I2C_Wait *****************
 25753 ;; Defined at:
 25754 ;;		line 21 in file "src/I2C.c"
 25755 ;; Parameters:    Size  Location     Type
 25756 ;;		None
 25757 ;; Auto vars:     Size  Location     Type
 25758 ;;		None
 25759 ;; Return value:  Size  Location     Type
 25760 ;;                  1    wreg      void 
 25761 ;; Registers used:
 25762 ;;		wreg, status,2, status,0
 25763 ;; Tracked objects:
 25764 ;;		On entry : 0/0
 25765 ;;		On exit  : 0/0
 25766 ;;		Unchanged: 0/0
 25767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25768 ;;      Params:         0       0       0       0       0       0       0       0       0
 25769 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25770 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25771 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25772 ;;Total ram usage:        1 bytes
 25773 ;; Hardware stack levels used:    1
 25774 ;; This function calls:
 25775 ;;		Nothing
 25776 ;; This function is called by:
 25777 ;;		i2_I2C_Start
 25778 ;;		i2_I2C_Stop
 25779 ;;		i2_I2C_Write
 25780 ;;		i2_I2C_Read
 25781 ;; This function uses a non-reentrant model
 25782 ;;
 25783                           
 25784                           	psect	text73
 25785  005B04                     __ptext73:
 25786                           	opt stack 0
 25787  005B04                     i2_I2C_Wait:
 25788                           	opt stack 20
 25789                           
 25790                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 25791                           
 25792                           ;incstack = 0
 25793  005B04  B4C7               	btfsc	4039,2,c	;volatile
 25794  005B06  D7FE               	goto	i2_I2C_Wait
 25795  005B08  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 25796  005B0C  0E1F               	movlw	31
 25797  005B0E  1601               	andwf	??i2_I2C_Wait,f,c
 25798  005B10  B4D8               	btfsc	status,2,c
 25799  005B12  0012               	return	
 25800  005B14  D7F7               	goto	i2_I2C_Wait
 25801  005B16                     __end_ofi2_I2C_Wait:
 25802                           	opt stack 0
 25803                           tosu	equ	0xFFF
 25804                           tosh	equ	0xFFE
 25805                           tosl	equ	0xFFD
 25806                           pclatu	equ	0xFFB
 25807                           pclath	equ	0xFFA
 25808                           tblptru	equ	0xFF8
 25809                           tblptrh	equ	0xFF7
 25810                           tblptrl	equ	0xFF6
 25811                           tablat	equ	0xFF5
 25812                           prodh	equ	0xFF4
 25813                           prodl	equ	0xFF3
 25814                           intcon	equ	0xFF2
 25815                           intcon2	equ	0xFF1
 25816                           intcon3	equ	0xFF0
 25817                           indf0	equ	0xFEF
 25818                           postinc0	equ	0xFEE
 25819                           fsr0h	equ	0xFEA
 25820                           fsr0l	equ	0xFE9
 25821                           wreg	equ	0xFE8
 25822                           indf1	equ	0xFE7
 25823                           postinc1	equ	0xFE6
 25824                           postdec1	equ	0xFE5
 25825                           plusw1	equ	0xFE3
 25826                           fsr1h	equ	0xFE2
 25827                           fsr1l	equ	0xFE1
 25828                           indf2	equ	0xFDF
 25829                           postinc2	equ	0xFDE
 25830                           postdec2	equ	0xFDD
 25831                           plusw2	equ	0xFDB
 25832                           fsr2h	equ	0xFDA
 25833                           fsr2l	equ	0xFD9
 25834                           status	equ	0xFD8
 25835                           tosu	equ	0xFFF
 25836                           tosh	equ	0xFFE
 25837                           tosl	equ	0xFFD
 25838                           pclatu	equ	0xFFB
 25839                           pclath	equ	0xFFA
 25840                           tblptru	equ	0xFF8
 25841                           tblptrh	equ	0xFF7
 25842                           tblptrl	equ	0xFF6
 25843                           tablat	equ	0xFF5
 25844                           prodh	equ	0xFF4
 25845                           prodl	equ	0xFF3
 25846                           intcon	equ	0xFF2
 25847                           intcon2	equ	0xFF1
 25848                           intcon3	equ	0xFF0
 25849                           indf0	equ	0xFEF
 25850                           postinc0	equ	0xFEE
 25851                           fsr0h	equ	0xFEA
 25852                           fsr0l	equ	0xFE9
 25853                           wreg	equ	0xFE8
 25854                           indf1	equ	0xFE7
 25855                           postinc1	equ	0xFE6
 25856                           postdec1	equ	0xFE5
 25857                           plusw1	equ	0xFE3
 25858                           fsr1h	equ	0xFE2
 25859                           fsr1l	equ	0xFE1
 25860                           indf2	equ	0xFDF
 25861                           postinc2	equ	0xFDE
 25862                           postdec2	equ	0xFDD
 25863                           plusw2	equ	0xFDB
 25864                           fsr2h	equ	0xFDA
 25865                           fsr2l	equ	0xFD9
 25866                           status	equ	0xFD8
 25867                           
 25868                           	psect	text74
 25869  000000                     __ptext74:
 25870                           	opt stack 0
 25871                           tosu	equ	0xFFF
 25872                           tosh	equ	0xFFE
 25873                           tosl	equ	0xFFD
 25874                           pclatu	equ	0xFFB
 25875                           pclath	equ	0xFFA
 25876                           tblptru	equ	0xFF8
 25877                           tblptrh	equ	0xFF7
 25878                           tblptrl	equ	0xFF6
 25879                           tablat	equ	0xFF5
 25880                           prodh	equ	0xFF4
 25881                           prodl	equ	0xFF3
 25882                           intcon	equ	0xFF2
 25883                           intcon2	equ	0xFF1
 25884                           intcon3	equ	0xFF0
 25885                           indf0	equ	0xFEF
 25886                           postinc0	equ	0xFEE
 25887                           fsr0h	equ	0xFEA
 25888                           fsr0l	equ	0xFE9
 25889                           wreg	equ	0xFE8
 25890                           indf1	equ	0xFE7
 25891                           postinc1	equ	0xFE6
 25892                           postdec1	equ	0xFE5
 25893                           plusw1	equ	0xFE3
 25894                           fsr1h	equ	0xFE2
 25895                           fsr1l	equ	0xFE1
 25896                           indf2	equ	0xFDF
 25897                           postinc2	equ	0xFDE
 25898                           postdec2	equ	0xFDD
 25899                           plusw2	equ	0xFDB
 25900                           fsr2h	equ	0xFDA
 25901                           fsr2l	equ	0xFD9
 25902                           status	equ	0xFD8
 25903                           
 25904                           	psect	rparam
 25905  0000                     tosu	equ	0xFFF
 25906                           tosh	equ	0xFFE
 25907                           tosl	equ	0xFFD
 25908                           pclatu	equ	0xFFB
 25909                           pclath	equ	0xFFA
 25910                           tblptru	equ	0xFF8
 25911                           tblptrh	equ	0xFF7
 25912                           tblptrl	equ	0xFF6
 25913                           tablat	equ	0xFF5
 25914                           prodh	equ	0xFF4
 25915                           prodl	equ	0xFF3
 25916                           intcon	equ	0xFF2
 25917                           intcon2	equ	0xFF1
 25918                           intcon3	equ	0xFF0
 25919                           indf0	equ	0xFEF
 25920                           postinc0	equ	0xFEE
 25921                           fsr0h	equ	0xFEA
 25922                           fsr0l	equ	0xFE9
 25923                           wreg	equ	0xFE8
 25924                           indf1	equ	0xFE7
 25925                           postinc1	equ	0xFE6
 25926                           postdec1	equ	0xFE5
 25927                           plusw1	equ	0xFE3
 25928                           fsr1h	equ	0xFE2
 25929                           fsr1l	equ	0xFE1
 25930                           indf2	equ	0xFDF
 25931                           postinc2	equ	0xFDE
 25932                           postdec2	equ	0xFDD
 25933                           plusw2	equ	0xFDB
 25934                           fsr2h	equ	0xFDA
 25935                           fsr2l	equ	0xFD9
 25936                           status	equ	0xFD8
 25937                           
 25938                           	psect	temp
 25939  00005F                     btemp:
 25940                           	opt stack 0
 25941  00005F                     	ds	1
 25942  0000                     int$flags	set	btemp
 25943  0000                     wtemp6	set	btemp+1
 25944                           tosu	equ	0xFFF
 25945                           tosh	equ	0xFFE
 25946                           tosl	equ	0xFFD
 25947                           pclatu	equ	0xFFB
 25948                           pclath	equ	0xFFA
 25949                           tblptru	equ	0xFF8
 25950                           tblptrh	equ	0xFF7
 25951                           tblptrl	equ	0xFF6
 25952                           tablat	equ	0xFF5
 25953                           prodh	equ	0xFF4
 25954                           prodl	equ	0xFF3
 25955                           intcon	equ	0xFF2
 25956                           intcon2	equ	0xFF1
 25957                           intcon3	equ	0xFF0
 25958                           indf0	equ	0xFEF
 25959                           postinc0	equ	0xFEE
 25960                           fsr0h	equ	0xFEA
 25961                           fsr0l	equ	0xFE9
 25962                           wreg	equ	0xFE8
 25963                           indf1	equ	0xFE7
 25964                           postinc1	equ	0xFE6
 25965                           postdec1	equ	0xFE5
 25966                           plusw1	equ	0xFE3
 25967                           fsr1h	equ	0xFE2
 25968                           fsr1l	equ	0xFE1
 25969                           indf2	equ	0xFDF
 25970                           postinc2	equ	0xFDE
 25971                           postdec2	equ	0xFDD
 25972                           plusw2	equ	0xFDB
 25973                           fsr2h	equ	0xFDA
 25974                           fsr2l	equ	0xFD9
 25975                           status	equ	0xFD8


Data Sizes:
    Strings     1853
    Constant    66
    Data        18
    BSS         463
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      94
    BANK0           160    147     160
    BANK1           256      0     238
    BANK2           256      0     185
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_76(CODE[3]), STR_74(CODE[4]), 
		 -> STR_73(CODE[7]), STR_72(CODE[3]), STR_70(CODE[4]), STR_69(CODE[5]), 
		 -> STR_65(CODE[4]), STR_64(CODE[2]), STR_62(CODE[4]), STR_61(CODE[3]), 
		 -> STR_59(CODE[4]), STR_58(CODE[2]), STR_57(CODE[2]), STR_55(CODE[4]), 
		 -> STR_53(CODE[4]), STR_52(CODE[5]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_48(CODE[3]), STR_46(CODE[4]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), 
		 -> STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_76(CODE[3]), STR_74(CODE[4]), 
		 -> STR_73(CODE[7]), STR_72(CODE[3]), STR_70(CODE[4]), STR_69(CODE[5]), 
		 -> STR_65(CODE[4]), STR_64(CODE[2]), STR_62(CODE[4]), STR_61(CODE[3]), 
		 -> STR_59(CODE[4]), STR_58(CODE[2]), STR_57(CODE[2]), STR_55(CODE[4]), 
		 -> STR_53(CODE[4]), STR_52(CODE[5]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> STR_48(CODE[3]), STR_46(CODE[4]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), 
		 -> STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_76(CODE[3]), 
		 -> STR_74(CODE[4]), STR_73(CODE[7]), STR_72(CODE[3]), STR_70(CODE[4]), 
		 -> STR_69(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), STR_65(CODE[4]), STR_64(CODE[2]), 
		 -> STR_62(CODE[4]), STR_61(CODE[3]), STR_59(CODE[4]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_55(CODE[4]), STR_53(CODE[4]), STR_52(CODE[5]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), STR_48(CODE[3]), STR_46(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), ssid(BANK1[15]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), bufferSerial(BANK2[100]), STR_31(CODE[4]), 
		 -> STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), 
		 -> STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), 
		 -> STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_76(CODE[3]), 
		 -> STR_74(CODE[4]), STR_73(CODE[7]), STR_72(CODE[3]), STR_70(CODE[4]), 
		 -> STR_69(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), STR_65(CODE[4]), STR_64(CODE[2]), 
		 -> STR_62(CODE[4]), STR_61(CODE[3]), STR_59(CODE[4]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_55(CODE[4]), STR_53(CODE[4]), STR_52(CODE[5]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), STR_48(CODE[3]), STR_46(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), ssid(BANK1[15]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), bufferSerial(BANK2[100]), STR_31(CODE[4]), 
		 -> STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), 
		 -> STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), 
		 -> STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_129(CODE[3]), STR_128(CODE[5]), STR_127(CODE[3]), STR_126(CODE[1]), 
		 -> STR_125(CODE[5]), STR_124(CODE[7]), STR_123(CODE[1]), STR_122(CODE[5]), 
		 -> STR_121(CODE[6]), STR_120(CODE[18]), STR_119(CODE[19]), STR_118(CODE[19]), 
		 -> STR_117(CODE[19]), STR_116(CODE[20]), STR_115(CODE[17]), STR_114(CODE[7]), 
		 -> STR_113(CODE[9]), STR_112(CODE[8]), STR_111(CODE[10]), STR_110(CODE[18]), 
		 -> STR_109(CODE[18]), STR_108(CODE[18]), STR_107(CODE[17]), STR_106(CODE[17]), 
		 -> STR_105(CODE[17]), STR_104(CODE[17]), STR_103(CODE[20]), STR_102(CODE[20]), 
		 -> STR_101(CODE[20]), STR_98(CODE[11]), STR_95(CODE[10]), STR_92(CODE[9]), 
		 -> STR_91(CODE[10]), STR_90(CODE[9]), STR_89(CODE[15]), STR_88(CODE[18]), 
		 -> STR_87(CODE[20]), STR_86(CODE[10]), STR_85(CODE[22]), STR_84(CODE[21]), 
		 -> STR_83(CODE[15]), STR_82(CODE[12]), STR_80(CODE[3]), STR_79(CODE[14]), 
		 -> STR_78(CODE[20]), STR_66(CODE[3]), STR_45(CODE[18]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_39(CODE[14]), STR_29(CODE[9]), STR_28(CODE[21]), 
		 -> STR_27(CODE[17]), STR_26(CODE[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), 
		 -> line1(BANK1[21]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), NULL(NULL[0]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 480
		 -> STR_77(CODE[9]), STR_75(CODE[11]), STR_71(CODE[14]), STR_68(CODE[168]), 
		 -> STR_63(CODE[19]), STR_60(CODE[40]), STR_56(CODE[15]), STR_54(CODE[21]), 
		 -> STR_50(CODE[14]), STR_47(CODE[14]), STR_37(CODE[16]), STR_36(CODE[480]), 
		 -> STR_35(CODE[45]), STR_32(CODE[21]), STR_23(CODE[20]), STR_20(CODE[22]), 
		 -> STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), NULL(NULL[0]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_131(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), STR_100(CODE[10]), STR_99(CODE[7]), 
		 -> STR_97(CODE[11]), STR_96(CODE[8]), STR_94(CODE[11]), STR_93(CODE[7]), 
		 -> STR_81(CODE[12]), STR_74(CODE[4]), STR_70(CODE[4]), STR_67(CODE[12]), 
		 -> enviaDadosWifi@AUX(BANK0[15]), STR_65(CODE[4]), STR_62(CODE[4]), STR_59(CODE[4]), 
		 -> STR_55(CODE[4]), STR_53(CODE[4]), STR_49(CODE[4]), STR_46(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), STR_42(CODE[3]), senha(BANK1[15]), STR_41(CODE[3]), 
		 -> ssid(BANK1[15]), STR_38(CODE[3]), STR_34(CODE[4]), NULL(NULL[0]), 
		 -> STR_31(CODE[4]), line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), 
		 -> line1(BANK1[21]), STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), 
		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), 
		 -> STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 480
		 -> STR_129(CODE[3]), STR_128(CODE[5]), STR_127(CODE[3]), STR_126(CODE[1]), 
		 -> STR_125(CODE[5]), STR_124(CODE[7]), STR_123(CODE[1]), STR_122(CODE[5]), 
		 -> STR_121(CODE[6]), STR_120(CODE[18]), STR_119(CODE[19]), STR_118(CODE[19]), 
		 -> STR_117(CODE[19]), STR_116(CODE[20]), STR_115(CODE[17]), STR_114(CODE[7]), 
		 -> STR_113(CODE[9]), STR_112(CODE[8]), STR_111(CODE[10]), STR_110(CODE[18]), 
		 -> STR_109(CODE[18]), STR_108(CODE[18]), STR_107(CODE[17]), STR_106(CODE[17]), 
		 -> STR_105(CODE[17]), STR_104(CODE[17]), STR_103(CODE[20]), STR_102(CODE[20]), 
		 -> STR_101(CODE[20]), STR_98(CODE[11]), STR_95(CODE[10]), STR_92(CODE[9]), 
		 -> STR_91(CODE[10]), STR_90(CODE[9]), STR_89(CODE[15]), STR_88(CODE[18]), 
		 -> STR_87(CODE[20]), STR_86(CODE[10]), STR_85(CODE[22]), STR_84(CODE[21]), 
		 -> STR_83(CODE[15]), STR_82(CODE[12]), STR_80(CODE[3]), STR_79(CODE[14]), 
		 -> STR_78(CODE[20]), STR_77(CODE[9]), STR_75(CODE[11]), STR_71(CODE[14]), 
		 -> STR_68(CODE[168]), STR_66(CODE[3]), STR_63(CODE[19]), STR_60(CODE[40]), 
		 -> STR_56(CODE[15]), STR_54(CODE[21]), STR_50(CODE[14]), STR_47(CODE[14]), 
		 -> STR_45(CODE[18]), STR_44(CODE[3]), STR_43(CODE[3]), STR_39(CODE[14]), 
		 -> STR_37(CODE[16]), STR_36(CODE[480]), STR_35(CODE[45]), STR_32(CODE[21]), 
		 -> STR_29(CODE[9]), STR_28(CODE[21]), STR_27(CODE[17]), STR_26(CODE[20]), 
		 -> STR_23(CODE[20]), STR_20(CODE[22]), STR_17(CODE[35]), STR_14(CODE[14]), 
		 -> STR_11(CODE[14]), 

    S1792__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1792__prbuf$ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), NULL(NULL[0]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), NULL(NULL[0]), line4(BANK1[21]), line3(BANK1[21]), 
		 -> line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    findBufferSerial@key	PTR unsigned char  size(2) Largest target is 7
		 -> STR_76(CODE[3]), STR_73(CODE[7]), STR_72(CODE[3]), STR_69(CODE[5]), 
		 -> STR_64(CODE[2]), STR_61(CODE[3]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_52(CODE[5]), STR_51(CODE[3]), STR_48(CODE[3]), STR_40(CODE[3]), 
		 -> STR_30(CODE[7]), STR_24(CODE[3]), STR_21(CODE[3]), STR_18(CODE[3]), 
		 -> STR_15(CODE[3]), STR_12(CODE[3]), 

    setKeyStartReceiveSerial@start	PTR unsigned char  size(2) Largest target is 7
		 -> STR_74(CODE[4]), STR_70(CODE[4]), STR_65(CODE[4]), STR_62(CODE[4]), 
		 -> STR_59(CODE[4]), STR_55(CODE[4]), STR_53(CODE[4]), STR_49(CODE[4]), 
		 -> STR_46(CODE[4]), STR_38(CODE[3]), STR_34(CODE[4]), STR_31(CODE[4]), 
		 -> STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), 
		 -> STR_13(CODE[4]), STR_10(CODE[4]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@ret	PTR unsigned char  size(2) Largest target is 15
		 -> senha(BANK1[15]), ssid(BANK1[15]), 

    getStringJSON@buff	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@key	PTR unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), STR_41(CODE[3]), 

    main$1651	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_100(CODE[10]), STR_99(CODE[7]), 

    main$1646	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_97(CODE[11]), STR_96(CODE[8]), 

    main$1641	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_94(CODE[11]), STR_93(CODE[7]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_130(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    getMacAdress@var	PTR unsigned char  size(2) Largest target is 12
		 -> wifi_MAC(BANK1[12]), 

    getMacAdress@mac	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(COMRAM[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(COMRAM[1]), wifi_habilita_alteracao(COMRAM[1]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(COMRAM[1]), t_flap_ligado(COMRAM[1]), h_buzzer(COMRAM[1]), 
		 -> h_modo_seguranca(BANK0[1]), h_venotinha(COMRAM[1]), h_flap(COMRAM[1]), h_abafador(COMRAM[1]), 
		 -> wifi_SENHA(COMRAM[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(COMRAM[1]), buzzer(BANK0[1]), 
		 -> fornalha(COMRAM[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _receiveByteSerial->i2_strlen
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_alterarDadosConexaoConfigWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _getMacAdress->_strlen
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarDadosConexaoConfigWifi->_getStringJSON
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _setKeyStartReceiveSerial->_sprintf
    _printf->__doprnt
    _getStringJSON->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _findBufferSerial->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  181910
                                            129 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
      _alterarDadosConexaoConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11677
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18753
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      20    20      0   40116
                                             99 BANK0     20    20      0
                             ___wmul
                              _delay
                   _findBufferSerial
                       _getMacAdress
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _getMacAdress                                         9     5      4    1227
                                              6 BANK0      9     5      4
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarDadosConexaoConfigWifi                        1     1      0   61519
                                            128 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                   _findBufferSerial
                      _getStringJSON
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2418
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1086
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setKeyStartReceiveSerial                             2     0      2   15759
                                             49 BANK0      2     0      2
                             _memset
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    4992
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _getStringJSON                                       79    73      6   15799
                                             49 BANK0     79    73      6
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   11812
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3420
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     743
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _findBufferSerial                                     2     0      2    3601
                                             20 BANK0      2     0      2
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     1      4    2211
                                             15 BANK0      5     1      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     672
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     240
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1447
                                             29 COMRAM    19    19      0
                        _readButtons
                  _receiveByteSerial
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _receiveByteSerial                                    3     3      0     160
                                              6 COMRAM     3     3      0
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarDadosConexaoConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getStringJSON
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getMacAdress
       _strlen
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _receiveByteSerial
     i2_strlen
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B9       9       72.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A5      20        0.0%
DATA                 0      0     2A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Jul 14 22:54:08 2020

                       i2_setRangeValor 508A                       setRangeValor@_aux 006E  
                     setRangeValor@_max 0068                 __size_of_readEEPROM_ext 0052  
                     setRangeValor@_min 0067                      __size_of_I2C_Start 0008  
                   tabelaUmidade@_clima 0062                      __size_of_I2C_Write 000A  
                                    _GO 007E11                      setRangeValor@_acao 006D  
                    _tipo_modo_trabalho 0059                             __CFG_BOR$ON 000000  
                   ___wmul@multiplicand 0062                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                          ___ftadd@exp1 0086                            ___ftadd@exp2 0085  
                          ___ftadd@sign 0084               __size_of_findBufferSerial 0028  
                           __CFG_WDT$ON 000000                                     l300 1C1E  
                                   l301 1BF4                                     l230 58EA  
                                   l302 15EA                                     l231 58F2  
                                   l311 1636                                     l303 15FE  
                                   l232 58F4                                     l233 58FC  
                                   l217 5AAE                                     l321 167C  
                                   l313 1644                                     l305 160C  
                                   l234 58FE                                     l250 4CF4  
                                   l235 5906                                     l251 4D18  
                                   l315 1652                                     l307 161A  
                                   l500 1B7C                                     l404 18AA  
                                   l229 58E8                                     l325 169A  
                                   l317 1660                                     l309 1628  
                                   l246 4D3C                                     l510 1BC4  
                                   l502 1B94                                     l430 197E  
                                   l406 18CA                                     l247 4CAC  
                                   l271 4E50                                     l327 16BA  
                                   l319 166E                                     l264 4AD6  
                                   l432 199E                                     l408 18EE  
                                   l249 4CD0                                     l273 4E5A  
                                   l521 2590                                     l329 16DE  
                                   l274 4E66                                     l522 1C2A  
                                   l514 1BDC                                     l506 1BAC  
                                   l259 591C                                     l531 1C78  
                                   l363 17AC                                     l284 5870  
                                   l285 585A                                     l277 4E76  
                                   l533 1C98                                     l365 17CC  
                                   l470 1A88                                     l446 19E8  
                                   l279 4EA4                                     l551 1D0C  
                                   l296 5AD0                                     l800 23B4  
                                   l545 1CD8                                     l449 19FE  
                                   l634 25A6                                     l810 2404  
                                   l802 23C4                                     l650 1F70  
                                   l642 1F0A                                     l490 1B28  
                                   l482 1AEC                                     l635 1ECA  
                                   l387 1834                                     l820 2454  
                                   l812 2414                                     l804 23D4  
                                   l660 1FAE                                     l636 1EE0  
                                   l492 1B40                                     l476 1ABC  
                                   l901 5686                                     l629 1EB4  
                                   l557 1D2E                                     l902 565C  
                                   l830 24A4                                     l822 2464  
                                   l814 2424                                     l806 23E4  
                                   l750 21EC                                     l670 200E  
                                   l662 1FBE                                     l646 1F3A  
                                   l638 1EF0                                     l486 1B04  
                                   l478 1AD4                                     l910 459A  
                                   l583 1DB8                                     l567 1D64  
                                   l911 44E2                                     l904 5668  
                                   l840 24F4                                     l832 24B4  
                                   l824 2474                                     l816 2434  
                                   l808 23F4                                     l752 21FC  
                                   l744 21BA                                     l680 2052  
                                   l672 201E                                     l648 1F60  
                                   l496 1B58                                     l912 4506  
                                   l905 5672                                     l921 451E  
                                   l906 567C                                     l850 2544  
                                   l842 2504                                     l834 24C4  
                                   l826 2484                                     l818 2444  
                                   l770 22AE                                     l762 226E  
                                   l754 2222                                     l690 2090  
                                   l674 202E                                     l666 1FEE  
                                   l658 1F9E                                     l922 45AE  
                                   l914 44F8                                     l931 4564  
                                   l923 452E                                     l852 256A  
                                   l844 2514                                     l836 24D4  
                                   l828 2494                                     l780 2314  
                                   l772 22BE                                     l764 227E  
                                   l756 2246                                     l692 20A0  
                                   l684 206C                                     l668 1FFE  
                                   l924 4554                                     l916 4500  
                                   l941 4EF0                                     l749 21D6  
                                   l933 456C                                     l917 4522  
                                   l950 4F46                                     l854 257A  
                                   l846 2524                                     l838 24E4  
                                   l790 2364                                     l782 2324  
                                   l774 22E4                                     l766 228E  
                                   l934 457C                                     l926 4546  
                                   l919 4516                                     l872 43EE  
                                   l944 4F36                                     l848 2534  
                                   l792 2374                                     l784 2334  
                                   l776 22F4                                     l768 229E  
                                   l928 454E                                     l873 43D2  
                                   l945 4EF6                                     l929 4570  
                                   l970 49C2                                     l882 4458  
                                   l874 43A0                                     l938 4F28  
                                   l794 2384                                     l786 2344  
                                   l778 2304                                     l883 440A  
                                   l947 4F20                                     l939 4ED0  
                                   l972 49F6                                     l892 4474  
                                   l876 43AA                                     l796 2394  
                                   l788 2354                                     l885 4424  
                                   l877 43B4                                     l982 38D2  
                                   l990 357C                                     l894 448A  
                                   l878 43BE                                     l798 23A4  
                                   l991 359C                                     l983 3508  
                                   l975 4A40                                     l887 443E  
                                   l879 43C8                                     l968 4A42  
                                   l896 44A0                                     l993 35B4  
                                   l985 352C                                     l969 499E  
                                   l994 35D4                                     l987 3544  
                                   l979 34F8                                     l996 35EC  
                                   l988 3564                                     l997 360C  
                                   l999 3636                            __CFG_CPB$OFF 000000  
                                   _PEN 007E2A                            __CFG_CPD$OFF 000000  
                                   _SEN 007E28                                     _hor 0046  
                                   _min 0047                                     _sec 0048  
                           ?i2_I2C_Read 0002                             ?i2_I2C_Wait 0001  
                           ?i2_I2C_Stop 0001                                     prod 000FF3  
                                   tosl 000FFD                                     wreg 000FE8  
                          ?_atualizaLCD 0068                            __CFG_FOSC$HS 000000  
                  __size_of_I2C_Restart 0008                          getStringJSON@i 00DE  
                        getStringJSON@j 00DB                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0090                            ___ftdiv@sign 0095  
                                  l1001 36B4                                    l1010 38A8  
                                  l1002 36D4                                    l1004 36F8  
                                  l1005 3770                                    l1021 3420  
                                  l1022 30B2                                    l1015 38CC  
                                  l1031 313A                                    l1008 387A  
                                  l1040 31F6                                    l1032 317C  
                                  l1024 30D6                                    l1033 3180  
                                  l1050 33B0                                    l1042 320E  
                                  l1026 30EE                                    l1018 3096  
                                  l1043 322E                                    l1035 31A6  
                                  l1027 310E                                    l2100 5576  
                                  l2020 5A92                                    l1060 3484  
                                  l1052 33C8                                    l1300 0612  
                                  l1053 33E8                                    l1045 3246  
                                  l2013 4686                                    l2005 45EA  
                                  l1221 2F6C                                    l1301 052E  
                                  l2110 56F2                                    l1062 34A4  
                                  l1046 32AC                                    l2014 467A  
                                  l1302 056C                                    l2103 559E  
                                  l1047 327E                                    l1039 31D6  
                                  l2007 4662                                    l1231 2CC6  
                                  l1223 2B9A                                    l1311 0A32  
                                  l2104 55A8                                    l1144 51D2  
                                  l1064 34D0                                    l1048 32AA  
                                  l2016 46A2                                    l2008 4652  
                                  l1216 5064                                    l1232 2DF2  
                                  l1312 0622                                    l2113 5712  
                                  l1153 398C                                    l1057 341A  
                                  l1241 2EE0                                    l1233 2D0E  
                                  l1225 2BA2                                    l1401 0FA6  
                                  l1305 0596                                    l2050 532C  
                                  l2114 571C                                    l1146 51E4  
                                  l1170 3AEE                                    l1154 3974  
                                  l1242 2F0E                                    l1226 2BBE  
                                  l1410 10B4                                    l1402 0FD4  
                                  l1330 0788                                    l1314 064E  
                                  l1306 060C                                    l2051 533A  
                                  l2123 58C6                                    l1147 51F0  
                                  l1171 3AF2                                    l1155 3988  
                                  l1059 34D6                                    l1251 3014  
                                  l1235 2DC4                                    l1411 10E8  
                                  l1331 07B6                                    l1323 0718  
                                  l1307 05DE                                    l2124 58B4  
                                  l1148 5206                                    l1180 3B60  
                                  l1164 3A8C                                    l1244 2F44  
                                  l1420 11F0                                    l1404 0FFE  
                                  l1332 0840                                    l2109 56FA  
                                  l1149 523E                                    l1173 3B24  
                                  l1229 2CB8                                    l1413 1112  
                                  l1405 102C                                    l1341 0D5C  
                                  l1333 08C6                                    l1317 06D2  
                                  l2046 52F8                                    l1190 3C5A  
                                  l1182 3BEC                                    l1166 3AAC  
                                  l1246 2F50                                    l1238 2DFE  
                                  l1422 121A                                    l1414 1140  
                                  l1342 0A50                                    l1334 095E  
                                  l2047 52EC                                    l2311 4790  
                                  l1167 3B2E                                    l1159 3A3C  
                                  l1431 1322                                    l1423 1248  
                                  l1407 1056                                    l1343 0DA2  
                                  l1351 0B18                                    l1335 0976  
                                  l1327 074C                                    l1319 06E2  
                                  l1271 0298                                    l2312 46B6  
                                  l1192 3CA4                                    l1168 3AE0  
                                  l1440 13C8                                    l1416 116A  
                                  l1408 108A                                    l1352 0B7E  
                                  l1344 0A54                                    l1336 097C  
                                  l1280 036C                                    l2313 4786  
                                  l1193 3CBC                                    l1185 3BEE  
                                  l1177 3B34                                    l1249 2F88  
                                  l1441 142E                                    l1425 1272  
                                  l1417 1198                                    l1361 0C80  
                                  l1345 0A88                                    l1337 09E8  
                                  l1281 03A4                                    l1273 02E6  
                                  l2306 537E                                    l1194 3CFE  
                                  l1186 3C02                                    l1178 3B4A  
                                  l1450 156E                                    l1442 13D0  
                                  l1426 12A0                                    l1338 0DCA  
                                  l1354 0BE0                                    l1282 03C6  
                                  l1266 0230                                    l1451 1460  
                                  l1419 11C2                                    l1371 0D14  
                                  l1355 0C14                                    l1347 0AB2  
                                  l1275 02EE                                    l1196 3D48  
                                  l1188 3C14                                    l1452 148E  
                                  l1436 1456                                    l1444 1418  
                                  l1380 13B6                                    l1428 12CA  
                                  l1292 0434                                    l1284 03D6  
                                  l1276 031E                                    l1268 025C  
                                  l1621 25B0                                    l1461 1568  
                                  l1429 12F8                                    l1373 0D34  
                                  l1365 0CBC                                    l1357 0C3E  
                                  l1349 0AEA                                    l1622 2620  
                                  l1454 1584                                    l1390 0E74  
                                  l1623 25F4                                    l1455 14B8  
                                  l1439 141E                                    l1375 0D58  
                                  l1279 09F0                                    l1295 04BA  
                                  l1640 2742                                    l1472 597C  
                                  l1464 15AE                                    l1456 14E6  
                                  l1384 1328                                    l1392 0E9E  
                                  l1296 04D0                                    l1288 03F2  
                                  l2265 5518                                    l1633 28F0  
                                  l1473 5968                                    l1393 0ECC  
                                  l1385 0DE8                                    l1369 0CF8  
                                  l2266 5512                                    l1650 2872  
                                  l1634 26AE                                    l1626 264C  
                                  l1570 4136                                    l1458 1510  
                                  l1386 0E1C                                    l1298 0504  
                                  l2099 557E                                    l1643 274C  
                                  l1635 26E8                                    l1459 153E  
                                  l1395 0EF6                                    l1660 29A0  
                                  l1628 28BA                                    l1652 2884  
                                  l1644 2786                                    l1636 26F8  
                                  l1572 416E                                    l1388 1386  
                                  l1396 0F24                                    l2277 4C6A  
                                  l1653 28A8                                    l1645 27B0  
                                  l1637 26F2                                    l1565 41A8  
                                  l1573 41A2                                    l1389 0E46  
                                  l2278 4BEC                                    l1670 2A92  
                                  l1654 292A                                    l1566 4088  
                                  l1398 0F4E                                    l2279 4C28  
                                  l1671 2B14                                    l1663 29E2  
                                  l1567 4112                                    l1911 4DE0  
                                  l1399 0F7C                                    l1672 2B3E  
                                  l1664 2A0C                                    l1648 27C4  
                                  l1912 4DD6                                    l1649 2824  
                                  l1905 4D84                                    l1658 2974  
                                  l1906 4D7A                                    l1667 2A62  
                                  l1659 2998                                    l1668 2A8C  
                                  l1908 4DB8                                    l1940 4248  
                                  l1909 4DA2                                    l1950 42A4  
                                  l1951 429A                                    l1960 42D8  
                                  l1936 421E                                    l1945 42AE  
                                  l1962 4306                                    l1963 4322  
                                  l1971 48F4                                    l1964 4352  
                                  l1972 4932                                    l6213 5B1A  
                                  l1973 4958                                    l1990 4858  
                                  l1959 42E2                                    l1991 4868  
                                  l7023 1A88                                    l1984 47D6  
                                  l1969 48CC                                    l1977 5156  
                                  l1978 5186                                    l1986 47FE  
                                  l1987 4830                                    l7035 1ABC  
                                  l1988 4840                                    l7141 1C98  
                                  l7117 1C3A                                    l7135 1C78  
                                  l6409 292E                                    l6193 51B2  
                                  l7059 1B28                                    l6365 274C  
                                  l7077 1B7C                                    l6375 27C4  
                                  l7415 1FEE                                    l6617 58B4  
                                  l9113 2D06                                    l7601 2246  
                                  l7337 1EB4                                    l8315 4E5E  
                                  l8307 4E48                                    l7371 1F3A  
                                  l7179 1D0C                                    l6573 5914  
                                  l6477 46B6                                    l7349 1EE0  
                                  l6901 18CA                                    l6709 15FE  
                                  l6585 5968                                    l9129 2DF6  
                                  l7377 1F60                                    l6825 17CC  
                                  l6907 18EE                                    l6819 17AC  
                                  l6677 4ACE                                    l9165 2F80  
                                  l7573 21BA                                    l6861 1844  
                                  l6765 16DE                                    l9183 300C  
                                  l7639 22E4                                    l6943 197E  
                                  l6759 16BA                                    l9089 2BB6  
                                  l7585 21EC                                    l8651 38A0  
                                  l7595 2222                                    l9347 0228  
                                  _ADON 007E10                                    l6981 1A0E  
                                  l6949 199E                                    l8639 3872  
                                  l6895 18AA                                    l9359 0254  
                                  l7797 256A                                    STR_1 7ED8  
                                  STR_2 7EB6                                    STR_3 7ECD  
                                  STR_4 7F0E                                    STR_5 7FD5  
                                  STR_6 7FBB                                    STR_7 7F92  
                                  STR_8 7FD0                                    STR_9 7FEE  
                                  _RCIF 007CF5                                    _RCEN 007E2B  
                                  u8110 2A1C                                    u8040 295A  
                                  u8210 46FC                                    u8220 4726  
                                  u8108 29CC                                    u9100 18BA  
                                  u8230 4746                                    u8240 4774  
                                  u8080 29A8                                    u9120 18DA  
                                  u8225 4720                                    u8217 46F2  
                                  u8170 2B48                                    u8227 4716  
                                  u8260 536C                                    u8180 2B62  
                                  u8148 2A4C                                    u8420 4D6C  
                                  u8237 473C                                    u8190 46D6  
                                  u8510 583A                                    u8247 476A  
                                  u8280 53AA                                    u7800 5538  
                                  u8360 4C54                                    u8168 2AFE  
                                  u9240 196A                                    u9080 189A  
                                  u8600 164E                                    u7730 5582  
                                  u9250 197A                                    u8610 165C  
                                  u8267 5362                                    u8380 4C94  
                                  u7900 2724                                    u8460 4DEA  
                                  u9500 1AAC                                    u9340 19E4  
                                  u9260 198E                                    u8620 166A  
                                  u8540 15FA                                    u8197 46CC  
                                  u8525 583C                                    u8390 4C9A  
                                  u7910 272A                                    u9350 19FC  
                                  u8630 1678                                    u8550 1608  
                                  u8287 53A0                                    u7807 552E  
                                  u8367 4C4A                                    u7760 56FE  
                                  u9610 1B3C                                    u9530 1AD0  
                                  u8570 1624                                    u8387 4C8A  
                                  u7907 271A                                    u9460 1A78  
                                  u8660 16AA                                    u8580 1632  
                                  u9710 1BC0                                    u9630 1B54  
                                  u9550 1AE8                                    u8590 1640  
                                  u9800 1C68                                    u9640 1B68  
                                  u8680 16CA                                    u9730 1BD8  
                                  u9650 1B78                                    u9570 1B00  
                                  u7980 281A                                    u7948 2770  
                                  u7868 25DE                                    u9820 1C88  
                                  u9740 1BF0                                    u9580 1B14  
                                  u8860 179C                                    u7990 285C  
                                  u9670 1B90                                    u9590 1B24  
                                  u9920 1CFC                                    u8880 17BC  
                                  u7978 27E8                                    u9690 1BA8  
                                  u7987 2810                                    u7979 281C  
                                  u7997 2852                                    u8990 1832  
                                  _RSEN 007E29                         _f_wifi_processo 003D  
                                  __led 005C                       ?_Lcd_Write_String 0064  
                                  __sec 0164                                    _fase 00F6  
                                  _main 0012                                    _leds 0043  
                          ___ftpack@arg 0060                                    _menu 00FD  
                          ___ftpack@exp 0063                                    _temp 00FE  
                      __end_of_I2C_Read 5848                                    _umid 005D  
                                  fsr0h 000FEA                                    _ssid 01C9  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 005F                        __end_of_I2C_Wait 5B04  
                      __end_of_I2C_Stop 5B62                            ?i2_I2C_Start 0001  
                                  prodh 000FF4                                    prodl 000FF3  
                          ?i2_I2C_Write 0002                         __end_ofi2_delay 5A78  
                                  start 000E                      ??_Lcd_Write_String 0066  
                         __CFG_IESO$OFF 000000                         ??_getStringJSON 0097  
                       __end_of_Lcd_Cmd 5A54                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 0079                            ___param_bank 000000  
                          ___ftmul@sign 007A              __size_of_receiveByteSerial 006E  
                          ___fttol@exp1 00A4                            ___fttol@lval 00A0  
                      ?_I2C_Master_Init 006D                           __CFG_PLLDIV$1 000000  
                          ?_readButtons 0001                          __CFG_CCP2MX$ON 000000  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___ftadd 4378  
                                 STR_10 7FDD                                   STR_11 7E66  
                                 STR_12 7FF1                                   STR_20 7BC1  
                                 STR_21 7FF1                                   STR_13 7FDD  
                                 STR_22 7FDD                                   STR_30 7FAE  
                                 STR_14 7E58                                   STR_15 7FF1  
                                 STR_31 7FDD                                   STR_23 7C41  
                                 STR_24 7FF1                                   STR_16 7FDD  
                                 STR_40 7FE8                                   STR_32 7C02  
                                 STR_33 7C7B                                   STR_41 7FF4  
                                 STR_25 7FAE                                   STR_17 7B9E  
                                 STR_18 7FF1                                   STR_34 7FDD  
                                 STR_42 7FF7                                   STR_50 7E3C  
                                 STR_26 7CCD                                   STR_51 7FF1  
                                 STR_19 7FDD                                   STR_43 7F1F  
                                 STR_27 7D99                                   STR_35 7B49  
                                 STR_44 7F1F                                   STR_52 7FCB  
                                 STR_28 7C17                                   STR_60 7B76  
                                 STR_36 78C1                                   STR_61 7FF1  
                                 STR_53 7FDD                                   STR_29 7F49  
                                 STR_37 7DFF                                   STR_45 7D2D  
                                 STR_70 7FDD                                   STR_62 7FDD  
                                 STR_46 7FDD                                   STR_38 7FE5  
                                 STR_54 7BED                                   STR_55 7FDD  
                                 STR_39 7E82                                   STR_71 7E74  
                                 STR_47 7E4A                                   STR_63 7CE1  
                                 STR_64 7C7B                                   STR_72 7FF1  
                                 STR_48 7FF1                                   STR_80 7F1F  
                                 STR_56 7E0F                                   STR_81 7E9E  
                                 STR_49 7FDD                                   STR_57 7FFA  
                                 STR_65 7FD9                                   STR_73 7F8B  
                                 STR_66 7F1F                                   STR_58 7FFC  
                                 STR_74 7FE1                                   STR_90 7F52  
                                 STR_82 7EAA                                   STR_59 7FDD  
                                 STR_91 7F18                                   STR_75 7EC2  
                                 STR_67 7E9E                                   STR_83 7E2D  
                                 STR_76 7FEB                                   STR_92 7F5B  
                                 STR_84 7C2C                                   STR_68 7AA1  
                                 STR_69 7FC6                                   STR_93 7F99  
                                 STR_77 7F40                                   STR_85 7BD7  
                                 STR_86 7F2C                                   STR_94 7EE3  
                                 STR_78 7CB9                                   STR_95 7F22  
                                 STR_79 7E90                                   STR_87 7C55  
                                 STR_96 7F6D                                   STR_88 7D3F  
                                 STR_97 7EEE                                   STR_89 7E1E  
                                 STR_98 7EF9                                   STR_99 7FA0  
                       __end_of___ftdiv 498A                         __end_of___lldiv 534C  
                                 u11000 221C                                   u11010 2232  
                                 u11100 22B8                                   u11110 22CE  
                                 u12000 4278                                   u11200 235E  
                                 u11120 22DE                                   u10320 1EA4  
                                 u11210 236E                                   u11130 22EE  
                                 u10410 1F26                                   u11300 23FE  
                                 u11220 237E                                   u11140 22FE  
                                 u11060 2278                                   u10500 1FA8  
                       __end_of___ftmul 48A2                                   u11310 240E  
                                 u11230 238E                                   u11070 2288  
                                 u10430 1F4A                                   u10350 1EC8  
                                 u12111 48B4                                   u12040 42B6  
                                 u11400 249E                                   u11320 241E  
                                 u11080 2298                                   u10440 1F5A  
                                 u10360 1EDA                                   _T0CON 000FD5  
                                 u11410 24AE                                   u11330 242E  
                                 u11250 23AE                                   u11170 232E  
                                 u11090 22A8                                   u10530 1FD8  
                                 u10370 1EEA                                   u12131 48DC  
                                 u11500 253E                                   u11420 24BE  
                                 u11340 243E                                   u11260 23BE  
                                 u11180 233E                                   u10540 1FE8  
                                 u12070 42EA                                   u12310 468C  
                                 u11510 2554                                   u11430 24CE  
                                 u11350 244E                                   u11270 23CE  
                                 u11190 234E                                   u10630 2066  
                                 u10390 1F04                                   u14000 2F36  
                                 u11520 2564                                   u11440 24DE  
                                 u11360 245E                                   u11280 23DE  
                                 u12161 47BE                                   u11530 2574  
                                 u11450 24EE                                   u11370 246E  
                                 u11290 23EE                                   u12251 45CE  
                                 u12340 52FC                                   u13060 3410  
                                 u14020 2FC6                                   u11540 258A  
                                 u11460 24FE                                   u11380 247E  
                                 u10660 208A                                   u12181 47E6  
                       __end_of___fttol 46B4                                   u12270 4608  
                                 u11470 250E                                   u11390 248E  
                                 u10670 209A                                   u11640 59DC  
                                 u11800 5220                                   u12440 4E18  
                                 u14040 3052                                   u11480 251E  
                                 u11490 252E                                   u10930 21AA  
                                 u12275 4600                                   u14140 0250  
                                 u11661 402C                                   u11901 41DC  
                                 u11830 5028                                   u11671 403E  
                                 u11911 41F0                                   u10960 21D4  
                                 u14160 027C                                   u11681 4050  
                                 u11825 523A                                   u11826 523C  
                                 u11818 5224                                   u12490 4EB0  
                                 u10970 21E6                                   u13540 39F2  
                                 u11940 4210                                   u11860 5048  
                                 u10980 21F6                                   u13525 3984  
                                 u12910 38CA                                   u11854 5038  
                                 u10990 220C                                   u14430 0A4A  
                                 u14095 53EC                                   u13527 3986  
                                 u11855 5034                                   u11848 502C  
                                 u13570 3A38                                   u11970 423A  
                                 u13740 3BCC                                   u11884 5058  
                                 u14540 0C62                                   u13485 393E  
                                 u11885 5054                                   u12870 386A  
                                 u13750 3BD8                                   u11878 504C  
                                 u15407 525E                                   u13487 3940  
                                 u12960 3136                                   u14560 0C9E  
                                 u15417 5276                                   u12890 389C  
                                 u15427 528E                                   u13756 3BDA  
                                 u14660 0DDA                                   u14580 0CDA  
                                 u15437 5A46                                   u15357 5018  
                                 u12990 31CE                                   u13950 2E82  
                                 u15447 5420                                   u15367 4E30  
                                 u13880 2C42                                   u15377 5970  
                                 u15387 5788                                   u15397 579C  
                       __end_of___lwdiv 55B2                         __end_of___lwmod 5726  
                                 i2l941 50C0                                   i2l950 5116  
                                 i2l944 5106                                   i2l945 50C6  
                                 i2l938 50F8                                   i2l947 50F0  
                                 i2l939 50A0                                   _RCREG 000FAE  
                                 _TMR0H 000FD7                                   _TMR0L 000FD6  
                                 _SPBRG 000FAF                           __CFG_USBDIV$1 000000  
                       __end_of__doprnt 2B6E                 __size_of_Lcd_Set_Cursor 00B4  
                                 _TXREG 000FAD                         _writeEEPROM_ext 5726  
                         __CFG_PWRT$OFF 000000                         __end_of_btPress 5AD4  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                             __BF_i_count 0040  
                         __CFG_WRT3$OFF 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                    __size_of_UART_Init 001C                    __end_of_getMacAdress 4A64  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                         __end_of_readADC 508A  
                        __CFG_EBTRB$OFF 000000                                   _delay 5966  
                                 _blink 5848                                   __temp 0121  
                                 _clima 00F5                                   __umid 0100  
                       __end_of_dpowers 78C1                                   _line1 01A5  
                                 _line2 0190                                   _line3 017B  
                                 _line4 0166                             __BF_current 003F  
                       __end_of_isdigit 5A9A                                   _senha 01BA  
                         ___ftpack@sign 0064                _contador_fase_automatica 02D8  
                                 _timer 3D62                                   _putch 5B16  
                                 main@i 00F2                       __end_of_I2C_Start 5B6A  
                        __pbitbssCOMRAM 02D8                       __end_of_I2C_Write 5B48  
                                 pclath 000FFA                   __end_of_setRangeValor 4F54  
                                 tablat 000FF5                                   plusw1 000FE3  
                 setRangeValor@_var_ajt 0065                                   plusw2 000FDB  
                                 status 000FD8                 __end_ofi2_setRangeValor 5124  
      __end_of_setKeyStartReceiveSerial 549A                                   wtemp6 0060  
                       __end_of_sprintf 56E2                          setUmidade@_umd 0079  
                       __end_of_strncmp 47AC                          __CFG_ICPRT$OFF 000000  
                      atualizaLCD@line1 0068                        atualizaLCD@line2 006A  
                      atualizaLCD@line3 006C                        atualizaLCD@line4 006E  
                 i2writeEEPROM_ext@data 0004                          __CFG_PBADEN$ON 000000  
                      __end_of_Lcd_Init 52C8                        __end_of_Lcd_Port 590A  
                      __end_ofi2_strlen 5656                     __size_ofi2_I2C_Read 002E  
                   __size_ofi2_I2C_Wait 0012                         __initialization 4F54  
                   __size_ofi2_I2C_Stop 0008                            __end_of_main 15DC  
                      getStringJSON@key 0093                        getStringJSON@res 0099  
                      getStringJSON@ret 0095                        _ajuste_parametro 0044  
                                ??_main 00E1                           ___fttol@sign1 009F  
                          i2I2C_Write@d 0002                     _enviaDadosWifi$2517 00D4  
                    __size_of_Lcd_Clear 000E                           __activetblptr 000002  
                        _enviaDadosWifi 3086                              i2strlen@cp 0005  
                             I2C_Read@a 0061                      readEEPROM_ext@data 0066  
                                ?_delay 0060                                  ?_blink 0060  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                                  STR_100 7F04  
                                STR_101 7C91                                  STR_110 7D75  
                                STR_102 7C7D                                  STR_111 7F36  
                                STR_103 7CA5                                  STR_112 7F75  
                                STR_104 7DBB                                  STR_120 7D87  
                                STR_121 7FB5                                  STR_113 7F64  
                                STR_105 7DCC                                  STR_130 7FDD  
                                STR_122 7FC1                                  STR_114 7FA7  
                                STR_106 7DDD                                  _ADRESH 000FC4  
                                STR_131 7F7D                                  STR_107 7DEE  
                                STR_115 7DAA                                  STR_124 7F84  
                                STR_108 7D51                                  STR_116 7C69  
                                STR_125 7FC1                                  STR_109 7D63  
                                STR_117 7D07                                  STR_126 7B75  
                                STR_118 7D1A                                  _ADRESL 000FC3  
                                STR_127 7F1F                                  STR_119 7CF4  
                                STR_128 7FC1                                  STR_129 7F1F  
                                ?_timer 0001                        __end_of_acaoFlap 5244  
                                ?_putch 0001                        __end_of___ftpack 4E0A  
       ??_alterarDadosConexaoConfigWifi 00E0                               ??i2_delay 0003  
                                _INT2IF 007F81                                  i2l1101 3D9E  
                                i2l1110 3DEE                                  i2l1111 3DFC  
                                i2l1103 3DBA                                  i2l1121 3E50  
                                i2l1105 3DC8                                  i2l1114 3E1A  
                                i2l1131 3F8E                                  i2l1123 3E68  
                                i2l1107 3DD8                                  i2l1116 3E22  
                                i2l1125 3E76                                  i2l1109 3DE0  
                                i2l1134 3FCC                                  i2l1119 3E42  
                                i2l1128 3F2E                                  i2l1137 4008  
                                i2l1139 400C                                  i2l1260 4B9E  
                                i2l1095 3D78                                  i2l1097 3D86  
                                i2l1602 54C4                                  i2l1258 4B86  
                                i2l1099 3D96                                  i2l1259 4B94  
                                i2l1605 5502                                  i2l1472 5A66  
                                i2l2265 5612                                  i2l1473 5A56  
                                i2l2266 560E                                  _INTCON 000FF2  
                                i2l6507 5A56                                  i2l8807 3DBA  
                                i2l8851 3E68                                  i2l8845 3E42  
                                i2l8793 3D78                        __end_of___lwtoft 5A2E  
                             ??_Lcd_Cmd 0061                                  _TIMER0 0008  
                                _TMR0IF 007F92                 __size_of_Lcd_Write_Char 003E  
                                _SSPADD 000FC8                                  _SSPBUF 000FC9  
                          atualizaLCD@i 0070                          __CFG_XINST$OFF 000000  
                     __end_of_UART_Init 5AF0                            readADC@canal 0068  
                                ___ftge 5124                          _readEEPROM_ext 55B2  
                                ___wmul 5990                               ??___ftadd 0081  
                        __CFG_STVREN$ON 000000                        __end_of_controle 3D62  
                             ??___ftdiv 008D                                  _h_flap 0051  
                             ??___lldiv 0068                               ??___ftmul 0072  
                             ??___fttol 009A                                  _blinkk 02DA  
                             ??___lwdiv 0064                               ??___lwmod 006B  
               __end_of_writeEEPROM_ext 5768                               ??__doprnt 0072  
                                _memset 58AA                                  delay@x 0060  
                                _buzzer 00FC                                  clear_0 4FB6  
                                clear_1 4FC2                                  clear_2 4FCE  
                                clear_3 4FDC                                  _setLed 5A9A  
                                blink@i 0064                               ??_btPress 0060  
          _t_controle_religar_ventoinha 0162                            __doprnt@flag 0077  
                                _printf 57A6                            __doprnt@prec 0076  
                      _findBufferSerial 59B8                  __end_of_enviaDadosWifi 34E6  
                                _strchr 534C                                  _strlen 5508  
                                _strstr 4BEA                   ___ftmul@f3_as_product 0076  
                             ??_readADC 0062                            __pdataCOMRAM 005C  
                             ??_isdigit 0060                               ?_I2C_Read 0061  
                             ?_I2C_Wait 0001                               ?_I2C_Stop 0001  
                          acaoFlap@acao 0067                            __mediumconst 787E  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                                  putch@c 0060  
                             ??_sprintf 008B                    __size_of_atualizaLCD 00C6  
                       setUmidade@_clim 0078                               ??_strncmp 006C  
                       Lcd_Set_Cursor@a 0064                         Lcd_Set_Cursor@b 0063  
                       Lcd_Set_Cursor@y 0066                         Lcd_Set_Cursor@z 0065  
                            __acao_flap 003C                              __accesstop 0060  
               __end_of__initialization 4FE2                              ___ftadd@f1 007B  
                            ___ftadd@f2 007E                        ?i2_setRangeValor 0006  
                            ___ftge@ff1 0060                              ___ftge@ff2 0063  
          __size_of_criaCaracteresCGRAM 00AC                       __end_of_Lcd_Clear 5B32  
                      _h_modo_seguranca 00F7                           ___rparam_used 000001  
                            ___ftdiv@f1 0087                              ___ftdiv@f2 008A  
                            ___ftdiv@f3 0091                    getStringJSON@isValid 00DA  
                __end_of_readEEPROM_ext 5604                 _h_subir_temp_automatica 004F  
                       _getSensors$1513 00AB                         _getSensors$1515 00A5  
                       _getSensors$1517 00A8                              ___ftmul@f1 006C  
                            ___ftmul@f2 006F                         _getSensors$2518 00B0  
                  __size_ofi2_I2C_Start 0008                              ___fttol@f1 0096  
                  __size_ofi2_I2C_Write 000A                          __pcstackCOMRAM 0001  
                     getStringJSON@F290 022D                       getStringJSON@F292 0219  
                          __pidataBANK0 5B7D                            __pidataBANK1 5B32  
                     getStringJSON@F288 0200                           __end_of_delay 5990  
                         __end_of_blink 587A                           __end_of_timer 4018  
                         __end_of_putch 5B24                      __size_of_faseAtual 013E  
                __size_of_tabelaUmidade 0FD2                       getStringJSON@find 00DD  
                     getStringJSON@buff 0091                       getStringJSON@attr 00C6  
                            ___lwtoft@c 0069                   __size_of_getMacAdress 00DA  
                       ?_enviaDadosWifi 0001       __size_of_setKeyStartReceiveSerial 006E  
             ?_setKeyStartReceiveSerial 0091                    __size_of_readButtons 0028  
                        _Lcd_Set_Cursor 4CA6                            ??i2_I2C_Read 0004  
                            ??_I2C_Read 0063                            ??i2_I2C_Wait 0001  
                            ??_I2C_Wait 0060                            ??i2_I2C_Stop 0002  
                            ??_I2C_Stop 0061                   receiveByteSerial@byte 0009  
                             ?_Lcd_Init 0001                                 ??_delay 0062  
                             ?_Lcd_Port 0001                              _h_abafador 0052  
                             ?i2_strlen 0001                              __doprnt@ap 0070  
                               ??_blink 0064                              __doprnt@cp 007C  
                            __doprnt@pb 006C                   writeEEPROM_ext@adress 0064  
         setKeyStartReceiveSerial@start 0091                                 ??_timer 0011  
                               ??_putch 0060                 i2setRangeValor@_var_ajt 0006  
                            __pbssBANK0 00F3                              __pbssBANK1 0100  
                            __pbssBANK2 0200                                 ?_TIMER0 0001  
 __end_of_alterarDadosConexaoConfigWifi 3930  __size_of_alterarDadosConexaoConfigWifi 044A  
         _alterarDadosConexaoConfigWifi 34E6                     writeEEPROM_ext@data 0063  
                       ?_readEEPROM_ext 0001                                 TIMER0@c 0030  
                    __end_ofi2_I2C_Read 5966                            I2C_Read@temp 0063  
                    __end_ofi2_I2C_Wait 5B16                            _getMacAdress 498A  
                               ?___ftge 0060                      __end_ofi2_I2C_Stop 5B72  
                            _climaAtual 5656                                 ?___wmul 0060  
                               ?_memset 0060                        ?_writeEEPROM_ext 0063  
                               ?_setLed 0060               __size_of_Lcd_Write_String 002E  
                             ?_acaoFlap 0062                               ?___ftpack 0060  
                __end_of_Lcd_Set_Cursor 4D5A                              I2C_Write@d 0061  
                               ?_printf 0081                              _getSensors 2B6E  
                               ?_strchr 0060                                 ?_strlen 0060  
                             ?___lwtoft 0069                                 ?_strstr 006F  
                         ??_I2C_Restart 0061                         __CFG_WDTPS$1024 000000  
                            ??_Lcd_Init 0063                              ??_Lcd_Port 0060  
                            ??i2_strlen 0003                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               i2_delay 5A54                               ?_controle 0001  
                         _tabelaUmidade 15DC                         __CFG_VREGEN$OFF 000000  
                     __end_of_faseAtual 44B6                          _Lcd_Write_Char 5768  
                acaoFlap@tempo_aguardar 0064                                 _Lcd_Cmd 5A2E  
                       __size_of_TIMER0 4BE2                               _I2C_Start 5B62  
                        getIntJSON@F274 0156                          getIntJSON@F276 0142  
                        getIntJSON@F278 0241                               _I2C_Write 5B3E  
                               __Hparam 0000                                 __Lparam 0000  
                 __end_of_getStringJSON 41CA                         __size_of___ftge 0092  
                               ___ftadd 41CA                                 ___ftdiv 48A2  
                               ___lldiv 52C8                         __size_of___wmul 0028  
                               ___ftmul 47AC                                 ___fttol 45BC  
                               ___lwdiv 555E                                 ___lwmod 56E2  
                  i2setRangeValor@_acao 000E                                 __doprnt 25AE  
                               __pcinit 4F54                              ??_acaoFlap 0066  
                            ??___ftpack 0065                         __size_of_memset 0030  
                               _btPress 5AB8                                 __ramtop 0800  
                       ?_Lcd_Set_Cursor 0063                         __size_of_setLed 001E  
                               _bt_flag 0042                                 __ptext0 0012  
                               __ptext1 587A                                 __ptext2 44B6  
                               __ptext3 15DC                                 __ptext4 4EB6  
                               __ptext5 55B2                                 __ptext6 5B52  
                               __ptext7 5816                                 __ptext8 2B6E  
                               __ptext9 4FF0                 _wifi_habilita_alteracao 004E  
                        _t_wifi_restart 003E                         __size_of_printf 0038  
                            ??___lwtoft 006C                         __size_of_strchr 0070  
                               _readADC 4FF0                         __size_of_strlen 0056  
                       __size_of_strstr 00BC                                 _dpowers 78B7  
                               _isdigit 5A78               _t_controle_modo_seguranca 0160  
              __size_of_I2C_Master_Init 0070                                 _tempajt 00F4  
                         _t_flap_ligado 0055                                 _umidajt 00F3  
                               _sprintf 569E                           __doprnt@width 007E  
                   __end_of_I2C_Restart 5B5A                  __end_of_Lcd_Write_Char 57A6  
                               _strncmp 46B4                          __pintcode_body 4B2A  
                  end_of_initialization 4FE2                          ?_tabelaUmidade 0060  
                            ??_controle 0068                                 memset@c 0062  
                               memset@n 0064                                 memset@p 0066  
                         __Lmediumconst 787E                                 int_func 4B2A  
              __end_of_findBufferSerial 59E0                              _timer$1410 001A  
                            _timer$1411 001C                              _timer$1409 0018  
                            _setUmidade 44B6                              blink@start 0062  
                             i2u1240_45 595A                               i2u1241_40 5632  
                             i2u1313_40 3DF6                               i2u1241_47 5628  
                             i2u1314_45 3DF8                              ?_I2C_Start 0001  
                             i2u1239_40 5958                              ?_I2C_Write 0061  
                             i2u1545_47 5A5C                            _bufferSerial 0255  
                       ___lldiv@divisor 0064                         ___lldiv@counter 006C  
                       getMacAdress@mac 0066                         getMacAdress@men 006D  
                       getMacAdress@var 0068                               _RCSTAbits 000FAB  
                               printf@f 0081                criaCaracteresCGRAM@F3898 787F  
                      I2C_Master_Init@c 006D                                 postdec1 000FE5  
                               postdec2 000FDD                             ?_climaAtual 0060  
        ?_alterarDadosConexaoConfigWifi 0001                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                             Lcd_Port@a 0060                 setRangeValor@end_eeprom 0069  
                            _wifi_SENHA 004B                                 strlen@s 0060  
                             _UART_Init 5AD4                        setUmidade@_clima 006C  
                             _PORTAbits 000F80                  __size_of_setRangeValor 009E  
                             _PORTBbits 000F81                             ?_getSensors 0001  
                             _PORTCbits 000F82                               _PORTDbits 000F83  
                             _PORTEbits 000F84                     _criaCaracteresCGRAM 4E0A  
                            _updateLeds 587A                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISDbits 000F95                               _TRISEbits 000F96  
               i2writeEEPROM_ext@adress 0005                       __size_of_I2C_Read 0032  
                     tabelaUmidade@_umd 0067                       tabelaUmidade@_tmp 0060  
                     __size_of_I2C_Wait 0014                       __size_of_I2C_Stop 0008  
                            _trava_fase 00FB                      __BF_enable_receive 0041  
                      _t_flap_intervalo 0054                         ?_Lcd_Write_Char 0001  
                     Lcd_Write_String@a 0064                       Lcd_Write_String@i 0066  
                  _t_controle_fim_fases 003A                             ___ftdiv@exp 0094  
                  ?_criaCaracteresCGRAM 0001                               _TXSTAbits 000FAC  
                        __end_of_TIMER0 4BEA                               __BF_start 01D8  
                  criaCaracteresCGRAM@i 00A3                    criaCaracteresCGRAM@j 00A2  
                  criaCaracteresCGRAM@k 00A1               tabelaUmidade@_tipo_sensor 0064  
                 getStringJSON@expected 00B2                             ___ftmul@exp 0075  
                             _Lcd_Clear 5B24                        ??_enviaDadosWifi 00C3  
                         _t_leitura_adc 0036                          __end_of___ftge 51B6  
                        i2I2C_Read@temp 0004                          __end_of___wmul 59B8  
                          _md_seguranca 02D9                        _Lcd_Write_String 590A  
                            ?_UART_Init 0001                           __pidataCOMRAM 5B7A  
                        __end_of_memset 58DA                          __end_of_setLed 5AB8  
                        __end_of_printf 57DE                             _I2C_Restart 5B52  
                        __end_of_strchr 53BC                          __end_of_strlen 555E  
                       _setUmidade$1295 006F                         _setUmidade$1296 0071  
                       _setUmidade$1297 0073                         _setUmidade$1298 0075  
                        __end_of_strstr 4CA6                           ??_atualizaLCD 0070  
                   start_initialization 4F54              _t_controle_temp_automatica 0037  
                           i2I2C_Read@a 0002                         ??_tabelaUmidade 0065  
                   __size_of_climaAtual 0048                       __size_of_Lcd_Init 0084  
                     __size_of_Lcd_Port 0030                       __size_ofi2_strlen 0052  
                             i2strlen@s 0001                        ??_readEEPROM_ext 0065  
                     ??_I2C_Master_Init 0071                                ??_TIMER0 001E  
                         _setRangeValor 4EB6                   ??_criaCaracteresCGRAM 0064  
                           ?_setUmidade 0068                           ??i2_I2C_Start 0002  
                           ??_I2C_Start 0061                           ??i2_I2C_Write 0004  
                   __size_of_getSensors 0518                             ??_I2C_Write 0063  
             _t_controle_religar_buzzer 0031                              ?_Lcd_Clear 0001  
                              ??___ftge 0066                                ??___wmul 0064  
              __size_ofi2_setRangeValor 009A                             __doprnt@len 007A  
                           __doprnt@val 0078                             __pdataBANK0 00FD  
                           __pdataBANK1 01E2                        __CFG_LPT1OSC$OFF 000000  
                         ??_readButtons 0006                         Lcd_Write_Char@a 0063  
                              ??_memset 0066                         Lcd_Write_Char@y 0062  
                              ??_setLed 0061                           getMacAdress@i 006E  
                         getMacAdress@j 006C                                ??_printf 00BD  
                     faseAtual@_tempajt 0062                                ??_strchr 0064  
                              ??_strlen 0062                                ??_strstr 0073  
                     __size_of_acaoFlap 008E                       __size_of___ftpack 00B0  
                           __pbssCOMRAM 0031                             ?_updateLeds 0001  
                     __size_of___lwtoft 0026                           __pcstackBANK0 0060  
                     _t_temp_automatica 00F9                            _isdigit$2054 0061  
                      _t_buzzer_religar 00FF                                ?i2_delay 0001  
                        ?_setRangeValor 0065                     __end_of_atualizaLCD 4B2A  
                _senha_desbloqueio_func 004D                                ?_Lcd_Cmd 0001  
                             __doprnt@c 0080                               __doprnt@f 006E  
                            setLed@acao 0060                       __size_of_controle 0432  
              _criaCaracteresCGRAM$1227 009F                               _faseAtual 4378  
                             _main$1641 00EC                               _main$1625 00E4  
                             _main$1634 00EA                               _main$1626 00E6  
                             _main$1651 00F0                               _main$1629 00E8  
                             _main$1646 00EE                               _main$2519 00E2  
                      ___lwdiv@dividend 0060                        ??_Lcd_Set_Cursor 0064  
                             __pintcode 0008                           __pmediumconst 787E  
                              ?___ftadd 007B                                ?___ftdiv 0087  
                   __end_ofi2_I2C_Start 5B7A                                ?___lldiv 0060  
                              ?___ftmul 006C                                ?___fttol 0096  
                   __end_ofi2_I2C_Write 5B52                                ?___lwdiv 0060  
                              ?___lwmod 0067                _setKeyStartReceiveSerial 542C  
                              ?__doprnt 006C                     _tipo_sensor_umidade 00FA  
                           ??_UART_Init 0060                    readEEPROM_ext@adress 0065  
                              ?_btPress 0001                                ?_readADC 0060  
                             _media_adc 0035                     __size_of_setUmidade 0106  
                              ?_isdigit 0001                                _I2C_Read 5816  
                              _I2C_Wait 5AF0                                _I2C_Stop 5B5A  
                   __end_of_readButtons 5A08                   acaoFlap@tempo_ativado 0062  
              __size_of_writeEEPROM_ext 0042                        ___lwdiv@quotient 0064  
                        __size_of_delay 002A                          __size_of_blink 0032  
                   i2setRangeValor@_aux 000F                     i2setRangeValor@_max 0009  
                   i2setRangeValor@_min 0008                                ?_sprintf 0081  
                              ?_strncmp 0066                          __size_of_timer 02B6  
                        __size_of_putch 000E                          ___wmul@product 0064  
                             btPress@bt 0060                                _LATAbits 000F89  
                              _LATBbits 000F8A                                _LATCbits 000F8B  
                              _LATDbits 000F8C                                _LATEbits 000F8D  
                     ?_findBufferSerial 0074                               _opcaomenu 0045  
                              _PIE1bits 000F9D                               blink@line 0060  
                       enviaDadosWifi@i 00D6                             _h_venotinha 0053  
                            ?_faseAtual 0060                                Lcd_Cmd@a 0062  
                              _PIR1bits 000F9E                      ??_findBufferSerial 0076  
                   __size_of_updateLeds 0030                             ??_Lcd_Clear 0063  
                          ??_climaAtual 0062                            ??_getSensors 00A5  
                            _ADCON0bits 000FC2                       ___wmul@multiplier 0060  
                     ??i2_setRangeValor 000B                        ??_Lcd_Write_Char 0061  
                              i2delay@x 0001                             _atualizaLCD 4A64  
                              _Lcd_Init 5244                       i2_writeEEPROM_ext 57DE  
                              _Lcd_Port 58DA                                i2_strlen 5604  
                       ??_setRangeValor 006A          alterarDadosConexaoConfigWifi@i 00E0  
                           _INTCON2bits 000FF1                             _INTCON3bits 000FF0  
                __size_of_getStringJSON 01B2                               copy_data0 4F68  
                    ?i2_writeEEPROM_ext 0004                      __end_of_climaAtual 569E  
                          setUmidade@tp 006E                __end_of_Lcd_Write_String 5938  
                       _f_falta_energia 005E                        __size_ofi2_delay 0024  
                      __size_of_Lcd_Cmd 0026                             i2_I2C_Start 5B72  
                           i2_I2C_Write 5B48                      __end_of_getSensors 3086  
                   ??i2_writeEEPROM_ext 0005                                __Hrparam 0000  
                              __Lrparam 0000                     findBufferSerial@key 0074  
                      __size_of___ftadd 01AE                        __size_of___ftdiv 00E8  
                      __size_of___lldiv 0084                        __size_of___ftmul 00F6  
                      __size_of___fttol 00F8                        __size_of___lwdiv 0054  
                      __size_of___lwmod 0044                             _readButtons 59E0  
                              _acaoFlap 51B6                                ___ftpack 4D5A  
                      __size_of__doprnt 05C0                          readADC@digital 0066  
                   Lcd_Write_Char@tempp 0061                        __size_of_btPress 001C  
                              ___lwtoft 5A08                            ?_I2C_Restart 0001  
                              _base_sec 004A                          getSensors@auxx 00AD  
                       _I2C_Master_Init 53BC                        __size_of_readADC 009A  
             __end_ofi2_writeEEPROM_ext 5816                               setLed@led 0061  
                      __size_of_isdigit 0022                         ___lwdiv@divisor 0062  
                       ___lwdiv@counter 0066                                _h_buzzer 0050  
                              __ptext10 5A08                                __ptext11 45BC  
                              __ptext20 4E0A                                __ptext12 47AC  
                              __ptext21 3930                                __ptext13 5124  
                              __ptext30 5B3E                                __ptext22 51B6  
                              __ptext14 48A2                                __ptext31 5B5A  
                              __ptext23 5A9A                                __ptext15 41CA  
                              __ptext40 5B16                                __ptext32 5B62  
                              __ptext24 5656                                __ptext16 4D5A  
                              __ptext41 5A78                                __ptext33 5AF0  
                              __ptext25 5AB8                                __ptext17 4378  
                              __ptext50 4A64                                __ptext42 5990  
                              __ptext34 542C                                __ptext26 5848  
                              __ptext18 3086                                __ptext51 590A  
                              __ptext43 56E2                                __ptext35 58AA  
                              __ptext27 34E6                                __ptext19 498A  
                              __ptext60 52C8                                __ptext52 5768  
                              __ptext44 555E                                __ptext36 57A6  
                              __ptext28 5726                                __ptext53 4CA6  
                              __ptext45 59B8                                __ptext37 4018  
                              __ptext29 5966                                __ptext70 5B6A  
                              __ptext62 3D62                                __ptext54 5AD4  
                              __ptext46 4BEA                                __ptext38 569E  
                              __ptext71 5B72                                __ptext63 508A  
                              __ptext55 5244                                __ptext47 46B4  
                              __ptext39 25AE                                __ptext72 5938  
                              __ptext64 57DE                                __ptext56 5B24  
                              __ptext48 5508                                __ptext73 5B04  
                              __ptext65 5A54                                __ptext57 5A2E  
                              __ptext49 534C                                __ptext74 0000  
                              __ptext66 549A                                __ptext58 58DA  
                              __ptext67 5604                                __ptext59 53BC  
                              __ptext68 59E0                                __ptext69 5B48  
                              _lcd_rfsh 0165               i2setRangeValor@end_eeprom 000A  
                      __size_of_sprintf 0044                  _f_buzzer_falta_energia 003B  
                      __size_of_strncmp 00F8                                _controle 3930  
                     ??_writeEEPROM_ext 0064                                _fornalha 005A  
                         __size_of_main 15CA                            ??_setUmidade 006E  
                           _t_fim_fase1 0058                             _t_fim_fase2 0057  
                           _t_fim_fase3 0056                              strncmp@len 006A  
                           ??_faseAtual 0064                                blink@end 0063  
                        _wifi_conectado 0049                           ?_getMacAdress 0066  
                              _wifi_MAC 01E2                             faseAtual@tp 0065  
                              int$flags 005F                           _getStringJSON 4018  
                     _receiveByteSerial 549A                   __CFG_CPUDIV$OSC1_PLL2 000000  
                    ?_receiveByteSerial 0001          _t_religar_ventoinha_automatica 00F8  
                            _INTCONbits 000FF2                              i2_I2C_Read 5938  
                            i2_I2C_Wait 5B04                              i2_I2C_Stop 5B6A  
                          ??_updateLeds 0063                      __end_of_setUmidade 45BC  
                       faseAtual@_fasee 0064                                isdigit@c 0062  
                              memset@p1 0060                     ??_receiveByteSerial 0007  
           __end_of_criaCaracteresCGRAM 4EB6                       enviaDadosWifi@AUX 00C5  
                 __end_of_tabelaUmidade 25AE                                intlevel2 0000  
                             sprintf@ap 008B                               sprintf@pb 008D  
      __end_ofcriaCaracteresCGRAM@F3898 78B7                           getSensors@aux 00B4  
                             sprintf@wh 0081                         faseAtual@tmpajt 0066  
                             strchr@chr 0062                        ___lwmod@dividend 0067  
                             strchr@ptr 0060                        ___lldiv@dividend 0060  
                           climaAtual@c 0062              ??_setKeyStartReceiveSerial 0093  
                             strncmp@s1 0066                               strncmp@s2 0068  
                        ??_getMacAdress 006A            criaCaracteresCGRAM@character 0067  
                        ?_getStringJSON 0091               __end_of_receiveByteSerial 5508  
                    __end_of_updateLeds 58AA                                printf@ap 00BD  
                              printf@pb 00BF                       _t_controle_buzzer 0039  
               __end_of_I2C_Master_Init 542C                      Lcd_Set_Cursor@temp 0067  
                    setUmidade@_tempajt 006A                          faseAtual@_fase 0060  
                              sprintf@f 0083                        ___lldiv@quotient 0068  
                       ___lwmod@divisor 0069              __size_ofi2_writeEEPROM_ext 0038  
                              strlen@cp 0064                         ___lwmod@counter 006B  
               __size_of_enviaDadosWifi 0460                        _t_controle_blink 0038  
                              strstr@s1 006F                                strstr@s2 0071  
                     setUmidade@_umdajt 0068                       setUmidade@_tmpajt 0077  
                           getSensors@i 00B3                         _t_controle_flap 0033  
